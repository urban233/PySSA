; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
WizardImageFile=compiler:WizClassicImage.bmp
AppName=PyDD
AppVersion=0.0.1
AppCopyright=Martin Urban, Hannah Kullik, IBCI
AppId={{192F52C3-D86D-4735-9929-C7DF599CB534}
DefaultDirName={commonappdata}\IBCI\PyDD
AppPublisher=IBCI
VersionInfoProductName=PyDD
MinVersion=10.0.19045
OutputDir=out
OutputBaseFilename=my_test_setup
VersionInfoCopyright=GNU GPL-3.0
DisableDirPage=True
DisableProgramGroupPage=True
ArchitecturesInstallIn64BitMode=x64
WizardStyle=modern
DisableReadyPage=True
DisableFinishedPage=True
UninstallDisplayName=PyDD
UninstallDisplayIcon={app}\assets\logo.ico
LicenseFile=LICENSE.txt
; This is necessary because the setup will exceed 2 GB (due to almalinux rootfs)
DiskSpanning=yes
DiskSliceSize=2100000000

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Dirs]
Name: "{commonappdata}\IBCI"
Name: "{commonappdata}\IBCI\temp"
Name: "{commonappdata}\IBCI\helpers"
Name: "{commonappdata}\IBCI\PyDD"
Name: "{commonappdata}\IBCI\PyDD\assets"

[Files]
Source: "src\PostInstallationRunner.exe"; DestDir: "{commonappdata}\IBCI\helpers"; Flags: ignoreversion
Source: "src\offline_resources\windows_package.zip"; DestDir: "{commonappdata}\IBCI\temp"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "src\offline_resources\alma-colabfold-9-rootfs.tar"; DestDir: "{commonappdata}\IBCI\temp"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "src\offline_resources\ChimeraX-1.8.exe"; DestDir: "{commonappdata}\IBCI\temp"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "src\install.bat"; DestDir: "{commonappdata}\IBCI\temp"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "src\uninstall.bat"; DestDir: "{commonappdata}\IBCI\helpers"; Flags: ignoreversion recursesubdirs createallsubdirs;
Source: "src\assets\logo.ico"; DestDir: "{commonappdata}\IBCI\PyDD\assets"; Flags: ignoreversion recursesubdirs createallsubdirs;
     
; This should be managed by the PostInstallationRunner!      
;[Icons]
;Name: "{commondesktop}\PyDD"; Filename: "{commonappdata}\IBCI\PyDD\win_start\vb_script\window_arrangement.exe"; IconFilename: "{commonappdata}\IBCI\PyDD\assets\icon.ico"
;Name: "{commonstartmenu}\PyDD"; Filename: "{commonappdata}\IBCI\PyDD\win_start\vb_script\window_arrangement.exe"; IconFilename: "{commonappdata}\IBCI\PyDD\assets\icon.ico"

[UninstallDelete]
Type: filesandordirs; Name: "{commonappdata}\IBCI"

[Code]
var 
  tmpResultCode: Integer; 
  PostInstallFailed: Boolean;

procedure InitializeWizard;
begin
  // Initialize the global variable
  PostInstallFailed := False;
end;

function DoPostInstallTasks: Boolean;
// Return True if successful, False if there was an error
begin
  try
    MsgBox('A post installation task needs to be run. This will take around 5 minutes to complete. Press OK to start.', mbInformation, MB_OK);
    if Exec('C:\ProgramData\IBCI\helpers\PostInstallationRunner.exe', '', '', SW_HIDE, ewWaitUntilTerminated, tmpResultCode) then // Runs PostInstallationRunner!!
    begin
      // Check the result code of the executed program
      if tmpResultCode <> 0 then
      begin
        // Return False to indicate failure
        Result := False;
      end
      else
      begin
        // Task succeeded
        Result := True;
      end;
    end
    else
    begin
      // Failed to execute the external program
      Result := False;
    end;
  except
    begin
      // Return False to indicate failure
      Result := False;
    end;
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    // Call a custom function to perform post-installation tasks
    if not DoPostInstallTasks then
    begin
      MsgBox('The installation failed due to a post-installation error.', mbError, MB_OK);
    end
    else
    begin
      MsgBox('The installation was successful. PyDD will now start automatically.', mbInformation, MB_OK);
      Exec('C:\ProgramData\IBCI\PyDD\win_start\vb_script\window_arrangement.exe', '', '', SW_SHOW, ewNoWait, tmpResultCode)
    end;
  end;
end;
