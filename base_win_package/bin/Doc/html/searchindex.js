Search.setIndex({"docnames": ["about", "bugs", "c-api/abstract", "c-api/allocation", "c-api/apiabiversion", "c-api/arg", "c-api/bool", "c-api/buffer", "c-api/bytearray", "c-api/bytes", "c-api/call", "c-api/capsule", "c-api/cell", "c-api/code", "c-api/codec", "c-api/complex", "c-api/concrete", "c-api/contextvars", "c-api/conversion", "c-api/coro", "c-api/datetime", "c-api/descriptor", "c-api/dict", "c-api/exceptions", "c-api/file", "c-api/float", "c-api/frame", "c-api/function", "c-api/gcsupport", "c-api/gen", "c-api/hash", "c-api/import", "c-api/index", "c-api/init", "c-api/init_config", "c-api/intro", "c-api/iter", "c-api/iterator", "c-api/list", "c-api/long", "c-api/mapping", "c-api/marshal", "c-api/memory", "c-api/memoryview", "c-api/method", "c-api/module", "c-api/none", "c-api/number", "c-api/objbuffer", "c-api/object", "c-api/objimpl", "c-api/refcounting", "c-api/reflection", "c-api/sequence", "c-api/set", "c-api/slice", "c-api/stable", "c-api/structures", "c-api/sys", "c-api/tuple", "c-api/type", "c-api/typehints", "c-api/typeobj", "c-api/unicode", "c-api/utilities", "c-api/veryhigh", "c-api/weakref", "contents", "copyright", "distributing/index", "distutils/_setuptools_disclaimer", "distutils/apiref", "distutils/builtdist", "distutils/commandref", "distutils/configfile", "distutils/examples", "distutils/extending", "distutils/index", "distutils/introduction", "distutils/packageindex", "distutils/setupscript", "distutils/sourcedist", "distutils/uploading", "extending/building", "extending/embedding", "extending/extending", "extending/index", "extending/newtypes", "extending/newtypes_tutorial", "extending/windows", "faq/design", "faq/extending", "faq/general", "faq/gui", "faq/index", "faq/installed", "faq/library", "faq/programming", "faq/windows", "glossary", "howto/annotations", "howto/argparse", "howto/clinic", "howto/cporting", "howto/curses", "howto/descriptor", "howto/enum", "howto/functional", "howto/gdb_helpers", "howto/index", "howto/instrumentation", "howto/ipaddress", "howto/isolating-extensions", "howto/logging", "howto/logging-cookbook", "howto/pyporting", "howto/regex", "howto/sockets", "howto/sorting", "howto/unicode", "howto/urllib2", "install/index", "installing/index", "library/2to3", "library/__future__", "library/__main__", "library/_thread", "library/abc", "library/aifc", "library/allos", "library/archiving", "library/argparse", "library/array", "library/ast", "library/asynchat", "library/asyncio", "library/asyncio-api-index", "library/asyncio-dev", "library/asyncio-eventloop", "library/asyncio-exceptions", "library/asyncio-extending", "library/asyncio-future", "library/asyncio-llapi-index", "library/asyncio-platforms", "library/asyncio-policy", "library/asyncio-protocol", "library/asyncio-queue", "library/asyncio-runner", "library/asyncio-stream", "library/asyncio-subprocess", "library/asyncio-sync", "library/asyncio-task", "library/asyncore", "library/atexit", "library/audioop", "library/audit_events", "library/base64", "library/bdb", "library/binary", "library/binascii", "library/bisect", "library/builtins", "library/bz2", "library/calendar", "library/cgi", "library/cgitb", "library/chunk", "library/cmath", "library/cmd", "library/cmdline", "library/code", "library/codecs", "library/codeop", "library/collections", "library/collections.abc", "library/colorsys", "library/compileall", "library/concurrency", "library/concurrent", "library/concurrent.futures", "library/configparser", "library/constants", "library/contextlib", "library/contextvars", "library/copy", "library/copyreg", "library/crypt", "library/crypto", "library/csv", "library/ctypes", "library/curses", "library/curses.ascii", "library/curses.panel", "library/custominterp", "library/dataclasses", "library/datatypes", "library/datetime", "library/dbm", "library/debug", "library/decimal", "library/development", "library/devmode", "library/dialog", "library/difflib", "library/dis", "library/distribution", "library/distutils", "library/doctest", "library/email", "library/email.charset", "library/email.compat32-message", "library/email.contentmanager", "library/email.encoders", "library/email.errors", "library/email.examples", "library/email.generator", "library/email.header", "library/email.headerregistry", "library/email.iterators", "library/email.message", "library/email.mime", "library/email.parser", "library/email.policy", "library/email.utils", "library/ensurepip", "library/enum", "library/errno", "library/exceptions", "library/faulthandler", "library/fcntl", "library/filecmp", "library/fileformats", "library/fileinput", "library/filesys", "library/fnmatch", "library/fractions", "library/frameworks", "library/ftplib", "library/functional", "library/functions", "library/functools", "library/gc", "library/getopt", "library/getpass", "library/gettext", "library/glob", "library/graphlib", "library/grp", "library/gzip", "library/hashlib", "library/heapq", "library/hmac", "library/html", "library/html.entities", "library/html.parser", "library/http", "library/http.client", "library/http.cookiejar", "library/http.cookies", "library/http.server", "library/i18n", "library/idle", "library/imaplib", "library/imghdr", "library/imp", "library/importlib", "library/importlib.metadata", "library/importlib.resources", "library/importlib.resources.abc", "library/index", "library/inspect", "library/internet", "library/intro", "library/io", "library/ipaddress", "library/ipc", "library/itertools", "library/json", "library/keyword", "library/language", "library/linecache", "library/locale", "library/logging", "library/logging.config", "library/logging.handlers", "library/lzma", "library/mailbox", "library/mailcap", "library/markup", "library/marshal", "library/math", "library/mimetypes", "library/mm", "library/mmap", "library/modulefinder", "library/modules", "library/msilib", "library/msvcrt", "library/multiprocessing", "library/multiprocessing.shared_memory", "library/netdata", "library/netrc", "library/nis", "library/nntplib", "library/numbers", "library/numeric", "library/operator", "library/optparse", "library/os", "library/os.path", "library/ossaudiodev", "library/pathlib", "library/pdb", "library/persistence", "library/pickle", "library/pickletools", "library/pipes", "library/pkgutil", "library/platform", "library/plistlib", "library/poplib", "library/posix", "library/pprint", "library/profile", "library/pty", "library/pwd", "library/py_compile", "library/pyclbr", "library/pydoc", "library/pyexpat", "library/python", "library/queue", "library/quopri", "library/random", "library/re", "library/readline", "library/reprlib", "library/resource", "library/rlcompleter", "library/runpy", "library/sched", "library/secrets", "library/security_warnings", "library/select", "library/selectors", "library/shelve", "library/shlex", "library/shutil", "library/signal", "library/site", "library/smtpd", "library/smtplib", "library/sndhdr", "library/socket", "library/socketserver", "library/spwd", "library/sqlite3", "library/ssl", "library/stat", "library/statistics", "library/stdtypes", "library/string", "library/stringprep", "library/struct", "library/subprocess", "library/sunau", "library/superseded", "library/symtable", "library/sys", "library/sys_path_init", "library/sysconfig", "library/syslog", "library/tabnanny", "library/tarfile", "library/telnetlib", "library/tempfile", "library/termios", "library/test", "library/text", "library/textwrap", "library/threading", "library/time", "library/timeit", "library/tk", "library/tkinter", "library/tkinter.colorchooser", "library/tkinter.dnd", "library/tkinter.font", "library/tkinter.messagebox", "library/tkinter.scrolledtext", "library/tkinter.tix", "library/tkinter.ttk", "library/token", "library/tokenize", "library/tomllib", "library/trace", "library/traceback", "library/tracemalloc", "library/tty", "library/turtle", "library/types", "library/typing", "library/unicodedata", "library/unittest", "library/unittest.mock", "library/unittest.mock-examples", "library/unix", "library/urllib", "library/urllib.error", "library/urllib.parse", "library/urllib.request", "library/urllib.robotparser", "library/uu", "library/uuid", "library/venv", "library/warnings", "library/wave", "library/weakref", "library/webbrowser", "library/windows", "library/winreg", "library/winsound", "library/wsgiref", "library/xdrlib", "library/xml", "library/xml.dom", "library/xml.dom.minidom", "library/xml.dom.pulldom", "library/xml.etree.elementtree", "library/xml.sax", "library/xml.sax.handler", "library/xml.sax.reader", "library/xml.sax.utils", "library/xmlrpc", "library/xmlrpc.client", "library/xmlrpc.server", "library/zipapp", "library/zipfile", "library/zipimport", "library/zlib", "library/zoneinfo", "license", "reference/compound_stmts", "reference/datamodel", "reference/executionmodel", "reference/expressions", "reference/grammar", "reference/import", "reference/index", "reference/introduction", "reference/lexical_analysis", "reference/simple_stmts", "reference/toplevel_components", "tutorial/appendix", "tutorial/appetite", "tutorial/classes", "tutorial/controlflow", "tutorial/datastructures", "tutorial/errors", "tutorial/floatingpoint", "tutorial/index", "tutorial/inputoutput", "tutorial/interactive", "tutorial/interpreter", "tutorial/introduction", "tutorial/modules", "tutorial/stdlib", "tutorial/stdlib2", "tutorial/venv", "tutorial/whatnow", "using/cmdline", "using/configure", "using/editors", "using/index", "using/mac", "using/unix", "using/windows", "whatsnew/2.0", "whatsnew/2.1", "whatsnew/2.2", "whatsnew/2.3", "whatsnew/2.4", "whatsnew/2.5", "whatsnew/2.6", "whatsnew/2.7", "whatsnew/3.0", "whatsnew/3.1", "whatsnew/3.10", "whatsnew/3.11", "whatsnew/3.2", "whatsnew/3.3", "whatsnew/3.4", "whatsnew/3.5", "whatsnew/3.6", "whatsnew/3.7", "whatsnew/3.8", "whatsnew/3.9", "whatsnew/changelog", "whatsnew/index"], "filenames": ["about.rst", "bugs.rst", "c-api/abstract.rst", "c-api/allocation.rst", "c-api/apiabiversion.rst", "c-api/arg.rst", "c-api/bool.rst", "c-api/buffer.rst", "c-api/bytearray.rst", "c-api/bytes.rst", "c-api/call.rst", "c-api/capsule.rst", "c-api/cell.rst", "c-api/code.rst", "c-api/codec.rst", "c-api/complex.rst", "c-api/concrete.rst", "c-api/contextvars.rst", "c-api/conversion.rst", "c-api/coro.rst", "c-api/datetime.rst", "c-api/descriptor.rst", "c-api/dict.rst", "c-api/exceptions.rst", "c-api/file.rst", "c-api/float.rst", "c-api/frame.rst", "c-api/function.rst", "c-api/gcsupport.rst", "c-api/gen.rst", "c-api/hash.rst", "c-api/import.rst", "c-api/index.rst", "c-api/init.rst", "c-api/init_config.rst", "c-api/intro.rst", "c-api/iter.rst", "c-api/iterator.rst", "c-api/list.rst", "c-api/long.rst", "c-api/mapping.rst", "c-api/marshal.rst", "c-api/memory.rst", "c-api/memoryview.rst", "c-api/method.rst", "c-api/module.rst", "c-api/none.rst", "c-api/number.rst", "c-api/objbuffer.rst", "c-api/object.rst", "c-api/objimpl.rst", "c-api/refcounting.rst", "c-api/reflection.rst", "c-api/sequence.rst", "c-api/set.rst", "c-api/slice.rst", "c-api/stable.rst", "c-api/structures.rst", "c-api/sys.rst", "c-api/tuple.rst", "c-api/type.rst", "c-api/typehints.rst", "c-api/typeobj.rst", "c-api/unicode.rst", "c-api/utilities.rst", "c-api/veryhigh.rst", "c-api/weakref.rst", "contents.rst", "copyright.rst", "distributing/index.rst", "distutils/_setuptools_disclaimer.rst", "distutils/apiref.rst", "distutils/builtdist.rst", "distutils/commandref.rst", "distutils/configfile.rst", "distutils/examples.rst", "distutils/extending.rst", "distutils/index.rst", "distutils/introduction.rst", "distutils/packageindex.rst", "distutils/setupscript.rst", "distutils/sourcedist.rst", "distutils/uploading.rst", "extending/building.rst", "extending/embedding.rst", "extending/extending.rst", "extending/index.rst", "extending/newtypes.rst", "extending/newtypes_tutorial.rst", "extending/windows.rst", "faq/design.rst", "faq/extending.rst", "faq/general.rst", "faq/gui.rst", "faq/index.rst", "faq/installed.rst", "faq/library.rst", "faq/programming.rst", "faq/windows.rst", "glossary.rst", "howto/annotations.rst", "howto/argparse.rst", "howto/clinic.rst", "howto/cporting.rst", "howto/curses.rst", "howto/descriptor.rst", "howto/enum.rst", "howto/functional.rst", "howto/gdb_helpers.rst", "howto/index.rst", "howto/instrumentation.rst", "howto/ipaddress.rst", "howto/isolating-extensions.rst", "howto/logging.rst", "howto/logging-cookbook.rst", "howto/pyporting.rst", "howto/regex.rst", "howto/sockets.rst", "howto/sorting.rst", "howto/unicode.rst", "howto/urllib2.rst", "install/index.rst", "installing/index.rst", "library/2to3.rst", "library/__future__.rst", "library/__main__.rst", "library/_thread.rst", "library/abc.rst", "library/aifc.rst", "library/allos.rst", "library/archiving.rst", "library/argparse.rst", "library/array.rst", "library/ast.rst", "library/asynchat.rst", "library/asyncio.rst", "library/asyncio-api-index.rst", "library/asyncio-dev.rst", "library/asyncio-eventloop.rst", "library/asyncio-exceptions.rst", "library/asyncio-extending.rst", "library/asyncio-future.rst", "library/asyncio-llapi-index.rst", "library/asyncio-platforms.rst", "library/asyncio-policy.rst", "library/asyncio-protocol.rst", "library/asyncio-queue.rst", "library/asyncio-runner.rst", "library/asyncio-stream.rst", "library/asyncio-subprocess.rst", "library/asyncio-sync.rst", "library/asyncio-task.rst", "library/asyncore.rst", "library/atexit.rst", "library/audioop.rst", "library/audit_events.rst", "library/base64.rst", "library/bdb.rst", "library/binary.rst", "library/binascii.rst", "library/bisect.rst", "library/builtins.rst", "library/bz2.rst", "library/calendar.rst", "library/cgi.rst", "library/cgitb.rst", "library/chunk.rst", "library/cmath.rst", "library/cmd.rst", "library/cmdline.rst", "library/code.rst", "library/codecs.rst", "library/codeop.rst", "library/collections.rst", "library/collections.abc.rst", "library/colorsys.rst", "library/compileall.rst", "library/concurrency.rst", "library/concurrent.rst", "library/concurrent.futures.rst", "library/configparser.rst", "library/constants.rst", "library/contextlib.rst", "library/contextvars.rst", "library/copy.rst", "library/copyreg.rst", "library/crypt.rst", "library/crypto.rst", "library/csv.rst", "library/ctypes.rst", "library/curses.rst", "library/curses.ascii.rst", "library/curses.panel.rst", "library/custominterp.rst", "library/dataclasses.rst", "library/datatypes.rst", "library/datetime.rst", "library/dbm.rst", "library/debug.rst", "library/decimal.rst", "library/development.rst", "library/devmode.rst", "library/dialog.rst", "library/difflib.rst", "library/dis.rst", "library/distribution.rst", "library/distutils.rst", "library/doctest.rst", "library/email.rst", "library/email.charset.rst", "library/email.compat32-message.rst", "library/email.contentmanager.rst", "library/email.encoders.rst", "library/email.errors.rst", "library/email.examples.rst", "library/email.generator.rst", "library/email.header.rst", "library/email.headerregistry.rst", "library/email.iterators.rst", "library/email.message.rst", "library/email.mime.rst", "library/email.parser.rst", "library/email.policy.rst", "library/email.utils.rst", "library/ensurepip.rst", "library/enum.rst", "library/errno.rst", "library/exceptions.rst", "library/faulthandler.rst", "library/fcntl.rst", "library/filecmp.rst", "library/fileformats.rst", "library/fileinput.rst", "library/filesys.rst", "library/fnmatch.rst", "library/fractions.rst", "library/frameworks.rst", "library/ftplib.rst", "library/functional.rst", "library/functions.rst", "library/functools.rst", "library/gc.rst", "library/getopt.rst", "library/getpass.rst", "library/gettext.rst", "library/glob.rst", "library/graphlib.rst", "library/grp.rst", "library/gzip.rst", "library/hashlib.rst", "library/heapq.rst", "library/hmac.rst", "library/html.rst", "library/html.entities.rst", "library/html.parser.rst", "library/http.rst", "library/http.client.rst", "library/http.cookiejar.rst", "library/http.cookies.rst", "library/http.server.rst", "library/i18n.rst", "library/idle.rst", "library/imaplib.rst", "library/imghdr.rst", "library/imp.rst", "library/importlib.rst", "library/importlib.metadata.rst", "library/importlib.resources.rst", "library/importlib.resources.abc.rst", "library/index.rst", "library/inspect.rst", "library/internet.rst", "library/intro.rst", "library/io.rst", "library/ipaddress.rst", "library/ipc.rst", "library/itertools.rst", "library/json.rst", "library/keyword.rst", "library/language.rst", "library/linecache.rst", "library/locale.rst", "library/logging.rst", "library/logging.config.rst", "library/logging.handlers.rst", "library/lzma.rst", "library/mailbox.rst", "library/mailcap.rst", "library/markup.rst", "library/marshal.rst", "library/math.rst", "library/mimetypes.rst", "library/mm.rst", "library/mmap.rst", "library/modulefinder.rst", "library/modules.rst", "library/msilib.rst", "library/msvcrt.rst", "library/multiprocessing.rst", "library/multiprocessing.shared_memory.rst", "library/netdata.rst", "library/netrc.rst", "library/nis.rst", "library/nntplib.rst", "library/numbers.rst", "library/numeric.rst", "library/operator.rst", "library/optparse.rst", "library/os.rst", "library/os.path.rst", "library/ossaudiodev.rst", "library/pathlib.rst", "library/pdb.rst", "library/persistence.rst", "library/pickle.rst", "library/pickletools.rst", "library/pipes.rst", "library/pkgutil.rst", "library/platform.rst", "library/plistlib.rst", "library/poplib.rst", "library/posix.rst", "library/pprint.rst", "library/profile.rst", "library/pty.rst", "library/pwd.rst", "library/py_compile.rst", "library/pyclbr.rst", "library/pydoc.rst", "library/pyexpat.rst", "library/python.rst", "library/queue.rst", "library/quopri.rst", "library/random.rst", "library/re.rst", "library/readline.rst", "library/reprlib.rst", "library/resource.rst", "library/rlcompleter.rst", "library/runpy.rst", "library/sched.rst", "library/secrets.rst", "library/security_warnings.rst", "library/select.rst", "library/selectors.rst", "library/shelve.rst", "library/shlex.rst", "library/shutil.rst", "library/signal.rst", "library/site.rst", "library/smtpd.rst", "library/smtplib.rst", "library/sndhdr.rst", "library/socket.rst", "library/socketserver.rst", "library/spwd.rst", "library/sqlite3.rst", "library/ssl.rst", "library/stat.rst", "library/statistics.rst", "library/stdtypes.rst", "library/string.rst", "library/stringprep.rst", "library/struct.rst", "library/subprocess.rst", "library/sunau.rst", "library/superseded.rst", "library/symtable.rst", "library/sys.rst", "library/sys_path_init.rst", "library/sysconfig.rst", "library/syslog.rst", "library/tabnanny.rst", "library/tarfile.rst", "library/telnetlib.rst", "library/tempfile.rst", "library/termios.rst", "library/test.rst", "library/text.rst", "library/textwrap.rst", "library/threading.rst", "library/time.rst", "library/timeit.rst", "library/tk.rst", "library/tkinter.rst", "library/tkinter.colorchooser.rst", "library/tkinter.dnd.rst", "library/tkinter.font.rst", "library/tkinter.messagebox.rst", "library/tkinter.scrolledtext.rst", "library/tkinter.tix.rst", "library/tkinter.ttk.rst", "library/token.rst", "library/tokenize.rst", "library/tomllib.rst", "library/trace.rst", "library/traceback.rst", "library/tracemalloc.rst", "library/tty.rst", "library/turtle.rst", "library/types.rst", "library/typing.rst", "library/unicodedata.rst", "library/unittest.rst", "library/unittest.mock.rst", "library/unittest.mock-examples.rst", "library/unix.rst", "library/urllib.rst", "library/urllib.error.rst", "library/urllib.parse.rst", "library/urllib.request.rst", "library/urllib.robotparser.rst", "library/uu.rst", "library/uuid.rst", "library/venv.rst", "library/warnings.rst", "library/wave.rst", "library/weakref.rst", "library/webbrowser.rst", "library/windows.rst", "library/winreg.rst", "library/winsound.rst", "library/wsgiref.rst", "library/xdrlib.rst", "library/xml.rst", "library/xml.dom.rst", "library/xml.dom.minidom.rst", "library/xml.dom.pulldom.rst", "library/xml.etree.elementtree.rst", "library/xml.sax.rst", "library/xml.sax.handler.rst", "library/xml.sax.reader.rst", "library/xml.sax.utils.rst", "library/xmlrpc.rst", "library/xmlrpc.client.rst", "library/xmlrpc.server.rst", "library/zipapp.rst", "library/zipfile.rst", "library/zipimport.rst", "library/zlib.rst", "library/zoneinfo.rst", "license.rst", "reference/compound_stmts.rst", "reference/datamodel.rst", "reference/executionmodel.rst", "reference/expressions.rst", "reference/grammar.rst", "reference/import.rst", "reference/index.rst", "reference/introduction.rst", "reference/lexical_analysis.rst", "reference/simple_stmts.rst", "reference/toplevel_components.rst", "tutorial/appendix.rst", "tutorial/appetite.rst", "tutorial/classes.rst", "tutorial/controlflow.rst", "tutorial/datastructures.rst", "tutorial/errors.rst", "tutorial/floatingpoint.rst", "tutorial/index.rst", "tutorial/inputoutput.rst", "tutorial/interactive.rst", "tutorial/interpreter.rst", "tutorial/introduction.rst", "tutorial/modules.rst", "tutorial/stdlib.rst", "tutorial/stdlib2.rst", "tutorial/venv.rst", "tutorial/whatnow.rst", "using/cmdline.rst", "using/configure.rst", "using/editors.rst", "using/index.rst", "using/mac.rst", "using/unix.rst", "using/windows.rst", "whatsnew/2.0.rst", "whatsnew/2.1.rst", "whatsnew/2.2.rst", "whatsnew/2.3.rst", "whatsnew/2.4.rst", "whatsnew/2.5.rst", "whatsnew/2.6.rst", "whatsnew/2.7.rst", "whatsnew/3.0.rst", "whatsnew/3.1.rst", "whatsnew/3.10.rst", "whatsnew/3.11.rst", "whatsnew/3.2.rst", "whatsnew/3.3.rst", "whatsnew/3.4.rst", "whatsnew/3.5.rst", "whatsnew/3.6.rst", "whatsnew/3.7.rst", "whatsnew/3.8.rst", "whatsnew/3.9.rst", "whatsnew/changelog.rst", "whatsnew/index.rst"], "titles": ["About these documents", "Dealing with Bugs", "Abstract Objects Layer", "Allocating Objects on the Heap", "API and ABI Versioning", "Parsing arguments and building values", "Boolean Objects", "Buffer Protocol", "Byte Array Objects", "Bytes Objects", "Call Protocol", "Capsules", "Cell Objects", "Code Objects", "Codec registry and support functions", "Complex Number Objects", "Concrete Objects Layer", "Context Variables Objects", "String conversion and formatting", "Coroutine Objects", "DateTime Objects", "Descriptor Objects", "Dictionary Objects", "Exception Handling", "File Objects", "Floating Point Objects", "Frame Objects", "Function Objects", "Supporting Cyclic Garbage Collection", "Generator Objects", "PyHash API", "Importing Modules", "Python/C API Reference Manual", "Initialization, Finalization, and Threads", "Python Initialization Configuration", "Introduction", "Iterator Protocol", "Iterator Objects", "List Objects", "Integer Objects", "Mapping Protocol", "Data marshalling support", "Memory Management", "MemoryView objects", "Instance Method Objects", "Module Objects", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> Object", "Number Protocol", "Old Buffer Protocol", "Object Protocol", "Object Implementation Support", "Reference Counting", "Reflection", "Sequence Protocol", "Set Objects", "Slice Objects", "C API Stability", "Common Object Structures", "Operating System Utilities", "Tuple Objects", "Type Objects", "Objects for Type Hinting", "Type Objects", "Unicode Objects and Codecs", "Utilities", "The Very High Level Layer", "Weak Reference Objects", "Python Documentation contents", "Copyright", "Distributing Python Modules", "&lt;no title&gt;", "<span class=\"section-number\">9. </span>API Reference", "<span class=\"section-number\">5. </span>Creating Built Distributions", "<span class=\"section-number\">8. </span>Command Reference", "<span class=\"section-number\">3. </span>Writing the Setup Configuration File", "<span class=\"section-number\">6. </span>Distutils Examples", "<span class=\"section-number\">7. </span>Extending Distutils", "Distributing Python Modules (Legacy version)", "<span class=\"section-number\">1. </span>An Introduction to Distutils", "The Python Package Index (PyPI)", "<span class=\"section-number\">2. </span>Writing the Setup Script", "<span class=\"section-number\">4. </span>Creating a Source Distribution", "Uploading Packages to the Package Index", "<span class=\"section-number\">4. </span>Building C and C++ Extensions", "<span class=\"section-number\">1. </span>Embedding Python in Another Application", "<span class=\"section-number\">1. </span>Extending Python with C or C++", "Extending and Embedding the Python Interpreter", "<span class=\"section-number\">3. </span>Defining Extension Types: Assorted Topics", "<span class=\"section-number\">2. </span>Defining Extension Types: Tutorial", "<span class=\"section-number\">5. </span>Building C and C++ Extensions on Windows", "Design and History FAQ", "Extending/Embedding FAQ", "General Python FAQ", "Graphic User Interface FAQ", "Python Frequently Asked Questions", "\u201cWhy is Python Installed on my Computer?\u201d FAQ", "Library and Extension FAQ", "Programming FAQ", "Python on Windows FAQ", "Glossary", "Annotations Best Practices", "Argparse Tutorial", "Argument Clinic How-To", "Porting Extension Modules to Python 3", "Curses Programming with Python", "Descriptor HowTo Guide", "Enum HOWTO", "Functional Programming HOWTO", "Debugging C API extensions and CPython Internals with GDB", "Python HOWTOs", "Instrumenting CPython with DTrace and SystemTap", "An introduction to the ipaddress module", "Isolating Extension Modules", "Logging HOWTO", "Logging Cookbook", "How to port Python 2 Code to Python 3", "Regular Expression HOWTO", "Socket Programming HOWTO", "Sorting HOW TO", "Unicode HOWTO", "HOWTO Fetch Internet Resources Using The urllib Package", "Installing Python Modules (Legacy version)", "Installing Python Modules", "2to3 \u2014 Automated Python 2 to 3 code translation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__future__</span></code> \u2014 Future statement definitions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__main__</span></code> \u2014 Top-level code environment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">_thread</span></code> \u2014 Low-level threading API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abc</span></code> \u2014 Abstract Base Classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">aifc</span></code> \u2014 Read and write AIFF and AIFC files", "Generic Operating System Services", "Data Compression and Archiving", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argparse</span></code> \u2014 Parser for command-line options, arguments and sub-commands", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">array</span></code> \u2014 Efficient arrays of numeric values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ast</span></code> \u2014 Abstract Syntax Trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asynchat</span></code> \u2014 Asynchronous socket command/response handler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> \u2014 Asynchronous I/O", "High-level API Index", "Developing with asyncio", "Event Loop", "Exceptions", "Extending", "Futures", "Low-level API Index", "Platform Support", "Policies", "Transports and Protocols", "Queues", "Runners", "Streams", "Subprocesses", "Synchronization Primitives", "Coroutines and Tasks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncore</span></code> \u2014 Asynchronous socket handler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">atexit</span></code> \u2014 Exit handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">audioop</span></code> \u2014 Manipulate raw audio data", "Audit events table", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">base64</span></code> \u2014 Base16, Base32, Base64, Base85 Data Encodings", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bdb</span></code> \u2014 Debugger framework", "Binary Data Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">binascii</span></code> \u2014 Convert between binary and ASCII", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bisect</span></code> \u2014 Array bisection algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code> \u2014 Built-in objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bz2</span></code> \u2014 Support for <strong class=\"program\">bzip2</strong> compression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">calendar</span></code> \u2014 General calendar-related functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cgi</span></code> \u2014 Common Gateway Interface support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cgitb</span></code> \u2014 Traceback manager for CGI scripts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">chunk</span></code> \u2014 Read IFF chunked data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code> \u2014 Mathematical functions for complex numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmd</span></code> \u2014 Support for line-oriented command interpreters", "Modules command-line interface (CLI)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">code</span></code> \u2014 Interpreter base classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">codecs</span></code> \u2014 Codec registry and base classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">codeop</span></code> \u2014 Compile Python code", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections</span></code> \u2014 Container datatypes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections.abc</span></code> \u2014 Abstract Base Classes for Containers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">colorsys</span></code> \u2014 Conversions between color systems", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">compileall</span></code> \u2014 Byte-compile Python libraries", "Concurrent Execution", "The <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">concurrent</span></code> package", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">concurrent.futures</span></code> \u2014 Launching parallel tasks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">configparser</span></code> \u2014 Configuration file parser", "Built-in Constants", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contextlib</span></code> \u2014 Utilities for <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">with</span></code>-statement contexts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contextvars</span></code> \u2014 Context Variables", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">copy</span></code> \u2014 Shallow and deep copy operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">copyreg</span></code> \u2014 Register <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickle</span></code> support functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">crypt</span></code> \u2014 Function to check Unix passwords", "Cryptographic Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">csv</span></code> \u2014 CSV File Reading and Writing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ctypes</span></code> \u2014 A foreign function library for Python", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses</span></code> \u2014 Terminal handling for character-cell displays", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses.ascii</span></code> \u2014 Utilities for ASCII characters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses.panel</span></code> \u2014 A panel stack extension for curses", "Custom Python Interpreters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dataclasses</span></code> \u2014 Data Classes", "Data Types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datetime</span></code> \u2014 Basic date and time types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dbm</span></code> \u2014 Interfaces to Unix \u201cdatabases\u201d", "Debugging and Profiling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">decimal</span></code> \u2014 Decimal fixed point and floating point arithmetic", "Development Tools", "Python Development Mode", "Tkinter Dialogs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">difflib</span></code> \u2014 Helpers for computing deltas", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dis</span></code> \u2014 Disassembler for Python bytecode", "Software Packaging and Distribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">distutils</span></code> \u2014 Building and installing Python modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">doctest</span></code> \u2014 Test interactive Python examples", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email</span></code> \u2014 An email and MIME handling package", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.charset</span></code>: Representing character sets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.message.Message</span></code>: Representing an email message using the <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">compat32</span></code> API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.contentmanager</span></code>: Managing MIME Content", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.encoders</span></code>: Encoders", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.errors</span></code>: Exception and Defect classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email</span></code>: Examples", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.generator</span></code>: Generating MIME documents", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.header</span></code>: Internationalized headers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.headerregistry</span></code>: Custom Header Objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.iterators</span></code>: Iterators", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.message</span></code>: Representing an email message", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.mime</span></code>: Creating email and MIME objects from scratch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.parser</span></code>: Parsing email messages", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.policy</span></code>: Policy Objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.utils</span></code>: Miscellaneous utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ensurepip</span></code> \u2014 Bootstrapping the <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code> installer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">enum</span></code> \u2014 Support for enumerations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errno</span></code> \u2014 Standard errno system symbols", "Built-in Exceptions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">faulthandler</span></code> \u2014 Dump the Python traceback", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fcntl</span></code> \u2014 The <code class=\"docutils literal notranslate\"><span class=\"pre\">fcntl</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">ioctl</span></code> system calls", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">filecmp</span></code> \u2014 File and Directory Comparisons", "File Formats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fileinput</span></code> \u2014 Iterate over lines from multiple input streams", "File and Directory Access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fnmatch</span></code> \u2014 Unix filename pattern matching", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fractions</span></code> \u2014 Rational numbers", "Program Frameworks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ftplib</span></code> \u2014 FTP protocol client", "Functional Programming Modules", "Built-in Functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">functools</span></code> \u2014 Higher-order functions and operations on callable objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code> \u2014 Garbage Collector interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">getopt</span></code> \u2014 C-style parser for command line options", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">getpass</span></code> \u2014 Portable password input", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gettext</span></code> \u2014 Multilingual internationalization services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">glob</span></code> \u2014 Unix style pathname pattern expansion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">graphlib</span></code> \u2014 Functionality to operate with graph-like structures", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">grp</span></code> \u2014 The group database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gzip</span></code> \u2014 Support for <strong class=\"program\">gzip</strong> files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hashlib</span></code> \u2014 Secure hashes and message digests", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">heapq</span></code> \u2014 Heap queue algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hmac</span></code> \u2014 Keyed-Hashing for Message Authentication", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html</span></code> \u2014 HyperText Markup Language support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html.entities</span></code> \u2014 Definitions of HTML general entities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html.parser</span></code> \u2014 Simple HTML and XHTML parser", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http</span></code> \u2014 HTTP modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.client</span></code> \u2014 HTTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.cookiejar</span></code> \u2014 Cookie handling for HTTP clients", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.cookies</span></code> \u2014 HTTP state management", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.server</span></code> \u2014 HTTP servers", "Internationalization", "IDLE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imaplib</span></code> \u2014 IMAP4 protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imghdr</span></code> \u2014 Determine the type of an image", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imp</span></code> \u2014 Access the <span class=\"xref std std-ref\">import</span> internals", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib</span></code> \u2014 The implementation of <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">import</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.metadata</span></code> \u2013 Accessing package metadata", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.resources</span></code> \u2013 Package resource reading, opening and access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.resources.abc</span></code> \u2013 Abstract base classes for resources", "The Python Standard Library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">inspect</span></code> \u2014 Inspect live objects", "Internet Protocols and Support", "Introduction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code> \u2014 Core tools for working with streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ipaddress</span></code> \u2014 IPv4/IPv6 manipulation library", "Networking and Interprocess Communication", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">itertools</span></code> \u2014 Functions creating iterators for efficient looping", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">json</span></code> \u2014 JSON encoder and decoder", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">keyword</span></code> \u2014 Testing for Python keywords", "Python Language Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">linecache</span></code> \u2014 Random access to text lines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">locale</span></code> \u2014 Internationalization services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging</span></code> \u2014 Logging facility for Python", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging.config</span></code> \u2014 Logging configuration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging.handlers</span></code> \u2014 Logging handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lzma</span></code> \u2014 Compression using the LZMA algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mailbox</span></code> \u2014 Manipulate mailboxes in various formats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mailcap</span></code> \u2014 Mailcap file handling", "Structured Markup Processing Tools", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">marshal</span></code> \u2014 Internal Python object serialization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code> \u2014 Mathematical functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mimetypes</span></code> \u2014 Map filenames to MIME types", "Multimedia Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mmap</span></code> \u2014 Memory-mapped file support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">modulefinder</span></code> \u2014 Find modules used by a script", "Importing Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">msilib</span></code> \u2014 Read and write Microsoft Installer files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">msvcrt</span></code> \u2014 Useful routines from the MS VC++ runtime", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">multiprocessing</span></code> \u2014 Process-based parallelism", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">multiprocessing.shared_memory</span></code> \u2014 Shared memory for direct access across processes", "Internet Data Handling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">netrc</span></code> \u2014 netrc file processing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nis</span></code> \u2014 Interface to Sun\u2019s NIS (Yellow Pages)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">nntplib</span></code> \u2014 NNTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">numbers</span></code> \u2014 Numeric abstract base classes", "Numeric and Mathematical Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">operator</span></code> \u2014 Standard operators as functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">optparse</span></code> \u2014 Parser for command line options", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os</span></code> \u2014 Miscellaneous operating system interfaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os.path</span></code> \u2014 Common pathname manipulations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ossaudiodev</span></code> \u2014 Access to OSS-compatible audio devices", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pathlib</span></code> \u2014 Object-oriented filesystem paths", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pdb</span></code> \u2014 The Python Debugger", "Data Persistence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickle</span></code> \u2014 Python object serialization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickletools</span></code> \u2014 Tools for pickle developers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pipes</span></code> \u2014 Interface to shell pipelines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pkgutil</span></code> \u2014 Package extension utility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">platform</span></code> \u2014  Access to underlying platform\u2019s identifying data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">plistlib</span></code> \u2014 Generate and parse Apple <code class=\"docutils literal notranslate\"><span class=\"pre\">.plist</span></code> files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplib</span></code> \u2014 POP3 protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">posix</span></code> \u2014 The most common POSIX system calls", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pprint</span></code> \u2014 Data pretty printer", "The Python Profilers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pty</span></code> \u2014 Pseudo-terminal utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pwd</span></code> \u2014 The password database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_compile</span></code> \u2014 Compile Python source files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyclbr</span></code> \u2014 Python module browser support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydoc</span></code> \u2014 Documentation generator and online help system", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.parsers.expat</span></code> \u2014 Fast XML parsing using Expat", "Python Runtime Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">queue</span></code> \u2014 A synchronized queue class", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">quopri</span></code> \u2014 Encode and decode MIME quoted-printable data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code> \u2014 Generate pseudo-random numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">re</span></code> \u2014 Regular expression operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">readline</span></code> \u2014 GNU readline interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reprlib</span></code> \u2014 Alternate <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">repr()</span></code> implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">resource</span></code> \u2014 Resource usage information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rlcompleter</span></code> \u2014 Completion function for GNU readline", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">runpy</span></code> \u2014 Locating and executing Python modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sched</span></code> \u2014 Event scheduler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">secrets</span></code> \u2014 Generate secure random numbers for managing secrets", "Security Considerations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">select</span></code> \u2014 Waiting for I/O completion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">selectors</span></code> \u2014 High-level I/O multiplexing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shelve</span></code> \u2014 Python object persistence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shlex</span></code> \u2014 Simple lexical analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shutil</span></code> \u2014 High-level file operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">signal</span></code> \u2014 Set handlers for asynchronous events", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">site</span></code> \u2014 Site-specific configuration hook", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">smtpd</span></code> \u2014 SMTP Server", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">smtplib</span></code> \u2014 SMTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sndhdr</span></code> \u2014 Determine type of sound file", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socket</span></code> \u2014 Low-level networking interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socketserver</span></code> \u2014 A framework for network servers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">spwd</span></code> \u2014 The shadow password database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code> \u2014 DB-API 2.0 interface for SQLite databases", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ssl</span></code> \u2014 TLS/SSL wrapper for socket objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stat</span></code> \u2014 Interpreting <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">stat()</span></code> results", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">statistics</span></code> \u2014 Mathematical statistics functions", "Built-in Types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">string</span></code> \u2014 Common string operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stringprep</span></code> \u2014 Internet String Preparation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">struct</span></code> \u2014 Interpret bytes as packed binary data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">subprocess</span></code> \u2014 Subprocess management", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sunau</span></code> \u2014 Read and write Sun AU files", "Superseded Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">symtable</span></code> \u2014 Access to the compiler\u2019s symbol tables", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys</span></code> \u2014 System-specific parameters and functions", "The initialization of the <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.path</span></code> module search path", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sysconfig</span></code> \u2014 Provide access to Python\u2019s configuration information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">syslog</span></code> \u2014 Unix syslog library routines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tabnanny</span></code> \u2014 Detection of ambiguous indentation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tarfile</span></code> \u2014 Read and write tar archive files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">telnetlib</span></code> \u2014 Telnet client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tempfile</span></code> \u2014 Generate temporary files and directories", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">termios</span></code> \u2014 POSIX style tty control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test</span></code> \u2014 Regression tests package for Python", "Text Processing Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">textwrap</span></code> \u2014 Text wrapping and filling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">threading</span></code> \u2014 Thread-based parallelism", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">time</span></code> \u2014 Time access and conversions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">timeit</span></code> \u2014 Measure execution time of small code snippets", "Graphical User Interfaces with Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter</span></code> \u2014 Python interface to Tcl/Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.colorchooser</span></code> \u2014 Color choosing dialog", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.dnd</span></code> \u2014 Drag and drop support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.font</span></code> \u2014 Tkinter font wrapper", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.messagebox</span></code> \u2014 Tkinter message prompts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.scrolledtext</span></code> \u2014 Scrolled Text Widget", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.tix</span></code> \u2014 Extension widgets for Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.ttk</span></code> \u2014 Tk themed widgets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">token</span></code> \u2014 Constants used with Python parse trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tokenize</span></code> \u2014 Tokenizer for Python source", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tomllib</span></code> \u2014 Parse TOML files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trace</span></code> \u2014 Trace or track Python statement execution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">traceback</span></code> \u2014 Print or retrieve a stack traceback", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracemalloc</span></code> \u2014 Trace memory allocations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tty</span></code> \u2014 Terminal control functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">turtle</span></code> \u2014 Turtle graphics", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">types</span></code> \u2014 Dynamic type creation and names for built-in types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">typing</span></code> \u2014 Support for type hints", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unicodedata</span></code> \u2014 Unicode Database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest</span></code> \u2014 Unit testing framework", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest.mock</span></code> \u2014 mock object library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest.mock</span></code> \u2014 getting started", "Unix Specific Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib</span></code> \u2014 URL handling modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.error</span></code> \u2014 Exception classes raised by urllib.request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.parse</span></code> \u2014 Parse URLs into components", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.request</span></code> \u2014 Extensible library for opening URLs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.robotparser</span></code> \u2014  Parser for robots.txt", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uu</span></code> \u2014 Encode and decode uuencode files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uuid</span></code> \u2014 UUID objects according to <strong>RFC 4122</strong>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">venv</span></code> \u2014 Creation of virtual environments", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">warnings</span></code> \u2014 Warning control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wave</span></code> \u2014 Read and write WAV files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">weakref</span></code> \u2014 Weak references", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">webbrowser</span></code> \u2014 Convenient web-browser controller", "MS Windows Specific Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">winreg</span></code> \u2014 Windows registry access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">winsound</span></code> \u2014 Sound-playing interface for Windows", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wsgiref</span></code> \u2014 WSGI Utilities and Reference Implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xdrlib</span></code> \u2014 Encode and decode XDR data", "XML Processing Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom</span></code> \u2014 The Document Object Model API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom.minidom</span></code> \u2014 Minimal DOM implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom.pulldom</span></code> \u2014 Support for building partial DOM trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.etree.ElementTree</span></code> \u2014 The ElementTree XML API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax</span></code> \u2014 Support for SAX2 parsers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.handler</span></code> \u2014 Base classes for SAX handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.xmlreader</span></code> \u2014 Interface for XML parsers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.saxutils</span></code> \u2014 SAX Utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc</span></code> \u2014 XMLRPC server and client modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc.client</span></code> \u2014 XML-RPC client access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc.server</span></code> \u2014 Basic XML-RPC servers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipapp</span></code> \u2014 Manage executable Python zip archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipfile</span></code> \u2014 Work with ZIP archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipimport</span></code> \u2014 Import modules from Zip archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zlib</span></code> \u2014 Compression compatible with <strong class=\"program\">gzip</strong>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zoneinfo</span></code> \u2014 IANA time zone support", "History and License", "<span class=\"section-number\">8. </span>Compound statements", "<span class=\"section-number\">3. </span>Data model", "<span class=\"section-number\">4. </span>Execution model", "<span class=\"section-number\">6. </span>Expressions", "<span class=\"section-number\">10. </span>Full Grammar specification", "<span class=\"section-number\">5. </span>The import system", "The Python Language Reference", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">2. </span>Lexical analysis", "<span class=\"section-number\">7. </span>Simple statements", "<span class=\"section-number\">9. </span>Top-level components", "<span class=\"section-number\">16. </span>Appendix", "<span class=\"section-number\">1. </span>Whetting Your Appetite", "<span class=\"section-number\">9. </span>Classes", "<span class=\"section-number\">4. </span>More Control Flow Tools", "<span class=\"section-number\">5. </span>Data Structures", "<span class=\"section-number\">8. </span>Errors and Exceptions", "<span class=\"section-number\">15. </span>Floating Point Arithmetic:  Issues and Limitations", "The Python Tutorial", "<span class=\"section-number\">7. </span>Input and Output", "<span class=\"section-number\">14. </span>Interactive Input Editing and History Substitution", "<span class=\"section-number\">2. </span>Using the Python Interpreter", "<span class=\"section-number\">3. </span>An Informal Introduction to Python", "<span class=\"section-number\">6. </span>Modules", "<span class=\"section-number\">10. </span>Brief Tour of the Standard Library", "<span class=\"section-number\">11. </span>Brief Tour of the Standard Library \u2014 Part II", "<span class=\"section-number\">12. </span>Virtual Environments and Packages", "<span class=\"section-number\">13. </span>What Now?", "<span class=\"section-number\">1. </span>Command line and environment", "<span class=\"section-number\">3. </span>Configure Python", "<span class=\"section-number\">6. </span>Editors and IDEs", "Python Setup and Usage", "<span class=\"section-number\">5. </span>Using Python on a Mac", "<span class=\"section-number\">2. </span>Using Python on Unix platforms", "<span class=\"section-number\">4. </span>Using Python on Windows", "What\u2019s New in Python 2.0", "What\u2019s New in Python 2.1", "What\u2019s New in Python 2.2", "What\u2019s New in Python 2.3", "What\u2019s New in Python 2.4", "What\u2019s New in Python 2.5", "What\u2019s New in Python 2.6", "What\u2019s New in Python 2.7", "What\u2019s New In Python 3.0", "What\u2019s New In Python 3.1", "What\u2019s New In Python 3.10", "What\u2019s New In Python 3.11", "What\u2019s New In Python 3.2", "What\u2019s New In Python 3.3", "What\u2019s New In Python 3.4", "What\u2019s New In Python 3.5", "What\u2019s New In Python 3.6", "What\u2019s New In Python 3.7", "What\u2019s New In Python 3.8", "What\u2019s New In Python 3.9", "Changelog", "What\u2019s New in Python"], "terms": {"These": [0, 5, 8, 9, 10, 23, 24, 33, 35, 41, 42, 45, 48, 57, 58, 62, 63, 65, 71, 72, 80, 83, 84, 85, 87, 88, 89, 90, 92, 96, 97, 99, 101, 104, 107, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 131, 145, 155, 157, 159, 162, 164, 168, 171, 174, 176, 180, 182, 188, 189, 190, 191, 194, 196, 197, 198, 199, 202, 203, 204, 205, 207, 210, 212, 216, 219, 221, 222, 225, 239, 241, 249, 250, 257, 261, 265, 266, 270, 273, 274, 276, 279, 281, 282, 283, 284, 285, 286, 290, 291, 293, 297, 298, 303, 304, 306, 307, 308, 309, 311, 314, 323, 329, 333, 334, 335, 337, 345, 351, 353, 354, 357, 358, 359, 360, 361, 364, 367, 368, 370, 377, 380, 381, 384, 395, 399, 401, 403, 404, 405, 409, 410, 414, 420, 422, 425, 426, 428, 429, 435, 437, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 455, 456, 457, 459, 461, 463, 465, 466, 467, 470, 475, 476, 477, 479, 481, 483, 484, 487, 488, 489, 490, 491, 495, 496], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 89, 93, 95, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498], "gener": [0, 1, 7, 12, 14, 16, 23, 26, 31, 32, 33, 35, 37, 40, 42, 49, 53, 57, 60, 61, 62, 65, 67, 71, 72, 74, 75, 77, 80, 81, 83, 84, 85, 88, 89, 91, 94, 98, 99, 103, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 119, 121, 123, 124, 127, 131, 133, 134, 138, 142, 145, 146, 147, 149, 151, 154, 155, 156, 157, 159, 164, 165, 168, 171, 173, 174, 176, 179, 180, 182, 184, 186, 187, 188, 189, 190, 194, 195, 196, 197, 199, 200, 203, 204, 206, 207, 208, 210, 214, 217, 219, 222, 223, 225, 227, 231, 233, 237, 238, 239, 240, 241, 243, 244, 246, 249, 250, 254, 256, 257, 258, 259, 261, 262, 264, 265, 269, 273, 276, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 296, 298, 299, 300, 303, 304, 305, 306, 308, 314, 320, 322, 324, 326, 329, 330, 334, 335, 336, 338, 340, 345, 346, 350, 351, 353, 356, 358, 359, 361, 362, 363, 364, 368, 372, 373, 379, 380, 381, 384, 390, 391, 392, 393, 395, 396, 399, 400, 402, 403, 404, 409, 410, 413, 414, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 439, 440, 441, 442, 444, 446, 447, 449, 450, 451, 454, 456, 457, 458, 459, 460, 461, 465, 469, 473, 476, 477, 478, 483, 484, 485, 486, 487, 489, 490, 491, 495, 498], "from": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 31, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90, 92, 93, 95, 99, 100, 101, 103, 104, 106, 107, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 170, 171, 173, 174, 175, 176, 177, 179, 180, 183, 184, 186, 188, 190, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "restructuredtext": [0, 67, 75, 80, 92, 207], "sourc": [0, 5, 13, 20, 23, 31, 33, 34, 35, 56, 65, 67, 72, 74, 75, 76, 77, 78, 83, 84, 85, 87, 88, 90, 91, 93, 99, 101, 104, 105, 106, 107, 114, 122, 123, 124, 127, 128, 131, 133, 134, 135, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 232, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 294, 295, 296, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 447, 449, 450, 451, 452, 453, 457, 458, 460, 461, 465, 468, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "sphinx": [0, 67, 92, 96, 114], "processor": [0, 25, 35, 56, 71, 80, 85, 90, 99, 105, 117, 119, 152, 179, 298, 303, 307, 310, 318, 329, 337, 353, 410, 424, 430, 443, 474, 477, 481, 482, 495, 496], "specif": [0, 1, 10, 16, 23, 27, 34, 35, 36, 42, 45, 56, 57, 59, 62, 65, 66, 67, 71, 72, 73, 76, 77, 80, 83, 85, 88, 89, 92, 93, 97, 98, 99, 100, 101, 105, 108, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 122, 123, 126, 131, 133, 136, 138, 143, 144, 145, 146, 155, 158, 160, 164, 166, 167, 168, 174, 180, 182, 184, 185, 188, 189, 190, 194, 196, 197, 199, 207, 208, 209, 210, 216, 217, 219, 220, 222, 224, 225, 226, 227, 229, 236, 237, 239, 240, 241, 242, 244, 245, 246, 249, 254, 256, 257, 258, 259, 261, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 286, 289, 290, 296, 298, 301, 303, 306, 308, 309, 310, 311, 312, 314, 318, 323, 329, 330, 331, 333, 336, 337, 342, 343, 344, 346, 347, 350, 351, 353, 354, 356, 357, 358, 360, 363, 369, 370, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 387, 389, 392, 400, 401, 402, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 422, 425, 426, 428, 432, 434, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 461, 467, 468, 470, 475, 476, 477, 478, 479, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496], "written": [0, 7, 9, 18, 23, 24, 34, 35, 42, 45, 49, 51, 58, 63, 67, 71, 72, 75, 76, 78, 80, 81, 84, 85, 86, 88, 90, 92, 95, 96, 97, 99, 101, 103, 104, 105, 107, 108, 112, 114, 116, 117, 119, 121, 123, 125, 128, 132, 138, 145, 148, 149, 151, 152, 159, 164, 165, 170, 171, 174, 176, 180, 182, 188, 189, 190, 197, 204, 206, 207, 210, 216, 219, 227, 228, 239, 241, 243, 244, 248, 249, 255, 259, 261, 269, 270, 272, 273, 284, 286, 289, 293, 296, 298, 303, 307, 308, 310, 314, 315, 316, 319, 322, 323, 326, 328, 335, 339, 343, 345, 347, 348, 353, 354, 356, 357, 359, 360, 365, 368, 370, 372, 373, 375, 376, 377, 395, 397, 399, 400, 401, 403, 405, 415, 416, 417, 420, 422, 423, 425, 428, 434, 435, 436, 437, 438, 441, 443, 446, 449, 450, 451, 453, 454, 455, 456, 457, 459, 461, 464, 465, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "develop": [0, 1, 33, 34, 35, 67, 72, 77, 78, 80, 87, 89, 90, 95, 97, 98, 99, 102, 104, 110, 112, 113, 114, 116, 119, 122, 135, 138, 164, 174, 177, 182, 189, 198, 199, 227, 228, 249, 269, 273, 279, 282, 283, 284, 307, 308, 322, 328, 356, 360, 364, 368, 377, 383, 384, 390, 399, 401, 415, 434, 437, 440, 441, 454, 456, 460, 466, 470, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 488, 489, 490, 491, 492, 495, 496, 498], "its": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 23, 24, 25, 28, 31, 33, 34, 35, 39, 42, 43, 45, 47, 49, 51, 54, 56, 59, 60, 62, 63, 65, 71, 75, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 160, 162, 164, 165, 167, 168, 171, 173, 176, 179, 180, 182, 183, 184, 188, 189, 190, 191, 194, 196, 197, 199, 203, 204, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 221, 222, 223, 224, 225, 227, 228, 232, 237, 239, 240, 242, 244, 246, 249, 250, 251, 254, 256, 257, 259, 261, 262, 264, 265, 266, 267, 268, 270, 272, 273, 276, 277, 280, 282, 283, 284, 286, 290, 291, 293, 294, 298, 299, 306, 307, 308, 310, 311, 312, 314, 316, 317, 319, 320, 322, 323, 324, 326, 328, 329, 330, 333, 334, 335, 337, 338, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 367, 368, 370, 373, 375, 377, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 393, 395, 396, 399, 400, 401, 402, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 420, 422, 425, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "toolchain": [0, 483, 493], "ian": [0, 1, 3, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 76, 77, 80, 81, 83, 86, 87, 88, 89, 92, 93, 95, 99, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 406, 408, 409, 410, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "entir": [0, 5, 35, 42, 62, 71, 74, 77, 80, 81, 85, 87, 96, 97, 99, 104, 105, 111, 112, 116, 117, 119, 121, 123, 125, 138, 160, 163, 164, 173, 179, 182, 184, 190, 197, 210, 214, 219, 221, 227, 230, 244, 249, 250, 254, 256, 261, 269, 273, 274, 276, 281, 282, 284, 285, 286, 289, 293, 303, 307, 308, 310, 334, 337, 346, 347, 356, 357, 359, 360, 361, 368, 370, 373, 379, 380, 382, 384, 391, 399, 402, 403, 415, 420, 423, 425, 428, 431, 441, 442, 444, 447, 450, 451, 456, 457, 461, 464, 470, 476, 478, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 494], "volunt": [0, 1, 72, 441, 449, 483, 488], "effort": [0, 91, 97, 99, 109, 114, 116, 133, 240, 290, 322, 359, 375, 455, 461, 477, 479, 480, 481, 483, 484, 486, 487, 488, 489, 494], "just": [0, 1, 6, 9, 10, 13, 28, 35, 39, 46, 51, 55, 62, 63, 65, 67, 71, 72, 75, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 131, 133, 140, 141, 150, 151, 152, 162, 163, 164, 168, 170, 171, 172, 173, 174, 180, 182, 189, 190, 192, 194, 196, 199, 203, 207, 208, 214, 215, 225, 227, 232, 237, 239, 240, 244, 246, 248, 249, 257, 261, 264, 265, 267, 268, 276, 281, 282, 283, 284, 286, 296, 298, 299, 304, 307, 308, 311, 312, 314, 323, 328, 329, 333, 334, 335, 343, 345, 346, 348, 353, 354, 356, 357, 360, 361, 364, 367, 368, 370, 373, 375, 377, 379, 380, 384, 390, 391, 396, 399, 401, 403, 404, 405, 410, 414, 417, 422, 424, 425, 428, 429, 430, 435, 436, 437, 438, 442, 443, 445, 447, 449, 451, 454, 455, 456, 457, 458, 459, 461, 464, 465, 467, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "like": [0, 1, 3, 5, 6, 7, 10, 12, 13, 16, 18, 23, 25, 28, 31, 33, 34, 35, 36, 42, 43, 45, 46, 49, 54, 55, 57, 59, 60, 62, 63, 65, 67, 71, 72, 75, 76, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 116, 117, 119, 120, 121, 123, 124, 125, 128, 131, 132, 133, 134, 136, 138, 139, 141, 142, 145, 148, 150, 151, 154, 156, 157, 159, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 176, 180, 181, 182, 184, 185, 188, 189, 190, 194, 195, 196, 197, 199, 203, 204, 207, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 232, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 256, 257, 258, 259, 261, 262, 263, 265, 267, 268, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 298, 299, 301, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 339, 341, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 370, 372, 373, 374, 375, 376, 377, 380, 381, 384, 390, 391, 393, 396, 397, 399, 400, 401, 403, 404, 405, 408, 409, 410, 412, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 436, 437, 440, 442, 443, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "itself": [0, 1, 12, 33, 42, 45, 49, 60, 62, 63, 66, 67, 71, 72, 76, 80, 83, 84, 85, 87, 88, 90, 97, 99, 100, 105, 106, 107, 108, 112, 113, 114, 116, 120, 121, 125, 126, 127, 130, 131, 133, 138, 145, 151, 157, 163, 164, 167, 168, 173, 176, 189, 190, 191, 194, 196, 201, 204, 206, 207, 209, 211, 217, 219, 227, 229, 239, 240, 243, 257, 259, 261, 262, 264, 265, 270, 272, 274, 276, 277, 282, 283, 284, 286, 296, 297, 298, 299, 303, 307, 308, 311, 314, 323, 329, 334, 346, 347, 350, 353, 356, 357, 360, 361, 362, 364, 368, 370, 373, 374, 376, 377, 380, 391, 396, 399, 400, 401, 403, 404, 409, 410, 412, 414, 415, 429, 430, 431, 434, 438, 443, 444, 445, 447, 449, 450, 451, 455, 456, 458, 464, 469, 470, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 496], "If": [0, 1, 3, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 22, 23, 24, 25, 28, 31, 33, 34, 35, 36, 38, 39, 42, 43, 45, 47, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 71, 72, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 131, 132, 133, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 203, 204, 207, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 384, 386, 387, 388, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "you": [0, 1, 5, 10, 13, 16, 22, 23, 25, 31, 33, 34, 35, 38, 39, 41, 42, 43, 45, 48, 51, 55, 56, 58, 59, 62, 63, 65, 66, 67, 71, 72, 74, 75, 78, 80, 81, 84, 85, 87, 88, 89, 91, 92, 93, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 131, 133, 134, 135, 138, 145, 152, 153, 154, 156, 159, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 179, 180, 182, 183, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 205, 207, 209, 210, 212, 214, 215, 216, 219, 220, 221, 222, 225, 227, 228, 229, 232, 235, 237, 239, 240, 241, 243, 244, 245, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 298, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 320, 321, 322, 323, 328, 329, 333, 334, 335, 341, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 368, 370, 373, 374, 375, 377, 379, 380, 382, 383, 384, 386, 390, 391, 395, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498], "want": [0, 5, 7, 23, 25, 32, 33, 34, 35, 55, 62, 67, 71, 72, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 95, 96, 98, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 120, 121, 126, 127, 131, 133, 138, 144, 148, 154, 156, 157, 161, 164, 165, 168, 170, 172, 180, 182, 189, 190, 193, 196, 203, 206, 207, 210, 214, 215, 216, 219, 222, 225, 229, 232, 239, 240, 242, 244, 245, 249, 256, 257, 259, 261, 262, 264, 265, 266, 270, 273, 281, 282, 283, 284, 287, 290, 291, 293, 298, 304, 307, 308, 309, 311, 312, 314, 315, 317, 322, 323, 328, 329, 333, 334, 341, 343, 344, 347, 348, 351, 353, 354, 356, 357, 360, 361, 364, 368, 370, 373, 375, 379, 380, 384, 396, 399, 401, 403, 404, 405, 409, 410, 413, 415, 417, 422, 428, 436, 437, 440, 441, 443, 444, 447, 453, 454, 455, 456, 457, 458, 459, 461, 464, 465, 467, 468, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 495, 496], "contribut": [0, 35, 67, 78, 90, 92, 99, 122, 194, 244, 249, 265, 323, 334, 412, 441, 447, 469, 475, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pleas": [0, 1, 5, 10, 24, 33, 35, 63, 83, 90, 92, 100, 112, 113, 114, 115, 116, 117, 120, 122, 131, 134, 140, 149, 152, 164, 173, 180, 189, 237, 244, 256, 262, 265, 273, 281, 282, 283, 284, 303, 308, 316, 320, 329, 334, 337, 347, 350, 351, 353, 356, 357, 364, 368, 373, 375, 376, 399, 401, 404, 410, 422, 428, 443, 445, 449, 456, 458, 472, 476, 477, 478, 480, 482, 485, 487, 490, 491, 492, 493, 494, 495, 496], "take": [0, 1, 5, 9, 23, 31, 33, 35, 49, 51, 57, 59, 62, 63, 65, 67, 71, 74, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 91, 96, 97, 99, 104, 105, 106, 107, 113, 114, 116, 117, 118, 119, 122, 131, 133, 134, 137, 138, 147, 151, 152, 154, 157, 163, 164, 165, 171, 173, 180, 182, 188, 189, 190, 191, 194, 196, 199, 200, 203, 204, 207, 208, 212, 215, 216, 217, 220, 221, 222, 223, 229, 232, 237, 239, 240, 241, 244, 246, 249, 257, 258, 259, 261, 263, 265, 266, 273, 276, 277, 281, 282, 283, 285, 286, 290, 291, 298, 303, 307, 308, 311, 314, 315, 322, 323, 329, 333, 334, 339, 340, 342, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 373, 375, 376, 377, 379, 382, 384, 390, 391, 397, 399, 400, 401, 403, 404, 405, 409, 410, 414, 415, 422, 423, 425, 426, 427, 428, 430, 432, 434, 436, 437, 439, 442, 443, 445, 447, 451, 454, 456, 459, 461, 463, 464, 465, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498], "look": [0, 14, 18, 28, 33, 35, 36, 42, 45, 49, 56, 62, 63, 67, 71, 75, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125, 127, 131, 133, 138, 139, 151, 154, 156, 160, 164, 167, 171, 173, 180, 182, 189, 190, 193, 194, 196, 199, 202, 203, 204, 207, 210, 211, 213, 217, 219, 225, 227, 239, 240, 244, 248, 257, 259, 261, 264, 265, 266, 272, 274, 280, 282, 283, 284, 286, 307, 308, 309, 310, 311, 317, 318, 323, 328, 334, 339, 347, 354, 356, 357, 360, 361, 364, 368, 369, 370, 377, 382, 383, 384, 391, 393, 396, 397, 400, 402, 403, 404, 405, 410, 417, 422, 425, 428, 438, 440, 442, 443, 444, 445, 447, 450, 451, 456, 458, 459, 460, 461, 462, 463, 464, 465, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 495], "deal": [0, 15, 16, 35, 42, 62, 63, 67, 80, 84, 99, 116, 117, 119, 131, 137, 170, 171, 208, 210, 211, 219, 233, 239, 254, 273, 281, 297, 298, 307, 314, 333, 340, 342, 353, 381, 399, 405, 409, 428, 441, 446, 455, 461, 477, 479, 480, 481, 482, 485, 487, 488, 490, 492], "bug": [0, 35, 56, 58, 62, 67, 80, 84, 85, 90, 91, 96, 98, 101, 105, 107, 108, 114, 115, 119, 137, 164, 190, 222, 239, 256, 257, 273, 286, 299, 308, 311, 314, 323, 356, 357, 364, 377, 380, 383, 404, 422, 459, 461, 468, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "page": [0, 1, 18, 63, 67, 71, 80, 92, 93, 96, 97, 98, 99, 104, 107, 114, 117, 120, 121, 126, 131, 136, 137, 138, 142, 145, 148, 163, 171, 179, 182, 186, 190, 203, 225, 229, 239, 241, 261, 266, 269, 272, 273, 281, 282, 283, 284, 286, 293, 299, 308, 319, 328, 329, 337, 343, 348, 353, 356, 358, 363, 366, 371, 376, 380, 381, 384, 390, 399, 410, 418, 422, 428, 435, 437, 439, 441, 449, 455, 466, 468, 469, 470, 476, 477, 479, 481, 482, 483, 484, 489, 490, 493, 494, 495], "inform": [0, 1, 3, 4, 5, 7, 11, 13, 14, 23, 25, 33, 34, 35, 42, 45, 57, 59, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 97, 98, 99, 100, 101, 105, 107, 108, 110, 111, 113, 116, 119, 120, 121, 122, 123, 126, 129, 131, 132, 133, 134, 135, 138, 142, 145, 148, 152, 153, 155, 156, 157, 164, 165, 167, 171, 173, 175, 176, 179, 182, 184, 185, 186, 188, 189, 190, 194, 196, 199, 201, 203, 204, 206, 207, 209, 210, 211, 215, 217, 219, 221, 223, 224, 225, 227, 229, 230, 237, 239, 240, 241, 242, 243, 247, 249, 251, 254, 256, 257, 259, 261, 262, 265, 266, 267, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 291, 293, 298, 301, 302, 303, 306, 307, 311, 314, 317, 318, 320, 322, 323, 326, 327, 328, 329, 330, 331, 334, 335, 343, 344, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 360, 363, 364, 368, 373, 374, 376, 377, 380, 381, 384, 388, 390, 391, 395, 396, 397, 399, 401, 403, 404, 406, 409, 410, 413, 414, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 454, 456, 458, 460, 461, 463, 465, 467, 468, 470, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "how": [0, 1, 5, 7, 11, 33, 35, 42, 57, 61, 62, 63, 67, 71, 72, 75, 76, 80, 81, 84, 85, 86, 87, 88, 89, 99, 100, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 123, 124, 125, 128, 131, 133, 134, 137, 138, 144, 145, 149, 151, 153, 154, 157, 160, 162, 163, 164, 167, 168, 171, 173, 176, 180, 185, 187, 188, 189, 194, 196, 197, 199, 200, 202, 203, 205, 208, 209, 214, 215, 216, 221, 225, 227, 232, 236, 237, 239, 240, 241, 244, 245, 248, 249, 250, 256, 257, 258, 261, 265, 266, 268, 270, 273, 274, 276, 277, 281, 282, 283, 284, 287, 290, 293, 298, 299, 303, 306, 308, 309, 311, 313, 314, 318, 323, 326, 331, 333, 334, 335, 336, 337, 346, 347, 348, 353, 354, 357, 359, 360, 361, 362, 364, 365, 368, 373, 379, 380, 381, 382, 383, 391, 395, 397, 401, 403, 404, 405, 409, 410, 417, 422, 423, 425, 434, 436, 440, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 464, 467, 469, 470, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "do": [0, 1, 2, 5, 7, 10, 14, 15, 16, 18, 22, 23, 28, 33, 34, 35, 36, 42, 43, 51, 55, 58, 59, 60, 62, 63, 67, 71, 72, 74, 75, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 131, 133, 134, 137, 138, 141, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 160, 163, 164, 171, 172, 173, 174, 176, 180, 182, 184, 189, 190, 191, 192, 194, 197, 199, 202, 203, 204, 207, 208, 209, 210, 211, 215, 216, 219, 221, 222, 225, 227, 228, 230, 237, 239, 240, 241, 242, 244, 246, 249, 250, 251, 254, 257, 258, 261, 262, 265, 267, 268, 270, 272, 273, 274, 280, 281, 282, 283, 284, 286, 290, 293, 294, 298, 299, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 318, 320, 321, 323, 329, 331, 334, 335, 337, 343, 345, 346, 347, 348, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 389, 390, 391, 393, 395, 397, 399, 401, 403, 404, 405, 409, 410, 414, 415, 416, 417, 418, 421, 422, 425, 426, 428, 429, 430, 434, 436, 437, 440, 441, 442, 443, 444, 445, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 464, 465, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "so": [0, 1, 5, 7, 10, 11, 15, 20, 22, 23, 25, 28, 31, 33, 34, 35, 41, 42, 45, 49, 53, 56, 58, 61, 62, 63, 65, 67, 71, 72, 74, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 127, 131, 132, 133, 138, 143, 149, 151, 152, 153, 154, 156, 160, 163, 164, 166, 167, 170, 171, 172, 173, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 196, 199, 203, 204, 207, 210, 213, 214, 215, 216, 217, 219, 221, 222, 223, 225, 227, 228, 229, 230, 232, 235, 239, 240, 241, 242, 244, 246, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 264, 265, 268, 269, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 293, 298, 299, 304, 306, 307, 308, 309, 311, 312, 314, 317, 323, 325, 327, 329, 333, 334, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 369, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 388, 390, 391, 393, 399, 400, 401, 403, 404, 405, 410, 414, 416, 417, 420, 421, 422, 424, 425, 426, 428, 430, 431, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 451, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498], "new": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 72, 77, 80, 84, 85, 86, 87, 88, 90, 91, 96, 97, 98, 99, 100, 101, 104, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 131, 132, 133, 134, 138, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 154, 156, 157, 162, 163, 164, 166, 167, 168, 170, 171, 173, 174, 176, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 194, 196, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 237, 239, 240, 241, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 295, 296, 298, 299, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 367, 368, 370, 373, 375, 376, 377, 379, 380, 381, 382, 384, 387, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 413, 414, 417, 418, 420, 422, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 469, 470, 471, 474, 476, 497], "alwai": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 57, 58, 59, 60, 62, 63, 66, 71, 74, 78, 80, 81, 85, 87, 88, 90, 91, 92, 97, 99, 100, 101, 104, 105, 106, 107, 108, 112, 113, 114, 116, 117, 120, 121, 123, 126, 131, 133, 138, 145, 146, 147, 151, 154, 156, 157, 159, 162, 164, 167, 170, 171, 173, 176, 179, 180, 188, 189, 190, 192, 194, 196, 197, 199, 203, 204, 207, 209, 210, 217, 219, 220, 221, 222, 224, 225, 227, 228, 230, 235, 237, 239, 240, 244, 248, 249, 250, 251, 254, 256, 258, 259, 261, 262, 264, 265, 266, 270, 272, 273, 274, 277, 281, 282, 284, 285, 286, 287, 290, 298, 299, 306, 307, 308, 309, 310, 311, 314, 318, 321, 322, 324, 331, 332, 334, 339, 345, 346, 347, 348, 349, 350, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 369, 373, 375, 377, 379, 380, 381, 382, 384, 391, 392, 399, 401, 403, 404, 409, 410, 414, 415, 417, 420, 422, 424, 425, 428, 430, 432, 437, 439, 440, 442, 443, 444, 445, 447, 450, 451, 455, 456, 457, 458, 461, 464, 465, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "welcom": [0, 1, 84, 104, 152, 168, 237, 298, 303, 399, 441, 463, 482, 489], "mani": [0, 7, 13, 16, 18, 33, 34, 35, 56, 57, 62, 63, 67, 71, 72, 76, 78, 81, 83, 84, 85, 87, 88, 90, 91, 95, 96, 98, 99, 104, 106, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 128, 131, 133, 137, 140, 145, 149, 151, 152, 156, 167, 171, 173, 176, 179, 180, 182, 187, 188, 189, 190, 191, 194, 196, 199, 203, 204, 207, 208, 217, 222, 226, 237, 239, 241, 244, 246, 249, 250, 256, 257, 258, 261, 264, 265, 269, 272, 273, 274, 276, 277, 280, 282, 290, 293, 298, 299, 303, 306, 307, 308, 310, 311, 313, 314, 318, 320, 321, 322, 323, 329, 332, 333, 334, 340, 343, 345, 347, 348, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 373, 374, 377, 379, 380, 381, 382, 383, 384, 390, 395, 396, 399, 400, 401, 403, 404, 405, 406, 410, 417, 418, 420, 421, 422, 425, 430, 439, 441, 442, 443, 447, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "thank": [0, 89, 107, 112, 116, 119, 168, 214, 249, 298, 356, 377, 401, 441, 477, 478, 479, 480, 481, 482, 483, 484, 489, 490, 493, 494], "go": [0, 33, 42, 71, 80, 85, 87, 88, 90, 91, 96, 97, 101, 104, 105, 106, 107, 108, 110, 113, 114, 116, 117, 120, 121, 126, 128, 138, 145, 149, 150, 151, 157, 164, 190, 196, 199, 202, 207, 210, 214, 250, 261, 294, 299, 307, 308, 311, 323, 328, 334, 349, 356, 357, 364, 368, 370, 373, 374, 377, 380, 381, 395, 404, 405, 409, 410, 422, 428, 434, 443, 455, 460, 461, 468, 469, 472, 476, 477, 478, 479, 480, 482, 483, 484, 485, 488, 490], "fred": [0, 114, 329, 384, 450, 477, 478, 479, 480, 482, 483, 493], "l": [0, 5, 34, 83, 84, 85, 88, 90, 92, 96, 97, 101, 107, 110, 114, 116, 117, 118, 121, 123, 132, 133, 149, 151, 156, 163, 173, 175, 176, 189, 190, 203, 207, 239, 258, 283, 284, 286, 298, 299, 306, 308, 309, 312, 315, 334, 346, 347, 360, 362, 363, 364, 373, 374, 382, 395, 399, 401, 402, 437, 438, 450, 455, 456, 457, 466, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 492, 495], "drake": [0, 477, 478, 479, 480, 482, 483], "jr": [0, 96, 478, 479, 480, 482, 483], "creator": [0, 71, 86, 99, 114, 298, 308, 347, 414, 426, 437, 438, 443, 449], "origin": [0, 5, 7, 9, 14, 33, 34, 42, 43, 59, 61, 62, 66, 71, 72, 85, 92, 97, 104, 106, 108, 113, 115, 116, 118, 119, 122, 123, 124, 131, 133, 138, 152, 154, 157, 162, 165, 167, 171, 173, 179, 180, 182, 184, 186, 188, 189, 190, 194, 199, 201, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 224, 227, 239, 240, 241, 244, 248, 250, 257, 261, 264, 265, 270, 273, 276, 277, 281, 282, 284, 286, 290, 293, 298, 299, 307, 308, 311, 312, 314, 323, 327, 333, 334, 339, 343, 346, 347, 350, 353, 356, 357, 359, 360, 361, 364, 365, 368, 373, 377, 380, 381, 384, 396, 397, 399, 401, 403, 404, 405, 409, 410, 414, 415, 417, 422, 423, 428, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 451, 455, 456, 459, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495], "toolset": [0, 105, 276, 307, 466, 483], "writer": [0, 35, 42, 67, 85, 88, 119, 138, 148, 162, 171, 183, 207, 231, 260, 266, 273, 308, 334, 394, 426, 428, 431, 470, 480, 487, 492, 494], "much": [0, 18, 23, 35, 54, 62, 66, 72, 80, 85, 87, 88, 90, 96, 97, 99, 100, 104, 107, 114, 116, 117, 119, 120, 131, 132, 138, 149, 164, 167, 171, 173, 180, 184, 189, 199, 204, 207, 208, 217, 221, 239, 250, 270, 273, 276, 284, 285, 286, 290, 298, 307, 308, 310, 314, 318, 323, 334, 341, 345, 353, 359, 364, 370, 384, 391, 397, 399, 401, 403, 404, 405, 425, 426, 434, 439, 442, 447, 454, 455, 461, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 495, 496], "content": [0, 5, 7, 8, 9, 12, 25, 32, 33, 38, 42, 45, 53, 57, 60, 63, 65, 71, 74, 83, 84, 100, 101, 104, 107, 113, 114, 116, 119, 120, 121, 125, 132, 133, 134, 138, 145, 156, 162, 164, 166, 170, 171, 173, 176, 179, 189, 190, 192, 195, 197, 200, 204, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 229, 230, 231, 237, 239, 240, 241, 244, 248, 249, 251, 254, 255, 256, 259, 261, 265, 266, 267, 268, 269, 270, 272, 273, 277, 283, 286, 288, 291, 293, 294, 296, 299, 300, 308, 311, 314, 315, 317, 322, 326, 330, 332, 335, 347, 350, 356, 357, 360, 361, 363, 365, 368, 369, 373, 375, 377, 378, 379, 384, 393, 400, 406, 408, 409, 410, 411, 414, 417, 422, 424, 426, 428, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 444, 445, 447, 450, 455, 456, 458, 461, 464, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 498], "docutil": [0, 75, 80, 483], "project": [0, 1, 69, 71, 72, 75, 78, 80, 87, 89, 96, 97, 98, 103, 109, 114, 121, 122, 123, 133, 164, 180, 196, 206, 207, 224, 237, 244, 249, 265, 266, 276, 307, 322, 329, 401, 403, 404, 414, 436, 437, 440, 441, 449, 456, 459, 466, 469, 474, 476, 477, 480, 483, 484, 485, 488, 489, 490, 491, 493, 496], "creat": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 28, 29, 31, 34, 35, 39, 40, 42, 43, 45, 49, 51, 54, 57, 58, 59, 61, 62, 65, 66, 67, 74, 75, 76, 77, 78, 80, 83, 85, 87, 88, 89, 90, 93, 98, 99, 100, 104, 105, 108, 112, 113, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 150, 152, 157, 162, 163, 164, 166, 170, 171, 173, 174, 176, 179, 180, 182, 183, 184, 187, 188, 189, 190, 194, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 212, 213, 214, 215, 216, 217, 219, 221, 222, 224, 225, 227, 229, 232, 233, 235, 237, 238, 239, 240, 241, 244, 246, 248, 250, 254, 255, 256, 259, 261, 262, 264, 265, 266, 267, 269, 270, 273, 274, 281, 282, 283, 284, 285, 286, 287, 293, 296, 297, 298, 299, 300, 303, 308, 311, 312, 313, 314, 315, 317, 320, 322, 323, 327, 329, 334, 337, 338, 343, 345, 347, 349, 350, 351, 354, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 393, 395, 396, 397, 399, 400, 401, 403, 404, 410, 412, 413, 417, 418, 420, 422, 425, 426, 428, 429, 430, 431, 432, 434, 435, 437, 438, 440, 441, 442, 444, 445, 447, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 464, 465, 466, 467, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496], "suit": [0, 62, 67, 87, 90, 96, 97, 99, 107, 113, 114, 174, 200, 207, 239, 244, 269, 273, 298, 307, 356, 357, 359, 373, 397, 403, 404, 415, 437, 442, 454, 461, 465, 467, 471, 476, 482, 483, 484, 485, 487, 488, 489, 491, 493, 494, 496], "fredrik": [0, 97, 107, 441, 477, 478, 479, 481, 482, 484, 486, 489], "lundh": [0, 97, 107, 441, 477, 478, 479, 481, 482, 484, 489], "hi": [0, 85, 96, 114, 160, 189, 244, 319, 360, 384, 401, 441, 450, 477, 479, 483, 484, 491, 493], "altern": [0, 10, 18, 23, 45, 62, 67, 71, 72, 77, 85, 90, 93, 96, 97, 99, 105, 107, 116, 119, 120, 122, 123, 127, 131, 133, 138, 141, 144, 149, 150, 151, 156, 160, 161, 164, 167, 171, 173, 174, 180, 186, 188, 189, 190, 191, 194, 195, 199, 206, 207, 210, 213, 214, 219, 224, 225, 228, 229, 232, 235, 237, 239, 242, 256, 262, 263, 266, 269, 276, 282, 283, 284, 287, 290, 298, 305, 307, 308, 310, 312, 314, 320, 321, 329, 331, 347, 351, 352, 353, 354, 355, 356, 357, 360, 361, 363, 364, 368, 369, 373, 374, 380, 382, 383, 384, 390, 391, 396, 399, 401, 403, 404, 405, 409, 412, 414, 415, 417, 420, 422, 440, 441, 445, 446, 447, 448, 460, 461, 463, 464, 465, 467, 468, 470, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 491, 492, 493, 494, 495, 496], "refer": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 67, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 96, 98, 99, 105, 109, 111, 112, 113, 114, 116, 120, 121, 122, 125, 126, 129, 131, 133, 135, 138, 141, 145, 148, 149, 151, 152, 153, 154, 155, 157, 167, 171, 173, 177, 180, 183, 184, 190, 195, 196, 198, 204, 206, 219, 224, 225, 226, 227, 229, 236, 239, 240, 241, 242, 244, 247, 249, 252, 253, 254, 257, 259, 261, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 282, 283, 284, 286, 288, 293, 299, 303, 304, 308, 309, 312, 313, 314, 317, 318, 321, 322, 328, 329, 334, 336, 339, 344, 347, 348, 349, 353, 357, 360, 361, 363, 368, 371, 376, 377, 380, 381, 383, 390, 391, 392, 396, 400, 401, 403, 404, 405, 409, 410, 411, 415, 420, 424, 425, 426, 430, 432, 436, 437, 440, 442, 443, 444, 449, 450, 451, 454, 455, 456, 459, 460, 461, 464, 469, 470, 471, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "which": [0, 1, 2, 3, 5, 7, 9, 10, 12, 14, 15, 16, 18, 20, 22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 134, 135, 137, 138, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 201, 203, 204, 206, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 254, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 368, 369, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 389, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "got": [0, 85, 101, 120, 124, 138, 148, 150, 207, 282, 298, 351, 356, 401, 410, 445, 456, 464, 470, 482, 486, 495], "good": [0, 1, 16, 35, 51, 62, 75, 78, 87, 90, 91, 96, 97, 98, 99, 101, 105, 106, 112, 113, 114, 116, 117, 119, 120, 121, 131, 133, 151, 164, 167, 168, 173, 180, 183, 189, 190, 196, 203, 207, 212, 221, 225, 239, 249, 250, 298, 307, 308, 310, 314, 322, 334, 350, 357, 377, 379, 382, 383, 399, 401, 403, 405, 426, 434, 441, 443, 455, 456, 458, 460, 461, 474, 475, 477, 478, 480, 481, 483, 484, 488], "idea": [0, 16, 35, 51, 71, 74, 78, 80, 90, 91, 92, 96, 97, 98, 99, 101, 104, 105, 106, 112, 113, 114, 117, 121, 131, 152, 196, 203, 207, 225, 276, 281, 310, 322, 370, 391, 399, 443, 456, 460, 469, 477, 479, 480, 481, 484, 485, 486, 487, 488, 489, 493], "peopl": [0, 1, 35, 90, 98, 99, 105, 107, 111, 119, 190, 199, 203, 207, 244, 249, 307, 359, 428, 456, 459, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 490, 493, 495], "have": [0, 1, 2, 5, 7, 10, 11, 18, 22, 23, 24, 28, 31, 33, 34, 35, 42, 47, 49, 57, 58, 59, 62, 63, 66, 67, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 91, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 141, 143, 144, 146, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 194, 196, 197, 199, 202, 203, 204, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 225, 227, 229, 232, 235, 237, 239, 240, 241, 244, 245, 246, 248, 249, 250, 251, 254, 256, 257, 258, 261, 262, 264, 265, 266, 267, 270, 272, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 297, 298, 299, 301, 303, 306, 307, 308, 309, 310, 311, 312, 314, 317, 318, 320, 322, 323, 326, 327, 329, 331, 333, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 386, 390, 391, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 412, 413, 414, 415, 416, 417, 420, 422, 423, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "languag": [0, 1, 16, 35, 56, 63, 67, 71, 78, 80, 81, 84, 85, 86, 95, 96, 99, 101, 105, 106, 107, 110, 112, 114, 116, 118, 119, 120, 121, 123, 124, 133, 171, 173, 180, 189, 193, 210, 216, 219, 223, 231, 236, 239, 254, 260, 261, 265, 269, 272, 281, 288, 296, 314, 322, 334, 356, 360, 368, 370, 378, 379, 384, 392, 394, 400, 403, 417, 425, 426, 434, 441, 443, 445, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 469, 472, 476, 478, 479, 485, 498], "standard": [0, 5, 7, 18, 24, 31, 32, 33, 34, 42, 58, 60, 62, 63, 65, 67, 72, 74, 77, 78, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 106, 107, 108, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131, 138, 145, 146, 149, 154, 155, 156, 157, 158, 160, 163, 164, 166, 167, 170, 173, 176, 179, 180, 188, 189, 190, 191, 195, 196, 199, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 221, 222, 223, 225, 227, 228, 232, 233, 234, 237, 238, 239, 244, 249, 252, 253, 257, 259, 261, 262, 264, 265, 270, 272, 273, 276, 281, 282, 283, 284, 286, 287, 288, 290, 291, 293, 294, 296, 298, 300, 303, 308, 309, 310, 312, 314, 316, 317, 318, 320, 321, 323, 324, 326, 327, 329, 333, 334, 339, 341, 343, 346, 347, 348, 349, 351, 353, 354, 359, 361, 364, 368, 369, 370, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 385, 390, 394, 396, 399, 401, 402, 403, 404, 405, 409, 410, 412, 413, 415, 417, 422, 423, 425, 428, 434, 436, 437, 440, 441, 442, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 498], "librari": [0, 7, 18, 23, 24, 33, 34, 35, 42, 45, 56, 58, 62, 65, 67, 72, 74, 77, 78, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 125, 129, 131, 135, 138, 145, 146, 151, 152, 155, 158, 179, 180, 182, 190, 191, 196, 197, 198, 199, 200, 205, 207, 208, 217, 222, 226, 233, 242, 244, 249, 257, 261, 264, 266, 271, 272, 273, 277, 279, 281, 282, 284, 290, 297, 298, 302, 307, 308, 309, 311, 314, 317, 323, 328, 329, 334, 335, 343, 345, 346, 348, 349, 353, 356, 357, 359, 360, 361, 368, 369, 370, 373, 377, 380, 381, 383, 384, 390, 393, 394, 399, 401, 403, 405, 406, 409, 414, 415, 422, 424, 425, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 454, 460, 461, 462, 463, 465, 468, 469, 470, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498], "see": [0, 4, 5, 7, 10, 11, 14, 17, 18, 23, 26, 30, 31, 33, 34, 35, 40, 42, 45, 47, 51, 52, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 71, 72, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 148, 149, 151, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 168, 169, 171, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 194, 196, 197, 199, 201, 203, 204, 206, 207, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 241, 243, 244, 247, 248, 249, 250, 253, 256, 257, 259, 261, 262, 263, 264, 265, 266, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 287, 289, 290, 293, 294, 296, 298, 299, 302, 303, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 319, 320, 323, 325, 326, 328, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 388, 390, 391, 395, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 414, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "misc": [0, 35, 67, 92, 108, 237, 360, 391, 471, 477, 480, 481, 482, 483, 484, 485, 489, 491, 498], "ack": [0, 191, 483], "distribut": [0, 31, 33, 35, 56, 65, 67, 74, 78, 79, 82, 85, 86, 87, 89, 92, 93, 95, 96, 97, 98, 99, 108, 116, 122, 125, 135, 136, 138, 146, 190, 199, 203, 206, 223, 244, 249, 265, 269, 286, 290, 295, 298, 299, 305, 317, 318, 356, 359, 370, 373, 384, 392, 403, 429, 436, 441, 460, 465, 469, 471, 473, 475, 476, 477, 478, 480, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496], "partial": [0, 24, 34, 67, 100, 107, 119, 120, 125, 129, 134, 138, 139, 141, 148, 173, 190, 194, 200, 211, 220, 221, 238, 239, 262, 265, 269, 270, 276, 284, 285, 288, 290, 299, 337, 339, 353, 354, 357, 360, 364, 373, 424, 428, 442, 477, 480, 481, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 498], "list": [0, 1, 2, 5, 7, 14, 16, 18, 23, 31, 33, 34, 35, 40, 42, 49, 51, 53, 54, 56, 57, 58, 59, 62, 63, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 85, 87, 88, 89, 91, 93, 96, 98, 99, 101, 104, 105, 106, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 131, 132, 133, 136, 137, 138, 140, 141, 142, 145, 148, 151, 152, 153, 157, 163, 164, 168, 171, 173, 174, 176, 180, 182, 183, 184, 186, 188, 189, 190, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 207, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 230, 232, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 325, 326, 327, 329, 333, 334, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 364, 367, 368, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 415, 417, 418, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 450, 451, 455, 458, 460, 461, 463, 465, 466, 468, 469, 470, 471, 472, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "It": [0, 1, 2, 5, 6, 7, 9, 10, 11, 15, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 42, 43, 44, 45, 46, 49, 51, 54, 55, 56, 57, 60, 62, 63, 65, 66, 67, 71, 72, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 137, 138, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 162, 164, 165, 167, 168, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 188, 189, 190, 194, 196, 197, 199, 200, 201, 203, 204, 208, 209, 210, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 232, 234, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 264, 265, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 290, 293, 298, 299, 303, 304, 307, 308, 309, 310, 311, 312, 314, 317, 318, 319, 321, 322, 323, 324, 325, 327, 329, 331, 333, 334, 335, 336, 337, 339, 340, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 370, 373, 375, 376, 377, 380, 381, 382, 383, 384, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 468, 469, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "onli": [0, 3, 5, 6, 7, 9, 10, 13, 22, 23, 24, 26, 28, 31, 33, 34, 35, 38, 39, 41, 42, 43, 45, 48, 49, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 71, 72, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 141, 143, 144, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 162, 163, 164, 166, 167, 168, 171, 173, 174, 176, 178, 179, 180, 182, 183, 184, 188, 189, 190, 192, 196, 197, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 235, 237, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 256, 257, 258, 259, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 296, 297, 298, 299, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 340, 342, 343, 345, 346, 347, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 384, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 496, 498], "input": [0, 5, 9, 14, 15, 30, 34, 35, 48, 62, 63, 65, 67, 71, 85, 87, 90, 97, 99, 101, 105, 107, 111, 113, 118, 119, 120, 121, 123, 125, 129, 131, 133, 134, 138, 145, 149, 154, 155, 156, 157, 159, 162, 164, 168, 170, 171, 172, 173, 180, 182, 186, 188, 189, 196, 199, 203, 204, 207, 208, 209, 210, 211, 214, 215, 217, 221, 222, 223, 227, 233, 235, 236, 239, 248, 249, 250, 254, 258, 259, 261, 269, 273, 276, 277, 279, 282, 284, 285, 286, 289, 290, 298, 299, 305, 306, 307, 308, 309, 310, 312, 316, 317, 322, 324, 326, 329, 332, 334, 335, 337, 343, 346, 351, 353, 356, 357, 360, 364, 368, 369, 374, 376, 377, 379, 381, 383, 384, 390, 391, 392, 396, 403, 404, 409, 410, 412, 416, 422, 423, 426, 427, 428, 429, 430, 431, 432, 436, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 456, 457, 458, 459, 460, 463, 464, 465, 467, 470, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "commun": [0, 67, 80, 92, 97, 99, 114, 117, 122, 137, 138, 142, 145, 149, 152, 207, 226, 256, 259, 261, 269, 272, 284, 298, 299, 308, 314, 320, 324, 348, 350, 353, 354, 357, 363, 364, 380, 391, 401, 422, 434, 441, 461, 467, 474, 477, 478, 481, 482, 483, 488, 489, 492, 494, 495], "hawonder": [0, 90, 97, 105, 118, 164, 188, 323, 449, 477, 480, 489], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 497, 498], "11": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 497, 498], "matur": 1, "program": [1, 5, 15, 16, 31, 33, 34, 42, 44, 45, 65, 67, 71, 72, 80, 81, 84, 85, 89, 90, 94, 95, 99, 101, 105, 106, 109, 113, 114, 116, 120, 121, 122, 123, 125, 129, 131, 133, 136, 137, 138, 145, 148, 149, 152, 153, 156, 159, 163, 164, 168, 170, 171, 172, 173, 177, 179, 180, 181, 182, 188, 189, 196, 198, 199, 207, 214, 215, 217, 222, 227, 228, 230, 237, 239, 240, 241, 242, 248, 260, 261, 262, 265, 269, 270, 278, 282, 284, 286, 287, 291, 297, 301, 307, 308, 309, 311, 312, 314, 318, 321, 322, 323, 324, 326, 328, 329, 331, 334, 337, 343, 345, 348, 353, 354, 356, 357, 360, 363, 364, 368, 369, 375, 377, 380, 382, 383, 390, 391, 395, 396, 399, 401, 403, 409, 410, 413, 415, 417, 418, 420, 422, 425, 426, 434, 436, 437, 441, 442, 443, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 460, 461, 465, 467, 468, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495], "establish": [1, 113, 136, 138, 148, 152, 207, 237, 250, 261, 262, 284, 298, 314, 317, 320, 334, 343, 351, 357, 374, 410, 420, 442, 443, 444, 484, 489], "reput": 1, "stabil": [1, 4, 32, 67, 92, 239, 250, 276, 487, 488], "In": [1, 5, 7, 10, 11, 14, 17, 18, 22, 23, 24, 28, 31, 33, 34, 35, 42, 45, 48, 49, 56, 57, 58, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 133, 134, 137, 138, 139, 140, 144, 145, 150, 151, 152, 154, 158, 162, 163, 164, 167, 171, 172, 173, 174, 175, 180, 182, 183, 184, 188, 189, 190, 194, 196, 197, 199, 201, 203, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 232, 235, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 255, 257, 258, 261, 262, 264, 265, 266, 269, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 298, 299, 303, 304, 307, 308, 309, 311, 312, 314, 317, 321, 322, 323, 324, 325, 328, 331, 333, 334, 336, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 369, 371, 373, 374, 377, 378, 379, 380, 381, 382, 384, 390, 391, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 414, 415, 416, 417, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 470, 471, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 498], "order": [1, 4, 7, 10, 24, 28, 31, 33, 34, 43, 45, 58, 62, 63, 67, 71, 74, 76, 80, 81, 84, 85, 87, 88, 90, 98, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 127, 129, 131, 132, 133, 137, 138, 145, 146, 151, 153, 158, 160, 162, 164, 166, 168, 171, 173, 179, 180, 182, 184, 188, 190, 191, 192, 196, 197, 199, 200, 203, 204, 207, 210, 214, 216, 217, 219, 222, 225, 227, 228, 232, 238, 239, 241, 242, 243, 244, 245, 246, 247, 250, 255, 259, 261, 262, 264, 265, 269, 270, 272, 273, 274, 276, 277, 281, 282, 284, 286, 290, 296, 298, 299, 303, 306, 308, 310, 311, 314, 317, 318, 319, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 340, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 368, 373, 375, 377, 379, 380, 381, 384, 391, 396, 397, 399, 400, 401, 403, 409, 410, 413, 414, 415, 417, 422, 425, 426, 428, 430, 436, 437, 439, 442, 443, 444, 446, 447, 448, 450, 455, 456, 457, 458, 459, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498], "maintain": [1, 33, 35, 67, 71, 72, 75, 80, 83, 85, 88, 92, 96, 99, 104, 106, 112, 114, 118, 121, 122, 131, 132, 160, 171, 173, 180, 182, 189, 194, 199, 206, 210, 221, 222, 227, 239, 241, 250, 262, 264, 265, 266, 270, 281, 289, 307, 322, 323, 340, 354, 363, 368, 370, 375, 381, 390, 403, 415, 417, 418, 422, 427, 440, 445, 447, 449, 455, 456, 465, 466, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 490, 491, 492, 494, 495, 496], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "would": [1, 5, 7, 10, 18, 23, 31, 33, 34, 35, 47, 49, 57, 58, 60, 63, 71, 72, 74, 75, 76, 78, 80, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 112, 113, 114, 116, 117, 119, 121, 123, 124, 125, 127, 131, 132, 133, 137, 138, 141, 150, 151, 164, 167, 171, 173, 174, 179, 180, 182, 183, 185, 189, 190, 194, 196, 197, 198, 199, 201, 203, 207, 210, 213, 214, 216, 217, 219, 221, 222, 226, 227, 239, 240, 242, 244, 246, 248, 249, 250, 254, 256, 257, 259, 261, 264, 265, 268, 269, 270, 272, 273, 276, 277, 282, 283, 284, 287, 289, 290, 291, 298, 304, 307, 308, 311, 318, 320, 322, 323, 328, 331, 333, 334, 335, 337, 345, 346, 347, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 368, 370, 371, 373, 375, 377, 380, 384, 387, 391, 396, 397, 399, 401, 402, 403, 404, 405, 409, 410, 414, 415, 417, 418, 420, 423, 425, 427, 428, 436, 437, 438, 440, 441, 442, 443, 445, 447, 449, 450, 451, 455, 456, 457, 458, 459, 461, 462, 464, 465, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496], "know": [1, 31, 33, 35, 58, 62, 63, 71, 74, 80, 85, 87, 88, 89, 90, 92, 97, 98, 99, 101, 105, 107, 111, 113, 114, 116, 117, 119, 120, 121, 128, 131, 144, 151, 152, 164, 167, 174, 188, 189, 191, 194, 203, 207, 209, 214, 215, 222, 237, 250, 257, 259, 265, 274, 281, 283, 284, 286, 287, 298, 307, 308, 345, 347, 350, 353, 357, 359, 360, 368, 384, 391, 397, 399, 404, 410, 415, 420, 422, 431, 434, 436, 437, 440, 447, 449, 451, 454, 455, 458, 459, 461, 462, 464, 465, 466, 476, 477, 478, 479, 482, 483, 484, 490, 491, 493], "ani": [1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 20, 22, 23, 24, 27, 28, 31, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 87, 88, 89, 90, 97, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 131, 133, 134, 138, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 176, 179, 180, 183, 184, 186, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 234, 235, 237, 239, 240, 241, 244, 245, 246, 248, 249, 250, 251, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 290, 291, 293, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 317, 320, 323, 324, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 368, 369, 373, 374, 375, 377, 379, 380, 381, 384, 387, 390, 391, 393, 395, 396, 397, 399, 400, 403, 405, 409, 410, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 455, 456, 457, 458, 459, 461, 463, 464, 465, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "defici": [1, 365, 416], "find": [1, 31, 33, 60, 62, 67, 71, 72, 74, 78, 80, 81, 84, 85, 87, 89, 90, 92, 95, 98, 99, 101, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 119, 120, 121, 123, 124, 129, 131, 133, 150, 154, 160, 164, 171, 173, 190, 194, 196, 203, 204, 207, 209, 210, 211, 213, 219, 221, 225, 227, 235, 239, 240, 244, 245, 249, 250, 261, 264, 265, 266, 269, 270, 273, 281, 282, 288, 293, 295, 301, 307, 308, 314, 315, 317, 328, 338, 347, 353, 357, 359, 360, 364, 368, 369, 375, 377, 378, 380, 382, 384, 401, 403, 404, 405, 409, 410, 417, 425, 436, 444, 445, 447, 449, 451, 453, 454, 455, 456, 457, 459, 465, 469, 470, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495], "can": [1, 4, 5, 7, 10, 11, 14, 16, 18, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 237, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 387, 388, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "sometim": [1, 35, 67, 78, 80, 81, 85, 86, 90, 91, 96, 97, 99, 104, 105, 106, 107, 108, 111, 112, 114, 116, 117, 119, 120, 121, 122, 123, 125, 127, 131, 134, 147, 151, 164, 171, 180, 182, 184, 189, 190, 199, 201, 203, 207, 217, 227, 237, 239, 240, 249, 254, 261, 270, 274, 276, 283, 286, 303, 307, 308, 314, 321, 323, 333, 334, 357, 358, 381, 384, 399, 401, 404, 405, 410, 428, 443, 445, 449, 451, 455, 456, 457, 463, 467, 468, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496], "faster": [1, 10, 53, 56, 62, 67, 96, 97, 99, 105, 116, 117, 118, 138, 151, 173, 189, 190, 199, 221, 240, 248, 249, 251, 261, 276, 298, 308, 323, 333, 357, 359, 360, 399, 404, 439, 441, 465, 467, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 493, 494, 495, 496, 498], "fix": [1, 20, 35, 42, 54, 56, 62, 67, 80, 89, 90, 91, 92, 95, 96, 97, 99, 101, 104, 105, 107, 115, 116, 117, 121, 122, 123, 125, 131, 133, 137, 138, 164, 172, 173, 174, 189, 190, 195, 196, 201, 207, 215, 237, 239, 250, 257, 261, 269, 276, 298, 303, 305, 308, 314, 329, 334, 356, 360, 361, 363, 364, 380, 387, 401, 404, 422, 423, 428, 442, 468, 470, 477, 481, 482, 483, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "patch": [1, 56, 67, 80, 90, 96, 101, 104, 110, 116, 131, 190, 198, 200, 255, 256, 303, 360, 377, 475, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 492, 493, 495, 496], "streamlin": [1, 488, 492], "process": [1, 5, 7, 23, 32, 34, 35, 45, 57, 62, 64, 65, 67, 72, 74, 75, 77, 80, 81, 84, 85, 87, 89, 90, 91, 92, 96, 98, 99, 104, 107, 108, 110, 111, 113, 116, 117, 119, 120, 121, 122, 123, 125, 126, 129, 131, 133, 134, 137, 142, 143, 145, 146, 148, 149, 152, 158, 162, 163, 164, 168, 171, 177, 179, 182, 188, 189, 190, 196, 199, 207, 214, 215, 217, 224, 226, 227, 228, 231, 232, 239, 240, 241, 242, 244, 246, 249, 254, 255, 259, 261, 262, 265, 269, 270, 272, 275, 276, 281, 282, 283, 284, 285, 286, 289, 293, 295, 307, 310, 311, 314, 323, 324, 329, 330, 331, 334, 337, 339, 343, 344, 346, 347, 348, 349, 351, 353, 354, 356, 358, 360, 362, 363, 364, 368, 369, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 384, 386, 393, 395, 396, 399, 400, 401, 403, 409, 410, 413, 414, 415, 417, 418, 420, 422, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 440, 442, 443, 445, 447, 450, 451, 456, 458, 461, 463, 465, 466, 470, 471, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "involv": [1, 28, 42, 45, 62, 71, 80, 85, 86, 88, 90, 112, 133, 167, 180, 182, 190, 199, 207, 227, 240, 241, 246, 257, 298, 304, 307, 314, 323, 347, 356, 357, 360, 363, 377, 396, 403, 405, 410, 427, 443, 445, 446, 447, 451, 455, 465, 477, 484, 487, 491, 492, 494, 495], "less": [1, 24, 25, 35, 39, 55, 58, 62, 63, 67, 71, 85, 88, 90, 92, 97, 99, 112, 114, 116, 118, 119, 121, 123, 124, 132, 145, 146, 150, 151, 160, 162, 164, 166, 171, 173, 179, 190, 196, 199, 200, 207, 210, 229, 239, 240, 242, 246, 248, 249, 250, 258, 261, 266, 273, 274, 276, 282, 285, 290, 293, 298, 299, 308, 312, 314, 315, 322, 323, 331, 334, 347, 348, 353, 356, 357, 359, 360, 361, 364, 368, 373, 377, 380, 381, 384, 388, 390, 391, 392, 396, 401, 403, 408, 410, 415, 425, 442, 443, 445, 451, 455, 456, 457, 461, 464, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 491, 492, 493, 495, 496], "learn": [1, 83, 85, 87, 89, 90, 91, 92, 95, 96, 99, 101, 104, 105, 107, 108, 116, 119, 164, 189, 199, 207, 261, 272, 290, 314, 346, 356, 359, 384, 399, 426, 454, 455, 457, 458, 460, 469, 479, 480, 482, 483, 484, 489, 493, 494], "propos": [1, 35, 90, 99, 124, 166, 179, 188, 240, 282, 357, 360, 364, 417, 425, 442, 445, 447, 450, 451, 477, 478, 480, 481, 482, 483, 484, 489, 493, 495], "improv": [1, 3, 23, 56, 67, 85, 90, 92, 97, 99, 101, 105, 112, 114, 116, 125, 131, 134, 145, 160, 171, 179, 180, 236, 248, 262, 265, 290, 314, 329, 356, 357, 364, 383, 391, 425, 441, 443, 445, 466, 467, 485, 498], "submit": [1, 104, 114, 120, 151, 164, 179, 261, 298, 441, 477, 484, 489, 490, 492, 493, 494, 495], "report": [1, 7, 22, 24, 33, 35, 45, 48, 71, 84, 85, 97, 98, 110, 111, 113, 115, 116, 119, 131, 133, 145, 152, 164, 165, 179, 188, 189, 190, 204, 207, 210, 217, 219, 227, 230, 239, 246, 247, 255, 270, 274, 276, 294, 298, 307, 308, 318, 321, 323, 325, 329, 334, 343, 344, 348, 350, 355, 357, 358, 360, 368, 377, 382, 384, 395, 401, 403, 410, 415, 428, 430, 446, 458, 467, 469, 470, 476, 477, 479, 480, 481, 482, 483, 484, 487, 489, 490, 491, 493, 495], "suggest": [1, 67, 71, 86, 90, 92, 96, 97, 103, 107, 114, 116, 119, 126, 145, 173, 199, 239, 244, 249, 265, 314, 322, 335, 380, 381, 397, 436, 462, 469, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 491, 493, 495, 496], "includ": [1, 4, 5, 7, 9, 10, 18, 20, 26, 28, 31, 32, 33, 34, 45, 49, 52, 54, 55, 56, 57, 59, 60, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 125, 128, 131, 133, 141, 145, 148, 149, 151, 152, 156, 159, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 180, 186, 189, 190, 191, 194, 196, 199, 203, 204, 206, 207, 210, 214, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 233, 237, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 293, 296, 298, 301, 303, 304, 306, 307, 308, 309, 311, 312, 314, 318, 320, 321, 322, 323, 324, 326, 327, 329, 333, 334, 337, 338, 341, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 370, 371, 373, 374, 375, 377, 379, 380, 381, 383, 384, 387, 388, 390, 391, 393, 395, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 412, 414, 415, 416, 417, 420, 421, 422, 424, 425, 426, 428, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "well": [1, 5, 35, 49, 51, 62, 63, 71, 78, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 105, 106, 107, 112, 113, 114, 116, 117, 119, 120, 121, 122, 125, 129, 131, 144, 145, 149, 154, 156, 157, 159, 164, 165, 167, 170, 171, 173, 179, 180, 182, 188, 189, 190, 196, 197, 199, 207, 208, 209, 211, 214, 217, 218, 222, 225, 227, 229, 232, 237, 239, 240, 241, 242, 244, 248, 249, 257, 261, 264, 266, 269, 272, 273, 274, 276, 278, 282, 283, 284, 285, 286, 289, 291, 294, 299, 303, 304, 306, 307, 308, 314, 322, 334, 336, 339, 344, 347, 351, 356, 357, 358, 359, 360, 361, 364, 368, 369, 373, 376, 377, 379, 382, 384, 388, 390, 393, 396, 397, 399, 400, 401, 403, 404, 405, 409, 417, 425, 428, 429, 430, 431, 434, 440, 443, 445, 447, 451, 454, 455, 456, 457, 458, 460, 464, 465, 467, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "also": [1, 3, 4, 5, 7, 10, 11, 12, 13, 18, 23, 26, 27, 28, 30, 31, 33, 34, 35, 40, 42, 45, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 74, 75, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 148, 149, 151, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 296, 298, 299, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 317, 318, 320, 321, 323, 324, 326, 328, 329, 331, 333, 334, 336, 337, 339, 340, 343, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "open": [1, 24, 33, 34, 41, 65, 67, 71, 72, 75, 78, 85, 90, 92, 96, 98, 99, 104, 107, 113, 116, 119, 121, 122, 123, 128, 131, 142, 145, 152, 153, 155, 161, 162, 164, 168, 171, 173, 180, 182, 188, 190, 196, 197, 201, 202, 203, 214, 221, 222, 226, 227, 228, 229, 232, 233, 237, 239, 244, 248, 249, 254, 255, 256, 257, 259, 261, 262, 263, 264, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 285, 286, 289, 291, 293, 295, 296, 298, 303, 308, 309, 310, 311, 314, 316, 317, 320, 324, 328, 329, 333, 335, 337, 341, 343, 345, 346, 348, 350, 351, 352, 353, 356, 357, 358, 359, 360, 364, 365, 368, 371, 373, 374, 375, 377, 380, 384, 390, 391, 393, 394, 396, 399, 401, 404, 405, 407, 412, 416, 418, 420, 422, 426, 428, 429, 431, 434, 436, 437, 440, 441, 443, 450, 453, 455, 456, 458, 461, 465, 466, 467, 470, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "discuss": [1, 4, 16, 33, 35, 84, 85, 86, 92, 97, 107, 112, 114, 116, 119, 120, 121, 184, 194, 203, 217, 222, 225, 244, 261, 273, 282, 283, 290, 303, 308, 334, 345, 348, 357, 359, 368, 391, 403, 405, 410, 425, 434, 439, 441, 442, 445, 447, 450, 455, 456, 457, 458, 461, 477, 478, 479, 482, 483, 484, 486, 487, 488, 491, 493, 496], "item": [1, 2, 5, 7, 14, 22, 23, 31, 33, 34, 35, 36, 37, 38, 40, 53, 56, 59, 62, 67, 85, 88, 90, 91, 96, 99, 106, 107, 114, 116, 118, 123, 131, 132, 133, 146, 152, 154, 160, 163, 164, 170, 171, 173, 174, 180, 183, 184, 189, 194, 197, 202, 203, 204, 207, 210, 211, 214, 219, 223, 225, 227, 237, 239, 240, 241, 246, 247, 248, 249, 250, 258, 261, 262, 264, 265, 267, 268, 276, 277, 282, 283, 284, 286, 290, 291, 294, 298, 303, 306, 308, 314, 317, 321, 322, 323, 325, 328, 331, 334, 335, 339, 347, 349, 352, 353, 355, 356, 357, 360, 361, 363, 364, 365, 368, 369, 374, 375, 376, 377, 380, 383, 384, 390, 393, 396, 399, 400, 401, 404, 409, 417, 420, 422, 423, 424, 425, 427, 428, 431, 434, 437, 438, 442, 443, 445, 446, 447, 449, 450, 451, 455, 456, 457, 461, 464, 465, 467, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495], "our": [1, 31, 35, 81, 85, 88, 97, 101, 105, 106, 114, 116, 117, 119, 120, 125, 146, 180, 182, 189, 210, 214, 219, 250, 274, 307, 314, 334, 351, 354, 356, 357, 377, 401, 404, 405, 417, 422, 428, 437, 455, 479, 482, 483, 487], "discours": 1, "forum": 1, "re": [1, 7, 33, 34, 35, 42, 45, 56, 62, 67, 71, 72, 75, 78, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 117, 119, 121, 124, 125, 133, 139, 150, 151, 152, 153, 157, 158, 168, 173, 176, 180, 182, 189, 190, 196, 199, 200, 203, 204, 207, 210, 215, 219, 221, 225, 234, 250, 254, 256, 257, 261, 262, 264, 265, 269, 273, 274, 281, 282, 283, 284, 286, 289, 293, 294, 298, 303, 307, 308, 310, 311, 312, 323, 329, 330, 333, 353, 354, 356, 357, 359, 360, 361, 364, 368, 378, 379, 380, 382, 384, 392, 393, 399, 401, 405, 409, 410, 414, 415, 422, 424, 428, 430, 434, 441, 442, 443, 444, 447, 449, 450, 451, 454, 456, 458, 459, 461, 465, 466, 468, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 495], "short": [1, 5, 7, 41, 42, 57, 62, 67, 71, 75, 80, 92, 96, 98, 99, 106, 107, 108, 112, 114, 116, 117, 125, 131, 132, 156, 172, 173, 188, 189, 190, 207, 242, 251, 259, 273, 274, 282, 286, 298, 304, 307, 308, 315, 329, 346, 360, 363, 364, 368, 377, 381, 382, 399, 401, 403, 426, 428, 436, 449, 456, 457, 461, 470, 476, 477, 479, 480, 482, 484, 487, 488, 489, 490, 491, 493, 494, 496], "time": [1, 3, 4, 5, 13, 20, 23, 28, 31, 33, 34, 41, 42, 45, 53, 62, 63, 67, 71, 72, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 116, 117, 120, 121, 122, 126, 128, 129, 131, 132, 133, 137, 138, 141, 142, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157, 159, 160, 163, 164, 170, 173, 176, 179, 180, 181, 182, 186, 189, 190, 195, 198, 199, 203, 206, 207, 216, 217, 222, 223, 226, 227, 228, 230, 232, 239, 240, 241, 244, 245, 246, 248, 249, 250, 251, 254, 257, 259, 261, 262, 264, 265, 269, 270, 272, 274, 276, 281, 282, 283, 284, 286, 291, 296, 297, 298, 299, 303, 307, 308, 309, 310, 311, 312, 314, 315, 321, 323, 324, 329, 331, 333, 334, 335, 337, 340, 341, 343, 344, 345, 346, 347, 348, 350, 353, 354, 356, 357, 358, 359, 360, 364, 368, 372, 373, 374, 375, 377, 379, 380, 384, 387, 390, 391, 394, 395, 399, 401, 403, 404, 405, 410, 411, 413, 414, 415, 417, 420, 422, 423, 424, 425, 430, 431, 434, 435, 437, 438, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 462, 464, 465, 467, 470, 471, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 491], "email": [1, 67, 71, 77, 78, 80, 99, 113, 122, 156, 159, 164, 249, 251, 256, 257, 259, 266, 269, 283, 284, 286, 287, 300, 308, 334, 350, 351, 357, 368, 381, 410, 441, 447, 466, 467, 468, 479, 481, 482, 483, 484], "doc": [1, 23, 57, 59, 74, 83, 87, 88, 91, 92, 101, 105, 116, 120, 138, 189, 208, 219, 237, 239, 256, 261, 266, 270, 273, 277, 308, 311, 328, 357, 368, 377, 382, 400, 401, 409, 418, 420, 427, 467, 469, 471, 475, 476, 477, 479, 480, 482, 483, 484, 487, 489, 493, 494, 495], "org": [1, 56, 67, 72, 75, 77, 80, 83, 87, 90, 91, 96, 99, 107, 114, 117, 119, 120, 121, 122, 138, 152, 173, 179, 180, 182, 197, 237, 240, 249, 253, 254, 256, 257, 261, 262, 298, 303, 318, 322, 328, 329, 334, 343, 351, 353, 356, 357, 360, 368, 370, 402, 409, 410, 411, 413, 414, 418, 426, 428, 430, 434, 441, 443, 450, 455, 459, 460, 466, 468, 469, 470, 473, 474, 475, 477, 478, 480, 481, 482, 483, 484, 487, 488, 489, 490, 492, 494, 495, 496], "behavior": [1, 18, 22, 23, 24, 33, 34, 35, 42, 56, 60, 62, 67, 85, 90, 91, 97, 99, 104, 105, 106, 112, 113, 114, 117, 125, 127, 130, 131, 132, 138, 142, 144, 151, 162, 170, 173, 179, 180, 186, 188, 189, 190, 194, 195, 198, 199, 203, 207, 208, 210, 215, 217, 219, 220, 222, 225, 227, 232, 239, 248, 250, 254, 256, 261, 270, 272, 273, 276, 277, 281, 282, 284, 285, 286, 290, 291, 298, 299, 301, 303, 307, 308, 311, 314, 317, 324, 329, 343, 346, 347, 348, 349, 351, 353, 354, 357, 359, 360, 361, 363, 364, 368, 373, 375, 377, 380, 381, 382, 384, 389, 391, 393, 396, 401, 403, 409, 410, 415, 422, 425, 428, 440, 442, 443, 445, 447, 450, 451, 455, 464, 470, 471, 476, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 496, 498], "sent": [1, 23, 67, 104, 107, 113, 117, 119, 120, 133, 134, 138, 145, 148, 149, 152, 156, 182, 190, 214, 237, 249, 254, 256, 258, 259, 261, 262, 274, 282, 283, 284, 298, 303, 308, 312, 320, 337, 348, 350, 351, 353, 354, 356, 357, 364, 381, 382, 401, 410, 422, 434, 435, 441, 461, 467, 476, 477, 480, 481, 482, 483, 484, 489, 490, 491, 492, 493, 494, 495, 496], "mail": [1, 90, 107, 112, 114, 115, 116, 122, 156, 208, 209, 210, 212, 214, 216, 219, 231, 262, 284, 286, 287, 303, 308, 332, 350, 351, 357, 371, 403, 422, 441, 466, 467, 469, 474, 477, 478, 479, 480, 481, 482, 483, 489, 492], "run": [1, 4, 23, 28, 33, 34, 35, 42, 45, 56, 58, 62, 63, 67, 71, 72, 73, 74, 75, 76, 78, 80, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 104, 105, 107, 108, 110, 112, 113, 116, 117, 119, 121, 122, 123, 124, 125, 126, 131, 133, 135, 136, 141, 142, 144, 145, 146, 148, 149, 150, 153, 157, 160, 164, 165, 170, 173, 176, 179, 180, 182, 183, 186, 189, 190, 194, 198, 199, 200, 206, 207, 214, 217, 222, 227, 228, 240, 241, 242, 244, 249, 250, 256, 257, 258, 259, 265, 266, 270, 276, 281, 282, 283, 284, 286, 294, 298, 301, 303, 307, 308, 309, 311, 312, 323, 328, 329, 333, 335, 337, 338, 339, 340, 342, 346, 347, 348, 349, 350, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 369, 370, 379, 380, 381, 382, 383, 384, 391, 395, 397, 399, 401, 404, 405, 408, 410, 411, 413, 414, 415, 417, 418, 420, 422, 428, 435, 436, 439, 442, 443, 444, 445, 446, 447, 450, 453, 455, 456, 458, 459, 463, 465, 466, 467, 468, 470, 471, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "your": [1, 5, 20, 22, 33, 35, 56, 58, 62, 67, 71, 72, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 112, 113, 116, 117, 119, 120, 121, 122, 123, 125, 129, 131, 133, 134, 145, 152, 154, 155, 165, 172, 173, 180, 190, 194, 196, 198, 200, 207, 210, 212, 214, 215, 216, 219, 221, 225, 227, 236, 237, 239, 240, 241, 248, 249, 256, 257, 258, 259, 260, 261, 265, 270, 273, 277, 281, 282, 283, 284, 286, 293, 298, 308, 311, 312, 314, 320, 321, 323, 328, 333, 334, 335, 341, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 369, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 390, 397, 399, 401, 403, 404, 409, 410, 414, 415, 417, 422, 425, 426, 428, 430, 435, 436, 437, 440, 441, 449, 451, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498], "request": [1, 2, 5, 23, 31, 33, 42, 43, 45, 62, 67, 88, 96, 97, 100, 106, 107, 111, 112, 114, 117, 119, 120, 122, 131, 134, 136, 139, 142, 145, 151, 155, 156, 164, 171, 173, 179, 182, 189, 190, 199, 211, 222, 224, 226, 227, 229, 237, 239, 240, 244, 248, 255, 256, 257, 258, 259, 261, 262, 264, 265, 269, 271, 273, 286, 298, 299, 303, 306, 307, 308, 309, 310, 314, 320, 322, 324, 329, 331, 337, 343, 346, 348, 349, 350, 357, 360, 364, 368, 377, 381, 391, 399, 404, 407, 409, 411, 414, 420, 422, 425, 431, 432, 434, 435, 438, 443, 447, 451, 455, 456, 464, 466, 467, 468, 476, 477, 478, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496], "notic": [1, 35, 56, 75, 80, 81, 85, 88, 90, 101, 108, 112, 113, 114, 116, 117, 118, 120, 121, 123, 134, 144, 145, 171, 180, 186, 197, 199, 216, 232, 241, 245, 265, 273, 284, 298, 318, 347, 353, 356, 370, 377, 384, 399, 401, 441, 443, 445, 455, 457, 463, 468, 476, 478, 480, 484, 487, 488, 489, 490, 494, 495], "though": [1, 9, 11, 31, 33, 35, 56, 57, 62, 63, 72, 74, 75, 78, 80, 85, 87, 88, 92, 96, 97, 98, 99, 104, 106, 107, 114, 116, 119, 120, 125, 126, 127, 131, 138, 144, 145, 148, 152, 167, 168, 171, 173, 174, 181, 186, 190, 199, 207, 210, 213, 214, 219, 220, 222, 225, 227, 239, 244, 249, 257, 261, 264, 265, 266, 267, 270, 273, 277, 282, 284, 286, 290, 298, 299, 303, 307, 308, 320, 326, 329, 334, 343, 346, 357, 360, 363, 377, 380, 381, 384, 397, 399, 401, 403, 404, 405, 408, 410, 422, 425, 426, 430, 440, 441, 443, 444, 445, 447, 449, 450, 451, 455, 457, 459, 464, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 490], "mai": [1, 5, 7, 9, 10, 11, 12, 13, 14, 20, 22, 23, 24, 28, 31, 33, 34, 35, 38, 42, 43, 45, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 74, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 138, 140, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 194, 196, 197, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 326, 327, 328, 329, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 372, 373, 374, 375, 377, 379, 380, 381, 382, 384, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "while": [1, 7, 16, 22, 23, 28, 33, 35, 36, 40, 45, 48, 49, 51, 56, 62, 63, 67, 71, 72, 76, 78, 80, 84, 85, 87, 88, 92, 96, 97, 98, 99, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 126, 127, 131, 133, 137, 138, 139, 145, 146, 148, 150, 151, 152, 160, 162, 164, 167, 171, 173, 180, 181, 182, 183, 185, 188, 189, 190, 192, 196, 197, 199, 203, 204, 205, 207, 210, 213, 222, 223, 225, 227, 239, 240, 241, 244, 246, 248, 249, 250, 256, 257, 261, 265, 266, 269, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 290, 298, 299, 307, 308, 311, 312, 314, 317, 321, 323, 326, 329, 331, 333, 334, 341, 343, 344, 346, 348, 350, 351, 353, 354, 356, 357, 360, 361, 363, 364, 365, 368, 373, 375, 377, 379, 380, 381, 384, 386, 395, 396, 399, 401, 403, 409, 410, 413, 414, 415, 416, 425, 428, 437, 439, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 461, 464, 465, 466, 467, 468, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "A": [1, 5, 7, 9, 10, 11, 19, 23, 29, 33, 34, 35, 39, 42, 43, 45, 49, 51, 56, 60, 62, 63, 67, 71, 72, 75, 76, 77, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 99, 101, 104, 106, 107, 108, 112, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 160, 163, 164, 166, 167, 168, 170, 171, 173, 174, 177, 179, 180, 181, 182, 183, 184, 186, 188, 190, 191, 194, 196, 197, 199, 201, 202, 204, 207, 210, 211, 213, 214, 216, 217, 219, 220, 222, 223, 225, 227, 228, 230, 232, 235, 237, 239, 240, 241, 243, 244, 246, 249, 250, 251, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 293, 294, 298, 299, 301, 303, 304, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 333, 334, 337, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 356, 357, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 428, 429, 430, 431, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482, 484, 486, 487, 488, 489, 493, 494, 495, 496, 498], "been": [1, 2, 5, 7, 13, 18, 22, 23, 24, 28, 31, 33, 34, 35, 42, 43, 45, 47, 57, 58, 59, 62, 63, 66, 69, 71, 72, 73, 76, 77, 80, 81, 83, 85, 87, 90, 91, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 111, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 138, 139, 141, 145, 146, 148, 151, 152, 153, 154, 157, 162, 164, 166, 168, 171, 173, 174, 179, 182, 189, 190, 192, 194, 196, 197, 199, 203, 207, 210, 213, 215, 216, 218, 221, 226, 227, 232, 237, 239, 240, 241, 244, 246, 249, 250, 254, 256, 257, 258, 261, 264, 265, 266, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 291, 296, 297, 298, 299, 303, 306, 307, 308, 309, 310, 311, 312, 314, 317, 323, 324, 329, 331, 333, 334, 335, 337, 343, 344, 346, 348, 349, 351, 353, 354, 356, 357, 359, 360, 363, 364, 366, 368, 369, 371, 373, 375, 376, 377, 379, 380, 381, 383, 384, 390, 396, 397, 399, 401, 402, 403, 404, 405, 409, 410, 414, 415, 416, 417, 418, 420, 422, 423, 426, 427, 428, 431, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 450, 451, 452, 457, 458, 459, 461, 462, 465, 466, 467, 468, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "track": [1, 23, 28, 35, 42, 62, 67, 71, 80, 90, 97, 99, 106, 108, 112, 113, 116, 138, 164, 171, 173, 180, 182, 194, 198, 199, 200, 207, 241, 250, 269, 284, 290, 298, 299, 307, 308, 314, 331, 334, 343, 368, 380, 381, 384, 386, 403, 404, 410, 425, 441, 459, 467, 477, 478, 481, 484, 486, 489, 491, 492, 493, 494, 495, 496], "overview": [1, 32, 67, 86, 90, 117, 119, 129, 177, 187, 239, 271, 272, 274, 292, 295, 303, 307, 322, 323, 330, 401, 406, 424, 461, 476, 477, 478, 479, 480, 482, 483, 484, 489, 492, 494, 498], "help": [1, 23, 35, 45, 49, 57, 64, 65, 67, 71, 74, 75, 78, 80, 87, 90, 92, 98, 99, 101, 105, 106, 108, 113, 114, 116, 117, 119, 120, 121, 122, 129, 133, 135, 163, 164, 165, 168, 171, 173, 182, 189, 190, 198, 200, 203, 204, 205, 207, 214, 236, 237, 239, 240, 242, 244, 248, 249, 252, 255, 258, 260, 264, 265, 268, 269, 270, 272, 273, 276, 277, 296, 303, 308, 311, 312, 323, 350, 351, 353, 357, 360, 368, 377, 381, 382, 383, 384, 390, 393, 395, 401, 404, 405, 409, 410, 414, 420, 428, 436, 443, 447, 450, 452, 454, 455, 456, 459, 460, 463, 465, 466, 467, 470, 471, 474, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "comprehens": [1, 24, 67, 96, 97, 99, 112, 120, 123, 162, 204, 239, 249, 270, 279, 314, 360, 384, 444, 445, 446, 450, 455, 460, 466, 472, 481, 482, 484, 485, 487, 488, 490, 491, 492, 494, 495, 496, 498], "guid": [1, 67, 69, 77, 86, 88, 92, 95, 98, 99, 102, 103, 104, 109, 112, 119, 121, 122, 125, 196, 199, 200, 203, 206, 224, 239, 266, 310, 313, 390, 405, 414, 456, 461, 468, 469, 471, 474, 475, 479, 483, 484, 489, 491], "individu": [1, 5, 10, 42, 45, 57, 60, 62, 67, 72, 75, 77, 104, 106, 111, 112, 113, 114, 116, 121, 123, 128, 131, 171, 188, 190, 197, 199, 203, 204, 207, 210, 212, 217, 220, 233, 244, 262, 263, 269, 276, 282, 286, 296, 297, 298, 308, 309, 328, 334, 347, 352, 360, 361, 371, 373, 374, 379, 381, 382, 384, 391, 399, 401, 403, 404, 405, 409, 413, 415, 423, 428, 434, 435, 437, 441, 443, 447, 449, 451, 455, 457, 458, 464, 465, 470, 478, 481, 482, 484, 486, 487, 490, 491, 496], "interest": [1, 22, 62, 67, 72, 76, 80, 84, 85, 87, 89, 92, 96, 97, 105, 106, 107, 110, 113, 114, 116, 117, 119, 131, 150, 152, 164, 166, 167, 173, 180, 196, 203, 207, 208, 214, 221, 229, 230, 239, 250, 261, 276, 282, 286, 288, 291, 301, 307, 312, 323, 329, 343, 365, 380, 382, 383, 401, 403, 404, 405, 410, 415, 416, 430, 443, 449, 451, 466, 469, 477, 478, 479, 480, 482, 484], "translat": [1, 63, 67, 71, 85, 99, 116, 118, 119, 171, 189, 190, 200, 226, 227, 234, 236, 239, 252, 254, 259, 260, 265, 269, 273, 277, 297, 308, 348, 350, 353, 359, 360, 361, 364, 402, 428, 434, 441, 442, 443, 477, 480, 481, 483, 484, 485, 486, 488, 489, 492, 495], "github": [1, 87, 92, 122, 262, 322, 403, 441, 493, 494], "primari": [1, 13, 67, 88, 90, 97, 99, 105, 106, 118, 125, 170, 182, 207, 208, 210, 219, 220, 232, 241, 276, 282, 291, 296, 308, 314, 323, 349, 353, 356, 357, 361, 368, 393, 417, 434, 440, 446, 447, 448, 451, 453, 463, 464, 465, 467, 477, 478, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491], "contact": [1, 105, 410, 422], "should": [1, 3, 5, 7, 10, 11, 14, 18, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 36, 37, 42, 44, 45, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 95, 97, 98, 99, 100, 101, 104, 106, 107, 108, 110, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 140, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 199, 201, 202, 203, 204, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 296, 297, 298, 299, 302, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 329, 333, 334, 335, 336, 337, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 386, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 409, 410, 413, 414, 415, 416, 417, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 447, 449, 450, 451, 455, 456, 457, 458, 459, 461, 463, 464, 465, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 498], "via": [1, 4, 7, 36, 42, 45, 62, 63, 67, 71, 85, 88, 92, 96, 97, 99, 101, 107, 110, 112, 113, 120, 123, 124, 126, 127, 131, 133, 134, 135, 137, 142, 153, 157, 164, 173, 180, 183, 196, 203, 207, 210, 214, 215, 216, 219, 220, 221, 222, 227, 230, 232, 239, 242, 246, 247, 249, 250, 256, 261, 264, 266, 270, 276, 277, 280, 281, 282, 283, 284, 293, 298, 299, 307, 308, 312, 314, 317, 320, 323, 329, 332, 334, 335, 338, 351, 353, 354, 356, 357, 360, 361, 364, 368, 370, 375, 377, 399, 401, 403, 404, 410, 415, 420, 422, 425, 428, 433, 434, 440, 442, 443, 445, 455, 457, 469, 470, 473, 477, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496], "http": [1, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 87, 90, 91, 92, 93, 96, 97, 107, 113, 114, 117, 119, 120, 121, 134, 138, 145, 155, 156, 163, 164, 169, 171, 173, 175, 179, 182, 196, 214, 222, 223, 240, 249, 253, 254, 262, 266, 269, 271, 276, 284, 322, 328, 329, 333, 334, 341, 342, 343, 348, 353, 354, 356, 357, 360, 368, 377, 394, 397, 402, 403, 408, 409, 410, 411, 414, 418, 424, 426, 428, 430, 433, 434, 435, 439, 441, 443, 447, 450, 455, 459, 460, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 495], "com": [1, 67, 68, 75, 85, 87, 92, 96, 97, 105, 113, 114, 116, 120, 148, 175, 179, 189, 196, 197, 214, 257, 262, 276, 303, 312, 322, 333, 334, 341, 356, 357, 360, 403, 410, 411, 420, 428, 434, 468, 469, 474, 476, 479, 481, 482, 483, 484, 489, 490, 491, 492, 495], "cpython": [1, 4, 10, 13, 33, 35, 53, 56, 58, 62, 67, 83, 85, 87, 88, 92, 97, 99, 101, 109, 112, 155, 171, 174, 199, 201, 204, 224, 227, 228, 239, 249, 251, 264, 265, 270, 272, 290, 298, 308, 311, 318, 326, 329, 331, 335, 339, 347, 359, 360, 364, 368, 377, 380, 394, 400, 417, 422, 428, 440, 442, 443, 444, 445, 446, 449, 451, 465, 470, 471, 475, 476, 478, 479, 480, 482, 483, 484, 489, 490, 492, 498], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 426, 427, 429, 430, 432, 433, 434, 435, 437, 438, 439, 441, 444, 446, 449, 450, 452, 454, 455, 458, 459, 462, 464, 466, 467, 468, 469, 470, 471, 473, 475, 477, 478, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498], "offer": [1, 33, 62, 77, 78, 85, 86, 96, 101, 103, 104, 105, 106, 107, 111, 113, 114, 119, 120, 121, 170, 173, 174, 185, 199, 230, 237, 239, 245, 249, 250, 269, 273, 276, 282, 283, 284, 286, 298, 309, 311, 312, 331, 333, 334, 335, 339, 347, 350, 353, 360, 364, 369, 380, 381, 404, 410, 420, 423, 431, 441, 454, 458, 461, 466, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 491, 495, 496], "web": [1, 67, 80, 96, 97, 107, 117, 119, 120, 121, 134, 135, 164, 240, 249, 258, 259, 261, 269, 271, 272, 284, 287, 328, 356, 357, 409, 410, 411, 422, 425, 435, 441, 447, 460, 467, 468, 469, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 491, 498], "form": [1, 5, 7, 23, 31, 33, 34, 37, 38, 53, 54, 62, 63, 67, 71, 76, 80, 84, 85, 90, 91, 92, 93, 97, 99, 101, 104, 107, 111, 113, 114, 116, 117, 119, 120, 121, 124, 131, 132, 133, 138, 146, 157, 164, 171, 174, 180, 182, 188, 189, 190, 191, 194, 196, 199, 200, 203, 204, 207, 210, 211, 212, 214, 217, 219, 220, 222, 223, 227, 235, 239, 240, 242, 244, 254, 255, 256, 258, 259, 262, 264, 266, 270, 272, 274, 276, 281, 282, 283, 284, 286, 288, 289, 291, 298, 303, 308, 309, 311, 313, 317, 319, 320, 322, 331, 334, 349, 353, 356, 357, 358, 360, 361, 362, 363, 365, 368, 373, 377, 379, 380, 381, 382, 383, 384, 391, 399, 402, 403, 404, 405, 409, 410, 411, 413, 415, 420, 422, 423, 425, 428, 434, 436, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 465, 467, 470, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "allow": [1, 3, 5, 7, 9, 10, 16, 22, 23, 27, 33, 34, 35, 41, 42, 43, 45, 49, 56, 58, 62, 63, 67, 71, 72, 75, 76, 77, 80, 83, 84, 85, 87, 88, 91, 93, 96, 97, 99, 101, 104, 105, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 133, 134, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 156, 163, 164, 166, 167, 170, 171, 173, 174, 176, 179, 180, 182, 186, 188, 189, 190, 193, 194, 196, 198, 199, 202, 203, 204, 207, 208, 209, 210, 216, 217, 219, 222, 224, 225, 227, 228, 229, 232, 237, 239, 240, 241, 242, 244, 248, 249, 256, 257, 258, 259, 261, 262, 265, 268, 270, 273, 276, 277, 278, 280, 281, 282, 283, 284, 286, 290, 291, 293, 294, 298, 302, 303, 307, 308, 310, 311, 312, 314, 317, 320, 322, 323, 326, 328, 329, 333, 334, 335, 336, 337, 339, 340, 343, 344, 345, 346, 347, 348, 351, 353, 354, 356, 357, 360, 361, 362, 364, 365, 368, 369, 371, 373, 375, 377, 379, 380, 381, 384, 389, 390, 391, 392, 395, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 428, 430, 431, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 450, 451, 454, 455, 456, 457, 458, 461, 464, 465, 466, 467, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pertin": [1, 282, 340], "enter": [1, 33, 34, 35, 67, 90, 91, 92, 96, 97, 98, 99, 104, 107, 110, 116, 117, 119, 147, 152, 157, 164, 168, 170, 172, 182, 190, 202, 239, 261, 273, 297, 307, 308, 312, 327, 340, 351, 356, 357, 360, 368, 374, 380, 384, 390, 399, 403, 415, 442, 443, 444, 452, 455, 456, 458, 459, 463, 464, 465, 467, 469, 470, 479, 480, 482, 489, 490, 491, 494, 495], "first": [1, 5, 13, 14, 15, 16, 18, 22, 23, 25, 31, 33, 34, 35, 37, 39, 41, 42, 45, 47, 49, 53, 57, 58, 59, 60, 62, 63, 66, 67, 71, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 131, 132, 133, 138, 144, 146, 147, 150, 151, 152, 153, 154, 157, 160, 163, 164, 166, 168, 170, 171, 173, 179, 180, 182, 184, 188, 189, 190, 191, 196, 197, 199, 201, 203, 204, 207, 209, 210, 211, 213, 214, 215, 216, 217, 219, 221, 222, 223, 225, 227, 228, 229, 232, 235, 237, 239, 240, 242, 243, 244, 246, 249, 250, 256, 257, 258, 261, 262, 264, 265, 270, 272, 273, 274, 276, 280, 281, 282, 283, 284, 286, 287, 290, 291, 293, 296, 298, 299, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 322, 323, 328, 329, 331, 334, 335, 339, 340, 343, 345, 346, 347, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 381, 382, 384, 388, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 413, 415, 416, 417, 420, 422, 423, 425, 428, 429, 434, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463, 465, 467, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "step": [1, 55, 62, 67, 71, 72, 81, 84, 85, 89, 96, 98, 105, 107, 112, 116, 117, 118, 120, 121, 123, 131, 133, 154, 157, 160, 164, 168, 171, 173, 179, 182, 189, 198, 199, 207, 239, 244, 246, 250, 256, 261, 265, 276, 282, 296, 298, 306, 307, 308, 312, 333, 334, 354, 356, 360, 368, 373, 375, 391, 399, 405, 414, 429, 436, 442, 443, 445, 451, 456, 460, 462, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492], "file": [1, 7, 16, 20, 23, 25, 31, 32, 33, 34, 41, 45, 49, 56, 58, 62, 65, 67, 72, 73, 75, 76, 77, 78, 83, 84, 85, 87, 88, 89, 90, 92, 93, 99, 101, 105, 106, 107, 108, 110, 112, 116, 117, 120, 122, 123, 125, 126, 129, 130, 132, 133, 137, 139, 142, 143, 144, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 168, 170, 171, 173, 176, 182, 184, 187, 189, 190, 191, 196, 197, 198, 199, 200, 203, 204, 206, 210, 214, 215, 218, 220, 221, 222, 226, 227, 229, 232, 234, 237, 239, 242, 243, 244, 245, 250, 254, 256, 257, 259, 262, 263, 264, 267, 268, 269, 270, 272, 274, 275, 277, 279, 280, 281, 282, 284, 286, 288, 289, 291, 292, 294, 295, 298, 303, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 332, 334, 336, 337, 339, 341, 342, 343, 344, 345, 346, 348, 349, 351, 353, 354, 356, 357, 358, 360, 363, 364, 366, 367, 368, 370, 372, 374, 376, 377, 378, 380, 381, 382, 383, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 414, 415, 417, 418, 419, 420, 421, 422, 424, 426, 427, 429, 431, 432, 434, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 454, 455, 456, 457, 458, 460, 462, 463, 464, 467, 468, 470, 473, 474, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 490, 496, 497, 498], "determin": [1, 3, 5, 7, 10, 11, 18, 22, 23, 34, 35, 40, 45, 49, 53, 59, 62, 67, 71, 80, 85, 87, 88, 97, 99, 104, 106, 111, 113, 114, 116, 117, 118, 119, 121, 131, 132, 138, 145, 148, 152, 157, 164, 167, 170, 171, 172, 173, 174, 188, 189, 190, 192, 194, 195, 197, 199, 202, 203, 207, 211, 217, 222, 225, 227, 229, 239, 244, 246, 256, 261, 262, 265, 269, 270, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 294, 298, 301, 307, 308, 309, 310, 311, 312, 314, 318, 322, 323, 326, 329, 333, 334, 335, 336, 343, 345, 346, 347, 348, 349, 350, 353, 356, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 373, 376, 381, 382, 384, 391, 393, 399, 401, 403, 410, 413, 414, 415, 420, 425, 430, 436, 439, 440, 441, 442, 444, 445, 447, 449, 450, 451, 455, 456, 457, 458, 465, 470, 476, 479, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494], "whether": [1, 5, 7, 9, 10, 11, 14, 17, 23, 31, 35, 57, 58, 62, 63, 71, 72, 74, 85, 90, 91, 97, 98, 104, 105, 107, 111, 112, 113, 116, 117, 119, 121, 125, 126, 127, 131, 145, 151, 152, 156, 157, 162, 164, 165, 167, 168, 170, 171, 172, 173, 174, 180, 182, 189, 190, 194, 196, 199, 202, 204, 207, 210, 216, 221, 222, 223, 224, 234, 239, 244, 245, 248, 249, 257, 258, 261, 265, 270, 273, 274, 276, 281, 283, 284, 286, 287, 290, 291, 298, 299, 307, 308, 309, 310, 311, 312, 314, 317, 322, 323, 325, 326, 329, 331, 332, 334, 339, 341, 343, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 362, 363, 364, 368, 372, 373, 375, 377, 380, 381, 384, 391, 395, 399, 401, 402, 403, 404, 405, 409, 410, 411, 413, 414, 415, 417, 420, 422, 424, 425, 430, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 451, 455, 456, 457, 458, 463, 465, 470, 471, 476, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "problem": [1, 23, 25, 33, 35, 58, 62, 67, 80, 85, 88, 90, 92, 96, 97, 98, 99, 100, 104, 105, 107, 108, 112, 113, 114, 117, 119, 122, 125, 137, 138, 152, 154, 165, 167, 171, 172, 180, 182, 184, 188, 196, 199, 207, 210, 213, 217, 219, 221, 237, 244, 250, 259, 261, 264, 265, 269, 277, 281, 282, 283, 298, 299, 307, 308, 314, 323, 329, 348, 353, 356, 357, 359, 360, 363, 372, 373, 377, 379, 401, 404, 405, 408, 410, 417, 422, 425, 428, 442, 450, 453, 454, 457, 458, 459, 461, 466, 467, 468, 469, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495], "alreadi": [1, 5, 7, 9, 10, 23, 24, 28, 31, 33, 34, 38, 42, 49, 53, 59, 62, 63, 65, 67, 71, 72, 78, 85, 87, 88, 89, 90, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 111, 112, 114, 116, 117, 118, 119, 121, 122, 123, 127, 131, 133, 138, 139, 141, 145, 152, 160, 164, 173, 176, 179, 180, 182, 184, 189, 194, 196, 197, 202, 203, 210, 213, 214, 219, 222, 224, 225, 226, 227, 232, 237, 239, 241, 246, 250, 256, 257, 261, 262, 264, 265, 270, 273, 276, 282, 283, 285, 286, 291, 296, 297, 298, 299, 307, 308, 311, 314, 317, 320, 322, 323, 335, 336, 343, 344, 347, 348, 353, 356, 357, 359, 360, 364, 368, 371, 373, 374, 377, 380, 384, 391, 394, 399, 403, 404, 405, 409, 410, 412, 414, 415, 418, 420, 425, 426, 428, 432, 436, 442, 443, 445, 447, 451, 455, 456, 457, 458, 461, 465, 468, 469, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "advantag": [1, 80, 85, 87, 90, 97, 107, 113, 114, 118, 121, 152, 199, 211, 237, 264, 265, 314, 323, 339, 346, 360, 382, 390, 403, 417, 426, 428, 430, 436, 461, 466, 477, 480, 481, 486, 489, 490, 491, 492, 495], "asid": [1, 117, 196, 239, 261, 323, 373, 405, 443, 445, 489, 494, 495], "save": [1, 23, 33, 35, 42, 62, 63, 67, 84, 85, 87, 97, 99, 105, 106, 107, 112, 113, 114, 116, 121, 131, 141, 151, 153, 160, 162, 164, 165, 168, 180, 182, 190, 196, 214, 223, 240, 241, 257, 261, 276, 281, 284, 285, 286, 307, 308, 314, 323, 328, 333, 334, 335, 349, 356, 368, 377, 380, 381, 383, 384, 396, 399, 415, 420, 434, 439, 440, 442, 443, 454, 455, 456, 460, 462, 465, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 494, 496], "what": [1, 5, 9, 19, 23, 25, 26, 29, 31, 33, 34, 35, 40, 42, 49, 53, 57, 62, 63, 67, 71, 72, 74, 76, 77, 78, 80, 81, 84, 87, 88, 90, 91, 98, 99, 101, 105, 106, 107, 108, 110, 114, 116, 117, 119, 120, 121, 123, 131, 133, 145, 151, 152, 164, 167, 171, 176, 180, 183, 188, 189, 190, 196, 198, 199, 200, 206, 213, 214, 215, 217, 221, 222, 227, 229, 237, 239, 244, 249, 250, 257, 258, 261, 262, 263, 264, 265, 266, 276, 281, 282, 283, 284, 285, 287, 294, 304, 308, 310, 311, 313, 322, 326, 329, 330, 333, 334, 335, 341, 343, 347, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 368, 373, 376, 377, 383, 390, 391, 395, 399, 401, 403, 404, 405, 409, 415, 425, 426, 428, 436, 439, 442, 444, 445, 447, 449, 450, 451, 455, 456, 457, 458, 459, 460, 465, 468, 474, 476], "done": [1, 5, 7, 10, 14, 31, 33, 34, 35, 36, 47, 49, 51, 53, 54, 56, 57, 61, 62, 63, 65, 71, 80, 81, 83, 84, 85, 87, 88, 96, 97, 98, 101, 104, 107, 108, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 125, 131, 137, 138, 141, 145, 148, 151, 154, 164, 168, 171, 172, 179, 180, 186, 188, 189, 190, 196, 197, 199, 204, 207, 210, 214, 218, 219, 222, 223, 230, 239, 243, 245, 246, 248, 249, 250, 259, 261, 264, 265, 270, 273, 281, 282, 283, 284, 293, 298, 303, 307, 308, 310, 311, 314, 317, 323, 324, 329, 331, 334, 349, 354, 356, 357, 360, 361, 364, 368, 373, 374, 375, 376, 377, 381, 382, 390, 391, 399, 400, 401, 404, 405, 410, 414, 415, 417, 423, 426, 427, 428, 429, 436, 443, 445, 447, 450, 451, 454, 455, 456, 457, 461, 463, 467, 476, 477, 478, 479, 480, 482, 483, 488, 489, 490, 491, 492, 493, 495], "next": [1, 7, 23, 26, 33, 36, 37, 42, 62, 67, 80, 84, 85, 87, 88, 90, 92, 97, 99, 104, 105, 106, 107, 111, 114, 116, 119, 121, 123, 125, 128, 134, 137, 138, 151, 154, 157, 160, 162, 164, 166, 168, 170, 172, 173, 180, 188, 189, 190, 199, 203, 204, 207, 208, 209, 210, 211, 219, 225, 227, 232, 235, 239, 240, 241, 244, 246, 250, 256, 257, 261, 268, 270, 272, 276, 282, 284, 285, 286, 290, 293, 297, 298, 303, 307, 308, 312, 322, 323, 329, 333, 334, 335, 338, 340, 345, 346, 348, 353, 354, 356, 357, 359, 360, 361, 364, 369, 373, 384, 390, 391, 399, 404, 405, 410, 413, 415, 428, 440, 442, 443, 444, 445, 447, 449, 451, 452, 454, 455, 456, 457, 462, 463, 464, 465, 467, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 492, 494, 495, 496], "releas": [1, 3, 4, 5, 7, 9, 12, 28, 34, 35, 36, 42, 45, 48, 51, 56, 57, 60, 62, 63, 67, 71, 72, 74, 78, 80, 84, 85, 87, 88, 89, 92, 96, 97, 99, 104, 105, 107, 108, 114, 118, 119, 120, 121, 124, 126, 133, 138, 144, 147, 150, 151, 160, 179, 182, 189, 190, 204, 206, 224, 229, 239, 248, 249, 250, 264, 270, 273, 282, 286, 298, 299, 308, 314, 318, 329, 341, 348, 353, 356, 359, 360, 368, 372, 377, 380, 384, 386, 397, 399, 401, 415, 428, 437, 441, 443, 451, 455, 458, 465, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 489, 498], "addit": [1, 5, 7, 9, 10, 23, 31, 33, 35, 41, 42, 45, 57, 62, 65, 67, 71, 72, 75, 76, 77, 81, 83, 85, 87, 88, 92, 96, 99, 106, 107, 108, 110, 111, 112, 113, 114, 116, 119, 121, 122, 123, 124, 126, 127, 128, 131, 133, 137, 151, 152, 154, 158, 163, 164, 170, 171, 173, 180, 182, 183, 184, 186, 188, 189, 190, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 213, 216, 217, 219, 220, 222, 224, 227, 229, 232, 235, 237, 239, 240, 241, 244, 246, 248, 249, 254, 255, 256, 257, 259, 261, 265, 266, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 285, 286, 289, 290, 291, 293, 298, 300, 306, 307, 308, 309, 311, 314, 318, 320, 321, 322, 323, 329, 331, 334, 336, 341, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 361, 363, 364, 365, 368, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 387, 390, 391, 393, 399, 401, 402, 403, 404, 405, 409, 410, 414, 415, 417, 420, 422, 423, 425, 426, 428, 429, 430, 431, 432, 434, 437, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "need": [1, 5, 6, 7, 10, 11, 13, 18, 23, 28, 31, 33, 34, 35, 42, 45, 46, 49, 51, 55, 56, 57, 58, 62, 63, 65, 67, 71, 72, 74, 75, 76, 78, 80, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 133, 134, 137, 138, 144, 149, 150, 151, 152, 153, 154, 157, 161, 162, 164, 166, 167, 168, 170, 171, 173, 174, 180, 182, 184, 186, 189, 190, 192, 194, 196, 199, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 237, 239, 240, 243, 244, 248, 249, 250, 252, 254, 257, 259, 261, 262, 264, 265, 266, 267, 270, 272, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 289, 293, 296, 298, 299, 301, 303, 307, 308, 309, 310, 311, 314, 317, 318, 320, 321, 322, 323, 326, 329, 333, 334, 335, 336, 337, 340, 341, 345, 346, 347, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 373, 375, 376, 377, 379, 380, 381, 383, 384, 390, 392, 393, 399, 400, 401, 403, 404, 405, 409, 410, 411, 414, 415, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "case": [1, 5, 7, 10, 13, 14, 18, 22, 23, 24, 25, 31, 33, 34, 35, 39, 41, 45, 49, 51, 55, 56, 57, 58, 60, 62, 63, 65, 67, 71, 72, 74, 75, 78, 80, 81, 83, 84, 85, 87, 88, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 111, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 131, 132, 133, 136, 137, 138, 141, 145, 147, 150, 151, 152, 154, 157, 159, 162, 164, 167, 168, 171, 172, 173, 176, 180, 182, 186, 188, 189, 190, 191, 194, 196, 199, 200, 201, 203, 204, 207, 209, 210, 215, 216, 217, 219, 221, 222, 223, 224, 225, 227, 228, 229, 234, 239, 241, 244, 246, 248, 249, 250, 253, 254, 257, 258, 259, 261, 262, 264, 265, 266, 270, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 298, 303, 304, 307, 308, 309, 310, 311, 312, 314, 317, 318, 322, 323, 329, 331, 334, 339, 340, 341, 344, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 360, 361, 362, 363, 364, 368, 369, 370, 373, 374, 377, 380, 381, 382, 384, 390, 391, 393, 397, 399, 401, 402, 404, 405, 406, 409, 410, 414, 415, 416, 420, 422, 424, 425, 426, 428, 430, 431, 435, 436, 440, 443, 444, 445, 446, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 463, 465, 467, 470, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "provid": [1, 5, 7, 10, 11, 15, 18, 23, 24, 25, 28, 31, 33, 34, 35, 36, 37, 40, 42, 43, 45, 47, 49, 53, 56, 57, 60, 61, 62, 63, 65, 67, 71, 72, 73, 74, 75, 76, 77, 80, 84, 86, 87, 90, 91, 92, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 141, 145, 148, 149, 151, 152, 154, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 311, 313, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 465, 466, 467, 470, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "To": [1, 3, 5, 10, 23, 28, 31, 33, 35, 36, 42, 45, 48, 56, 59, 60, 62, 63, 67, 71, 72, 75, 78, 80, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 118, 119, 120, 121, 123, 124, 127, 131, 134, 137, 138, 144, 147, 148, 151, 152, 160, 164, 165, 170, 171, 172, 173, 174, 176, 180, 182, 183, 186, 188, 189, 190, 194, 196, 199, 201, 203, 207, 211, 214, 215, 216, 217, 222, 223, 224, 226, 228, 232, 239, 240, 241, 242, 244, 248, 249, 250, 256, 257, 259, 261, 265, 266, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 293, 296, 297, 298, 299, 303, 304, 307, 308, 309, 310, 311, 312, 314, 318, 319, 322, 323, 329, 333, 334, 341, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 369, 373, 375, 377, 380, 381, 382, 383, 384, 386, 390, 391, 393, 397, 399, 400, 401, 403, 404, 405, 409, 410, 415, 420, 426, 427, 428, 430, 434, 436, 440, 443, 445, 447, 450, 453, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "search": [1, 14, 23, 31, 33, 34, 35, 58, 63, 67, 71, 74, 76, 80, 87, 90, 92, 96, 97, 98, 99, 105, 112, 113, 119, 125, 132, 154, 164, 171, 173, 176, 189, 195, 207, 210, 225, 230, 239, 244, 245, 262, 264, 265, 269, 280, 281, 282, 283, 285, 293, 294, 295, 303, 308, 312, 314, 317, 323, 326, 327, 328, 346, 347, 349, 356, 360, 364, 368, 370, 375, 378, 383, 384, 386, 390, 399, 403, 410, 411, 418, 425, 427, 428, 430, 435, 437, 438, 440, 442, 443, 444, 445, 448, 451, 454, 455, 456, 457, 460, 463, 464, 466, 467, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496], "box": [1, 92, 104, 114, 190, 261, 286, 384, 388, 390, 391, 401, 445, 464, 493, 494, 495], "top": [1, 31, 33, 35, 42, 67, 71, 78, 80, 85, 90, 96, 97, 99, 104, 106, 107, 108, 110, 113, 114, 116, 120, 121, 126, 131, 133, 147, 148, 151, 155, 163, 164, 165, 171, 180, 183, 189, 190, 192, 198, 202, 203, 204, 207, 221, 225, 227, 239, 240, 244, 250, 257, 261, 262, 265, 266, 269, 270, 272, 273, 281, 291, 300, 308, 314, 317, 319, 320, 323, 327, 328, 329, 330, 339, 357, 358, 367, 368, 373, 377, 380, 383, 384, 386, 388, 390, 391, 399, 400, 403, 404, 414, 428, 434, 435, 437, 442, 444, 447, 448, 450, 451, 455, 457, 465, 466, 470, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 490, 491, 493, 494, 495, 496], "log": [1, 34, 58, 67, 77, 92, 99, 105, 107, 109, 119, 129, 134, 138, 151, 160, 164, 165, 167, 177, 179, 182, 201, 207, 228, 237, 244, 250, 259, 269, 273, 290, 303, 308, 320, 333, 342, 347, 351, 357, 360, 364, 368, 371, 373, 377, 401, 403, 415, 422, 435, 443, 458, 460, 466, 470, 476, 477, 478, 479, 481, 482, 483, 486, 487, 496, 498], "don": [1, 5, 6, 8, 9, 18, 23, 28, 33, 34, 35, 48, 49, 56, 57, 58, 62, 67, 71, 72, 74, 75, 78, 80, 81, 83, 85, 87, 88, 91, 92, 93, 95, 99, 101, 104, 105, 106, 107, 112, 113, 114, 116, 117, 118, 119, 121, 122, 131, 133, 138, 145, 146, 149, 151, 157, 164, 165, 166, 167, 172, 173, 176, 180, 182, 184, 189, 192, 194, 196, 203, 204, 207, 214, 223, 230, 239, 240, 241, 244, 256, 257, 265, 272, 273, 274, 277, 282, 283, 284, 290, 298, 303, 307, 308, 310, 311, 312, 314, 322, 323, 333, 334, 343, 345, 347, 351, 353, 356, 357, 359, 360, 365, 370, 380, 382, 383, 384, 391, 401, 403, 404, 405, 410, 414, 416, 417, 420, 422, 428, 436, 439, 441, 442, 443, 445, 446, 447, 454, 455, 456, 457, 458, 459, 461, 464, 465, 468, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 493, 495, 496], "t": [1, 5, 6, 7, 8, 9, 13, 18, 22, 23, 25, 28, 31, 33, 34, 35, 41, 43, 45, 48, 49, 51, 55, 56, 57, 58, 62, 63, 67, 71, 72, 74, 75, 78, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 95, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 137, 138, 141, 144, 145, 146, 147, 149, 151, 152, 156, 157, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 176, 179, 180, 182, 184, 186, 188, 189, 190, 192, 194, 196, 197, 199, 203, 204, 207, 210, 212, 214, 215, 216, 218, 219, 220, 223, 224, 227, 228, 230, 231, 235, 239, 240, 241, 244, 245, 246, 248, 249, 250, 256, 257, 258, 261, 262, 264, 265, 266, 270, 272, 273, 274, 277, 281, 282, 283, 284, 286, 287, 290, 291, 298, 301, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 320, 322, 323, 329, 331, 333, 334, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 370, 371, 373, 377, 379, 380, 381, 382, 383, 384, 391, 392, 393, 395, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 426, 428, 431, 434, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 450, 451, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "account": [1, 62, 71, 96, 116, 117, 122, 171, 173, 176, 180, 196, 199, 203, 216, 223, 237, 239, 249, 258, 281, 282, 283, 301, 308, 311, 322, 325, 341, 355, 363, 368, 373, 374, 377, 414, 459, 482, 486, 487, 489, 491, 492, 493, 495, 496], "sign": [1, 18, 30, 35, 49, 67, 87, 97, 116, 132, 154, 167, 171, 173, 180, 189, 190, 196, 199, 210, 215, 223, 235, 239, 242, 249, 281, 283, 284, 287, 290, 298, 299, 307, 308, 310, 312, 314, 334, 352, 360, 361, 363, 380, 381, 409, 428, 443, 445, 450, 457, 461, 463, 464, 467, 474, 476, 478, 479, 481, 482, 483, 484, 489, 491, 493, 495], "up": [1, 7, 9, 14, 23, 33, 35, 36, 42, 45, 56, 62, 63, 67, 71, 72, 74, 77, 79, 82, 83, 85, 87, 88, 89, 90, 92, 96, 98, 99, 104, 105, 106, 107, 112, 113, 114, 116, 117, 119, 127, 131, 133, 138, 144, 146, 148, 150, 151, 153, 160, 162, 163, 164, 171, 173, 176, 179, 180, 190, 192, 196, 199, 203, 204, 207, 208, 211, 214, 222, 223, 225, 227, 235, 237, 239, 240, 241, 244, 249, 254, 256, 257, 259, 261, 264, 267, 270, 273, 276, 280, 281, 282, 283, 284, 285, 290, 291, 293, 295, 297, 298, 299, 307, 308, 309, 311, 312, 323, 324, 326, 330, 331, 334, 335, 338, 343, 346, 348, 349, 350, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 371, 373, 374, 375, 377, 379, 380, 384, 389, 390, 391, 396, 399, 400, 401, 402, 403, 404, 405, 409, 410, 414, 417, 422, 425, 428, 431, 432, 436, 439, 440, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 459, 460, 461, 462, 465, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "link": [1, 34, 35, 56, 62, 65, 67, 71, 80, 83, 85, 86, 89, 90, 91, 92, 93, 96, 97, 98, 99, 114, 117, 121, 122, 129, 133, 155, 173, 174, 176, 191, 196, 214, 226, 245, 249, 254, 257, 259, 272, 274, 276, 281, 282, 308, 309, 311, 318, 343, 347, 357, 358, 364, 368, 369, 372, 373, 377, 384, 390, 391, 414, 417, 418, 420, 422, 428, 429, 441, 443, 447, 454, 469, 470, 471, 475, 477, 480, 481, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496], "possibl": [1, 2, 5, 7, 10, 18, 23, 33, 34, 35, 42, 47, 56, 60, 62, 63, 65, 67, 71, 72, 74, 80, 83, 84, 85, 88, 90, 91, 93, 95, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 125, 126, 127, 128, 131, 133, 134, 138, 150, 153, 154, 160, 162, 164, 171, 172, 176, 180, 182, 183, 184, 186, 188, 189, 190, 194, 196, 197, 199, 203, 204, 207, 208, 210, 211, 214, 215, 219, 220, 222, 224, 225, 227, 232, 236, 239, 240, 246, 249, 250, 256, 259, 261, 265, 270, 273, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 297, 298, 303, 304, 307, 308, 309, 310, 311, 312, 314, 318, 319, 323, 324, 326, 327, 329, 333, 334, 335, 338, 343, 346, 347, 348, 353, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 370, 371, 372, 373, 375, 377, 380, 381, 382, 384, 390, 391, 397, 401, 403, 404, 405, 409, 410, 413, 415, 417, 418, 420, 421, 428, 434, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 449, 450, 451, 455, 456, 457, 458, 459, 461, 463, 464, 465, 467, 468, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "anonym": [1, 99, 107, 189, 237, 283, 293, 301, 308, 399, 442, 445, 456, 477, 489], "Being": [1, 116, 172, 360, 489, 495], "now": [1, 23, 33, 34, 35, 39, 42, 49, 56, 57, 58, 60, 62, 63, 65, 67, 71, 80, 81, 84, 85, 87, 88, 90, 92, 96, 97, 98, 99, 101, 104, 105, 106, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 132, 133, 138, 139, 143, 144, 145, 148, 149, 150, 151, 153, 154, 156, 159, 162, 164, 166, 171, 173, 174, 176, 179, 180, 182, 183, 185, 188, 189, 190, 194, 196, 197, 199, 201, 204, 207, 214, 216, 219, 225, 226, 227, 228, 229, 230, 232, 235, 237, 239, 240, 244, 248, 249, 251, 254, 256, 257, 258, 259, 262, 265, 266, 270, 273, 274, 277, 281, 282, 283, 284, 285, 286, 289, 290, 293, 297, 298, 299, 301, 303, 307, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 323, 324, 326, 328, 329, 333, 334, 343, 344, 345, 347, 348, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 368, 374, 375, 380, 381, 382, 392, 396, 397, 399, 400, 401, 403, 404, 405, 408, 409, 410, 414, 415, 416, 420, 426, 428, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "click": [1, 93, 114, 117, 164, 190, 202, 261, 308, 373, 388, 399, 414, 441, 453, 464, 474, 476, 487, 490, 493, 494, 495], "button": [1, 98, 104, 114, 164, 190, 202, 261, 296, 384, 388, 390, 391, 399, 441, 476, 493, 494, 495], "bar": [1, 28, 71, 74, 75, 80, 97, 98, 99, 106, 113, 114, 116, 131, 133, 168, 180, 189, 190, 214, 242, 257, 261, 264, 265, 277, 282, 283, 298, 303, 306, 307, 308, 309, 311, 312, 317, 319, 323, 326, 328, 349, 356, 360, 373, 377, 384, 389, 391, 401, 403, 404, 405, 422, 437, 438, 440, 442, 447, 449, 450, 451, 456, 477, 483, 488], "submiss": [1, 120, 164, 298, 329, 441, 477], "two": [1, 5, 6, 7, 9, 10, 14, 15, 20, 23, 25, 28, 31, 33, 34, 35, 36, 37, 41, 42, 45, 47, 57, 61, 62, 63, 66, 67, 71, 72, 75, 78, 80, 81, 84, 85, 87, 88, 89, 90, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 125, 128, 131, 133, 134, 138, 144, 145, 148, 150, 151, 152, 154, 156, 157, 159, 160, 163, 164, 167, 168, 170, 171, 172, 173, 176, 180, 184, 185, 186, 188, 189, 190, 191, 194, 196, 199, 202, 203, 204, 207, 208, 209, 210, 214, 216, 221, 222, 223, 224, 225, 227, 230, 232, 235, 237, 239, 240, 241, 242, 243, 244, 249, 250, 257, 259, 261, 262, 263, 265, 270, 272, 273, 274, 275, 276, 281, 282, 283, 286, 290, 291, 293, 298, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 320, 323, 327, 329, 331, 332, 333, 334, 337, 339, 340, 341, 345, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 368, 370, 373, 375, 376, 377, 379, 380, 381, 382, 387, 388, 390, 391, 393, 397, 399, 401, 402, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 420, 422, 423, 425, 428, 431, 436, 437, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 464, 465, 466, 467, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "field": [1, 2, 3, 5, 13, 20, 27, 28, 31, 33, 34, 35, 42, 53, 54, 56, 57, 59, 60, 62, 65, 67, 71, 75, 80, 85, 87, 88, 96, 99, 105, 112, 113, 118, 121, 129, 133, 160, 164, 166, 171, 188, 190, 195, 196, 199, 204, 210, 213, 216, 217, 219, 222, 223, 227, 247, 248, 250, 256, 261, 274, 276, 282, 287, 296, 306, 308, 318, 325, 329, 330, 331, 337, 340, 351, 353, 355, 356, 357, 358, 360, 361, 363, 364, 365, 368, 371, 373, 376, 381, 382, 384, 391, 393, 396, 409, 410, 413, 415, 420, 422, 426, 428, 437, 443, 450, 461, 467, 470, 477, 478, 479, 480, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496], "titl": [1, 63, 72, 75, 92, 96, 105, 107, 116, 119, 120, 131, 164, 173, 197, 202, 254, 261, 277, 282, 296, 298, 307, 353, 356, 360, 361, 384, 388, 399, 401, 410, 426, 427, 428, 435, 441, 469, 477, 479, 481, 488, 489, 495], "comment": [1, 9, 63, 67, 71, 74, 81, 85, 107, 114, 116, 119, 123, 133, 180, 189, 207, 217, 254, 257, 258, 261, 270, 288, 301, 308, 314, 315, 325, 328, 329, 334, 346, 364, 377, 392, 393, 409, 427, 428, 430, 437, 438, 441, 443, 446, 451, 453, 456, 463, 464, 477, 479, 480, 482, 484, 485, 488, 489, 495], "For": [1, 5, 7, 9, 10, 12, 13, 18, 22, 23, 24, 28, 33, 34, 35, 40, 42, 43, 45, 47, 49, 51, 56, 60, 62, 63, 65, 67, 71, 72, 74, 75, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 133, 134, 137, 138, 140, 144, 145, 146, 151, 152, 156, 157, 160, 161, 162, 163, 164, 167, 171, 172, 173, 174, 179, 180, 182, 183, 184, 186, 188, 189, 190, 194, 196, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 233, 234, 237, 239, 240, 242, 244, 245, 246, 248, 249, 250, 254, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 297, 298, 299, 304, 306, 307, 308, 310, 311, 312, 314, 315, 317, 321, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 341, 346, 347, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 384, 390, 391, 393, 396, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "veri": [1, 7, 10, 32, 33, 35, 58, 62, 67, 74, 80, 85, 86, 87, 90, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 132, 140, 152, 162, 164, 171, 173, 179, 180, 182, 190, 196, 199, 203, 207, 210, 216, 217, 220, 221, 225, 239, 244, 250, 256, 259, 264, 265, 269, 270, 281, 282, 285, 286, 298, 299, 303, 304, 307, 308, 314, 323, 334, 343, 345, 350, 351, 353, 354, 357, 359, 362, 364, 373, 374, 382, 384, 390, 399, 401, 403, 404, 405, 409, 441, 443, 445, 447, 451, 454, 456, 457, 459, 461, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 489, 490, 491, 492, 493, 495], "descript": [1, 5, 23, 24, 35, 52, 57, 58, 62, 63, 67, 71, 72, 73, 75, 80, 81, 83, 85, 86, 101, 104, 105, 110, 112, 113, 114, 121, 124, 128, 129, 133, 134, 140, 151, 152, 154, 173, 179, 184, 188, 189, 190, 195, 203, 204, 207, 210, 214, 215, 216, 219, 226, 229, 244, 255, 259, 264, 265, 266, 270, 274, 281, 282, 283, 285, 288, 293, 299, 303, 307, 308, 310, 312, 315, 322, 328, 337, 347, 348, 353, 356, 357, 360, 365, 371, 374, 375, 376, 377, 381, 384, 390, 391, 397, 399, 401, 403, 414, 415, 416, 423, 429, 430, 434, 435, 442, 443, 444, 445, 449, 451, 456, 460, 466, 470, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 491, 492, 494, 495, 496], "fewer": [1, 116, 133, 188, 261, 273, 276, 334, 356, 359, 391, 447, 456, 480, 482, 485, 487, 491, 493, 494, 495], "than": [1, 5, 10, 15, 18, 22, 23, 24, 25, 29, 33, 34, 35, 38, 39, 40, 41, 42, 45, 49, 54, 55, 56, 57, 60, 62, 63, 67, 71, 72, 75, 80, 84, 85, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 137, 138, 139, 141, 145, 146, 149, 150, 151, 152, 153, 157, 159, 160, 162, 163, 164, 167, 171, 173, 174, 176, 179, 180, 182, 183, 188, 189, 190, 194, 196, 197, 199, 201, 203, 204, 206, 207, 209, 210, 211, 212, 213, 215, 217, 219, 221, 222, 223, 224, 225, 227, 229, 232, 233, 239, 240, 241, 243, 244, 246, 248, 249, 250, 254, 256, 257, 258, 261, 262, 264, 265, 266, 270, 273, 274, 276, 277, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 298, 299, 301, 303, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 321, 322, 323, 327, 328, 329, 331, 333, 334, 335, 337, 339, 340, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 387, 388, 389, 390, 391, 393, 396, 397, 399, 401, 403, 404, 405, 408, 409, 410, 414, 415, 417, 420, 422, 424, 425, 426, 428, 430, 434, 437, 439, 440, 442, 443, 445, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "ten": [1, 97, 105, 114, 173, 190, 199, 323, 333, 341, 363, 480], "word": [1, 5, 10, 11, 33, 62, 67, 71, 72, 75, 80, 85, 90, 92, 97, 98, 99, 104, 106, 110, 114, 116, 117, 118, 119, 131, 167, 171, 173, 180, 186, 189, 196, 199, 203, 207, 215, 217, 222, 250, 261, 290, 307, 311, 312, 333, 334, 335, 341, 346, 356, 359, 360, 361, 365, 379, 380, 384, 401, 427, 428, 432, 445, 447, 449, 450, 451, 456, 457, 460, 464, 465, 474, 477, 479, 481, 482, 483, 485, 488, 492, 493, 494, 495], "describ": [1, 5, 7, 10, 13, 16, 21, 23, 24, 26, 31, 32, 35, 42, 45, 49, 50, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 75, 77, 79, 81, 84, 85, 86, 87, 88, 89, 90, 92, 97, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 133, 134, 138, 140, 149, 156, 157, 158, 163, 164, 165, 171, 173, 176, 177, 179, 180, 182, 187, 188, 189, 190, 193, 194, 195, 197, 199, 200, 201, 203, 204, 207, 208, 209, 210, 216, 217, 222, 227, 230, 231, 233, 236, 237, 238, 239, 244, 249, 251, 256, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 286, 291, 292, 295, 296, 299, 300, 303, 304, 305, 307, 308, 310, 313, 314, 321, 322, 323, 327, 329, 330, 331, 332, 333, 334, 336, 337, 339, 343, 347, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 363, 364, 366, 368, 369, 372, 373, 375, 378, 380, 384, 390, 391, 399, 401, 403, 404, 406, 409, 410, 412, 414, 419, 420, 421, 422, 423, 425, 429, 430, 431, 434, 436, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 460, 461, 463, 464, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "detail": [1, 10, 13, 17, 18, 26, 32, 33, 34, 42, 45, 53, 54, 56, 58, 62, 63, 65, 67, 71, 72, 76, 80, 83, 84, 85, 86, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 119, 120, 121, 123, 125, 128, 129, 131, 133, 134, 137, 138, 141, 142, 145, 148, 149, 151, 152, 154, 155, 157, 161, 164, 165, 166, 171, 181, 182, 183, 185, 186, 188, 189, 190, 194, 195, 198, 199, 203, 204, 206, 207, 208, 210, 215, 219, 221, 225, 227, 229, 237, 239, 240, 244, 248, 249, 251, 255, 259, 260, 261, 263, 264, 265, 266, 270, 273, 274, 277, 280, 282, 284, 285, 286, 287, 289, 290, 296, 298, 302, 303, 305, 307, 308, 310, 314, 315, 316, 329, 331, 333, 334, 335, 337, 339, 341, 346, 347, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 363, 364, 365, 368, 369, 370, 371, 373, 374, 377, 379, 380, 384, 388, 396, 400, 401, 403, 404, 409, 410, 411, 412, 414, 415, 417, 420, 422, 423, 425, 428, 430, 434, 436, 437, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 464, 465, 467, 469, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "expect": [1, 5, 9, 23, 28, 35, 45, 51, 56, 57, 62, 65, 67, 74, 75, 76, 78, 80, 85, 87, 88, 89, 90, 96, 97, 99, 101, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 131, 133, 138, 139, 145, 146, 151, 152, 164, 166, 171, 173, 180, 182, 189, 190, 194, 199, 200, 201, 203, 204, 207, 211, 217, 227, 235, 237, 239, 244, 249, 256, 257, 259, 265, 266, 268, 270, 273, 276, 277, 281, 282, 284, 286, 293, 298, 306, 307, 308, 314, 317, 324, 327, 341, 343, 345, 346, 348, 353, 356, 357, 359, 360, 364, 368, 369, 373, 374, 375, 377, 381, 391, 393, 399, 400, 401, 404, 405, 408, 409, 410, 412, 414, 422, 423, 428, 430, 431, 434, 439, 440, 443, 445, 446, 447, 455, 456, 459, 467, 468, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "happen": [1, 18, 23, 25, 33, 35, 58, 63, 67, 85, 88, 90, 96, 98, 101, 104, 105, 107, 114, 117, 120, 126, 138, 150, 151, 152, 170, 182, 189, 190, 194, 196, 203, 221, 227, 237, 239, 240, 250, 261, 265, 270, 273, 281, 282, 283, 284, 299, 307, 308, 310, 314, 329, 334, 343, 349, 353, 357, 360, 361, 368, 374, 376, 377, 380, 384, 396, 403, 404, 405, 410, 422, 442, 443, 444, 445, 447, 450, 451, 455, 456, 458, 463, 465, 477, 479, 481, 482, 483, 484, 485, 487, 491, 492, 495, 496], "did": [1, 88, 96, 99, 101, 114, 116, 117, 120, 139, 151, 179, 180, 204, 207, 216, 257, 259, 298, 299, 301, 307, 308, 329, 334, 344, 357, 364, 368, 375, 380, 397, 401, 403, 410, 430, 437, 443, 446, 457, 464, 477, 478, 479, 487, 489, 490, 491, 494, 495], "Be": [1, 80, 84, 88, 96, 113, 119, 180, 192, 194, 227, 239, 277, 286, 307, 308, 323, 357, 369, 399, 461, 463, 465, 466, 483], "sure": [1, 14, 16, 23, 45, 51, 62, 63, 78, 80, 84, 87, 88, 90, 91, 96, 97, 98, 104, 107, 113, 114, 116, 121, 131, 164, 168, 171, 180, 189, 199, 227, 239, 241, 249, 265, 281, 298, 307, 308, 311, 329, 344, 356, 357, 365, 377, 380, 384, 410, 412, 415, 416, 428, 436, 443, 455, 464, 466, 469, 474, 475, 476, 479, 480, 482, 483, 485, 489, 490], "extens": [1, 3, 5, 7, 10, 11, 23, 32, 34, 35, 42, 45, 50, 56, 61, 62, 63, 65, 67, 72, 74, 76, 77, 78, 84, 90, 92, 94, 97, 98, 99, 104, 106, 109, 115, 116, 125, 129, 151, 156, 165, 180, 186, 189, 190, 194, 196, 197, 202, 203, 206, 207, 208, 214, 217, 222, 232, 234, 241, 249, 250, 255, 256, 259, 260, 262, 264, 265, 266, 269, 270, 271, 273, 277, 284, 286, 288, 291, 295, 303, 304, 307, 308, 309, 311, 312, 314, 320, 323, 327, 329, 332, 333, 334, 345, 346, 347, 348, 350, 351, 353, 356, 357, 360, 368, 369, 370, 373, 377, 380, 383, 384, 397, 399, 400, 401, 403, 417, 420, 425, 426, 429, 430, 434, 436, 437, 441, 443, 445, 447, 448, 453, 454, 455, 456, 460, 465, 466, 470, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496], "modul": [1, 3, 5, 7, 11, 16, 17, 20, 23, 24, 27, 32, 33, 34, 35, 41, 42, 57, 58, 60, 62, 63, 64, 65, 67, 72, 74, 76, 78, 79, 81, 82, 84, 86, 87, 88, 89, 90, 92, 93, 98, 99, 100, 101, 106, 108, 109, 110, 113, 115, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 143, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 319, 320, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 354, 355, 357, 358, 359, 361, 362, 363, 365, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 475, 485, 498], "were": [1, 5, 7, 9, 10, 16, 17, 18, 23, 26, 33, 35, 48, 62, 63, 65, 71, 81, 85, 87, 88, 90, 95, 99, 105, 107, 113, 114, 116, 117, 121, 123, 124, 131, 132, 133, 137, 138, 145, 146, 151, 153, 155, 157, 159, 164, 171, 173, 179, 180, 182, 190, 194, 196, 199, 201, 203, 204, 207, 210, 213, 214, 215, 217, 219, 221, 222, 227, 230, 237, 239, 241, 242, 246, 249, 250, 254, 256, 258, 261, 263, 265, 266, 270, 277, 282, 283, 290, 291, 293, 298, 304, 308, 310, 314, 323, 329, 331, 334, 345, 348, 350, 351, 353, 356, 359, 360, 361, 363, 364, 368, 371, 373, 374, 377, 384, 391, 395, 396, 397, 399, 401, 403, 404, 405, 409, 410, 415, 422, 427, 428, 438, 442, 443, 445, 447, 449, 450, 451, 455, 456, 458, 459, 462, 465, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "hardwar": [1, 33, 71, 90, 119, 121, 143, 154, 190, 199, 272, 308, 310, 337, 353, 364, 381, 413, 420, 459, 484, 492], "softwar": [1, 33, 67, 68, 71, 72, 80, 89, 95, 97, 98, 99, 107, 113, 114, 119, 121, 122, 164, 171, 190, 200, 207, 208, 224, 226, 242, 249, 259, 260, 261, 269, 281, 282, 303, 308, 322, 333, 357, 381, 399, 414, 420, 422, 434, 454, 466, 474, 475, 476, 477, 478, 480, 481, 483, 484, 498], "platform": [1, 5, 9, 18, 25, 32, 33, 34, 35, 42, 58, 60, 63, 64, 67, 71, 72, 73, 76, 78, 80, 81, 83, 84, 85, 87, 88, 90, 92, 93, 96, 97, 114, 117, 126, 129, 132, 134, 135, 138, 145, 152, 163, 164, 169, 171, 176, 179, 186, 188, 189, 196, 199, 202, 207, 222, 224, 226, 227, 233, 237, 239, 243, 249, 256, 259, 261, 262, 264, 265, 266, 269, 271, 273, 281, 284, 286, 290, 293, 297, 298, 299, 302, 303, 307, 308, 309, 311, 320, 322, 323, 324, 337, 338, 341, 343, 344, 348, 350, 351, 353, 354, 355, 356, 357, 358, 363, 364, 368, 369, 370, 373, 374, 375, 377, 380, 381, 382, 383, 384, 388, 393, 403, 410, 413, 414, 418, 419, 421, 422, 434, 435, 440, 445, 450, 453, 459, 460, 461, 465, 470, 471, 473, 474, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 498], "version": [1, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 72, 75, 76, 78, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 123, 126, 127, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 186, 188, 189, 190, 194, 196, 197, 199, 201, 203, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 295, 296, 297, 298, 299, 301, 302, 303, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 380, 381, 382, 384, 387, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 422, 423, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 459, 462, 463, 465, 467, 468, 470, 471, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498], "appropri": [1, 5, 9, 15, 18, 23, 24, 31, 41, 42, 49, 53, 60, 62, 63, 67, 71, 75, 78, 80, 83, 85, 87, 88, 90, 93, 100, 104, 106, 107, 108, 113, 114, 116, 117, 120, 121, 122, 123, 127, 131, 132, 138, 148, 149, 151, 152, 160, 164, 170, 171, 177, 181, 190, 196, 197, 199, 207, 209, 210, 212, 215, 216, 219, 220, 221, 222, 225, 237, 239, 240, 244, 249, 250, 251, 256, 257, 259, 262, 265, 273, 274, 281, 282, 283, 284, 286, 290, 298, 304, 307, 308, 311, 314, 322, 323, 329, 331, 334, 339, 343, 348, 350, 351, 353, 354, 357, 359, 360, 361, 363, 364, 368, 370, 373, 375, 380, 381, 390, 396, 399, 400, 401, 404, 408, 409, 410, 414, 417, 418, 423, 425, 426, 428, 430, 436, 437, 441, 444, 445, 447, 451, 457, 467, 470, 475, 476, 477, 478, 479, 480, 481, 483, 486, 487, 489, 490, 491, 492, 493, 494, 495], "each": [1, 5, 7, 10, 12, 13, 22, 23, 28, 31, 33, 34, 35, 37, 40, 42, 45, 56, 58, 60, 62, 71, 72, 74, 78, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 96, 98, 99, 101, 104, 105, 106, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 131, 133, 134, 138, 144, 145, 146, 150, 151, 152, 154, 156, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 176, 179, 180, 182, 188, 189, 190, 192, 194, 196, 197, 199, 203, 204, 207, 209, 210, 211, 216, 217, 218, 219, 222, 225, 226, 228, 230, 232, 237, 239, 240, 241, 242, 244, 246, 249, 250, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 296, 298, 299, 303, 307, 308, 309, 310, 311, 312, 314, 315, 317, 320, 322, 323, 324, 327, 328, 329, 331, 333, 334, 335, 337, 340, 341, 344, 346, 347, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 368, 369, 370, 371, 373, 374, 376, 377, 379, 380, 382, 384, 387, 388, 390, 391, 393, 395, 396, 399, 400, 401, 402, 403, 404, 405, 409, 410, 414, 415, 417, 420, 422, 423, 424, 425, 426, 428, 430, 432, 434, 435, 437, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 457, 458, 461, 464, 465, 466, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496], "review": [1, 56, 120, 156, 182, 249, 356, 480, 485, 487, 489, 493, 495], "who": [1, 11, 32, 67, 72, 80, 85, 92, 95, 108, 111, 113, 114, 118, 119, 138, 176, 242, 244, 262, 282, 289, 308, 315, 337, 341, 357, 361, 373, 399, 426, 436, 438, 440, 441, 461, 476, 477, 479, 480, 481, 482, 484, 488, 490, 493, 495, 496], "correct": [1, 7, 33, 62, 63, 67, 72, 83, 85, 89, 97, 106, 107, 108, 111, 119, 120, 123, 125, 145, 182, 189, 200, 201, 204, 207, 210, 211, 213, 222, 225, 230, 254, 257, 261, 262, 265, 269, 290, 293, 298, 304, 307, 308, 310, 314, 329, 346, 347, 353, 357, 359, 360, 361, 363, 364, 365, 368, 381, 399, 401, 403, 404, 405, 410, 414, 416, 422, 430, 436, 439, 440, 441, 443, 445, 455, 456, 458, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496], "receiv": [1, 5, 16, 23, 33, 35, 45, 49, 66, 67, 84, 85, 88, 92, 96, 107, 113, 117, 120, 125, 126, 131, 134, 136, 138, 142, 144, 145, 146, 148, 150, 152, 164, 168, 171, 180, 189, 203, 227, 237, 239, 249, 254, 256, 257, 258, 259, 261, 262, 274, 282, 283, 284, 289, 290, 298, 303, 310, 314, 320, 324, 329, 331, 333, 337, 344, 347, 348, 350, 351, 353, 354, 357, 364, 374, 380, 391, 396, 401, 403, 410, 415, 417, 422, 425, 426, 428, 429, 430, 435, 441, 442, 444, 445, 456, 466, 477, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "updat": [1, 22, 33, 34, 42, 45, 51, 58, 62, 67, 71, 87, 88, 92, 96, 97, 98, 104, 105, 107, 114, 119, 127, 128, 131, 138, 142, 145, 147, 153, 173, 174, 176, 182, 190, 192, 196, 202, 204, 207, 210, 219, 221, 227, 239, 240, 249, 250, 251, 258, 261, 262, 264, 265, 270, 273, 280, 286, 293, 296, 298, 303, 306, 307, 308, 311, 314, 317, 321, 330, 333, 339, 345, 353, 356, 357, 360, 364, 370, 373, 381, 384, 391, 395, 399, 400, 404, 409, 410, 414, 416, 422, 428, 436, 443, 447, 451, 455, 466, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "action": [1, 33, 42, 54, 67, 71, 85, 87, 88, 101, 104, 116, 126, 129, 133, 134, 157, 168, 173, 182, 188, 190, 203, 214, 229, 242, 250, 256, 262, 296, 298, 308, 312, 316, 323, 324, 340, 343, 348, 350, 354, 356, 360, 368, 373, 374, 376, 380, 391, 399, 403, 404, 410, 414, 415, 422, 439, 441, 443, 456, 460, 470, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 489, 491, 496], "taken": [1, 5, 33, 42, 45, 54, 62, 65, 78, 85, 87, 99, 107, 114, 131, 152, 154, 157, 173, 176, 180, 196, 199, 204, 207, 210, 216, 219, 220, 225, 230, 239, 241, 244, 262, 276, 281, 283, 284, 291, 293, 298, 308, 309, 323, 326, 329, 337, 341, 346, 350, 356, 357, 359, 360, 363, 373, 377, 379, 380, 382, 396, 397, 410, 412, 415, 442, 443, 447, 451, 455, 465, 477, 479, 480, 482, 488, 489, 490, 491, 495], "effect": [1, 9, 11, 14, 23, 33, 34, 45, 51, 58, 62, 63, 67, 75, 85, 87, 90, 96, 97, 99, 100, 104, 105, 107, 111, 113, 114, 116, 117, 118, 120, 121, 122, 124, 126, 131, 132, 133, 138, 144, 153, 157, 160, 172, 179, 180, 182, 189, 190, 194, 196, 199, 200, 204, 207, 217, 222, 223, 224, 227, 229, 232, 239, 240, 241, 245, 250, 257, 261, 273, 276, 278, 281, 282, 283, 284, 287, 298, 307, 308, 310, 311, 312, 317, 323, 326, 329, 333, 334, 337, 338, 339, 340, 343, 345, 346, 347, 349, 357, 358, 359, 360, 361, 364, 368, 373, 375, 377, 379, 380, 381, 391, 397, 399, 400, 401, 403, 404, 415, 420, 427, 435, 436, 437, 440, 442, 443, 445, 447, 450, 451, 455, 456, 457, 460, 465, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "articl": [1, 107, 119, 240, 249, 276, 286, 303, 357, 399, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "goe": [1, 35, 80, 89, 99, 101, 105, 112, 116, 131, 133, 142, 145, 146, 180, 182, 190, 191, 207, 244, 257, 261, 283, 290, 298, 307, 329, 331, 359, 368, 396, 401, 442, 456, 465, 479, 487, 489, 490], "some": [1, 2, 5, 7, 10, 21, 23, 28, 33, 34, 35, 42, 56, 57, 58, 59, 60, 62, 63, 67, 71, 72, 74, 75, 78, 80, 83, 84, 85, 86, 87, 88, 92, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 138, 142, 143, 144, 145, 149, 150, 151, 154, 158, 162, 164, 167, 168, 170, 171, 173, 174, 176, 177, 179, 180, 181, 182, 188, 189, 190, 193, 194, 195, 196, 197, 199, 201, 203, 204, 207, 208, 209, 210, 212, 213, 217, 218, 219, 220, 221, 222, 223, 227, 229, 230, 232, 233, 235, 239, 240, 241, 244, 248, 249, 250, 253, 254, 257, 258, 261, 262, 264, 265, 266, 269, 270, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 297, 298, 299, 303, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 321, 323, 326, 329, 333, 334, 337, 343, 344, 346, 347, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 384, 391, 392, 396, 397, 399, 400, 401, 403, 404, 405, 406, 409, 410, 413, 414, 415, 417, 418, 422, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "about": [1, 5, 7, 10, 14, 23, 25, 35, 42, 56, 62, 63, 65, 67, 71, 75, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 125, 131, 133, 138, 140, 142, 145, 154, 156, 157, 167, 168, 170, 171, 173, 174, 175, 182, 185, 188, 189, 191, 194, 196, 199, 200, 203, 204, 208, 209, 211, 215, 217, 221, 223, 227, 230, 237, 239, 241, 249, 251, 257, 259, 261, 265, 270, 272, 273, 276, 280, 282, 283, 284, 285, 286, 290, 293, 294, 298, 303, 304, 306, 307, 308, 311, 312, 314, 315, 318, 320, 322, 323, 327, 333, 334, 335, 337, 343, 345, 347, 348, 351, 353, 355, 356, 357, 358, 359, 360, 363, 364, 368, 373, 374, 377, 384, 391, 396, 399, 401, 403, 404, 405, 409, 410, 411, 413, 414, 415, 417, 420, 422, 423, 424, 425, 427, 429, 430, 431, 437, 438, 439, 440, 442, 443, 444, 445, 447, 449, 451, 454, 456, 457, 458, 460, 461, 464, 465, 468, 469, 470, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498], "kind": [1, 16, 34, 35, 62, 63, 67, 85, 88, 90, 91, 97, 99, 111, 112, 114, 117, 119, 121, 131, 133, 145, 164, 173, 189, 207, 227, 239, 264, 265, 266, 270, 272, 273, 296, 298, 304, 308, 311, 314, 316, 334, 343, 356, 357, 360, 362, 368, 380, 384, 388, 401, 403, 410, 415, 424, 428, 429, 430, 441, 442, 443, 445, 446, 447, 455, 456, 458, 459, 471, 476, 479, 480, 485, 487, 489, 490, 491, 492, 493, 494, 495], "why": [1, 35, 67, 85, 86, 87, 94, 104, 105, 106, 107, 111, 113, 119, 121, 125, 127, 164, 180, 189, 207, 215, 249, 268, 276, 286, 290, 298, 307, 314, 361, 370, 403, 404, 405, 422, 443, 455, 459, 468, 476, 479, 482, 484, 494], "write": [1, 5, 7, 18, 23, 24, 25, 28, 32, 33, 34, 35, 36, 41, 42, 43, 57, 58, 62, 63, 67, 71, 72, 77, 78, 81, 84, 86, 87, 88, 90, 92, 95, 98, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 121, 123, 125, 127, 130, 131, 132, 134, 135, 138, 142, 147, 148, 149, 151, 152, 153, 155, 156, 160, 162, 164, 168, 170, 171, 173, 174, 176, 180, 182, 183, 189, 190, 193, 197, 200, 202, 207, 210, 214, 215, 219, 222, 227, 229, 231, 232, 233, 236, 237, 239, 240, 241, 242, 244, 248, 250, 257, 259, 260, 261, 262, 265, 269, 273, 274, 277, 282, 283, 284, 286, 289, 292, 293, 298, 299, 301, 303, 307, 308, 309, 310, 311, 313, 314, 316, 319, 320, 322, 323, 324, 326, 332, 333, 335, 343, 344, 345, 346, 347, 348, 353, 354, 357, 358, 360, 363, 364, 366, 368, 370, 371, 374, 375, 378, 380, 383, 384, 386, 391, 393, 394, 395, 397, 399, 401, 403, 404, 405, 412, 414, 415, 420, 422, 425, 426, 428, 430, 432, 434, 436, 437, 439, 441, 442, 443, 446, 447, 448, 451, 454, 455, 456, 458, 459, 460, 464, 465, 466, 467, 470, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "guidelin": [1, 35, 67, 87, 100, 112, 177, 261, 377, 388, 477, 478, 482], "mozilla": [1, 120, 257, 357, 410, 418, 481], "practic": [1, 35, 42, 62, 67, 72, 86, 88, 92, 96, 99, 104, 107, 109, 111, 113, 114, 120, 131, 134, 152, 187, 190, 191, 199, 207, 208, 213, 237, 239, 249, 256, 262, 266, 270, 298, 299, 303, 320, 333, 351, 357, 360, 373, 381, 384, 401, 409, 426, 440, 441, 443, 445, 455, 456, 458, 459, 461, 464, 465, 478, 479, 480, 485, 487, 488, 489, 491, 494], "beyond": [1, 33, 67, 80, 86, 92, 99, 101, 104, 111, 116, 129, 173, 196, 199, 211, 217, 270, 277, 283, 286, 297, 308, 334, 353, 356, 357, 360, 363, 401, 420, 442, 449, 456, 478, 490], "them": [1, 5, 7, 15, 16, 22, 23, 24, 33, 34, 35, 45, 56, 58, 62, 63, 65, 67, 71, 72, 75, 76, 78, 80, 81, 83, 85, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 106, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 131, 132, 133, 137, 138, 140, 146, 151, 152, 160, 164, 168, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 188, 189, 190, 194, 196, 197, 199, 201, 204, 206, 207, 209, 210, 215, 220, 222, 228, 230, 239, 240, 241, 244, 245, 246, 249, 250, 254, 257, 258, 261, 262, 265, 266, 270, 272, 273, 281, 282, 283, 284, 286, 298, 299, 303, 304, 306, 307, 308, 310, 311, 314, 318, 322, 323, 332, 333, 334, 337, 339, 343, 345, 350, 351, 353, 356, 357, 358, 359, 360, 363, 364, 365, 368, 370, 373, 374, 377, 379, 380, 382, 384, 390, 391, 397, 399, 401, 403, 404, 405, 410, 415, 416, 420, 424, 425, 426, 427, 428, 437, 442, 443, 445, 446, 447, 449, 451, 456, 457, 458, 459, 461, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "more": [1, 5, 10, 11, 17, 18, 23, 24, 25, 33, 34, 35, 42, 45, 49, 55, 57, 59, 62, 63, 64, 65, 67, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 105, 106, 107, 109, 110, 112, 113, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 138, 141, 142, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 166, 168, 170, 171, 173, 174, 175, 176, 179, 180, 182, 183, 185, 186, 188, 189, 190, 194, 196, 197, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 227, 229, 232, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 254, 256, 257, 259, 261, 262, 264, 265, 266, 267, 270, 272, 273, 274, 275, 276, 277, 282, 283, 284, 285, 286, 290, 291, 293, 296, 298, 299, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 322, 323, 326, 327, 329, 331, 332, 333, 334, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 373, 374, 376, 377, 379, 380, 381, 382, 384, 389, 390, 391, 392, 396, 397, 401, 403, 404, 409, 410, 411, 414, 415, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 430, 434, 435, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 454, 455, 458, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "": [1, 3, 5, 7, 9, 10, 11, 14, 15, 18, 19, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 42, 43, 45, 49, 51, 52, 54, 56, 57, 58, 60, 61, 62, 63, 65, 67, 71, 72, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 141, 142, 145, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 233, 234, 235, 236, 237, 239, 240, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 319, 320, 322, 324, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 366, 368, 369, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 390, 391, 393, 394, 395, 396, 397, 400, 401, 403, 404, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476], "question": [1, 57, 67, 71, 85, 90, 91, 98, 99, 106, 107, 113, 114, 116, 119, 124, 133, 154, 171, 207, 208, 249, 281, 282, 307, 320, 356, 384, 388, 411, 421, 422, 457, 466, 469, 477, 479, 480, 482, 494, 496], "core": [1, 23, 28, 34, 51, 58, 67, 75, 76, 77, 78, 80, 83, 85, 88, 99, 108, 113, 116, 129, 138, 176, 179, 180, 219, 249, 265, 266, 269, 272, 276, 281, 284, 306, 307, 308, 315, 323, 328, 333, 337, 348, 360, 377, 380, 384, 400, 404, 414, 425, 428, 440, 441, 443, 448, 451, 465, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 498], "mentorship": 1, "friendli": [1, 62, 104, 114, 131, 208, 307, 353, 368, 403, 428, 440, 455, 477, 491, 494, 496], "place": [1, 23, 33, 34, 35, 38, 42, 45, 47, 51, 53, 57, 59, 60, 62, 63, 67, 71, 72, 74, 85, 86, 87, 88, 89, 90, 91, 95, 96, 99, 105, 106, 107, 110, 112, 113, 114, 118, 120, 121, 123, 131, 133, 146, 151, 152, 164, 165, 171, 173, 180, 181, 182, 189, 190, 194, 196, 199, 202, 203, 204, 207, 210, 219, 222, 225, 232, 238, 239, 240, 241, 244, 246, 249, 250, 257, 261, 264, 265, 272, 273, 277, 282, 283, 284, 286, 290, 293, 298, 308, 312, 314, 317, 323, 326, 329, 331, 333, 334, 339, 354, 356, 357, 360, 361, 364, 379, 384, 390, 391, 395, 399, 400, 401, 403, 404, 405, 410, 412, 414, 422, 436, 437, 441, 442, 443, 445, 447, 451, 455, 456, 457, 461, 463, 464, 465, 467, 468, 470, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495], "answer": [1, 71, 90, 97, 101, 105, 106, 122, 145, 167, 207, 240, 249, 283, 286, 323, 361, 381, 388, 411, 455, 457, 459, 461, 466, 469, 477, 481, 485], "all": [1, 2, 4, 5, 7, 9, 14, 17, 22, 23, 25, 28, 31, 33, 34, 35, 38, 39, 42, 45, 47, 51, 54, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 89, 92, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 299, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 314, 315, 317, 318, 320, 323, 324, 325, 326, 327, 328, 329, 331, 333, 337, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 390, 391, 393, 395, 396, 399, 400, 401, 402, 403, 404, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 498], "pertain": [1, 33, 35, 62, 85, 308, 368, 390, 441, 485], "function": [2, 6, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 72, 75, 76, 77, 78, 80, 83, 84, 86, 87, 88, 89, 92, 93, 96, 98, 99, 100, 101, 104, 108, 109, 110, 111, 113, 114, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 168, 170, 171, 172, 174, 175, 177, 180, 181, 183, 184, 187, 188, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 256, 257, 259, 261, 262, 263, 264, 269, 271, 272, 273, 277, 279, 280, 281, 284, 285, 287, 288, 289, 291, 293, 295, 296, 298, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 321, 323, 324, 326, 328, 329, 330, 331, 332, 335, 336, 337, 339, 340, 343, 345, 346, 347, 348, 349, 352, 354, 355, 358, 362, 365, 366, 367, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 384, 386, 388, 392, 393, 394, 395, 396, 402, 404, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 439, 444, 446, 447, 448, 450, 451, 452, 454, 455, 457, 458, 459, 460, 461, 462, 464, 466, 467, 469, 470, 471, 474, 476, 479, 480, 484, 486, 487, 489, 491, 495, 496, 498], "chapter": [2, 16, 23, 35, 42, 50, 64, 65, 75, 78, 84, 85, 87, 88, 89, 90, 96, 103, 107, 129, 130, 158, 177, 187, 193, 195, 200, 227, 231, 233, 236, 238, 260, 261, 271, 272, 275, 292, 295, 300, 305, 313, 330, 366, 368, 378, 382, 406, 419, 445, 449, 450, 452, 454, 456, 457, 461], "interact": [2, 23, 33, 34, 35, 42, 58, 62, 65, 67, 71, 84, 91, 92, 96, 97, 98, 99, 105, 114, 116, 121, 125, 126, 131, 133, 138, 148, 157, 163, 168, 179, 181, 190, 193, 199, 200, 204, 208, 221, 227, 228, 232, 239, 257, 261, 264, 269, 270, 272, 273, 298, 299, 307, 308, 309, 310, 312, 322, 323, 328, 330, 335, 338, 349, 350, 357, 364, 368, 369, 373, 374, 384, 390, 391, 396, 399, 403, 410, 415, 428, 435, 437, 443, 446, 447, 448, 449, 450, 451, 454, 455, 456, 460, 464, 465, 466, 470, 476, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "pythonregardless": [2, 9, 10, 24, 33, 34, 35, 41, 58, 63, 71, 72, 80, 90, 106, 121, 125, 131, 151, 179, 182, 188, 190, 196, 199, 222, 225, 234, 239, 261, 265, 272, 273, 276, 277, 311, 317, 329, 348, 349, 351, 353, 356, 357, 360, 361, 363, 364, 368, 370, 375, 391, 399, 403, 404, 405, 414, 415, 417, 418, 427, 440, 445, 447, 450, 458, 470, 476, 489, 490, 491, 492, 494], "type": [2, 3, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 66, 67, 71, 72, 77, 78, 85, 86, 89, 91, 92, 96, 97, 98, 99, 100, 101, 104, 105, 108, 111, 113, 114, 117, 120, 121, 123, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 151, 152, 155, 157, 158, 163, 164, 165, 166, 168, 171, 173, 174, 180, 181, 182, 184, 185, 186, 188, 190, 191, 197, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 230, 235, 237, 239, 240, 241, 244, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 276, 277, 281, 282, 283, 284, 285, 287, 288, 289, 290, 293, 294, 296, 298, 299, 300, 305, 306, 308, 309, 311, 312, 313, 318, 319, 321, 322, 323, 328, 329, 330, 331, 333, 334, 335, 336, 339, 340, 343, 344, 345, 346, 347, 348, 353, 354, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 373, 375, 377, 378, 380, 381, 383, 388, 391, 392, 393, 394, 396, 397, 399, 403, 404, 405, 409, 410, 414, 415, 416, 417, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 434, 435, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 484, 485, 486, 489, 498], "wide": [2, 32, 34, 58, 63, 67, 71, 86, 90, 92, 104, 107, 112, 113, 119, 121, 122, 126, 131, 142, 144, 147, 154, 163, 168, 180, 189, 190, 196, 199, 207, 208, 257, 261, 269, 270, 272, 281, 286, 297, 308, 310, 314, 317, 320, 330, 345, 357, 359, 360, 363, 364, 373, 378, 380, 381, 390, 425, 437, 440, 441, 461, 471, 476, 479, 482, 483, 484, 488, 489, 490, 491], "class": [2, 10, 22, 28, 32, 33, 40, 44, 45, 49, 51, 52, 53, 57, 60, 61, 62, 63, 66, 67, 75, 76, 77, 78, 80, 85, 87, 88, 92, 96, 98, 99, 100, 104, 107, 111, 113, 116, 117, 118, 119, 120, 123, 124, 129, 132, 134, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 177, 180, 182, 183, 184, 185, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 225, 232, 233, 235, 236, 237, 238, 239, 240, 241, 246, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 267, 269, 271, 274, 276, 277, 279, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 299, 300, 301, 303, 305, 307, 308, 310, 311, 312, 313, 315, 316, 317, 319, 320, 322, 326, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 348, 350, 351, 353, 354, 356, 357, 359, 361, 364, 367, 368, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 397, 402, 409, 411, 413, 414, 415, 416, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 444, 445, 446, 447, 448, 449, 451, 454, 456, 457, 458, 460, 461, 465, 466, 467, 470, 476, 477, 478, 480, 481, 484, 485, 486, 489, 491, 492, 494, 495, 496, 498], "e": [2, 3, 4, 5, 7, 9, 17, 18, 23, 33, 34, 35, 45, 49, 51, 56, 58, 59, 62, 63, 65, 67, 71, 73, 74, 75, 78, 80, 83, 92, 96, 97, 99, 101, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 131, 133, 134, 137, 138, 141, 143, 144, 145, 148, 150, 151, 154, 156, 162, 163, 164, 167, 168, 171, 173, 174, 176, 179, 180, 181, 182, 183, 188, 189, 190, 196, 199, 203, 207, 209, 210, 213, 214, 216, 219, 220, 223, 225, 227, 228, 229, 230, 231, 232, 237, 239, 240, 241, 242, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 265, 267, 268, 270, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 289, 290, 291, 296, 298, 299, 303, 306, 307, 308, 309, 310, 311, 312, 314, 317, 318, 323, 326, 328, 334, 337, 339, 343, 344, 346, 347, 348, 350, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 373, 377, 380, 381, 384, 387, 391, 393, 394, 399, 400, 401, 402, 403, 404, 410, 413, 414, 415, 417, 420, 422, 423, 425, 426, 427, 428, 429, 434, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 455, 456, 457, 458, 463, 464, 465, 467, 470, 471, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "g": [2, 4, 5, 17, 18, 23, 33, 35, 45, 51, 56, 58, 62, 65, 67, 71, 73, 74, 75, 78, 83, 84, 85, 92, 96, 97, 99, 101, 104, 105, 106, 107, 110, 112, 113, 114, 116, 119, 120, 121, 123, 126, 131, 133, 137, 138, 141, 143, 144, 145, 148, 150, 156, 162, 163, 164, 167, 168, 171, 173, 175, 180, 181, 182, 183, 189, 190, 191, 196, 199, 207, 209, 210, 213, 216, 219, 220, 222, 223, 225, 227, 228, 229, 232, 237, 239, 240, 241, 242, 244, 245, 248, 249, 251, 252, 253, 254, 259, 261, 262, 265, 267, 268, 270, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 289, 291, 296, 298, 303, 306, 307, 308, 309, 311, 312, 314, 318, 321, 323, 326, 328, 334, 337, 339, 343, 344, 346, 347, 348, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 368, 370, 373, 380, 381, 382, 384, 391, 393, 394, 395, 399, 401, 402, 403, 404, 410, 414, 415, 420, 422, 425, 426, 428, 434, 437, 440, 442, 443, 445, 447, 449, 450, 455, 456, 457, 463, 464, 465, 467, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "numer": [2, 4, 7, 32, 41, 47, 62, 63, 67, 80, 92, 97, 99, 107, 113, 114, 116, 117, 119, 120, 134, 157, 160, 167, 171, 188, 190, 195, 199, 204, 223, 225, 226, 227, 235, 239, 247, 248, 252, 254, 256, 259, 269, 276, 277, 281, 282, 290, 298, 306, 308, 317, 323, 325, 329, 333, 334, 340, 346, 351, 353, 356, 357, 359, 361, 368, 384, 391, 392, 399, 402, 403, 404, 408, 410, 428, 434, 437, 445, 457, 459, 461, 464, 466, 476, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 495], "sequenc": [2, 5, 7, 14, 22, 32, 33, 35, 37, 39, 42, 49, 50, 55, 58, 63, 65, 67, 71, 73, 80, 87, 90, 91, 96, 99, 104, 106, 107, 112, 114, 116, 119, 123, 131, 132, 133, 138, 148, 151, 156, 158, 170, 171, 172, 173, 174, 176, 177, 188, 189, 190, 202, 203, 204, 207, 210, 216, 219, 220, 223, 226, 227, 232, 239, 244, 246, 250, 252, 257, 265, 269, 270, 273, 274, 276, 277, 278, 281, 283, 285, 286, 290, 291, 296, 298, 299, 305, 306, 307, 308, 309, 311, 314, 315, 316, 317, 322, 327, 329, 334, 336, 340, 341, 347, 353, 356, 357, 359, 361, 373, 374, 377, 378, 381, 382, 384, 391, 393, 396, 397, 399, 401, 402, 403, 404, 405, 409, 410, 413, 415, 417, 420, 425, 428, 429, 434, 439, 440, 445, 449, 451, 455, 456, 460, 464, 467, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "when": [2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 23, 28, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 53, 56, 57, 58, 60, 62, 63, 65, 66, 67, 71, 72, 75, 76, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 96, 98, 99, 100, 101, 104, 105, 107, 108, 110, 112, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 194, 196, 197, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 235, 237, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 281, 282, 283, 284, 285, 286, 290, 291, 293, 296, 298, 299, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 373, 374, 375, 376, 377, 380, 381, 382, 384, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 422, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "us": [2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 71, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 93, 95, 98, 99, 100, 101, 103, 104, 105, 107, 109, 110, 112, 115, 118, 119, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 387, 388, 389, 393, 394, 395, 396, 397, 400, 401, 402, 404, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 471, 473, 477, 478, 479, 480, 481, 484, 485, 486, 487, 489, 491, 492, 493, 494, 496, 498], "thei": [2, 5, 7, 8, 10, 18, 21, 23, 24, 28, 29, 33, 34, 35, 42, 45, 48, 53, 54, 56, 57, 58, 62, 63, 65, 71, 72, 75, 76, 78, 80, 81, 83, 85, 86, 87, 88, 90, 92, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 133, 137, 138, 141, 145, 146, 147, 150, 151, 152, 153, 154, 157, 160, 163, 164, 166, 167, 168, 171, 173, 174, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 196, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 219, 221, 222, 223, 225, 227, 229, 230, 232, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 254, 257, 258, 261, 262, 264, 265, 267, 270, 271, 273, 274, 276, 277, 282, 283, 284, 285, 286, 290, 291, 292, 296, 297, 298, 299, 303, 306, 307, 308, 309, 310, 311, 314, 317, 319, 320, 322, 323, 324, 327, 329, 331, 333, 334, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 390, 391, 392, 393, 395, 396, 399, 401, 402, 403, 404, 405, 408, 409, 410, 414, 415, 417, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 436, 437, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 455, 456, 457, 458, 459, 461, 464, 465, 466, 467, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "appli": [2, 6, 13, 18, 34, 35, 51, 62, 63, 67, 71, 72, 78, 80, 81, 85, 87, 90, 92, 93, 99, 100, 106, 107, 108, 113, 114, 121, 123, 127, 131, 132, 133, 151, 154, 160, 167, 171, 173, 182, 188, 189, 190, 191, 194, 196, 199, 200, 203, 204, 207, 212, 219, 222, 223, 227, 234, 237, 239, 240, 244, 249, 257, 258, 259, 261, 264, 270, 274, 276, 282, 283, 285, 286, 287, 291, 298, 307, 308, 312, 314, 323, 329, 334, 336, 337, 339, 343, 347, 353, 357, 359, 360, 361, 364, 368, 369, 373, 377, 380, 381, 382, 384, 391, 393, 397, 401, 402, 403, 404, 409, 411, 415, 424, 426, 428, 434, 437, 441, 442, 443, 445, 447, 451, 453, 455, 457, 461, 464, 465, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496], "rais": [2, 5, 7, 9, 10, 13, 14, 18, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 39, 45, 47, 49, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 85, 87, 88, 90, 98, 99, 100, 104, 105, 106, 107, 111, 114, 117, 119, 120, 123, 125, 126, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 166, 167, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 194, 196, 197, 199, 200, 204, 207, 208, 210, 211, 212, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 256, 257, 258, 259, 261, 262, 264, 265, 268, 269, 270, 271, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 296, 297, 298, 299, 301, 302, 303, 306, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 324, 325, 326, 329, 331, 333, 334, 337, 338, 340, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 380, 381, 384, 393, 394, 397, 399, 400, 401, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 453, 455, 456, 457, 460, 461, 465, 467, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "except": [2, 5, 7, 9, 10, 11, 13, 14, 17, 18, 22, 24, 25, 26, 28, 31, 32, 33, 34, 36, 38, 39, 40, 41, 45, 47, 48, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 73, 75, 77, 78, 80, 81, 83, 86, 87, 88, 91, 92, 96, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 116, 117, 119, 121, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 138, 141, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 177, 181, 183, 184, 186, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 203, 204, 208, 209, 210, 214, 215, 219, 220, 221, 222, 224, 226, 228, 229, 231, 232, 237, 239, 240, 241, 242, 243, 248, 249, 251, 254, 256, 257, 258, 259, 261, 262, 264, 265, 269, 270, 271, 272, 273, 276, 280, 281, 282, 283, 284, 285, 288, 289, 290, 293, 294, 296, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 323, 326, 330, 331, 332, 333, 335, 337, 338, 340, 343, 344, 345, 346, 347, 349, 350, 351, 354, 360, 361, 365, 368, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 384, 390, 393, 394, 396, 397, 400, 401, 403, 404, 407, 409, 410, 412, 414, 415, 416, 417, 418, 420, 422, 426, 429, 430, 431, 434, 435, 437, 438, 439, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 465, 467, 470, 471, 476, 477, 478, 479, 480, 481, 486, 487, 489, 491, 492, 493, 494, 495, 496, 498], "properli": [2, 6, 23, 33, 34, 35, 45, 46, 49, 58, 85, 88, 90, 108, 114, 116, 117, 125, 138, 149, 182, 183, 203, 216, 217, 221, 223, 225, 227, 244, 265, 281, 289, 298, 308, 323, 329, 351, 357, 363, 364, 373, 375, 380, 384, 391, 401, 403, 404, 409, 410, 430, 439, 443, 461, 463, 476, 478, 479, 480, 484, 485, 490, 491, 493, 495], "initi": [2, 3, 5, 16, 18, 22, 23, 24, 28, 31, 32, 35, 42, 49, 57, 58, 59, 60, 62, 63, 65, 67, 68, 71, 80, 81, 83, 84, 86, 88, 91, 97, 98, 104, 105, 107, 112, 113, 114, 118, 119, 125, 126, 131, 132, 133, 134, 138, 146, 147, 150, 151, 152, 153, 154, 155, 159, 168, 171, 173, 179, 180, 188, 189, 190, 194, 199, 202, 203, 207, 209, 216, 217, 220, 223, 227, 237, 239, 240, 241, 244, 246, 248, 249, 250, 251, 257, 261, 262, 264, 265, 269, 273, 276, 277, 281, 282, 283, 284, 285, 286, 291, 293, 295, 296, 298, 299, 301, 303, 307, 308, 309, 314, 316, 320, 323, 329, 333, 335, 346, 349, 350, 351, 353, 354, 356, 357, 360, 364, 368, 371, 374, 375, 380, 381, 382, 384, 391, 399, 400, 401, 403, 404, 410, 414, 415, 428, 434, 439, 440, 441, 442, 443, 446, 447, 450, 451, 452, 455, 457, 458, 464, 465, 470, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496], "pylist_new": [2, 35, 38, 56], "whose": [2, 5, 10, 23, 31, 33, 35, 42, 45, 59, 60, 62, 71, 85, 90, 97, 98, 99, 101, 105, 114, 131, 132, 133, 134, 152, 173, 182, 188, 189, 190, 194, 196, 199, 207, 212, 214, 217, 219, 222, 225, 227, 229, 230, 235, 239, 240, 242, 247, 250, 256, 257, 258, 267, 270, 273, 281, 282, 283, 284, 286, 289, 298, 304, 307, 308, 312, 314, 323, 325, 327, 331, 334, 337, 347, 348, 349, 353, 355, 356, 359, 360, 361, 368, 373, 375, 377, 380, 381, 384, 388, 391, 395, 396, 403, 404, 405, 410, 415, 417, 420, 428, 430, 442, 443, 445, 447, 450, 455, 457, 477, 478, 479, 481, 482, 483, 484, 490, 491, 492, 494, 495], "set": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 41, 42, 45, 48, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 71, 72, 74, 76, 80, 81, 84, 85, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 125, 126, 128, 131, 133, 134, 135, 137, 139, 141, 142, 145, 147, 148, 149, 150, 151, 152, 157, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 176, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 210, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 236, 237, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 254, 255, 256, 257, 258, 259, 262, 264, 266, 267, 269, 270, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 303, 306, 307, 308, 309, 310, 312, 314, 316, 318, 320, 322, 323, 326, 328, 329, 331, 333, 334, 335, 337, 338, 339, 343, 345, 346, 347, 349, 350, 351, 353, 354, 356, 358, 359, 361, 362, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 388, 389, 390, 391, 392, 394, 395, 397, 400, 401, 402, 403, 404, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 450, 451, 453, 455, 456, 460, 461, 463, 465, 466, 467, 469, 470, 471, 473, 474, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "non": [2, 5, 7, 9, 10, 11, 12, 18, 21, 22, 23, 25, 26, 28, 31, 34, 35, 36, 38, 39, 42, 45, 49, 57, 58, 59, 60, 62, 63, 67, 71, 72, 74, 78, 80, 83, 85, 87, 88, 92, 96, 97, 99, 104, 105, 106, 107, 110, 112, 113, 114, 119, 120, 126, 127, 131, 133, 137, 138, 144, 145, 151, 152, 156, 157, 162, 164, 168, 171, 179, 180, 182, 188, 189, 190, 191, 194, 196, 197, 199, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 229, 237, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 256, 257, 259, 261, 262, 264, 265, 267, 268, 272, 273, 274, 276, 280, 281, 282, 283, 284, 288, 290, 291, 293, 298, 299, 300, 301, 303, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 320, 321, 323, 326, 329, 331, 332, 333, 334, 335, 337, 341, 343, 346, 347, 348, 349, 351, 353, 354, 358, 359, 360, 361, 362, 363, 364, 368, 370, 373, 374, 377, 379, 380, 381, 392, 400, 401, 403, 404, 405, 408, 409, 410, 413, 414, 415, 416, 418, 430, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 455, 456, 457, 458, 464, 465, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496], "null": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 84, 87, 88, 91, 105, 112, 114, 119, 121, 133, 188, 189, 204, 239, 241, 257, 277, 287, 296, 299, 302, 308, 314, 333, 334, 353, 356, 357, 363, 364, 365, 420, 423, 425, 426, 437, 446, 450, 451, 477, 481, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496], "valu": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 80, 84, 86, 87, 88, 90, 99, 100, 101, 104, 105, 108, 111, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 129, 133, 134, 138, 139, 141, 145, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 179, 181, 182, 183, 186, 188, 190, 191, 195, 196, 197, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227, 229, 230, 231, 232, 235, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273, 274, 276, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 387, 388, 390, 391, 392, 393, 396, 397, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 444, 446, 447, 448, 450, 451, 455, 457, 458, 459, 460, 461, 464, 465, 466, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "yet": [2, 5, 13, 14, 23, 28, 31, 33, 34, 45, 62, 63, 71, 85, 90, 91, 92, 96, 97, 98, 101, 104, 106, 112, 113, 116, 122, 124, 136, 141, 145, 149, 151, 164, 179, 182, 189, 190, 199, 210, 211, 219, 227, 241, 246, 250, 265, 272, 283, 298, 308, 310, 312, 323, 349, 351, 357, 360, 364, 380, 396, 401, 404, 425, 428, 439, 444, 446, 451, 454, 455, 461, 465, 477, 479, 480, 482, 484, 491, 493, 494, 496], "protocol": [2, 8, 9, 23, 28, 32, 54, 57, 60, 62, 65, 67, 86, 91, 92, 96, 99, 106, 107, 111, 114, 117, 119, 120, 127, 132, 134, 135, 138, 141, 148, 149, 152, 154, 155, 158, 159, 164, 171, 174, 182, 189, 196, 197, 200, 208, 217, 223, 226, 231, 239, 249, 255, 257, 259, 265, 266, 269, 270, 273, 275, 277, 282, 283, 284, 286, 298, 308, 309, 310, 314, 315, 343, 344, 345, 353, 354, 356, 360, 362, 363, 366, 373, 374, 377, 380, 384, 404, 405, 410, 420, 422, 431, 434, 435, 438, 442, 443, 445, 450, 455, 461, 466, 471, 477, 479, 480, 482, 484, 485, 486, 487, 488, 489, 491, 494, 496, 498], "call": [2, 3, 5, 7, 9, 11, 13, 14, 15, 17, 18, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 75, 78, 80, 81, 83, 84, 86, 87, 88, 89, 93, 96, 98, 99, 100, 101, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 164, 166, 168, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 184, 186, 188, 190, 192, 194, 196, 197, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 237, 239, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 296, 297, 298, 299, 303, 304, 306, 308, 309, 310, 311, 312, 314, 317, 320, 322, 323, 324, 325, 329, 331, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 446, 447, 450, 451, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 496], "tp_call": [2, 23, 62, 67, 87], "vectorcal": [2, 57, 62, 67, 487, 488, 496], "recurs": [2, 32, 33, 67, 71, 73, 80, 81, 85, 97, 99, 107, 123, 133, 155, 164, 176, 180, 183, 184, 194, 203, 204, 207, 210, 214, 219, 227, 230, 239, 240, 245, 264, 265, 267, 277, 289, 298, 308, 311, 312, 314, 317, 322, 323, 328, 336, 345, 347, 358, 368, 372, 373, 380, 399, 401, 403, 404, 410, 427, 428, 437, 443, 447, 451, 455, 456, 457, 477, 478, 479, 480, 481, 483, 488, 489, 491, 492, 493, 494, 495], "control": [2, 7, 32, 33, 34, 35, 42, 48, 50, 57, 64, 67, 71, 72, 74, 75, 85, 86, 87, 89, 91, 95, 96, 99, 104, 105, 106, 112, 113, 114, 116, 118, 121, 126, 131, 135, 138, 142, 144, 145, 148, 149, 151, 152, 156, 157, 162, 164, 165, 168, 171, 173, 176, 179, 184, 188, 189, 190, 191, 196, 197, 199, 203, 206, 207, 208, 210, 211, 215, 216, 219, 221, 222, 224, 225, 227, 229, 232, 236, 237, 239, 241, 243, 248, 259, 261, 262, 265, 269, 270, 271, 273, 274, 277, 279, 282, 283, 284, 286, 291, 296, 297, 298, 299, 303, 307, 308, 310, 312, 313, 314, 320, 322, 323, 324, 326, 329, 330, 332, 336, 337, 343, 344, 346, 348, 353, 354, 357, 360, 362, 363, 364, 368, 373, 375, 379, 380, 382, 384, 389, 390, 391, 395, 396, 400, 403, 404, 405, 406, 409, 410, 414, 417, 420, 421, 422, 428, 430, 432, 434, 435, 437, 439, 441, 442, 443, 444, 445, 447, 449, 451, 453, 455, 458, 459, 460, 461, 463, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "support": [2, 5, 7, 12, 16, 22, 23, 24, 25, 32, 34, 35, 37, 38, 40, 42, 43, 47, 48, 49, 53, 56, 57, 59, 60, 62, 64, 66, 67, 71, 72, 74, 76, 80, 81, 83, 85, 86, 91, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 110, 111, 112, 113, 115, 116, 120, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 135, 138, 141, 142, 144, 145, 148, 149, 151, 152, 154, 156, 159, 160, 166, 171, 173, 174, 176, 177, 184, 186, 188, 189, 190, 193, 195, 196, 197, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 217, 218, 221, 222, 224, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 251, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 298, 299, 300, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 326, 329, 330, 331, 333, 334, 335, 336, 337, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 370, 374, 375, 376, 380, 381, 383, 384, 388, 391, 392, 393, 394, 396, 397, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 476, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 498], "api": [2, 7, 11, 13, 15, 16, 17, 20, 22, 23, 24, 26, 28, 35, 38, 39, 45, 46, 48, 54, 57, 58, 60, 62, 64, 67, 77, 80, 84, 86, 87, 88, 91, 96, 99, 100, 103, 104, 109, 112, 113, 114, 117, 118, 119, 120, 121, 123, 131, 137, 139, 140, 141, 144, 145, 148, 149, 151, 153, 155, 172, 174, 177, 182, 183, 188, 189, 190, 198, 200, 201, 204, 205, 206, 208, 209, 211, 212, 215, 216, 217, 219, 220, 222, 223, 225, 231, 237, 242, 249, 250, 260, 265, 269, 270, 272, 273, 274, 276, 277, 282, 283, 284, 286, 288, 295, 296, 297, 298, 300, 308, 309, 310, 313, 317, 319, 324, 333, 334, 335, 350, 353, 357, 358, 361, 368, 370, 372, 375, 377, 380, 384, 394, 401, 403, 404, 405, 409, 410, 415, 420, 421, 422, 424, 426, 429, 430, 434, 435, 444, 445, 447, 448, 450, 451, 455, 456, 460, 466, 476, 477, 478, 479, 498], "number": [2, 3, 4, 7, 9, 10, 13, 16, 18, 20, 22, 23, 25, 26, 28, 31, 32, 33, 35, 39, 40, 41, 42, 50, 53, 54, 57, 58, 59, 63, 64, 65, 67, 74, 75, 76, 77, 78, 80, 83, 84, 85, 87, 88, 89, 90, 91, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 134, 136, 138, 139, 141, 144, 145, 146, 149, 150, 151, 152, 154, 157, 159, 162, 163, 164, 165, 168, 171, 173, 176, 179, 180, 181, 183, 186, 187, 188, 189, 190, 196, 199, 201, 203, 204, 207, 209, 210, 213, 216, 217, 219, 222, 225, 226, 227, 228, 229, 230, 232, 237, 239, 240, 241, 244, 246, 248, 249, 250, 254, 256, 258, 259, 261, 262, 264, 265, 266, 269, 270, 272, 273, 274, 276, 279, 281, 282, 284, 285, 286, 287, 289, 291, 293, 296, 298, 299, 300, 301, 303, 305, 306, 307, 309, 310, 312, 314, 315, 318, 319, 320, 322, 323, 327, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340, 343, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 370, 373, 374, 377, 379, 380, 381, 382, 384, 387, 391, 392, 393, 395, 396, 397, 399, 400, 401, 403, 404, 409, 410, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 428, 429, 431, 432, 434, 437, 440, 442, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "map": [2, 16, 22, 32, 33, 34, 42, 49, 50, 58, 65, 67, 71, 80, 87, 90, 91, 96, 97, 99, 105, 106, 107, 114, 119, 120, 123, 127, 133, 134, 152, 156, 168, 171, 173, 174, 179, 182, 183, 188, 190, 194, 196, 197, 199, 203, 204, 207, 209, 210, 217, 219, 225, 226, 227, 230, 231, 238, 239, 240, 244, 250, 253, 256, 259, 261, 269, 270, 274, 275, 276, 282, 283, 284, 285, 286, 287, 288, 294, 295, 296, 298, 300, 301, 302, 303, 307, 308, 310, 311, 313, 314, 323, 327, 329, 333, 334, 336, 337, 344, 350, 353, 356, 357, 359, 361, 362, 363, 364, 368, 377, 380, 381, 382, 391, 392, 399, 400, 401, 402, 404, 409, 410, 417, 422, 426, 428, 430, 431, 445, 446, 447, 451, 455, 456, 457, 459, 465, 467, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 496], "iter": [2, 13, 16, 22, 29, 32, 33, 49, 53, 54, 62, 63, 66, 67, 87, 90, 99, 100, 105, 111, 116, 118, 123, 127, 132, 133, 138, 145, 148, 151, 157, 162, 163, 164, 171, 173, 174, 179, 180, 182, 183, 188, 189, 194, 200, 204, 208, 209, 210, 211, 219, 225, 227, 233, 234, 238, 239, 240, 244, 245, 246, 248, 249, 250, 256, 257, 266, 267, 268, 269, 270, 271, 273, 277, 281, 282, 285, 286, 290, 298, 300, 303, 308, 311, 312, 314, 315, 319, 323, 333, 334, 343, 353, 356, 359, 361, 363, 368, 377, 393, 400, 401, 404, 409, 410, 417, 422, 425, 428, 429, 430, 434, 440, 442, 446, 447, 451, 456, 457, 458, 460, 465, 477, 478, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498], "buffer": [2, 8, 9, 18, 24, 32, 33, 34, 41, 42, 43, 50, 63, 64, 65, 67, 71, 72, 87, 99, 104, 108, 113, 117, 123, 129, 131, 132, 134, 138, 139, 142, 148, 149, 152, 155, 159, 162, 164, 170, 171, 189, 190, 201, 226, 227, 228, 229, 239, 248, 249, 254, 256, 259, 284, 285, 289, 293, 297, 298, 299, 308, 310, 311, 313, 329, 337, 343, 346, 347, 348, 353, 357, 360, 363, 364, 368, 373, 374, 375, 377, 378, 380, 401, 403, 410, 422, 423, 428, 429, 437, 439, 455, 470, 471, 479, 480, 481, 482, 484, 485, 487, 489, 491, 492, 493, 494, 496, 498], "structur": [2, 3, 5, 10, 12, 13, 16, 17, 19, 20, 22, 26, 27, 29, 31, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 54, 56, 58, 60, 65, 67, 83, 85, 87, 88, 90, 91, 97, 98, 99, 104, 105, 107, 108, 112, 113, 116, 121, 129, 133, 135, 140, 147, 151, 157, 166, 171, 190, 195, 200, 204, 208, 210, 215, 217, 218, 219, 220, 221, 226, 227, 229, 231, 236, 237, 240, 244, 247, 250, 254, 259, 261, 262, 266, 269, 270, 271, 273, 276, 277, 286, 291, 296, 298, 308, 309, 311, 314, 320, 322, 325, 326, 334, 347, 348, 353, 355, 357, 360, 362, 363, 364, 369, 377, 381, 384, 390, 399, 400, 403, 404, 411, 417, 425, 428, 429, 433, 434, 437, 438, 442, 443, 447, 448, 454, 456, 460, 465, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496], "independ": [2, 18, 22, 25, 33, 34, 35, 45, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 87, 90, 92, 96, 98, 104, 106, 107, 112, 114, 121, 152, 173, 196, 199, 207, 215, 224, 239, 240, 260, 273, 276, 281, 282, 286, 289, 359, 360, 368, 369, 381, 382, 383, 384, 391, 393, 403, 414, 425, 428, 437, 445, 459, 464, 465, 471, 477, 484, 487, 488, 490, 496, 498], "readonli": [2, 43, 57, 67, 87, 262, 347, 356, 360, 391, 425, 426, 483], "format": [2, 4, 5, 9, 10, 23, 25, 31, 32, 35, 41, 48, 49, 58, 62, 63, 64, 67, 71, 72, 78, 80, 81, 85, 87, 91, 92, 96, 97, 99, 104, 105, 106, 116, 117, 119, 120, 121, 122, 123, 128, 129, 130, 131, 133, 145, 152, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 171, 173, 177, 180, 182, 186, 189, 195, 197, 199, 203, 204, 205, 207, 208, 210, 214, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 237, 239, 242, 244, 248, 249, 254, 257, 259, 262, 263, 264, 265, 269, 270, 274, 277, 280, 281, 282, 284, 285, 287, 289, 291, 296, 299, 300, 301, 306, 307, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 320, 322, 323, 329, 332, 334, 335, 336, 341, 345, 346, 347, 350, 351, 352, 353, 354, 356, 357, 364, 365, 368, 374, 377, 378, 381, 383, 384, 387, 390, 391, 393, 396, 397, 399, 400, 403, 409, 410, 412, 413, 415, 416, 420, 422, 428, 432, 437, 438, 439, 442, 443, 445, 446, 449, 450, 455, 456, 457, 459, 460, 464, 465, 466, 468, 470, 476, 477, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 494, 495, 498], "shape": [2, 62, 67, 106, 236, 239, 299, 333, 360, 401, 483, 487, 488, 490], "stride": [2, 62, 67, 360, 443, 445, 480, 490], "suboffset": [2, 62, 67, 360, 490], "contigu": [2, 5, 43, 67, 90, 99, 203, 262, 276, 286, 314, 360, 373, 430, 483, 490], "compound": [2, 35, 67, 184, 236, 261, 306, 361, 379, 384, 390, 391, 446, 448, 450, 452, 464, 483, 490], "complex": [2, 5, 13, 16, 35, 67, 72, 83, 84, 85, 87, 90, 92, 96, 97, 98, 99, 101, 114, 116, 117, 120, 121, 122, 131, 133, 134, 138, 140, 144, 152, 160, 174, 180, 183, 188, 197, 199, 200, 203, 208, 214, 217, 239, 240, 269, 276, 277, 283, 289, 290, 304, 305, 307, 314, 322, 334, 348, 349, 361, 364, 368, 373, 399, 401, 404, 410, 434, 442, 445, 450, 451, 454, 455, 456, 457, 458, 461, 464, 465, 466, 470, 479, 481, 482, 483, 484, 486, 488, 489, 491, 493, 494, 495, 496], "arrai": [2, 3, 5, 9, 10, 16, 31, 39, 45, 53, 57, 59, 60, 62, 63, 65, 67, 84, 85, 87, 88, 90, 96, 99, 105, 112, 114, 128, 129, 155, 163, 171, 191, 195, 229, 239, 250, 269, 294, 298, 299, 300, 302, 308, 314, 324, 353, 360, 363, 376, 394, 396, 400, 401, 417, 423, 434, 442, 443, 454, 457, 467, 469, 480, 481, 482, 483, 484, 485, 488, 489, 492, 494, 496], "numpi": [2, 67, 78, 97, 132, 239, 299, 314, 359, 459, 465, 468, 476, 482, 483, 488, 489, 490, 492], "style": [2, 5, 9, 10, 23, 63, 67, 73, 77, 78, 85, 88, 90, 98, 99, 106, 107, 113, 116, 125, 127, 129, 131, 133, 145, 156, 157, 159, 163, 173, 177, 180, 203, 210, 219, 221, 233, 234, 238, 239, 240, 244, 254, 256, 259, 269, 276, 282, 283, 286, 290, 291, 299, 307, 308, 309, 311, 312, 314, 323, 328, 333, 334, 341, 345, 347, 348, 353, 356, 368, 370, 377, 380, 383, 384, 387, 388, 390, 394, 396, 403, 406, 422, 435, 445, 446, 449, 450, 453, 455, 460, 461, 462, 464, 466, 467, 476, 477, 478, 479, 480, 481, 483, 484, 485, 488, 489, 490, 491, 494, 495, 498], "pil": [2, 67, 97, 360], "relat": [2, 10, 33, 42, 45, 62, 67, 77, 80, 90, 92, 96, 97, 99, 105, 107, 108, 114, 119, 121, 125, 145, 151, 158, 166, 173, 180, 190, 195, 196, 207, 208, 210, 214, 219, 221, 222, 227, 231, 237, 242, 249, 250, 255, 264, 269, 270, 271, 272, 274, 276, 284, 286, 295, 298, 305, 308, 313, 315, 323, 329, 330, 335, 341, 348, 353, 356, 357, 360, 361, 372, 381, 391, 399, 400, 401, 415, 417, 427, 428, 430, 441, 443, 445, 446, 450, 455, 457, 467, 469, 473, 476, 477, 478, 480, 481, 482, 483, 484, 485, 489, 490, 491, 493, 494, 495, 498], "old": [2, 5, 9, 10, 23, 32, 42, 45, 58, 59, 63, 67, 85, 90, 97, 99, 113, 115, 116, 123, 127, 131, 133, 164, 173, 182, 189, 190, 200, 210, 219, 227, 239, 240, 257, 262, 264, 265, 277, 283, 284, 286, 291, 298, 307, 308, 312, 314, 319, 323, 345, 348, 357, 360, 361, 368, 373, 376, 377, 384, 396, 397, 399, 404, 410, 414, 422, 425, 430, 441, 442, 443, 445, 450, 451, 457, 460, 464, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pyobject": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 83, 84, 85, 87, 88, 89, 91, 108, 110, 112, 189, 334, 377, 479, 482, 483, 487, 488, 494, 495], "_pyobject_new": 3, "pytypeobject": [3, 6, 8, 9, 12, 13, 15, 17, 19, 20, 21, 22, 25, 26, 27, 29, 30, 35, 37, 38, 39, 44, 45, 46, 49, 50, 54, 55, 56, 57, 59, 60, 61, 63, 67, 87, 88, 112, 478, 488, 492, 495, 496], "return": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 83, 84, 85, 87, 88, 91, 96, 98, 99, 100, 101, 104, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 196, 197, 199, 200, 202, 203, 204, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 297, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 453, 455, 456, 457, 458, 461, 464, 465, 466, 467, 470, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pyvarobject": [3, 28, 50, 56, 57, 67, 377, 488], "_pyobject_newvar": 3, "py_ssize_t": [3, 5, 7, 8, 9, 10, 18, 22, 23, 28, 34, 35, 38, 39, 40, 41, 43, 45, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 85, 87, 112, 189, 368, 443, 482, 483, 488, 495], "size": [3, 5, 7, 8, 9, 18, 28, 30, 31, 34, 35, 39, 41, 42, 43, 49, 53, 54, 57, 58, 59, 60, 62, 63, 67, 71, 85, 87, 88, 90, 98, 104, 105, 108, 110, 112, 113, 114, 117, 119, 126, 128, 129, 131, 132, 134, 139, 142, 145, 146, 148, 149, 154, 155, 157, 158, 162, 164, 166, 171, 173, 174, 176, 179, 186, 187, 188, 190, 197, 198, 199, 203, 204, 229, 230, 233, 237, 239, 240, 250, 251, 256, 259, 261, 262, 265, 266, 273, 277, 281, 284, 285, 293, 298, 299, 309, 310, 314, 318, 320, 321, 323, 326, 329, 331, 333, 335, 336, 337, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 364, 365, 368, 373, 375, 376, 377, 379, 380, 384, 387, 390, 391, 396, 399, 401, 403, 410, 423, 425, 436, 437, 439, 443, 447, 461, 464, 465, 467, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pyobject_init": [3, 56, 495, 496], "op": [3, 10, 15, 27, 28, 33, 37, 49, 62, 63, 87, 97, 133, 134, 150, 190, 204, 244, 284, 298, 308, 334, 353, 356, 357, 368, 380, 392, 393, 422, 480, 483, 487, 488, 494], "borrow": [3, 5, 12, 22, 23, 27, 31, 33, 35, 38, 44, 45, 51, 52, 53, 57, 58, 59, 62, 66, 85, 87, 90, 99, 107, 226, 356, 456, 479, 480, 481], "part": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 72, 77, 80, 81, 84, 85, 86, 87, 90, 92, 93, 97, 99, 104, 106, 107, 108, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 133, 134, 140, 156, 161, 164, 167, 170, 171, 172, 174, 180, 182, 189, 190, 196, 197, 199, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 233, 239, 244, 249, 259, 261, 262, 264, 265, 266, 272, 273, 274, 281, 282, 283, 284, 285, 290, 291, 296, 297, 298, 308, 309, 314, 317, 322, 323, 329, 332, 333, 334, 338, 346, 349, 353, 354, 356, 357, 360, 361, 362, 368, 370, 377, 380, 381, 383, 384, 390, 396, 399, 400, 401, 403, 404, 405, 409, 414, 417, 418, 425, 426, 428, 434, 439, 441, 442, 443, 444, 445, 447, 450, 451, 455, 456, 457, 458, 459, 460, 462, 464, 465, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "stabl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 99, 112, 118, 224, 239, 250, 267, 291, 307, 360, 368, 440, 480, 481, 484, 488, 491, 492, 493, 495, 496, 498], "abi": [3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 110, 112, 121, 368, 436, 471, 475, 484, 488, 491, 492, 494, 496, 498], "newli": [3, 5, 35, 42, 58, 67, 85, 97, 113, 170, 174, 194, 204, 212, 239, 246, 257, 273, 298, 308, 317, 347, 349, 353, 375, 390, 391, 399, 425, 442, 443, 455, 481, 483, 488, 490, 493, 494], "indic": [3, 5, 7, 10, 31, 32, 33, 35, 38, 41, 42, 49, 51, 53, 55, 57, 58, 60, 62, 63, 67, 71, 80, 81, 85, 87, 88, 92, 96, 97, 99, 110, 111, 113, 114, 116, 117, 118, 119, 120, 125, 127, 128, 131, 133, 134, 138, 146, 149, 151, 152, 164, 168, 170, 171, 179, 180, 181, 182, 186, 188, 189, 190, 196, 199, 202, 204, 210, 216, 217, 219, 222, 223, 224, 227, 237, 239, 240, 242, 248, 249, 255, 256, 257, 259, 261, 262, 264, 265, 266, 269, 270, 273, 276, 281, 282, 283, 285, 286, 289, 291, 293, 298, 303, 307, 308, 310, 312, 315, 318, 320, 322, 323, 326, 329, 331, 333, 334, 343, 344, 347, 348, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 372, 373, 375, 376, 377, 380, 381, 384, 391, 392, 396, 401, 403, 404, 409, 410, 413, 414, 415, 420, 421, 422, 423, 425, 428, 434, 437, 439, 441, 442, 443, 445, 446, 447, 450, 451, 455, 456, 458, 464, 465, 467, 470, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496], "particip": [3, 62, 87, 88, 196, 250, 257, 265, 282, 314, 334, 477, 479, 482, 484, 486], "cyclic": [3, 32, 45, 50, 62, 67, 86, 97, 99, 246, 285, 307, 426, 439, 443, 489, 491], "garbag": [3, 32, 42, 45, 50, 51, 62, 63, 66, 67, 85, 86, 87, 96, 97, 99, 107, 110, 114, 117, 137, 151, 152, 164, 172, 182, 183, 189, 192, 207, 227, 228, 269, 289, 298, 307, 308, 330, 353, 368, 375, 377, 382, 403, 417, 426, 442, 443, 445, 467, 471, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 493, 494, 495, 496, 498], "detector": [3, 60, 85, 270, 471, 484], "ad": [3, 5, 13, 22, 31, 33, 34, 35, 42, 45, 47, 56, 57, 58, 60, 62, 63, 65, 67, 71, 72, 77, 80, 81, 85, 86, 87, 89, 90, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 112, 113, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 138, 140, 141, 146, 148, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 168, 170, 171, 173, 174, 176, 179, 180, 182, 186, 188, 189, 190, 192, 194, 196, 197, 199, 203, 204, 207, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 232, 237, 239, 240, 241, 244, 245, 246, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 269, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 290, 291, 293, 296, 298, 301, 303, 305, 308, 309, 311, 312, 314, 315, 317, 319, 320, 322, 323, 326, 328, 331, 333, 334, 336, 339, 340, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 368, 369, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 387, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 409, 410, 412, 414, 415, 416, 417, 418, 422, 425, 426, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 445, 447, 450, 451, 456, 457, 458, 459, 461, 463, 464, 465, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 498], "observ": [3, 78, 97, 106, 110, 114, 196, 222, 333, 364, 397, 399, 409, 451, 479, 488, 490], "other": [3, 6, 7, 9, 10, 11, 15, 18, 23, 25, 27, 28, 32, 33, 34, 35, 39, 42, 43, 45, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 72, 74, 75, 77, 78, 79, 81, 84, 85, 86, 87, 89, 92, 93, 98, 99, 100, 101, 104, 105, 107, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 132, 133, 137, 138, 142, 144, 145, 149, 152, 154, 155, 157, 158, 159, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 194, 196, 197, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 215, 216, 217, 219, 220, 221, 223, 224, 225, 227, 229, 230, 237, 239, 240, 241, 244, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 295, 298, 299, 301, 302, 303, 304, 306, 308, 309, 311, 312, 313, 317, 318, 322, 323, 324, 325, 328, 329, 330, 333, 334, 336, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 368, 369, 371, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 391, 393, 395, 397, 399, 400, 402, 403, 404, 405, 409, 410, 413, 414, 415, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 475, 498], "affect": [3, 33, 35, 38, 45, 58, 59, 67, 71, 74, 75, 85, 96, 105, 106, 107, 114, 116, 121, 127, 132, 151, 157, 180, 190, 196, 199, 204, 207, 216, 219, 239, 244, 257, 261, 264, 265, 273, 281, 284, 286, 293, 306, 308, 321, 322, 334, 335, 336, 337, 353, 356, 357, 359, 361, 364, 369, 373, 377, 381, 382, 390, 391, 399, 403, 404, 405, 409, 415, 417, 420, 422, 425, 442, 443, 445, 447, 451, 453, 455, 459, 465, 468, 470, 471, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pyobject_initvar": [3, 56], "doe": [3, 5, 9, 10, 13, 22, 23, 25, 26, 28, 31, 32, 33, 34, 35, 38, 42, 45, 49, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 75, 81, 84, 85, 87, 88, 89, 96, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 125, 126, 127, 131, 133, 134, 135, 138, 141, 143, 145, 151, 152, 153, 156, 159, 162, 164, 166, 170, 171, 173, 174, 176, 179, 180, 182, 184, 186, 188, 189, 190, 192, 194, 196, 197, 199, 201, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 221, 222, 224, 225, 227, 234, 235, 237, 239, 240, 241, 242, 243, 244, 248, 250, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 289, 291, 293, 298, 299, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 323, 324, 326, 329, 333, 334, 337, 343, 344, 345, 346, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 371, 373, 374, 375, 377, 379, 380, 381, 383, 391, 393, 394, 395, 396, 397, 400, 401, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 455, 456, 457, 458, 460, 463, 464, 465, 467, 470, 471, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "everyth": [3, 56, 62, 71, 74, 81, 85, 88, 97, 98, 100, 104, 114, 117, 120, 121, 131, 184, 207, 222, 234, 239, 261, 283, 307, 308, 309, 314, 334, 347, 348, 350, 353, 374, 384, 404, 415, 434, 449, 458, 464, 483, 485, 487, 490], "length": [3, 5, 7, 8, 9, 22, 23, 24, 34, 35, 38, 48, 49, 53, 54, 55, 57, 58, 59, 62, 63, 67, 85, 87, 90, 97, 99, 104, 105, 106, 107, 108, 110, 112, 114, 117, 119, 120, 128, 131, 132, 133, 134, 154, 155, 156, 159, 163, 166, 171, 173, 187, 188, 189, 190, 197, 199, 203, 204, 209, 210, 215, 216, 219, 221, 222, 229, 239, 251, 256, 259, 262, 269, 273, 274, 276, 277, 283, 284, 285, 286, 290, 293, 298, 299, 306, 307, 308, 323, 329, 333, 334, 335, 341, 343, 347, 351, 353, 356, 357, 359, 361, 363, 368, 373, 376, 379, 380, 381, 391, 400, 401, 403, 404, 408, 410, 415, 420, 422, 423, 425, 430, 434, 437, 438, 439, 442, 443, 445, 450, 451, 456, 457, 463, 464, 467, 470, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "variabl": [3, 5, 9, 10, 12, 13, 16, 18, 20, 22, 23, 27, 31, 32, 34, 35, 42, 45, 51, 52, 54, 57, 62, 63, 65, 67, 71, 80, 83, 84, 85, 87, 88, 90, 91, 93, 96, 98, 99, 101, 104, 105, 106, 107, 112, 114, 116, 119, 120, 121, 122, 123, 125, 129, 132, 134, 137, 138, 151, 154, 164, 165, 167, 168, 173, 176, 177, 180, 187, 190, 201, 204, 207, 223, 227, 228, 229, 233, 239, 241, 242, 243, 244, 245, 259, 261, 262, 263, 264, 265, 269, 270, 271, 273, 276, 279, 281, 282, 296, 298, 301, 306, 309, 310, 312, 314, 316, 321, 326, 328, 330, 333, 334, 335, 339, 342, 346, 347, 348, 350, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369, 373, 377, 380, 381, 382, 383, 391, 396, 397, 399, 400, 401, 403, 404, 409, 410, 414, 415, 418, 420, 422, 423, 425, 426, 427, 435, 440, 442, 443, 444, 445, 446, 447, 450, 451, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 471, 473, 474, 477, 478, 479, 480, 481, 482, 483, 485, 488, 489, 490, 491, 492, 494, 495, 496], "pyobject_new": [3, 28, 42, 62, 67, 480, 495, 496], "typeobj": [3, 28, 112, 403], "c": [3, 4, 5, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 39, 41, 43, 46, 49, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 74, 75, 77, 78, 80, 81, 86, 87, 88, 92, 93, 98, 99, 101, 103, 104, 105, 106, 107, 109, 110, 112, 114, 116, 117, 118, 119, 125, 127, 128, 129, 131, 132, 133, 138, 145, 147, 149, 151, 153, 157, 159, 160, 162, 163, 166, 167, 171, 173, 174, 185, 189, 190, 191, 194, 196, 197, 199, 201, 203, 204, 206, 207, 227, 228, 229, 230, 239, 240, 241, 244, 245, 246, 249, 251, 254, 258, 261, 269, 270, 272, 276, 277, 281, 282, 290, 297, 298, 299, 306, 307, 308, 309, 310, 311, 312, 314, 321, 323, 326, 329, 331, 333, 334, 335, 336, 337, 341, 345, 346, 347, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 369, 370, 373, 375, 376, 377, 380, 381, 384, 391, 392, 393, 395, 397, 399, 400, 401, 402, 403, 404, 405, 414, 415, 417, 420, 422, 426, 428, 436, 437, 438, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 470, 473, 474, 475, 476, 477, 478, 479, 498], "defin": [3, 4, 5, 7, 10, 11, 14, 15, 23, 24, 25, 28, 33, 34, 35, 42, 43, 44, 45, 50, 56, 57, 58, 60, 62, 63, 67, 71, 74, 75, 80, 83, 84, 85, 86, 89, 90, 91, 92, 96, 98, 99, 100, 104, 105, 106, 107, 113, 114, 116, 118, 119, 120, 121, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 144, 145, 153, 154, 156, 157, 159, 163, 164, 166, 167, 168, 171, 173, 174, 175, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 194, 196, 197, 199, 200, 202, 204, 207, 208, 210, 213, 217, 219, 222, 225, 226, 227, 229, 230, 237, 239, 240, 241, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 277, 278, 280, 281, 282, 284, 286, 289, 290, 291, 298, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 371, 373, 375, 376, 377, 380, 381, 382, 384, 387, 390, 391, 392, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 408, 409, 410, 412, 413, 415, 416, 417, 418, 420, 422, 423, 425, 426, 428, 429, 430, 434, 436, 437, 438, 440, 441, 442, 444, 445, 447, 449, 450, 451, 453, 454, 455, 457, 460, 462, 464, 465, 467, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 498], "header": [3, 20, 25, 35, 62, 67, 74, 77, 80, 85, 87, 96, 113, 116, 121, 128, 134, 155, 159, 163, 164, 166, 168, 180, 182, 188, 189, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 229, 244, 248, 256, 257, 258, 259, 261, 262, 265, 271, 282, 284, 286, 291, 297, 300, 303, 308, 312, 320, 326, 332, 351, 352, 353, 357, 365, 368, 370, 373, 377, 392, 396, 400, 408, 410, 412, 416, 426, 434, 437, 439, 442, 444, 455, 466, 467, 471, 476, 478, 480, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496], "caller": [3, 5, 9, 10, 18, 23, 31, 33, 34, 35, 36, 45, 57, 58, 60, 63, 85, 97, 99, 100, 105, 107, 151, 157, 170, 171, 182, 189, 202, 204, 227, 237, 239, 249, 256, 264, 266, 270, 273, 282, 306, 308, 317, 323, 348, 351, 353, 357, 364, 368, 380, 385, 391, 395, 396, 401, 403, 410, 412, 415, 416, 418, 420, 434, 436, 443, 444, 445, 455, 456, 458, 478, 479, 480, 481, 482, 483, 484, 488, 493, 496], "own": [3, 5, 7, 9, 22, 23, 24, 26, 28, 33, 35, 45, 58, 62, 63, 67, 71, 72, 74, 78, 80, 81, 84, 85, 86, 88, 89, 90, 92, 96, 97, 99, 101, 104, 105, 106, 107, 112, 113, 114, 119, 120, 121, 122, 123, 125, 129, 131, 134, 138, 141, 145, 149, 151, 152, 164, 173, 180, 182, 184, 188, 194, 199, 207, 210, 214, 217, 219, 221, 224, 225, 239, 241, 244, 246, 257, 261, 265, 270, 273, 282, 283, 284, 286, 298, 299, 301, 307, 308, 311, 312, 314, 323, 333, 334, 341, 346, 347, 348, 353, 356, 357, 360, 361, 364, 368, 373, 377, 379, 380, 384, 399, 403, 409, 410, 414, 417, 418, 422, 425, 428, 430, 435, 439, 441, 443, 445, 447, 450, 451, 455, 456, 458, 462, 465, 468, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 492, 494, 496], "count": [3, 5, 6, 7, 9, 12, 32, 33, 34, 45, 46, 53, 55, 57, 62, 63, 67, 86, 87, 88, 90, 92, 96, 97, 99, 101, 105, 106, 107, 108, 112, 114, 116, 131, 132, 138, 146, 151, 152, 157, 159, 161, 164, 173, 174, 189, 190, 196, 201, 203, 204, 207, 210, 222, 225, 232, 239, 240, 241, 250, 261, 262, 264, 265, 270, 273, 276, 282, 286, 293, 296, 298, 299, 303, 307, 308, 312, 314, 320, 323, 331, 333, 334, 343, 346, 353, 356, 357, 359, 360, 361, 363, 368, 377, 379, 380, 381, 382, 384, 395, 397, 403, 410, 428, 443, 445, 450, 451, 457, 461, 464, 467, 470, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 495], "one": [3, 5, 7, 9, 10, 11, 13, 15, 18, 23, 24, 25, 28, 31, 33, 34, 35, 37, 42, 43, 45, 47, 49, 55, 56, 57, 58, 59, 60, 62, 63, 66, 71, 72, 74, 75, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 166, 167, 168, 170, 171, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 194, 196, 197, 199, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 232, 235, 237, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 256, 257, 259, 261, 262, 264, 265, 266, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 297, 298, 299, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 319, 322, 323, 326, 329, 331, 333, 334, 335, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 367, 368, 369, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 388, 390, 391, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 413, 414, 415, 417, 420, 422, 423, 424, 425, 426, 427, 428, 430, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "memori": [3, 5, 7, 16, 18, 23, 28, 31, 32, 33, 34, 35, 41, 43, 45, 47, 48, 49, 54, 57, 58, 60, 62, 63, 65, 67, 84, 85, 87, 88, 89, 97, 99, 105, 107, 108, 112, 113, 114, 116, 117, 119, 126, 130, 132, 133, 134, 144, 149, 164, 171, 173, 177, 189, 197, 198, 199, 201, 221, 226, 227, 228, 239, 241, 248, 249, 250, 251, 261, 265, 269, 270, 273, 275, 276, 277, 284, 286, 298, 308, 314, 329, 331, 337, 345, 347, 348, 353, 354, 356, 363, 364, 368, 373, 375, 377, 380, 401, 404, 417, 420, 421, 424, 426, 428, 436, 437, 439, 443, 450, 453, 455, 457, 461, 467, 470, 471, 477, 478, 480, 481, 482, 483, 484, 485, 486, 489, 490, 493, 494, 495, 496], "tp_basics": [3, 60, 62, 87, 88, 496], "pyobject_newvar": [3, 28, 42, 62, 112, 480, 495, 496], "plu": [3, 10, 58, 62, 71, 87, 96, 121, 131, 173, 189, 190, 191, 199, 203, 208, 222, 225, 298, 307, 308, 317, 320, 346, 350, 358, 360, 368, 377, 379, 380, 392, 404, 405, 409, 422, 426, 445, 449, 450, 461, 468, 469, 476, 479, 480, 481, 482, 490, 491], "given": [3, 4, 5, 7, 9, 10, 14, 18, 20, 23, 24, 31, 33, 35, 42, 43, 45, 49, 55, 57, 60, 62, 63, 65, 71, 72, 75, 76, 78, 80, 84, 85, 90, 93, 96, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 120, 121, 123, 124, 126, 127, 128, 131, 132, 133, 138, 139, 142, 145, 150, 151, 157, 162, 163, 166, 167, 168, 170, 171, 173, 176, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 192, 194, 196, 197, 199, 203, 204, 207, 209, 210, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 230, 232, 235, 237, 239, 240, 241, 242, 244, 246, 247, 248, 249, 251, 256, 257, 258, 259, 261, 262, 264, 265, 267, 270, 273, 274, 277, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 298, 301, 303, 304, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 321, 323, 325, 327, 328, 329, 333, 334, 337, 339, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 368, 371, 373, 374, 377, 379, 380, 381, 382, 384, 387, 388, 390, 391, 395, 396, 399, 400, 401, 402, 403, 404, 408, 409, 410, 413, 414, 415, 417, 418, 422, 423, 425, 426, 427, 428, 429, 432, 435, 436, 437, 438, 439, 442, 443, 444, 445, 447, 449, 450, 451, 453, 455, 456, 457, 459, 461, 463, 464, 465, 467, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "tp_items": [3, 60, 62, 87, 88], "implement": [3, 5, 6, 8, 9, 10, 12, 13, 15, 20, 23, 28, 29, 31, 32, 33, 35, 39, 42, 45, 49, 53, 55, 56, 58, 59, 60, 62, 63, 65, 66, 67, 71, 72, 76, 78, 80, 84, 85, 87, 88, 92, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 110, 112, 113, 116, 118, 119, 120, 125, 127, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 157, 161, 164, 168, 170, 171, 173, 174, 179, 180, 181, 183, 184, 186, 187, 188, 189, 194, 195, 196, 199, 204, 207, 210, 217, 219, 221, 222, 225, 226, 227, 228, 232, 234, 235, 237, 239, 240, 241, 244, 248, 249, 251, 254, 255, 256, 257, 258, 259, 261, 262, 264, 266, 267, 268, 269, 270, 271, 273, 274, 276, 281, 282, 283, 284, 286, 288, 290, 292, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 308, 309, 311, 313, 314, 315, 317, 318, 320, 321, 322, 323, 324, 327, 329, 330, 331, 333, 334, 335, 339, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 370, 371, 373, 374, 375, 377, 380, 381, 383, 384, 385, 389, 391, 393, 394, 396, 399, 400, 401, 403, 404, 405, 409, 410, 414, 415, 416, 417, 418, 420, 424, 425, 428, 429, 430, 431, 432, 433, 434, 437, 438, 440, 441, 442, 444, 445, 447, 448, 450, 451, 454, 455, 456, 457, 459, 460, 462, 465, 466, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 492, 495, 496, 498], "tupl": [3, 5, 10, 14, 16, 20, 23, 27, 35, 38, 40, 42, 49, 53, 54, 57, 58, 60, 61, 62, 65, 67, 71, 80, 84, 85, 87, 88, 99, 106, 107, 110, 113, 114, 116, 118, 120, 123, 124, 126, 127, 128, 131, 132, 133, 138, 145, 146, 149, 152, 154, 157, 160, 163, 165, 168, 171, 179, 183, 185, 189, 190, 194, 195, 196, 197, 199, 200, 202, 203, 204, 207, 210, 217, 219, 222, 223, 227, 235, 237, 239, 240, 241, 246, 247, 250, 256, 257, 258, 259, 262, 264, 265, 269, 270, 273, 274, 276, 277, 281, 282, 284, 286, 287, 289, 291, 294, 296, 298, 301, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 318, 319, 320, 322, 323, 325, 329, 331, 333, 334, 337, 340, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 365, 367, 370, 374, 375, 376, 377, 380, 381, 384, 387, 391, 393, 396, 397, 399, 400, 403, 404, 409, 410, 411, 413, 415, 416, 417, 420, 422, 427, 428, 430, 431, 434, 435, 437, 442, 443, 445, 446, 447, 451, 455, 456, 458, 460, 461, 465, 466, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "abl": [3, 7, 33, 62, 72, 75, 78, 80, 85, 87, 88, 89, 90, 92, 96, 98, 99, 101, 104, 106, 108, 113, 114, 116, 117, 119, 122, 132, 133, 154, 164, 171, 172, 182, 189, 190, 194, 196, 208, 227, 249, 250, 254, 270, 282, 283, 284, 307, 308, 309, 310, 312, 314, 324, 329, 333, 334, 341, 347, 352, 353, 356, 357, 359, 364, 373, 377, 380, 399, 404, 409, 415, 421, 422, 428, 436, 442, 443, 449, 459, 460, 463, 471, 476, 477, 478, 479, 482, 484, 488, 489, 490, 491, 494, 495], "construct": [3, 23, 53, 57, 58, 61, 64, 65, 80, 84, 85, 87, 90, 97, 99, 105, 106, 107, 111, 112, 113, 114, 125, 131, 138, 145, 149, 162, 171, 174, 182, 184, 189, 196, 199, 202, 204, 207, 208, 211, 215, 217, 222, 223, 227, 230, 234, 235, 239, 241, 248, 249, 257, 259, 264, 265, 274, 276, 282, 283, 285, 289, 296, 298, 307, 308, 311, 314, 322, 323, 329, 334, 335, 346, 349, 351, 353, 356, 357, 360, 363, 380, 384, 396, 399, 401, 403, 404, 405, 409, 414, 417, 424, 426, 427, 428, 429, 434, 435, 437, 440, 442, 443, 444, 445, 450, 451, 455, 456, 457, 463, 466, 470, 476, 477, 478, 479, 481, 482, 484, 488, 489, 490, 492, 493, 494, 495, 496], "embed": [3, 5, 7, 9, 32, 33, 45, 51, 56, 63, 67, 71, 72, 85, 90, 94, 98, 104, 105, 110, 112, 116, 117, 119, 140, 147, 176, 188, 190, 213, 216, 239, 274, 281, 295, 296, 308, 323, 332, 360, 364, 377, 381, 384, 390, 415, 430, 435, 436, 448, 450, 460, 462, 464, 466, 473, 475, 478, 479, 482, 483, 484, 487, 489, 491, 494, 495, 496, 498], "same": [3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 18, 20, 22, 23, 25, 26, 27, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 49, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 78, 80, 84, 85, 87, 88, 90, 91, 92, 96, 99, 100, 101, 104, 105, 106, 107, 110, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 131, 132, 133, 134, 137, 138, 141, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 163, 164, 167, 170, 171, 173, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 194, 196, 197, 199, 200, 203, 204, 207, 208, 209, 210, 215, 216, 217, 219, 221, 222, 223, 225, 227, 229, 230, 232, 234, 235, 237, 239, 240, 242, 244, 245, 246, 248, 249, 250, 251, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 270, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 286, 290, 291, 293, 296, 297, 298, 299, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 318, 320, 322, 323, 324, 327, 328, 329, 331, 333, 334, 335, 336, 337, 340, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 369, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 389, 390, 391, 393, 394, 396, 399, 400, 401, 402, 403, 404, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 422, 425, 428, 430, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496], "decreas": [3, 7, 150, 196, 204, 250, 274, 381, 443, 477, 481, 484, 488, 490, 493, 495], "manag": [3, 5, 17, 32, 33, 34, 51, 67, 86, 88, 92, 99, 100, 108, 113, 117, 120, 121, 122, 129, 131, 133, 135, 136, 138, 140, 149, 150, 151, 157, 160, 164, 171, 177, 187, 189, 199, 200, 201, 204, 205, 208, 217, 227, 232, 239, 255, 257, 259, 261, 265, 267, 269, 271, 273, 282, 286, 293, 299, 300, 310, 313, 314, 323, 330, 343, 344, 345, 350, 353, 354, 357, 366, 368, 370, 373, 374, 375, 377, 380, 383, 389, 391, 399, 403, 404, 410, 417, 418, 434, 437, 442, 449, 459, 460, 462, 466, 467, 474, 475, 476, 477, 480, 481, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496], "effici": [3, 10, 13, 25, 49, 59, 62, 63, 67, 90, 99, 104, 107, 111, 117, 118, 119, 135, 138, 145, 164, 171, 173, 188, 195, 196, 199, 227, 230, 233, 234, 238, 239, 240, 249, 250, 251, 266, 269, 298, 299, 306, 308, 314, 315, 322, 333, 334, 343, 344, 357, 359, 360, 363, 379, 380, 420, 422, 424, 428, 439, 443, 456, 457, 460, 461, 465, 466, 479, 481, 483, 485, 488, 489, 490, 491, 492, 495, 496], "void": [3, 5, 7, 9, 11, 12, 17, 21, 22, 23, 24, 25, 28, 30, 31, 33, 34, 35, 38, 39, 41, 42, 45, 48, 49, 51, 52, 57, 58, 59, 60, 62, 63, 65, 66, 83, 84, 85, 87, 88, 89, 98, 110, 112, 189, 334, 363, 426, 446, 484, 487, 488, 495, 496], "pyobject_del": [3, 42, 62, 480], "normal": [3, 5, 6, 20, 22, 23, 24, 25, 27, 29, 31, 33, 34, 35, 38, 45, 49, 55, 57, 62, 65, 71, 72, 80, 81, 83, 84, 85, 87, 88, 90, 96, 97, 99, 104, 105, 106, 113, 114, 116, 117, 119, 120, 121, 122, 124, 127, 131, 133, 151, 152, 153, 156, 157, 159, 161, 163, 168, 171, 173, 180, 182, 189, 190, 194, 196, 199, 201, 203, 207, 209, 210, 212, 214, 216, 219, 222, 223, 225, 227, 228, 232, 234, 235, 239, 240, 244, 248, 249, 254, 256, 261, 262, 269, 272, 273, 281, 282, 283, 284, 290, 291, 297, 298, 303, 307, 308, 309, 311, 312, 314, 317, 323, 326, 329, 333, 334, 335, 336, 339, 346, 348, 350, 351, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 368, 369, 375, 377, 379, 380, 381, 384, 387, 389, 391, 396, 399, 400, 401, 402, 403, 404, 405, 409, 410, 415, 417, 422, 425, 426, 429, 430, 431, 434, 436, 437, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 455, 456, 461, 470, 476, 478, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "tp_dealloc": [3, 28, 60, 62, 66, 67, 87, 88, 488, 495], "handler": [3, 23, 24, 28, 33, 34, 58, 60, 62, 63, 64, 65, 66, 67, 85, 87, 88, 93, 99, 119, 126, 129, 133, 137, 142, 144, 147, 158, 164, 165, 179, 180, 190, 198, 201, 202, 204, 210, 211, 215, 216, 227, 239, 243, 254, 259, 269, 271, 273, 275, 281, 288, 298, 307, 308, 312, 323, 329, 330, 343, 344, 347, 353, 356, 360, 366, 368, 371, 373, 377, 381, 383, 403, 408, 410, 418, 426, 427, 429, 431, 432, 435, 442, 443, 444, 458, 470, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "specifi": [3, 5, 7, 9, 11, 13, 14, 17, 18, 20, 22, 23, 25, 33, 34, 35, 39, 40, 42, 45, 49, 55, 56, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 77, 78, 80, 83, 85, 87, 88, 89, 91, 99, 100, 101, 104, 105, 106, 107, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 138, 141, 144, 145, 147, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 167, 168, 170, 171, 173, 174, 176, 179, 180, 181, 182, 186, 188, 190, 194, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 232, 237, 239, 240, 241, 242, 244, 245, 248, 249, 250, 256, 257, 258, 259, 261, 262, 265, 267, 268, 270, 273, 274, 276, 277, 281, 282, 283, 284, 286, 287, 290, 291, 293, 294, 296, 297, 298, 299, 301, 303, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 319, 320, 322, 323, 326, 328, 329, 332, 333, 334, 335, 337, 339, 341, 343, 344, 345, 346, 347, 348, 350, 351, 353, 356, 357, 360, 361, 363, 364, 365, 368, 369, 370, 373, 374, 375, 376, 377, 380, 381, 382, 384, 387, 388, 390, 391, 393, 395, 396, 399, 400, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 425, 426, 428, 430, 431, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 455, 456, 457, 458, 459, 461, 465, 467, 468, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "access": [3, 5, 7, 11, 12, 16, 20, 23, 24, 27, 31, 33, 35, 45, 47, 49, 50, 51, 53, 54, 58, 59, 60, 62, 67, 71, 72, 78, 84, 85, 87, 88, 89, 92, 97, 98, 99, 105, 108, 110, 111, 113, 114, 116, 118, 119, 120, 121, 122, 127, 129, 132, 133, 137, 142, 148, 150, 151, 155, 159, 161, 162, 164, 167, 171, 173, 174, 177, 182, 183, 188, 190, 194, 196, 197, 199, 204, 207, 208, 210, 214, 217, 219, 221, 224, 226, 227, 231, 232, 235, 239, 240, 241, 244, 246, 247, 249, 250, 256, 257, 258, 259, 260, 261, 265, 268, 269, 270, 271, 272, 273, 274, 276, 279, 282, 284, 286, 290, 291, 293, 295, 296, 297, 298, 301, 306, 307, 308, 309, 312, 314, 317, 321, 325, 327, 329, 330, 334, 335, 337, 339, 341, 343, 345, 347, 348, 351, 353, 354, 355, 356, 357, 358, 360, 361, 364, 366, 368, 369, 373, 374, 377, 380, 382, 384, 390, 391, 396, 399, 400, 402, 403, 404, 405, 409, 410, 414, 417, 419, 421, 422, 424, 425, 426, 427, 428, 430, 435, 437, 440, 442, 444, 445, 447, 451, 455, 456, 457, 458, 460, 461, 463, 464, 465, 467, 469, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496], "after": [3, 5, 7, 8, 13, 18, 23, 26, 28, 33, 34, 35, 39, 42, 45, 56, 57, 58, 60, 62, 63, 67, 71, 72, 74, 80, 81, 83, 84, 85, 88, 90, 92, 97, 98, 99, 100, 104, 106, 107, 110, 112, 113, 114, 116, 117, 118, 120, 121, 123, 124, 126, 127, 128, 129, 131, 133, 134, 138, 140, 142, 145, 147, 148, 150, 151, 152, 153, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 170, 173, 179, 180, 182, 183, 188, 189, 190, 192, 194, 196, 198, 199, 203, 204, 207, 209, 210, 219, 220, 221, 223, 224, 226, 227, 229, 230, 232, 237, 239, 241, 242, 246, 248, 249, 256, 259, 261, 262, 264, 265, 270, 273, 276, 281, 282, 283, 284, 285, 286, 290, 293, 294, 297, 298, 299, 303, 306, 307, 308, 309, 310, 311, 312, 315, 320, 323, 324, 329, 333, 334, 335, 339, 340, 343, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 373, 375, 376, 377, 379, 380, 381, 382, 384, 390, 391, 396, 397, 399, 401, 403, 404, 405, 410, 414, 415, 416, 417, 420, 422, 425, 428, 430, 431, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "longer": [3, 5, 7, 22, 23, 31, 34, 35, 39, 44, 45, 51, 57, 58, 62, 63, 66, 67, 71, 80, 85, 90, 95, 97, 104, 106, 107, 112, 113, 115, 120, 124, 128, 131, 137, 138, 154, 171, 180, 189, 190, 201, 203, 204, 213, 215, 222, 225, 239, 240, 249, 256, 259, 262, 264, 265, 266, 270, 274, 276, 280, 283, 284, 286, 298, 299, 301, 307, 308, 309, 317, 322, 324, 326, 329, 333, 334, 340, 343, 347, 353, 356, 357, 360, 361, 363, 364, 368, 373, 377, 379, 380, 381, 391, 397, 399, 401, 403, 404, 405, 414, 415, 417, 424, 425, 426, 427, 428, 429, 437, 439, 442, 445, 447, 456, 458, 465, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496], "valid": [3, 5, 7, 11, 16, 18, 23, 28, 34, 42, 62, 63, 65, 67, 71, 72, 80, 84, 85, 97, 99, 100, 104, 111, 112, 116, 119, 121, 123, 131, 132, 133, 151, 156, 159, 164, 170, 171, 172, 173, 176, 180, 182, 185, 186, 188, 189, 190, 194, 196, 197, 199, 200, 202, 208, 209, 211, 217, 221, 223, 225, 239, 246, 252, 256, 258, 259, 261, 265, 270, 271, 273, 274, 276, 277, 280, 281, 282, 283, 285, 289, 293, 296, 298, 302, 303, 308, 309, 316, 317, 319, 323, 326, 329, 333, 334, 337, 338, 339, 346, 348, 350, 351, 353, 356, 357, 359, 360, 361, 363, 364, 365, 368, 373, 377, 380, 381, 391, 393, 399, 401, 402, 403, 404, 409, 410, 416, 420, 426, 428, 430, 431, 435, 437, 438, 439, 440, 442, 443, 447, 450, 451, 455, 456, 457, 458, 461, 463, 465, 466, 467, 470, 471, 477, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "_py_nonestruct": [3, 98], "visibl": [3, 35, 59, 67, 85, 97, 99, 104, 107, 114, 117, 138, 140, 151, 171, 180, 190, 192, 198, 203, 210, 219, 236, 261, 270, 276, 286, 353, 375, 391, 404, 410, 415, 444, 466, 476, 478, 481, 482, 489, 494, 495], "none": [3, 5, 16, 20, 23, 26, 31, 33, 34, 45, 54, 55, 57, 62, 63, 66, 67, 71, 72, 80, 85, 92, 97, 99, 100, 101, 105, 107, 108, 113, 114, 116, 117, 118, 120, 123, 124, 125, 127, 128, 131, 133, 134, 138, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 160, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 194, 196, 197, 199, 202, 203, 204, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 232, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 296, 298, 299, 301, 302, 303, 304, 306, 307, 308, 311, 312, 314, 315, 317, 318, 319, 320, 322, 323, 326, 327, 329, 331, 333, 334, 335, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 368, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 442, 445, 446, 447, 450, 451, 452, 456, 457, 458, 461, 465, 468, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "py_non": [3, 23, 27, 33, 46, 47, 55, 66, 85, 98, 446], "macro": [3, 4, 5, 6, 16, 17, 20, 23, 28, 32, 33, 34, 38, 42, 43, 44, 45, 50, 51, 54, 55, 56, 58, 59, 62, 63, 67, 71, 74, 80, 85, 88, 98, 189, 301, 368, 377, 471, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "evalu": [3, 22, 33, 55, 65, 67, 80, 85, 90, 97, 98, 99, 100, 106, 107, 108, 124, 133, 157, 180, 181, 239, 244, 276, 282, 283, 290, 298, 308, 312, 338, 339, 359, 360, 368, 380, 384, 401, 409, 417, 442, 443, 448, 450, 451, 456, 457, 461, 462, 464, 471, 477, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 495, 496], "pointer": [3, 5, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 23, 24, 31, 33, 35, 39, 42, 43, 45, 48, 49, 53, 54, 57, 58, 59, 60, 62, 63, 67, 84, 87, 88, 90, 91, 93, 97, 98, 99, 108, 110, 112, 128, 129, 155, 190, 192, 256, 293, 298, 314, 318, 323, 365, 368, 416, 436, 445, 455, 460, 469, 479, 481, 482, 483, 484, 488, 489, 491, 493, 494], "pymodule_cr": [3, 33, 35, 45, 84, 85, 88], "expos": [4, 7, 15, 27, 38, 43, 44, 45, 46, 48, 54, 56, 57, 61, 62, 63, 71, 84, 85, 88, 99, 101, 113, 120, 138, 141, 151, 189, 190, 194, 199, 224, 229, 264, 265, 270, 274, 277, 281, 282, 296, 298, 308, 314, 322, 345, 346, 351, 360, 361, 362, 364, 368, 395, 399, 400, 402, 417, 420, 422, 435, 437, 440, 443, 447, 480, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "follow": [4, 5, 6, 7, 9, 10, 14, 18, 20, 23, 28, 33, 34, 35, 39, 41, 42, 45, 51, 54, 56, 57, 60, 62, 63, 65, 71, 72, 75, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 182, 183, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 229, 230, 232, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 289, 290, 293, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 327, 329, 331, 333, 334, 335, 337, 338, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 369, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "note": [4, 5, 7, 10, 15, 18, 20, 23, 25, 28, 31, 33, 34, 35, 40, 42, 45, 46, 48, 53, 56, 58, 60, 62, 63, 65, 67, 71, 72, 74, 75, 78, 80, 81, 84, 85, 87, 88, 90, 91, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 131, 132, 133, 134, 138, 144, 146, 149, 151, 152, 153, 154, 156, 163, 164, 167, 170, 171, 173, 174, 176, 177, 179, 180, 182, 185, 188, 189, 190, 191, 194, 195, 196, 197, 203, 204, 207, 208, 210, 212, 213, 214, 215, 218, 219, 222, 223, 227, 228, 229, 230, 234, 235, 237, 239, 240, 241, 242, 244, 245, 247, 248, 249, 253, 254, 256, 257, 258, 259, 261, 262, 265, 266, 268, 269, 270, 271, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 290, 293, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 329, 331, 332, 334, 336, 337, 339, 343, 346, 347, 349, 350, 351, 356, 359, 360, 361, 363, 365, 367, 368, 369, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 393, 396, 399, 400, 401, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 420, 422, 424, 425, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 470, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 493, 494, 495, 496], "correspond": [4, 5, 9, 12, 15, 18, 19, 22, 23, 29, 31, 33, 35, 45, 48, 49, 55, 56, 57, 62, 63, 67, 71, 72, 75, 80, 81, 83, 85, 87, 88, 91, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 120, 121, 126, 128, 131, 132, 133, 134, 138, 140, 145, 149, 151, 155, 159, 163, 168, 171, 173, 176, 180, 183, 188, 189, 190, 191, 196, 197, 199, 202, 204, 207, 213, 222, 223, 226, 227, 232, 233, 236, 237, 239, 240, 244, 247, 249, 252, 254, 257, 259, 261, 262, 264, 265, 266, 270, 274, 276, 277, 281, 282, 283, 284, 286, 298, 306, 307, 308, 310, 322, 323, 325, 329, 332, 333, 334, 344, 346, 347, 348, 349, 351, 353, 355, 356, 357, 360, 361, 363, 364, 367, 368, 370, 373, 379, 380, 381, 384, 390, 391, 396, 401, 402, 403, 404, 408, 409, 410, 412, 414, 417, 418, 421, 425, 426, 430, 432, 434, 437, 438, 439, 442, 443, 444, 445, 446, 447, 450, 451, 455, 456, 457, 458, 464, 470, 476, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "code": [4, 5, 7, 9, 10, 11, 12, 16, 18, 23, 24, 26, 27, 31, 32, 34, 36, 38, 41, 42, 45, 48, 51, 54, 55, 56, 58, 59, 62, 63, 64, 65, 67, 71, 72, 78, 80, 84, 85, 87, 88, 89, 91, 92, 93, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 121, 124, 127, 128, 129, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 442, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 473, 474, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 493, 494, 495, 498], "built": [4, 7, 16, 21, 23, 24, 31, 33, 34, 35, 37, 42, 47, 49, 56, 57, 58, 60, 61, 62, 67, 71, 74, 77, 78, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 99, 105, 110, 113, 114, 118, 119, 120, 121, 122, 123, 124, 126, 127, 131, 133, 140, 144, 147, 158, 164, 167, 171, 172, 173, 174, 176, 191, 194, 195, 199, 200, 203, 204, 209, 213, 216, 220, 225, 233, 241, 244, 250, 261, 264, 265, 266, 267, 269, 270, 272, 273, 276, 281, 290, 291, 298, 299, 304, 307, 308, 309, 311, 312, 314, 317, 323, 326, 328, 330, 335, 336, 343, 344, 350, 353, 356, 357, 361, 363, 364, 368, 370, 377, 378, 384, 391, 399, 403, 404, 415, 417, 420, 425, 426, 428, 430, 434, 438, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 461, 464, 465, 466, 467, 470, 471, 474, 476, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498], "necessarili": [4, 13, 23, 35, 56, 60, 62, 71, 72, 83, 84, 88, 92, 97, 98, 112, 117, 121, 126, 133, 190, 199, 207, 210, 219, 239, 266, 286, 290, 298, 299, 308, 314, 334, 341, 353, 356, 357, 359, 360, 368, 381, 400, 404, 422, 425, 430, 440, 441, 451, 476, 480, 482, 483, 484, 488], "across": [4, 33, 42, 56, 60, 62, 64, 67, 71, 74, 80, 81, 90, 101, 110, 112, 118, 121, 131, 177, 180, 182, 189, 196, 204, 206, 207, 223, 239, 269, 270, 275, 276, 281, 282, 283, 284, 298, 314, 315, 329, 333, 335, 343, 345, 360, 368, 375, 380, 384, 391, 393, 399, 428, 445, 450, 459, 480, 481, 483, 484, 487, 488, 489, 493, 494, 495], "py_major_vers": [4, 124], "4": [4, 5, 10, 22, 23, 25, 30, 31, 33, 34, 35, 42, 45, 49, 57, 59, 60, 62, 63, 65, 67, 71, 72, 76, 80, 81, 85, 87, 88, 90, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 126, 127, 128, 131, 132, 133, 137, 138, 145, 151, 154, 156, 162, 163, 164, 166, 170, 171, 173, 175, 179, 182, 186, 189, 191, 194, 196, 197, 199, 201, 203, 204, 207, 210, 211, 213, 219, 221, 222, 224, 225, 227, 230, 235, 237, 239, 240, 241, 245, 248, 249, 250, 251, 252, 254, 255, 256, 259, 261, 262, 264, 265, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 289, 290, 298, 299, 301, 303, 306, 308, 309, 310, 311, 312, 314, 315, 317, 319, 320, 322, 323, 324, 325, 326, 328, 333, 334, 336, 337, 339, 341, 343, 344, 345, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 373, 377, 379, 380, 381, 382, 384, 391, 393, 396, 397, 399, 400, 401, 403, 404, 405, 408, 409, 410, 413, 414, 416, 417, 423, 424, 425, 428, 430, 431, 436, 437, 439, 440, 441, 442, 443, 445, 447, 450, 451, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 494, 495, 496, 498], "1a2": [4, 80], "py_minor_vers": [4, 65, 124, 495], "py_micro_vers": [4, 124], "1": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 38, 39, 40, 41, 42, 45, 47, 48, 49, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 71, 72, 74, 75, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 97, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 135, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 174, 175, 176, 179, 180, 183, 185, 186, 188, 189, 190, 194, 196, 199, 201, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 235, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 261, 262, 264, 265, 266, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 296, 297, 298, 299, 303, 304, 306, 308, 309, 310, 311, 312, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 368, 373, 374, 375, 376, 377, 380, 381, 382, 384, 387, 390, 391, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 479, 480, 481, 483, 485, 487, 488, 490, 491, 492, 493, 498], "py_release_level": [4, 124], "0xa": 4, "alpha": [4, 71, 80, 92, 99, 124, 299, 303, 322, 333, 368, 370, 464, 466, 477, 478, 483, 486], "0xb": 4, "beta": [4, 80, 124, 333, 368, 466, 477, 483, 492], "0xc": 4, "candid": [4, 92, 105, 124, 219, 244, 368, 443, 482, 483, 484, 491], "0xf": 4, "final": [4, 28, 32, 34, 35, 45, 49, 58, 60, 62, 67, 71, 80, 85, 86, 88, 90, 92, 96, 97, 106, 107, 108, 113, 114, 116, 117, 118, 121, 124, 126, 127, 133, 138, 145, 147, 150, 151, 154, 157, 171, 189, 194, 195, 199, 201, 203, 204, 207, 211, 217, 225, 227, 241, 249, 259, 264, 265, 270, 272, 273, 276, 280, 282, 286, 298, 306, 307, 308, 311, 312, 314, 323, 326, 329, 330, 334, 347, 349, 354, 356, 357, 359, 361, 368, 369, 373, 376, 377, 379, 380, 382, 384, 391, 393, 396, 397, 399, 400, 401, 403, 404, 405, 414, 415, 421, 424, 429, 437, 443, 444, 445, 446, 447, 450, 451, 454, 456, 458, 459, 461, 462, 471, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498], "py_release_seri": [4, 124], "2": [4, 5, 7, 18, 22, 23, 24, 25, 30, 31, 33, 34, 35, 39, 41, 42, 45, 47, 48, 49, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 75, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 138, 145, 148, 150, 151, 152, 154, 155, 156, 157, 159, 163, 164, 166, 167, 171, 173, 174, 175, 176, 179, 180, 182, 183, 186, 188, 189, 190, 191, 194, 196, 197, 199, 200, 203, 204, 207, 210, 215, 216, 219, 221, 222, 223, 225, 226, 227, 229, 232, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 259, 261, 262, 264, 265, 266, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 286, 287, 289, 290, 291, 293, 296, 298, 299, 303, 306, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 347, 348, 349, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 371, 373, 375, 377, 380, 381, 382, 384, 390, 391, 393, 396, 397, 400, 401, 402, 403, 404, 405, 409, 410, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 442, 443, 445, 447, 450, 451, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 486, 487, 488, 490, 491, 492, 498], "zero": [4, 5, 7, 15, 18, 21, 23, 25, 26, 28, 31, 33, 34, 35, 36, 38, 39, 42, 45, 49, 57, 58, 60, 62, 63, 67, 78, 85, 87, 88, 96, 97, 99, 106, 111, 112, 113, 114, 116, 118, 119, 131, 133, 138, 145, 146, 150, 151, 154, 156, 159, 163, 167, 168, 171, 173, 189, 190, 194, 196, 199, 203, 204, 207, 210, 223, 225, 227, 237, 239, 240, 241, 245, 248, 249, 250, 256, 262, 264, 265, 273, 274, 276, 282, 284, 286, 290, 293, 298, 303, 307, 308, 312, 314, 320, 329, 331, 333, 334, 335, 343, 347, 348, 351, 353, 356, 357, 358, 359, 360, 361, 363, 364, 368, 373, 376, 379, 380, 381, 391, 399, 403, 412, 420, 425, 428, 437, 439, 443, 444, 445, 446, 449, 450, 451, 456, 457, 458, 461, 463, 464, 467, 470, 477, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496], "py_version_hex": [4, 56, 112, 487, 488, 495, 496], "encod": [4, 5, 16, 22, 23, 24, 30, 31, 33, 34, 40, 45, 49, 58, 64, 65, 67, 71, 74, 80, 83, 89, 96, 99, 104, 110, 113, 114, 116, 120, 129, 131, 132, 138, 145, 148, 154, 158, 159, 162, 163, 164, 166, 169, 180, 183, 188, 190, 191, 197, 199, 201, 203, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 227, 228, 232, 237, 239, 244, 248, 249, 255, 256, 258, 262, 265, 266, 267, 268, 269, 270, 271, 280, 281, 282, 283, 284, 285, 291, 299, 300, 301, 308, 310, 311, 312, 313, 314, 319, 322, 324, 329, 341, 345, 351, 353, 357, 360, 363, 364, 365, 366, 368, 371, 373, 374, 375, 377, 384, 392, 393, 401, 410, 422, 426, 428, 430, 431, 432, 434, 435, 436, 437, 443, 447, 456, 460, 461, 465, 466, 470, 476, 477, 478, 479, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 494, 495, 496, 498], "singl": [4, 5, 7, 9, 10, 14, 16, 23, 25, 31, 33, 35, 39, 48, 57, 58, 60, 62, 63, 65, 66, 67, 73, 77, 78, 80, 83, 85, 88, 90, 91, 92, 98, 99, 104, 106, 107, 108, 109, 111, 112, 116, 118, 119, 120, 121, 131, 132, 133, 138, 152, 157, 159, 163, 164, 170, 171, 172, 173, 176, 179, 180, 188, 189, 190, 191, 194, 196, 199, 202, 203, 204, 207, 209, 210, 216, 217, 221, 222, 227, 232, 234, 237, 239, 240, 244, 248, 249, 250, 251, 256, 257, 261, 262, 265, 266, 270, 273, 274, 276, 280, 282, 283, 284, 285, 286, 289, 290, 293, 296, 298, 299, 303, 307, 308, 309, 311, 312, 314, 317, 318, 320, 322, 323, 329, 330, 333, 334, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 367, 368, 370, 373, 377, 379, 381, 384, 386, 387, 391, 393, 395, 396, 401, 403, 404, 405, 409, 410, 411, 413, 415, 417, 422, 423, 425, 428, 430, 432, 434, 436, 437, 442, 443, 445, 446, 447, 449, 450, 451, 454, 455, 456, 457, 460, 461, 464, 467, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "integ": [4, 5, 6, 7, 9, 14, 16, 18, 23, 24, 30, 35, 41, 42, 45, 47, 49, 55, 62, 63, 65, 67, 71, 84, 85, 87, 88, 90, 96, 99, 101, 104, 106, 107, 108, 111, 114, 116, 117, 119, 120, 125, 126, 128, 131, 132, 133, 134, 138, 145, 146, 150, 152, 154, 162, 163, 164, 167, 171, 173, 179, 180, 186, 189, 190, 191, 196, 199, 207, 217, 225, 226, 227, 229, 232, 235, 237, 239, 241, 247, 248, 257, 259, 262, 264, 265, 269, 271, 273, 276, 277, 281, 282, 283, 284, 285, 289, 290, 293, 296, 298, 303, 304, 305, 306, 307, 308, 309, 314, 319, 320, 322, 323, 325, 329, 331, 334, 335, 336, 337, 343, 344, 347, 353, 354, 355, 356, 357, 361, 363, 364, 365, 368, 376, 377, 380, 381, 382, 384, 391, 394, 399, 402, 404, 409, 413, 415, 416, 420, 423, 425, 426, 428, 434, 437, 439, 442, 443, 445, 451, 455, 456, 457, 458, 459, 461, 464, 466, 470, 471, 477, 478, 480, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "underli": [4, 5, 7, 18, 33, 43, 53, 67, 77, 80, 86, 90, 96, 97, 99, 104, 105, 107, 113, 114, 116, 118, 127, 129, 138, 143, 144, 145, 147, 148, 150, 162, 166, 171, 173, 174, 182, 188, 189, 190, 203, 226, 227, 229, 230, 239, 240, 248, 256, 261, 269, 270, 272, 273, 276, 277, 282, 283, 284, 285, 286, 290, 293, 298, 299, 308, 309, 310, 311, 312, 314, 320, 323, 329, 331, 333, 335, 337, 343, 344, 345, 347, 348, 353, 354, 356, 357, 358, 359, 360, 364, 368, 375, 377, 380, 381, 384, 400, 401, 403, 405, 413, 414, 420, 421, 422, 425, 434, 435, 442, 443, 445, 465, 466, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "found": [4, 5, 14, 17, 21, 22, 31, 33, 35, 42, 45, 49, 54, 58, 60, 62, 63, 71, 75, 78, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 97, 99, 100, 105, 106, 107, 108, 110, 112, 113, 114, 116, 119, 120, 122, 124, 125, 131, 132, 133, 134, 135, 148, 162, 164, 171, 173, 175, 176, 180, 183, 184, 188, 189, 190, 204, 207, 210, 211, 213, 217, 219, 221, 222, 225, 227, 229, 230, 237, 239, 240, 241, 242, 244, 247, 250, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 270, 272, 276, 280, 281, 282, 283, 285, 286, 287, 289, 291, 293, 294, 297, 298, 301, 307, 308, 310, 311, 312, 317, 325, 329, 333, 334, 337, 347, 348, 351, 353, 355, 356, 357, 359, 360, 364, 368, 369, 370, 373, 374, 377, 384, 386, 391, 393, 400, 401, 402, 403, 404, 405, 408, 410, 415, 421, 422, 425, 427, 428, 429, 430, 434, 435, 438, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 455, 456, 457, 458, 461, 462, 463, 465, 466, 467, 468, 474, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "treat": [4, 6, 35, 46, 55, 57, 58, 62, 63, 65, 67, 71, 96, 101, 106, 107, 111, 112, 116, 124, 131, 132, 151, 152, 154, 167, 171, 173, 180, 184, 190, 194, 196, 199, 201, 203, 207, 208, 217, 219, 230, 235, 240, 257, 259, 273, 274, 276, 282, 283, 286, 290, 307, 309, 311, 334, 346, 350, 351, 356, 357, 359, 360, 361, 364, 365, 373, 377, 379, 382, 384, 387, 391, 401, 403, 409, 410, 415, 416, 422, 427, 428, 442, 443, 444, 445, 450, 451, 455, 463, 464, 465, 476, 477, 479, 482, 483, 484, 485, 490, 493, 495, 496], "32": [4, 5, 16, 25, 41, 42, 58, 67, 71, 72, 98, 106, 107, 110, 111, 116, 117, 119, 126, 132, 151, 154, 159, 166, 171, 179, 189, 199, 229, 240, 249, 264, 265, 266, 274, 276, 277, 285, 298, 308, 318, 319, 321, 326, 333, 341, 348, 353, 359, 360, 363, 365, 368, 380, 381, 403, 413, 420, 421, 436, 437, 438, 439, 443, 450, 461, 471, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "bit": [4, 5, 7, 25, 30, 35, 41, 42, 57, 60, 62, 63, 65, 67, 71, 72, 80, 85, 87, 88, 90, 93, 97, 98, 101, 104, 105, 106, 107, 111, 114, 116, 117, 119, 128, 129, 132, 145, 154, 159, 165, 166, 167, 171, 180, 182, 190, 191, 199, 204, 207, 209, 214, 215, 216, 219, 222, 225, 229, 230, 239, 241, 244, 249, 257, 258, 274, 281, 285, 289, 290, 299, 302, 304, 307, 308, 310, 314, 318, 321, 330, 333, 334, 337, 341, 343, 347, 352, 353, 357, 358, 360, 363, 364, 365, 368, 371, 373, 375, 381, 382, 384, 391, 405, 412, 413, 419, 425, 436, 437, 439, 442, 443, 445, 450, 455, 456, 459, 461, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "manner": [4, 55, 85, 97, 99, 104, 113, 114, 180, 259, 283, 285, 307, 309, 311, 322, 326, 328, 334, 336, 364, 375, 401, 403, 415, 430, 442, 443, 447, 471, 480, 482, 483, 487], "byte": [4, 5, 7, 12, 14, 16, 18, 22, 23, 24, 25, 31, 33, 34, 35, 39, 40, 41, 42, 43, 49, 57, 58, 60, 62, 63, 65, 67, 71, 72, 90, 91, 96, 97, 99, 104, 105, 106, 112, 114, 116, 117, 120, 124, 128, 129, 132, 133, 134, 138, 139, 145, 148, 149, 152, 154, 155, 156, 158, 159, 162, 164, 166, 171, 179, 180, 187, 190, 191, 195, 197, 199, 201, 203, 204, 208, 209, 210, 211, 213, 214, 215, 216, 219, 220, 221, 222, 226, 227, 229, 237, 239, 244, 248, 249, 251, 256, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 281, 283, 284, 285, 286, 289, 293, 297, 298, 299, 302, 303, 305, 308, 309, 310, 311, 313, 314, 318, 319, 320, 321, 324, 326, 329, 332, 334, 337, 339, 343, 347, 348, 350, 351, 352, 353, 354, 356, 357, 358, 364, 365, 368, 373, 374, 375, 377, 384, 392, 393, 397, 401, 410, 413, 415, 416, 420, 421, 422, 423, 425, 426, 428, 429, 430, 431, 434, 436, 437, 439, 440, 442, 443, 445, 446, 447, 455, 461, 465, 466, 467, 470, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498], "big": [4, 25, 35, 42, 63, 67, 80, 85, 90, 96, 107, 114, 117, 119, 144, 145, 154, 166, 171, 180, 189, 190, 204, 244, 250, 274, 284, 310, 360, 363, 365, 368, 377, 404, 413, 420, 449, 467, 471, 479, 480, 481, 484, 486, 488, 489, 491], "endian": [4, 25, 31, 42, 63, 96, 117, 119, 154, 166, 171, 189, 244, 274, 310, 363, 365, 368, 413, 420, 467, 491], "mean": [4, 5, 7, 10, 13, 18, 23, 31, 33, 34, 35, 42, 45, 51, 56, 57, 58, 60, 62, 63, 65, 66, 71, 72, 80, 81, 85, 87, 88, 90, 96, 98, 99, 101, 105, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 138, 145, 146, 151, 152, 154, 157, 164, 168, 171, 173, 176, 179, 180, 182, 183, 188, 189, 190, 191, 194, 196, 197, 199, 203, 204, 207, 210, 216, 217, 219, 220, 221, 222, 223, 227, 228, 229, 230, 232, 234, 237, 239, 240, 242, 247, 248, 249, 250, 251, 256, 257, 258, 261, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 289, 291, 293, 296, 298, 303, 304, 307, 308, 309, 311, 312, 314, 316, 318, 322, 323, 325, 326, 329, 331, 333, 334, 336, 337, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 368, 375, 376, 377, 380, 381, 382, 384, 391, 394, 396, 399, 400, 401, 403, 404, 405, 409, 410, 412, 413, 414, 415, 416, 417, 420, 422, 425, 428, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 455, 456, 458, 459, 461, 463, 464, 465, 466, 468, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "8": [4, 5, 10, 13, 15, 16, 22, 23, 24, 25, 28, 30, 31, 33, 34, 35, 36, 39, 40, 42, 45, 47, 49, 56, 57, 58, 62, 65, 67, 71, 75, 80, 90, 96, 97, 98, 99, 101, 104, 106, 107, 108, 110, 113, 114, 116, 117, 119, 126, 129, 131, 132, 133, 138, 139, 143, 144, 148, 149, 151, 154, 155, 158, 159, 160, 163, 164, 166, 173, 176, 179, 180, 186, 188, 189, 190, 191, 196, 197, 199, 201, 203, 204, 207, 210, 211, 215, 219, 220, 222, 223, 225, 229, 232, 235, 237, 239, 240, 241, 244, 248, 249, 250, 251, 255, 256, 257, 258, 259, 261, 262, 265, 266, 267, 270, 273, 274, 276, 277, 280, 281, 282, 283, 290, 291, 293, 298, 299, 301, 302, 303, 307, 309, 310, 311, 312, 313, 314, 318, 319, 320, 322, 323, 326, 329, 333, 334, 337, 341, 345, 346, 347, 348, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 368, 373, 375, 377, 379, 380, 381, 382, 383, 384, 391, 392, 393, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 413, 414, 417, 422, 423, 425, 426, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 450, 451, 456, 457, 459, 461, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 477, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 496, 498], "0x03": [4, 204], "9": [4, 5, 7, 10, 23, 26, 28, 33, 34, 45, 56, 57, 58, 59, 60, 61, 62, 63, 67, 71, 92, 97, 105, 106, 107, 108, 110, 112, 113, 114, 116, 119, 121, 123, 131, 132, 133, 137, 138, 141, 144, 147, 150, 151, 162, 163, 167, 171, 173, 174, 176, 179, 180, 181, 186, 189, 190, 191, 196, 199, 201, 203, 204, 207, 223, 225, 229, 235, 237, 239, 240, 241, 245, 246, 248, 249, 250, 254, 255, 256, 259, 262, 265, 267, 268, 270, 274, 276, 277, 278, 282, 283, 284, 285, 290, 298, 299, 303, 308, 311, 315, 317, 319, 320, 322, 323, 329, 333, 334, 337, 343, 346, 347, 348, 351, 353, 356, 357, 359, 360, 361, 362, 363, 364, 368, 373, 377, 380, 381, 393, 397, 399, 400, 401, 402, 409, 410, 414, 417, 426, 428, 435, 437, 439, 440, 442, 443, 450, 456, 457, 461, 464, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 498], "16": [4, 5, 16, 34, 41, 47, 67, 90, 97, 101, 106, 107, 108, 114, 117, 119, 128, 132, 154, 159, 163, 171, 186, 189, 190, 196, 204, 207, 225, 235, 239, 240, 249, 250, 254, 274, 276, 277, 282, 298, 307, 308, 310, 329, 333, 334, 337, 341, 347, 353, 357, 359, 360, 361, 364, 368, 381, 384, 393, 399, 413, 439, 441, 450, 455, 457, 459, 461, 464, 466, 467, 468, 477, 479, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "0x04": [4, 204, 443], "17": [4, 67, 106, 107, 114, 119, 121, 151, 163, 196, 199, 203, 207, 222, 237, 250, 272, 276, 307, 308, 334, 381, 393, 399, 441, 459, 464, 478, 481, 483, 484, 486, 489, 491, 492, 498], "24": [4, 97, 106, 107, 108, 111, 116, 119, 151, 154, 163, 196, 199, 207, 223, 250, 274, 276, 310, 334, 347, 359, 360, 363, 365, 381, 439, 450, 484, 488, 490, 491, 495, 496], "0x01": [4, 204, 353], "25": [4, 97, 106, 107, 138, 163, 196, 199, 203, 235, 250, 274, 276, 298, 333, 334, 337, 351, 353, 356, 359, 360, 376, 393, 397, 399, 439, 457, 461, 463, 464, 466, 477, 479, 480, 481, 483, 484, 488, 490, 492, 493, 494, 495, 496], "28": [4, 33, 110, 114, 163, 199, 240, 250, 274, 356, 381, 399, 481, 482, 483, 487, 489, 495, 496], "29": [4, 110, 114, 116, 163, 196, 199, 203, 250, 274, 276, 282, 333, 381, 480, 483, 487, 490, 495, 496], "0x2": 4, "thu": [4, 5, 7, 33, 35, 38, 42, 53, 71, 72, 75, 78, 80, 85, 90, 96, 97, 106, 112, 113, 114, 116, 121, 128, 131, 133, 152, 153, 163, 180, 182, 189, 190, 207, 215, 218, 219, 222, 227, 239, 242, 249, 257, 265, 266, 274, 277, 281, 282, 283, 284, 290, 298, 307, 308, 314, 328, 334, 342, 346, 347, 349, 353, 356, 357, 360, 364, 368, 373, 375, 377, 381, 399, 401, 403, 409, 410, 414, 420, 422, 436, 440, 442, 445, 447, 450, 451, 455, 456, 464, 465, 468, 470, 476, 477, 485, 489, 490, 491, 492, 493, 495], "hexvers": [4, 92, 368, 465, 490], "0x030401a2": 4, "10": [4, 10, 14, 18, 20, 22, 23, 26, 28, 33, 34, 36, 39, 45, 47, 49, 51, 54, 56, 57, 60, 62, 63, 67, 71, 85, 87, 90, 91, 96, 99, 104, 105, 106, 107, 110, 113, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 131, 132, 133, 135, 138, 141, 143, 144, 146, 147, 148, 149, 150, 151, 156, 160, 162, 163, 164, 167, 168, 171, 173, 176, 182, 189, 190, 194, 196, 198, 199, 201, 204, 207, 223, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 245, 247, 249, 250, 251, 255, 256, 265, 266, 270, 273, 274, 276, 281, 282, 283, 289, 290, 293, 297, 298, 299, 301, 303, 306, 307, 308, 309, 311, 318, 319, 322, 323, 326, 327, 333, 334, 337, 340, 341, 345, 347, 353, 356, 357, 358, 359, 360, 361, 363, 364, 368, 370, 375, 377, 379, 380, 381, 382, 384, 387, 393, 396, 399, 400, 401, 403, 405, 409, 410, 422, 428, 430, 435, 437, 438, 440, 442, 443, 444, 445, 446, 447, 450, 455, 456, 457, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 496, 498], "0": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 28, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 75, 78, 80, 83, 84, 85, 87, 88, 90, 91, 92, 96, 97, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 131, 132, 133, 138, 143, 145, 146, 148, 150, 151, 152, 153, 154, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 173, 175, 176, 179, 180, 183, 188, 189, 190, 191, 194, 196, 199, 203, 204, 207, 210, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 232, 234, 235, 236, 237, 239, 240, 241, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 261, 262, 265, 266, 269, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 289, 290, 293, 294, 296, 298, 299, 303, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 331, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 363, 364, 368, 370, 371, 373, 374, 375, 376, 377, 380, 381, 382, 384, 386, 387, 391, 393, 394, 395, 396, 397, 401, 402, 403, 404, 409, 410, 414, 415, 417, 418, 420, 422, 423, 424, 425, 426, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 450, 451, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494, 498], "0x030a00f0": 4, "comparison": [4, 18, 23, 49, 62, 63, 67, 80, 86, 107, 119, 123, 133, 153, 160, 167, 173, 174, 186, 189, 194, 196, 199, 203, 204, 207, 233, 234, 239, 240, 250, 269, 270, 271, 281, 290, 298, 306, 309, 313, 359, 361, 362, 368, 377, 401, 403, 404, 405, 413, 420, 428, 434, 443, 446, 448, 450, 457, 464, 470, 477, 479, 480, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498], "avail": [4, 5, 6, 7, 10, 11, 13, 15, 23, 24, 25, 26, 33, 34, 35, 39, 42, 44, 45, 54, 56, 58, 60, 63, 65, 67, 71, 72, 74, 76, 77, 78, 81, 83, 84, 85, 86, 87, 89, 90, 92, 96, 97, 98, 99, 104, 106, 108, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 126, 127, 129, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 161, 164, 168, 171, 173, 176, 179, 180, 182, 183, 186, 187, 188, 189, 190, 195, 197, 199, 204, 206, 209, 221, 224, 225, 226, 227, 228, 229, 232, 237, 239, 240, 243, 244, 247, 249, 250, 251, 255, 256, 259, 261, 262, 265, 266, 267, 269, 270, 273, 274, 277, 281, 282, 283, 284, 286, 290, 291, 292, 293, 297, 298, 299, 301, 302, 303, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 368, 369, 371, 373, 374, 375, 376, 377, 380, 381, 383, 384, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 410, 413, 414, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 456, 460, 462, 463, 465, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "symbol": [4, 34, 35, 56, 65, 67, 71, 80, 83, 85, 89, 97, 98, 104, 106, 108, 114, 119, 121, 129, 133, 170, 172, 189, 190, 199, 204, 207, 225, 239, 245, 259, 269, 279, 281, 284, 287, 306, 308, 309, 311, 315, 318, 334, 337, 347, 348, 353, 356, 358, 360, 368, 369, 372, 373, 374, 376, 377, 384, 388, 391, 399, 402, 409, 420, 425, 430, 436, 443, 446, 449, 451, 456, 462, 470, 476, 477, 479, 481, 482, 484, 486, 487, 489, 493, 495, 496], "py_vers": [4, 33, 56, 112, 488, 489], "const": [4, 5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 22, 23, 24, 25, 30, 31, 33, 34, 39, 40, 41, 43, 45, 48, 49, 52, 53, 57, 58, 59, 60, 62, 63, 65, 67, 85, 87, 91, 110, 112, 129, 307, 426, 491, 494, 495], "unsign": [4, 5, 7, 9, 18, 25, 30, 31, 33, 34, 35, 39, 42, 57, 60, 62, 63, 87, 132, 154, 159, 189, 308, 310, 314, 353, 360, 363, 365, 423, 425, 426, 439, 467, 479, 480, 482, 487, 490, 494], "long": [4, 5, 6, 9, 18, 22, 23, 31, 33, 34, 35, 39, 41, 45, 57, 58, 60, 62, 63, 65, 67, 71, 74, 75, 80, 85, 87, 90, 92, 96, 97, 99, 101, 107, 110, 112, 113, 114, 116, 117, 120, 123, 131, 132, 137, 138, 151, 156, 159, 160, 179, 180, 182, 189, 190, 203, 207, 216, 222, 226, 229, 237, 239, 240, 241, 242, 255, 256, 259, 261, 262, 269, 273, 274, 276, 282, 283, 289, 298, 307, 308, 314, 318, 320, 321, 322, 323, 333, 334, 336, 343, 345, 348, 351, 353, 354, 356, 357, 360, 363, 364, 368, 373, 375, 377, 379, 380, 381, 382, 383, 384, 390, 391, 396, 410, 411, 415, 420, 422, 425, 426, 440, 442, 443, 445, 450, 455, 456, 461, 464, 465, 467, 470, 476, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "sinc": [4, 5, 7, 10, 13, 14, 22, 23, 24, 26, 28, 31, 33, 34, 35, 36, 40, 42, 43, 45, 46, 47, 48, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 65, 67, 71, 72, 74, 75, 78, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 99, 100, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 132, 133, 134, 138, 141, 145, 151, 152, 154, 157, 159, 161, 162, 164, 165, 166, 170, 173, 174, 180, 182, 186, 188, 189, 190, 194, 196, 199, 203, 207, 208, 210, 212, 213, 215, 217, 219, 221, 222, 223, 227, 232, 236, 237, 239, 240, 241, 244, 248, 249, 250, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 273, 274, 277, 281, 282, 283, 284, 286, 287, 290, 293, 296, 298, 302, 303, 307, 308, 309, 310, 311, 312, 316, 317, 320, 322, 323, 329, 333, 334, 343, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 363, 365, 368, 370, 373, 374, 375, 377, 379, 380, 381, 384, 390, 391, 393, 395, 396, 397, 401, 403, 404, 405, 410, 412, 413, 414, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 436, 437, 438, 439, 442, 443, 444, 445, 447, 449, 450, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "runtim": [4, 24, 33, 35, 42, 51, 58, 65, 67, 71, 85, 87, 88, 89, 90, 97, 99, 100, 108, 112, 113, 119, 121, 124, 155, 176, 180, 189, 195, 198, 201, 204, 227, 239, 265, 269, 272, 283, 284, 307, 309, 326, 329, 356, 360, 364, 368, 369, 384, 397, 401, 404, 415, 419, 424, 426, 436, 439, 442, 443, 444, 447, 451, 455, 470, 471, 476, 478, 480, 484, 485, 487, 490, 491, 492, 493, 496], "constant": [4, 7, 25, 33, 45, 57, 62, 63, 67, 87, 88, 90, 96, 97, 99, 104, 106, 114, 126, 129, 131, 133, 138, 151, 161, 171, 173, 174, 177, 179, 186, 187, 188, 191, 195, 200, 204, 207, 225, 229, 239, 240, 241, 250, 255, 256, 258, 264, 269, 270, 273, 276, 279, 281, 282, 285, 288, 289, 296, 297, 298, 305, 307, 308, 310, 313, 314, 315, 319, 323, 334, 337, 341, 343, 344, 348, 358, 359, 360, 368, 371, 373, 374, 376, 377, 378, 380, 384, 390, 393, 397, 402, 413, 419, 421, 425, 427, 428, 430, 434, 437, 439, 443, 445, 450, 456, 470, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "contain": [4, 5, 7, 9, 10, 12, 13, 14, 18, 22, 23, 25, 27, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 48, 49, 53, 54, 56, 57, 58, 59, 60, 62, 63, 67, 71, 72, 76, 78, 80, 83, 84, 85, 87, 88, 89, 91, 92, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 132, 133, 134, 138, 145, 148, 151, 154, 155, 156, 157, 159, 162, 163, 164, 165, 170, 171, 172, 176, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 194, 195, 196, 197, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 237, 239, 240, 241, 244, 245, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 277, 278, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 296, 298, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 333, 334, 337, 339, 341, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 364, 367, 368, 369, 370, 372, 373, 375, 376, 377, 379, 380, 381, 382, 384, 390, 391, 393, 395, 396, 397, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 453, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "patchlevel": [4, 318], "h": [4, 5, 20, 25, 26, 31, 33, 35, 56, 58, 62, 65, 71, 80, 84, 85, 87, 88, 91, 96, 97, 98, 101, 105, 106, 113, 114, 117, 119, 121, 125, 131, 132, 133, 163, 173, 175, 176, 190, 196, 204, 216, 226, 229, 239, 242, 247, 248, 249, 250, 261, 263, 276, 277, 281, 282, 283, 284, 296, 297, 298, 299, 306, 307, 308, 310, 312, 325, 333, 346, 348, 353, 355, 356, 357, 360, 361, 363, 368, 370, 371, 374, 377, 381, 382, 384, 393, 403, 404, 414, 422, 434, 436, 455, 464, 467, 470, 471, 475, 477, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 495, 496], "method": [5, 6, 7, 10, 14, 15, 16, 21, 22, 23, 24, 25, 28, 34, 37, 39, 40, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 65, 67, 71, 75, 84, 86, 87, 92, 93, 98, 99, 100, 101, 104, 107, 113, 114, 118, 119, 120, 123, 126, 127, 128, 129, 132, 133, 134, 137, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 155, 157, 159, 160, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 203, 204, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 244, 246, 248, 249, 250, 251, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 273, 274, 276, 277, 280, 282, 283, 284, 285, 286, 288, 291, 293, 294, 296, 299, 301, 304, 306, 308, 310, 312, 313, 314, 316, 317, 320, 322, 323, 326, 327, 328, 329, 330, 331, 333, 334, 336, 338, 340, 343, 344, 345, 346, 350, 351, 354, 357, 359, 361, 363, 364, 365, 367, 368, 373, 374, 375, 377, 379, 380, 382, 384, 385, 387, 388, 389, 390, 391, 393, 396, 397, 400, 401, 402, 403, 409, 410, 411, 412, 413, 414, 416, 418, 420, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 444, 447, 448, 450, 451, 456, 457, 458, 459, 460, 462, 464, 466, 467, 470, 471, 478, 479, 480, 483, 484, 486, 487, 488, 489, 491, 495, 498], "exampl": [5, 7, 10, 16, 18, 22, 23, 32, 33, 35, 45, 50, 51, 56, 57, 60, 61, 63, 65, 67, 71, 72, 74, 76, 77, 80, 81, 83, 84, 86, 87, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 133, 136, 137, 140, 141, 142, 143, 147, 150, 151, 154, 156, 157, 158, 161, 163, 164, 167, 171, 172, 175, 176, 177, 181, 183, 184, 187, 189, 190, 194, 195, 197, 198, 199, 200, 204, 205, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 244, 245, 246, 259, 261, 263, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 290, 291, 293, 295, 297, 299, 300, 303, 304, 305, 306, 308, 310, 311, 312, 313, 315, 316, 317, 318, 321, 323, 326, 328, 330, 331, 336, 337, 338, 340, 341, 346, 349, 350, 352, 356, 358, 360, 362, 364, 367, 368, 370, 377, 378, 379, 381, 384, 390, 391, 395, 399, 400, 401, 402, 404, 406, 409, 411, 415, 418, 421, 423, 424, 425, 427, 430, 437, 440, 441, 442, 443, 444, 447, 449, 450, 451, 454, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "extend": [5, 31, 32, 33, 35, 42, 45, 62, 67, 75, 77, 83, 87, 88, 90, 92, 94, 96, 99, 104, 106, 114, 116, 120, 129, 131, 132, 133, 135, 145, 152, 156, 163, 167, 168, 171, 173, 174, 180, 181, 182, 189, 190, 196, 203, 204, 205, 207, 210, 219, 221, 227, 239, 240, 244, 259, 261, 263, 264, 273, 276, 277, 286, 290, 291, 293, 295, 297, 314, 317, 318, 323, 329, 335, 343, 347, 350, 351, 353, 357, 360, 368, 373, 381, 391, 393, 403, 410, 417, 424, 425, 428, 435, 443, 444, 445, 447, 448, 451, 455, 456, 457, 460, 464, 465, 476, 478, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498], "interpret": [5, 7, 13, 16, 18, 23, 24, 28, 31, 32, 34, 35, 39, 42, 45, 47, 49, 51, 52, 57, 58, 62, 63, 65, 67, 71, 80, 84, 85, 87, 88, 91, 92, 97, 98, 99, 105, 107, 108, 110, 113, 114, 116, 119, 121, 122, 123, 125, 126, 131, 132, 133, 138, 150, 153, 158, 163, 164, 165, 176, 179, 180, 181, 188, 189, 190, 195, 196, 197, 199, 203, 204, 205, 207, 211, 217, 221, 223, 224, 227, 233, 236, 239, 241, 249, 259, 261, 262, 264, 265, 266, 269, 272, 273, 274, 276, 277, 278, 281, 282, 283, 293, 296, 298, 306, 307, 308, 309, 311, 312, 314, 318, 321, 322, 323, 324, 325, 326, 328, 329, 330, 334, 335, 339, 343, 345, 346, 348, 349, 351, 353, 356, 357, 360, 361, 364, 365, 368, 370, 375, 376, 377, 380, 381, 384, 387, 390, 391, 396, 401, 403, 404, 410, 414, 415, 417, 418, 421, 425, 428, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460, 461, 464, 465, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498], "three": [5, 7, 23, 31, 35, 42, 57, 62, 72, 78, 80, 83, 85, 87, 88, 89, 90, 96, 97, 99, 100, 105, 106, 113, 114, 116, 117, 118, 119, 121, 124, 128, 131, 133, 134, 145, 146, 151, 171, 173, 174, 175, 188, 189, 190, 194, 196, 199, 202, 203, 204, 207, 208, 210, 214, 219, 221, 225, 227, 229, 230, 239, 240, 241, 249, 250, 257, 259, 262, 265, 273, 281, 283, 284, 286, 293, 298, 301, 303, 307, 308, 310, 311, 314, 322, 323, 329, 331, 333, 334, 341, 343, 347, 348, 349, 353, 356, 357, 359, 360, 361, 363, 364, 368, 373, 374, 381, 382, 384, 388, 391, 399, 400, 401, 403, 404, 405, 410, 414, 418, 424, 425, 429, 430, 434, 440, 442, 443, 445, 446, 447, 449, 450, 451, 452, 455, 456, 459, 461, 463, 465, 466, 467, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 494, 495], "pyarg_parsetupl": [5, 7, 48, 56, 57, 84, 85, 87, 89, 112, 445, 477, 479, 480, 482, 483, 487, 490, 495], "pyarg_parsetupleandkeyword": [5, 56, 57, 85, 87, 88, 481, 493], "pyarg_pars": [5, 56, 484, 489], "tell": [5, 18, 31, 33, 67, 71, 75, 80, 85, 87, 90, 92, 97, 101, 104, 107, 114, 116, 117, 121, 123, 128, 131, 138, 146, 152, 164, 166, 172, 207, 222, 236, 237, 249, 273, 282, 284, 293, 298, 307, 310, 314, 331, 347, 348, 353, 354, 356, 357, 360, 365, 382, 384, 395, 401, 404, 410, 416, 422, 437, 455, 461, 477, 479, 480, 481, 483, 488, 492, 493, 494], "syntax": [5, 7, 67, 71, 74, 75, 85, 90, 91, 92, 97, 99, 107, 111, 113, 114, 116, 119, 120, 123, 129, 135, 138, 151, 164, 170, 172, 180, 181, 189, 194, 199, 217, 225, 227, 239, 244, 261, 269, 270, 277, 279, 281, 283, 288, 298, 306, 307, 310, 312, 329, 346, 350, 356, 360, 368, 377, 378, 384, 391, 396, 397, 401, 403, 409, 410, 411, 432, 434, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 457, 459, 460, 461, 463, 464, 465, 466, 467, 469, 470, 472, 477, 478, 479, 480, 481, 482, 484, 486, 488, 489, 491, 494, 495, 496, 498], "consist": [5, 7, 9, 10, 15, 18, 23, 31, 33, 35, 51, 55, 62, 63, 65, 71, 80, 85, 92, 97, 99, 104, 106, 107, 114, 121, 125, 128, 133, 154, 159, 163, 164, 166, 171, 173, 180, 190, 191, 196, 203, 204, 206, 207, 210, 217, 219, 221, 222, 223, 239, 242, 246, 254, 256, 257, 261, 262, 265, 267, 272, 274, 277, 281, 283, 284, 285, 290, 298, 308, 314, 316, 323, 333, 334, 340, 346, 351, 354, 359, 360, 362, 363, 364, 365, 368, 375, 377, 379, 384, 390, 391, 396, 399, 401, 403, 410, 425, 440, 441, 442, 443, 445, 447, 450, 456, 457, 464, 471, 474, 475, 476, 477, 478, 479, 480, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "unit": [5, 63, 67, 78, 85, 92, 97, 99, 106, 107, 111, 113, 114, 119, 125, 173, 179, 191, 196, 200, 207, 239, 240, 269, 290, 323, 340, 353, 357, 360, 361, 381, 382, 384, 391, 399, 404, 422, 441, 443, 444, 478, 483, 490, 492, 495, 496], "usual": [5, 7, 10, 20, 23, 28, 33, 34, 35, 39, 45, 47, 51, 56, 60, 62, 63, 71, 72, 78, 80, 81, 85, 87, 90, 93, 96, 97, 98, 99, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 131, 133, 137, 138, 141, 143, 145, 152, 159, 162, 164, 166, 173, 186, 188, 189, 199, 203, 207, 208, 210, 212, 216, 219, 227, 235, 237, 239, 240, 244, 250, 257, 259, 261, 262, 264, 265, 266, 269, 270, 273, 274, 276, 282, 284, 287, 290, 298, 303, 306, 307, 308, 310, 312, 314, 319, 321, 325, 334, 336, 343, 347, 348, 349, 353, 354, 355, 356, 357, 359, 360, 361, 364, 368, 373, 377, 381, 383, 384, 390, 391, 396, 399, 401, 403, 404, 405, 408, 410, 416, 417, 428, 436, 437, 438, 442, 443, 445, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 467, 468, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 491, 492, 493, 495], "charact": [5, 9, 14, 16, 18, 33, 34, 35, 39, 42, 48, 49, 58, 67, 71, 73, 74, 80, 85, 90, 96, 97, 98, 99, 104, 114, 117, 119, 122, 129, 131, 132, 133, 134, 138, 143, 149, 156, 158, 159, 163, 164, 168, 171, 180, 186, 188, 189, 196, 197, 199, 203, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 227, 228, 234, 239, 242, 245, 252, 253, 254, 258, 259, 261, 262, 265, 266, 269, 273, 280, 281, 283, 286, 287, 297, 298, 299, 300, 301, 303, 308, 309, 311, 314, 318, 322, 329, 332, 334, 335, 336, 338, 341, 346, 347, 351, 353, 354, 356, 357, 358, 360, 361, 362, 364, 368, 373, 374, 375, 376, 377, 379, 381, 384, 387, 390, 391, 402, 403, 409, 413, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 441, 445, 449, 450, 451, 453, 456, 457, 461, 463, 464, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "parenthes": [5, 62, 67, 80, 85, 91, 97, 99, 107, 114, 116, 170, 204, 262, 264, 265, 281, 323, 334, 360, 414, 442, 443, 446, 449, 450, 451, 455, 456, 457, 458, 462, 464, 477, 481, 482, 483, 484, 492, 494, 495], "With": [5, 57, 67, 71, 75, 83, 84, 88, 90, 92, 106, 107, 108, 112, 113, 114, 117, 120, 122, 127, 133, 138, 168, 171, 173, 179, 180, 182, 190, 194, 196, 199, 210, 222, 229, 232, 239, 241, 244, 261, 265, 282, 285, 290, 298, 307, 311, 312, 323, 331, 333, 334, 356, 357, 359, 360, 361, 364, 370, 373, 390, 391, 399, 401, 403, 404, 405, 415, 426, 433, 434, 437, 442, 446, 447, 451, 464, 474, 476, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496], "few": [5, 27, 33, 35, 56, 71, 72, 76, 85, 90, 97, 98, 101, 106, 107, 108, 112, 113, 114, 116, 119, 121, 125, 131, 152, 154, 168, 171, 180, 183, 186, 189, 190, 194, 196, 199, 203, 207, 212, 214, 237, 239, 244, 250, 254, 261, 264, 284, 296, 298, 307, 314, 315, 332, 333, 334, 349, 351, 353, 357, 360, 363, 377, 382, 384, 396, 403, 404, 409, 410, 439, 443, 449, 450, 455, 456, 461, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 491, 492, 493, 495], "address": [5, 9, 23, 42, 57, 62, 63, 67, 71, 78, 80, 85, 87, 90, 92, 97, 99, 108, 113, 114, 116, 117, 123, 132, 138, 140, 142, 145, 152, 155, 177, 183, 189, 204, 207, 214, 217, 222, 223, 226, 229, 237, 239, 256, 257, 259, 271, 277, 282, 284, 285, 286, 299, 334, 337, 350, 351, 353, 354, 356, 357, 377, 397, 401, 409, 410, 413, 422, 435, 436, 443, 471, 477, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "quot": [5, 67, 71, 90, 91, 96, 97, 99, 100, 108, 116, 119, 122, 138, 149, 159, 171, 188, 189, 209, 210, 211, 212, 216, 217, 219, 222, 223, 249, 252, 254, 261, 262, 269, 271, 277, 300, 312, 334, 346, 356, 360, 361, 364, 375, 379, 382, 393, 399, 401, 410, 428, 432, 441, 442, 446, 449, 450, 456, 461, 462, 463, 464, 466, 476, 477, 480, 482, 487, 489, 490, 494], "entri": [5, 22, 26, 31, 33, 35, 45, 49, 62, 67, 75, 77, 80, 85, 87, 90, 98, 99, 101, 105, 106, 107, 110, 114, 119, 120, 121, 125, 131, 138, 146, 147, 151, 157, 160, 163, 171, 173, 180, 182, 189, 190, 194, 197, 199, 204, 206, 207, 209, 230, 239, 240, 244, 247, 250, 257, 261, 262, 265, 270, 276, 280, 283, 284, 285, 286, 287, 295, 296, 298, 299, 301, 307, 308, 309, 311, 314, 317, 318, 321, 322, 323, 325, 329, 331, 334, 336, 339, 345, 346, 348, 351, 355, 356, 357, 360, 367, 368, 369, 373, 375, 377, 380, 384, 390, 391, 393, 396, 399, 400, 404, 405, 411, 415, 417, 418, 420, 436, 437, 440, 444, 445, 457, 464, 467, 470, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495], "round": [5, 62, 63, 67, 99, 133, 162, 173, 186, 196, 203, 207, 235, 239, 257, 290, 304, 305, 308, 333, 359, 360, 361, 363, 368, 393, 399, 401, 403, 416, 443, 445, 457, 459, 461, 464, 465, 466, 467, 477, 479, 481, 482, 483, 484, 485, 486, 488, 490, 491, 494, 495], "match": [5, 11, 22, 23, 33, 42, 45, 62, 63, 67, 73, 80, 81, 85, 90, 97, 99, 101, 104, 106, 107, 108, 113, 114, 117, 119, 120, 129, 134, 138, 148, 151, 153, 154, 157, 163, 164, 168, 173, 176, 180, 190, 196, 199, 200, 203, 204, 207, 210, 211, 217, 218, 219, 222, 225, 227, 230, 233, 239, 240, 242, 245, 254, 256, 257, 260, 261, 262, 264, 266, 269, 270, 276, 279, 282, 283, 285, 287, 298, 301, 302, 303, 308, 309, 311, 312, 317, 323, 326, 329, 333, 335, 338, 346, 347, 348, 353, 356, 357, 360, 361, 363, 364, 374, 377, 378, 381, 384, 390, 391, 393, 396, 397, 400, 401, 403, 404, 409, 410, 415, 416, 418, 425, 426, 428, 430, 435, 440, 444, 445, 446, 448, 450, 458, 460, 462, 467, 470, 471, 476, 477, 478, 479, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496], "squar": [5, 33, 62, 97, 99, 101, 106, 107, 119, 154, 167, 190, 194, 199, 276, 290, 312, 323, 356, 359, 360, 399, 409, 428, 442, 443, 445, 449, 450, 451, 455, 457, 461, 464, 479, 480, 483, 487, 495], "bracket": [5, 33, 62, 90, 99, 107, 114, 116, 119, 157, 223, 234, 239, 245, 254, 286, 312, 334, 356, 360, 402, 409, 425, 428, 442, 443, 445, 449, 450, 451, 454, 455, 456, 457, 461, 464, 482, 483, 484, 487], "pass": [5, 7, 9, 10, 11, 13, 14, 16, 17, 20, 23, 24, 28, 33, 34, 35, 36, 42, 43, 45, 47, 49, 51, 57, 58, 60, 61, 62, 63, 65, 67, 71, 72, 80, 83, 84, 85, 87, 88, 89, 90, 91, 96, 99, 100, 104, 105, 106, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 137, 138, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 162, 163, 164, 167, 168, 170, 171, 173, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 194, 196, 197, 203, 204, 207, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 237, 239, 240, 244, 246, 248, 249, 250, 251, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 293, 294, 296, 298, 301, 303, 307, 308, 309, 310, 311, 312, 314, 320, 321, 322, 323, 324, 326, 329, 333, 334, 335, 336, 337, 338, 340, 345, 346, 347, 348, 350, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 388, 390, 391, 393, 395, 396, 398, 399, 400, 401, 403, 404, 405, 409, 410, 414, 415, 416, 417, 418, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 455, 458, 460, 461, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "chunk": [5, 13, 43, 67, 90, 97, 114, 117, 119, 134, 145, 162, 179, 193, 237, 239, 249, 254, 256, 269, 273, 276, 277, 285, 298, 299, 308, 318, 329, 347, 349, 353, 363, 366, 410, 422, 430, 431, 445, 477, 480, 482, 484, 488, 493], "raw": [5, 7, 16, 32, 62, 67, 99, 113, 116, 129, 131, 133, 164, 180, 189, 190, 204, 207, 210, 211, 219, 220, 221, 239, 244, 269, 270, 285, 298, 303, 308, 311, 314, 344, 346, 353, 354, 357, 360, 366, 378, 381, 382, 384, 396, 398, 410, 413, 417, 430, 439, 442, 450, 464, 478, 480, 482, 483, 485, 488, 490, 492], "storag": [5, 32, 35, 42, 54, 67, 90, 99, 105, 112, 114, 119, 171, 180, 190, 204, 265, 273, 276, 299, 308, 315, 345, 356, 360, 363, 375, 428, 455, 479, 482, 483, 484, 490, 491], "unicod": [5, 16, 27, 31, 32, 39, 45, 58, 62, 64, 67, 92, 97, 99, 104, 109, 114, 116, 123, 130, 132, 156, 158, 159, 180, 188, 189, 190, 195, 196, 199, 207, 208, 209, 210, 211, 214, 215, 216, 217, 222, 223, 227, 235, 239, 244, 252, 253, 254, 261, 269, 273, 277, 281, 297, 308, 309, 311, 314, 317, 334, 350, 356, 360, 361, 362, 368, 378, 393, 401, 409, 415, 420, 422, 426, 427, 428, 437, 440, 443, 445, 450, 457, 470, 471, 478, 482, 483, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496, 498], "area": [5, 7, 42, 45, 77, 92, 104, 108, 113, 114, 119, 190, 210, 219, 239, 261, 272, 273, 293, 314, 337, 353, 357, 359, 375, 386, 391, 449, 460, 461, 477, 482, 483, 488, 491, 494], "unless": [5, 7, 9, 23, 24, 31, 33, 35, 42, 53, 55, 58, 62, 71, 85, 88, 90, 97, 98, 101, 106, 107, 112, 113, 116, 117, 121, 123, 125, 127, 128, 131, 133, 137, 138, 141, 151, 153, 154, 162, 163, 174, 180, 182, 188, 194, 196, 199, 204, 207, 210, 214, 219, 220, 223, 239, 240, 254, 256, 257, 258, 261, 264, 265, 270, 273, 274, 276, 282, 283, 285, 286, 290, 296, 298, 303, 307, 308, 309, 311, 312, 324, 329, 334, 338, 343, 344, 347, 349, 351, 353, 354, 357, 359, 360, 361, 364, 368, 369, 373, 374, 379, 380, 401, 403, 404, 409, 410, 414, 415, 417, 421, 422, 427, 430, 441, 442, 443, 444, 445, 450, 453, 455, 456, 461, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 493, 494, 495, 496], "otherwis": [5, 7, 10, 11, 13, 18, 22, 23, 28, 31, 33, 34, 35, 36, 39, 40, 42, 43, 45, 47, 48, 49, 51, 53, 57, 58, 62, 63, 65, 67, 71, 80, 85, 88, 90, 91, 98, 101, 106, 107, 113, 114, 116, 117, 120, 123, 127, 128, 131, 132, 133, 138, 141, 145, 146, 148, 150, 151, 152, 154, 159, 162, 163, 167, 168, 170, 171, 173, 176, 179, 180, 182, 183, 189, 190, 192, 194, 196, 197, 198, 199, 203, 204, 207, 209, 210, 211, 213, 214, 216, 219, 220, 222, 223, 224, 225, 228, 230, 232, 237, 239, 240, 241, 243, 244, 246, 248, 256, 257, 258, 259, 261, 264, 265, 266, 267, 269, 270, 272, 273, 274, 276, 277, 282, 283, 284, 286, 290, 291, 293, 298, 301, 306, 307, 308, 309, 311, 312, 314, 316, 317, 318, 319, 320, 322, 326, 327, 329, 331, 334, 336, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 361, 364, 365, 368, 369, 370, 373, 374, 375, 377, 379, 380, 381, 384, 388, 391, 393, 396, 397, 399, 402, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 421, 422, 426, 428, 430, 434, 435, 436, 437, 439, 440, 442, 443, 445, 446, 447, 450, 451, 452, 453, 455, 457, 461, 470, 471, 476, 478, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495], "state": [5, 17, 23, 24, 31, 32, 35, 45, 50, 51, 52, 58, 60, 62, 63, 67, 85, 87, 88, 96, 97, 99, 104, 107, 108, 110, 113, 116, 120, 130, 138, 139, 141, 145, 150, 151, 152, 154, 157, 164, 167, 170, 171, 173, 177, 179, 180, 182, 183, 184, 190, 198, 204, 226, 227, 232, 236, 240, 241, 249, 255, 257, 262, 265, 269, 271, 273, 274, 283, 285, 286, 308, 310, 312, 313, 316, 318, 323, 329, 330, 331, 333, 335, 338, 340, 343, 348, 350, 353, 354, 356, 357, 360, 364, 368, 377, 380, 381, 383, 384, 390, 396, 400, 403, 404, 405, 409, 410, 415, 417, 420, 426, 427, 436, 439, 440, 441, 443, 445, 447, 455, 456, 463, 467, 477, 479, 480, 482, 487, 488, 489, 490, 491, 494, 495, 496], "nul": [5, 7, 62, 189, 190, 191, 251, 284, 299, 308, 311, 329, 363, 368, 434, 489, 490], "termin": [5, 7, 9, 16, 31, 33, 34, 37, 45, 59, 60, 62, 63, 65, 67, 71, 78, 80, 85, 96, 97, 98, 104, 107, 108, 112, 113, 114, 119, 121, 126, 129, 131, 134, 142, 144, 145, 149, 151, 152, 153, 163, 168, 179, 188, 189, 191, 202, 203, 204, 207, 221, 222, 228, 233, 239, 243, 256, 259, 261, 269, 270, 273, 276, 280, 281, 284, 286, 298, 301, 303, 307, 312, 317, 323, 334, 337, 348, 350, 351, 354, 356, 357, 360, 361, 364, 368, 375, 376, 380, 384, 392, 399, 406, 410, 415, 420, 422, 426, 428, 430, 441, 442, 444, 445, 447, 450, 451, 455, 456, 458, 460, 468, 470, 474, 477, 481, 482, 483, 485, 489, 490, 492, 494, 495], "There": [5, 6, 7, 10, 23, 25, 26, 27, 33, 34, 35, 36, 41, 42, 45, 46, 49, 57, 62, 63, 66, 71, 72, 76, 80, 81, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 101, 104, 106, 107, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 131, 133, 137, 144, 145, 151, 152, 156, 164, 166, 167, 168, 171, 172, 173, 176, 180, 189, 192, 194, 196, 197, 199, 203, 207, 210, 217, 221, 222, 223, 225, 239, 240, 244, 249, 257, 261, 262, 264, 265, 266, 270, 272, 273, 274, 276, 281, 282, 283, 286, 289, 296, 298, 303, 304, 307, 308, 311, 314, 323, 329, 343, 346, 348, 353, 354, 356, 357, 359, 360, 362, 363, 364, 373, 374, 375, 380, 382, 384, 391, 399, 401, 403, 404, 405, 410, 414, 415, 422, 423, 425, 426, 429, 430, 436, 437, 439, 442, 443, 445, 446, 447, 450, 455, 456, 457, 458, 460, 461, 464, 465, 466, 469, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496], "wai": [5, 7, 9, 10, 13, 23, 25, 31, 33, 34, 35, 42, 44, 45, 51, 56, 57, 58, 62, 63, 65, 71, 72, 74, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 98, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 131, 132, 133, 134, 136, 137, 138, 141, 145, 150, 151, 152, 154, 157, 164, 167, 170, 171, 172, 173, 174, 176, 180, 182, 184, 185, 186, 188, 189, 190, 194, 196, 199, 201, 203, 207, 208, 209, 210, 214, 215, 219, 221, 222, 223, 225, 233, 237, 239, 242, 244, 249, 250, 257, 261, 262, 264, 265, 266, 270, 272, 273, 274, 276, 281, 282, 283, 284, 285, 286, 289, 290, 293, 295, 298, 299, 306, 307, 308, 310, 311, 312, 314, 322, 323, 333, 334, 339, 341, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 360, 363, 364, 368, 369, 372, 373, 375, 377, 380, 382, 384, 390, 393, 396, 399, 401, 402, 403, 404, 405, 409, 410, 413, 415, 417, 418, 422, 425, 428, 430, 434, 435, 436, 440, 441, 442, 443, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "convert": [5, 7, 10, 14, 15, 18, 25, 33, 35, 39, 47, 51, 54, 55, 57, 58, 63, 65, 67, 71, 80, 81, 84, 85, 87, 88, 90, 96, 99, 104, 105, 106, 107, 112, 113, 114, 116, 117, 121, 123, 128, 131, 132, 138, 151, 154, 157, 161, 167, 168, 171, 173, 175, 177, 180, 188, 189, 190, 191, 194, 196, 197, 199, 203, 204, 207, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 222, 223, 227, 229, 234, 237, 239, 240, 244, 252, 254, 258, 262, 269, 274, 276, 277, 281, 282, 283, 284, 285, 286, 289, 290, 291, 298, 300, 304, 306, 307, 308, 309, 313, 314, 316, 317, 322, 324, 333, 334, 341, 351, 353, 358, 359, 360, 361, 363, 365, 368, 373, 377, 381, 391, 393, 394, 401, 403, 409, 410, 413, 415, 420, 422, 426, 428, 430, 434, 440, 442, 443, 445, 450, 451, 458, 459, 461, 464, 466, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "y": [5, 7, 34, 35, 48, 57, 71, 84, 85, 89, 90, 92, 96, 101, 104, 105, 106, 107, 108, 113, 114, 119, 120, 121, 131, 133, 156, 173, 175, 180, 189, 190, 192, 194, 196, 199, 203, 207, 224, 239, 240, 261, 276, 282, 283, 284, 290, 296, 298, 303, 306, 328, 348, 349, 356, 357, 359, 360, 361, 368, 370, 381, 384, 391, 399, 401, 414, 417, 434, 435, 436, 442, 443, 445, 446, 450, 451, 455, 456, 457, 458, 461, 464, 466, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 494, 495, 496], "fill": [5, 7, 22, 33, 34, 38, 42, 45, 47, 54, 59, 62, 63, 67, 87, 88, 92, 97, 104, 107, 112, 114, 117, 120, 128, 131, 133, 150, 164, 188, 189, 190, 196, 199, 207, 210, 215, 219, 236, 239, 259, 261, 265, 269, 273, 276, 284, 308, 351, 353, 356, 357, 360, 361, 363, 364, 377, 378, 381, 384, 443, 445, 447, 467, 471, 477, 479, 480, 481, 482, 483, 488, 489, 490, 492, 493], "py_buff": [5, 7, 43, 56, 62, 483, 488, 490], "lock": [5, 31, 32, 62, 67, 85, 88, 99, 108, 112, 114, 117, 126, 136, 155, 177, 179, 180, 182, 189, 197, 226, 229, 255, 264, 273, 282, 284, 285, 286, 297, 298, 308, 320, 331, 333, 337, 339, 345, 348, 354, 356, 358, 368, 377, 384, 401, 417, 443, 467, 477, 479, 481, 482, 483, 484, 485, 488, 489, 492, 494, 495, 496, 498], "subsequ": [5, 23, 33, 45, 59, 63, 71, 97, 100, 105, 116, 126, 131, 146, 172, 190, 203, 204, 216, 220, 222, 225, 237, 240, 257, 265, 270, 273, 276, 283, 284, 286, 293, 298, 306, 307, 308, 309, 331, 334, 347, 353, 357, 359, 360, 361, 368, 371, 373, 375, 380, 384, 390, 399, 404, 410, 439, 441, 442, 445, 447, 449, 451, 456, 457, 480, 481, 482, 483, 484, 486, 488, 492, 495], "even": [5, 9, 18, 23, 26, 31, 33, 34, 35, 42, 56, 57, 58, 61, 62, 63, 71, 72, 75, 80, 85, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 105, 106, 107, 108, 112, 114, 116, 117, 118, 119, 121, 122, 123, 127, 131, 133, 134, 137, 138, 144, 151, 152, 159, 164, 167, 171, 174, 176, 179, 180, 181, 182, 189, 190, 194, 196, 199, 201, 206, 207, 208, 210, 212, 213, 219, 220, 221, 222, 225, 227, 228, 229, 232, 235, 239, 240, 249, 250, 253, 257, 261, 264, 265, 266, 270, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 290, 298, 307, 308, 309, 312, 314, 322, 323, 329, 333, 334, 346, 347, 348, 349, 351, 353, 356, 357, 359, 360, 361, 363, 368, 369, 373, 377, 379, 380, 381, 384, 391, 397, 399, 401, 402, 403, 404, 405, 410, 414, 415, 416, 417, 418, 420, 422, 426, 430, 432, 434, 437, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496], "insid": [5, 7, 10, 11, 33, 42, 62, 67, 71, 80, 86, 88, 90, 93, 97, 98, 99, 104, 107, 112, 116, 117, 124, 125, 133, 147, 157, 182, 188, 190, 199, 207, 210, 213, 219, 224, 239, 241, 254, 266, 267, 272, 273, 277, 296, 298, 299, 311, 312, 314, 317, 331, 334, 347, 348, 353, 357, 361, 368, 373, 384, 390, 391, 399, 401, 403, 404, 405, 428, 435, 437, 438, 442, 443, 445, 455, 456, 457, 458, 461, 464, 468, 476, 478, 479, 480, 481, 482, 483, 485, 488, 489, 491, 493, 494, 495], "py_begin_allow_thread": [5, 33, 56, 85], "block": [5, 7, 23, 33, 35, 42, 45, 54, 62, 67, 78, 85, 87, 89, 90, 99, 104, 105, 116, 120, 123, 125, 126, 128, 133, 138, 142, 145, 146, 147, 148, 149, 150, 151, 152, 157, 159, 162, 182, 189, 190, 191, 198, 199, 201, 203, 204, 207, 213, 221, 222, 226, 227, 229, 237, 239, 240, 246, 248, 249, 251, 256, 257, 261, 262, 264, 270, 272, 273, 276, 284, 288, 297, 298, 299, 303, 308, 310, 311, 320, 328, 331, 337, 340, 342, 343, 344, 345, 347, 348, 351, 353, 356, 358, 364, 367, 368, 373, 374, 377, 380, 384, 401, 403, 404, 410, 416, 418, 420, 421, 426, 431, 443, 444, 445, 446, 447, 451, 456, 458, 461, 464, 466, 470, 478, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "without": [5, 7, 8, 9, 10, 12, 22, 23, 25, 33, 34, 35, 38, 42, 45, 49, 53, 54, 56, 57, 58, 60, 62, 65, 67, 71, 76, 78, 80, 81, 84, 85, 87, 88, 90, 91, 95, 97, 99, 101, 104, 105, 106, 107, 110, 112, 113, 114, 116, 117, 118, 121, 122, 125, 126, 127, 131, 133, 137, 138, 145, 146, 147, 148, 149, 151, 152, 153, 160, 162, 164, 168, 171, 173, 179, 180, 182, 183, 184, 186, 188, 189, 190, 194, 196, 197, 199, 201, 203, 205, 207, 208, 210, 211, 216, 219, 222, 223, 225, 227, 228, 232, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 253, 254, 257, 258, 262, 264, 265, 267, 268, 270, 272, 273, 274, 276, 280, 281, 282, 285, 286, 290, 293, 297, 298, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 320, 323, 324, 329, 331, 333, 334, 337, 338, 339, 340, 343, 345, 347, 349, 353, 356, 357, 360, 361, 363, 364, 365, 368, 369, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 397, 399, 401, 403, 404, 405, 409, 410, 414, 415, 416, 417, 418, 422, 424, 425, 426, 428, 431, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 455, 456, 457, 458, 461, 464, 465, 466, 467, 470, 471, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496], "risk": [5, 42, 43, 85, 90, 97, 99, 107, 138, 227, 283, 286, 298, 307, 314, 341, 377, 399, 428, 436, 441, 483, 489, 494, 495], "mutabl": [5, 27, 28, 35, 62, 67, 90, 97, 99, 107, 112, 173, 174, 184, 189, 200, 217, 225, 229, 239, 240, 270, 298, 299, 306, 308, 312, 314, 330, 345, 417, 428, 439, 442, 445, 451, 455, 456, 457, 464, 477, 480, 482, 483, 484, 485, 487, 488, 493, 496], "data": [5, 7, 9, 10, 21, 24, 32, 33, 35, 42, 48, 49, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 67, 73, 75, 77, 81, 84, 85, 86, 87, 89, 91, 92, 98, 99, 100, 101, 104, 105, 110, 112, 114, 116, 118, 121, 125, 126, 128, 129, 131, 132, 133, 134, 136, 138, 142, 145, 146, 149, 152, 155, 157, 159, 160, 162, 163, 164, 170, 171, 173, 177, 179, 180, 181, 182, 184, 188, 190, 191, 192, 196, 197, 199, 203, 204, 209, 210, 211, 212, 215, 217, 220, 221, 222, 226, 227, 229, 237, 239, 240, 244, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 272, 273, 276, 277, 281, 282, 284, 286, 287, 288, 289, 291, 293, 296, 298, 299, 301, 303, 305, 307, 308, 310, 311, 315, 317, 319, 321, 323, 324, 329, 330, 331, 333, 334, 341, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 370, 373, 374, 375, 376, 377, 378, 381, 383, 387, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 408, 409, 410, 412, 416, 417, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 445, 447, 448, 454, 455, 456, 458, 459, 460, 464, 465, 469, 473, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 496, 498], "being": [5, 7, 10, 16, 28, 33, 35, 38, 44, 59, 60, 62, 63, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 86, 87, 88, 90, 92, 96, 97, 99, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 131, 132, 133, 134, 138, 145, 148, 151, 162, 163, 164, 171, 173, 174, 176, 179, 180, 181, 182, 183, 188, 189, 190, 194, 196, 197, 204, 207, 209, 210, 216, 219, 222, 225, 227, 230, 232, 237, 239, 240, 241, 244, 246, 248, 250, 261, 262, 264, 265, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 291, 293, 298, 307, 308, 310, 312, 314, 317, 318, 322, 323, 324, 327, 329, 333, 334, 335, 339, 343, 344, 345, 347, 348, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 372, 375, 377, 379, 380, 381, 382, 384, 391, 396, 401, 403, 404, 405, 408, 409, 410, 414, 415, 417, 422, 425, 428, 429, 430, 432, 436, 437, 441, 442, 443, 445, 447, 449, 450, 451, 454, 455, 456, 458, 459, 461, 464, 465, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "resiz": [5, 8, 9, 28, 42, 53, 55, 59, 63, 90, 189, 190, 273, 293, 348, 360, 384, 390, 391, 399, 403, 488, 492, 494], "destroi": [5, 11, 33, 51, 59, 62, 66, 90, 99, 107, 112, 117, 261, 273, 293, 298, 299, 307, 361, 375, 380, 384, 403, 415, 417, 420, 443, 447, 477, 479, 480, 482, 489, 493, 494, 496], "As": [5, 6, 7, 10, 14, 23, 24, 27, 33, 35, 49, 53, 58, 59, 63, 67, 72, 74, 78, 80, 81, 84, 85, 87, 88, 90, 92, 96, 97, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 131, 133, 138, 148, 152, 161, 162, 168, 171, 172, 173, 180, 182, 189, 194, 196, 199, 203, 207, 215, 217, 219, 222, 239, 241, 244, 249, 254, 256, 258, 261, 264, 265, 273, 274, 277, 281, 282, 283, 284, 286, 298, 299, 307, 308, 311, 312, 314, 318, 323, 327, 334, 339, 341, 345, 354, 356, 357, 360, 361, 362, 363, 364, 368, 375, 377, 379, 380, 384, 391, 399, 401, 403, 404, 405, 409, 410, 422, 423, 425, 428, 429, 436, 437, 441, 443, 445, 447, 450, 455, 456, 457, 458, 459, 461, 463, 465, 470, 471, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "result": [5, 7, 8, 9, 10, 13, 15, 20, 23, 26, 31, 33, 34, 35, 36, 39, 42, 45, 47, 49, 52, 53, 58, 59, 60, 62, 63, 65, 67, 71, 78, 80, 83, 84, 85, 87, 88, 96, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 119, 121, 125, 128, 131, 133, 135, 137, 138, 139, 141, 145, 147, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 164, 165, 167, 171, 172, 173, 176, 179, 180, 181, 182, 183, 186, 189, 190, 191, 194, 196, 197, 199, 203, 204, 207, 210, 211, 213, 215, 217, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 233, 237, 239, 240, 241, 244, 245, 248, 249, 251, 256, 257, 258, 259, 261, 262, 264, 265, 269, 270, 271, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 297, 298, 299, 303, 306, 307, 308, 309, 310, 311, 312, 314, 318, 320, 322, 323, 324, 326, 332, 333, 334, 336, 337, 339, 341, 343, 346, 347, 348, 351, 352, 353, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 370, 373, 374, 375, 377, 379, 380, 381, 382, 384, 391, 393, 395, 396, 397, 399, 400, 401, 403, 404, 405, 410, 412, 413, 415, 417, 418, 420, 422, 424, 425, 426, 428, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 450, 451, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pybuffer_releas": [5, 7, 48, 56, 62, 483, 488], "finish": [5, 34, 42, 60, 72, 75, 84, 91, 96, 97, 99, 110, 114, 133, 136, 137, 138, 140, 149, 150, 151, 157, 162, 168, 179, 182, 227, 241, 246, 256, 273, 282, 285, 298, 299, 329, 331, 348, 354, 356, 357, 360, 364, 373, 377, 386, 403, 418, 426, 427, 428, 431, 434, 437, 439, 442, 443, 458, 461, 467, 470, 482, 483, 488, 489, 490, 492, 493, 496], "earli": [5, 34, 35, 87, 92, 182, 241, 255, 270, 284, 307, 348, 357, 359, 360, 380, 384, 397, 426, 437, 441, 445, 447, 477, 481, 483, 489], "abort": [5, 35, 42, 58, 71, 80, 85, 114, 138, 142, 145, 148, 150, 226, 227, 237, 262, 308, 312, 348, 356, 357, 368, 373, 374, 380, 388, 403, 447, 480, 494], "et": [5, 91, 114, 194, 353, 357, 391, 428, 479, 482, 484, 487], "alloc": [5, 7, 10, 16, 23, 28, 31, 32, 34, 35, 45, 49, 50, 55, 57, 58, 62, 63, 65, 67, 84, 85, 86, 88, 90, 97, 99, 105, 112, 117, 126, 142, 145, 182, 189, 198, 201, 228, 241, 269, 273, 274, 298, 299, 308, 314, 329, 331, 337, 353, 368, 380, 391, 420, 431, 470, 471, 477, 478, 479, 482, 484, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498], "pymem_fre": [5, 18, 34, 42, 56, 58, 63, 480, 482], "str": [5, 10, 18, 22, 24, 25, 33, 34, 35, 39, 40, 49, 58, 62, 63, 65, 67, 87, 88, 90, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 123, 125, 131, 133, 138, 148, 155, 159, 162, 168, 171, 173, 176, 180, 182, 188, 190, 194, 195, 196, 197, 199, 201, 203, 204, 209, 210, 211, 215, 216, 217, 219, 222, 223, 225, 227, 237, 239, 240, 248, 249, 250, 251, 254, 256, 258, 261, 266, 267, 269, 270, 273, 274, 276, 277, 281, 282, 283, 285, 298, 299, 303, 306, 307, 308, 311, 314, 321, 333, 334, 346, 351, 354, 356, 357, 361, 363, 364, 368, 373, 375, 377, 378, 379, 382, 393, 394, 397, 400, 401, 403, 404, 409, 413, 415, 417, 420, 425, 428, 429, 434, 436, 437, 440, 442, 443, 445, 450, 455, 456, 457, 458, 459, 461, 464, 465, 466, 467, 470, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "read": [5, 7, 22, 23, 24, 25, 31, 33, 34, 41, 42, 43, 48, 57, 62, 63, 65, 67, 71, 77, 78, 80, 81, 84, 85, 87, 88, 90, 91, 92, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 113, 114, 116, 117, 120, 121, 123, 125, 127, 130, 131, 132, 133, 134, 137, 139, 142, 148, 149, 152, 153, 156, 159, 161, 162, 164, 168, 170, 171, 172, 173, 174, 176, 179, 180, 183, 189, 190, 194, 196, 197, 201, 202, 203, 204, 207, 208, 214, 217, 218, 221, 222, 225, 226, 227, 229, 230, 231, 232, 233, 237, 239, 240, 241, 243, 244, 248, 249, 250, 254, 256, 257, 258, 259, 261, 262, 265, 266, 268, 269, 270, 272, 273, 277, 280, 282, 283, 286, 289, 291, 292, 293, 295, 297, 298, 299, 301, 303, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 323, 324, 327, 328, 329, 334, 335, 340, 343, 344, 345, 346, 347, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 366, 368, 370, 374, 375, 380, 381, 384, 391, 393, 394, 395, 396, 397, 399, 400, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 417, 422, 425, 428, 429, 430, 431, 432, 434, 436, 437, 439, 440, 441, 442, 445, 447, 450, 452, 453, 454, 455, 456, 458, 460, 463, 464, 465, 466, 467, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "char": [5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 22, 23, 24, 25, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 52, 53, 57, 58, 59, 60, 62, 63, 65, 84, 85, 87, 88, 91, 108, 110, 132, 159, 171, 189, 190, 216, 254, 261, 277, 281, 297, 360, 361, 363, 382, 384, 401, 424, 428, 443, 455, 480, 482, 483, 484, 487, 491, 494, 495], "share": [5, 7, 33, 35, 41, 42, 45, 56, 57, 62, 63, 67, 71, 76, 78, 80, 83, 85, 88, 89, 91, 96, 99, 106, 110, 112, 114, 117, 121, 122, 126, 129, 131, 133, 145, 150, 177, 184, 194, 196, 199, 226, 229, 240, 241, 244, 249, 251, 264, 269, 274, 276, 281, 282, 289, 293, 304, 307, 308, 309, 311, 314, 326, 333, 337, 341, 345, 353, 354, 356, 358, 360, 361, 368, 369, 373, 375, 380, 381, 384, 390, 403, 404, 422, 439, 441, 442, 443, 445, 447, 450, 455, 456, 459, 465, 467, 470, 471, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 498], "lifetim": [5, 35, 42, 48, 67, 85, 97, 99, 171, 179, 182, 239, 308, 420, 445, 455, 478, 490, 493, 494], "won": [5, 33, 34, 41, 62, 74, 85, 87, 88, 90, 97, 104, 106, 107, 111, 113, 114, 116, 119, 125, 127, 133, 145, 151, 164, 179, 180, 196, 197, 199, 207, 220, 239, 241, 244, 245, 257, 282, 284, 301, 307, 308, 312, 314, 315, 344, 353, 363, 368, 384, 404, 431, 436, 439, 459, 462, 470, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494], "yourself": [5, 33, 35, 43, 67, 84, 90, 97, 99, 104, 106, 116, 117, 119, 121, 133, 168, 190, 192, 207, 215, 225, 265, 277, 281, 282, 283, 284, 307, 312, 343, 351, 357, 368, 403, 404, 405, 425, 459, 461, 475, 476, 482, 485, 489], "ensur": [5, 18, 33, 34, 42, 45, 49, 56, 57, 58, 62, 63, 65, 67, 71, 73, 74, 85, 88, 91, 96, 98, 100, 104, 111, 112, 113, 114, 116, 121, 124, 131, 134, 138, 144, 145, 148, 149, 156, 171, 179, 182, 189, 194, 196, 199, 207, 210, 219, 224, 225, 241, 250, 264, 270, 277, 282, 284, 285, 293, 298, 299, 307, 308, 314, 339, 353, 356, 357, 359, 360, 364, 368, 376, 377, 379, 384, 387, 391, 397, 401, 403, 404, 405, 410, 413, 414, 415, 417, 420, 422, 428, 434, 436, 437, 443, 445, 458, 465, 470, 471, 476, 477, 480, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496], "safe": [5, 22, 23, 24, 33, 34, 35, 36, 42, 45, 55, 58, 62, 63, 67, 71, 72, 84, 85, 87, 88, 97, 99, 100, 108, 114, 133, 137, 138, 141, 142, 144, 145, 146, 149, 150, 151, 156, 163, 164, 173, 182, 188, 189, 190, 194, 207, 228, 239, 249, 251, 252, 261, 265, 273, 281, 282, 283, 285, 286, 298, 308, 314, 327, 331, 333, 339, 340, 341, 343, 345, 346, 347, 349, 353, 356, 357, 361, 364, 377, 380, 401, 404, 405, 409, 413, 415, 417, 424, 430, 455, 476, 477, 478, 480, 483, 484, 487, 488, 489, 490, 494, 495], "pybufferproc": [5, 60, 62, 87], "bf_releasebuff": [5, 60, 62, 488], "mustdisallow": [5, 34, 62, 90, 106, 131, 133, 180, 194, 239, 287, 308, 353, 356, 360, 438, 442, 476, 483, 487, 491, 494, 495], "common": [5, 7, 23, 32, 33, 34, 35, 50, 62, 67, 71, 76, 78, 83, 85, 88, 90, 92, 93, 97, 99, 101, 104, 105, 106, 107, 108, 112, 113, 114, 117, 118, 119, 120, 125, 126, 131, 137, 140, 147, 151, 160, 171, 173, 180, 182, 188, 189, 194, 195, 203, 207, 209, 214, 215, 217, 219, 221, 222, 225, 230, 233, 237, 239, 249, 250, 251, 257, 259, 261, 266, 269, 273, 274, 276, 277, 280, 282, 286, 287, 290, 298, 299, 307, 308, 310, 314, 318, 333, 346, 347, 348, 351, 354, 356, 357, 359, 363, 364, 366, 369, 376, 377, 378, 379, 380, 381, 382, 384, 388, 390, 399, 401, 403, 404, 405, 406, 410, 414, 423, 434, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 456, 457, 458, 459, 464, 465, 466, 468, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498], "bytearrai": [5, 7, 8, 33, 34, 63, 67, 90, 97, 99, 132, 145, 158, 159, 195, 204, 227, 229, 239, 249, 251, 269, 273, 276, 277, 289, 293, 299, 314, 319, 333, 353, 357, 363, 401, 409, 415, 434, 439, 442, 443, 445, 465, 470, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496], "memoryview": [5, 7, 16, 67, 99, 123, 158, 239, 269, 299, 314, 347, 353, 368, 401, 442, 465, 485, 489, 491, 492, 495, 498], "besid": [5, 88, 105, 106, 173, 196, 239, 273, 348, 391, 417, 450, 451, 476, 487], "requir": [5, 7, 12, 18, 23, 28, 33, 35, 42, 45, 57, 58, 62, 63, 67, 71, 72, 74, 75, 76, 80, 81, 83, 84, 85, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 112, 113, 114, 116, 119, 120, 121, 122, 123, 126, 127, 129, 132, 133, 138, 144, 150, 151, 162, 163, 170, 171, 173, 174, 180, 182, 183, 188, 190, 194, 196, 197, 198, 199, 202, 204, 207, 208, 209, 210, 214, 215, 216, 217, 221, 222, 224, 226, 227, 235, 239, 240, 241, 242, 246, 248, 249, 250, 251, 254, 257, 259, 261, 262, 264, 265, 267, 268, 270, 271, 272, 273, 276, 277, 280, 281, 282, 283, 284, 285, 286, 290, 295, 296, 298, 299, 303, 307, 308, 309, 310, 311, 314, 315, 316, 320, 322, 323, 325, 329, 331, 334, 337, 343, 345, 347, 348, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 371, 373, 375, 376, 377, 380, 381, 384, 390, 391, 393, 396, 398, 399, 400, 401, 402, 403, 404, 409, 410, 412, 414, 417, 420, 422, 424, 425, 428, 429, 430, 431, 432, 434, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 450, 451, 455, 456, 457, 459, 461, 462, 465, 467, 468, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "check": [5, 7, 9, 10, 12, 16, 17, 20, 21, 23, 25, 31, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 72, 77, 84, 85, 87, 88, 90, 92, 93, 96, 100, 101, 104, 106, 107, 110, 112, 113, 114, 116, 117, 119, 121, 125, 127, 131, 133, 137, 138, 140, 141, 151, 156, 157, 162, 164, 168, 173, 174, 176, 180, 182, 189, 190, 191, 194, 196, 199, 200, 201, 204, 211, 214, 219, 222, 225, 227, 228, 229, 235, 237, 239, 240, 243, 246, 247, 254, 256, 257, 259, 261, 262, 269, 270, 271, 274, 277, 280, 282, 283, 284, 285, 287, 290, 295, 298, 301, 302, 303, 304, 308, 309, 310, 311, 317, 318, 320, 329, 335, 337, 342, 343, 346, 347, 348, 349, 351, 353, 356, 357, 358, 359, 360, 361, 363, 364, 366, 368, 372, 373, 377, 378, 380, 390, 391, 393, 397, 399, 400, 401, 403, 404, 410, 411, 414, 415, 417, 424, 428, 431, 434, 437, 439, 442, 445, 446, 447, 451, 454, 455, 456, 457, 461, 462, 463, 465, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498], "verifi": [5, 7, 67, 71, 75, 87, 97, 105, 107, 110, 174, 200, 207, 225, 249, 257, 265, 283, 284, 286, 308, 351, 356, 359, 377, 403, 415, 422, 476, 483, 484, 487, 488, 489, 490, 491, 495], "immut": [5, 9, 28, 35, 59, 62, 63, 67, 99, 105, 112, 133, 174, 188, 189, 194, 196, 199, 222, 235, 239, 240, 270, 306, 308, 311, 333, 413, 442, 445, 455, 457, 464, 477, 480, 481, 482, 483, 484, 485, 487, 495, 496], "honor": [5, 92, 126, 266, 312, 368, 373, 435, 474, 483, 484, 493], "writabl": [5, 7, 43, 48, 57, 67, 87, 96, 108, 117, 131, 145, 152, 162, 164, 173, 227, 262, 273, 293, 298, 308, 310, 319, 347, 353, 354, 357, 360, 363, 375, 384, 417, 437, 447, 451, 455, 481, 483, 488, 490, 492, 493, 494], "anoth": [5, 7, 10, 23, 31, 33, 35, 42, 56, 57, 62, 63, 67, 71, 74, 75, 80, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 99, 101, 104, 105, 106, 107, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 131, 132, 136, 137, 138, 144, 145, 147, 150, 151, 152, 157, 164, 168, 171, 173, 176, 179, 180, 182, 186, 189, 190, 194, 196, 199, 207, 208, 210, 217, 227, 235, 237, 239, 240, 244, 246, 249, 250, 257, 259, 261, 264, 265, 270, 273, 276, 277, 282, 283, 285, 286, 293, 298, 302, 303, 306, 307, 308, 311, 312, 314, 316, 323, 324, 326, 329, 331, 334, 343, 347, 348, 354, 356, 357, 359, 360, 361, 363, 364, 368, 369, 370, 380, 382, 384, 390, 391, 393, 394, 395, 399, 401, 403, 404, 405, 408, 409, 410, 414, 417, 420, 422, 423, 424, 425, 426, 428, 429, 437, 440, 442, 443, 445, 447, 451, 455, 456, 457, 458, 459, 461, 462, 465, 467, 468, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496], "thread": [5, 17, 23, 31, 32, 34, 35, 42, 52, 58, 62, 67, 85, 88, 91, 93, 97, 99, 108, 112, 113, 117, 129, 136, 137, 141, 142, 144, 145, 146, 147, 150, 152, 162, 163, 173, 177, 179, 182, 183, 189, 200, 203, 228, 240, 246, 249, 259, 261, 262, 264, 269, 272, 281, 283, 284, 285, 286, 298, 305, 308, 331, 333, 336, 337, 339, 340, 347, 354, 356, 357, 359, 360, 364, 368, 381, 383, 401, 410, 414, 415, 417, 443, 460, 470, 471, 477, 479, 480, 481, 482, 483, 484, 485, 493, 496, 498], "mutat": [5, 22, 62, 97, 112, 173, 180, 194, 210, 239, 240, 241, 265, 273, 298, 345, 360, 401, 405, 415, 457, 479, 481, 491], "variant": [5, 22, 31, 41, 47, 56, 62, 85, 92, 96, 105, 107, 114, 116, 119, 131, 138, 142, 146, 171, 173, 180, 190, 196, 197, 199, 217, 239, 240, 259, 262, 276, 297, 298, 306, 308, 309, 311, 318, 347, 353, 356, 357, 373, 403, 404, 405, 406, 410, 413, 431, 443, 447, 461, 465, 482, 483, 484, 485, 488, 491, 494, 495, 496], "etc": [5, 34, 63, 71, 72, 80, 83, 91, 93, 99, 106, 107, 113, 114, 117, 119, 120, 121, 131, 135, 142, 145, 154, 159, 164, 168, 181, 188, 198, 220, 225, 239, 254, 257, 258, 261, 267, 270, 273, 274, 281, 282, 284, 287, 291, 296, 298, 299, 307, 308, 311, 317, 318, 322, 323, 325, 326, 334, 344, 349, 353, 356, 357, 359, 373, 380, 381, 384, 390, 399, 401, 403, 409, 422, 425, 437, 443, 446, 451, 452, 455, 456, 457, 462, 464, 465, 466, 468, 471, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496], "py_ssize_t_clean": [5, 35, 58, 84, 85, 88, 482, 487, 495], "befor": [5, 7, 10, 13, 17, 20, 23, 24, 28, 31, 32, 34, 35, 38, 42, 45, 51, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 71, 72, 74, 76, 80, 84, 85, 87, 88, 89, 90, 91, 97, 99, 100, 101, 104, 105, 106, 107, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 126, 128, 131, 132, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 160, 162, 163, 164, 166, 168, 170, 171, 172, 173, 179, 180, 182, 183, 188, 189, 190, 196, 197, 199, 203, 204, 207, 209, 210, 215, 217, 219, 225, 227, 232, 237, 239, 240, 241, 245, 246, 248, 256, 257, 259, 261, 262, 264, 265, 270, 273, 274, 276, 281, 282, 283, 284, 285, 286, 291, 293, 298, 301, 303, 304, 307, 308, 310, 311, 312, 314, 315, 320, 322, 323, 324, 328, 329, 333, 334, 335, 339, 340, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 370, 373, 374, 377, 379, 380, 381, 390, 391, 397, 399, 403, 404, 405, 409, 410, 414, 415, 416, 417, 420, 422, 425, 426, 427, 428, 429, 430, 431, 435, 437, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 455, 456, 457, 458, 461, 463, 464, 465, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "On": [5, 7, 8, 9, 11, 12, 13, 22, 23, 24, 25, 33, 34, 35, 39, 40, 41, 42, 45, 48, 49, 53, 56, 58, 59, 60, 61, 62, 63, 65, 67, 71, 80, 85, 89, 90, 93, 95, 97, 98, 99, 105, 106, 107, 108, 110, 114, 116, 117, 119, 121, 122, 126, 138, 143, 144, 145, 148, 149, 171, 179, 180, 187, 188, 189, 190, 194, 196, 199, 204, 210, 215, 217, 227, 228, 229, 237, 239, 243, 250, 258, 261, 264, 272, 273, 281, 284, 290, 293, 297, 298, 303, 308, 309, 310, 311, 314, 318, 320, 321, 324, 325, 333, 335, 338, 341, 343, 345, 347, 348, 349, 353, 354, 357, 358, 364, 368, 369, 375, 377, 381, 390, 391, 401, 404, 410, 413, 414, 420, 422, 436, 437, 440, 449, 453, 454, 455, 459, 463, 464, 465, 468, 470, 471, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "older": [5, 33, 56, 62, 67, 71, 85, 87, 90, 92, 104, 108, 114, 130, 131, 143, 177, 190, 199, 203, 216, 241, 244, 249, 261, 266, 267, 283, 303, 308, 310, 312, 314, 329, 333, 343, 356, 357, 368, 369, 377, 384, 392, 401, 410, 430, 437, 445, 447, 459, 474, 477, 480, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496], "int": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 84, 85, 87, 88, 91, 96, 99, 100, 101, 105, 106, 108, 110, 111, 112, 113, 114, 116, 123, 124, 125, 131, 132, 133, 134, 138, 139, 151, 153, 168, 173, 179, 180, 183, 189, 194, 196, 197, 199, 203, 207, 225, 227, 235, 237, 239, 240, 250, 254, 262, 269, 270, 273, 274, 277, 282, 290, 296, 299, 304, 306, 307, 308, 310, 314, 319, 321, 331, 333, 334, 341, 343, 353, 356, 359, 361, 363, 367, 368, 373, 381, 382, 393, 394, 397, 399, 400, 401, 403, 404, 413, 417, 420, 422, 425, 426, 427, 428, 434, 436, 442, 443, 445, 455, 456, 458, 461, 464, 465, 466, 467, 470, 471, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496], "exist": [5, 9, 22, 24, 25, 31, 33, 34, 35, 39, 42, 48, 54, 56, 57, 58, 61, 62, 63, 65, 66, 67, 71, 72, 76, 78, 80, 81, 84, 85, 86, 88, 90, 91, 92, 96, 97, 99, 105, 106, 107, 111, 113, 114, 116, 119, 120, 121, 122, 123, 124, 126, 128, 131, 132, 133, 134, 138, 140, 142, 148, 152, 157, 160, 162, 164, 168, 171, 173, 174, 176, 180, 182, 184, 188, 189, 194, 196, 197, 200, 202, 204, 207, 208, 210, 214, 219, 220, 222, 224, 225, 226, 227, 229, 230, 232, 239, 240, 244, 246, 248, 249, 250, 257, 258, 261, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 289, 291, 293, 296, 298, 299, 302, 303, 307, 308, 309, 310, 311, 312, 314, 317, 323, 328, 333, 334, 335, 339, 345, 347, 348, 349, 353, 356, 357, 358, 359, 360, 361, 363, 364, 368, 369, 370, 373, 375, 377, 381, 384, 387, 390, 391, 394, 399, 401, 402, 403, 404, 409, 410, 412, 414, 415, 417, 418, 420, 422, 425, 428, 434, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 450, 451, 455, 457, 459, 461, 464, 468, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "store": [5, 7, 10, 11, 12, 18, 25, 28, 33, 34, 41, 42, 49, 55, 57, 60, 62, 63, 67, 71, 79, 85, 87, 88, 90, 91, 96, 99, 100, 101, 105, 107, 112, 113, 114, 116, 118, 119, 120, 121, 124, 128, 131, 132, 133, 145, 146, 154, 167, 171, 173, 180, 183, 186, 188, 189, 190, 194, 196, 197, 199, 204, 207, 210, 211, 214, 215, 217, 219, 222, 237, 245, 250, 257, 259, 261, 262, 265, 268, 270, 273, 276, 282, 285, 286, 287, 291, 293, 298, 299, 303, 308, 313, 314, 315, 325, 329, 341, 343, 344, 345, 350, 351, 352, 353, 354, 356, 357, 358, 360, 363, 365, 368, 370, 373, 375, 377, 380, 390, 391, 395, 396, 397, 399, 400, 401, 403, 404, 405, 410, 417, 420, 422, 425, 428, 434, 436, 437, 439, 440, 442, 443, 445, 446, 447, 450, 451, 455, 456, 457, 458, 459, 461, 463, 465, 466, 467, 470, 473, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "point": [5, 7, 10, 16, 17, 18, 22, 23, 31, 33, 34, 35, 38, 39, 41, 42, 43, 45, 47, 54, 57, 59, 62, 63, 65, 67, 77, 78, 85, 89, 91, 93, 96, 97, 99, 104, 105, 107, 110, 112, 113, 114, 116, 117, 119, 121, 122, 125, 126, 127, 132, 134, 138, 145, 147, 149, 150, 151, 152, 154, 157, 160, 166, 167, 171, 173, 175, 176, 180, 182, 183, 189, 190, 194, 196, 202, 203, 206, 207, 210, 214, 216, 217, 219, 220, 223, 227, 235, 237, 239, 246, 249, 250, 253, 261, 262, 264, 265, 269, 276, 277, 281, 282, 283, 284, 286, 289, 290, 293, 295, 296, 298, 305, 307, 308, 309, 311, 312, 314, 317, 318, 320, 323, 333, 334, 337, 343, 346, 347, 348, 351, 353, 356, 357, 359, 360, 361, 362, 363, 368, 369, 370, 373, 375, 377, 380, 381, 384, 387, 391, 393, 396, 399, 401, 403, 404, 405, 410, 414, 418, 423, 424, 426, 427, 428, 429, 436, 438, 439, 440, 442, 443, 444, 445, 447, 456, 457, 458, 460, 461, 464, 466, 471, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "valueerror": [5, 9, 18, 23, 39, 41, 63, 71, 97, 105, 106, 111, 113, 114, 120, 125, 126, 131, 132, 133, 138, 146, 150, 156, 157, 160, 163, 164, 170, 171, 172, 173, 176, 179, 180, 186, 188, 189, 194, 196, 199, 207, 210, 211, 213, 217, 219, 222, 223, 224, 225, 227, 237, 239, 241, 246, 257, 262, 264, 265, 270, 273, 274, 276, 277, 282, 283, 289, 290, 293, 298, 299, 303, 307, 308, 309, 311, 317, 320, 329, 331, 333, 337, 340, 344, 345, 347, 348, 351, 353, 356, 357, 359, 360, 361, 364, 367, 368, 380, 381, 394, 402, 403, 404, 409, 410, 414, 423, 425, 437, 440, 442, 445, 456, 457, 458, 461, 465, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "utf": [5, 16, 22, 23, 30, 31, 33, 34, 40, 45, 49, 57, 58, 67, 99, 113, 114, 119, 129, 131, 133, 158, 164, 180, 188, 201, 203, 210, 211, 219, 220, 222, 223, 232, 237, 239, 249, 262, 265, 266, 267, 273, 277, 280, 281, 299, 301, 303, 312, 313, 314, 320, 322, 329, 345, 350, 353, 354, 357, 360, 368, 373, 393, 409, 410, 414, 422, 426, 428, 434, 436, 437, 443, 447, 450, 456, 461, 463, 470, 471, 473, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496], "convers": [5, 9, 10, 32, 33, 35, 62, 63, 64, 67, 71, 84, 92, 104, 105, 110, 117, 129, 131, 133, 145, 152, 156, 159, 171, 180, 188, 196, 199, 209, 231, 239, 269, 271, 273, 277, 281, 286, 291, 292, 304, 305, 307, 308, 314, 333, 353, 357, 361, 363, 364, 368, 373, 393, 400, 404, 409, 412, 441, 442, 448, 450, 465, 470, 476, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 498], "fail": [5, 7, 9, 11, 18, 23, 24, 31, 33, 35, 41, 42, 47, 55, 63, 67, 80, 84, 85, 88, 90, 96, 97, 98, 99, 100, 101, 106, 114, 116, 120, 124, 131, 133, 148, 150, 151, 152, 164, 166, 167, 179, 182, 189, 196, 201, 207, 223, 225, 227, 229, 239, 258, 259, 261, 263, 264, 265, 270, 272, 273, 276, 277, 281, 283, 285, 286, 287, 293, 298, 307, 308, 309, 310, 311, 312, 317, 318, 334, 337, 343, 345, 347, 348, 349, 351, 352, 353, 356, 357, 360, 361, 364, 368, 373, 377, 380, 384, 397, 401, 403, 404, 405, 410, 413, 420, 423, 428, 431, 434, 437, 440, 442, 443, 444, 446, 447, 451, 456, 458, 461, 465, 470, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495], "unicodeerror": [5, 23, 99, 171, 196, 216, 227, 308, 360, 465, 480, 485], "accept": [5, 15, 18, 23, 28, 31, 33, 56, 60, 63, 65, 66, 67, 71, 80, 81, 85, 87, 88, 90, 91, 97, 99, 101, 104, 107, 111, 114, 116, 117, 118, 119, 120, 124, 125, 128, 131, 133, 138, 141, 142, 143, 145, 149, 150, 151, 152, 154, 156, 159, 162, 163, 164, 167, 168, 171, 173, 176, 180, 182, 186, 189, 190, 191, 194, 196, 197, 199, 203, 204, 207, 215, 219, 220, 222, 223, 227, 229, 235, 237, 239, 240, 242, 248, 249, 253, 255, 256, 257, 259, 261, 262, 263, 265, 266, 267, 268, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 290, 293, 297, 298, 304, 306, 307, 308, 309, 310, 311, 314, 329, 332, 333, 334, 339, 343, 344, 345, 347, 348, 350, 351, 354, 356, 357, 360, 364, 365, 368, 373, 375, 377, 379, 381, 390, 391, 393, 395, 397, 400, 401, 403, 409, 410, 412, 414, 416, 418, 420, 422, 426, 428, 431, 434, 436, 437, 439, 441, 442, 443, 445, 447, 450, 455, 456, 458, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "filesystem": [5, 23, 33, 34, 58, 63, 65, 67, 71, 72, 78, 80, 81, 92, 98, 99, 119, 121, 138, 156, 180, 227, 230, 233, 265, 269, 281, 286, 298, 308, 309, 312, 317, 339, 347, 357, 368, 370, 373, 375, 377, 403, 404, 414, 415, 436, 437, 465, 470, 476, 478, 484, 491, 494], "path": [5, 23, 24, 31, 32, 33, 35, 58, 63, 67, 71, 72, 75, 76, 78, 80, 84, 85, 88, 92, 96, 97, 98, 99, 100, 105, 107, 108, 110, 112, 113, 114, 119, 122, 125, 130, 131, 138, 148, 151, 152, 155, 157, 161, 162, 163, 164, 176, 180, 182, 189, 197, 203, 207, 214, 224, 227, 229, 233, 234, 237, 239, 244, 245, 248, 256, 257, 258, 259, 261, 263, 264, 266, 267, 268, 269, 270, 273, 276, 280, 281, 282, 283, 284, 285, 286, 291, 294, 295, 296, 298, 301, 303, 307, 308, 312, 317, 323, 326, 327, 328, 330, 335, 339, 342, 345, 346, 347, 349, 351, 353, 356, 357, 358, 364, 368, 371, 373, 375, 377, 381, 384, 399, 401, 403, 404, 409, 410, 414, 418, 420, 422, 428, 431, 434, 435, 436, 438, 440, 443, 448, 451, 453, 455, 460, 463, 467, 468, 470, 471, 473, 474, 477, 479, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 494, 496], "prefer": [5, 10, 22, 23, 31, 34, 35, 43, 49, 56, 62, 67, 80, 81, 90, 97, 106, 107, 114, 120, 121, 122, 125, 131, 138, 141, 142, 150, 151, 152, 177, 180, 188, 190, 196, 199, 216, 219, 227, 239, 243, 265, 273, 276, 281, 282, 286, 290, 298, 306, 307, 308, 314, 328, 341, 357, 359, 364, 368, 370, 377, 379, 380, 381, 383, 391, 399, 400, 401, 410, 413, 418, 420, 431, 436, 441, 447, 457, 466, 467, 471, 474, 476, 482, 484, 487, 488, 489, 490, 492, 493, 494, 495], "o": [5, 6, 8, 9, 10, 17, 20, 22, 23, 24, 27, 28, 33, 34, 36, 38, 40, 42, 44, 47, 48, 49, 51, 53, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 80, 81, 83, 85, 89, 91, 97, 98, 99, 100, 101, 104, 105, 107, 108, 110, 112, 113, 114, 116, 119, 121, 123, 126, 129, 131, 132, 136, 137, 138, 143, 144, 145, 149, 150, 151, 152, 153, 155, 156, 160, 164, 173, 176, 177, 179, 180, 181, 182, 183, 189, 190, 196, 197, 200, 201, 202, 203, 204, 207, 214, 215, 222, 224, 226, 228, 229, 230, 232, 233, 234, 239, 240, 242, 243, 244, 245, 248, 249, 250, 257, 259, 261, 267, 269, 272, 275, 277, 280, 281, 282, 284, 286, 287, 293, 298, 301, 306, 307, 310, 314, 315, 316, 317, 318, 321, 323, 324, 326, 329, 333, 334, 335, 337, 347, 348, 349, 351, 353, 356, 357, 358, 360, 361, 368, 369, 370, 373, 374, 375, 376, 380, 381, 382, 384, 388, 395, 397, 401, 403, 404, 409, 410, 414, 415, 417, 418, 419, 422, 436, 437, 440, 441, 450, 451, 453, 454, 455, 458, 461, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 498], "pyunicode_fsconvert": [5, 56, 63, 493], "chang": [5, 9, 10, 11, 13, 15, 17, 22, 23, 24, 25, 26, 28, 31, 33, 34, 35, 39, 40, 42, 45, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 74, 75, 78, 80, 81, 84, 85, 87, 88, 89, 90, 91, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 114, 115, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 164, 168, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 196, 197, 199, 201, 203, 204, 207, 208, 210, 211, 215, 216, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 239, 240, 241, 245, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 297, 298, 299, 301, 303, 306, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 387, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 422, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 461, 464, 465, 466, 468, 470, 471, 474, 476, 498], "5": [5, 9, 14, 19, 23, 33, 34, 35, 39, 42, 45, 47, 58, 62, 67, 71, 72, 80, 81, 85, 90, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 110, 114, 116, 117, 118, 119, 120, 121, 122, 124, 131, 132, 133, 138, 141, 143, 144, 148, 151, 152, 156, 159, 160, 162, 163, 164, 165, 167, 170, 171, 173, 174, 175, 176, 179, 180, 182, 188, 189, 190, 194, 196, 197, 199, 201, 203, 204, 207, 210, 219, 220, 222, 225, 227, 228, 235, 237, 239, 240, 245, 248, 249, 250, 252, 254, 255, 256, 258, 262, 263, 264, 265, 270, 273, 274, 276, 277, 280, 281, 282, 284, 285, 286, 290, 293, 298, 299, 303, 304, 306, 308, 309, 310, 311, 312, 314, 318, 320, 323, 325, 333, 334, 335, 336, 337, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 373, 375, 376, 377, 380, 381, 382, 383, 384, 391, 392, 393, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 413, 414, 422, 424, 428, 429, 431, 434, 435, 436, 437, 439, 441, 442, 443, 445, 446, 447, 450, 453, 455, 456, 457, 459, 461, 464, 465, 466, 467, 468, 470, 471, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 494, 498], "previous": [5, 9, 26, 33, 40, 42, 47, 58, 60, 62, 63, 71, 81, 97, 124, 131, 138, 144, 151, 153, 171, 179, 180, 182, 190, 196, 204, 221, 227, 230, 235, 239, 240, 246, 256, 259, 261, 264, 265, 270, 280, 282, 284, 286, 291, 293, 297, 299, 306, 307, 308, 312, 314, 334, 344, 345, 348, 353, 356, 357, 363, 370, 375, 380, 391, 397, 400, 401, 403, 405, 409, 410, 415, 416, 420, 428, 437, 438, 441, 442, 444, 447, 451, 469, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "typeerror": [5, 9, 22, 23, 39, 41, 47, 48, 49, 53, 54, 58, 60, 62, 63, 66, 85, 87, 88, 97, 101, 105, 106, 107, 111, 119, 120, 131, 132, 133, 141, 156, 180, 181, 182, 185, 189, 194, 196, 197, 199, 207, 210, 211, 212, 213, 219, 220, 225, 227, 239, 247, 265, 270, 273, 274, 277, 283, 289, 290, 293, 306, 307, 308, 311, 319, 333, 360, 368, 381, 401, 403, 404, 409, 413, 417, 426, 428, 434, 437, 442, 443, 445, 451, 456, 457, 458, 464, 465, 466, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496], "wa": [5, 7, 9, 10, 11, 17, 18, 22, 23, 26, 31, 33, 35, 42, 45, 49, 53, 55, 58, 59, 60, 62, 63, 65, 71, 80, 85, 87, 88, 89, 90, 95, 97, 99, 100, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 137, 138, 139, 141, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 157, 162, 164, 165, 168, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 188, 190, 194, 196, 199, 201, 203, 204, 207, 210, 213, 215, 216, 219, 220, 221, 224, 225, 227, 228, 232, 237, 239, 241, 242, 244, 246, 248, 249, 250, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 270, 272, 273, 274, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 297, 298, 299, 301, 303, 304, 307, 308, 309, 310, 311, 312, 314, 317, 321, 322, 323, 326, 328, 329, 331, 333, 334, 335, 337, 340, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 387, 391, 392, 393, 395, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 428, 429, 430, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 447, 449, 450, 451, 455, 456, 457, 458, 461, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "encount": [5, 9, 14, 35, 54, 62, 90, 99, 116, 118, 119, 120, 131, 164, 166, 173, 188, 199, 207, 213, 219, 222, 226, 227, 239, 242, 254, 258, 270, 277, 282, 283, 287, 301, 307, 309, 311, 312, 314, 326, 329, 334, 346, 347, 354, 356, 357, 359, 360, 364, 374, 391, 399, 401, 403, 415, 428, 430, 447, 455, 456, 457, 458, 459, 461, 465, 477, 480, 481, 482, 483, 487, 489, 490, 495], "second": [5, 20, 22, 23, 33, 35, 37, 57, 63, 66, 71, 80, 81, 85, 87, 88, 89, 90, 96, 97, 98, 99, 101, 104, 105, 106, 107, 110, 113, 114, 116, 117, 118, 119, 120, 121, 123, 126, 128, 136, 137, 138, 141, 146, 147, 148, 150, 151, 152, 154, 164, 171, 179, 180, 182, 184, 188, 189, 190, 196, 199, 203, 204, 207, 209, 214, 217, 222, 223, 225, 227, 228, 229, 232, 235, 237, 239, 242, 244, 246, 249, 250, 256, 257, 261, 262, 264, 265, 270, 273, 276, 282, 283, 284, 286, 287, 290, 291, 297, 298, 299, 306, 307, 308, 309, 310, 312, 314, 316, 317, 320, 322, 323, 331, 333, 334, 337, 340, 343, 344, 346, 347, 348, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 373, 374, 375, 376, 377, 380, 381, 382, 391, 393, 399, 401, 403, 404, 409, 410, 411, 413, 422, 428, 434, 437, 443, 445, 446, 447, 450, 451, 456, 457, 459, 461, 463, 464, 465, 466, 467, 471, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 492, 493, 494, 495], "z": [5, 71, 72, 73, 81, 90, 96, 98, 108, 113, 114, 116, 131, 133, 162, 167, 173, 180, 189, 190, 194, 196, 199, 234, 239, 283, 298, 306, 316, 334, 351, 357, 359, 360, 361, 363, 381, 401, 417, 442, 443, 445, 446, 449, 450, 455, 457, 463, 466, 470, 479, 481, 483, 484, 487, 488, 489, 494], "buf": [5, 7, 42, 138, 229, 249, 299, 357, 360, 373, 482], "member": [5, 7, 26, 30, 31, 33, 34, 35, 45, 55, 57, 58, 59, 60, 62, 67, 81, 85, 87, 88, 90, 99, 100, 123, 162, 176, 180, 189, 190, 194, 197, 225, 227, 247, 248, 258, 259, 262, 276, 277, 283, 285, 308, 309, 314, 325, 326, 328, 330, 333, 347, 353, 355, 356, 357, 358, 359, 360, 363, 368, 373, 377, 381, 393, 400, 401, 403, 404, 437, 441, 443, 445, 455, 457, 466, 480, 481, 482, 483, 487, 488, 489, 490, 492, 493, 494, 495, 496], "doesn": [5, 7, 22, 23, 33, 34, 35, 43, 48, 55, 62, 67, 71, 72, 78, 80, 81, 84, 85, 88, 89, 91, 93, 97, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 125, 131, 132, 133, 144, 145, 147, 157, 163, 164, 171, 182, 186, 188, 189, 196, 197, 199, 207, 210, 212, 214, 219, 227, 228, 239, 240, 249, 250, 257, 266, 270, 273, 274, 277, 281, 282, 283, 284, 304, 307, 308, 309, 311, 312, 314, 317, 320, 329, 331, 333, 334, 337, 338, 343, 345, 347, 348, 349, 350, 351, 353, 355, 356, 357, 359, 360, 361, 364, 368, 373, 377, 380, 382, 384, 399, 400, 402, 403, 404, 405, 411, 415, 420, 422, 424, 434, 438, 439, 441, 443, 445, 447, 456, 457, 461, 463, 464, 465, 468, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "recommend": [5, 10, 33, 35, 42, 45, 48, 56, 62, 63, 67, 71, 77, 78, 80, 83, 84, 85, 87, 88, 92, 95, 97, 98, 99, 100, 101, 103, 106, 107, 113, 119, 121, 122, 131, 133, 134, 137, 138, 141, 144, 145, 148, 151, 152, 156, 171, 179, 180, 186, 189, 194, 196, 199, 206, 207, 210, 227, 239, 244, 249, 251, 256, 259, 261, 262, 265, 270, 273, 277, 282, 290, 303, 310, 311, 314, 321, 323, 329, 334, 339, 346, 347, 350, 353, 354, 356, 357, 364, 368, 373, 375, 381, 384, 394, 399, 401, 403, 409, 410, 413, 414, 422, 424, 425, 426, 430, 431, 437, 439, 440, 443, 447, 450, 456, 461, 465, 471, 475, 476, 477, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "binari": [5, 7, 32, 34, 41, 42, 47, 62, 65, 67, 72, 75, 77, 78, 80, 83, 86, 87, 90, 92, 93, 98, 99, 106, 110, 114, 119, 121, 126, 129, 132, 133, 138, 154, 156, 162, 181, 189, 195, 199, 204, 208, 210, 211, 212, 214, 215, 217, 219, 221, 222, 225, 229, 235, 237, 239, 244, 248, 249, 250, 251, 259, 264, 265, 267, 268, 269, 270, 271, 274, 276, 277, 281, 283, 284, 285, 286, 289, 290, 296, 297, 298, 300, 303, 307, 308, 311, 314, 317, 318, 319, 332, 353, 361, 364, 368, 370, 373, 375, 378, 384, 394, 401, 410, 412, 414, 417, 420, 428, 431, 435, 436, 437, 440, 441, 443, 448, 451, 454, 459, 460, 461, 471, 474, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pybytesobject": [5, 9, 13, 63, 483, 488], "attempt": [5, 11, 23, 25, 31, 33, 35, 47, 58, 62, 66, 97, 98, 99, 100, 104, 106, 108, 109, 110, 111, 114, 116, 119, 120, 122, 127, 131, 133, 138, 145, 148, 162, 168, 173, 179, 180, 181, 182, 186, 188, 190, 197, 199, 203, 207, 208, 210, 213, 217, 219, 220, 221, 223, 226, 227, 237, 239, 240, 250, 256, 257, 261, 262, 265, 270, 273, 280, 281, 283, 284, 285, 286, 293, 297, 298, 299, 308, 310, 314, 317, 320, 322, 326, 328, 329, 334, 335, 337, 340, 343, 347, 348, 349, 351, 352, 353, 354, 356, 357, 359, 360, 363, 368, 373, 374, 375, 377, 379, 380, 381, 401, 403, 404, 409, 410, 413, 414, 416, 422, 425, 428, 430, 431, 432, 437, 438, 439, 442, 443, 445, 447, 448, 451, 455, 458, 460, 461, 464, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 492, 493, 494, 495, 496], "declar": [5, 19, 33, 35, 56, 57, 62, 67, 71, 80, 85, 87, 88, 90, 96, 97, 98, 99, 107, 114, 119, 127, 140, 151, 180, 182, 183, 185, 189, 206, 239, 240, 254, 265, 270, 273, 283, 307, 314, 329, 346, 354, 356, 360, 367, 401, 403, 417, 418, 424, 425, 426, 428, 430, 431, 440, 442, 443, 444, 445, 451, 454, 455, 463, 480, 482, 483, 484, 489, 490, 491, 492, 493, 494, 495, 496], "pybytearrayobject": [5, 8], "u": [5, 7, 9, 14, 33, 34, 39, 49, 58, 63, 71, 74, 78, 88, 90, 92, 97, 99, 101, 106, 107, 108, 114, 116, 119, 121, 132, 154, 171, 173, 174, 189, 191, 196, 197, 199, 203, 209, 210, 216, 220, 223, 232, 237, 239, 246, 277, 281, 299, 308, 311, 312, 314, 333, 334, 347, 352, 357, 360, 365, 368, 377, 381, 382, 401, 402, 404, 405, 409, 410, 422, 428, 437, 441, 443, 445, 446, 450, 457, 470, 475, 476, 477, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 496], "py_unicod": [5, 16, 67, 132, 487, 488, 490, 496], "width": [5, 63, 71, 87, 97, 104, 116, 128, 131, 154, 163, 171, 173, 189, 190, 194, 196, 199, 239, 261, 296, 307, 308, 322, 334, 359, 360, 361, 365, 368, 379, 381, 384, 387, 391, 396, 399, 401, 402, 416, 443, 450, 461, 464, 467, 477, 480, 482, 483, 484, 489, 491, 493, 495], "depend": [5, 6, 13, 14, 18, 33, 34, 35, 45, 52, 56, 62, 63, 67, 72, 77, 80, 83, 84, 85, 87, 89, 90, 91, 93, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 112, 114, 116, 117, 118, 119, 121, 122, 125, 126, 132, 133, 138, 143, 145, 151, 152, 157, 163, 164, 168, 171, 177, 180, 181, 182, 186, 189, 190, 194, 196, 199, 203, 204, 206, 207, 209, 219, 222, 224, 225, 227, 229, 233, 235, 237, 239, 241, 244, 245, 246, 248, 256, 257, 258, 261, 265, 270, 271, 272, 273, 274, 276, 281, 282, 283, 284, 285, 286, 290, 294, 296, 298, 303, 308, 314, 323, 324, 325, 329, 330, 333, 334, 337, 343, 344, 345, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 373, 374, 375, 376, 377, 379, 381, 382, 384, 391, 399, 401, 403, 404, 405, 410, 413, 414, 416, 417, 418, 420, 421, 422, 428, 430, 434, 436, 439, 440, 442, 443, 444, 445, 447, 450, 451, 455, 458, 461, 465, 467, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496], "compil": [5, 31, 33, 34, 35, 42, 45, 56, 57, 58, 62, 65, 67, 74, 77, 78, 80, 83, 86, 88, 89, 92, 96, 97, 98, 99, 107, 108, 114, 119, 122, 123, 124, 155, 170, 180, 189, 193, 195, 197, 204, 207, 227, 234, 239, 244, 249, 256, 261, 262, 264, 265, 269, 270, 272, 279, 283, 285, 289, 318, 321, 323, 329, 334, 335, 339, 346, 356, 357, 360, 361, 363, 368, 370, 374, 377, 382, 396, 400, 401, 402, 403, 415, 425, 436, 437, 441, 443, 444, 447, 449, 450, 451, 454, 455, 460, 470, 473, 475, 477, 478, 479, 480, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 496], "option": [5, 23, 33, 34, 35, 42, 47, 49, 56, 57, 58, 60, 62, 65, 67, 71, 72, 74, 75, 76, 77, 78, 84, 85, 87, 90, 93, 98, 99, 100, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 126, 129, 130, 132, 133, 137, 138, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 163, 164, 165, 166, 168, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 186, 188, 189, 190, 194, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 227, 228, 230, 232, 235, 237, 239, 240, 241, 244, 246, 249, 250, 252, 255, 256, 259, 262, 263, 265, 266, 269, 270, 272, 273, 274, 276, 279, 281, 282, 283, 284, 285, 286, 287, 291, 293, 296, 298, 299, 300, 303, 308, 309, 310, 311, 312, 314, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 374, 377, 379, 380, 381, 382, 383, 385, 387, 388, 390, 393, 396, 397, 399, 400, 401, 404, 405, 409, 410, 413, 414, 415, 418, 422, 426, 428, 429, 430, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 494, 495, 496], "either": [5, 7, 10, 11, 14, 22, 23, 33, 35, 42, 43, 45, 49, 54, 57, 58, 60, 62, 63, 66, 71, 72, 74, 75, 80, 81, 83, 84, 85, 87, 88, 90, 92, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 113, 114, 116, 117, 119, 120, 121, 122, 128, 131, 133, 137, 138, 141, 145, 149, 151, 152, 154, 156, 157, 158, 161, 162, 163, 164, 167, 171, 173, 182, 185, 186, 188, 189, 190, 191, 194, 196, 199, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 220, 221, 222, 223, 225, 227, 229, 235, 237, 239, 245, 246, 249, 251, 256, 257, 259, 261, 262, 265, 267, 270, 272, 273, 274, 276, 277, 282, 283, 284, 285, 286, 287, 290, 293, 296, 298, 299, 303, 304, 307, 308, 309, 310, 311, 312, 314, 316, 317, 323, 324, 326, 329, 334, 337, 339, 340, 343, 344, 346, 347, 349, 350, 352, 353, 356, 357, 360, 361, 363, 364, 368, 370, 373, 374, 375, 377, 380, 381, 384, 390, 391, 393, 396, 399, 401, 403, 404, 409, 410, 413, 414, 415, 416, 417, 418, 420, 422, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 454, 455, 456, 457, 458, 459, 461, 465, 468, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "deprec": [5, 16, 31, 33, 35, 42, 45, 48, 49, 53, 55, 56, 58, 62, 67, 71, 77, 80, 81, 87, 101, 105, 121, 123, 127, 128, 131, 132, 133, 134, 139, 141, 151, 152, 154, 162, 164, 165, 166, 171, 179, 180, 181, 186, 189, 199, 200, 206, 212, 213, 219, 221, 227, 232, 233, 237, 239, 248, 249, 256, 257, 261, 262, 263, 264, 265, 270, 274, 281, 282, 287, 290, 295, 296, 302, 303, 307, 308, 310, 311, 314, 316, 317, 319, 320, 329, 333, 334, 337, 342, 343, 346, 347, 350, 351, 352, 353, 355, 357, 360, 362, 365, 366, 374, 377, 380, 381, 384, 386, 390, 399, 410, 412, 414, 415, 418, 423, 428, 437, 438, 443, 447, 470, 476, 478, 479, 482, 485, 498], "remov": [5, 22, 24, 26, 28, 31, 34, 35, 45, 49, 54, 56, 62, 63, 65, 67, 71, 72, 77, 81, 85, 87, 88, 90, 92, 95, 96, 99, 105, 106, 107, 108, 113, 114, 116, 118, 120, 121, 123, 128, 131, 132, 133, 134, 138, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 165, 166, 168, 170, 171, 173, 174, 176, 179, 180, 182, 186, 188, 190, 192, 196, 199, 201, 204, 206, 207, 208, 210, 214, 217, 219, 221, 222, 224, 225, 226, 227, 232, 237, 239, 244, 245, 250, 251, 254, 256, 257, 261, 262, 263, 264, 265, 266, 267, 270, 274, 276, 277, 281, 282, 284, 286, 287, 290, 296, 298, 299, 302, 306, 307, 308, 310, 311, 312, 314, 316, 319, 320, 323, 328, 329, 331, 333, 334, 335, 340, 343, 344, 346, 347, 348, 349, 350, 352, 355, 356, 357, 360, 361, 365, 368, 373, 374, 375, 377, 379, 391, 392, 397, 399, 400, 401, 403, 404, 409, 410, 412, 415, 417, 418, 420, 422, 423, 425, 427, 428, 436, 437, 440, 441, 443, 445, 447, 451, 455, 457, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 477, 478, 479, 480, 481, 489, 490, 498], "12": [5, 20, 33, 56, 63, 67, 77, 90, 92, 97, 101, 107, 108, 113, 114, 116, 118, 119, 121, 131, 134, 138, 144, 152, 156, 159, 163, 186, 196, 199, 206, 207, 223, 225, 239, 240, 250, 255, 264, 274, 276, 284, 298, 319, 334, 337, 350, 353, 357, 359, 360, 361, 363, 373, 375, 379, 381, 384, 393, 397, 399, 437, 440, 441, 447, 450, 456, 457, 459, 461, 464, 466, 470, 474, 479, 480, 481, 482, 483, 484, 486, 489, 493, 494, 496, 498], "migrat": [5, 63, 67, 103, 266, 267, 270, 425, 451, 482, 483, 486, 487, 488, 490, 491], "pyunicode_aswidecharstr": [5, 56, 63, 487, 490, 494], "w": [5, 7, 23, 34, 48, 85, 96, 97, 99, 106, 113, 114, 116, 119, 123, 128, 131, 137, 153, 162, 163, 167, 168, 173, 180, 182, 188, 189, 194, 196, 197, 199, 201, 202, 203, 214, 239, 244, 248, 249, 273, 283, 284, 285, 296, 298, 306, 308, 310, 311, 312, 316, 317, 328, 334, 353, 356, 360, 364, 365, 373, 375, 377, 380, 381, 384, 391, 394, 401, 403, 404, 409, 414, 415, 428, 434, 436, 437, 450, 456, 461, 467, 470, 481, 482, 483, 484, 486, 487, 489, 490, 494, 495, 496], "interfac": [5, 7, 31, 32, 33, 35, 43, 48, 58, 62, 63, 65, 67, 71, 72, 75, 78, 80, 84, 85, 87, 92, 94, 97, 99, 104, 105, 107, 113, 114, 116, 119, 120, 121, 125, 127, 129, 130, 131, 132, 138, 144, 145, 156, 162, 163, 166, 168, 171, 173, 174, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 193, 198, 200, 202, 205, 207, 208, 210, 211, 217, 218, 219, 220, 221, 226, 228, 229, 232, 233, 236, 239, 242, 244, 247, 249, 256, 257, 259, 261, 264, 266, 268, 269, 271, 272, 275, 276, 279, 281, 282, 285, 286, 288, 291, 292, 296, 298, 300, 307, 309, 310, 311, 312, 313, 317, 318, 319, 320, 321, 323, 325, 327, 329, 330, 339, 340, 343, 345, 348, 351, 354, 355, 357, 360, 364, 365, 366, 367, 368, 371, 375, 376, 378, 380, 381, 385, 390, 393, 394, 396, 398, 399, 406, 409, 412, 413, 415, 416, 417, 418, 419, 422, 424, 425, 426, 428, 429, 430, 432, 441, 443, 447, 448, 454, 460, 465, 468, 473, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 496, 498], "work": [5, 15, 18, 23, 25, 33, 34, 35, 36, 37, 41, 42, 45, 54, 56, 58, 62, 63, 67, 71, 72, 75, 80, 84, 85, 88, 89, 90, 91, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 163, 164, 168, 171, 173, 174, 176, 179, 180, 182, 183, 186, 189, 190, 194, 196, 197, 200, 203, 204, 205, 211, 219, 221, 222, 224, 225, 229, 233, 237, 239, 240, 242, 243, 244, 246, 254, 255, 256, 257, 259, 261, 262, 264, 265, 266, 269, 270, 272, 275, 276, 279, 281, 282, 283, 284, 288, 290, 293, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 331, 333, 334, 339, 343, 344, 345, 347, 350, 351, 353, 354, 355, 357, 359, 360, 361, 363, 364, 368, 373, 374, 375, 376, 377, 379, 380, 384, 390, 391, 396, 398, 399, 403, 404, 405, 407, 409, 410, 415, 417, 418, 420, 422, 425, 426, 428, 429, 434, 435, 436, 440, 441, 442, 443, 445, 447, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 470, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "name": [5, 10, 11, 13, 14, 17, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 42, 45, 49, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 75, 76, 78, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 98, 99, 101, 104, 107, 108, 110, 113, 114, 118, 119, 120, 122, 123, 124, 125, 128, 129, 130, 133, 138, 140, 145, 146, 148, 151, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 174, 176, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 203, 204, 207, 208, 209, 210, 211, 214, 216, 217, 219, 222, 223, 226, 227, 228, 229, 230, 232, 234, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 309, 310, 311, 312, 314, 315, 317, 318, 320, 322, 323, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 369, 370, 372, 374, 375, 376, 377, 380, 381, 384, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 401, 402, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 442, 446, 447, 448, 449, 450, 451, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498], "known": [5, 9, 23, 24, 33, 35, 59, 62, 67, 78, 80, 87, 92, 97, 98, 99, 101, 106, 107, 110, 116, 117, 120, 121, 131, 133, 146, 164, 167, 171, 180, 182, 189, 196, 199, 210, 211, 223, 249, 250, 256, 261, 265, 266, 268, 281, 282, 283, 290, 291, 299, 306, 308, 314, 334, 335, 342, 343, 353, 356, 357, 358, 359, 360, 364, 365, 368, 369, 370, 381, 384, 390, 391, 393, 399, 401, 402, 404, 405, 414, 415, 424, 425, 430, 431, 437, 439, 440, 441, 445, 449, 450, 451, 455, 456, 458, 461, 463, 465, 471, 473, 480, 482, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495], "text": [5, 53, 58, 63, 67, 71, 80, 84, 87, 90, 92, 96, 97, 99, 101, 107, 113, 114, 116, 117, 119, 120, 129, 131, 133, 138, 158, 159, 162, 163, 164, 165, 168, 170, 172, 180, 181, 186, 188, 189, 191, 200, 201, 203, 204, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 232, 233, 237, 239, 240, 248, 250, 252, 253, 254, 256, 259, 262, 264, 265, 267, 268, 269, 270, 277, 281, 282, 283, 284, 285, 286, 288, 296, 297, 301, 303, 307, 308, 311, 313, 314, 320, 322, 328, 329, 332, 333, 335, 338, 341, 346, 348, 357, 361, 362, 364, 368, 373, 375, 382, 383, 384, 387, 390, 391, 392, 396, 399, 401, 402, 403, 409, 410, 413, 414, 415, 418, 422, 424, 426, 427, 428, 430, 431, 437, 441, 443, 444, 445, 447, 449, 450, 454, 460, 461, 465, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "copi": [5, 7, 9, 17, 25, 33, 34, 42, 43, 51, 54, 62, 63, 67, 71, 72, 75, 76, 78, 80, 85, 89, 90, 101, 107, 112, 114, 121, 122, 123, 131, 133, 138, 145, 151, 164, 171, 173, 179, 180, 183, 185, 189, 190, 194, 195, 196, 199, 204, 207, 214, 215, 217, 222, 227, 229, 233, 239, 240, 241, 244, 249, 251, 258, 261, 262, 269, 270, 273, 276, 282, 283, 284, 286, 291, 293, 298, 299, 307, 308, 312, 314, 316, 317, 324, 334, 345, 356, 360, 361, 363, 364, 368, 370, 373, 377, 387, 397, 399, 400, 403, 404, 405, 410, 414, 415, 422, 430, 431, 436, 439, 441, 443, 455, 456, 457, 464, 465, 468, 476, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "adjust": [5, 12, 45, 53, 55, 63, 80, 122, 131, 137, 173, 190, 196, 199, 215, 222, 308, 322, 339, 349, 356, 357, 360, 381, 384, 390, 391, 428, 477, 484, 488, 491, 493, 494, 495], "respons": [5, 18, 23, 33, 34, 35, 45, 56, 60, 62, 63, 67, 78, 85, 88, 90, 91, 99, 105, 106, 107, 113, 114, 117, 119, 120, 121, 122, 138, 145, 147, 149, 168, 182, 188, 190, 192, 196, 204, 210, 225, 237, 256, 257, 259, 262, 264, 265, 269, 271, 281, 282, 303, 320, 329, 340, 350, 351, 353, 354, 356, 357, 363, 364, 366, 367, 373, 375, 401, 403, 405, 408, 416, 427, 434, 435, 436, 440, 441, 443, 445, 447, 456, 466, 467, 476, 477, 480, 483, 484, 488, 489, 490, 491, 492, 494, 495], "free": [5, 7, 11, 13, 18, 33, 34, 35, 42, 51, 58, 62, 63, 85, 87, 88, 90, 92, 96, 97, 99, 101, 107, 117, 121, 133, 140, 146, 171, 179, 189, 203, 204, 239, 241, 243, 244, 262, 270, 298, 299, 307, 308, 314, 318, 331, 347, 360, 367, 368, 377, 397, 400, 403, 414, 417, 425, 434, 435, 440, 441, 442, 443, 444, 445, 447, 451, 460, 461, 476, 478, 479, 480, 482, 483, 485, 489, 490, 491, 496], "through": [5, 7, 9, 11, 14, 15, 20, 22, 23, 24, 33, 42, 45, 54, 58, 59, 62, 63, 66, 67, 72, 75, 80, 83, 85, 88, 89, 90, 92, 97, 101, 103, 105, 107, 111, 112, 113, 114, 116, 119, 120, 121, 122, 127, 131, 132, 138, 157, 164, 171, 179, 180, 188, 189, 190, 191, 194, 196, 198, 199, 207, 208, 210, 211, 212, 216, 218, 219, 220, 222, 224, 230, 235, 239, 240, 244, 256, 258, 259, 261, 265, 266, 272, 282, 283, 284, 286, 289, 290, 293, 296, 298, 299, 307, 308, 309, 312, 316, 317, 321, 327, 329, 334, 351, 353, 356, 357, 358, 359, 360, 361, 364, 368, 377, 379, 380, 382, 384, 390, 391, 400, 401, 403, 404, 405, 409, 410, 413, 417, 421, 424, 425, 426, 428, 430, 432, 434, 437, 439, 442, 443, 445, 447, 449, 450, 451, 454, 455, 456, 457, 460, 464, 465, 466, 467, 469, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "recod": 5, "instead": [5, 7, 10, 12, 13, 16, 17, 18, 22, 23, 24, 31, 33, 34, 40, 42, 45, 48, 49, 57, 58, 60, 62, 63, 65, 67, 71, 80, 84, 85, 86, 87, 88, 89, 91, 96, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 125, 131, 132, 133, 134, 135, 137, 138, 140, 141, 145, 148, 150, 151, 152, 156, 159, 162, 164, 165, 170, 171, 172, 173, 174, 179, 180, 182, 183, 188, 189, 190, 194, 196, 197, 199, 203, 204, 206, 207, 210, 211, 212, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 227, 237, 239, 240, 242, 244, 246, 248, 250, 251, 256, 257, 258, 259, 261, 262, 264, 265, 268, 270, 273, 276, 277, 281, 282, 284, 285, 286, 289, 290, 298, 299, 303, 307, 308, 309, 311, 312, 314, 315, 316, 320, 321, 322, 323, 326, 327, 328, 329, 333, 334, 335, 336, 341, 342, 343, 344, 345, 346, 347, 348, 351, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 368, 369, 370, 373, 374, 375, 377, 380, 382, 384, 390, 391, 393, 396, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 412, 414, 415, 417, 418, 420, 422, 424, 425, 426, 427, 428, 430, 438, 440, 442, 443, 445, 446, 447, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "assum": [5, 7, 33, 34, 35, 41, 45, 53, 55, 58, 59, 62, 71, 80, 81, 84, 85, 86, 88, 90, 91, 96, 97, 99, 100, 101, 107, 108, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 127, 131, 138, 160, 163, 164, 166, 167, 171, 173, 174, 179, 180, 182, 188, 189, 196, 210, 213, 215, 216, 217, 223, 224, 237, 239, 244, 249, 250, 256, 257, 261, 262, 263, 265, 267, 272, 273, 281, 282, 283, 298, 303, 307, 308, 311, 312, 317, 326, 328, 333, 349, 353, 356, 357, 359, 360, 361, 363, 364, 368, 373, 375, 379, 381, 387, 391, 401, 403, 405, 410, 414, 423, 431, 436, 441, 443, 445, 447, 451, 453, 455, 457, 459, 461, 465, 476, 477, 478, 479, 482, 483, 485, 490, 491, 492, 493, 494], "paramet": [5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 22, 23, 24, 27, 28, 32, 34, 35, 37, 44, 45, 49, 55, 57, 60, 62, 63, 65, 66, 67, 71, 86, 87, 90, 91, 96, 99, 105, 106, 107, 113, 116, 118, 119, 123, 126, 128, 129, 131, 132, 133, 138, 141, 146, 148, 149, 150, 151, 152, 154, 157, 159, 160, 162, 163, 164, 170, 171, 173, 176, 179, 180, 182, 183, 185, 186, 190, 196, 197, 199, 203, 204, 207, 210, 211, 212, 213, 215, 217, 219, 220, 222, 223, 227, 228, 229, 230, 231, 232, 234, 237, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 254, 256, 257, 259, 261, 262, 264, 265, 266, 268, 269, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 297, 298, 299, 303, 307, 309, 310, 311, 312, 315, 318, 320, 322, 326, 327, 329, 330, 332, 333, 334, 335, 337, 340, 343, 345, 346, 347, 348, 350, 351, 353, 354, 356, 357, 359, 360, 361, 362, 364, 365, 367, 371, 373, 374, 375, 377, 380, 381, 382, 383, 387, 390, 395, 396, 397, 399, 403, 404, 405, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 451, 460, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 496], "buffer_length": 5, "unlik": [5, 33, 35, 38, 41, 42, 45, 49, 54, 59, 78, 80, 85, 88, 90, 96, 97, 105, 106, 107, 112, 113, 114, 118, 119, 127, 133, 134, 138, 141, 146, 149, 150, 151, 162, 176, 182, 188, 190, 196, 197, 199, 219, 239, 242, 245, 250, 257, 262, 273, 276, 277, 285, 286, 290, 298, 308, 309, 310, 312, 314, 318, 320, 334, 339, 353, 357, 360, 361, 364, 373, 375, 377, 381, 384, 397, 400, 401, 403, 404, 417, 420, 422, 428, 440, 441, 443, 445, 447, 449, 450, 451, 455, 456, 457, 464, 466, 476, 478, 479, 480, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 496], "third": [5, 7, 10, 23, 24, 28, 31, 33, 35, 56, 57, 62, 67, 71, 76, 77, 78, 85, 87, 88, 90, 92, 95, 96, 97, 99, 101, 105, 107, 113, 114, 116, 119, 121, 122, 123, 128, 138, 140, 144, 145, 150, 171, 180, 182, 189, 190, 194, 196, 197, 199, 239, 241, 242, 265, 266, 276, 282, 283, 308, 314, 317, 322, 334, 345, 347, 353, 356, 357, 359, 360, 368, 370, 384, 395, 401, 403, 404, 405, 410, 414, 415, 417, 434, 441, 443, 447, 456, 460, 461, 464, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496], "referenc": [5, 7, 12, 13, 35, 59, 62, 66, 85, 87, 90, 97, 99, 113, 116, 125, 131, 151, 180, 192, 204, 239, 240, 261, 270, 298, 308, 314, 334, 360, 367, 417, 425, 443, 455, 456, 457, 461, 465, 476, 478, 479, 480, 483, 484, 485, 490, 491], "output": [5, 9, 15, 18, 33, 34, 42, 58, 62, 63, 65, 67, 71, 72, 85, 87, 88, 90, 99, 104, 107, 108, 110, 113, 116, 117, 119, 121, 123, 125, 128, 131, 134, 137, 138, 142, 145, 149, 151, 152, 154, 156, 157, 159, 161, 162, 163, 164, 165, 168, 170, 171, 173, 176, 180, 182, 188, 189, 190, 196, 200, 203, 204, 207, 209, 214, 215, 216, 218, 222, 223, 224, 226, 232, 233, 237, 239, 242, 248, 249, 250, 251, 254, 256, 258, 259, 260, 262, 270, 273, 276, 277, 282, 284, 285, 290, 294, 298, 303, 307, 308, 310, 314, 315, 316, 317, 318, 320, 322, 323, 324, 326, 328, 329, 332, 334, 337, 340, 343, 346, 348, 349, 351, 353, 354, 356, 357, 360, 361, 363, 364, 365, 368, 370, 372, 373, 374, 376, 377, 379, 381, 382, 383, 393, 395, 396, 397, 399, 401, 403, 410, 412, 413, 414, 415, 416, 417, 422, 426, 428, 432, 436, 437, 439, 443, 450, 451, 453, 455, 457, 458, 459, 460, 464, 465, 468, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "mode": [5, 24, 33, 34, 35, 41, 42, 58, 63, 65, 67, 76, 77, 85, 92, 96, 97, 98, 99, 104, 113, 114, 116, 119, 121, 123, 128, 129, 131, 133, 142, 147, 155, 157, 162, 163, 164, 171, 176, 180, 187, 189, 190, 191, 197, 200, 202, 203, 204, 207, 214, 221, 227, 228, 232, 237, 239, 242, 248, 252, 259, 261, 264, 266, 267, 268, 269, 273, 281, 282, 284, 285, 286, 290, 297, 303, 304, 305, 307, 310, 311, 312, 314, 316, 320, 321, 324, 326, 333, 334, 335, 337, 338, 342, 346, 347, 349, 350, 351, 353, 356, 357, 358, 359, 360, 363, 364, 365, 367, 368, 369, 373, 375, 377, 391, 393, 397, 398, 399, 401, 403, 412, 416, 418, 428, 430, 436, 437, 439, 440, 443, 451, 452, 459, 460, 461, 464, 465, 471, 473, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496], "oper": [5, 7, 16, 23, 24, 32, 33, 35, 37, 41, 42, 47, 49, 53, 62, 63, 64, 65, 67, 72, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 99, 104, 105, 106, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 130, 132, 133, 137, 138, 139, 141, 142, 145, 146, 148, 150, 151, 152, 154, 155, 157, 158, 160, 164, 167, 173, 174, 179, 180, 181, 182, 186, 188, 189, 190, 195, 196, 197, 199, 201, 204, 208, 209, 210, 214, 215, 216, 219, 221, 222, 224, 225, 226, 227, 229, 230, 233, 234, 235, 237, 238, 239, 241, 244, 250, 251, 256, 259, 261, 265, 266, 269, 270, 271, 272, 273, 276, 281, 282, 284, 285, 286, 289, 290, 291, 298, 305, 309, 310, 314, 318, 321, 323, 324, 328, 329, 331, 333, 335, 337, 341, 343, 345, 346, 348, 350, 351, 353, 356, 358, 359, 363, 364, 368, 370, 373, 374, 375, 376, 377, 378, 380, 384, 388, 391, 393, 399, 400, 401, 405, 406, 409, 410, 414, 415, 417, 418, 419, 420, 422, 424, 425, 426, 428, 431, 434, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 470, 474, 476, 477, 478, 480, 481, 482, 483, 484, 489, 493, 494, 495, 498], "usag": [5, 33, 34, 35, 45, 62, 63, 66, 67, 71, 74, 80, 84, 85, 88, 90, 92, 96, 97, 99, 101, 107, 113, 114, 116, 119, 121, 123, 127, 129, 130, 147, 148, 151, 152, 153, 156, 166, 182, 187, 188, 191, 195, 198, 200, 201, 204, 208, 227, 232, 239, 241, 242, 244, 250, 255, 257, 259, 262, 264, 265, 266, 269, 271, 273, 274, 279, 282, 284, 287, 291, 295, 298, 300, 307, 308, 312, 314, 320, 322, 330, 334, 347, 360, 361, 368, 370, 373, 375, 377, 382, 383, 384, 390, 397, 401, 403, 406, 410, 413, 414, 415, 418, 422, 425, 426, 436, 439, 440, 441, 442, 443, 461, 464, 470, 471, 474, 476, 479, 480, 481, 482, 483, 484, 487, 488, 489, 492, 493], "locat": [5, 7, 33, 34, 35, 48, 57, 63, 67, 71, 72, 80, 84, 89, 90, 96, 97, 98, 99, 101, 104, 105, 106, 110, 113, 114, 116, 120, 123, 133, 154, 160, 171, 176, 180, 189, 190, 196, 204, 207, 224, 225, 227, 239, 241, 257, 261, 265, 266, 267, 268, 269, 273, 281, 283, 284, 288, 291, 295, 298, 301, 305, 308, 309, 312, 314, 315, 317, 326, 327, 328, 329, 334, 335, 347, 356, 357, 369, 370, 375, 377, 381, 390, 399, 401, 403, 409, 410, 414, 415, 422, 424, 425, 428, 429, 430, 437, 440, 441, 442, 443, 446, 447, 451, 453, 463, 465, 468, 470, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 487, 489, 491, 493, 495], "larg": [5, 7, 18, 35, 54, 57, 58, 62, 67, 71, 84, 90, 92, 96, 99, 104, 105, 107, 111, 114, 116, 117, 119, 120, 133, 149, 152, 171, 179, 189, 190, 196, 197, 199, 201, 203, 207, 226, 227, 236, 239, 245, 261, 262, 273, 274, 277, 290, 298, 303, 307, 308, 310, 311, 314, 329, 333, 348, 359, 360, 361, 362, 363, 364, 373, 397, 399, 403, 406, 417, 424, 425, 426, 428, 437, 440, 454, 456, 461, 464, 466, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 495], "enough": [5, 42, 45, 58, 62, 63, 75, 80, 81, 90, 96, 97, 98, 104, 105, 111, 113, 114, 117, 120, 171, 188, 189, 196, 203, 213, 215, 261, 265, 273, 280, 285, 307, 308, 314, 323, 353, 355, 357, 360, 361, 364, 377, 379, 382, 384, 400, 404, 417, 457, 477, 478, 479, 480, 485, 490], "both": [5, 7, 15, 18, 23, 24, 33, 35, 45, 49, 54, 62, 63, 71, 72, 78, 80, 84, 85, 86, 87, 88, 89, 90, 96, 97, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 131, 133, 138, 145, 149, 151, 152, 154, 156, 163, 164, 167, 171, 172, 173, 174, 179, 180, 182, 188, 189, 190, 194, 196, 199, 203, 204, 206, 207, 208, 209, 210, 214, 215, 216, 217, 219, 220, 221, 224, 227, 229, 230, 233, 234, 239, 240, 241, 244, 246, 247, 249, 251, 252, 257, 258, 259, 261, 264, 265, 270, 272, 273, 274, 281, 282, 285, 290, 293, 296, 297, 298, 299, 302, 304, 307, 308, 309, 310, 311, 312, 314, 317, 318, 319, 320, 322, 323, 324, 329, 333, 334, 335, 337, 339, 344, 345, 347, 348, 349, 350, 351, 353, 356, 357, 359, 360, 361, 363, 364, 368, 370, 376, 377, 379, 381, 382, 384, 391, 393, 394, 395, 397, 399, 401, 403, 404, 405, 409, 410, 415, 417, 420, 422, 426, 428, 432, 434, 436, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 455, 456, 457, 459, 461, 464, 465, 466, 467, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "trail": [5, 18, 33, 34, 63, 71, 80, 90, 104, 107, 116, 156, 159, 170, 171, 172, 180, 190, 199, 203, 210, 219, 222, 235, 237, 239, 242, 253, 254, 261, 286, 299, 309, 329, 353, 357, 360, 361, 364, 371, 381, 384, 396, 404, 410, 422, 425, 439, 442, 443, 445, 446, 450, 451, 455, 457, 466, 467, 470, 477, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495], "b": [5, 7, 8, 22, 33, 34, 35, 59, 60, 74, 83, 84, 85, 89, 90, 92, 96, 97, 99, 100, 104, 105, 106, 107, 112, 114, 116, 117, 118, 119, 120, 123, 127, 128, 131, 132, 133, 134, 148, 150, 151, 153, 156, 157, 159, 160, 162, 166, 167, 168, 171, 173, 175, 176, 179, 189, 190, 191, 194, 196, 197, 199, 203, 216, 227, 230, 239, 240, 242, 246, 248, 249, 250, 251, 256, 259, 261, 262, 270, 273, 274, 276, 277, 282, 285, 290, 293, 298, 299, 303, 304, 306, 307, 309, 311, 312, 314, 319, 321, 328, 329, 333, 334, 336, 341, 346, 348, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 374, 375, 380, 381, 384, 397, 399, 401, 403, 404, 405, 409, 410, 413, 415, 422, 428, 436, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 455, 456, 457, 458, 461, 464, 465, 466, 467, 468, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "nonneg": [5, 162, 199, 285, 290, 353, 360, 399, 445, 451], "tini": [5, 96, 97, 101, 116, 194, 477, 483, 484], "overflow": [5, 18, 23, 35, 39, 42, 90, 154, 189, 196, 199, 201, 226, 228, 290, 298, 368, 443, 471, 481, 483, 484, 493, 494], "plain": [5, 80, 83, 85, 92, 97, 106, 114, 120, 138, 148, 163, 164, 165, 173, 186, 196, 210, 211, 214, 218, 219, 220, 227, 256, 270, 282, 341, 351, 357, 358, 362, 391, 401, 410, 422, 436, 437, 450, 456, 467, 479, 485, 489, 491, 492, 493], "k": [5, 31, 85, 88, 97, 99, 106, 114, 116, 170, 173, 190, 197, 203, 207, 215, 244, 250, 258, 261, 276, 290, 298, 306, 312, 315, 328, 333, 334, 341, 359, 360, 377, 384, 390, 391, 399, 400, 403, 417, 443, 446, 457, 477, 480, 481, 482, 483, 484, 485, 488, 489, 493, 494], "n": [5, 7, 9, 14, 18, 24, 33, 34, 35, 42, 47, 58, 59, 62, 63, 71, 84, 85, 87, 88, 92, 96, 97, 99, 104, 105, 107, 110, 114, 116, 117, 119, 120, 123, 131, 132, 133, 134, 144, 148, 149, 150, 152, 153, 154, 155, 156, 160, 162, 163, 166, 168, 171, 173, 176, 179, 180, 183, 188, 189, 190, 197, 199, 203, 204, 207, 214, 216, 219, 222, 227, 234, 235, 239, 240, 244, 248, 249, 250, 256, 258, 261, 262, 265, 270, 273, 274, 276, 277, 280, 281, 283, 284, 285, 290, 293, 294, 298, 303, 307, 308, 311, 312, 314, 322, 323, 324, 328, 329, 333, 334, 341, 346, 350, 351, 354, 356, 357, 359, 360, 361, 363, 364, 365, 368, 374, 375, 377, 379, 380, 381, 382, 384, 391, 393, 396, 397, 399, 400, 401, 402, 404, 409, 410, 413, 414, 416, 418, 422, 423, 426, 428, 434, 436, 441, 442, 443, 445, 446, 450, 453, 455, 456, 459, 461, 464, 465, 466, 467, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "repres": [5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 22, 25, 27, 33, 35, 36, 38, 39, 42, 44, 45, 47, 54, 57, 59, 62, 63, 65, 67, 71, 76, 80, 85, 89, 90, 96, 97, 99, 100, 104, 106, 107, 108, 111, 114, 116, 119, 120, 121, 131, 132, 133, 138, 141, 145, 148, 151, 155, 157, 159, 163, 164, 166, 167, 171, 173, 179, 180, 181, 189, 190, 196, 199, 204, 208, 211, 213, 215, 217, 220, 222, 223, 227, 229, 235, 237, 239, 246, 256, 257, 258, 262, 265, 266, 267, 268, 270, 273, 274, 277, 281, 282, 283, 285, 286, 287, 290, 291, 296, 297, 298, 300, 301, 303, 307, 308, 309, 311, 314, 318, 319, 320, 321, 322, 323, 329, 334, 336, 337, 340, 343, 347, 348, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 373, 374, 377, 380, 381, 384, 387, 390, 391, 392, 396, 399, 401, 403, 404, 405, 412, 413, 415, 417, 420, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 445, 447, 450, 455, 459, 461, 464, 467, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "f": [5, 7, 18, 43, 58, 62, 65, 67, 71, 85, 90, 91, 96, 97, 99, 101, 104, 105, 106, 107, 108, 113, 114, 116, 118, 119, 123, 125, 127, 131, 132, 133, 138, 145, 146, 148, 149, 151, 154, 157, 160, 161, 162, 164, 168, 173, 176, 179, 180, 182, 183, 188, 189, 190, 191, 196, 197, 199, 203, 204, 207, 214, 222, 225, 227, 229, 232, 239, 240, 242, 248, 249, 265, 270, 273, 274, 276, 281, 282, 285, 286, 290, 293, 298, 303, 306, 307, 308, 311, 312, 314, 316, 331, 333, 334, 341, 346, 348, 356, 358, 359, 360, 361, 363, 368, 373, 375, 377, 379, 381, 382, 384, 391, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 410, 414, 417, 422, 426, 436, 440, 442, 443, 444, 445, 446, 451, 455, 456, 457, 458, 461, 464, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "float": [5, 16, 18, 41, 42, 47, 57, 62, 67, 88, 96, 97, 99, 105, 106, 108, 123, 126, 131, 132, 138, 151, 154, 167, 173, 175, 179, 180, 188, 189, 194, 196, 203, 207, 223, 227, 235, 237, 239, 240, 241, 247, 262, 265, 269, 276, 277, 281, 286, 289, 290, 298, 299, 304, 305, 307, 308, 309, 314, 319, 323, 333, 334, 337, 343, 348, 353, 356, 357, 359, 361, 363, 368, 373, 380, 381, 382, 391, 393, 394, 399, 401, 402, 423, 434, 442, 445, 455, 457, 460, 464, 465, 466, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498], "d": [5, 7, 9, 33, 34, 35, 62, 63, 71, 74, 85, 87, 88, 90, 92, 96, 97, 98, 99, 105, 106, 108, 110, 113, 114, 116, 118, 119, 121, 123, 127, 131, 132, 133, 153, 162, 164, 168, 173, 174, 176, 179, 181, 185, 189, 190, 194, 196, 199, 203, 207, 214, 230, 239, 242, 244, 246, 248, 259, 261, 270, 274, 276, 282, 283, 284, 286, 287, 298, 303, 304, 306, 307, 311, 312, 317, 334, 345, 346, 351, 356, 357, 359, 360, 361, 363, 368, 370, 377, 381, 384, 402, 405, 414, 417, 428, 434, 441, 443, 446, 450, 454, 455, 456, 457, 458, 461, 463, 464, 466, 467, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 495, 496, 498], "doubl": [5, 15, 18, 25, 35, 39, 57, 62, 63, 71, 87, 88, 90, 97, 99, 100, 108, 114, 116, 122, 132, 171, 173, 188, 189, 190, 195, 202, 207, 223, 249, 261, 262, 277, 284, 290, 298, 306, 308, 311, 312, 334, 346, 360, 361, 363, 364, 374, 377, 404, 414, 423, 432, 434, 441, 442, 443, 445, 446, 450, 453, 457, 459, 464, 474, 476, 480, 481, 482, 483, 488, 489, 490, 493, 494, 495], "py_complex": [5, 15, 85], "actual": [5, 7, 10, 13, 15, 23, 33, 35, 39, 49, 51, 54, 57, 60, 62, 65, 71, 72, 75, 80, 85, 87, 88, 89, 90, 96, 97, 99, 101, 104, 105, 106, 108, 111, 113, 114, 116, 117, 119, 121, 128, 132, 133, 138, 151, 152, 155, 162, 164, 171, 173, 180, 182, 186, 189, 190, 191, 194, 204, 207, 211, 212, 214, 217, 220, 221, 223, 225, 227, 237, 239, 241, 244, 245, 248, 250, 259, 262, 265, 266, 267, 268, 270, 273, 276, 280, 282, 283, 284, 285, 286, 293, 296, 298, 306, 307, 308, 310, 311, 312, 318, 320, 323, 333, 335, 339, 340, 345, 348, 349, 351, 352, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 368, 373, 380, 384, 387, 396, 399, 401, 403, 404, 405, 410, 414, 416, 417, 420, 422, 425, 429, 437, 439, 441, 442, 443, 444, 447, 449, 450, 451, 455, 456, 459, 466, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496], "strong": [5, 7, 9, 13, 23, 26, 33, 35, 49, 51, 58, 62, 63, 87, 99, 121, 151, 183, 196, 254, 341, 357, 359, 417, 439, 478, 483, 488, 490, 493], "increas": [5, 35, 67, 88, 90, 92, 99, 101, 106, 111, 113, 119, 131, 133, 150, 171, 203, 204, 225, 261, 270, 274, 282, 285, 305, 308, 341, 343, 356, 357, 360, 368, 382, 391, 397, 403, 415, 427, 429, 439, 443, 450, 455, 471, 477, 479, 480, 484, 488, 490, 493, 494, 495, 496], "typeobject": [5, 105, 479], "similar": [5, 7, 8, 9, 13, 22, 23, 28, 31, 33, 38, 45, 49, 51, 56, 57, 58, 59, 62, 63, 65, 66, 71, 72, 80, 84, 85, 87, 90, 91, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 112, 113, 114, 116, 119, 120, 121, 123, 127, 138, 145, 146, 148, 149, 150, 151, 156, 159, 160, 163, 164, 167, 170, 171, 173, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 196, 197, 199, 201, 203, 209, 210, 219, 221, 225, 227, 239, 240, 242, 244, 247, 249, 250, 254, 256, 257, 259, 261, 265, 266, 267, 270, 273, 274, 276, 281, 283, 285, 291, 297, 298, 304, 307, 308, 311, 312, 314, 317, 320, 323, 325, 328, 334, 336, 341, 346, 347, 351, 353, 354, 355, 356, 357, 360, 361, 364, 368, 370, 373, 375, 379, 380, 381, 384, 390, 396, 397, 401, 403, 405, 409, 417, 422, 424, 425, 426, 428, 429, 432, 434, 437, 439, 440, 442, 443, 445, 447, 450, 451, 453, 455, 456, 457, 458, 461, 462, 465, 468, 470, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "anyth": [5, 35, 41, 62, 67, 71, 73, 74, 76, 80, 81, 84, 85, 88, 90, 92, 95, 97, 101, 104, 107, 113, 114, 116, 117, 119, 121, 125, 131, 149, 152, 164, 173, 189, 190, 191, 194, 196, 199, 207, 210, 217, 225, 261, 262, 265, 272, 273, 282, 284, 298, 307, 312, 316, 325, 334, 338, 345, 349, 351, 357, 361, 364, 365, 368, 375, 377, 380, 384, 391, 399, 401, 404, 409, 416, 420, 422, 428, 436, 442, 443, 445, 447, 453, 455, 456, 458, 461, 464, 474, 476, 478, 479, 482, 483, 487, 490, 491, 495], "arbitrari": [5, 23, 33, 35, 37, 39, 42, 45, 48, 51, 54, 58, 62, 67, 78, 84, 86, 88, 90, 96, 97, 99, 100, 101, 106, 107, 114, 116, 117, 119, 120, 121, 126, 131, 134, 145, 156, 164, 171, 172, 173, 182, 188, 189, 192, 196, 199, 204, 217, 222, 239, 244, 245, 247, 248, 254, 259, 262, 264, 265, 266, 270, 273, 274, 277, 282, 283, 286, 290, 298, 301, 302, 305, 308, 309, 310, 311, 312, 314, 322, 325, 328, 334, 337, 343, 345, 348, 349, 350, 353, 354, 355, 356, 359, 360, 361, 368, 369, 373, 377, 380, 381, 384, 399, 401, 403, 404, 405, 412, 425, 428, 434, 435, 436, 443, 455, 457, 460, 461, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495], "turn": [5, 23, 33, 34, 35, 57, 62, 72, 81, 85, 90, 97, 100, 101, 104, 105, 107, 113, 116, 119, 120, 121, 123, 125, 131, 133, 140, 168, 171, 173, 180, 189, 190, 203, 207, 208, 222, 223, 239, 250, 257, 259, 261, 270, 281, 282, 298, 307, 311, 313, 316, 326, 331, 335, 343, 348, 351, 353, 360, 376, 377, 380, 382, 384, 399, 403, 405, 410, 415, 435, 439, 442, 447, 449, 450, 457, 463, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 491, 493], "statu": [5, 33, 34, 49, 58, 62, 67, 71, 80, 85, 96, 104, 106, 113, 114, 115, 120, 125, 126, 127, 131, 157, 190, 210, 219, 221, 225, 227, 228, 256, 259, 261, 262, 271, 286, 298, 303, 307, 308, 320, 322, 324, 326, 349, 354, 356, 357, 364, 368, 391, 408, 410, 422, 453, 456, 463, 477, 481, 482, 484, 485, 487, 489, 491, 492, 493, 494, 496], "where": [5, 10, 23, 24, 33, 34, 35, 38, 40, 42, 45, 47, 49, 53, 55, 56, 57, 58, 60, 62, 63, 65, 67, 71, 74, 75, 78, 80, 81, 85, 87, 88, 89, 90, 91, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 131, 133, 137, 138, 145, 148, 151, 152, 154, 157, 163, 164, 165, 166, 167, 171, 173, 176, 180, 182, 188, 189, 190, 194, 196, 199, 200, 201, 203, 204, 207, 210, 213, 215, 216, 217, 219, 222, 224, 225, 227, 229, 235, 239, 240, 244, 246, 249, 250, 254, 256, 257, 259, 261, 262, 264, 265, 266, 268, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 296, 297, 298, 299, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 325, 327, 328, 329, 332, 333, 334, 339, 343, 346, 347, 348, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 373, 374, 376, 377, 380, 381, 382, 384, 386, 388, 391, 393, 395, 396, 397, 399, 400, 401, 403, 405, 409, 410, 413, 414, 415, 417, 422, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 455, 456, 457, 458, 459, 461, 463, 465, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "success": [5, 7, 9, 10, 11, 12, 14, 17, 18, 22, 23, 24, 31, 33, 34, 35, 38, 40, 42, 45, 47, 48, 49, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 71, 85, 87, 88, 91, 92, 97, 99, 104, 107, 113, 116, 120, 125, 133, 138, 145, 148, 151, 152, 172, 173, 189, 190, 204, 223, 229, 237, 256, 259, 262, 264, 276, 281, 284, 293, 298, 308, 310, 311, 314, 315, 318, 320, 329, 334, 338, 351, 352, 353, 356, 357, 359, 363, 364, 368, 390, 391, 403, 410, 425, 438, 442, 443, 456, 458, 477, 480, 481, 484, 487, 488, 489, 491, 493, 495], "leav": [5, 23, 31, 35, 56, 59, 63, 65, 71, 87, 88, 90, 92, 104, 107, 112, 114, 119, 131, 138, 150, 153, 173, 180, 182, 190, 197, 199, 201, 204, 207, 210, 219, 225, 227, 239, 240, 249, 250, 257, 261, 264, 265, 273, 284, 286, 290, 298, 299, 307, 308, 332, 333, 356, 357, 373, 377, 380, 384, 399, 403, 420, 442, 447, 449, 451, 455, 457, 458, 459, 467, 468, 471, 477, 479, 480, 481, 482, 483, 484, 488, 490, 493], "unmodifi": [5, 7, 92, 126, 222, 223, 322, 360, 380, 409, 432], "py_cleanup_support": 5, "get": [5, 7, 10, 14, 17, 23, 26, 30, 31, 33, 34, 35, 39, 42, 45, 48, 49, 53, 57, 60, 62, 63, 65, 67, 71, 74, 75, 80, 83, 84, 85, 87, 88, 89, 91, 98, 99, 100, 104, 105, 106, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 128, 131, 133, 137, 138, 140, 141, 142, 145, 146, 149, 150, 151, 152, 154, 157, 163, 164, 171, 173, 174, 180, 182, 183, 189, 190, 194, 196, 197, 198, 199, 200, 201, 202, 203, 207, 210, 214, 219, 220, 222, 223, 225, 227, 230, 236, 239, 241, 242, 244, 246, 247, 249, 250, 255, 256, 257, 259, 261, 262, 266, 269, 270, 272, 273, 276, 277, 280, 281, 282, 283, 284, 286, 294, 296, 298, 303, 304, 307, 308, 310, 312, 314, 317, 318, 320, 323, 324, 328, 331, 333, 335, 337, 341, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 358, 359, 360, 361, 364, 365, 368, 370, 373, 374, 375, 377, 380, 381, 384, 390, 391, 396, 400, 401, 403, 404, 409, 410, 413, 414, 415, 416, 417, 418, 422, 425, 426, 428, 429, 430, 431, 433, 434, 435, 439, 440, 442, 443, 445, 447, 452, 453, 454, 455, 456, 458, 459, 463, 464, 465, 467, 468, 470, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "eventu": [5, 33, 35, 85, 88, 91, 96, 116, 117, 141, 145, 150, 151, 207, 246, 256, 261, 282, 298, 324, 382, 410, 426, 434, 447, 450, 454, 458, 478, 479, 481, 482, 483, 484, 485, 488, 491, 493], "give": [5, 7, 14, 23, 35, 42, 48, 62, 63, 71, 72, 80, 84, 85, 86, 87, 89, 90, 91, 92, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 112, 116, 117, 118, 119, 128, 131, 132, 133, 150, 154, 164, 166, 167, 168, 171, 173, 189, 190, 194, 196, 198, 199, 203, 204, 207, 222, 227, 230, 239, 242, 244, 251, 265, 273, 276, 283, 284, 290, 291, 293, 294, 298, 302, 307, 308, 309, 311, 312, 314, 322, 329, 333, 334, 341, 347, 348, 354, 357, 359, 360, 361, 364, 365, 368, 380, 381, 382, 384, 388, 391, 399, 401, 403, 405, 409, 414, 418, 420, 422, 424, 425, 426, 430, 437, 441, 442, 443, 449, 452, 453, 456, 459, 460, 461, 464, 466, 467, 468, 469, 470, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 495, 496], "chanc": [5, 35, 58, 87, 113, 114, 117, 151, 153, 304, 350, 380, 455, 456, 482, 495], "had": [5, 22, 33, 42, 71, 72, 84, 88, 92, 97, 101, 107, 114, 117, 123, 131, 132, 133, 146, 153, 168, 171, 182, 183, 190, 196, 199, 204, 213, 225, 227, 250, 257, 270, 298, 308, 312, 329, 331, 343, 353, 357, 359, 361, 384, 395, 397, 401, 403, 404, 409, 410, 425, 443, 447, 451, 456, 459, 463, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "p": [5, 9, 11, 15, 22, 24, 25, 34, 38, 39, 42, 45, 54, 59, 62, 63, 96, 97, 104, 105, 106, 108, 110, 113, 114, 116, 119, 123, 164, 168, 173, 176, 180, 185, 189, 190, 194, 196, 207, 214, 216, 222, 239, 244, 249, 254, 259, 261, 262, 264, 266, 276, 283, 286, 290, 298, 299, 307, 308, 311, 312, 314, 315, 323, 324, 328, 329, 333, 334, 342, 356, 359, 360, 361, 363, 364, 368, 377, 380, 381, 382, 384, 391, 399, 401, 403, 404, 414, 423, 426, 427, 428, 436, 442, 446, 450, 455, 463, 464, 470, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496], "bool": [5, 6, 31, 104, 106, 131, 138, 151, 180, 181, 189, 194, 225, 239, 240, 276, 277, 299, 304, 306, 356, 360, 363, 394, 397, 401, 403, 425, 434, 442, 443, 445, 455, 465, 480, 483, 487, 494, 495], "test": [5, 23, 35, 46, 56, 57, 60, 67, 71, 78, 80, 81, 85, 90, 91, 99, 101, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 125, 127, 131, 133, 137, 141, 167, 168, 173, 174, 179, 183, 189, 190, 191, 194, 199, 200, 202, 204, 208, 214, 227, 234, 239, 240, 242, 250, 254, 259, 261, 262, 263, 264, 265, 266, 269, 270, 274, 276, 277, 279, 281, 284, 287, 290, 298, 306, 308, 311, 320, 324, 330, 333, 334, 351, 352, 356, 358, 359, 368, 373, 379, 380, 382, 390, 391, 397, 401, 404, 410, 417, 422, 428, 434, 437, 440, 442, 443, 449, 454, 455, 456, 457, 458, 461, 464, 465, 466, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "truth": [5, 6, 67, 71, 101, 107, 117, 189, 239, 269, 306, 363, 443, 445, 480], "boolean": [5, 16, 35, 67, 71, 80, 97, 113, 118, 131, 133, 150, 180, 181, 189, 190, 196, 204, 207, 239, 249, 250, 257, 259, 262, 269, 277, 283, 289, 298, 306, 308, 310, 319, 334, 335, 353, 354, 357, 380, 384, 391, 394, 399, 401, 404, 410, 414, 417, 425, 426, 434, 439, 442, 443, 448, 457, 478, 481, 482, 483, 484, 485, 488, 489, 491, 492, 493, 495, 496, 498], "redic": 5, "equival": [5, 7, 9, 10, 13, 18, 22, 23, 24, 33, 35, 38, 40, 42, 45, 47, 49, 53, 54, 57, 59, 60, 61, 62, 63, 67, 71, 80, 85, 88, 90, 93, 98, 99, 101, 106, 107, 110, 112, 116, 121, 123, 126, 127, 128, 131, 132, 133, 145, 149, 150, 151, 162, 167, 171, 173, 176, 179, 180, 182, 189, 190, 191, 194, 196, 199, 203, 210, 218, 219, 221, 227, 239, 240, 242, 246, 248, 249, 250, 251, 253, 254, 257, 258, 259, 261, 265, 266, 270, 274, 276, 277, 281, 282, 283, 284, 285, 286, 290, 298, 301, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 321, 323, 331, 333, 334, 336, 339, 343, 344, 353, 354, 359, 360, 361, 364, 365, 368, 370, 373, 377, 380, 381, 384, 394, 396, 399, 400, 401, 402, 403, 409, 416, 418, 420, 425, 437, 439, 442, 443, 445, 450, 451, 454, 455, 456, 457, 461, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "true": [5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 27, 29, 33, 34, 35, 37, 38, 39, 43, 44, 45, 49, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 71, 78, 80, 85, 88, 90, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 121, 123, 125, 126, 127, 131, 133, 134, 137, 138, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 156, 157, 159, 162, 163, 164, 166, 167, 168, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 186, 188, 189, 190, 192, 194, 196, 199, 201, 202, 203, 204, 207, 210, 212, 214, 215, 217, 218, 219, 221, 222, 223, 225, 227, 228, 229, 230, 232, 234, 237, 239, 240, 241, 242, 244, 245, 246, 249, 250, 252, 254, 255, 256, 257, 262, 264, 265, 266, 267, 268, 270, 273, 274, 276, 277, 278, 281, 282, 283, 284, 285, 286, 290, 291, 293, 297, 298, 299, 303, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 322, 323, 326, 327, 329, 331, 332, 334, 335, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 370, 372, 373, 375, 377, 379, 380, 381, 384, 387, 388, 391, 392, 395, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 414, 415, 417, 418, 420, 422, 425, 426, 427, 428, 430, 432, 434, 435, 436, 437, 438, 440, 442, 443, 445, 446, 450, 451, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "fals": [5, 6, 7, 22, 33, 34, 35, 47, 49, 57, 62, 63, 65, 71, 85, 96, 97, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 125, 126, 127, 131, 133, 134, 138, 141, 144, 145, 146, 147, 148, 150, 151, 152, 156, 157, 159, 162, 163, 164, 166, 167, 168, 170, 171, 173, 174, 176, 179, 180, 181, 182, 183, 188, 189, 190, 192, 194, 196, 199, 201, 203, 204, 207, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 234, 239, 240, 241, 242, 244, 245, 246, 249, 250, 256, 257, 259, 262, 264, 265, 267, 268, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 290, 291, 298, 299, 303, 306, 307, 308, 309, 310, 311, 312, 314, 319, 322, 326, 327, 329, 331, 332, 334, 335, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 373, 375, 377, 379, 380, 381, 384, 387, 388, 391, 395, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 414, 415, 417, 418, 422, 428, 430, 432, 434, 435, 436, 437, 440, 442, 443, 445, 446, 450, 451, 455, 456, 457, 458, 459, 464, 465, 467, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "express": [5, 10, 22, 40, 47, 49, 53, 59, 65, 67, 80, 85, 92, 97, 98, 99, 105, 109, 114, 125, 131, 137, 151, 157, 167, 172, 174, 175, 176, 180, 196, 199, 203, 204, 207, 227, 234, 239, 244, 245, 261, 269, 270, 274, 276, 279, 281, 283, 290, 298, 306, 308, 312, 323, 333, 338, 348, 353, 356, 357, 360, 361, 363, 368, 374, 377, 378, 381, 382, 384, 393, 395, 400, 401, 402, 403, 405, 413, 415, 417, 428, 434, 441, 442, 443, 444, 446, 447, 448, 450, 454, 457, 458, 459, 460, 461, 462, 464, 465, 466, 470, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498], "nest": [5, 13, 67, 85, 90, 97, 99, 106, 107, 113, 116, 124, 151, 173, 182, 189, 194, 199, 200, 203, 204, 207, 213, 227, 239, 240, 270, 276, 277, 282, 286, 298, 312, 317, 322, 327, 329, 334, 360, 361, 367, 368, 380, 384, 391, 396, 401, 403, 424, 428, 430, 442, 443, 445, 450, 451, 455, 456, 458, 460, 461, 464, 467, 470, 477, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 498], "exce": [5, 58, 138, 148, 151, 179, 180, 199, 239, 241, 273, 299, 308, 314, 337, 360, 375, 380, 425, 437, 456, 484, 488, 494], "long_max": [5, 18, 39], "howev": [5, 6, 10, 23, 24, 33, 34, 35, 42, 45, 49, 62, 71, 75, 76, 80, 83, 84, 85, 87, 88, 90, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 131, 138, 140, 145, 147, 151, 152, 164, 171, 173, 174, 180, 182, 183, 189, 190, 194, 199, 203, 207, 208, 210, 213, 215, 217, 219, 220, 222, 223, 227, 237, 239, 241, 244, 249, 250, 253, 257, 259, 261, 262, 264, 265, 270, 272, 273, 274, 276, 282, 283, 284, 286, 287, 296, 298, 303, 307, 308, 309, 314, 315, 325, 326, 331, 333, 334, 343, 346, 347, 348, 349, 353, 356, 357, 359, 360, 361, 364, 368, 369, 370, 372, 373, 375, 377, 379, 380, 381, 382, 384, 391, 393, 396, 400, 401, 402, 403, 404, 405, 412, 417, 418, 420, 422, 425, 426, 430, 431, 434, 437, 441, 443, 445, 447, 455, 456, 457, 458, 462, 464, 465, 467, 470, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "proper": [5, 34, 40, 49, 84, 87, 97, 112, 121, 167, 190, 204, 227, 249, 259, 261, 265, 299, 347, 353, 357, 360, 363, 368, 377, 403, 410, 425, 428, 442, 443, 445, 462, 477, 492, 493, 494], "rang": [5, 7, 18, 20, 23, 25, 35, 39, 58, 63, 64, 67, 71, 73, 84, 85, 86, 88, 96, 97, 99, 104, 105, 106, 107, 108, 111, 114, 116, 119, 120, 123, 131, 138, 146, 150, 151, 154, 157, 160, 162, 163, 167, 171, 173, 179, 180, 182, 189, 190, 191, 196, 199, 203, 207, 225, 226, 227, 237, 239, 240, 245, 249, 250, 255, 258, 262, 269, 270, 274, 276, 277, 289, 293, 298, 299, 303, 308, 310, 312, 314, 318, 319, 320, 323, 330, 331, 333, 334, 337, 341, 348, 351, 353, 356, 357, 359, 361, 363, 368, 378, 380, 381, 382, 384, 390, 393, 396, 397, 399, 401, 403, 409, 421, 425, 434, 439, 440, 442, 443, 444, 445, 447, 449, 450, 451, 455, 457, 458, 460, 461, 464, 465, 466, 467, 470, 474, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "most": [5, 7, 10, 15, 23, 25, 31, 33, 34, 35, 39, 42, 45, 56, 57, 58, 60, 62, 63, 67, 71, 72, 76, 78, 80, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 99, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129, 131, 137, 138, 145, 146, 148, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 164, 166, 171, 173, 179, 180, 182, 188, 189, 190, 196, 197, 199, 201, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 221, 224, 225, 227, 228, 229, 235, 237, 239, 240, 241, 244, 247, 248, 250, 254, 257, 261, 262, 264, 265, 266, 269, 270, 271, 273, 274, 276, 277, 281, 282, 283, 284, 285, 287, 290, 293, 298, 299, 304, 306, 307, 308, 309, 310, 311, 312, 314, 317, 318, 320, 322, 323, 325, 329, 331, 333, 334, 336, 341, 343, 344, 345, 347, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 370, 373, 375, 377, 379, 380, 381, 382, 384, 389, 390, 396, 397, 399, 401, 402, 403, 404, 405, 406, 410, 415, 416, 417, 418, 421, 422, 423, 425, 426, 428, 429, 430, 431, 436, 437, 439, 440, 441, 442, 443, 445, 447, 449, 451, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "signific": [5, 35, 41, 67, 107, 114, 116, 117, 119, 138, 144, 171, 191, 199, 207, 211, 239, 274, 276, 284, 290, 299, 314, 323, 333, 360, 361, 368, 380, 403, 413, 443, 447, 449, 450, 459, 467, 470, 477, 478, 479, 481, 482, 483, 484, 486, 488, 489, 490, 492, 493, 494, 495, 496], "silent": [5, 22, 40, 49, 55, 58, 65, 71, 113, 114, 119, 126, 145, 153, 182, 199, 227, 232, 241, 262, 264, 282, 284, 286, 293, 299, 308, 310, 311, 312, 322, 323, 345, 347, 349, 356, 361, 364, 380, 404, 409, 440, 451, 456, 470, 476, 477, 481, 482, 484, 485, 487, 489, 491, 492, 494, 495, 496], "truncat": [5, 18, 58, 63, 96, 97, 108, 154, 155, 162, 190, 196, 199, 227, 239, 248, 262, 273, 276, 285, 308, 335, 353, 356, 360, 363, 375, 377, 379, 396, 397, 408, 412, 437, 439, 443, 445, 461, 477, 479, 483, 484, 485, 489, 490, 491, 492, 494], "too": [5, 18, 35, 62, 65, 75, 87, 90, 96, 104, 106, 107, 113, 114, 116, 119, 120, 121, 127, 137, 145, 151, 164, 167, 171, 179, 180, 182, 184, 189, 197, 199, 201, 204, 207, 208, 218, 226, 227, 239, 244, 257, 272, 273, 274, 298, 306, 307, 320, 322, 329, 347, 348, 353, 354, 356, 357, 360, 361, 363, 364, 368, 374, 377, 380, 384, 399, 401, 403, 404, 405, 424, 428, 437, 438, 439, 441, 443, 447, 449, 454, 455, 456, 461, 464, 466, 470, 477, 478, 479, 480, 481, 483, 484, 485, 488, 490, 492, 494, 495], "small": [5, 33, 42, 54, 57, 62, 67, 78, 80, 85, 90, 92, 96, 97, 104, 111, 114, 116, 117, 119, 133, 171, 181, 182, 189, 198, 199, 203, 207, 257, 261, 269, 273, 276, 286, 290, 298, 303, 308, 323, 333, 334, 345, 348, 353, 359, 360, 377, 380, 390, 397, 403, 422, 424, 428, 439, 443, 454, 456, 457, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 495, 496], "semant": [5, 7, 10, 11, 35, 56, 62, 63, 71, 92, 99, 106, 113, 114, 145, 174, 199, 207, 210, 216, 219, 221, 222, 239, 262, 264, 265, 267, 269, 270, 272, 282, 283, 284, 286, 298, 307, 308, 310, 311, 314, 326, 331, 334, 345, 346, 347, 353, 358, 359, 368, 380, 381, 401, 409, 420, 438, 439, 440, 442, 443, 444, 445, 447, 448, 451, 455, 456, 469, 470, 471, 477, 479, 480, 482, 483, 485, 487, 489, 490, 491, 492, 493, 494], "inherit": [5, 28, 34, 60, 62, 67, 76, 87, 88, 90, 97, 99, 100, 105, 106, 112, 127, 129, 131, 133, 138, 140, 151, 168, 171, 173, 174, 182, 189, 190, 196, 213, 225, 235, 236, 237, 239, 248, 249, 261, 265, 269, 270, 273, 274, 284, 286, 298, 299, 307, 311, 314, 330, 343, 350, 353, 354, 357, 358, 364, 367, 375, 377, 380, 384, 385, 391, 393, 401, 425, 429, 430, 431, 442, 443, 445, 459, 460, 476, 477, 480, 482, 483, 485, 487, 488, 490, 492, 494, 495, 496], "downcast": [5, 471], "mileag": [5, 351], "vari": [5, 7, 57, 71, 87, 90, 96, 97, 99, 107, 116, 118, 119, 121, 154, 164, 171, 188, 196, 204, 207, 239, 261, 264, 266, 270, 273, 281, 286, 294, 320, 333, 351, 354, 357, 358, 359, 360, 368, 375, 377, 380, 381, 384, 400, 404, 405, 415, 442, 443, 449, 477, 478, 479, 481, 483, 484, 489, 490, 491], "occur": [5, 7, 13, 17, 18, 22, 23, 31, 35, 36, 39, 40, 42, 45, 48, 49, 58, 62, 63, 65, 71, 80, 85, 87, 91, 92, 97, 98, 99, 105, 107, 111, 113, 114, 119, 124, 131, 133, 138, 149, 151, 152, 157, 163, 164, 165, 167, 170, 171, 179, 180, 182, 183, 188, 190, 194, 196, 199, 203, 204, 207, 217, 226, 227, 232, 239, 242, 244, 251, 261, 264, 265, 269, 270, 273, 276, 282, 284, 285, 286, 290, 303, 307, 308, 312, 314, 317, 326, 329, 331, 333, 334, 343, 347, 348, 351, 353, 357, 359, 360, 361, 364, 368, 373, 375, 377, 379, 380, 381, 384, 386, 391, 396, 399, 400, 403, 410, 415, 417, 418, 422, 424, 425, 427, 428, 430, 434, 437, 439, 442, 443, 444, 445, 447, 450, 451, 453, 455, 456, 458, 465, 467, 480, 482, 483, 484, 485, 487, 489, 490, 491, 494, 495, 496], "remain": [5, 33, 36, 42, 56, 62, 71, 75, 85, 88, 90, 92, 97, 106, 107, 114, 116, 122, 131, 133, 138, 151, 166, 173, 174, 179, 182, 188, 189, 190, 196, 199, 203, 204, 206, 207, 208, 209, 212, 216, 217, 219, 222, 223, 225, 227, 232, 239, 240, 241, 250, 261, 262, 264, 265, 283, 286, 290, 298, 307, 308, 310, 312, 314, 327, 337, 339, 348, 350, 353, 356, 359, 360, 361, 364, 368, 375, 377, 379, 380, 391, 399, 400, 401, 403, 404, 409, 415, 417, 422, 439, 441, 442, 443, 447, 450, 451, 456, 457, 464, 466, 470, 471, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "default": [5, 7, 14, 17, 18, 23, 24, 27, 32, 33, 34, 35, 45, 49, 56, 57, 60, 62, 63, 65, 67, 71, 72, 74, 75, 76, 80, 81, 83, 87, 88, 89, 90, 95, 96, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 119, 120, 121, 122, 123, 126, 128, 129, 130, 132, 133, 134, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 196, 197, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 237, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 254, 256, 257, 258, 259, 261, 262, 265, 266, 267, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 296, 298, 299, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 359, 360, 361, 363, 364, 368, 370, 371, 374, 375, 377, 379, 380, 381, 382, 384, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 409, 410, 412, 414, 416, 417, 418, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496], "touch": [5, 67, 97, 101, 190, 241, 261, 311, 312, 444, 454, 465, 483, 495], "keyword": [5, 10, 19, 57, 62, 63, 65, 67, 71, 78, 80, 83, 86, 87, 88, 96, 99, 101, 107, 112, 113, 114, 126, 127, 131, 133, 138, 141, 147, 151, 153, 162, 164, 171, 173, 180, 183, 188, 189, 190, 196, 199, 202, 203, 204, 207, 210, 215, 219, 220, 221, 222, 223, 227, 232, 239, 240, 244, 249, 250, 251, 254, 257, 259, 261, 266, 269, 270, 273, 276, 277, 279, 281, 282, 283, 286, 293, 298, 303, 306, 307, 308, 312, 314, 319, 322, 328, 330, 333, 334, 338, 340, 342, 346, 347, 350, 351, 353, 360, 361, 364, 368, 371, 373, 375, 377, 379, 380, 384, 387, 388, 391, 399, 400, 401, 403, 404, 405, 410, 414, 418, 422, 426, 428, 435, 437, 439, 442, 443, 445, 446, 448, 457, 458, 460, 461, 464, 467, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 494, 495, 496], "current": [5, 7, 10, 11, 12, 17, 18, 23, 26, 28, 31, 33, 34, 35, 39, 41, 42, 43, 45, 49, 52, 56, 58, 60, 61, 62, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 87, 88, 90, 91, 92, 96, 99, 100, 101, 104, 107, 108, 109, 111, 112, 113, 114, 116, 119, 120, 121, 126, 127, 128, 131, 132, 133, 134, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 157, 163, 164, 165, 166, 168, 171, 173, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 196, 198, 199, 202, 204, 206, 207, 210, 211, 214, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 236, 237, 239, 241, 244, 245, 248, 249, 250, 254, 256, 258, 259, 261, 262, 264, 265, 271, 273, 274, 276, 281, 282, 284, 286, 289, 290, 291, 293, 296, 297, 298, 299, 303, 307, 308, 309, 310, 311, 312, 314, 317, 318, 322, 323, 324, 326, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 344, 346, 347, 348, 350, 353, 356, 357, 359, 360, 361, 364, 365, 368, 369, 370, 371, 373, 375, 377, 379, 380, 381, 382, 384, 387, 390, 391, 395, 396, 399, 401, 403, 409, 410, 411, 413, 414, 415, 416, 417, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 434, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 455, 456, 461, 462, 463, 465, 466, 467, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "end": [5, 7, 9, 13, 18, 23, 24, 28, 31, 33, 34, 35, 37, 38, 42, 55, 59, 62, 63, 65, 67, 71, 74, 78, 80, 83, 84, 85, 87, 91, 92, 96, 98, 99, 101, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 127, 128, 131, 132, 133, 134, 138, 139, 142, 145, 147, 148, 150, 151, 152, 156, 159, 162, 163, 164, 166, 168, 171, 172, 173, 176, 180, 182, 188, 189, 190, 191, 195, 196, 199, 203, 204, 207, 208, 210, 219, 221, 222, 223, 224, 227, 229, 239, 240, 241, 248, 249, 254, 256, 257, 259, 261, 262, 265, 270, 273, 276, 277, 282, 283, 284, 285, 286, 293, 294, 297, 298, 299, 303, 307, 308, 309, 310, 311, 312, 316, 317, 320, 323, 324, 326, 329, 332, 333, 334, 335, 343, 345, 346, 347, 350, 351, 353, 356, 357, 360, 361, 363, 364, 368, 370, 373, 374, 375, 377, 379, 381, 386, 391, 392, 393, 395, 396, 399, 403, 404, 405, 410, 415, 422, 423, 425, 426, 428, 430, 431, 432, 436, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 463, 464, 465, 467, 470, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "here": [5, 7, 23, 28, 33, 34, 35, 42, 45, 51, 61, 62, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 87, 88, 90, 92, 96, 97, 100, 101, 104, 105, 106, 107, 110, 113, 114, 116, 117, 118, 120, 121, 123, 125, 127, 129, 131, 133, 141, 148, 149, 152, 154, 157, 163, 164, 166, 168, 171, 173, 177, 180, 182, 183, 187, 188, 189, 190, 194, 196, 199, 203, 204, 207, 210, 212, 213, 214, 216, 219, 220, 221, 222, 223, 230, 235, 236, 237, 239, 240, 244, 248, 249, 256, 259, 261, 262, 266, 270, 271, 272, 282, 283, 284, 285, 290, 292, 298, 303, 307, 308, 312, 314, 320, 322, 329, 330, 334, 337, 344, 346, 348, 349, 351, 353, 354, 356, 357, 358, 360, 361, 368, 373, 375, 376, 377, 380, 381, 382, 384, 399, 400, 401, 403, 404, 405, 406, 410, 413, 415, 418, 422, 423, 425, 426, 428, 438, 441, 442, 443, 445, 446, 447, 449, 450, 451, 455, 456, 457, 458, 461, 462, 464, 465, 469, 470, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 492, 493, 494, 495, 496], "colon": [5, 67, 73, 99, 116, 196, 207, 210, 213, 219, 222, 242, 244, 256, 270, 274, 282, 286, 309, 312, 317, 334, 351, 361, 392, 393, 410, 415, 422, 425, 442, 445, 446, 450, 456, 458, 470, 471, 476, 483, 484, 493], "error": [5, 7, 8, 9, 13, 17, 18, 21, 22, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 48, 49, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 72, 77, 80, 84, 86, 87, 88, 90, 91, 92, 96, 99, 101, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 125, 126, 130, 131, 132, 133, 141, 142, 144, 145, 149, 150, 153, 154, 155, 156, 157, 158, 159, 162, 164, 167, 168, 170, 172, 176, 179, 180, 181, 182, 184, 188, 189, 190, 194, 196, 197, 200, 207, 208, 210, 211, 215, 216, 217, 219, 221, 222, 223, 226, 227, 228, 230, 232, 237, 239, 240, 242, 243, 248, 251, 258, 259, 261, 262, 265, 267, 269, 271, 272, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 288, 290, 293, 298, 299, 300, 301, 302, 303, 305, 308, 310, 311, 314, 317, 320, 321, 323, 326, 331, 333, 334, 337, 343, 346, 347, 348, 349, 351, 353, 354, 356, 357, 360, 361, 363, 364, 365, 368, 371, 374, 375, 377, 380, 384, 388, 391, 393, 396, 399, 401, 403, 404, 405, 407, 409, 410, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 450, 451, 454, 457, 460, 464, 465, 467, 470, 471, 476, 477, 478, 479, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494, 495, 496, 498], "messag": [5, 23, 33, 34, 53, 58, 65, 67, 71, 80, 84, 85, 87, 88, 91, 96, 97, 101, 104, 107, 111, 116, 117, 119, 120, 125, 131, 133, 134, 137, 138, 145, 148, 155, 156, 157, 159, 163, 164, 168, 170, 171, 176, 181, 187, 189, 190, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 237, 242, 243, 248, 256, 257, 259, 260, 261, 262, 265, 269, 270, 274, 277, 282, 283, 284, 287, 294, 298, 299, 300, 303, 307, 308, 312, 320, 326, 329, 332, 334, 337, 346, 348, 350, 351, 353, 354, 356, 357, 358, 368, 371, 372, 373, 374, 377, 382, 383, 390, 393, 396, 401, 403, 404, 405, 408, 410, 414, 415, 422, 428, 429, 430, 434, 436, 442, 444, 446, 451, 453, 458, 463, 464, 466, 467, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 496], "associ": [5, 23, 24, 27, 33, 44, 57, 60, 62, 65, 67, 71, 78, 85, 87, 88, 96, 98, 99, 104, 106, 111, 112, 113, 114, 116, 117, 120, 122, 126, 131, 134, 138, 147, 157, 164, 171, 173, 179, 188, 190, 192, 199, 204, 207, 208, 210, 215, 217, 227, 244, 256, 259, 261, 262, 264, 265, 270, 282, 291, 298, 301, 307, 308, 310, 312, 314, 329, 343, 344, 353, 360, 362, 364, 373, 377, 380, 382, 384, 390, 391, 401, 403, 417, 418, 420, 421, 422, 425, 428, 430, 431, 434, 435, 437, 438, 441, 442, 444, 446, 447, 451, 453, 455, 456, 457, 458, 469, 473, 484, 487, 489, 490, 491, 494, 495, 496], "semicolon": [5, 33, 88, 116, 253, 312, 356, 442, 451, 470, 476], "mutual": [5, 62, 67, 121, 129, 262, 277, 283, 286, 307, 334, 384, 395, 418], "exclud": [5, 18, 58, 63, 73, 81, 99, 112, 114, 116, 173, 176, 194, 196, 204, 207, 241, 249, 261, 276, 286, 290, 294, 296, 308, 311, 323, 329, 333, 357, 359, 360, 368, 373, 380, 381, 382, 391, 397, 404, 428, 436, 437, 441, 442, 443, 445, 451, 457, 464, 470, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496], "decrement": [5, 7, 9, 35, 62, 85, 88, 90, 97, 112, 150, 151, 204, 298, 308, 312, 348, 380, 391, 443], "abov": [5, 7, 23, 33, 34, 35, 42, 57, 62, 63, 72, 76, 78, 80, 81, 83, 84, 85, 87, 88, 97, 99, 100, 101, 104, 106, 107, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 131, 133, 138, 141, 149, 150, 151, 160, 162, 163, 164, 167, 171, 173, 176, 177, 180, 182, 188, 189, 190, 191, 192, 194, 196, 197, 199, 201, 202, 203, 207, 211, 214, 217, 219, 222, 227, 229, 237, 239, 244, 248, 249, 250, 256, 257, 261, 264, 266, 273, 281, 282, 283, 284, 285, 290, 293, 298, 303, 304, 307, 308, 312, 314, 318, 323, 328, 334, 339, 347, 348, 349, 351, 352, 353, 356, 357, 358, 359, 360, 361, 363, 364, 365, 368, 369, 375, 377, 381, 384, 390, 391, 395, 399, 401, 403, 404, 405, 409, 410, 412, 414, 417, 420, 422, 423, 425, 428, 435, 436, 441, 442, 443, 446, 447, 449, 450, 451, 455, 456, 458, 459, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496], "succe": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 25, 27, 29, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 53, 54, 55, 59, 60, 61, 62, 63, 66, 97, 116, 133, 152, 207, 223, 239, 246, 303, 308, 311, 331, 347, 352, 353, 357, 377, 403, 404, 405, 409, 410, 420, 425, 442, 446, 470, 479, 480], "arg": [5, 10, 20, 28, 33, 34, 35, 36, 57, 58, 60, 61, 62, 63, 65, 71, 84, 85, 87, 88, 90, 96, 97, 99, 101, 105, 106, 112, 113, 114, 121, 123, 126, 127, 131, 133, 137, 138, 144, 149, 151, 153, 155, 157, 168, 173, 179, 182, 183, 188, 189, 190, 196, 204, 211, 214, 217, 219, 226, 227, 229, 239, 240, 242, 246, 261, 262, 268, 270, 276, 282, 283, 284, 286, 298, 299, 306, 307, 308, 312, 314, 315, 322, 323, 331, 333, 351, 360, 361, 364, 368, 370, 374, 377, 380, 391, 395, 399, 401, 403, 404, 405, 410, 414, 417, 442, 443, 446, 451, 456, 458, 463, 466, 470, 477, 480, 481, 482, 483, 484, 485, 488, 489, 490, 492, 493, 495, 496], "exhaust": [5, 62, 90, 99, 107, 133, 134, 171, 173, 204, 239, 256, 276, 308, 342, 358, 360, 377, 384, 401, 404, 437, 442, 443, 445, 456, 457, 479, 481, 482, 483, 485, 492, 493], "due": [5, 23, 33, 35, 45, 62, 63, 65, 87, 88, 90, 96, 105, 113, 120, 133, 138, 143, 149, 151, 182, 188, 189, 190, 196, 197, 203, 222, 227, 235, 239, 241, 246, 256, 261, 265, 273, 282, 283, 284, 286, 290, 298, 314, 329, 340, 342, 357, 360, 364, 377, 380, 386, 401, 403, 404, 417, 424, 437, 442, 443, 445, 446, 447, 450, 456, 471, 476, 477, 478, 481, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496], "failur": [5, 7, 8, 9, 10, 11, 15, 18, 22, 23, 24, 25, 27, 28, 31, 33, 34, 35, 38, 39, 40, 42, 45, 47, 49, 53, 54, 57, 58, 59, 61, 63, 65, 67, 71, 80, 85, 108, 116, 125, 133, 145, 189, 190, 196, 200, 204, 207, 227, 257, 265, 284, 293, 297, 298, 308, 311, 317, 331, 337, 347, 349, 353, 357, 360, 377, 381, 383, 404, 405, 438, 440, 441, 442, 445, 446, 451, 458, 478, 481, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495], "left": [5, 15, 33, 34, 47, 62, 63, 71, 84, 85, 99, 104, 107, 114, 116, 117, 119, 121, 133, 138, 148, 154, 159, 160, 162, 167, 168, 170, 173, 180, 189, 190, 194, 196, 199, 203, 204, 207, 210, 226, 230, 239, 240, 242, 249, 261, 265, 282, 283, 284, 286, 296, 298, 306, 307, 308, 309, 310, 312, 317, 329, 334, 339, 346, 353, 356, 357, 360, 361, 364, 379, 380, 384, 390, 391, 399, 401, 402, 403, 405, 410, 415, 426, 442, 443, 445, 447, 450, 451, 455, 456, 457, 461, 462, 463, 464, 467, 471, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 492, 494, 495], "untouch": [5, 63, 71, 194, 471], "posit": [5, 7, 10, 13, 15, 20, 23, 25, 35, 38, 47, 57, 59, 62, 63, 67, 85, 88, 96, 97, 99, 104, 106, 107, 110, 112, 114, 116, 117, 118, 119, 126, 128, 131, 132, 133, 138, 145, 148, 150, 151, 153, 157, 160, 162, 166, 167, 168, 171, 173, 175, 176, 179, 188, 189, 190, 194, 196, 199, 203, 204, 207, 223, 225, 227, 229, 235, 236, 239, 240, 248, 249, 250, 251, 261, 264, 265, 270, 273, 276, 277, 281, 282, 285, 290, 293, 297, 298, 299, 304, 306, 308, 314, 315, 326, 329, 331, 333, 335, 340, 343, 347, 353, 356, 357, 359, 360, 361, 363, 364, 365, 368, 373, 377, 378, 380, 381, 384, 387, 391, 393, 396, 397, 400, 401, 403, 404, 405, 409, 410, 413, 414, 416, 423, 425, 428, 430, 436, 437, 442, 445, 446, 455, 457, 460, 461, 464, 467, 477, 480, 481, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 496], "local": [5, 12, 13, 16, 18, 31, 32, 34, 35, 49, 52, 58, 65, 67, 71, 80, 83, 85, 90, 91, 96, 99, 100, 101, 104, 107, 112, 113, 114, 116, 118, 119, 121, 122, 125, 138, 152, 153, 157, 163, 164, 165, 170, 173, 177, 180, 183, 188, 189, 190, 196, 199, 203, 204, 205, 207, 214, 223, 227, 239, 240, 256, 259, 260, 261, 262, 264, 265, 269, 270, 273, 274, 276, 282, 284, 287, 293, 298, 301, 303, 308, 309, 311, 312, 314, 323, 328, 329, 334, 335, 347, 349, 350, 351, 353, 357, 360, 361, 364, 367, 368, 370, 377, 381, 394, 395, 396, 401, 403, 405, 410, 413, 420, 424, 428, 429, 430, 431, 434, 437, 440, 442, 443, 444, 445, 447, 451, 452, 453, 455, 456, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 486, 489, 490, 491, 495, 498], "pyarg_vapars": [5, 56], "va_list": [5, 9, 18, 23, 63, 481, 492], "varg": [5, 9, 23, 63], "ident": [5, 9, 18, 25, 46, 49, 63, 67, 80, 85, 96, 98, 105, 106, 107, 111, 113, 114, 117, 133, 138, 152, 153, 155, 167, 172, 194, 196, 199, 203, 207, 210, 215, 219, 221, 229, 230, 239, 244, 259, 270, 276, 282, 284, 286, 296, 298, 306, 308, 320, 323, 334, 343, 347, 348, 353, 356, 357, 359, 360, 363, 368, 371, 380, 381, 390, 393, 400, 404, 405, 414, 417, 425, 428, 440, 443, 446, 452, 455, 456, 459, 479, 480, 482, 483, 487, 489, 493, 494, 495], "rather": [5, 7, 10, 15, 22, 23, 29, 33, 40, 41, 45, 49, 54, 56, 57, 60, 63, 71, 75, 80, 84, 85, 86, 87, 88, 95, 96, 98, 99, 106, 108, 112, 113, 114, 121, 122, 125, 131, 133, 138, 139, 149, 162, 164, 167, 168, 171, 173, 176, 179, 182, 189, 190, 194, 196, 199, 204, 206, 222, 223, 224, 225, 227, 239, 240, 241, 243, 249, 257, 261, 262, 270, 273, 276, 282, 283, 284, 285, 286, 290, 298, 306, 307, 308, 310, 311, 315, 317, 318, 327, 328, 329, 331, 334, 339, 347, 349, 351, 353, 356, 357, 359, 360, 361, 364, 368, 370, 373, 377, 381, 382, 384, 387, 390, 391, 393, 399, 401, 403, 404, 405, 409, 410, 414, 415, 417, 422, 425, 428, 434, 437, 438, 440, 442, 443, 445, 447, 449, 450, 451, 454, 455, 456, 457, 458, 461, 467, 470, 471, 476, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "kw": [5, 62, 65, 189, 202, 211, 217, 219, 222, 239, 277, 368, 377, 387, 389, 390, 391, 404, 405, 456, 477, 480, 483, 489], "empti": [5, 10, 13, 17, 22, 24, 31, 33, 34, 35, 38, 45, 49, 54, 58, 71, 72, 75, 76, 80, 85, 88, 96, 97, 99, 100, 107, 116, 117, 121, 125, 131, 132, 133, 134, 138, 145, 146, 148, 150, 151, 152, 156, 157, 162, 163, 164, 166, 168, 170, 171, 173, 180, 183, 188, 194, 196, 197, 201, 203, 204, 207, 210, 211, 217, 219, 221, 222, 223, 226, 227, 232, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 256, 259, 264, 265, 270, 273, 274, 276, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 298, 301, 303, 307, 308, 309, 311, 312, 314, 318, 324, 329, 331, 333, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 356, 357, 359, 360, 361, 363, 364, 368, 373, 374, 377, 379, 380, 384, 388, 390, 391, 395, 397, 399, 400, 401, 402, 403, 404, 409, 410, 414, 415, 420, 422, 423, 425, 426, 428, 434, 435, 437, 438, 439, 442, 443, 445, 446, 447, 450, 451, 455, 457, 461, 463, 464, 465, 470, 471, 476, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "denot": [5, 46, 60, 92, 97, 116, 180, 204, 258, 259, 270, 274, 308, 337, 357, 360, 384, 401, 410, 442, 443, 445, 446, 447, 450, 455, 456, 477, 483, 494], "6": [5, 20, 23, 25, 33, 34, 35, 42, 55, 58, 62, 63, 67, 71, 72, 75, 80, 81, 84, 85, 87, 88, 90, 92, 97, 98, 104, 106, 107, 108, 110, 111, 114, 116, 119, 120, 121, 124, 134, 138, 143, 144, 151, 152, 159, 162, 163, 167, 170, 171, 173, 174, 176, 179, 180, 182, 188, 189, 190, 196, 199, 203, 204, 207, 208, 211, 215, 217, 219, 220, 221, 222, 223, 225, 227, 228, 229, 232, 235, 236, 237, 239, 248, 249, 250, 255, 256, 259, 261, 262, 263, 265, 266, 270, 274, 276, 277, 282, 284, 285, 290, 293, 298, 299, 308, 309, 311, 312, 314, 315, 317, 320, 321, 322, 323, 325, 329, 333, 334, 335, 336, 337, 341, 343, 346, 347, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 373, 374, 375, 377, 381, 382, 384, 390, 391, 392, 396, 397, 400, 401, 403, 404, 405, 409, 410, 411, 414, 415, 417, 420, 424, 428, 434, 436, 437, 439, 443, 445, 446, 447, 450, 456, 457, 459, 461, 464, 466, 467, 468, 470, 471, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 495, 496, 498], "pyarg_vaparsetupleandkeyword": [5, 56, 481], "pyarg_validatekeywordargu": [5, 56], "kei": [5, 10, 22, 33, 35, 40, 49, 53, 54, 62, 67, 71, 80, 96, 97, 98, 99, 104, 105, 106, 107, 108, 112, 113, 114, 123, 133, 138, 141, 155, 160, 164, 168, 170, 173, 174, 177, 180, 183, 187, 188, 190, 194, 196, 197, 199, 202, 204, 207, 210, 211, 215, 217, 219, 220, 226, 227, 237, 239, 240, 241, 244, 246, 250, 258, 259, 262, 265, 266, 269, 270, 274, 276, 277, 281, 282, 283, 285, 286, 287, 294, 297, 302, 303, 306, 308, 310, 312, 314, 318, 319, 320, 321, 322, 323, 327, 334, 335, 344, 345, 348, 349, 350, 351, 356, 360, 361, 362, 368, 370, 373, 377, 383, 384, 391, 399, 400, 401, 404, 405, 409, 410, 414, 417, 420, 422, 428, 431, 432, 434, 436, 440, 442, 443, 445, 446, 447, 451, 455, 456, 457, 461, 462, 463, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 498], "dictionari": [5, 10, 16, 21, 23, 27, 31, 33, 42, 45, 49, 52, 57, 58, 62, 63, 65, 67, 71, 80, 85, 87, 88, 96, 97, 99, 100, 105, 106, 107, 108, 113, 116, 118, 120, 123, 126, 129, 131, 133, 152, 157, 160, 164, 170, 171, 173, 180, 184, 186, 188, 189, 194, 196, 199, 200, 204, 207, 209, 210, 214, 215, 216, 217, 219, 220, 221, 226, 227, 230, 237, 239, 240, 241, 244, 246, 250, 253, 256, 258, 259, 264, 265, 266, 270, 274, 277, 281, 282, 284, 285, 286, 287, 289, 291, 294, 298, 301, 302, 303, 306, 307, 308, 312, 314, 315, 318, 319, 320, 321, 322, 323, 327, 329, 334, 339, 340, 341, 345, 350, 351, 356, 357, 361, 362, 364, 368, 370, 373, 377, 380, 384, 390, 391, 392, 395, 396, 399, 401, 403, 404, 408, 409, 410, 415, 417, 422, 428, 431, 432, 439, 442, 444, 446, 451, 454, 455, 456, 460, 461, 467, 470, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 491, 492, 493, 494, 495, 498], "latter": [5, 7, 23, 42, 72, 85, 97, 99, 116, 117, 120, 131, 138, 145, 150, 157, 180, 184, 196, 197, 210, 215, 219, 223, 229, 239, 250, 261, 265, 270, 273, 274, 282, 283, 291, 307, 308, 311, 314, 323, 347, 353, 356, 360, 363, 384, 390, 391, 399, 401, 403, 413, 415, 416, 442, 443, 444, 445, 446, 447, 451, 452, 455, 457, 466, 476, 480, 485, 487, 488, 489, 490, 491, 494, 496], "deconstruct": 5, "meth_oldarg": [5, 479, 485], "modifi": [5, 9, 22, 23, 33, 34, 51, 62, 63, 65, 67, 71, 72, 76, 80, 81, 85, 87, 88, 89, 90, 91, 92, 99, 100, 101, 106, 107, 112, 113, 114, 118, 119, 120, 123, 127, 131, 133, 134, 149, 151, 154, 171, 173, 180, 186, 189, 190, 198, 199, 204, 207, 210, 211, 212, 215, 217, 219, 222, 225, 229, 230, 239, 246, 259, 261, 270, 273, 281, 282, 283, 284, 286, 288, 289, 296, 298, 299, 307, 308, 312, 314, 317, 321, 322, 323, 329, 334, 336, 339, 343, 344, 345, 346, 347, 351, 353, 354, 356, 360, 361, 364, 368, 370, 373, 377, 380, 384, 387, 390, 391, 393, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 411, 412, 415, 420, 422, 424, 425, 431, 432, 435, 436, 438, 439, 440, 441, 442, 443, 444, 447, 449, 450, 451, 455, 456, 457, 461, 465, 468, 470, 473, 474, 477, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495], "purpos": [5, 7, 17, 18, 31, 33, 35, 37, 42, 56, 62, 67, 71, 80, 83, 84, 85, 87, 90, 92, 96, 97, 101, 105, 106, 113, 114, 116, 118, 120, 124, 125, 133, 140, 156, 167, 171, 173, 180, 181, 182, 183, 186, 188, 189, 190, 194, 196, 199, 203, 207, 210, 216, 219, 220, 227, 240, 241, 244, 249, 250, 259, 265, 268, 270, 276, 283, 289, 298, 299, 307, 308, 310, 314, 322, 323, 333, 334, 338, 340, 342, 349, 353, 356, 357, 363, 368, 373, 380, 384, 391, 399, 400, 401, 403, 404, 409, 415, 422, 425, 428, 429, 436, 440, 441, 442, 444, 445, 446, 447, 450, 455, 456, 457, 458, 461, 465, 470, 471, 476, 477, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495], "conveni": [5, 7, 20, 23, 24, 28, 31, 33, 42, 45, 62, 67, 72, 76, 85, 87, 90, 96, 97, 98, 113, 114, 118, 119, 120, 121, 131, 136, 138, 151, 159, 163, 164, 170, 171, 173, 180, 194, 196, 199, 202, 204, 209, 210, 212, 215, 216, 217, 219, 220, 221, 222, 223, 239, 240, 244, 246, 248, 249, 257, 261, 264, 266, 269, 270, 271, 273, 282, 283, 285, 286, 290, 291, 298, 299, 307, 310, 314, 323, 341, 346, 351, 353, 357, 359, 360, 364, 365, 370, 373, 376, 377, 379, 381, 382, 384, 388, 390, 399, 401, 403, 404, 405, 414, 416, 422, 424, 425, 428, 429, 431, 436, 442, 443, 447, 450, 451, 455, 456, 458, 465, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 495], "decompos": [5, 92, 107, 402, 409], "continu": [5, 23, 35, 36, 58, 63, 67, 74, 85, 90, 91, 92, 97, 99, 105, 107, 112, 113, 119, 120, 124, 126, 127, 129, 133, 134, 138, 151, 152, 167, 168, 171, 182, 190, 194, 207, 210, 213, 214, 216, 221, 225, 255, 256, 259, 262, 264, 265, 266, 276, 282, 286, 297, 307, 308, 309, 312, 329, 333, 334, 347, 348, 353, 354, 357, 359, 360, 369, 373, 381, 392, 399, 403, 405, 410, 415, 430, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 455, 458, 460, 462, 463, 464, 467, 470, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 494, 495], "pyarg_unpacktupl": [5, 56, 57, 479], "min": [5, 99, 107, 114, 116, 117, 173, 179, 196, 199, 239, 240, 250, 276, 290, 331, 359, 360, 368, 382, 445, 455, 465, 482, 484, 491], "max": [5, 99, 107, 117, 131, 154, 167, 173, 179, 196, 199, 239, 240, 250, 257, 258, 276, 290, 333, 356, 357, 359, 360, 368, 445, 455, 465, 482, 484, 489, 491, 495], "simpler": [5, 62, 67, 72, 86, 90, 101, 104, 114, 116, 118, 121, 131, 164, 173, 239, 249, 298, 334, 360, 361, 384, 404, 417, 426, 428, 430, 447, 454, 457, 458, 476, 477, 478, 479, 480, 482, 484, 490, 491, 494, 498], "retriev": [5, 11, 23, 27, 33, 36, 39, 45, 49, 53, 55, 60, 67, 72, 84, 85, 87, 90, 96, 97, 99, 104, 105, 107, 116, 120, 146, 151, 164, 173, 179, 180, 184, 189, 190, 194, 197, 202, 210, 217, 221, 222, 237, 239, 240, 248, 255, 256, 257, 261, 262, 266, 269, 273, 280, 281, 283, 286, 298, 304, 306, 308, 314, 317, 319, 320, 330, 331, 334, 337, 343, 345, 347, 356, 357, 360, 361, 368, 375, 380, 387, 397, 401, 404, 410, 417, 420, 424, 428, 441, 443, 445, 451, 457, 466, 469, 470, 471, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496], "meth_vararg": [5, 57, 84, 85, 479], "tabl": [5, 7, 10, 31, 33, 35, 42, 45, 57, 58, 63, 67, 71, 80, 86, 87, 89, 90, 92, 105, 107, 113, 116, 119, 120, 160, 163, 171, 189, 190, 196, 198, 199, 203, 209, 217, 226, 231, 239, 249, 261, 264, 265, 269, 272, 273, 276, 277, 279, 281, 282, 291, 298, 306, 311, 313, 334, 343, 354, 356, 357, 360, 362, 363, 368, 373, 381, 384, 401, 403, 418, 420, 424, 425, 437, 441, 445, 456, 461, 462, 467, 470, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 496], "least": [5, 10, 28, 34, 35, 41, 49, 60, 62, 65, 71, 75, 78, 84, 85, 88, 90, 96, 97, 105, 111, 114, 116, 117, 119, 121, 122, 124, 126, 131, 148, 152, 162, 166, 167, 171, 173, 179, 188, 189, 190, 196, 199, 203, 207, 208, 214, 217, 222, 224, 229, 235, 239, 240, 246, 248, 256, 262, 273, 276, 284, 285, 290, 307, 308, 321, 323, 324, 333, 341, 343, 347, 348, 351, 353, 357, 359, 360, 361, 363, 364, 368, 370, 374, 376, 377, 380, 381, 382, 393, 395, 397, 401, 403, 404, 410, 413, 421, 424, 437, 439, 441, 442, 443, 445, 446, 449, 451, 454, 455, 456, 457, 458, 459, 463, 476, 480, 483, 484, 485, 487, 488, 490, 493, 494, 496], "equal": [5, 7, 25, 33, 34, 35, 37, 42, 53, 58, 62, 63, 65, 67, 87, 90, 97, 99, 101, 106, 107, 114, 118, 123, 127, 131, 133, 144, 145, 146, 153, 154, 160, 162, 167, 173, 179, 183, 189, 190, 194, 196, 199, 203, 207, 209, 210, 216, 222, 230, 235, 239, 240, 241, 242, 250, 255, 257, 273, 274, 276, 277, 281, 287, 290, 293, 299, 304, 306, 308, 310, 312, 323, 331, 333, 334, 341, 346, 349, 353, 356, 357, 359, 360, 362, 363, 368, 377, 379, 380, 391, 392, 393, 397, 399, 401, 402, 403, 404, 405, 415, 417, 423, 425, 427, 428, 438, 442, 443, 445, 446, 447, 450, 451, 456, 457, 459, 461, 464, 465, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 493, 495, 496], "wrong": [5, 16, 33, 42, 80, 85, 96, 97, 99, 112, 116, 120, 121, 131, 137, 157, 189, 196, 207, 226, 227, 262, 290, 307, 308, 310, 311, 351, 356, 363, 368, 373, 381, 403, 404, 410, 422, 443, 456, 464, 465, 478, 480, 481, 482, 483, 487, 488, 489, 491], "element": [5, 7, 13, 33, 35, 42, 49, 53, 54, 58, 62, 63, 67, 90, 96, 97, 99, 114, 116, 118, 119, 128, 131, 132, 133, 134, 145, 151, 152, 154, 160, 164, 168, 173, 174, 185, 188, 189, 191, 194, 199, 203, 204, 207, 209, 210, 217, 219, 221, 223, 227, 234, 237, 239, 240, 242, 246, 250, 254, 256, 259, 264, 270, 276, 277, 282, 287, 288, 290, 298, 307, 308, 309, 311, 319, 329, 331, 333, 334, 337, 341, 347, 350, 351, 353, 359, 360, 361, 363, 364, 368, 381, 384, 390, 391, 393, 396, 399, 400, 401, 403, 409, 417, 423, 426, 427, 430, 431, 432, 434, 435, 440, 442, 443, 445, 446, 455, 456, 457, 461, 464, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 495, 496], "_weakref": [5, 496], "helper": [5, 33, 67, 98, 105, 127, 140, 177, 182, 189, 200, 210, 219, 232, 249, 251, 265, 269, 272, 273, 279, 282, 304, 314, 334, 347, 357, 378, 382, 396, 399, 403, 405, 410, 428, 482, 483, 487, 488, 490, 492, 493], "weak": [5, 16, 62, 67, 85, 86, 97, 151, 195, 227, 240, 249, 269, 357, 360, 383, 403, 443, 460, 479, 482, 484, 487, 491, 498], "static": [5, 20, 28, 33, 35, 42, 45, 50, 57, 59, 61, 63, 67, 71, 75, 84, 85, 87, 88, 89, 90, 91, 92, 99, 114, 116, 124, 196, 202, 204, 229, 239, 240, 265, 271, 314, 330, 334, 360, 380, 384, 401, 404, 405, 447, 451, 455, 471, 478, 479, 480, 481, 484, 486, 487, 489, 492, 493, 494, 495, 496], "weakref_ref": 5, "self": [5, 10, 22, 28, 44, 51, 57, 60, 62, 67, 71, 76, 84, 85, 87, 88, 91, 96, 99, 105, 106, 107, 108, 110, 112, 114, 117, 118, 127, 131, 133, 134, 138, 144, 145, 152, 155, 157, 161, 168, 173, 174, 182, 185, 189, 194, 196, 199, 204, 217, 219, 225, 227, 230, 235, 237, 239, 240, 241, 244, 246, 254, 256, 257, 262, 265, 268, 270, 274, 276, 277, 289, 298, 303, 304, 307, 308, 311, 312, 314, 320, 333, 335, 336, 348, 351, 353, 354, 356, 360, 361, 373, 374, 377, 384, 387, 390, 396, 397, 399, 400, 401, 403, 404, 405, 410, 414, 417, 425, 428, 432, 434, 435, 436, 442, 443, 447, 455, 456, 460, 461, 466, 467, 468, 470, 477, 478, 479, 480, 482, 483, 484, 486, 489, 490, 491, 492, 493, 494, 496], "callback": [5, 11, 14, 28, 33, 62, 66, 67, 85, 93, 99, 105, 112, 129, 131, 135, 137, 141, 142, 144, 145, 148, 151, 182, 237, 241, 270, 296, 298, 314, 323, 324, 329, 331, 335, 344, 347, 356, 357, 358, 374, 382, 384, 386, 391, 400, 401, 417, 427, 428, 430, 436, 443, 467, 482, 483, 487, 488, 489, 490, 491, 493, 494, 495, 498], "ref": [5, 34, 35, 62, 66, 90, 190, 417, 470, 471, 478, 484, 487, 491, 495], "pyweakref_newref": [5, 56, 66], "py_buildvalu": [5, 10, 35, 56, 58, 59, 67, 85, 98, 482, 487, 495], "base": [5, 14, 18, 19, 23, 25, 29, 31, 33, 34, 35, 39, 43, 45, 47, 48, 49, 50, 60, 62, 63, 67, 72, 75, 77, 78, 80, 81, 85, 87, 88, 90, 95, 96, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 116, 120, 122, 129, 131, 133, 135, 138, 141, 142, 144, 148, 151, 156, 157, 158, 159, 160, 163, 167, 173, 176, 177, 180, 182, 186, 189, 193, 194, 195, 196, 199, 200, 202, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 225, 235, 239, 240, 248, 249, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 266, 269, 270, 271, 276, 277, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 295, 296, 297, 299, 303, 305, 307, 308, 309, 311, 313, 314, 317, 318, 320, 323, 327, 329, 330, 334, 335, 336, 339, 342, 344, 345, 347, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 363, 364, 368, 369, 370, 373, 375, 377, 381, 384, 388, 390, 391, 397, 400, 401, 402, 403, 404, 405, 408, 409, 410, 413, 414, 415, 417, 418, 423, 424, 425, 426, 428, 429, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 448, 450, 455, 457, 458, 459, 465, 466, 467, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 498], "those": [5, 7, 23, 33, 35, 39, 58, 62, 63, 65, 66, 71, 75, 78, 80, 81, 84, 85, 86, 88, 89, 90, 92, 96, 97, 99, 100, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 125, 127, 131, 133, 138, 145, 150, 151, 164, 167, 171, 173, 174, 180, 182, 185, 188, 189, 190, 191, 196, 199, 203, 204, 207, 208, 210, 216, 217, 218, 219, 222, 224, 225, 227, 230, 234, 237, 239, 240, 241, 242, 246, 248, 256, 258, 261, 265, 266, 268, 270, 273, 274, 276, 277, 281, 282, 283, 284, 286, 290, 291, 298, 299, 304, 306, 307, 308, 310, 311, 312, 314, 317, 323, 325, 326, 329, 331, 333, 334, 337, 339, 340, 341, 344, 345, 346, 347, 348, 351, 353, 357, 359, 360, 368, 370, 373, 375, 376, 377, 380, 381, 384, 390, 391, 396, 397, 399, 400, 401, 403, 404, 405, 409, 410, 414, 415, 417, 420, 425, 427, 428, 430, 431, 437, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 470, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "famili": [5, 16, 33, 42, 48, 53, 63, 67, 71, 72, 77, 107, 119, 138, 143, 148, 152, 155, 177, 214, 226, 249, 286, 298, 308, 313, 354, 371, 377, 384, 387, 425, 470, 476, 480, 481, 482, 484, 490, 493, 494, 495], "exactli": [5, 7, 9, 10, 11, 24, 28, 35, 63, 65, 71, 75, 85, 87, 88, 90, 96, 97, 99, 104, 111, 112, 114, 116, 118, 123, 131, 132, 138, 145, 148, 160, 165, 182, 189, 196, 199, 207, 210, 212, 217, 219, 221, 235, 239, 242, 250, 257, 259, 270, 281, 282, 283, 284, 290, 298, 307, 308, 309, 310, 329, 333, 334, 337, 343, 351, 353, 354, 357, 360, 361, 362, 363, 364, 375, 376, 379, 380, 393, 396, 401, 403, 404, 405, 413, 417, 426, 437, 439, 442, 445, 450, 451, 455, 456, 459, 467, 477, 479, 480, 481, 482, 483, 484, 486, 487, 490], "whatev": [5, 31, 71, 76, 80, 81, 85, 90, 95, 96, 97, 100, 113, 114, 116, 121, 131, 164, 173, 189, 209, 214, 222, 239, 265, 282, 283, 307, 308, 312, 326, 334, 350, 360, 368, 374, 375, 377, 380, 401, 404, 405, 410, 422, 445, 447, 458, 465, 469, 477, 478, 479, 480, 481, 484, 487], "forc": [5, 33, 34, 62, 67, 71, 85, 90, 96, 97, 99, 107, 111, 121, 138, 145, 165, 172, 176, 190, 194, 196, 197, 199, 207, 249, 254, 262, 273, 282, 297, 298, 303, 308, 323, 324, 326, 341, 348, 361, 363, 364, 368, 375, 377, 381, 404, 417, 422, 443, 447, 458, 461, 470, 484, 490, 491, 492, 493, 495, 496], "suppli": [5, 18, 20, 33, 62, 71, 72, 74, 75, 78, 80, 81, 87, 97, 99, 104, 105, 106, 107, 108, 116, 119, 120, 121, 131, 133, 151, 159, 164, 165, 173, 174, 189, 190, 191, 194, 196, 199, 204, 207, 229, 239, 240, 249, 251, 257, 261, 262, 266, 268, 270, 274, 276, 282, 284, 298, 299, 303, 307, 308, 310, 311, 312, 317, 323, 329, 333, 339, 341, 343, 350, 353, 356, 357, 359, 360, 364, 370, 375, 377, 380, 391, 396, 399, 401, 403, 409, 410, 414, 415, 417, 422, 430, 434, 436, 437, 440, 441, 442, 443, 445, 447, 451, 456, 459, 466, 467, 468, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 486, 489, 490, 491, 493], "never": [5, 10, 18, 23, 28, 33, 34, 35, 42, 58, 59, 62, 67, 76, 85, 87, 88, 97, 99, 101, 104, 107, 113, 114, 116, 120, 121, 131, 140, 141, 144, 145, 146, 150, 151, 152, 154, 157, 164, 171, 176, 179, 180, 182, 183, 188, 189, 190, 194, 196, 199, 203, 210, 213, 219, 227, 239, 240, 244, 250, 254, 256, 257, 259, 261, 265, 270, 273, 274, 277, 280, 281, 282, 284, 289, 293, 298, 307, 308, 309, 311, 312, 314, 329, 331, 333, 334, 337, 339, 343, 347, 349, 354, 356, 357, 360, 363, 364, 373, 374, 377, 380, 384, 400, 401, 404, 409, 410, 415, 417, 418, 422, 425, 428, 430, 437, 440, 442, 443, 445, 447, 450, 451, 455, 456, 459, 464, 465, 470, 474, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496], "invok": [5, 20, 23, 31, 35, 51, 57, 58, 62, 63, 67, 71, 87, 96, 97, 105, 107, 110, 111, 114, 116, 119, 121, 125, 131, 138, 142, 150, 157, 164, 168, 180, 182, 189, 194, 196, 204, 207, 224, 239, 240, 241, 245, 257, 259, 261, 270, 281, 282, 283, 298, 307, 308, 309, 312, 314, 315, 317, 323, 326, 328, 334, 335, 339, 347, 350, 351, 354, 356, 357, 360, 364, 368, 374, 377, 380, 382, 384, 386, 388, 391, 392, 395, 403, 409, 414, 417, 422, 428, 429, 430, 431, 434, 435, 437, 438, 440, 442, 444, 447, 450, 452, 455, 460, 462, 464, 466, 470, 476, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 494, 496], "malloc": [5, 7, 34, 42, 85, 90, 227, 297, 439, 470, 477, 478, 480, 482, 491, 492, 493], "onc": [5, 7, 22, 23, 24, 28, 33, 34, 35, 51, 55, 56, 58, 62, 63, 81, 84, 85, 87, 88, 90, 96, 97, 98, 101, 104, 106, 107, 112, 113, 114, 116, 118, 119, 121, 127, 128, 131, 134, 138, 141, 144, 145, 147, 150, 151, 152, 153, 162, 164, 168, 171, 172, 173, 176, 179, 180, 182, 199, 201, 203, 207, 210, 219, 225, 227, 232, 237, 240, 244, 246, 248, 249, 250, 254, 258, 259, 261, 264, 265, 266, 270, 273, 276, 282, 283, 284, 285, 286, 298, 299, 303, 307, 308, 310, 314, 321, 323, 329, 331, 334, 335, 343, 344, 347, 348, 349, 353, 354, 356, 357, 360, 363, 369, 373, 377, 380, 382, 384, 397, 399, 401, 403, 404, 405, 410, 414, 415, 417, 418, 422, 425, 426, 428, 430, 431, 439, 442, 443, 445, 446, 447, 451, 454, 455, 456, 465, 468, 469, 470, 471, 476, 477, 478, 480, 481, 482, 483, 484, 485, 488, 489, 490, 492, 494, 495, 496], "space": [5, 18, 33, 39, 42, 58, 62, 63, 71, 84, 85, 90, 97, 98, 99, 104, 105, 107, 112, 113, 116, 117, 119, 126, 131, 133, 156, 159, 163, 168, 171, 173, 174, 175, 180, 188, 190, 191, 197, 199, 203, 204, 207, 212, 213, 215, 216, 226, 227, 239, 240, 256, 261, 262, 270, 274, 276, 277, 281, 282, 283, 298, 299, 307, 308, 312, 315, 318, 329, 332, 333, 334, 337, 346, 347, 348, 349, 351, 353, 360, 361, 362, 364, 377, 379, 380, 381, 382, 384, 387, 390, 391, 393, 397, 399, 409, 410, 412, 414, 422, 425, 428, 439, 441, 443, 447, 449, 450, 456, 461, 463, 464, 467, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 496], "tab": [5, 65, 67, 89, 133, 159, 168, 188, 190, 191, 203, 207, 212, 216, 227, 239, 256, 261, 270, 277, 312, 332, 334, 335, 338, 346, 349, 360, 361, 364, 379, 383, 390, 409, 418, 434, 450, 456, 460, 464, 470, 477, 482, 484, 487, 490, 491, 493, 494, 495, 496], "comma": [5, 34, 67, 71, 76, 80, 106, 123, 164, 173, 188, 199, 207, 256, 262, 281, 282, 283, 286, 307, 334, 360, 361, 377, 392, 395, 410, 415, 442, 443, 445, 446, 451, 456, 457, 464, 466, 470, 481, 482, 483, 484, 485, 487, 491, 494, 495, 498], "ignor": [5, 14, 18, 22, 23, 24, 33, 34, 35, 39, 40, 47, 49, 58, 62, 63, 65, 71, 74, 85, 88, 89, 99, 113, 116, 119, 120, 121, 126, 133, 134, 145, 148, 149, 151, 152, 156, 157, 162, 163, 164, 168, 171, 172, 173, 176, 179, 180, 182, 185, 188, 189, 190, 194, 196, 199, 201, 203, 204, 207, 210, 213, 214, 222, 227, 229, 230, 232, 237, 239, 240, 241, 243, 244, 250, 256, 257, 261, 262, 263, 264, 265, 266, 270, 273, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 291, 298, 299, 303, 308, 309, 311, 312, 314, 317, 319, 323, 329, 331, 333, 334, 335, 343, 346, 347, 348, 349, 351, 353, 354, 356, 357, 360, 361, 363, 364, 368, 369, 371, 373, 375, 377, 379, 380, 381, 387, 388, 391, 393, 395, 396, 397, 401, 403, 404, 409, 410, 413, 414, 415, 420, 422, 425, 428, 430, 431, 436, 437, 438, 440, 442, 443, 446, 447, 450, 452, 455, 456, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "within": [5, 7, 22, 33, 42, 46, 49, 51, 53, 67, 71, 76, 85, 88, 90, 97, 99, 104, 106, 107, 108, 110, 111, 112, 114, 116, 117, 122, 125, 127, 131, 132, 133, 151, 153, 157, 167, 170, 171, 176, 180, 189, 190, 196, 199, 203, 204, 207, 209, 217, 230, 232, 239, 243, 244, 259, 261, 262, 265, 266, 267, 268, 270, 276, 282, 285, 286, 290, 298, 299, 300, 309, 312, 317, 322, 323, 327, 328, 331, 333, 334, 336, 339, 346, 347, 353, 354, 356, 359, 360, 361, 363, 364, 367, 368, 369, 377, 379, 380, 382, 384, 386, 391, 399, 401, 403, 404, 409, 410, 414, 415, 425, 426, 428, 435, 437, 438, 441, 442, 443, 444, 445, 447, 450, 451, 455, 456, 457, 461, 464, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 493, 494, 495, 496], "make": [5, 10, 11, 14, 23, 33, 35, 45, 56, 58, 61, 62, 63, 67, 71, 72, 77, 80, 84, 85, 87, 88, 90, 92, 99, 101, 104, 105, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 132, 133, 134, 138, 145, 150, 151, 152, 153, 154, 162, 164, 168, 170, 171, 173, 174, 176, 180, 182, 183, 184, 188, 189, 190, 192, 194, 196, 199, 201, 203, 204, 205, 207, 210, 211, 214, 219, 220, 223, 225, 226, 227, 229, 232, 235, 236, 239, 240, 244, 246, 248, 249, 250, 251, 256, 259, 261, 265, 267, 270, 272, 273, 274, 276, 281, 282, 283, 284, 285, 286, 290, 294, 296, 298, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 317, 323, 327, 329, 331, 333, 337, 341, 343, 344, 345, 346, 348, 349, 350, 353, 354, 356, 357, 359, 360, 361, 363, 365, 368, 370, 373, 377, 378, 379, 380, 382, 384, 385, 388, 391, 393, 395, 396, 400, 401, 403, 404, 405, 409, 410, 413, 414, 415, 416, 417, 418, 422, 426, 427, 428, 431, 437, 439, 441, 442, 443, 445, 447, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 498], "tad": 5, "readabl": [5, 48, 74, 90, 97, 99, 104, 113, 114, 116, 117, 128, 131, 145, 152, 162, 164, 168, 173, 180, 189, 203, 204, 212, 219, 244, 257, 259, 273, 282, 283, 289, 298, 303, 308, 314, 318, 319, 322, 325, 334, 348, 354, 357, 358, 360, 363, 364, 365, 375, 384, 392, 394, 404, 416, 429, 441, 450, 454, 455, 456, 457, 461, 464, 465, 467, 470, 478, 479, 481, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495], "wchar_t": [5, 16, 33, 34, 58, 65, 67, 84, 85, 132, 189, 436, 488, 494, 496], "uc": [5, 368, 479, 490], "increment": [5, 6, 33, 34, 35, 42, 46, 62, 67, 80, 85, 88, 92, 97, 106, 107, 114, 121, 129, 130, 133, 150, 158, 173, 199, 204, 221, 225, 285, 298, 307, 308, 360, 372, 380, 381, 384, 391, 401, 426, 428, 456, 477, 479, 480, 481, 482, 484, 487, 488, 489, 490], "caus": [5, 9, 16, 18, 23, 33, 35, 42, 47, 51, 56, 58, 62, 63, 65, 76, 80, 85, 87, 88, 89, 90, 93, 97, 98, 107, 113, 114, 116, 120, 123, 125, 126, 131, 133, 134, 138, 145, 147, 150, 151, 164, 165, 168, 171, 172, 173, 176, 180, 182, 184, 188, 189, 190, 199, 201, 203, 204, 207, 219, 222, 223, 225, 226, 227, 239, 241, 242, 254, 256, 259, 261, 262, 265, 270, 273, 277, 281, 282, 284, 286, 290, 291, 297, 298, 299, 308, 312, 314, 317, 318, 323, 328, 329, 334, 342, 343, 345, 348, 349, 353, 356, 357, 359, 360, 361, 368, 371, 373, 375, 377, 379, 380, 381, 382, 391, 393, 401, 403, 404, 405, 408, 410, 415, 417, 420, 422, 424, 425, 426, 430, 434, 437, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 456, 458, 461, 463, 465, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "becaus": [5, 10, 23, 33, 34, 35, 42, 45, 47, 51, 53, 56, 57, 59, 62, 63, 71, 72, 80, 81, 83, 84, 85, 87, 88, 90, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 131, 132, 133, 138, 141, 145, 147, 148, 149, 151, 160, 162, 163, 164, 170, 171, 173, 174, 176, 179, 180, 182, 184, 189, 194, 196, 197, 199, 201, 203, 207, 210, 215, 217, 219, 222, 225, 226, 227, 228, 229, 239, 240, 241, 244, 249, 250, 257, 258, 259, 261, 265, 266, 268, 270, 273, 276, 282, 283, 284, 285, 286, 289, 290, 296, 298, 299, 302, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 333, 334, 343, 345, 346, 347, 349, 351, 353, 354, 356, 357, 359, 360, 361, 364, 365, 368, 373, 374, 375, 377, 380, 381, 382, 384, 390, 398, 399, 401, 403, 404, 405, 410, 414, 415, 416, 417, 421, 422, 425, 428, 430, 434, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 454, 455, 456, 457, 458, 459, 461, 464, 465, 466, 468, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "produc": [5, 7, 10, 22, 23, 24, 25, 35, 39, 58, 62, 83, 88, 89, 92, 96, 97, 99, 100, 101, 104, 107, 113, 114, 116, 117, 119, 121, 131, 133, 134, 151, 162, 164, 171, 173, 174, 176, 180, 188, 189, 190, 196, 199, 200, 203, 207, 208, 210, 211, 215, 216, 217, 219, 222, 227, 228, 237, 239, 242, 244, 245, 248, 249, 250, 262, 273, 276, 277, 282, 285, 291, 298, 303, 308, 314, 317, 320, 323, 328, 331, 333, 334, 336, 357, 359, 360, 361, 363, 364, 368, 373, 380, 392, 393, 395, 399, 403, 409, 410, 412, 421, 422, 426, 427, 429, 430, 431, 436, 437, 439, 443, 445, 447, 450, 456, 458, 459, 461, 464, 467, 468, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 494, 495, 496], "therefor": [5, 10, 23, 33, 35, 42, 48, 49, 62, 63, 78, 80, 85, 87, 88, 90, 96, 97, 99, 101, 104, 107, 113, 114, 116, 119, 127, 131, 133, 150, 151, 159, 164, 171, 186, 189, 194, 196, 222, 227, 228, 229, 239, 241, 246, 257, 268, 273, 277, 281, 282, 284, 289, 296, 298, 308, 309, 314, 328, 334, 345, 347, 348, 353, 357, 360, 368, 373, 380, 390, 401, 404, 415, 428, 429, 436, 437, 439, 442, 443, 445, 449, 450, 455, 458, 459, 464, 465, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 493, 494], "systemerror": [5, 23, 27, 45, 49, 54, 59, 63, 227, 458, 465, 493], "constructor": [5, 18, 23, 28, 52, 54, 62, 63, 67, 71, 80, 85, 87, 91, 99, 105, 106, 107, 111, 113, 114, 123, 131, 133, 138, 147, 152, 162, 163, 170, 171, 173, 174, 177, 180, 185, 187, 188, 189, 194, 196, 199, 203, 207, 212, 215, 216, 217, 220, 221, 222, 227, 232, 235, 237, 239, 240, 248, 251, 256, 257, 260, 262, 273, 274, 276, 277, 282, 283, 285, 286, 293, 298, 306, 307, 314, 320, 322, 323, 331, 340, 342, 343, 345, 346, 350, 351, 353, 354, 357, 360, 361, 367, 373, 374, 375, 377, 379, 380, 382, 384, 388, 399, 400, 401, 403, 404, 405, 410, 417, 418, 422, 428, 435, 437, 438, 440, 443, 445, 456, 457, 458, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "compat": [5, 23, 24, 33, 34, 42, 48, 56, 58, 62, 65, 67, 71, 80, 87, 88, 91, 92, 95, 96, 99, 104, 108, 110, 112, 113, 114, 116, 119, 120, 121, 130, 131, 132, 134, 138, 140, 141, 152, 157, 158, 171, 174, 180, 184, 189, 197, 199, 207, 208, 210, 215, 217, 219, 221, 222, 225, 227, 228, 236, 242, 244, 255, 257, 259, 261, 262, 264, 265, 266, 268, 269, 270, 273, 274, 281, 282, 283, 286, 298, 303, 306, 308, 311, 314, 316, 317, 323, 327, 329, 331, 333, 334, 337, 340, 347, 353, 356, 357, 360, 364, 365, 366, 368, 372, 373, 375, 377, 380, 381, 383, 396, 399, 401, 402, 403, 409, 410, 412, 413, 414, 416, 422, 426, 434, 436, 437, 438, 440, 441, 442, 443, 445, 447, 450, 451, 458, 471, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "dict": [5, 10, 22, 23, 26, 31, 33, 35, 53, 57, 58, 62, 67, 85, 90, 91, 96, 97, 99, 105, 107, 108, 112, 123, 131, 133, 138, 173, 180, 184, 188, 194, 195, 197, 200, 203, 204, 207, 219, 225, 239, 240, 241, 258, 265, 266, 269, 270, 276, 277, 282, 283, 284, 298, 303, 306, 314, 318, 319, 322, 341, 345, 356, 357, 361, 370, 373, 377, 380, 384, 391, 394, 400, 401, 403, 417, 428, 434, 442, 443, 445, 446, 456, 457, 461, 465, 467, 470, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496], "pair": [5, 7, 22, 28, 33, 40, 63, 67, 71, 76, 80, 85, 87, 97, 99, 104, 106, 107, 111, 116, 119, 131, 138, 142, 145, 148, 152, 154, 157, 164, 167, 173, 180, 190, 194, 197, 199, 203, 204, 207, 210, 211, 216, 223, 227, 235, 239, 242, 244, 250, 254, 258, 270, 274, 276, 277, 286, 290, 298, 303, 307, 308, 309, 311, 312, 314, 324, 337, 347, 353, 354, 356, 357, 360, 364, 370, 373, 374, 376, 378, 380, 384, 390, 391, 399, 400, 401, 404, 409, 410, 417, 422, 425, 428, 431, 432, 442, 443, 445, 450, 451, 456, 457, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493], "consecut": [5, 22, 63, 71, 107, 133, 156, 171, 276, 290, 360, 361, 399, 443, 450, 470, 481, 491], "add": [5, 7, 28, 31, 33, 34, 35, 45, 54, 57, 58, 62, 71, 72, 76, 80, 81, 85, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 112, 113, 114, 116, 118, 119, 120, 121, 123, 128, 131, 132, 133, 134, 141, 142, 151, 152, 154, 156, 164, 165, 168, 170, 171, 173, 174, 176, 180, 181, 182, 190, 194, 196, 199, 201, 202, 204, 207, 208, 209, 210, 211, 214, 217, 219, 220, 222, 227, 237, 239, 240, 241, 244, 246, 248, 250, 257, 258, 259, 261, 265, 270, 273, 276, 277, 282, 283, 286, 289, 291, 296, 298, 304, 306, 307, 308, 311, 314, 316, 317, 318, 321, 322, 323, 334, 336, 343, 347, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 363, 368, 369, 370, 373, 377, 379, 381, 384, 390, 391, 399, 400, 401, 403, 404, 405, 409, 410, 414, 415, 417, 422, 425, 426, 428, 429, 434, 435, 436, 437, 438, 441, 442, 443, 445, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 461, 464, 465, 467, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "serv": [5, 85, 88, 90, 92, 99, 113, 114, 124, 138, 145, 148, 160, 199, 207, 216, 217, 239, 240, 250, 254, 259, 268, 276, 283, 298, 308, 314, 328, 348, 356, 357, 359, 384, 399, 401, 422, 428, 435, 447, 450, 455, 481, 485, 489, 490, 492, 494], "respect": [5, 6, 7, 10, 18, 22, 23, 31, 33, 34, 39, 46, 47, 49, 51, 55, 61, 63, 71, 80, 84, 85, 87, 88, 90, 96, 97, 98, 99, 105, 106, 113, 114, 116, 123, 131, 133, 144, 147, 151, 154, 162, 163, 164, 167, 171, 176, 180, 181, 189, 190, 196, 199, 204, 207, 208, 210, 222, 223, 227, 229, 237, 239, 244, 257, 259, 264, 268, 273, 277, 282, 283, 284, 285, 290, 293, 298, 308, 309, 311, 314, 320, 323, 324, 337, 347, 348, 349, 351, 353, 354, 356, 357, 360, 361, 363, 364, 365, 368, 369, 373, 380, 381, 390, 391, 399, 401, 403, 412, 426, 441, 443, 445, 447, 451, 455, 464, 467, 470, 474, 477, 479, 481, 483, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496], "py_vabuildvalu": [5, 56], "subclass": [6, 10, 20, 23, 28, 43, 47, 49, 53, 58, 60, 62, 67, 71, 76, 86, 87, 99, 111, 112, 113, 116, 120, 127, 131, 133, 134, 138, 139, 144, 145, 150, 151, 152, 157, 163, 168, 170, 171, 173, 174, 179, 180, 185, 188, 189, 194, 195, 196, 199, 200, 202, 207, 213, 217, 219, 220, 222, 225, 227, 230, 232, 237, 239, 240, 243, 246, 254, 255, 256, 259, 262, 265, 266, 268, 270, 271, 273, 274, 277, 282, 283, 284, 286, 298, 299, 301, 304, 306, 307, 308, 311, 314, 318, 320, 322, 333, 334, 345, 346, 347, 349, 350, 351, 353, 354, 356, 357, 359, 360, 361, 364, 368, 373, 377, 380, 384, 390, 391, 394, 399, 400, 401, 403, 404, 408, 409, 410, 412, 414, 415, 417, 422, 424, 425, 427, 428, 429, 430, 432, 434, 438, 440, 442, 444, 445, 451, 455, 458, 467, 470, 477, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "py_fals": [6, 62, 63, 87, 446], "py_tru": [6, 62, 63, 87, 446], "creation": [6, 16, 33, 58, 62, 67, 83, 85, 86, 88, 90, 97, 99, 105, 106, 107, 113, 114, 122, 129, 130, 131, 132, 145, 147, 149, 151, 152, 162, 173, 194, 195, 199, 205, 211, 225, 237, 239, 240, 241, 244, 262, 265, 269, 270, 271, 273, 282, 285, 286, 296, 298, 299, 303, 307, 309, 320, 326, 336, 337, 346, 347, 351, 358, 360, 361, 364, 373, 375, 377, 384, 390, 404, 417, 425, 428, 436, 441, 442, 447, 455, 474, 480, 488, 490, 491, 492, 494, 496], "delet": [6, 38, 49, 51, 53, 57, 58, 62, 63, 67, 85, 87, 88, 90, 99, 100, 105, 110, 114, 116, 120, 124, 127, 133, 152, 157, 173, 180, 188, 190, 191, 192, 194, 197, 200, 203, 204, 210, 214, 219, 220, 227, 232, 237, 239, 240, 250, 255, 261, 262, 265, 284, 286, 298, 306, 308, 312, 320, 345, 347, 349, 356, 358, 360, 365, 368, 375, 377, 380, 384, 391, 399, 410, 414, 415, 417, 420, 422, 439, 442, 443, 447, 450, 451, 453, 455, 457, 474, 476, 479, 480, 482, 483, 484, 485, 486, 487, 489, 491, 494, 495, 496, 498], "pybool_typ": [6, 56], "instanc": [6, 8, 9, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 28, 31, 33, 35, 38, 39, 42, 43, 45, 47, 49, 51, 52, 54, 57, 59, 60, 62, 63, 67, 71, 72, 80, 83, 85, 87, 88, 90, 99, 101, 104, 107, 108, 112, 113, 114, 116, 118, 120, 124, 127, 128, 131, 133, 134, 138, 140, 141, 142, 144, 145, 147, 148, 149, 151, 152, 153, 157, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 179, 180, 181, 182, 184, 185, 188, 189, 190, 196, 199, 203, 204, 207, 208, 209, 210, 213, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 230, 232, 235, 237, 239, 240, 241, 244, 246, 248, 249, 254, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 273, 276, 277, 282, 283, 284, 285, 286, 289, 296, 298, 299, 300, 301, 303, 304, 306, 307, 308, 311, 312, 313, 315, 320, 322, 323, 327, 329, 330, 333, 334, 336, 338, 340, 344, 345, 346, 347, 350, 351, 353, 354, 356, 357, 359, 361, 363, 364, 365, 367, 368, 370, 373, 374, 377, 379, 380, 382, 384, 387, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 408, 409, 410, 413, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 440, 442, 444, 445, 447, 450, 451, 456, 457, 458, 460, 461, 464, 465, 466, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "layer": [6, 8, 9, 15, 20, 22, 24, 25, 26, 32, 38, 39, 55, 59, 60, 67, 87, 96, 114, 117, 320, 351, 353, 357, 363, 383, 434, 470, 477, 480, 483, 495, 496], "pybool_check": 6, "py_return_fals": [6, 481], "py_return_tru": [6, 481], "pybool_fromlong": [6, 56], "v": [6, 7, 9, 15, 25, 33, 34, 39, 40, 49, 53, 58, 62, 63, 67, 83, 85, 87, 97, 98, 101, 104, 105, 108, 114, 116, 117, 119, 123, 125, 131, 173, 175, 177, 196, 199, 200, 207, 239, 242, 246, 258, 261, 276, 303, 306, 307, 308, 323, 335, 353, 354, 358, 360, 368, 372, 373, 377, 378, 379, 380, 382, 400, 403, 417, 434, 435, 442, 446, 450, 457, 470, 476, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "certain": [7, 16, 23, 41, 42, 49, 57, 58, 62, 65, 71, 74, 85, 89, 90, 92, 99, 100, 104, 106, 107, 113, 114, 116, 117, 131, 132, 145, 152, 157, 171, 186, 196, 203, 207, 209, 210, 213, 217, 219, 220, 222, 223, 227, 248, 261, 270, 281, 282, 283, 284, 285, 286, 298, 307, 308, 310, 312, 321, 322, 323, 353, 357, 362, 364, 369, 373, 380, 381, 382, 384, 401, 402, 403, 404, 409, 422, 425, 434, 436, 443, 445, 447, 450, 456, 457, 458, 465, 475, 476, 477, 478, 479, 480, 481, 483, 484, 486, 488, 490, 491, 494, 495], "object": [7, 11, 14, 18, 28, 31, 32, 33, 34, 36, 40, 41, 47, 48, 51, 52, 53, 56, 58, 64, 65, 67, 71, 78, 80, 84, 85, 86, 88, 89, 90, 92, 93, 98, 99, 104, 107, 108, 110, 116, 118, 119, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 142, 145, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 172, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 189, 193, 194, 195, 197, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 243, 244, 245, 246, 247, 248, 251, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 279, 284, 285, 288, 292, 293, 295, 297, 299, 300, 305, 306, 307, 309, 312, 313, 315, 317, 319, 323, 325, 328, 330, 332, 333, 337, 338, 339, 341, 344, 347, 348, 352, 355, 361, 363, 367, 368, 370, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 389, 393, 394, 395, 397, 400, 402, 403, 409, 412, 414, 415, 419, 421, 422, 432, 436, 439, 440, 441, 442, 444, 445, 447, 448, 451, 453, 456, 457, 458, 460, 462, 464, 465, 466, 467, 470, 471, 474, 476, 477, 478, 479, 482, 485, 486, 487, 489, 492, 493, 494, 495, 496, 498], "wrap": [7, 18, 21, 33, 42, 43, 57, 62, 67, 71, 90, 91, 100, 105, 110, 114, 118, 119, 123, 125, 131, 133, 138, 141, 142, 149, 151, 152, 154, 160, 161, 162, 168, 171, 182, 189, 190, 194, 200, 203, 204, 207, 215, 216, 221, 222, 227, 234, 239, 240, 244, 245, 248, 256, 261, 265, 266, 269, 270, 273, 276, 282, 283, 285, 296, 298, 307, 308, 317, 319, 331, 348, 356, 357, 360, 363, 368, 371, 373, 377, 378, 383, 391, 400, 401, 403, 405, 409, 410, 420, 422, 428, 432, 442, 443, 456, 458, 467, 476, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495], "Such": [7, 35, 62, 71, 85, 90, 99, 111, 112, 113, 131, 133, 145, 185, 194, 203, 210, 217, 219, 221, 261, 308, 312, 314, 321, 353, 373, 392, 401, 403, 437, 443, 445, 451, 465, 480, 484, 489, 494], "parti": [7, 10, 24, 31, 33, 35, 56, 67, 71, 76, 77, 78, 90, 92, 95, 96, 97, 99, 114, 121, 122, 123, 138, 140, 144, 145, 150, 171, 182, 189, 194, 196, 197, 239, 249, 265, 266, 282, 298, 308, 314, 317, 334, 345, 349, 357, 359, 368, 370, 380, 384, 395, 401, 403, 410, 414, 415, 417, 440, 441, 443, 460, 474, 476, 477, 478, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 493, 495, 496], "special": [7, 10, 14, 18, 23, 31, 33, 34, 35, 42, 49, 57, 59, 60, 62, 63, 67, 71, 72, 76, 80, 85, 87, 90, 96, 97, 99, 104, 106, 107, 112, 113, 114, 116, 119, 121, 122, 124, 125, 127, 131, 133, 138, 149, 150, 151, 156, 157, 164, 165, 167, 168, 173, 180, 181, 182, 184, 188, 189, 190, 193, 194, 195, 196, 200, 204, 207, 210, 217, 219, 222, 227, 234, 236, 242, 244, 245, 259, 261, 264, 265, 269, 270, 274, 276, 277, 281, 282, 283, 286, 287, 296, 297, 298, 305, 306, 307, 308, 311, 314, 317, 318, 334, 336, 339, 344, 346, 347, 348, 353, 357, 358, 359, 363, 364, 368, 373, 376, 380, 384, 390, 403, 404, 409, 410, 414, 417, 422, 425, 428, 430, 434, 440, 441, 444, 445, 446, 448, 450, 451, 454, 455, 457, 460, 463, 464, 465, 471, 474, 476, 477, 478, 479, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498], "imag": [7, 15, 42, 67, 97, 99, 164, 167, 190, 212, 214, 220, 239, 240, 257, 269, 277, 304, 337, 352, 360, 361, 366, 368, 383, 388, 391, 399, 410, 417, 421, 434, 443, 446, 467, 489, 494], "analysi": [7, 33, 35, 67, 71, 116, 134, 165, 167, 203, 236, 251, 269, 279, 294, 323, 333, 401, 445, 448, 449, 451, 459, 469, 482, 490, 492], "characterist": [7, 97, 314, 362, 368, 482, 483], "back": [7, 10, 15, 22, 25, 28, 35, 39, 41, 42, 58, 62, 63, 67, 71, 75, 86, 88, 90, 96, 97, 98, 101, 107, 108, 110, 114, 116, 117, 118, 119, 123, 124, 131, 132, 133, 140, 145, 156, 159, 164, 167, 168, 171, 173, 174, 180, 182, 190, 194, 196, 199, 203, 204, 207, 208, 210, 219, 222, 229, 237, 239, 241, 243, 244, 246, 257, 259, 265, 272, 273, 277, 283, 284, 289, 293, 297, 298, 299, 304, 306, 307, 308, 309, 310, 312, 314, 327, 329, 334, 345, 353, 354, 356, 357, 358, 360, 361, 368, 377, 381, 384, 392, 393, 399, 404, 405, 409, 410, 428, 432, 433, 434, 435, 437, 439, 440, 442, 443, 447, 451, 455, 461, 464, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496], "possibli": [7, 10, 31, 35, 49, 56, 57, 63, 71, 76, 78, 85, 90, 92, 99, 100, 113, 117, 121, 134, 144, 171, 179, 180, 186, 190, 193, 196, 199, 207, 211, 216, 217, 239, 245, 261, 282, 283, 286, 303, 308, 317, 329, 343, 347, 353, 360, 373, 374, 377, 379, 380, 391, 399, 400, 403, 409, 422, 430, 431, 439, 442, 443, 445, 450, 452, 455, 465, 479, 484, 485, 489, 490, 491, 493, 494, 495], "desir": [7, 9, 23, 33, 35, 42, 60, 85, 86, 97, 104, 105, 106, 107, 113, 114, 116, 119, 121, 131, 149, 151, 164, 171, 173, 174, 180, 182, 189, 190, 202, 203, 204, 222, 226, 237, 239, 240, 249, 250, 254, 259, 261, 264, 265, 273, 274, 281, 282, 286, 287, 291, 293, 307, 309, 312, 317, 322, 326, 333, 334, 335, 350, 354, 356, 357, 359, 360, 361, 363, 369, 377, 379, 380, 384, 390, 391, 399, 409, 414, 417, 420, 427, 428, 431, 443, 445, 447, 456, 457, 458, 465, 470, 477, 479, 480, 481, 482, 483, 484, 491, 492, 493, 495], "situat": [7, 35, 42, 62, 71, 75, 85, 87, 90, 97, 100, 106, 107, 112, 113, 114, 117, 118, 120, 121, 125, 131, 138, 139, 164, 171, 182, 194, 221, 227, 244, 249, 265, 268, 273, 282, 286, 298, 307, 351, 364, 375, 377, 380, 405, 412, 415, 425, 443, 452, 455, 456, 457, 458, 479, 484, 485, 491, 492, 493], "directli": [7, 10, 13, 24, 28, 31, 33, 34, 35, 42, 45, 46, 53, 56, 57, 58, 62, 63, 66, 67, 71, 72, 76, 80, 84, 85, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 105, 106, 110, 111, 112, 113, 114, 118, 120, 121, 122, 125, 127, 131, 133, 135, 137, 140, 144, 145, 148, 151, 159, 160, 161, 162, 164, 171, 172, 173, 174, 176, 179, 180, 182, 184, 188, 189, 194, 196, 199, 203, 204, 206, 207, 208, 210, 215, 219, 220, 223, 224, 226, 227, 235, 239, 240, 241, 246, 249, 250, 256, 257, 259, 261, 264, 266, 267, 268, 270, 273, 274, 277, 281, 282, 283, 285, 286, 293, 295, 298, 299, 307, 308, 309, 310, 314, 317, 321, 323, 333, 334, 335, 339, 345, 351, 353, 354, 356, 357, 359, 360, 361, 364, 368, 373, 375, 377, 380, 384, 389, 390, 391, 393, 395, 396, 400, 401, 403, 404, 405, 410, 415, 417, 422, 425, 428, 429, 432, 436, 440, 442, 443, 444, 445, 446, 447, 449, 451, 453, 455, 456, 457, 458, 465, 466, 467, 470, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "intermedi": [7, 91, 96, 99, 107, 199, 204, 220, 240, 265, 276, 290, 307, 308, 347, 357, 404, 447, 482, 486, 489, 494], "facil": [7, 33, 67, 104, 113, 129, 155, 157, 168, 170, 190, 261, 269, 273, 279, 284, 286, 308, 314, 353, 357, 361, 371, 373, 384, 399, 443, 462, 464, 465, 476, 480], "level": [7, 13, 16, 22, 23, 24, 31, 32, 34, 35, 42, 43, 56, 58, 62, 67, 71, 78, 85, 86, 87, 90, 91, 92, 96, 98, 99, 101, 105, 106, 107, 108, 110, 112, 117, 118, 119, 120, 121, 129, 131, 132, 133, 137, 138, 141, 145, 147, 148, 149, 151, 152, 153, 159, 162, 163, 165, 171, 173, 176, 177, 179, 180, 182, 183, 190, 193, 194, 196, 203, 204, 207, 208, 216, 218, 221, 224, 225, 226, 227, 233, 237, 239, 240, 241, 244, 245, 246, 248, 250, 255, 256, 257, 259, 261, 262, 264, 265, 266, 269, 270, 271, 275, 276, 283, 284, 285, 286, 294, 296, 297, 298, 299, 300, 303, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 334, 336, 337, 339, 341, 345, 346, 348, 349, 351, 356, 357, 359, 363, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 384, 390, 391, 396, 398, 400, 401, 403, 404, 410, 414, 415, 417, 418, 422, 424, 425, 426, 428, 430, 434, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 454, 455, 456, 460, 465, 466, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498], "side": [7, 14, 33, 59, 67, 85, 87, 90, 96, 97, 107, 114, 116, 117, 119, 120, 133, 138, 145, 160, 164, 167, 173, 179, 182, 190, 194, 200, 203, 204, 210, 224, 237, 240, 256, 257, 265, 281, 284, 298, 303, 308, 314, 317, 326, 333, 338, 339, 345, 353, 354, 360, 364, 368, 375, 377, 384, 391, 401, 403, 404, 422, 428, 440, 442, 445, 447, 451, 456, 457, 464, 465, 467, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "export": [7, 23, 35, 42, 43, 45, 48, 62, 67, 71, 80, 83, 84, 85, 89, 97, 99, 120, 121, 129, 133, 163, 188, 196, 225, 306, 314, 321, 353, 356, 360, 368, 370, 393, 451, 465, 471, 480, 484, 489, 490, 492, 493, 494, 495, 496], "section": [7, 16, 17, 34, 35, 42, 51, 54, 57, 62, 63, 71, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 97, 99, 100, 104, 105, 107, 110, 111, 112, 113, 114, 116, 119, 120, 121, 125, 131, 133, 137, 138, 142, 144, 145, 146, 147, 148, 149, 151, 156, 158, 160, 164, 168, 171, 173, 180, 182, 188, 189, 194, 197, 199, 207, 208, 209, 212, 216, 217, 226, 239, 244, 249, 255, 256, 257, 261, 262, 264, 272, 273, 276, 277, 282, 283, 286, 307, 308, 314, 318, 320, 322, 323, 329, 334, 341, 343, 347, 353, 356, 357, 360, 361, 363, 364, 368, 373, 380, 382, 384, 399, 401, 403, 404, 405, 409, 410, 422, 424, 425, 426, 428, 430, 431, 434, 437, 441, 442, 443, 444, 445, 447, 450, 451, 452, 455, 456, 457, 458, 459, 461, 465, 466, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "consum": [7, 58, 62, 63, 67, 96, 97, 107, 108, 116, 117, 125, 131, 134, 137, 139, 146, 148, 164, 171, 182, 188, 204, 208, 221, 245, 256, 273, 276, 277, 298, 303, 307, 308, 311, 313, 323, 331, 334, 337, 345, 363, 368, 377, 380, 397, 401, 404, 409, 424, 428, 439, 443, 446, 463, 470, 477, 481, 482, 483, 484, 488, 489, 490, 491, 493, 495], "sever": [7, 24, 28, 33, 35, 42, 65, 71, 72, 74, 80, 81, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 105, 106, 107, 108, 112, 113, 114, 116, 117, 119, 120, 121, 123, 131, 133, 136, 137, 138, 146, 147, 149, 163, 170, 171, 173, 174, 179, 180, 181, 189, 190, 196, 197, 199, 201, 204, 207, 209, 213, 226, 227, 237, 239, 250, 255, 261, 265, 270, 272, 274, 282, 283, 284, 286, 288, 296, 298, 302, 307, 308, 309, 310, 314, 321, 322, 323, 326, 334, 336, 344, 348, 350, 351, 353, 354, 356, 357, 358, 360, 363, 364, 373, 380, 383, 384, 390, 391, 393, 395, 396, 399, 401, 402, 403, 404, 405, 407, 410, 415, 417, 420, 421, 424, 430, 434, 439, 440, 441, 442, 443, 447, 449, 451, 454, 456, 458, 460, 461, 464, 465, 474, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "obtain": [7, 31, 35, 63, 67, 90, 98, 104, 111, 113, 116, 122, 132, 138, 149, 162, 164, 165, 166, 190, 196, 199, 203, 210, 211, 217, 219, 222, 229, 239, 246, 249, 262, 269, 273, 274, 276, 281, 282, 283, 284, 285, 293, 298, 307, 308, 309, 323, 326, 328, 333, 334, 353, 357, 360, 364, 367, 375, 381, 404, 410, 413, 414, 417, 422, 428, 429, 430, 441, 442, 445, 451, 455, 456, 459, 464, 476, 477, 479, 480, 482, 483, 489, 490, 491, 492, 493, 494], "simpl": [7, 33, 35, 43, 62, 63, 66, 67, 72, 74, 75, 77, 80, 81, 83, 86, 87, 92, 96, 97, 98, 101, 104, 106, 107, 111, 112, 114, 118, 119, 120, 121, 124, 126, 131, 133, 148, 150, 152, 153, 154, 163, 164, 168, 171, 174, 180, 182, 183, 186, 187, 189, 194, 196, 197, 200, 202, 203, 208, 210, 214, 219, 221, 222, 223, 236, 237, 240, 241, 244, 248, 256, 258, 262, 269, 271, 277, 282, 283, 284, 286, 288, 293, 298, 304, 307, 308, 310, 312, 314, 319, 322, 323, 331, 333, 334, 337, 339, 344, 348, 351, 353, 359, 360, 361, 363, 373, 374, 377, 380, 382, 384, 393, 395, 396, 399, 400, 401, 403, 405, 406, 409, 410, 414, 415, 417, 418, 421, 423, 424, 425, 426, 428, 429, 434, 435, 436, 437, 442, 445, 446, 448, 454, 455, 456, 457, 458, 460, 461, 464, 466, 470, 476, 477, 478, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 495, 496, 498], "orient": [7, 42, 67, 88, 92, 93, 97, 99, 105, 107, 119, 145, 163, 215, 233, 236, 269, 298, 323, 353, 360, 380, 381, 383, 384, 391, 403, 455, 460, 478, 483, 489, 491], "multi": [7, 16, 32, 33, 35, 67, 83, 85, 96, 97, 98, 99, 106, 107, 112, 114, 116, 119, 124, 129, 133, 152, 162, 163, 199, 203, 204, 207, 239, 248, 261, 265, 276, 282, 283, 285, 298, 318, 331, 334, 337, 340, 346, 347, 356, 359, 360, 380, 382, 422, 435, 437, 442, 450, 456, 460, 463, 464, 465, 470, 476, 477, 482, 484, 487, 490, 491, 495, 498], "seri": [7, 33, 92, 99, 107, 116, 118, 123, 131, 133, 168, 173, 188, 189, 199, 204, 239, 249, 307, 329, 353, 360, 370, 380, 390, 401, 404, 405, 409, 422, 445, 456, 464, 465, 479, 481, 482, 483, 484, 487, 491, 494, 498], "intern": [7, 8, 9, 10, 11, 22, 23, 24, 30, 31, 33, 34, 35, 41, 42, 45, 54, 58, 60, 62, 63, 67, 71, 85, 87, 88, 90, 92, 96, 99, 104, 105, 107, 109, 113, 114, 116, 119, 120, 123, 129, 131, 132, 133, 138, 139, 140, 147, 148, 150, 151, 153, 155, 162, 167, 168, 170, 171, 173, 174, 180, 188, 189, 194, 196, 197, 199, 204, 207, 213, 218, 221, 222, 224, 227, 249, 251, 257, 259, 261, 265, 269, 270, 273, 276, 280, 281, 282, 284, 285, 290, 291, 293, 298, 308, 312, 313, 314, 317, 322, 323, 329, 331, 333, 337, 343, 346, 347, 348, 350, 353, 356, 357, 362, 363, 364, 366, 368, 373, 374, 377, 380, 381, 384, 390, 391, 396, 399, 401, 403, 410, 413, 414, 415, 417, 425, 426, 428, 430, 434, 437, 438, 439, 445, 453, 456, 465, 471, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "readinto": [7, 162, 256, 273, 314, 483, 490, 492], "argument": [7, 9, 10, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 42, 47, 48, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 72, 78, 80, 83, 84, 85, 87, 88, 90, 91, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 132, 133, 138, 140, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 190, 191, 194, 196, 197, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 306, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 328, 329, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 363, 367, 368, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 388, 391, 393, 394, 395, 396, 399, 400, 401, 403, 404, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 425, 426, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 451, 452, 454, 455, 457, 458, 460, 461, 464, 465, 467, 470, 471, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496], "select": [7, 56, 58, 63, 65, 67, 71, 72, 80, 96, 98, 99, 105, 106, 108, 113, 116, 117, 119, 122, 131, 133, 134, 138, 150, 152, 154, 167, 173, 182, 189, 190, 224, 225, 227, 237, 239, 244, 256, 260, 261, 262, 265, 266, 269, 273, 275, 276, 277, 281, 283, 285, 296, 298, 303, 308, 314, 320, 323, 326, 328, 333, 344, 348, 351, 353, 354, 356, 360, 361, 363, 364, 375, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 399, 401, 405, 410, 418, 422, 428, 432, 439, 442, 443, 444, 445, 447, 458, 461, 466, 467, 468, 471, 474, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 492, 493, 494, 495, 496], "reject": [7, 111, 116, 180, 257, 262, 290, 333, 373, 401, 450, 451, 477, 484, 491, 493], "acquir": [7, 33, 48, 85, 101, 108, 126, 150, 182, 222, 229, 264, 282, 286, 298, 308, 348, 357, 373, 380, 389, 443, 482, 483, 484, 485, 488, 489, 490, 492, 494], "over": [7, 13, 22, 23, 24, 29, 33, 35, 36, 42, 48, 49, 57, 63, 67, 71, 75, 85, 86, 87, 90, 92, 96, 99, 103, 104, 105, 106, 107, 113, 114, 116, 117, 119, 122, 131, 132, 133, 134, 135, 138, 142, 145, 154, 157, 160, 164, 165, 173, 174, 179, 180, 183, 189, 190, 196, 197, 199, 203, 204, 207, 210, 215, 216, 218, 219, 225, 233, 237, 239, 240, 243, 244, 246, 250, 257, 261, 262, 265, 267, 268, 269, 273, 274, 276, 281, 282, 283, 284, 286, 291, 293, 298, 303, 308, 314, 315, 320, 321, 323, 329, 333, 334, 337, 343, 344, 347, 351, 353, 356, 357, 359, 360, 361, 364, 368, 373, 375, 377, 382, 384, 390, 391, 392, 393, 395, 399, 400, 401, 403, 404, 405, 412, 413, 415, 422, 424, 425, 427, 428, 434, 437, 439, 442, 443, 445, 447, 450, 454, 455, 456, 457, 461, 467, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495], "target": [7, 33, 35, 63, 67, 71, 72, 74, 80, 96, 105, 110, 113, 114, 121, 131, 133, 138, 145, 148, 173, 182, 184, 196, 199, 204, 225, 255, 256, 261, 265, 266, 270, 283, 284, 298, 299, 306, 307, 308, 311, 329, 331, 334, 347, 348, 353, 354, 356, 367, 373, 375, 377, 380, 384, 386, 401, 403, 404, 414, 422, 425, 428, 430, 434, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 451, 456, 457, 470, 473, 475, 476, 480, 482, 483, 485, 487, 489, 490, 491, 494, 495], "pyobject_getbuff": [7, 48, 56, 62, 483, 488], "right": [7, 15, 16, 42, 47, 63, 67, 68, 71, 72, 74, 75, 80, 83, 84, 85, 90, 97, 99, 104, 107, 114, 116, 117, 119, 121, 123, 132, 133, 134, 154, 157, 159, 160, 164, 167, 168, 171, 173, 182, 189, 190, 196, 199, 203, 204, 207, 210, 227, 230, 239, 240, 241, 249, 261, 262, 270, 282, 289, 290, 303, 304, 306, 307, 308, 310, 311, 314, 317, 323, 329, 334, 345, 353, 357, 360, 361, 379, 384, 389, 390, 391, 399, 403, 404, 405, 410, 415, 418, 419, 426, 439, 440, 441, 442, 443, 445, 446, 450, 451, 455, 456, 457, 461, 464, 467, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 491, 493, 494, 495], "sibl": [7, 97, 123, 131, 239, 391, 425, 465], "isn": [7, 22, 23, 25, 31, 33, 51, 62, 67, 71, 72, 78, 85, 88, 91, 96, 97, 99, 100, 101, 104, 105, 106, 111, 112, 114, 116, 117, 119, 121, 125, 126, 131, 133, 141, 145, 151, 160, 170, 171, 179, 182, 188, 196, 204, 207, 210, 216, 218, 219, 241, 248, 250, 257, 262, 270, 273, 284, 308, 311, 317, 329, 333, 334, 353, 354, 357, 358, 359, 368, 370, 384, 393, 403, 404, 405, 409, 418, 420, 421, 422, 424, 434, 443, 451, 455, 456, 457, 463, 464, 475, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489], "anymor": [7, 11, 31, 33, 48, 62, 63, 92, 97, 99, 117, 145, 239, 241, 277, 298, 308, 312, 353, 368, 484, 485, 489, 490, 495], "could": [7, 23, 31, 33, 35, 42, 47, 55, 62, 71, 72, 75, 76, 83, 85, 88, 89, 90, 95, 97, 99, 100, 104, 105, 106, 107, 112, 113, 114, 117, 118, 119, 120, 121, 123, 125, 127, 131, 133, 138, 140, 141, 144, 145, 147, 150, 154, 164, 168, 173, 180, 189, 190, 196, 207, 214, 215, 220, 222, 227, 230, 237, 239, 241, 242, 244, 250, 251, 259, 261, 264, 270, 273, 274, 276, 277, 282, 283, 284, 286, 298, 306, 307, 308, 310, 311, 312, 314, 318, 323, 326, 329, 333, 334, 336, 344, 346, 348, 353, 356, 364, 368, 373, 377, 380, 383, 384, 397, 401, 403, 404, 405, 409, 410, 412, 413, 417, 422, 425, 437, 440, 443, 445, 447, 449, 450, 451, 454, 455, 456, 458, 459, 461, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "lead": [7, 10, 18, 39, 62, 63, 71, 85, 87, 90, 97, 98, 106, 111, 112, 113, 114, 116, 127, 133, 151, 163, 164, 168, 176, 180, 196, 199, 201, 203, 207, 210, 213, 219, 222, 227, 235, 239, 242, 245, 257, 259, 261, 264, 265, 270, 273, 274, 276, 282, 284, 286, 290, 291, 298, 308, 309, 311, 312, 314, 323, 329, 333, 353, 357, 359, 360, 361, 363, 368, 369, 371, 373, 374, 377, 379, 381, 382, 396, 403, 404, 409, 410, 415, 424, 425, 428, 437, 442, 443, 444, 445, 447, 450, 451, 452, 455, 456, 461, 465, 470, 476, 477, 480, 481, 482, 483, 485, 490, 491, 493, 494, 495, 496], "variou": [7, 10, 20, 24, 35, 42, 57, 61, 62, 64, 67, 71, 72, 76, 80, 85, 86, 87, 91, 92, 97, 99, 103, 104, 105, 106, 107, 116, 117, 118, 119, 121, 123, 128, 131, 145, 159, 164, 171, 173, 182, 187, 188, 189, 191, 194, 199, 203, 207, 208, 211, 217, 222, 225, 227, 230, 231, 241, 244, 250, 256, 257, 264, 265, 269, 273, 274, 276, 279, 283, 288, 292, 293, 296, 300, 305, 307, 308, 311, 313, 315, 318, 323, 329, 333, 341, 346, 351, 353, 354, 355, 356, 357, 360, 361, 363, 368, 369, 373, 377, 381, 384, 399, 400, 402, 403, 405, 410, 412, 422, 424, 428, 441, 443, 445, 447, 450, 451, 452, 454, 460, 462, 465, 468, 470, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495], "issu": [7, 24, 32, 33, 34, 56, 60, 65, 67, 80, 88, 92, 98, 99, 105, 108, 113, 114, 119, 125, 130, 131, 138, 147, 152, 168, 171, 189, 190, 194, 198, 199, 201, 217, 227, 235, 237, 239, 243, 249, 256, 261, 262, 273, 277, 281, 282, 286, 287, 289, 298, 299, 307, 308, 311, 314, 326, 348, 351, 353, 357, 360, 364, 377, 399, 401, 403, 404, 405, 414, 415, 417, 424, 427, 428, 436, 441, 458, 460, 467, 470, 473, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "resourc": [7, 23, 33, 48, 62, 67, 71, 78, 80, 92, 96, 97, 99, 103, 109, 112, 117, 118, 122, 130, 131, 133, 144, 145, 147, 150, 155, 179, 182, 201, 207, 226, 227, 240, 256, 262, 265, 266, 269, 272, 277, 282, 295, 298, 299, 308, 314, 317, 344, 347, 353, 357, 360, 368, 377, 380, 384, 391, 397, 403, 406, 409, 410, 413, 415, 420, 422, 424, 428, 431, 434, 443, 447, 458, 461, 467, 469, 470, 473, 480, 482, 483, 484, 487, 488, 489, 493, 496], "leak": [7, 33, 38, 45, 58, 59, 85, 99, 112, 114, 239, 241, 298, 308, 364, 368, 397, 445, 477, 478, 484, 485, 489, 491, 492, 496], "simpli": [7, 35, 62, 71, 74, 75, 76, 80, 84, 85, 87, 88, 90, 91, 96, 97, 99, 100, 101, 107, 111, 114, 116, 119, 121, 127, 131, 151, 152, 163, 165, 168, 171, 173, 180, 189, 190, 196, 199, 207, 237, 239, 244, 246, 254, 265, 270, 277, 282, 283, 284, 287, 298, 307, 308, 311, 312, 314, 318, 319, 329, 334, 339, 340, 348, 351, 356, 358, 361, 364, 368, 380, 400, 401, 403, 404, 405, 410, 415, 417, 418, 422, 424, 425, 426, 434, 436, 447, 455, 459, 461, 464, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 492], "programm": [7, 27, 32, 35, 62, 80, 85, 89, 90, 97, 98, 99, 104, 105, 113, 117, 118, 127, 134, 188, 190, 194, 196, 199, 207, 208, 227, 269, 281, 286, 290, 298, 307, 308, 310, 353, 356, 360, 363, 368, 383, 384, 390, 399, 405, 415, 417, 420, 442, 448, 451, 455, 458, 461, 465, 478, 479, 481, 482, 483, 489], "slice": [7, 16, 38, 40, 42, 53, 59, 67, 97, 99, 107, 132, 133, 154, 173, 181, 184, 189, 204, 220, 227, 239, 242, 276, 293, 298, 299, 306, 308, 311, 314, 333, 334, 356, 360, 381, 430, 446, 451, 457, 461, 464, 465, 477, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 494, 496, 498], "mechan": [7, 11, 14, 33, 35, 45, 60, 62, 85, 87, 90, 91, 96, 97, 99, 104, 105, 106, 113, 114, 116, 117, 121, 124, 125, 127, 138, 142, 143, 151, 156, 182, 189, 194, 206, 207, 211, 217, 239, 240, 257, 258, 259, 260, 262, 264, 266, 274, 275, 281, 282, 283, 284, 286, 287, 299, 307, 312, 314, 317, 329, 332, 334, 337, 339, 348, 351, 353, 354, 357, 360, 368, 373, 380, 384, 390, 391, 403, 410, 414, 415, 438, 441, 443, 447, 450, 451, 454, 455, 458, 462, 466, 477, 478, 479, 480, 481, 482, 484, 486, 487, 489, 490, 491, 492, 495, 496], "abil": [7, 74, 84, 85, 97, 99, 101, 104, 107, 113, 114, 116, 121, 122, 128, 133, 173, 206, 227, 241, 268, 283, 298, 307, 339, 347, 360, 361, 401, 403, 425, 436, 437, 438, 441, 442, 456, 478, 479, 480, 482, 483, 484, 487, 489, 490, 491, 492, 493], "quit": [7, 78, 80, 84, 85, 88, 92, 96, 97, 101, 104, 107, 108, 113, 114, 116, 117, 131, 157, 181, 182, 189, 190, 202, 214, 237, 250, 261, 273, 284, 290, 298, 303, 307, 312, 320, 324, 350, 351, 357, 384, 413, 445, 447, 449, 455, 456, 462, 463, 465, 466, 477, 478, 479, 480, 482, 490, 491], "easili": [7, 23, 42, 72, 74, 75, 84, 85, 88, 90, 92, 96, 97, 98, 101, 106, 111, 113, 114, 116, 125, 137, 151, 164, 171, 180, 182, 188, 189, 214, 239, 244, 246, 250, 270, 312, 334, 346, 360, 375, 377, 403, 417, 443, 450, 460, 461, 464, 466, 475, 476, 477, 480, 482, 486, 489, 490, 492, 493, 496], "manipul": [7, 33, 34, 35, 42, 45, 54, 67, 71, 85, 88, 107, 111, 114, 121, 157, 158, 173, 182, 188, 189, 190, 196, 199, 208, 209, 219, 221, 233, 252, 269, 271, 273, 284, 298, 300, 308, 311, 323, 339, 346, 347, 349, 353, 358, 359, 360, 366, 368, 378, 384, 390, 391, 409, 422, 425, 428, 435, 440, 447, 464, 466, 467, 469, 470, 477, 480, 483, 487, 488, 490, 491, 493, 495, 496], "system": [7, 16, 23, 24, 32, 33, 34, 35, 42, 62, 64, 67, 72, 74, 76, 77, 78, 80, 81, 83, 85, 86, 89, 90, 92, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 110, 113, 114, 116, 119, 120, 121, 124, 125, 126, 130, 132, 138, 145, 149, 152, 155, 157, 163, 168, 176, 177, 180, 182, 186, 187, 188, 189, 190, 196, 199, 200, 206, 221, 222, 223, 224, 227, 228, 233, 234, 237, 239, 242, 243, 244, 245, 256, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 297, 298, 301, 302, 309, 310, 311, 312, 314, 316, 317, 318, 320, 323, 324, 325, 326, 329, 330, 331, 333, 337, 339, 341, 343, 346, 347, 348, 349, 351, 353, 354, 356, 357, 358, 360, 363, 370, 371, 373, 375, 376, 377, 380, 381, 384, 390, 397, 399, 400, 401, 403, 404, 405, 406, 410, 414, 418, 420, 421, 422, 424, 425, 428, 429, 430, 431, 434, 435, 436, 440, 441, 443, 448, 450, 451, 452, 453, 454, 458, 459, 460, 461, 463, 465, 467, 468, 470, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 498], "around": [7, 23, 25, 31, 33, 43, 48, 58, 77, 84, 85, 88, 90, 91, 92, 107, 110, 112, 114, 117, 122, 125, 131, 143, 151, 152, 154, 161, 165, 168, 173, 180, 182, 190, 196, 199, 204, 207, 220, 229, 232, 239, 240, 250, 261, 264, 265, 270, 280, 284, 289, 290, 296, 298, 299, 302, 307, 308, 312, 317, 333, 334, 353, 357, 359, 368, 373, 375, 377, 384, 391, 396, 399, 401, 403, 417, 442, 443, 446, 454, 455, 456, 457, 458, 462, 469, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495], "nativ": [7, 25, 33, 41, 63, 67, 71, 98, 119, 126, 158, 167, 171, 182, 183, 189, 196, 197, 222, 227, 249, 273, 308, 311, 345, 353, 356, 360, 368, 380, 383, 385, 399, 437, 447, 474, 476, 479, 484, 485, 489, 490, 491, 493, 494, 495, 496], "contrari": [7, 60, 90, 203, 461], "wrapper": [7, 18, 21, 23, 24, 25, 31, 42, 44, 48, 57, 58, 67, 77, 90, 98, 99, 104, 105, 114, 118, 125, 138, 149, 152, 159, 161, 173, 180, 182, 189, 190, 204, 207, 229, 240, 250, 265, 269, 270, 275, 282, 290, 296, 298, 302, 308, 314, 317, 343, 353, 361, 377, 379, 383, 384, 396, 415, 422, 425, 428, 434, 440, 442, 443, 455, 466, 477, 478, 479, 481, 482, 483, 484, 488, 489, 491, 492, 495], "instruct": [7, 13, 67, 71, 80, 81, 89, 90, 96, 98, 99, 107, 108, 110, 121, 164, 188, 199, 207, 254, 270, 279, 307, 308, 323, 329, 348, 356, 357, 403, 425, 428, 430, 443, 445, 470, 477, 482, 484, 487, 488, 489, 491, 495, 496], "start": [7, 9, 10, 11, 22, 23, 25, 33, 34, 35, 42, 55, 56, 62, 63, 65, 67, 71, 72, 75, 78, 80, 81, 84, 87, 88, 90, 91, 92, 95, 96, 97, 99, 101, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 125, 126, 128, 131, 132, 133, 134, 136, 137, 138, 142, 144, 145, 148, 149, 150, 151, 154, 155, 157, 159, 163, 164, 166, 170, 171, 173, 174, 177, 179, 181, 182, 189, 190, 191, 194, 196, 197, 200, 202, 203, 204, 207, 208, 213, 215, 217, 219, 222, 225, 227, 229, 231, 234, 236, 237, 239, 241, 244, 245, 247, 250, 254, 256, 257, 259, 261, 262, 264, 266, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 286, 287, 290, 293, 296, 299, 303, 305, 307, 308, 309, 311, 312, 314, 315, 317, 320, 321, 323, 324, 327, 328, 329, 331, 333, 334, 335, 347, 349, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 369, 371, 373, 377, 380, 381, 384, 386, 391, 393, 395, 396, 397, 401, 403, 409, 410, 414, 415, 417, 418, 422, 425, 426, 428, 430, 432, 436, 437, 439, 441, 442, 443, 445, 446, 447, 450, 451, 453, 454, 455, 456, 457, 459, 463, 464, 466, 467, 470, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "logic": [7, 67, 71, 80, 90, 96, 97, 100, 107, 112, 114, 125, 151, 174, 182, 190, 194, 204, 207, 221, 235, 246, 271, 282, 284, 285, 286, 296, 305, 306, 308, 311, 317, 334, 360, 361, 371, 377, 384, 388, 392, 401, 403, 442, 451, 456, 467, 477, 480, 481, 483, 484, 490, 494, 495], "physic": [7, 67, 71, 99, 104, 190, 207, 261, 267, 293, 296, 309, 353, 360, 365, 392, 393, 399, 420, 447, 464, 482, 494], "neg": [7, 18, 23, 31, 38, 39, 42, 45, 47, 53, 57, 59, 62, 63, 65, 71, 105, 106, 107, 112, 116, 118, 126, 131, 132, 133, 145, 149, 159, 162, 163, 166, 167, 171, 173, 175, 188, 189, 190, 191, 196, 199, 223, 225, 235, 239, 240, 273, 274, 276, 277, 281, 285, 290, 293, 298, 306, 308, 311, 314, 323, 333, 334, 335, 343, 347, 348, 353, 356, 357, 359, 360, 361, 364, 368, 380, 381, 384, 387, 396, 399, 425, 428, 442, 443, 445, 446, 451, 456, 457, 461, 464, 477, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "begin": [7, 18, 23, 35, 57, 71, 76, 85, 87, 88, 90, 91, 96, 97, 98, 99, 107, 114, 116, 117, 121, 128, 131, 163, 164, 168, 173, 180, 190, 191, 196, 199, 203, 207, 210, 215, 223, 229, 237, 245, 261, 264, 265, 270, 272, 273, 277, 285, 286, 293, 298, 303, 308, 309, 311, 312, 316, 317, 329, 334, 335, 339, 349, 351, 356, 357, 360, 361, 363, 365, 373, 374, 375, 377, 379, 382, 384, 391, 393, 403, 416, 428, 430, 431, 440, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 461, 464, 465, 469, 470, 471, 476, 479, 482, 483, 484, 487, 493, 494], "obj": [7, 9, 10, 23, 24, 26, 28, 33, 36, 39, 43, 45, 48, 49, 51, 62, 63, 87, 89, 90, 96, 97, 99, 105, 106, 107, 114, 123, 141, 151, 155, 171, 174, 189, 192, 194, 207, 211, 222, 225, 227, 239, 241, 270, 274, 277, 293, 298, 306, 314, 336, 360, 361, 377, 397, 401, 403, 404, 417, 436, 443, 446, 455, 456, 477, 478, 479, 480, 481, 482, 483, 487, 488, 492, 494, 495], "automat": [7, 12, 23, 28, 33, 35, 45, 54, 58, 60, 61, 62, 67, 72, 74, 75, 80, 81, 83, 85, 87, 88, 96, 97, 98, 99, 104, 107, 108, 111, 116, 117, 119, 121, 122, 123, 131, 138, 144, 145, 148, 150, 151, 152, 153, 164, 168, 171, 173, 174, 180, 181, 182, 188, 189, 190, 194, 197, 199, 200, 203, 204, 206, 207, 210, 215, 219, 220, 222, 223, 227, 237, 239, 240, 241, 246, 248, 254, 256, 257, 262, 265, 270, 281, 282, 283, 285, 286, 287, 293, 296, 298, 303, 307, 308, 309, 312, 314, 321, 323, 328, 333, 335, 338, 343, 345, 347, 349, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 365, 368, 371, 373, 375, 377, 380, 381, 382, 383, 384, 391, 399, 401, 403, 404, 405, 409, 410, 416, 417, 420, 422, 426, 430, 434, 437, 438, 439, 441, 443, 444, 445, 447, 451, 453, 455, 456, 458, 461, 462, 464, 465, 466, 467, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496], "temporari": [7, 22, 40, 49, 51, 54, 62, 67, 71, 72, 74, 99, 108, 114, 120, 121, 123, 157, 189, 207, 233, 237, 261, 267, 269, 273, 276, 281, 286, 287, 298, 308, 312, 339, 341, 356, 360, 368, 373, 377, 397, 403, 410, 417, 450, 473, 479, 481, 483, 489, 490, 491, 496], "pymemoryview_frombuff": [7, 43, 56, 488], "pybuffer_fillinfo": [7, 56, 62, 488], "NOT": [7, 62, 120, 257, 364, 401, 422, 441, 445, 446, 493], "scheme": [7, 31, 62, 67, 87, 107, 114, 117, 120, 134, 148, 154, 171, 189, 224, 261, 264, 284, 286, 330, 332, 333, 349, 356, 357, 368, 373, 390, 409, 410, 414, 422, 443, 470, 477, 478, 480, 483, 484, 488, 489, 490, 491, 492], "len": [7, 8, 9, 22, 38, 40, 41, 49, 53, 54, 59, 67, 88, 97, 99, 105, 106, 108, 114, 116, 117, 119, 125, 152, 154, 155, 160, 162, 164, 173, 174, 179, 183, 189, 201, 203, 204, 207, 225, 229, 239, 240, 244, 249, 250, 256, 261, 276, 284, 293, 298, 299, 303, 306, 307, 308, 320, 333, 335, 351, 353, 356, 357, 360, 363, 377, 397, 400, 404, 415, 422, 423, 425, 428, 442, 443, 450, 455, 456, 457, 458, 464, 465, 466, 477, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 495], "product": [7, 15, 67, 74, 92, 96, 107, 113, 133, 137, 156, 199, 207, 239, 250, 259, 261, 276, 284, 290, 333, 342, 359, 360, 368, 399, 403, 404, 436, 441, 445, 450, 455, 465, 474, 477, 478, 482, 483, 484, 486, 490, 493, 495], "items": [7, 60, 132, 298, 353, 360], "represent": [7, 9, 15, 18, 23, 25, 39, 41, 49, 57, 58, 62, 63, 67, 71, 80, 81, 87, 88, 97, 99, 108, 113, 117, 119, 131, 132, 133, 159, 167, 171, 173, 180, 189, 190, 191, 195, 196, 199, 204, 210, 211, 215, 218, 219, 221, 226, 227, 239, 250, 256, 258, 259, 262, 265, 268, 274, 277, 281, 282, 286, 287, 296, 298, 305, 308, 311, 314, 322, 329, 333, 336, 345, 353, 356, 360, 361, 362, 363, 368, 377, 381, 387, 392, 396, 399, 401, 403, 404, 423, 425, 428, 441, 443, 447, 460, 461, 467, 477, 481, 482, 483, 484, 486, 488, 489, 491, 492, 493, 495, 496, 498], "guarante": [7, 9, 11, 18, 24, 33, 35, 42, 53, 56, 57, 58, 60, 62, 63, 66, 71, 84, 85, 88, 92, 97, 99, 100, 104, 107, 110, 118, 126, 132, 133, 138, 150, 151, 173, 189, 196, 199, 204, 207, 210, 219, 237, 239, 246, 249, 257, 265, 270, 273, 277, 289, 290, 291, 293, 298, 303, 307, 308, 311, 314, 323, 331, 333, 339, 343, 346, 354, 360, 363, 364, 368, 375, 377, 379, 380, 393, 401, 413, 415, 417, 420, 422, 423, 428, 430, 440, 442, 443, 447, 456, 476, 481, 482, 484, 486, 487, 489, 490, 493, 494, 495, 496], "pybuf_simpl": 7, "pybuf_writ": [7, 43, 483], "flag": [7, 9, 10, 13, 18, 24, 28, 33, 34, 43, 49, 57, 58, 60, 62, 63, 65, 67, 71, 84, 85, 87, 88, 101, 111, 112, 113, 114, 118, 119, 123, 124, 125, 129, 134, 138, 148, 150, 155, 156, 157, 168, 171, 189, 190, 194, 196, 197, 199, 200, 201, 204, 210, 221, 222, 223, 225, 229, 239, 241, 252, 257, 262, 272, 273, 279, 281, 282, 283, 286, 291, 293, 296, 297, 298, 303, 308, 311, 316, 320, 321, 322, 328, 329, 330, 332, 343, 345, 347, 348, 349, 353, 354, 356, 357, 358, 360, 361, 364, 368, 372, 375, 376, 377, 378, 380, 381, 391, 400, 401, 403, 409, 410, 415, 421, 422, 423, 434, 435, 437, 440, 442, 443, 447, 465, 470, 473, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "struct": [7, 15, 16, 21, 26, 31, 33, 35, 39, 45, 56, 57, 60, 62, 65, 67, 85, 87, 88, 90, 96, 98, 112, 114, 132, 154, 158, 189, 229, 239, 269, 283, 284, 299, 353, 360, 381, 434, 455, 467, 479, 482, 483, 484, 487, 488, 489, 494, 495, 496], "calcsiz": [7, 239, 353, 360, 363], "import": [7, 11, 23, 24, 32, 33, 34, 35, 42, 45, 58, 62, 64, 65, 67, 71, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 134, 135, 137, 138, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 168, 173, 175, 176, 179, 180, 181, 182, 183, 185, 186, 188, 189, 194, 196, 197, 199, 200, 201, 203, 204, 206, 207, 209, 210, 214, 216, 219, 221, 222, 223, 227, 228, 229, 230, 232, 234, 235, 237, 239, 240, 242, 244, 245, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 267, 269, 270, 272, 273, 276, 277, 279, 280, 281, 285, 286, 287, 290, 291, 293, 294, 298, 299, 303, 307, 308, 309, 311, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 390, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 409, 410, 411, 413, 414, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 430, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446, 448, 450, 453, 455, 456, 457, 458, 459, 460, 461, 463, 466, 467, 468, 470, 471, 474, 476, 477, 479, 484, 485, 486, 487, 489, 492, 493, 494, 495, 496, 498], "pybuf_format": 7, "still": [7, 9, 10, 23, 28, 31, 33, 34, 35, 48, 62, 71, 75, 76, 80, 84, 85, 87, 88, 89, 90, 92, 93, 96, 97, 99, 104, 106, 107, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 127, 131, 132, 133, 145, 151, 156, 164, 171, 173, 176, 180, 182, 183, 188, 189, 190, 194, 199, 207, 208, 216, 220, 222, 227, 239, 240, 241, 244, 246, 257, 261, 265, 267, 270, 282, 283, 284, 286, 290, 293, 298, 299, 307, 308, 310, 314, 323, 329, 334, 337, 338, 339, 343, 345, 348, 349, 353, 354, 356, 357, 360, 361, 364, 368, 375, 377, 379, 380, 384, 391, 397, 400, 401, 403, 404, 405, 410, 417, 422, 424, 425, 428, 431, 441, 442, 443, 445, 447, 450, 451, 455, 457, 458, 459, 461, 465, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "present": [7, 22, 31, 34, 39, 45, 49, 56, 62, 67, 74, 80, 85, 86, 89, 91, 92, 97, 98, 104, 105, 106, 107, 110, 113, 114, 116, 117, 118, 119, 120, 121, 125, 126, 131, 133, 134, 156, 159, 160, 164, 165, 166, 168, 171, 173, 174, 180, 189, 190, 194, 197, 199, 203, 204, 207, 210, 211, 219, 224, 227, 229, 235, 239, 240, 241, 249, 250, 251, 253, 255, 257, 259, 261, 265, 266, 270, 274, 277, 282, 283, 284, 286, 291, 293, 299, 301, 303, 307, 308, 311, 312, 314, 318, 322, 323, 328, 329, 332, 334, 337, 346, 350, 351, 353, 357, 360, 361, 368, 373, 374, 377, 379, 380, 381, 382, 384, 386, 388, 390, 391, 393, 396, 399, 401, 403, 409, 410, 417, 422, 425, 428, 430, 434, 436, 438, 439, 442, 443, 445, 447, 450, 451, 456, 458, 461, 465, 471, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "hold": [7, 9, 14, 23, 33, 35, 45, 54, 57, 62, 65, 75, 78, 85, 90, 92, 97, 98, 99, 105, 112, 113, 114, 117, 121, 131, 132, 133, 134, 136, 151, 180, 182, 183, 189, 195, 196, 199, 204, 217, 227, 229, 250, 256, 259, 264, 270, 272, 283, 284, 286, 298, 299, 307, 308, 317, 323, 334, 337, 340, 345, 350, 353, 357, 360, 364, 368, 377, 380, 384, 396, 403, 417, 420, 426, 428, 430, 439, 441, 443, 447, 451, 459, 465, 477, 478, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496], "navig": [7, 67, 104, 190, 311, 328, 383, 390], "disregard": [7, 33, 360], "string": [7, 8, 9, 10, 11, 14, 16, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 45, 47, 49, 52, 57, 58, 62, 64, 65, 67, 71, 72, 74, 75, 76, 80, 84, 85, 87, 88, 91, 92, 99, 100, 101, 104, 105, 107, 108, 110, 111, 113, 114, 117, 118, 120, 121, 123, 124, 125, 128, 131, 132, 133, 134, 138, 139, 145, 149, 151, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 177, 180, 182, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 199, 201, 203, 204, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 252, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 277, 278, 281, 282, 283, 284, 286, 287, 289, 291, 293, 296, 297, 298, 299, 301, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 365, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 470, 471, 476, 478, 479, 482, 484, 486, 487, 489, 491, 492, 498], "ndim": [7, 360], "dimens": [7, 189, 190, 290, 347, 360, 483, 490, 495], "dimension": [7, 99, 217, 290, 314, 333, 360, 390, 399, 490, 492], "scalar": [7, 154, 210, 213, 240, 399, 401], "maximum": [7, 25, 35, 58, 63, 97, 105, 107, 113, 114, 116, 126, 138, 151, 152, 154, 164, 167, 171, 173, 176, 179, 180, 188, 189, 190, 199, 203, 209, 216, 217, 222, 227, 237, 249, 261, 276, 277, 284, 285, 290, 293, 296, 298, 303, 308, 314, 320, 322, 334, 335, 336, 337, 344, 350, 353, 355, 356, 357, 359, 361, 364, 368, 373, 379, 380, 391, 393, 397, 399, 403, 409, 410, 422, 428, 450, 454, 470, 477, 479, 480, 482, 483, 484, 489, 490, 492, 493, 494], "pybuf_max_ndim": 7, "restrict": [7, 42, 67, 85, 87, 88, 90, 101, 105, 112, 114, 116, 126, 131, 132, 133, 163, 171, 173, 189, 190, 196, 199, 203, 219, 237, 239, 244, 249, 261, 271, 272, 277, 298, 308, 313, 323, 327, 334, 342, 353, 356, 357, 360, 361, 362, 364, 369, 380, 381, 401, 404, 425, 428, 434, 435, 441, 442, 443, 445, 446, 450, 451, 455, 456, 470, 476, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "attent": [7, 112, 116, 190, 399, 456, 465, 480, 489, 491], "further": [7, 33, 41, 62, 67, 85, 87, 88, 90, 91, 92, 97, 99, 100, 107, 111, 113, 114, 117, 119, 120, 127, 130, 133, 134, 151, 152, 157, 162, 164, 166, 171, 182, 186, 189, 194, 200, 204, 207, 225, 227, 232, 239, 242, 246, 254, 261, 281, 282, 284, 285, 290, 297, 307, 308, 310, 312, 314, 334, 347, 348, 353, 354, 356, 357, 360, 361, 368, 369, 381, 384, 396, 401, 424, 425, 428, 430, 436, 439, 440, 442, 443, 445, 447, 450, 455, 470, 476, 477, 478, 479, 480, 481, 483, 484, 490, 494, 495], "skip": [7, 14, 33, 34, 35, 57, 67, 71, 96, 107, 108, 116, 117, 119, 157, 166, 171, 173, 176, 180, 182, 196, 200, 204, 207, 218, 219, 224, 232, 237, 264, 265, 270, 272, 276, 277, 282, 286, 287, 312, 319, 334, 346, 349, 358, 360, 363, 368, 373, 377, 391, 401, 414, 428, 430, 441, 442, 451, 458, 467, 470, 476, 477, 479, 480, 481, 482, 483, 484, 486, 488, 489, 491, 496], "regular": [7, 11, 34, 62, 67, 71, 73, 78, 81, 88, 90, 92, 96, 97, 99, 105, 107, 108, 109, 114, 121, 127, 131, 133, 138, 145, 173, 174, 176, 180, 182, 188, 189, 194, 199, 207, 214, 224, 234, 239, 240, 248, 250, 257, 261, 269, 270, 276, 281, 283, 308, 309, 311, 314, 323, 326, 343, 348, 351, 353, 357, 358, 360, 361, 368, 373, 374, 377, 378, 399, 401, 403, 410, 415, 417, 443, 445, 450, 451, 455, 466, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "handl": [7, 14, 25, 31, 32, 33, 34, 35, 40, 42, 46, 49, 55, 57, 60, 62, 63, 65, 67, 71, 72, 78, 80, 85, 87, 88, 90, 91, 92, 96, 97, 98, 99, 101, 103, 104, 106, 107, 111, 112, 113, 116, 117, 119, 121, 123, 124, 126, 129, 131, 133, 134, 135, 136, 137, 142, 143, 144, 151, 152, 153, 155, 157, 159, 162, 164, 165, 167, 170, 171, 173, 179, 180, 182, 183, 188, 189, 194, 196, 199, 200, 202, 203, 204, 207, 210, 214, 215, 216, 217, 221, 222, 225, 226, 227, 229, 237, 239, 240, 244, 248, 254, 256, 258, 259, 261, 262, 264, 265, 268, 269, 270, 271, 273, 274, 277, 282, 283, 284, 285, 286, 290, 293, 297, 298, 304, 306, 308, 309, 310, 311, 312, 313, 323, 324, 326, 331, 333, 334, 336, 343, 345, 346, 347, 348, 350, 351, 353, 354, 358, 359, 360, 361, 364, 366, 368, 372, 373, 375, 377, 380, 381, 386, 390, 393, 401, 404, 405, 408, 410, 415, 417, 418, 419, 422, 424, 428, 430, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 447, 450, 451, 455, 456, 460, 461, 463, 464, 465, 466, 467, 470, 474, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 498], "along": [7, 35, 36, 71, 80, 90, 107, 112, 113, 114, 121, 131, 138, 148, 152, 153, 154, 162, 167, 176, 182, 189, 199, 207, 217, 219, 232, 244, 248, 249, 258, 262, 265, 266, 282, 284, 293, 308, 311, 314, 323, 344, 351, 353, 357, 360, 361, 364, 372, 384, 391, 395, 399, 401, 403, 404, 422, 429, 436, 441, 442, 458, 466, 477, 478, 479, 480, 481, 483, 484, 486, 487, 489, 491, 492], "nth": [7, 276, 391], "dictat": [7, 99, 180, 236, 239, 314, 353, 455, 476, 477, 483], "de": [7, 12, 41, 67, 83, 86, 92, 130, 156, 186, 190, 244, 257, 276, 289, 303, 314, 325, 360, 373, 401, 409, 434, 461, 487, 488, 491, 493, 494, 496], "might": [7, 23, 33, 35, 51, 57, 62, 63, 71, 72, 75, 80, 81, 85, 87, 88, 90, 93, 95, 97, 98, 100, 104, 106, 107, 108, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 133, 134, 144, 149, 151, 152, 154, 157, 159, 171, 189, 192, 194, 196, 204, 207, 210, 219, 221, 223, 227, 235, 237, 248, 249, 250, 252, 254, 257, 261, 273, 274, 281, 282, 283, 284, 286, 287, 293, 298, 299, 303, 307, 308, 310, 314, 317, 320, 321, 322, 323, 334, 351, 353, 356, 357, 360, 368, 370, 377, 380, 382, 384, 399, 401, 403, 404, 405, 409, 410, 415, 417, 423, 428, 437, 443, 447, 449, 455, 456, 457, 461, 462, 464, 465, 470, 475, 476, 477, 479, 480, 481, 482, 483, 484, 487, 489, 490, 491, 493, 494], "cast": [7, 33, 35, 42, 45, 57, 60, 63, 85, 88, 90, 108, 173, 189, 199, 276, 360, 396, 401, 488, 490, 494, 495], "freed": [7, 33, 42, 45, 67, 85, 87, 112, 114, 179, 241, 246, 250, 298, 308, 344, 443, 467, 478, 480, 482, 493], "alter": [7, 22, 42, 71, 97, 99, 138, 142, 166, 173, 199, 222, 257, 261, 262, 277, 283, 287, 314, 339, 360, 361, 399, 441, 443, 447, 467, 477, 481, 487, 489, 491, 493, 494, 495, 496], "limit": [7, 23, 26, 32, 33, 35, 39, 57, 58, 60, 62, 63, 67, 78, 87, 97, 104, 106, 107, 110, 114, 116, 123, 130, 131, 133, 138, 139, 143, 144, 145, 148, 149, 151, 155, 162, 171, 176, 179, 182, 186, 188, 197, 198, 199, 204, 215, 221, 222, 225, 228, 229, 235, 237, 239, 240, 249, 261, 262, 269, 272, 276, 283, 285, 291, 297, 298, 299, 300, 307, 308, 309, 310, 314, 318, 322, 327, 329, 331, 333, 334, 336, 339, 345, 348, 349, 350, 353, 356, 357, 359, 361, 364, 368, 373, 377, 380, 388, 390, 396, 397, 399, 404, 406, 420, 422, 425, 428, 436, 439, 441, 443, 444, 445, 447, 449, 450, 455, 457, 460, 470, 471, 473, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "64": [7, 42, 63, 67, 71, 97, 105, 106, 111, 117, 148, 156, 159, 189, 190, 196, 199, 239, 249, 274, 276, 285, 298, 299, 308, 318, 319, 321, 347, 353, 357, 360, 363, 368, 399, 419, 434, 436, 443, 457, 461, 464, 471, 476, 477, 479, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496], "send": [7, 36, 67, 91, 99, 104, 107, 113, 116, 117, 120, 134, 136, 138, 140, 142, 145, 148, 149, 152, 154, 155, 164, 165, 171, 174, 182, 190, 204, 208, 214, 215, 226, 237, 244, 256, 258, 259, 261, 262, 272, 282, 283, 284, 293, 298, 299, 303, 308, 314, 320, 331, 332, 344, 348, 350, 351, 353, 354, 357, 364, 371, 376, 377, 384, 399, 401, 410, 422, 434, 443, 445, 466, 467, 469, 477, 480, 481, 482, 484, 487, 488, 489, 490, 492, 493, 494, 496], "drastic": [7, 123], "exact": [7, 18, 35, 47, 71, 72, 80, 81, 92, 96, 105, 106, 107, 116, 117, 119, 122, 123, 138, 145, 162, 189, 190, 196, 199, 204, 207, 215, 225, 227, 239, 265, 269, 270, 285, 286, 290, 299, 305, 306, 307, 308, 314, 353, 359, 360, 363, 368, 370, 384, 393, 396, 403, 405, 414, 428, 436, 442, 445, 447, 448, 451, 459, 467, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 490, 491], "unambigu": [7, 90, 131, 133, 196, 283, 323, 351, 443, 451, 461, 483, 489], "influenc": [7, 71, 314, 353, 470, 483], "els": [7, 22, 35, 36, 41, 42, 52, 62, 63, 67, 71, 80, 84, 85, 87, 88, 90, 91, 96, 97, 98, 100, 101, 107, 112, 114, 116, 117, 120, 121, 124, 125, 133, 134, 138, 146, 148, 151, 164, 173, 179, 182, 186, 189, 196, 199, 203, 204, 207, 210, 214, 221, 240, 242, 244, 250, 254, 256, 261, 262, 264, 265, 276, 277, 282, 284, 286, 291, 298, 304, 306, 307, 308, 314, 324, 331, 333, 334, 344, 353, 356, 357, 358, 359, 360, 364, 368, 373, 375, 377, 380, 387, 393, 394, 399, 400, 401, 404, 414, 415, 417, 422, 425, 436, 437, 443, 445, 446, 447, 449, 450, 451, 458, 460, 467, 470, 476, 477, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 496], "choic": [7, 67, 71, 85, 90, 96, 97, 98, 101, 114, 117, 120, 129, 164, 167, 177, 207, 225, 239, 244, 246, 261, 270, 282, 283, 286, 298, 307, 323, 329, 333, 339, 341, 344, 345, 357, 359, 360, 363, 390, 446, 449, 456, 461, 463, 466, 474, 475, 479, 482, 489, 492, 493, 494], "correctli": [7, 25, 45, 57, 62, 65, 88, 90, 97, 105, 111, 112, 114, 127, 128, 131, 164, 171, 182, 188, 196, 199, 207, 210, 211, 217, 222, 223, 239, 245, 261, 274, 281, 290, 293, 308, 339, 356, 360, 373, 377, 384, 401, 404, 405, 420, 422, 443, 447, 450, 457, 458, 476, 479, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "stand": [7, 75, 80, 93, 98, 119, 121, 182, 199, 224, 290, 307, 317, 334, 435, 436, 450, 477, 482, 483, 484, 488, 489, 491, 494, 495], "alon": [7, 63, 87, 93, 98, 114, 116, 121, 133, 265, 312, 334, 339, 346, 435, 441, 442, 449, 479, 482, 483, 487, 491], "impli": [7, 31, 35, 42, 57, 62, 71, 80, 81, 101, 114, 119, 121, 123, 152, 176, 194, 237, 239, 250, 273, 307, 329, 333, 335, 357, 360, 430, 437, 441, 443, 445, 451, 470, 471, 476, 483, 488, 491, 494, 495], "below": [7, 23, 24, 33, 35, 45, 54, 56, 58, 59, 62, 63, 65, 80, 83, 85, 88, 97, 99, 100, 105, 106, 107, 108, 113, 114, 120, 121, 125, 126, 128, 131, 134, 142, 145, 146, 148, 150, 157, 160, 162, 167, 171, 173, 180, 184, 185, 188, 190, 192, 194, 196, 199, 201, 202, 204, 207, 209, 217, 222, 227, 235, 237, 239, 241, 244, 247, 249, 250, 254, 256, 257, 259, 261, 262, 263, 264, 265, 267, 269, 273, 281, 282, 283, 284, 289, 291, 297, 298, 303, 306, 307, 308, 310, 311, 312, 314, 322, 325, 329, 331, 333, 334, 335, 336, 337, 339, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 368, 369, 371, 372, 373, 374, 375, 377, 379, 380, 381, 384, 386, 391, 395, 399, 401, 403, 404, 405, 410, 421, 428, 429, 434, 435, 437, 439, 441, 442, 443, 445, 446, 447, 450, 455, 456, 459, 476, 477, 478, 480, 482, 483, 484, 485, 487, 491, 492], "pybuf_indirect": 7, "ye": [7, 71, 85, 90, 91, 92, 93, 96, 97, 98, 101, 110, 180, 199, 207, 281, 282, 329, 334, 357, 384, 388, 420, 422, 426, 428, 441, 456, 461, 464, 471, 476, 479, 488, 489], "pybuf_strid": 7, "pybuf_nd": 7, "fortran": [7, 90, 99, 314, 356, 360, 459, 478, 481, 483], "explicitli": [7, 28, 29, 33, 34, 35, 45, 49, 56, 62, 67, 71, 72, 74, 75, 80, 85, 88, 97, 99, 100, 104, 106, 107, 110, 112, 113, 114, 116, 121, 122, 123, 131, 133, 138, 144, 147, 151, 161, 164, 170, 179, 182, 183, 189, 192, 194, 196, 199, 201, 210, 212, 216, 219, 220, 222, 224, 227, 228, 232, 237, 239, 240, 244, 247, 257, 259, 264, 269, 270, 273, 277, 281, 282, 283, 285, 286, 290, 296, 298, 299, 307, 308, 309, 310, 312, 322, 326, 341, 343, 345, 348, 349, 351, 353, 354, 356, 357, 359, 360, 363, 364, 368, 371, 373, 375, 377, 380, 396, 399, 400, 401, 403, 404, 410, 414, 415, 417, 420, 422, 425, 426, 427, 428, 436, 438, 441, 442, 443, 444, 445, 447, 450, 451, 453, 455, 456, 457, 458, 464, 465, 470, 476, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "contig": 7, "pybuf_c_contigu": [7, 483], "pybuf_f_contigu": [7, 483], "pybuf_any_contigu": 7, "fulli": [7, 33, 34, 45, 62, 74, 81, 83, 93, 99, 114, 119, 123, 131, 139, 143, 146, 199, 207, 211, 217, 221, 222, 265, 270, 272, 276, 283, 284, 298, 314, 317, 318, 331, 348, 350, 351, 353, 360, 364, 368, 373, 375, 401, 403, 413, 415, 422, 425, 428, 432, 436, 438, 443, 447, 455, 470, 476, 479, 484, 485, 488, 489, 490, 491, 492, 493, 495, 496], "combin": [7, 23, 33, 49, 55, 57, 62, 63, 67, 71, 80, 84, 87, 88, 92, 97, 99, 104, 107, 112, 114, 116, 117, 119, 120, 122, 127, 128, 131, 150, 151, 171, 173, 176, 182, 189, 190, 194, 196, 199, 202, 204, 207, 217, 219, 222, 225, 241, 250, 257, 258, 259, 261, 264, 265, 273, 276, 281, 282, 298, 307, 308, 309, 310, 311, 323, 333, 334, 337, 343, 344, 346, 349, 351, 353, 354, 356, 359, 360, 361, 362, 363, 364, 371, 373, 375, 384, 391, 401, 402, 403, 409, 420, 421, 438, 441, 442, 443, 445, 447, 450, 451, 455, 456, 457, 461, 477, 481, 482, 483, 484, 487, 488, 491, 492, 493, 494, 495], "previou": [7, 11, 16, 17, 23, 28, 33, 38, 42, 63, 71, 80, 81, 84, 85, 87, 88, 90, 91, 96, 99, 101, 104, 107, 113, 114, 116, 119, 131, 133, 142, 144, 145, 151, 157, 162, 163, 164, 171, 180, 183, 186, 189, 190, 194, 196, 199, 203, 204, 207, 222, 225, 227, 228, 239, 244, 246, 256, 259, 261, 270, 273, 276, 284, 285, 298, 307, 308, 309, 311, 312, 314, 326, 329, 333, 334, 345, 346, 348, 351, 353, 357, 359, 360, 363, 368, 371, 373, 377, 379, 381, 390, 391, 395, 397, 399, 401, 403, 404, 409, 410, 415, 425, 428, 435, 436, 442, 443, 447, 451, 455, 457, 461, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495], "frequent": [7, 35, 67, 85, 87, 96, 97, 110, 116, 117, 119, 120, 173, 177, 181, 196, 203, 261, 281, 284, 298, 303, 307, 320, 359, 401, 403, 439, 453, 456, 461, 466, 469, 480, 481, 483, 484, 495], "undefin": [7, 18, 25, 33, 42, 62, 63, 67, 71, 74, 80, 97, 138, 153, 171, 179, 210, 219, 221, 227, 239, 241, 246, 273, 290, 307, 343, 359, 360, 368, 381, 393, 397, 415, 428, 431, 443, 445, 450, 461, 464, 471, 492, 494], "pybuffer_iscontigu": [7, 56, 488], "pybuf_ful": 7, "pybuf_full_ro": 7, "pybuf_record": 7, "pybuf_records_ro": 7, "pybuf_strided_ro": 7, "pybuf_contig": 7, "pybuf_contig_ro": 7, "ptr": [7, 18, 34, 42, 274, 481, 492], "typeof": 7, "def": [7, 17, 22, 35, 45, 60, 65, 67, 83, 84, 85, 88, 91, 96, 97, 99, 100, 104, 105, 106, 107, 112, 114, 116, 117, 118, 119, 121, 123, 125, 127, 131, 133, 134, 135, 137, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 168, 173, 174, 179, 180, 182, 183, 185, 186, 189, 194, 196, 199, 201, 203, 204, 207, 214, 217, 225, 227, 230, 239, 240, 241, 242, 244, 246, 249, 250, 254, 257, 259, 261, 264, 265, 266, 270, 273, 274, 276, 277, 282, 283, 290, 298, 304, 306, 307, 312, 314, 318, 324, 327, 329, 331, 333, 334, 335, 336, 340, 344, 346, 347, 348, 351, 353, 354, 356, 357, 358, 359, 360, 361, 367, 368, 373, 376, 377, 379, 380, 382, 384, 393, 396, 397, 399, 400, 401, 403, 404, 405, 414, 415, 417, 422, 426, 428, 434, 435, 436, 437, 442, 443, 444, 445, 446, 450, 451, 455, 456, 458, 465, 466, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "verify_structur": 7, "memlen": 7, "offset": [7, 10, 14, 20, 22, 23, 57, 62, 87, 88, 96, 105, 110, 133, 138, 154, 155, 166, 189, 196, 199, 204, 217, 223, 227, 229, 237, 249, 254, 270, 273, 286, 293, 298, 308, 321, 329, 353, 356, 363, 373, 377, 381, 394, 396, 430, 437, 440, 443, 461, 470, 477, 482, 483, 487, 488, 489, 490, 494], "bound": [7, 10, 13, 38, 42, 44, 53, 55, 59, 62, 63, 90, 93, 97, 99, 105, 106, 113, 114, 116, 117, 133, 135, 136, 137, 138, 141, 142, 150, 151, 152, 171, 173, 177, 179, 182, 199, 203, 225, 227, 239, 240, 261, 262, 264, 265, 270, 283, 284, 298, 333, 334, 337, 346, 353, 356, 357, 360, 367, 377, 380, 382, 384, 390, 391, 400, 401, 404, 405, 410, 417, 435, 441, 442, 443, 444, 445, 447, 451, 455, 458, 464, 465, 477, 479, 480, 482, 483, 484, 490, 491, 494, 496], "mem": [7, 42, 43], "imin": 7, "sum": [7, 15, 35, 99, 105, 107, 131, 133, 138, 154, 173, 196, 199, 207, 222, 239, 240, 270, 276, 285, 290, 299, 308, 323, 333, 337, 341, 353, 359, 360, 381, 391, 397, 401, 445, 446, 455, 456, 459, 464, 465, 466, 467, 480, 481, 483, 486, 488, 490, 495, 496], "j": [7, 42, 85, 96, 97, 99, 105, 119, 167, 173, 176, 190, 194, 196, 203, 207, 249, 276, 303, 306, 312, 320, 334, 353, 359, 360, 368, 381, 443, 450, 459, 464, 470, 471, 481, 482, 483, 484, 485, 486, 487, 488, 490, 492, 494, 495, 496], "imax": 7, "view": [7, 15, 22, 43, 48, 62, 67, 77, 96, 99, 104, 105, 106, 110, 131, 133, 145, 151, 173, 174, 196, 199, 204, 210, 214, 219, 222, 239, 250, 261, 273, 282, 287, 314, 323, 328, 356, 358, 363, 367, 368, 384, 390, 391, 399, 400, 420, 425, 441, 461, 477, 482, 483, 487, 489, 490, 492, 498], "x": [7, 9, 14, 25, 33, 34, 35, 48, 49, 56, 57, 58, 62, 63, 67, 71, 75, 80, 84, 85, 89, 90, 91, 92, 98, 99, 101, 104, 105, 106, 107, 108, 111, 113, 114, 116, 118, 119, 120, 121, 123, 127, 131, 132, 133, 151, 159, 160, 162, 164, 167, 171, 173, 176, 180, 182, 184, 186, 189, 190, 192, 194, 196, 199, 200, 201, 203, 204, 207, 224, 228, 237, 239, 240, 241, 242, 248, 250, 254, 256, 261, 263, 270, 273, 274, 276, 277, 282, 284, 285, 286, 290, 291, 296, 298, 303, 304, 306, 307, 308, 311, 312, 314, 315, 316, 325, 328, 333, 334, 336, 347, 348, 349, 353, 356, 357, 359, 360, 361, 363, 364, 368, 370, 373, 377, 380, 381, 382, 384, 390, 391, 392, 397, 399, 401, 403, 405, 409, 410, 413, 414, 417, 422, 434, 435, 436, 437, 442, 443, 445, 450, 451, 453, 455, 456, 457, 458, 459, 461, 463, 464, 467, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498], "anywher": [7, 73, 81, 97, 116, 164, 173, 199, 203, 225, 261, 266, 276, 283, 307, 311, 334, 368, 393, 401, 409, 430, 440, 444, 445, 447, 485, 496], "index": [7, 34, 35, 38, 47, 53, 58, 59, 62, 63, 67, 72, 77, 91, 92, 96, 99, 106, 107, 111, 114, 116, 118, 122, 126, 127, 132, 133, 135, 154, 155, 157, 160, 164, 168, 173, 174, 189, 204, 205, 210, 219, 223, 225, 227, 239, 244, 247, 250, 256, 259, 269, 270, 272, 276, 277, 283, 293, 296, 298, 299, 306, 308, 311, 314, 325, 328, 329, 331, 334, 335, 337, 353, 355, 356, 358, 360, 361, 368, 374, 376, 380, 381, 383, 391, 396, 397, 409, 420, 422, 425, 428, 437, 442, 443, 445, 451, 455, 457, 464, 465, 468, 469, 474, 477, 479, 481, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498], "get_item_point": 7, "pyobject_checkbuff": [7, 56, 488, 496], "cannot": [7, 9, 24, 26, 28, 33, 34, 35, 38, 39, 49, 53, 58, 60, 62, 63, 65, 66, 72, 80, 84, 85, 88, 90, 97, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 118, 120, 123, 126, 127, 133, 141, 143, 144, 147, 157, 164, 171, 173, 174, 176, 179, 180, 181, 182, 189, 190, 194, 196, 199, 207, 211, 215, 216, 217, 222, 226, 227, 228, 229, 232, 237, 239, 240, 241, 244, 246, 247, 250, 259, 261, 265, 267, 268, 270, 273, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 297, 298, 308, 310, 311, 312, 314, 317, 318, 319, 322, 323, 325, 329, 334, 337, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 368, 369, 373, 375, 377, 380, 381, 384, 401, 409, 410, 414, 417, 420, 421, 425, 428, 430, 431, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 455, 456, 457, 458, 459, 461, 464, 467, 470, 471, 476, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496], "buffererror": [7, 23, 62, 227, 314, 465], "chain": [7, 62, 67, 97, 105, 107, 112, 114, 120, 130, 170, 173, 180, 189, 200, 227, 228, 237, 239, 250, 262, 270, 276, 282, 308, 320, 351, 360, 368, 396, 404, 410, 443, 445, 451, 455, 457, 460, 483, 485, 488, 490, 491, 492, 496], "redirect": [7, 62, 67, 72, 98, 113, 114, 120, 145, 149, 182, 255, 256, 257, 259, 265, 282, 348, 364, 368, 410, 414, 460, 470, 473, 477, 491, 492, 493, 494], "pybuffer_sizefromformat": [7, 56, 488], "pybuffer_getpoint": [7, 56, 488], "pybuffer_fromcontigu": [7, 56, 488], "fort": 7, "pybuffer_tocontigu": [7, 56, 488], "src": [7, 71, 75, 80, 101, 155, 189, 207, 214, 245, 254, 293, 296, 308, 347, 356, 436, 480, 482], "pyobject_copydata": [7, 56, 488], "dest": [7, 67, 101, 114, 129, 214, 242, 284, 293, 307, 324, 414, 480, 482, 483, 484], "between": [7, 15, 18, 20, 33, 34, 35, 38, 39, 42, 45, 53, 55, 59, 62, 63, 67, 71, 72, 74, 77, 84, 85, 86, 87, 88, 90, 91, 92, 96, 99, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 121, 131, 133, 136, 138, 145, 146, 150, 154, 162, 163, 167, 171, 173, 174, 177, 180, 184, 185, 186, 190, 196, 199, 204, 207, 209, 210, 211, 215, 219, 223, 225, 227, 230, 232, 239, 244, 246, 249, 250, 254, 261, 265, 266, 269, 270, 273, 274, 276, 277, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 323, 331, 333, 334, 335, 349, 350, 353, 354, 355, 356, 357, 360, 363, 364, 365, 368, 374, 375, 377, 379, 380, 381, 382, 384, 386, 387, 390, 391, 392, 393, 397, 399, 400, 403, 404, 405, 409, 410, 415, 416, 420, 422, 425, 426, 428, 432, 434, 439, 440, 441, 443, 445, 446, 447, 449, 451, 455, 456, 457, 458, 461, 464, 465, 466, 470, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "pybuffer_fillcontiguousstrid": [7, 56, 488], "per": [7, 23, 31, 33, 35, 45, 62, 63, 67, 71, 81, 85, 90, 92, 96, 97, 100, 114, 121, 122, 128, 131, 133, 138, 144, 145, 154, 156, 157, 159, 163, 171, 173, 190, 194, 196, 199, 200, 204, 210, 211, 217, 219, 222, 223, 237, 241, 264, 266, 277, 282, 286, 296, 298, 303, 308, 310, 320, 322, 323, 332, 334, 344, 349, 350, 353, 354, 356, 357, 360, 368, 377, 380, 381, 382, 384, 391, 395, 397, 403, 434, 437, 442, 443, 447, 451, 459, 465, 467, 470, 476, 480, 481, 482, 484, 485, 486, 487, 490, 491, 492, 494, 495, 498], "accord": [7, 18, 33, 36, 39, 63, 65, 67, 71, 80, 105, 106, 114, 119, 133, 138, 164, 167, 171, 173, 188, 194, 196, 199, 210, 215, 217, 219, 222, 223, 230, 245, 247, 249, 257, 261, 262, 265, 269, 271, 276, 281, 282, 283, 290, 296, 298, 307, 308, 309, 318, 323, 333, 357, 358, 360, 362, 363, 381, 390, 391, 393, 399, 403, 409, 410, 411, 414, 425, 437, 441, 443, 450, 457, 470, 476, 479, 480, 481, 482, 488, 489, 490, 491, 492, 493], "design": [7, 34, 35, 62, 67, 71, 72, 88, 92, 94, 96, 97, 99, 100, 105, 106, 107, 112, 113, 114, 117, 119, 120, 121, 122, 124, 133, 141, 143, 146, 149, 150, 151, 159, 165, 171, 173, 180, 182, 190, 196, 199, 205, 207, 208, 215, 224, 225, 227, 239, 240, 242, 244, 246, 249, 251, 261, 264, 265, 269, 286, 289, 298, 307, 308, 314, 323, 331, 332, 338, 341, 346, 353, 357, 363, 368, 370, 373, 377, 380, 384, 390, 393, 399, 401, 404, 409, 422, 432, 439, 440, 441, 447, 454, 455, 457, 465, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 494, 496], "getbufferproc": [7, 62, 490], "subtyp": [8, 9, 11, 15, 20, 22, 25, 38, 39, 45, 49, 54, 59, 60, 62, 63, 67, 200, 210, 211, 214, 215, 217, 218, 219, 220, 257, 261, 291, 304, 307, 348, 357, 360, 408, 431, 443, 445, 479, 487], "pybytearray_typ": [8, 56], "pybytearray_check": 8, "pybytearray_checkexact": 8, "pybytearray_fromobject": [8, 56, 483], "pybytearray_fromstringands": [8, 56, 483], "pybytearray_concat": [8, 56], "concat": [8, 63, 107, 306, 401, 456], "pybytearray_s": [8, 56], "pybytearray_asstr": [8, 56], "extra": [8, 9, 13, 18, 35, 62, 63, 71, 88, 90, 97, 99, 100, 104, 106, 108, 114, 120, 121, 123, 131, 133, 138, 144, 173, 174, 183, 188, 199, 204, 207, 210, 216, 217, 219, 222, 225, 256, 261, 266, 282, 283, 286, 289, 298, 299, 307, 308, 347, 356, 357, 360, 363, 373, 374, 377, 382, 391, 401, 404, 428, 437, 443, 446, 456, 457, 461, 467, 470, 471, 477, 480, 483, 484, 487, 488, 489, 490, 493, 494, 495], "append": [8, 9, 34, 38, 58, 63, 71, 88, 90, 91, 92, 96, 97, 113, 114, 117, 121, 123, 131, 132, 134, 146, 162, 164, 170, 171, 173, 174, 176, 189, 194, 196, 197, 199, 202, 204, 210, 214, 216, 217, 219, 222, 239, 240, 241, 248, 261, 262, 263, 264, 265, 270, 273, 276, 282, 284, 285, 286, 296, 298, 299, 303, 307, 308, 309, 311, 312, 314, 316, 317, 324, 331, 333, 334, 335, 336, 345, 349, 353, 357, 358, 360, 368, 373, 377, 393, 403, 410, 415, 422, 423, 426, 428, 436, 437, 442, 443, 450, 455, 456, 457, 458, 461, 464, 465, 467, 470, 471, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493], "pybytearray_res": [8, 56], "trade": [8, 230, 307, 360, 441, 467], "safeti": [8, 12, 67, 85, 99, 100, 106, 129, 214, 264, 270, 298, 307, 339, 356, 413, 484, 486, 489], "speed": [8, 42, 63, 85, 90, 105, 113, 116, 121, 159, 173, 174, 190, 197, 199, 203, 230, 240, 248, 250, 265, 273, 276, 310, 312, 314, 333, 345, 357, 359, 368, 376, 382, 399, 439, 443, 454, 465, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pybytearray_as_str": 8, "pybytearray_get_s": 8, "pybytes_typ": [9, 56], "pybytes_check": [9, 91, 483], "pybytes_checkexact": 9, "pybytes_fromstr": [9, 42, 56], "pybytes_fromstringands": [9, 56, 483], "uniniti": [9, 33, 35, 42, 85, 97, 314, 471], "pybytes_fromformat": [9, 56], "printf": [9, 63, 67, 84, 85, 110, 189, 259, 282, 445, 461, 464, 475, 482, 488], "calcul": [9, 31, 33, 34, 35, 58, 62, 63, 67, 85, 92, 97, 98, 101, 105, 107, 131, 137, 163, 173, 190, 194, 196, 199, 220, 240, 249, 265, 284, 290, 298, 310, 337, 348, 353, 359, 360, 361, 363, 367, 369, 371, 381, 382, 393, 396, 399, 400, 405, 410, 416, 443, 445, 447, 450, 454, 457, 459, 460, 465, 466, 467, 479, 482, 483, 486, 488, 491, 495], "liter": [9, 39, 63, 67, 90, 99, 106, 116, 123, 124, 131, 170, 171, 172, 181, 196, 199, 204, 207, 234, 235, 239, 244, 245, 262, 272, 277, 279, 282, 283, 285, 317, 322, 334, 346, 356, 360, 361, 364, 381, 382, 384, 391, 393, 401, 403, 409, 415, 418, 428, 430, 443, 446, 447, 448, 449, 456, 460, 463, 464, 477, 479, 480, 482, 484, 485, 489, 491, 494, 495, 496, 498], "ld": [9, 63, 84, 89, 189, 360, 471], "lu": [9, 63, 360, 402, 450, 477, 491, 493, 494], "zd": [9, 63], "zu": [9, 63], "size_t": [9, 10, 18, 34, 35, 39, 42, 58, 63, 189, 363, 490], "hex": [9, 63, 97, 99, 106, 116, 117, 119, 156, 159, 171, 189, 225, 239, 249, 341, 357, 360, 361, 368, 384, 413, 443, 450, 459, 465, 467, 477, 478, 480, 482, 483, 485, 486, 487, 491, 492], "mostli": [9, 10, 23, 24, 62, 63, 65, 71, 90, 92, 98, 105, 117, 138, 181, 207, 227, 261, 270, 282, 290, 298, 357, 390, 399, 409, 410, 428, 437, 442, 447, 451, 455, 477, 478, 479, 480, 482, 484, 485, 486, 488, 489, 491, 492, 493, 494], "0x": [9, 18, 47, 63, 97, 99, 106, 116, 150, 189, 207, 239, 258, 298, 307, 360, 361, 399, 404, 405, 450, 481, 489], "yield": [9, 29, 36, 56, 63, 67, 87, 90, 97, 99, 107, 124, 127, 133, 145, 150, 151, 162, 164, 173, 179, 180, 182, 196, 203, 204, 211, 221, 237, 239, 240, 245, 246, 249, 256, 264, 268, 270, 273, 276, 277, 286, 298, 308, 311, 314, 317, 334, 346, 360, 363, 373, 377, 393, 396, 401, 404, 405, 409, 413, 422, 425, 428, 434, 442, 443, 446, 448, 450, 455, 459, 479, 480, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496], "unrecogn": [9, 63, 101, 131, 242, 254, 429, 437, 450, 492, 493], "rest": [9, 18, 63, 89, 92, 97, 101, 107, 112, 113, 114, 116, 117, 123, 131, 133, 140, 148, 164, 174, 190, 199, 207, 227, 237, 240, 261, 264, 282, 291, 307, 308, 317, 334, 338, 360, 377, 391, 393, 404, 434, 442, 443, 446, 450, 451, 454, 456, 458, 461, 477, 479, 480, 482, 483, 484, 485, 487, 490, 491, 494, 496], "discard": [9, 35, 38, 49, 54, 59, 63, 65, 85, 106, 107, 117, 134, 138, 151, 156, 160, 164, 170, 171, 173, 174, 196, 199, 257, 273, 282, 283, 286, 298, 301, 307, 350, 353, 356, 360, 376, 391, 403, 415, 417, 426, 428, 431, 442, 443, 464, 470, 479, 482, 483, 484, 491, 493, 495], "precis": [9, 13, 18, 25, 45, 63, 67, 84, 90, 113, 188, 196, 227, 239, 244, 274, 277, 283, 284, 290, 298, 305, 308, 323, 328, 333, 343, 344, 353, 356, 360, 361, 363, 368, 381, 382, 391, 401, 410, 423, 442, 443, 445, 449, 450, 456, 459, 467, 477, 481, 482, 483, 484, 488, 489, 490, 491, 493, 494, 495, 496], "pybytes_fromformatv": [9, 56], "pybytes_fromobject": [9, 56], "pybytes_s": [9, 56, 91], "pybytes_get_s": 9, "pybytes_asstr": [9, 56, 487], "last": [9, 22, 23, 25, 33, 34, 35, 45, 51, 58, 62, 66, 71, 72, 75, 85, 88, 90, 96, 97, 99, 101, 104, 105, 106, 107, 111, 112, 113, 114, 116, 117, 119, 125, 127, 131, 132, 133, 137, 146, 151, 152, 153, 157, 159, 163, 164, 168, 171, 173, 174, 180, 182, 189, 190, 196, 197, 199, 201, 203, 204, 207, 210, 214, 217, 219, 223, 225, 227, 228, 229, 232, 235, 237, 239, 241, 246, 248, 249, 250, 259, 261, 262, 264, 270, 274, 276, 277, 281, 282, 284, 285, 286, 290, 298, 299, 303, 306, 307, 308, 309, 311, 312, 314, 316, 323, 329, 334, 335, 338, 343, 345, 346, 347, 352, 353, 355, 356, 357, 358, 360, 361, 363, 364, 368, 373, 375, 380, 381, 384, 391, 393, 396, 397, 399, 401, 402, 403, 404, 405, 409, 410, 411, 413, 417, 420, 421, 425, 428, 430, 437, 439, 442, 443, 445, 447, 450, 451, 455, 456, 457, 458, 461, 464, 465, 467, 470, 471, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "dealloc": [9, 28, 33, 35, 42, 45, 51, 62, 63, 85, 87, 88, 90, 99, 112, 241, 377, 417, 451, 471, 478, 479, 484, 488, 489, 495], "pybytes_as_str": [9, 446], "pybytes_asstringands": [9, 56, 91], "pybytes_concat": [9, 56], "newpart": 9, "stolen": [9, 19, 29, 35, 84], "pybytes_concatanddel": [9, 56], "_pybytes_res": 9, "newsiz": [9, 28, 59, 293], "build": [9, 32, 33, 34, 42, 45, 56, 57, 63, 64, 67, 72, 73, 74, 75, 77, 78, 80, 81, 86, 87, 88, 90, 91, 93, 96, 97, 98, 99, 105, 110, 114, 117, 118, 120, 122, 133, 134, 152, 154, 160, 168, 170, 171, 173, 189, 199, 200, 201, 203, 204, 205, 217, 220, 222, 225, 239, 249, 250, 259, 269, 272, 273, 276, 288, 290, 297, 307, 311, 318, 322, 326, 329, 333, 343, 349, 353, 354, 357, 360, 368, 370, 377, 384, 397, 399, 403, 405, 409, 410, 414, 415, 424, 425, 439, 440, 441, 443, 457, 466, 470, 473, 474, 476, 477, 479, 498], "brand": [9, 54, 59, 85, 320], "refcount": [9, 33, 62, 112, 377, 482], "lvalu": [9, 307, 360], "differ": [9, 10, 15, 20, 24, 33, 34, 35, 36, 42, 45, 57, 58, 62, 63, 65, 67, 71, 72, 76, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 98, 99, 101, 103, 104, 105, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125, 131, 132, 133, 134, 137, 138, 141, 143, 144, 145, 149, 150, 151, 152, 154, 164, 167, 168, 170, 171, 172, 173, 174, 176, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 196, 198, 199, 204, 207, 209, 210, 216, 217, 219, 222, 225, 227, 228, 230, 236, 237, 239, 240, 244, 250, 251, 256, 257, 259, 261, 264, 265, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 298, 299, 304, 306, 307, 308, 309, 310, 311, 312, 314, 317, 318, 323, 328, 329, 331, 333, 334, 335, 336, 337, 343, 345, 346, 348, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 370, 373, 375, 377, 378, 379, 380, 381, 382, 384, 387, 390, 391, 396, 400, 401, 403, 404, 405, 409, 410, 416, 420, 422, 425, 426, 435, 437, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 455, 456, 457, 458, 459, 461, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "realloc": [9, 42, 53, 85, 190, 481, 493], "memoryerror": [9, 23, 54, 59, 63, 133, 199, 227, 410, 465, 491], "callabl": [10, 33, 37, 44, 57, 58, 62, 66, 67, 84, 85, 97, 99, 100, 104, 106, 107, 114, 118, 123, 127, 131, 138, 144, 148, 150, 174, 179, 180, 183, 185, 189, 190, 194, 200, 203, 204, 220, 221, 222, 237, 238, 239, 249, 262, 265, 266, 269, 273, 282, 283, 284, 286, 298, 306, 307, 308, 313, 314, 328, 329, 330, 340, 347, 348, 351, 360, 364, 368, 373, 375, 380, 382, 386, 391, 393, 394, 403, 404, 405, 410, 414, 415, 417, 422, 428, 436, 442, 445, 447, 460, 465, 470, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494, 495, 496], "signatur": [10, 17, 45, 57, 62, 67, 83, 97, 105, 106, 112, 113, 114, 133, 138, 151, 158, 172, 173, 174, 182, 194, 196, 227, 230, 239, 240, 249, 261, 265, 273, 282, 283, 307, 314, 328, 330, 347, 350, 357, 364, 368, 396, 399, 400, 401, 404, 405, 409, 428, 430, 434, 439, 445, 455, 483, 486, 487, 488, 489, 491, 492, 493, 495, 496, 498], "slot": [10, 16, 32, 45, 47, 49, 50, 57, 60, 67, 87, 88, 105, 114, 146, 194, 204, 226, 240, 241, 265, 270, 296, 298, 314, 331, 360, 400, 401, 443, 445, 477, 478, 479, 481, 482, 483, 485, 487, 488, 490, 491, 492, 495, 496], "kwarg": [10, 57, 62, 97, 99, 105, 113, 114, 123, 126, 131, 133, 138, 151, 153, 171, 173, 179, 180, 183, 190, 199, 239, 268, 270, 277, 282, 283, 298, 306, 307, 308, 314, 322, 323, 340, 350, 360, 361, 373, 377, 379, 380, 400, 401, 403, 404, 405, 414, 417, 443, 446, 456, 483, 488, 490, 492, 493, 495], "made": [10, 11, 12, 31, 33, 35, 43, 58, 62, 65, 71, 76, 80, 84, 90, 92, 97, 98, 99, 101, 106, 110, 113, 114, 115, 116, 121, 122, 123, 124, 131, 139, 142, 145, 151, 152, 161, 171, 173, 179, 180, 182, 184, 189, 190, 196, 199, 204, 207, 210, 213, 214, 219, 222, 227, 237, 244, 246, 251, 256, 261, 264, 265, 270, 273, 282, 283, 284, 290, 293, 296, 298, 308, 312, 314, 322, 323, 329, 333, 335, 336, 337, 339, 343, 346, 347, 348, 349, 351, 353, 357, 359, 360, 364, 373, 375, 377, 380, 384, 388, 397, 404, 405, 409, 413, 415, 417, 422, 425, 428, 434, 435, 436, 440, 441, 442, 443, 451, 453, 455, 458, 459, 465, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "similarli": [10, 28, 58, 71, 90, 97, 107, 114, 116, 119, 121, 123, 131, 138, 149, 151, 164, 171, 176, 194, 196, 207, 234, 239, 256, 283, 286, 298, 308, 311, 314, 316, 323, 331, 334, 352, 353, 357, 360, 363, 364, 368, 382, 384, 390, 397, 399, 401, 403, 423, 426, 437, 451, 457, 477, 481, 482, 483, 484, 488, 489, 491, 492, 494, 496], "convent": [10, 35, 57, 60, 62, 71, 75, 78, 80, 85, 97, 99, 104, 105, 112, 113, 114, 119, 121, 125, 163, 180, 189, 190, 191, 194, 196, 223, 239, 242, 244, 257, 260, 281, 286, 307, 309, 310, 333, 360, 361, 368, 377, 379, 381, 403, 410, 436, 443, 445, 449, 450, 455, 456, 458, 463, 465, 467, 468, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 494], "tp_new": [10, 60, 62, 87, 88, 112], "tp_init": [10, 60, 62, 87, 88], "pyobject_cal": [10, 56, 62, 85, 496], "introduc": [10, 23, 33, 34, 45, 56, 67, 85, 90, 92, 97, 98, 99, 107, 112, 113, 114, 116, 124, 133, 138, 196, 201, 227, 249, 257, 265, 266, 284, 286, 290, 298, 307, 314, 320, 323, 329, 357, 360, 361, 363, 367, 368, 375, 384, 390, 391, 399, 400, 401, 409, 424, 429, 440, 442, 443, 444, 445, 447, 449, 450, 451, 454, 455, 456, 460, 464, 465, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pep": [10, 13, 23, 30, 31, 33, 34, 35, 45, 49, 56, 58, 61, 62, 63, 65, 67, 77, 81, 83, 85, 87, 90, 92, 97, 98, 99, 100, 107, 115, 119, 123, 124, 127, 128, 133, 134, 138, 141, 152, 154, 155, 164, 165, 166, 167, 171, 173, 174, 176, 179, 182, 183, 186, 188, 194, 200, 204, 224, 227, 235, 239, 240, 241, 261, 263, 264, 265, 266, 270, 273, 280, 281, 282, 287, 290, 296, 302, 303, 304, 308, 310, 311, 314, 316, 317, 326, 337, 339, 341, 343, 344, 347, 348, 349, 350, 352, 353, 355, 356, 357, 360, 361, 364, 365, 368, 373, 374, 377, 381, 393, 400, 412, 414, 417, 422, 423, 438, 440, 442, 443, 445, 446, 447, 450, 451, 456, 465, 470, 471, 472, 476, 477, 496, 498], "590": [10, 67, 487, 488, 496], "rule": [10, 18, 23, 28, 33, 35, 62, 67, 71, 75, 90, 92, 99, 105, 106, 107, 112, 114, 116, 117, 119, 131, 133, 141, 164, 167, 174, 189, 191, 194, 196, 199, 203, 208, 210, 216, 217, 219, 221, 222, 223, 235, 236, 239, 241, 245, 250, 252, 254, 257, 258, 261, 274, 281, 290, 307, 334, 357, 360, 361, 363, 364, 375, 380, 381, 390, 401, 404, 405, 409, 411, 415, 426, 430, 442, 443, 444, 445, 446, 447, 449, 450, 451, 455, 463, 477, 478, 480, 482, 483, 484, 485, 487, 488, 489, 490], "thumb": [10, 62, 112, 141, 203, 391], "hard": [10, 42, 67, 71, 76, 84, 85, 88, 90, 104, 105, 107, 112, 114, 116, 117, 176, 180, 188, 189, 190, 196, 197, 203, 207, 216, 239, 282, 283, 307, 308, 311, 312, 323, 334, 337, 341, 345, 356, 357, 364, 373, 377, 390, 401, 405, 476, 477, 489, 491, 494, 495], "addition": [10, 33, 62, 72, 114, 116, 121, 131, 135, 138, 285, 298, 307, 308, 320, 322, 328, 347, 350, 364, 377, 384, 401, 404, 441, 477, 484, 485, 488, 490, 492, 493, 494, 495, 496], "moreov": [10, 33, 34, 35, 239, 250, 286, 399, 401, 457, 484, 485, 487, 488], "behav": [10, 23, 33, 34, 45, 62, 63, 88, 90, 97, 101, 106, 112, 114, 116, 119, 132, 176, 180, 182, 183, 188, 189, 197, 199, 201, 239, 240, 258, 272, 273, 286, 293, 303, 308, 335, 348, 351, 353, 354, 357, 360, 364, 368, 371, 375, 379, 384, 401, 403, 404, 405, 426, 428, 443, 445, 450, 453, 455, 456, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 494, 495], "achiev": [10, 33, 45, 62, 74, 75, 84, 90, 97, 107, 112, 114, 131, 171, 180, 189, 240, 250, 259, 276, 282, 298, 335, 357, 359, 368, 377, 380, 382, 384, 389, 403, 404, 405, 410, 414, 416, 428, 443, 450, 451, 477, 479, 480, 482, 491, 492], "pyvectorcall_cal": [10, 62], "bear": [10, 63, 121, 196, 257, 265, 298, 360, 368, 488], "repeat": [10, 53, 57, 62, 67, 91, 99, 107, 117, 123, 131, 160, 168, 173, 174, 189, 190, 196, 211, 228, 239, 249, 250, 251, 261, 276, 300, 307, 310, 312, 317, 323, 333, 334, 353, 357, 360, 361, 363, 382, 395, 396, 399, 401, 403, 404, 410, 424, 442, 443, 458, 459, 464, 470, 479, 480, 481, 483, 484, 489, 490, 491, 492, 493], "slower": [10, 96, 97, 116, 171, 240, 249, 261, 273, 285, 298, 333, 345, 399, 467, 480, 481, 483, 485, 494, 495, 496], "calle": [10, 97, 395, 456], "anywai": [10, 62, 80, 88, 90, 101, 189, 196, 239, 257, 261, 274, 403, 404, 457, 478, 479], "enabl": [10, 11, 28, 34, 35, 49, 56, 62, 67, 72, 87, 88, 92, 93, 104, 106, 108, 116, 120, 121, 123, 124, 131, 133, 136, 137, 141, 142, 145, 151, 155, 157, 164, 165, 168, 180, 182, 189, 190, 198, 199, 201, 204, 207, 211, 227, 228, 237, 239, 240, 241, 244, 256, 259, 261, 262, 265, 270, 273, 281, 283, 284, 298, 303, 308, 311, 312, 314, 320, 321, 323, 326, 329, 333, 334, 335, 348, 349, 350, 353, 356, 357, 360, 361, 364, 368, 369, 377, 382, 384, 386, 391, 395, 401, 403, 405, 414, 415, 422, 427, 428, 429, 430, 435, 437, 442, 443, 451, 454, 462, 467, 470, 471, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496], "py_tpflags_have_vectorcal": [10, 62], "tp_vectorcall_offset": [10, 57, 60, 62, 87], "vectorcallfunc": [10, 62, 87], "appear": [10, 25, 33, 34, 45, 57, 58, 65, 67, 71, 87, 88, 90, 96, 98, 99, 101, 104, 106, 107, 111, 113, 114, 116, 121, 123, 131, 133, 145, 164, 171, 176, 180, 188, 189, 190, 194, 199, 203, 207, 210, 213, 216, 217, 219, 227, 236, 239, 241, 244, 249, 261, 262, 265, 270, 274, 281, 283, 284, 286, 287, 296, 298, 312, 323, 329, 332, 334, 346, 348, 351, 353, 356, 360, 361, 373, 379, 384, 391, 400, 401, 403, 404, 405, 410, 415, 417, 422, 423, 425, 428, 431, 435, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 456, 457, 463, 464, 470, 476, 478, 480, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495], "typedef": [10, 11, 15, 24, 28, 32, 33, 50, 57, 58, 63, 67, 87, 88], "nargsf": 10, "kwname": [10, 57, 112], "py_vectorcall_arguments_offset": 10, "pyvectorcall_narg": 10, "uniqu": [10, 33, 67, 85, 87, 92, 105, 107, 110, 113, 119, 126, 131, 173, 189, 196, 197, 203, 217, 219, 223, 225, 226, 239, 242, 250, 270, 274, 276, 277, 286, 296, 299, 308, 314, 320, 329, 333, 356, 357, 359, 360, 370, 380, 387, 388, 391, 401, 403, 404, 406, 409, 413, 441, 442, 443, 447, 455, 457, 471, 476, 481, 482, 484, 486, 489, 494, 496], "temporarili": [10, 23, 35, 67, 72, 85, 99, 114, 120, 121, 163, 182, 199, 207, 241, 244, 281, 282, 329, 330, 331, 347, 360, 364, 377, 382, 391, 397, 403, 404, 405, 428, 442, 476, 483, 493, 494], "vector": [10, 276, 290, 364, 382, 399, 401, 424], "restor": [10, 17, 23, 33, 35, 62, 87, 104, 114, 144, 171, 182, 183, 184, 190, 199, 203, 204, 257, 261, 270, 273, 281, 307, 314, 316, 333, 334, 335, 339, 356, 364, 368, 373, 376, 377, 380, 391, 399, 401, 403, 404, 405, 415, 420, 443, 477, 479, 480, 482, 483, 488, 491, 494, 496], "pyobject_vectorcallmethod": 10, "whenev": [10, 23, 51, 62, 65, 85, 90, 97, 105, 106, 107, 113, 114, 121, 131, 145, 146, 148, 190, 199, 203, 221, 239, 241, 261, 267, 270, 273, 282, 284, 286, 298, 307, 314, 329, 331, 343, 348, 356, 357, 360, 368, 377, 391, 399, 403, 404, 428, 440, 443, 447, 455, 479, 480, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494], "cheapli": 10, "encourag": [10, 85, 89, 100, 227, 269, 307, 343, 344, 346, 401, 420, 426, 430, 449, 454, 477, 478, 485, 488, 495], "onward": [10, 56, 107, 114, 199, 235, 270, 348, 356, 360], "prepend": [10, 33, 34, 71, 99, 105, 114, 171, 176, 191, 216, 240, 276, 284, 286, 303, 307, 316, 327, 342, 346, 347, 368, 371, 379, 414, 428, 436, 470, 476, 488], "pyobject_vectorcal": 10, "provision": [10, 32, 67, 99, 211, 217, 219, 222, 266, 368, 491, 492, 493, 494, 495], "under": [10, 14, 23, 34, 35, 42, 45, 60, 65, 67, 71, 72, 73, 75, 80, 81, 86, 90, 97, 104, 107, 113, 114, 116, 121, 122, 124, 131, 158, 164, 168, 171, 189, 190, 196, 203, 207, 210, 213, 217, 222, 227, 229, 239, 241, 244, 249, 261, 273, 277, 283, 284, 286, 290, 293, 296, 298, 307, 308, 311, 312, 323, 337, 346, 353, 356, 358, 359, 360, 368, 370, 375, 377, 378, 384, 386, 390, 391, 395, 396, 399, 403, 404, 405, 409, 410, 412, 414, 415, 418, 420, 434, 435, 436, 437, 440, 441, 443, 444, 446, 450, 451, 458, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 495], "underscor": [10, 39, 56, 67, 71, 75, 83, 97, 99, 106, 114, 159, 164, 171, 173, 189, 199, 210, 219, 235, 239, 286, 306, 322, 332, 334, 346, 360, 361, 368, 369, 384, 404, 422, 437, 442, 443, 444, 445, 449, 450, 451, 455, 465, 467, 483, 485, 486, 488], "_pyobject_vectorcal": 10, "_py_tpflags_have_vectorcal": 10, "_pyobject_vectorcallmethod": 10, "_pyvectorcall_funct": 10, "_pyobject_callonearg": 10, "_pyobject_callmethodnoarg": 10, "_pyobject_callmethodonearg": 10, "pyobject_vectorcalldict": 10, "_pyobject_fastcalldict": 10, "alias": [10, 23, 67, 71, 99, 106, 131, 163, 171, 200, 209, 225, 227, 244, 281, 312, 318, 353, 356, 391, 399, 402, 450, 455, 471, 476, 478, 480, 483, 487, 488, 489, 490, 491, 493, 496], "worri": [10, 35, 75, 85, 87, 104, 119, 121, 164, 196, 208, 307, 334, 363, 403, 465, 479, 484, 490], "py_enterrecursivecal": [10, 23, 56, 496], "py_leaverecursivecal": [10, 23, 56, 496], "futur": [10, 35, 56, 67, 71, 81, 89, 96, 99, 112, 113, 116, 121, 123, 125, 131, 133, 135, 137, 139, 142, 144, 145, 150, 151, 152, 168, 172, 177, 178, 180, 181, 188, 196, 207, 211, 217, 219, 221, 222, 224, 227, 239, 241, 246, 248, 249, 250, 259, 261, 265, 266, 267, 269, 270, 272, 282, 283, 298, 299, 307, 308, 323, 330, 333, 334, 340, 343, 346, 348, 350, 353, 357, 359, 368, 372, 377, 380, 381, 400, 401, 403, 410, 413, 415, 428, 439, 443, 450, 455, 456, 461, 465, 476, 477, 478, 479, 480, 481, 482, 483, 487, 490, 491, 495, 498], "pyvectorcall_funct": 10, "intend": [10, 23, 31, 33, 34, 42, 45, 60, 63, 71, 76, 80, 84, 85, 86, 87, 90, 96, 99, 101, 107, 113, 114, 116, 120, 121, 125, 126, 138, 151, 164, 171, 173, 182, 184, 197, 204, 207, 215, 222, 227, 239, 240, 254, 258, 259, 261, 266, 270, 273, 274, 282, 284, 285, 286, 289, 290, 303, 304, 308, 314, 317, 318, 322, 349, 353, 357, 359, 360, 361, 363, 364, 368, 372, 373, 380, 391, 395, 399, 401, 403, 404, 409, 410, 415, 422, 426, 437, 440, 442, 443, 445, 449, 450, 451, 456, 457, 458, 459, 465, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 491, 492, 493, 494, 495], "put": [10, 20, 34, 35, 49, 67, 71, 72, 74, 75, 78, 80, 81, 85, 87, 88, 90, 91, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 112, 114, 116, 117, 121, 125, 133, 146, 150, 164, 171, 179, 180, 188, 189, 204, 207, 215, 217, 222, 229, 241, 244, 246, 255, 256, 261, 265, 283, 296, 298, 306, 310, 314, 315, 331, 333, 348, 349, 351, 353, 357, 360, 370, 375, 379, 380, 384, 398, 404, 405, 410, 440, 447, 453, 456, 463, 464, 465, 468, 475, 476, 478, 479, 480, 481, 482, 483, 484, 488, 489, 492], "fall": [10, 15, 18, 22, 25, 42, 62, 63, 78, 96, 107, 113, 118, 174, 190, 194, 196, 199, 210, 219, 227, 239, 243, 283, 304, 306, 308, 310, 340, 357, 359, 360, 361, 409, 410, 440, 441, 443, 447, 450, 456, 463, 477, 479, 480, 482, 483, 484, 485, 487, 489, 491, 493, 494, 496], "littl": [10, 25, 31, 63, 67, 78, 90, 98, 107, 113, 114, 116, 117, 119, 154, 159, 166, 171, 189, 190, 191, 199, 203, 204, 207, 244, 257, 283, 298, 307, 310, 334, 348, 353, 360, 363, 368, 382, 397, 399, 405, 413, 420, 441, 455, 456, 458, 459, 467, 477, 478, 479, 483, 487, 488, 489, 490, 491], "pick": [10, 88, 97, 99, 114, 120, 121, 154, 173, 259, 266, 290, 307, 312, 397, 403, 436, 477, 482, 488], "best": [10, 31, 35, 54, 63, 67, 72, 80, 92, 96, 99, 104, 107, 109, 112, 113, 114, 121, 133, 143, 154, 187, 196, 199, 201, 203, 207, 208, 209, 219, 227, 237, 239, 240, 244, 248, 249, 250, 256, 261, 262, 264, 270, 282, 285, 298, 303, 307, 308, 320, 322, 323, 346, 351, 353, 356, 360, 368, 373, 375, 382, 384, 390, 399, 401, 404, 418, 440, 443, 447, 454, 456, 457, 459, 466, 471, 474, 476, 477, 481, 482, 485, 487, 488, 489, 491, 492, 493, 496], "fit": [10, 35, 71, 80, 85, 90, 111, 117, 131, 135, 189, 190, 191, 199, 204, 207, 209, 229, 237, 250, 251, 265, 274, 284, 307, 322, 323, 333, 353, 359, 363, 379, 384, 399, 403, 410, 425, 436, 439, 441, 467, 480, 481, 484, 487, 488, 489, 490, 491, 496], "summar": [10, 98, 105, 119, 199, 207, 273, 274, 345, 359, 360, 401, 403, 441, 442, 445, 447, 481, 489], "document": [10, 18, 20, 23, 24, 28, 32, 35, 42, 45, 54, 56, 57, 58, 62, 63, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 97, 99, 100, 101, 104, 105, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 131, 132, 133, 136, 138, 140, 142, 145, 148, 149, 151, 152, 155, 157, 158, 161, 163, 164, 168, 173, 180, 182, 189, 190, 194, 195, 196, 200, 203, 206, 207, 208, 209, 210, 212, 216, 217, 219, 221, 222, 227, 234, 235, 237, 238, 239, 240, 244, 249, 255, 257, 261, 262, 264, 265, 266, 269, 270, 271, 273, 274, 277, 281, 282, 283, 284, 286, 287, 288, 296, 297, 298, 300, 305, 307, 308, 310, 312, 319, 321, 322, 329, 333, 337, 345, 346, 351, 353, 354, 356, 357, 358, 360, 364, 367, 368, 369, 373, 376, 377, 378, 379, 380, 381, 383, 384, 390, 391, 394, 399, 400, 401, 403, 409, 410, 415, 417, 418, 420, 424, 426, 427, 429, 430, 431, 432, 434, 437, 438, 439, 440, 442, 443, 445, 447, 449, 450, 451, 453, 454, 458, 460, 461, 462, 465, 466, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 492, 493, 496, 498], "pyobject_callnoarg": [10, 56, 87, 496], "pyobject_callonearg": [10, 496], "pyobject_callobject": [10, 56, 84, 85, 91], "pyobject_callfunct": [10, 56, 482, 495], "pyobject_callmethod": [10, 39, 54, 56, 91, 487], "pyobject_callfunctionobjarg": [10, 56], "variad": [10, 67, 129, 401, 456], "pyobject_callmethodobjarg": [10, 56], "pyobject_callmethodnoarg": 10, "pyobject_callmethodonearg": 10, "arg1": [10, 87, 97, 107, 110, 127, 239, 307, 308, 443, 479, 480, 482], "arg2": [10, 87, 97, 107, 110, 127, 239, 307, 404, 443, 479, 480, 482], "kwdict": [10, 85], "readi": [10, 33, 63, 92, 104, 113, 114, 144, 145, 148, 152, 157, 163, 183, 189, 199, 203, 246, 256, 259, 273, 284, 298, 343, 344, 353, 357, 381, 396, 404, 431, 432, 460, 477, 480, 489, 490, 492], "py_tpflags_method_descriptor": [10, 62], "featur": [10, 23, 33, 34, 49, 53, 60, 62, 65, 67, 71, 76, 80, 83, 86, 87, 90, 91, 92, 96, 97, 98, 99, 104, 105, 106, 107, 108, 113, 114, 116, 119, 121, 124, 129, 131, 156, 160, 164, 165, 167, 171, 173, 179, 180, 185, 189, 190, 192, 193, 194, 196, 200, 207, 208, 222, 224, 227, 239, 240, 250, 257, 261, 264, 265, 272, 277, 282, 285, 298, 307, 308, 312, 314, 317, 334, 339, 347, 350, 351, 356, 357, 359, 360, 364, 368, 373, 377, 380, 384, 395, 399, 403, 404, 406, 410, 415, 417, 422, 424, 425, 426, 429, 430, 431, 437, 443, 445, 447, 449, 450, 451, 453, 454, 455, 456, 460, 462, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 486, 489, 498], "unbound": [10, 44, 62, 67, 114, 126, 173, 199, 200, 204, 239, 240, 270, 331, 377, 380, 399, 400, 443, 444, 447, 451, 479, 481, 485, 487, 492, 494], "full": [10, 11, 28, 33, 34, 35, 56, 62, 63, 67, 71, 72, 80, 85, 88, 90, 92, 96, 99, 101, 105, 113, 114, 116, 117, 120, 135, 136, 146, 151, 152, 160, 161, 163, 170, 171, 173, 174, 176, 180, 181, 186, 188, 189, 193, 196, 199, 203, 204, 207, 211, 214, 215, 226, 227, 229, 233, 236, 241, 257, 261, 264, 266, 274, 276, 282, 284, 290, 293, 295, 296, 298, 299, 307, 308, 310, 312, 317, 329, 331, 334, 346, 347, 348, 351, 353, 354, 357, 359, 360, 363, 364, 368, 373, 377, 381, 384, 399, 400, 401, 403, 404, 409, 410, 414, 417, 418, 422, 426, 428, 434, 437, 443, 444, 447, 448, 451, 455, 457, 459, 461, 463, 464, 465, 467, 470, 471, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pycallable_check": [10, 56, 84, 85], "pycapsul": [11, 85, 484, 486, 487, 489], "opaqu": [11, 26, 33, 35, 39, 60, 62, 74, 108, 127, 184, 273, 329, 344, 358, 423, 428, 461, 478, 487, 488, 489, 491, 494, 495, 496], "often": [11, 13, 33, 35, 57, 63, 74, 76, 78, 80, 85, 87, 88, 90, 92, 93, 96, 97, 99, 104, 105, 107, 111, 114, 116, 118, 119, 120, 121, 122, 125, 131, 133, 135, 152, 159, 164, 168, 173, 179, 184, 188, 189, 196, 197, 199, 203, 207, 208, 212, 227, 239, 241, 244, 247, 250, 269, 270, 276, 282, 296, 307, 314, 323, 324, 326, 333, 346, 353, 356, 357, 359, 360, 362, 364, 369, 377, 380, 381, 384, 401, 404, 405, 410, 429, 436, 439, 443, 445, 449, 450, 451, 455, 457, 458, 459, 461, 463, 465, 466, 468, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 492, 495], "dynam": [11, 22, 25, 31, 42, 45, 51, 62, 65, 67, 71, 78, 80, 84, 85, 86, 89, 90, 91, 92, 96, 97, 99, 113, 114, 117, 124, 127, 129, 154, 195, 203, 217, 239, 240, 261, 264, 265, 269, 270, 299, 308, 311, 336, 351, 353, 356, 360, 361, 368, 384, 391, 399, 401, 404, 405, 422, 438, 443, 445, 447, 451, 455, 460, 471, 477, 479, 480, 482, 483, 488, 489, 490, 491, 494, 495], "load": [11, 14, 31, 33, 34, 35, 41, 45, 56, 57, 58, 67, 71, 75, 80, 84, 85, 86, 89, 91, 96, 97, 98, 99, 105, 106, 108, 110, 112, 113, 114, 117, 120, 129, 133, 155, 164, 168, 179, 180, 197, 200, 204, 207, 227, 237, 239, 257, 258, 261, 264, 265, 266, 268, 276, 277, 282, 283, 289, 291, 294, 299, 308, 312, 314, 317, 319, 322, 323, 326, 329, 335, 345, 349, 356, 357, 360, 368, 369, 377, 381, 383, 384, 394, 397, 399, 400, 420, 425, 428, 429, 434, 435, 436, 438, 439, 440, 442, 443, 446, 448, 451, 461, 465, 467, 470, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pycapsule_destructor": [11, 56], "destructor": [11, 33, 56, 62, 87, 88, 90, 96, 99, 126, 201, 308, 331, 364, 368, 443, 451, 470, 486, 489, 493, 495], "pycapsule_new": [11, 56, 85], "pycapsule_checkexact": 11, "encapsul": [11, 92, 96, 97, 100, 105, 112, 123, 125, 168, 179, 216, 222, 262, 273, 301, 320, 351, 368, 425, 429, 431, 434, 442, 447, 451, 481, 482, 483, 484, 491], "outliv": [11, 57, 299, 442], "permit": [11, 58, 85, 100, 111, 133, 199, 224, 226, 235, 239, 259, 270, 272, 274, 277, 280, 286, 298, 299, 308, 314, 323, 334, 360, 364, 369, 404, 425, 434, 441, 445, 446, 451, 470, 482, 483, 490, 491, 492, 495], "attribut": [11, 21, 22, 23, 24, 26, 27, 31, 33, 35, 45, 49, 50, 55, 59, 60, 61, 62, 67, 71, 86, 91, 99, 100, 107, 113, 116, 118, 120, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 137, 138, 141, 145, 148, 149, 155, 157, 161, 162, 163, 164, 168, 171, 172, 173, 180, 181, 185, 187, 188, 189, 190, 194, 196, 199, 200, 201, 203, 204, 207, 209, 210, 211, 214, 217, 219, 221, 222, 225, 227, 229, 230, 237, 239, 240, 242, 246, 247, 248, 251, 252, 254, 256, 257, 258, 259, 261, 262, 265, 266, 269, 273, 274, 277, 283, 284, 285, 286, 288, 296, 298, 299, 301, 306, 310, 314, 317, 318, 319, 320, 325, 327, 328, 329, 330, 334, 336, 340, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363, 364, 373, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 389, 394, 396, 397, 399, 400, 401, 403, 409, 410, 413, 414, 415, 417, 420, 422, 423, 425, 426, 428, 429, 430, 432, 434, 435, 437, 438, 439, 440, 441, 442, 444, 450, 451, 455, 456, 457, 458, 462, 465, 466, 467, 471, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 498], "modulenam": [11, 83, 85, 91, 97, 110, 465], "attributenam": [11, 85], "pycapsule_import": [11, 56, 85], "pycapsule_getpoint": [11, 56, 484], "compar": [11, 23, 33, 34, 49, 62, 63, 67, 81, 84, 87, 90, 96, 99, 101, 104, 106, 111, 113, 114, 116, 117, 118, 121, 122, 133, 138, 160, 173, 179, 189, 194, 195, 196, 199, 203, 204, 207, 209, 210, 211, 216, 228, 230, 239, 240, 250, 251, 274, 277, 281, 282, 284, 286, 289, 298, 299, 307, 311, 312, 323, 326, 329, 331, 333, 341, 343, 356, 357, 358, 360, 362, 368, 377, 382, 384, 397, 401, 402, 403, 404, 405, 413, 420, 428, 440, 442, 443, 445, 447, 450, 455, 456, 459, 460, 462, 467, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "strcmp": [11, 18, 87], "pycapsule_getdestructor": [11, 56], "legal": [11, 89, 104, 119, 239, 255, 261, 264, 273, 312, 381, 384, 391, 401, 435, 441, 445, 450, 456, 457, 467, 478, 479, 480, 482, 483, 484], "somewhat": [11, 23, 71, 90, 99, 112, 114, 189, 196, 218, 240, 261, 281, 307, 308, 353, 375, 384, 440, 463, 464, 465, 477, 482, 485, 487, 494, 495], "ambigu": [11, 35, 67, 90, 99, 107, 116, 131, 196, 269, 274, 279, 307, 312, 334, 360, 440, 442, 445, 449, 450, 456, 477, 483, 487, 488, 491, 493, 494, 495, 496], "pycapsule_isvalid": [11, 56, 484], "pyerr_occur": [11, 22, 23, 25, 35, 36, 39, 41, 49, 56, 63, 84, 85], "disambigu": [11, 39, 67, 196, 445, 450], "pycapsule_getcontext": [11, 56], "context": [11, 16, 23, 33, 42, 45, 49, 53, 63, 65, 67, 72, 78, 85, 90, 91, 97, 99, 107, 108, 112, 117, 119, 131, 133, 134, 135, 136, 138, 140, 141, 144, 151, 164, 165, 173, 177, 179, 180, 181, 196, 197, 200, 201, 203, 204, 232, 237, 239, 244, 249, 250, 256, 265, 266, 267, 269, 270, 273, 277, 282, 283, 284, 285, 286, 293, 303, 305, 308, 310, 312, 313, 314, 320, 322, 323, 329, 330, 331, 334, 336, 337, 343, 344, 345, 351, 353, 354, 359, 361, 364, 368, 373, 374, 375, 377, 380, 383, 390, 392, 401, 403, 404, 410, 414, 417, 420, 425, 427, 428, 429, 430, 434, 437, 442, 444, 445, 450, 451, 453, 457, 458, 471, 477, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 498], "pycapsule_getnam": [11, 56], "no_block": 11, "accessor": [11, 67, 97, 118, 239, 288, 426, 482, 495], "pycapsule_get": 11, "nonzero": [11, 23, 33, 58, 85, 116, 123, 126, 199, 204, 239, 282, 284, 290, 293, 298, 315, 326, 333, 334, 360, 368, 376, 380, 381, 443, 450, 453, 483, 495], "pycapsule_setcontext": [11, 56], "pycapsule_setdestructor": [11, 56], "pycapsule_setnam": [11, 56], "pycapsule_setpoint": [11, 56], "multipl": [12, 31, 33, 34, 45, 47, 49, 56, 62, 63, 67, 71, 72, 74, 75, 76, 78, 80, 83, 85, 87, 88, 90, 92, 96, 99, 101, 104, 106, 107, 108, 113, 115, 116, 117, 118, 119, 120, 121, 126, 127, 131, 132, 133, 135, 136, 138, 141, 147, 149, 150, 152, 156, 162, 164, 171, 173, 176, 180, 182, 188, 190, 194, 196, 199, 200, 202, 207, 213, 219, 223, 227, 233, 235, 237, 239, 240, 242, 244, 246, 248, 249, 250, 259, 261, 266, 268, 269, 270, 273, 276, 277, 282, 283, 285, 286, 290, 291, 293, 297, 298, 299, 306, 307, 308, 311, 312, 314, 315, 317, 318, 322, 329, 331, 333, 334, 335, 344, 345, 346, 351, 353, 354, 356, 357, 358, 359, 360, 363, 367, 368, 373, 377, 380, 382, 384, 390, 391, 392, 395, 399, 401, 403, 413, 414, 415, 417, 422, 424, 428, 430, 434, 442, 443, 444, 445, 446, 447, 450, 451, 456, 457, 460, 464, 467, 468, 470, 476, 477, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496], "scope": [12, 35, 51, 67, 88, 90, 97, 99, 106, 111, 113, 114, 124, 125, 133, 157, 173, 204, 239, 270, 274, 312, 322, 329, 335, 346, 353, 357, 367, 368, 384, 401, 404, 405, 414, 426, 428, 430, 442, 443, 444, 445, 447, 451, 456, 460, 465, 477, 483, 485, 489, 490, 493, 494, 495, 496, 498], "stack": [12, 23, 33, 35, 58, 67, 85, 87, 90, 106, 108, 113, 126, 129, 133, 138, 147, 151, 153, 157, 170, 173, 182, 184, 190, 197, 198, 204, 207, 227, 228, 239, 240, 261, 269, 272, 282, 284, 312, 330, 331, 334, 337, 346, 348, 353, 357, 358, 360, 368, 380, 390, 403, 404, 405, 442, 443, 444, 445, 450, 451, 453, 458, 460, 470, 477, 478, 481, 482, 483, 484, 488, 489, 490, 491, 492, 494, 495, 496], "frame": [12, 13, 16, 19, 23, 29, 33, 35, 49, 52, 65, 67, 90, 96, 106, 108, 110, 128, 151, 154, 155, 156, 157, 184, 190, 198, 204, 227, 228, 261, 270, 277, 282, 312, 348, 352, 353, 357, 360, 365, 368, 384, 389, 390, 391, 396, 400, 416, 422, 442, 444, 470, 478, 480, 481, 482, 484, 487, 490, 491, 492, 494, 496], "outer": [12, 26, 97, 99, 151, 182, 199, 204, 221, 240, 251, 254, 270, 368, 442, 443, 444, 445, 450, 451, 455, 458, 485, 488, 489, 490, 496], "elsewher": [12, 71, 116, 125, 151, 170, 180, 287, 298, 339, 401, 409, 425, 447, 450, 487, 488, 491], "pycellobject": 12, "pycell_typ": 12, "pycell_check": 12, "ob": [12, 19, 20, 29, 55, 66, 417, 488], "pycell_new": 12, "pycell_get": 12, "pycell_set": [12, 487], "No": [12, 33, 34, 45, 58, 59, 63, 67, 71, 80, 85, 87, 90, 92, 97, 105, 110, 113, 114, 116, 119, 120, 124, 131, 138, 145, 149, 151, 154, 171, 174, 180, 182, 188, 194, 196, 199, 204, 207, 210, 214, 219, 225, 226, 237, 244, 245, 256, 259, 261, 265, 270, 273, 282, 285, 298, 303, 308, 309, 312, 322, 329, 333, 334, 340, 349, 351, 356, 359, 360, 363, 364, 373, 374, 380, 384, 391, 399, 403, 420, 425, 443, 445, 446, 456, 458, 459, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490], "low": [13, 16, 24, 35, 38, 59, 62, 63, 67, 71, 78, 87, 92, 96, 98, 108, 110, 113, 116, 117, 119, 132, 137, 138, 141, 145, 147, 148, 149, 151, 152, 159, 163, 173, 177, 180, 182, 190, 191, 204, 227, 237, 239, 255, 269, 273, 275, 282, 296, 299, 308, 311, 323, 331, 333, 334, 343, 344, 345, 348, 351, 356, 357, 359, 360, 368, 371, 384, 398, 401, 415, 417, 428, 430, 439, 471, 479, 480, 482, 483, 484, 487, 490, 492, 493, 495], "execut": [13, 23, 24, 26, 33, 34, 35, 45, 49, 51, 52, 58, 65, 67, 71, 72, 78, 80, 83, 84, 85, 87, 88, 89, 90, 97, 99, 101, 105, 107, 108, 110, 114, 116, 119, 121, 124, 125, 126, 131, 133, 135, 136, 137, 140, 141, 145, 147, 149, 151, 153, 155, 157, 163, 164, 168, 170, 171, 173, 176, 179, 182, 183, 189, 198, 200, 205, 206, 215, 227, 239, 240, 248, 250, 259, 262, 264, 265, 269, 270, 273, 281, 282, 283, 284, 287, 295, 296, 298, 299, 307, 308, 309, 312, 314, 315, 316, 318, 323, 324, 328, 335, 337, 340, 343, 345, 346, 347, 349, 353, 356, 358, 360, 362, 363, 364, 368, 369, 373, 375, 380, 381, 383, 384, 386, 390, 393, 401, 403, 404, 405, 410, 414, 415, 418, 420, 422, 435, 442, 445, 446, 447, 448, 451, 452, 455, 456, 458, 460, 461, 462, 463, 464, 466, 470, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "hasn": [13, 35, 71, 91, 92, 96, 97, 121, 145, 151, 179, 203, 246, 312, 329, 349, 357, 371, 404, 405, 477, 478, 482, 483, 485, 492, 494], "pycodeobject": [13, 26, 488], "subject": [13, 45, 54, 62, 87, 96, 107, 113, 114, 120, 133, 180, 196, 204, 207, 210, 214, 216, 217, 219, 257, 261, 270, 272, 277, 282, 283, 284, 286, 303, 323, 333, 341, 345, 353, 357, 377, 381, 401, 441, 442, 443, 446, 450, 455, 456, 475, 482, 487, 488, 491], "pycode_typ": 13, "pycode_check": 13, "co": [13, 31, 57, 65, 67, 88, 131, 167, 179, 190, 199, 235, 271, 290, 314, 353, 377, 399, 466, 480, 481, 488, 489, 494, 495], "pycode_getnumfre": 13, "pycode_new": [13, 484, 488, 495], "argcount": [13, 65, 155, 400, 495], "kwonlyargcount": [13, 155, 400], "nlocal": [13, 155, 400], "stacksiz": [13, 155, 400], "varnam": 13, "freevar": 13, "cellvar": [13, 239], "filenam": [13, 23, 33, 34, 45, 58, 65, 67, 71, 72, 73, 75, 76, 78, 81, 83, 89, 96, 97, 107, 110, 113, 114, 116, 121, 123, 131, 133, 155, 157, 162, 164, 168, 170, 171, 172, 173, 176, 180, 182, 188, 189, 197, 202, 203, 207, 210, 211, 214, 215, 219, 227, 228, 232, 233, 237, 239, 244, 245, 248, 257, 261, 264, 265, 269, 270, 280, 282, 283, 284, 285, 287, 294, 296, 298, 300, 301, 307, 308, 309, 310, 312, 314, 317, 323, 324, 326, 334, 335, 345, 346, 347, 352, 364, 367, 368, 372, 373, 375, 377, 384, 390, 393, 396, 397, 399, 400, 403, 405, 410, 415, 418, 420, 421, 422, 426, 427, 428, 429, 436, 437, 451, 453, 461, 466, 467, 470, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496], "qualnam": [13, 19, 27, 29, 106, 113, 211, 225, 283], "firstlineno": 13, "linet": 13, "exceptiont": 13, "dummi": [13, 67, 85, 114, 125, 177, 189, 203, 244, 273, 308, 357, 373, 377, 380, 399, 422, 493], "pycode_newempti": [13, 484], "bind": [13, 44, 57, 67, 90, 97, 99, 105, 114, 117, 138, 152, 155, 182, 184, 190, 207, 237, 239, 244, 255, 259, 270, 281, 283, 309, 313, 329, 335, 344, 350, 351, 353, 354, 357, 367, 368, 377, 383, 386, 390, 391, 399, 424, 441, 442, 443, 445, 447, 448, 449, 451, 455, 456, 474, 477, 478, 479, 481, 482, 483, 487, 490, 491, 492, 494], "definit": [13, 30, 31, 33, 35, 39, 45, 50, 56, 57, 58, 63, 67, 71, 73, 80, 85, 86, 87, 88, 97, 99, 100, 104, 106, 111, 112, 114, 116, 123, 127, 131, 156, 157, 163, 171, 174, 182, 189, 190, 194, 196, 225, 239, 240, 244, 246, 252, 261, 264, 265, 266, 269, 270, 271, 279, 282, 284, 288, 296, 298, 299, 304, 307, 314, 323, 327, 328, 330, 339, 351, 356, 360, 361, 368, 374, 379, 381, 392, 399, 400, 401, 402, 403, 410, 413, 417, 423, 424, 425, 426, 429, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456, 460, 464, 465, 468, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 494, 495, 496], "bytecod": [13, 31, 33, 35, 65, 67, 71, 96, 97, 98, 99, 107, 108, 110, 116, 176, 200, 239, 264, 265, 269, 270, 279, 315, 326, 339, 348, 367, 368, 397, 443, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 489, 490, 491, 492, 498], "inter": [13, 203, 272, 275, 348, 401, 467], "subtl": [13, 23, 62, 85, 90, 143, 188, 207, 229, 304, 307, 310, 323, 443, 444, 464, 491], "incorrect": [13, 99, 114, 116, 123, 170, 197, 207, 227, 239, 258, 261, 282, 286, 307, 308, 381, 401, 403, 405, 412, 426, 437, 446, 478, 479, 480, 482, 485, 487, 490, 491, 495, 496], "vm": [13, 96, 204, 307, 337, 490, 491], "crash": [13, 35, 43, 56, 62, 85, 87, 108, 112, 133, 164, 189, 197, 201, 228, 239, 261, 286, 298, 307, 312, 314, 345, 368, 377, 477, 482, 483, 490, 491, 493], "extrem": [13, 90, 107, 112, 114, 119, 221, 277, 283, 308, 314, 333, 359, 404, 425, 437, 445], "care": [13, 23, 33, 35, 62, 65, 67, 71, 78, 80, 81, 85, 87, 88, 96, 97, 105, 106, 112, 113, 114, 116, 119, 120, 125, 131, 133, 147, 157, 173, 182, 189, 194, 196, 199, 204, 207, 210, 222, 225, 241, 244, 265, 273, 282, 283, 284, 286, 298, 304, 307, 314, 323, 329, 348, 350, 363, 364, 368, 373, 403, 404, 405, 415, 423, 426, 428, 436, 445, 455, 461, 463, 476, 477, 481, 482, 483, 484, 485, 487, 488, 489, 491, 496], "pycode_newwithposonlyarg": [13, 488, 495], "posonlyargcount": [13, 155, 400, 495], "caveat": [13, 67, 126, 150, 205, 260, 264, 265, 270, 323, 326, 404, 443, 451, 475], "funcnam": [13, 71, 84, 110, 157, 282, 442, 455], "line": [13, 23, 24, 26, 33, 34, 35, 63, 65, 67, 71, 72, 74, 75, 76, 78, 80, 81, 83, 84, 85, 88, 90, 92, 96, 97, 98, 99, 101, 104, 106, 107, 108, 110, 112, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 134, 137, 148, 149, 155, 156, 157, 159, 162, 164, 165, 167, 170, 171, 172, 173, 180, 181, 182, 183, 188, 189, 190, 191, 195, 196, 198, 199, 200, 201, 205, 206, 207, 209, 210, 213, 214, 215, 216, 218, 219, 221, 222, 225, 227, 228, 233, 236, 237, 239, 244, 254, 256, 259, 262, 265, 266, 269, 273, 274, 276, 279, 282, 283, 284, 285, 286, 287, 293, 296, 297, 298, 300, 301, 303, 311, 312, 314, 316, 317, 320, 322, 323, 327, 328, 329, 330, 332, 333, 334, 339, 342, 346, 347, 350, 351, 356, 357, 359, 360, 361, 363, 364, 366, 367, 368, 369, 374, 378, 379, 383, 384, 387, 390, 392, 396, 397, 399, 401, 402, 404, 405, 411, 414, 415, 418, 422, 426, 428, 431, 435, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 467, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 482, 483, 485, 486, 488, 491, 492, 493, 494, 495, 496, 498], "pycode_addr2lin": [13, 480, 487, 488, 493], "byte_offset": 13, "pyframe_getlinenumb": [13, 26, 56, 484, 487, 488, 493, 496], "626": [13, 67, 204, 443], "pycode_addr2loc": [13, 488], "start_lin": [13, 443], "start_column": [13, 443], "end_lin": [13, 443], "end_column": [13, 443], "column": [13, 34, 62, 67, 97, 110, 119, 133, 163, 164, 168, 188, 190, 203, 204, 207, 227, 239, 261, 270, 276, 277, 296, 308, 315, 323, 329, 334, 347, 356, 360, 363, 379, 383, 384, 393, 403, 428, 431, 443, 457, 461, 470, 477, 484, 488, 492], "particular": [13, 33, 35, 45, 56, 58, 62, 63, 65, 67, 71, 74, 75, 76, 78, 85, 87, 90, 97, 98, 99, 105, 107, 111, 112, 113, 119, 120, 121, 122, 125, 126, 127, 131, 133, 150, 151, 164, 171, 174, 180, 182, 188, 189, 190, 195, 196, 206, 207, 217, 222, 227, 241, 246, 254, 257, 261, 262, 264, 266, 270, 272, 274, 277, 278, 282, 283, 284, 286, 289, 290, 291, 298, 299, 303, 307, 308, 314, 317, 331, 334, 337, 341, 343, 347, 348, 349, 351, 353, 357, 358, 360, 361, 363, 364, 368, 377, 379, 380, 384, 390, 391, 396, 401, 403, 404, 405, 409, 410, 411, 414, 415, 417, 425, 426, 428, 435, 439, 441, 442, 443, 445, 446, 447, 449, 451, 455, 457, 461, 465, 468, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495], "pycode_getcod": [13, 488], "getattr": [13, 90, 97, 99, 100, 105, 113, 114, 127, 138, 173, 189, 194, 204, 239, 270, 298, 306, 307, 314, 361, 373, 400, 401, 442, 455, 465, 477, 489, 491, 494], "co_cod": [13, 270, 443, 488], "demand": [13, 42, 63, 67, 105, 180, 298, 307, 404, 473, 487, 492, 496], "debugg": [13, 32, 42, 67, 85, 108, 198, 207, 227, 228, 239, 261, 269, 336, 368, 396, 403, 443, 455, 471, 476, 479, 480, 482, 483, 484, 488, 489, 493, 494, 495], "profil": [13, 32, 34, 35, 67, 92, 97, 108, 110, 169, 171, 269, 348, 357, 362, 368, 369, 380, 384, 420, 453, 466, 471, 474, 478, 479, 481, 482, 483, 485, 487, 488, 493, 495], "pycode_getvarnam": [13, 488], "co_varnam": [13, 204, 270, 443, 488], "pytupleobject": [13, 53, 58, 59, 61], "pycode_getcellvar": [13, 488], "co_cellvar": [13, 270, 443, 488], "pycode_getfreevar": [13, 488], "co_freevar": [13, 270, 443, 488], "pycodec_regist": [14, 56], "search_funct": [14, 171], "regist": [14, 33, 34, 58, 62, 67, 72, 77, 85, 88, 93, 96, 97, 99, 119, 120, 127, 131, 138, 140, 141, 144, 145, 153, 171, 174, 180, 182, 184, 188, 207, 211, 217, 222, 228, 239, 240, 255, 265, 269, 273, 282, 291, 298, 304, 308, 313, 314, 317, 329, 335, 343, 344, 347, 348, 353, 357, 360, 368, 377, 384, 391, 399, 401, 403, 410, 415, 417, 418, 421, 425, 428, 430, 435, 436, 442, 443, 445, 447, 469, 476, 477, 478, 480, 481, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495], "tri": [14, 33, 42, 48, 85, 87, 88, 90, 97, 99, 107, 108, 111, 116, 121, 123, 138, 154, 172, 189, 201, 204, 207, 217, 223, 239, 264, 273, 281, 282, 283, 284, 291, 297, 298, 304, 308, 318, 328, 334, 337, 351, 361, 377, 380, 384, 410, 422, 443, 445, 447, 449, 458, 477, 478, 479, 480, 481, 482, 483, 484, 485, 494], "packag": [14, 31, 33, 34, 56, 62, 63, 67, 69, 74, 76, 77, 78, 81, 83, 86, 88, 89, 91, 92, 97, 99, 105, 108, 109, 113, 114, 121, 123, 132, 156, 164, 173, 177, 186, 189, 196, 200, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 226, 239, 244, 252, 255, 256, 261, 264, 265, 268, 269, 270, 276, 282, 283, 284, 288, 291, 294, 295, 296, 298, 300, 322, 327, 328, 330, 339, 345, 349, 350, 351, 357, 359, 361, 368, 369, 370, 383, 384, 390, 394, 395, 399, 400, 401, 403, 404, 405, 407, 410, 414, 415, 426, 429, 433, 436, 437, 438, 440, 441, 448, 451, 453, 459, 460, 466, 469, 470, 471, 473, 475, 477, 479, 481, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498], "pycodec_unregist": [14, 56, 487], "unregist": [14, 138, 140, 153, 171, 228, 308, 343, 344, 347, 384, 417, 487, 496], "clear": [14, 32, 33, 35, 45, 47, 58, 60, 62, 66, 67, 81, 85, 87, 88, 90, 92, 97, 99, 104, 110, 112, 114, 116, 117, 119, 120, 138, 150, 168, 171, 173, 174, 180, 182, 190, 199, 204, 207, 219, 230, 237, 240, 241, 246, 257, 261, 265, 270, 280, 282, 284, 286, 291, 307, 308, 312, 317, 334, 335, 347, 348, 353, 356, 359, 360, 368, 373, 377, 380, 391, 396, 397, 399, 401, 404, 405, 414, 415, 428, 438, 442, 443, 445, 455, 457, 464, 471, 476, 477, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 493, 494, 496], "cach": [14, 31, 34, 42, 60, 62, 63, 67, 85, 87, 96, 99, 105, 113, 116, 120, 127, 138, 160, 171, 173, 176, 189, 197, 203, 204, 230, 234, 240, 244, 264, 265, 280, 282, 298, 303, 308, 317, 326, 334, 339, 345, 356, 357, 363, 368, 375, 377, 397, 401, 403, 410, 417, 438, 440, 442, 465, 467, 468, 470, 476, 478, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 496], "noth": [14, 23, 33, 34, 35, 42, 57, 71, 80, 84, 85, 87, 90, 101, 113, 114, 116, 117, 120, 121, 126, 127, 133, 134, 144, 148, 151, 153, 167, 171, 182, 190, 194, 196, 203, 204, 207, 212, 224, 225, 227, 240, 254, 261, 262, 264, 265, 273, 281, 282, 283, 284, 286, 297, 298, 307, 314, 320, 334, 347, 348, 350, 354, 356, 357, 360, 362, 364, 365, 374, 380, 384, 397, 401, 403, 414, 422, 432, 441, 443, 445, 450, 451, 454, 455, 456, 463, 465, 468, 470, 479, 480, 483, 484, 491, 492, 495, 496], "pycodec_knownencod": [14, 56], "pycodec_encod": [14, 56], "lookuperror": [14, 23, 63, 171, 183, 227, 360, 465, 491], "pycodec_decod": [14, 56], "decod": [14, 23, 33, 34, 58, 63, 65, 67, 84, 85, 99, 114, 119, 132, 138, 145, 148, 149, 154, 156, 158, 159, 188, 189, 201, 210, 211, 213, 214, 215, 216, 217, 218, 220, 222, 223, 227, 239, 249, 258, 265, 269, 273, 285, 300, 303, 308, 311, 314, 315, 319, 350, 352, 353, 356, 357, 360, 363, 364, 366, 368, 373, 374, 377, 392, 393, 394, 409, 410, 414, 422, 434, 437, 443, 447, 450, 461, 466, 470, 477, 479, 481, 482, 483, 484, 485, 486, 489, 490, 491, 492, 493, 496], "lower": [14, 33, 56, 63, 67, 71, 84, 96, 97, 99, 104, 108, 110, 114, 116, 118, 133, 138, 145, 151, 153, 159, 163, 168, 171, 173, 176, 180, 190, 191, 193, 199, 209, 210, 214, 216, 217, 219, 225, 233, 239, 240, 250, 254, 259, 262, 276, 282, 286, 289, 298, 303, 308, 323, 334, 337, 340, 353, 356, 357, 360, 361, 368, 375, 380, 381, 382, 390, 392, 399, 409, 410, 443, 445, 451, 457, 478, 480, 481, 482, 483, 484, 486, 489, 491, 496], "insensit": [14, 18, 67, 99, 116, 118, 119, 171, 173, 180, 210, 219, 258, 259, 265, 291, 334, 349, 356, 361, 362, 373, 377, 410, 415, 422, 470, 476, 481, 483, 494, 498], "keyerror": [14, 22, 23, 35, 54, 90, 97, 173, 180, 183, 197, 210, 211, 219, 225, 227, 247, 250, 257, 264, 265, 276, 286, 311, 325, 343, 344, 345, 355, 360, 361, 370, 373, 400, 401, 402, 404, 405, 437, 440, 443, 447, 465, 467, 480, 481, 484, 490, 493, 495], "pycodec_incrementalencod": [14, 56], "incrementalencod": [14, 67, 158, 482], "pycodec_incrementaldecod": [14, 56], "incrementaldecod": [14, 67, 158, 273, 482], "pycodec_streamread": [14, 56], "stream": [14, 24, 33, 34, 41, 67, 96, 99, 107, 113, 117, 119, 129, 134, 135, 138, 139, 142, 149, 151, 158, 159, 162, 170, 182, 190, 208, 214, 215, 220, 221, 226, 227, 233, 239, 243, 248, 250, 256, 259, 261, 263, 267, 269, 276, 277, 282, 283, 284, 285, 291, 296, 308, 313, 315, 322, 323, 329, 343, 344, 346, 347, 348, 349, 352, 353, 354, 364, 365, 368, 373, 377, 393, 401, 403, 410, 414, 416, 422, 423, 424, 427, 428, 431, 432, 434, 437, 439, 443, 445, 449, 450, 453, 465, 470, 477, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495], "streamread": [14, 67, 136, 138, 149, 158, 481, 482, 492, 493], "factori": [14, 62, 67, 71, 99, 111, 131, 138, 140, 142, 145, 151, 171, 182, 185, 189, 195, 202, 207, 217, 221, 222, 240, 265, 271, 282, 283, 284, 286, 290, 298, 307, 313, 330, 347, 380, 384, 386, 401, 405, 417, 422, 425, 428, 434, 435, 443, 479, 482, 483, 486, 488, 489, 490, 492, 494, 495, 496], "pycodec_streamwrit": [14, 56], "streamwrit": [14, 67, 136, 138, 149, 158, 482, 488, 494], "pycodec_registererror": [14, 56], "unencod": [14, 45, 119, 171, 332, 480, 485, 489], "undecod": [14, 58, 119, 171, 210, 308, 489], "unicodeencodeerror": [14, 23, 45, 83, 119, 171, 227, 368, 409, 465, 488, 489, 495], "unicodedecodeerror": [14, 23, 119, 171, 227, 308, 409, 465, 482, 485, 489, 491, 495], "unicodetranslateerror": [14, 23, 171, 227, 465], "problemat": [14, 60, 99, 121, 180, 283, 298, 481, 486, 488, 489, 494], "extract": [14, 20, 35, 55, 67, 84, 86, 87, 101, 106, 107, 111, 112, 130, 131, 160, 190, 196, 203, 204, 207, 211, 212, 214, 228, 239, 244, 250, 256, 257, 266, 267, 270, 276, 308, 312, 327, 328, 334, 345, 347, 351, 360, 368, 396, 409, 443, 456, 457, 458, 466, 476, 480, 481, 482, 483, 484, 487, 488, 489, 491, 492, 493, 495, 496], "replac": [14, 22, 24, 31, 33, 34, 35, 38, 42, 44, 55, 56, 58, 59, 62, 63, 67, 71, 76, 80, 83, 85, 90, 96, 97, 98, 101, 104, 105, 106, 107, 112, 114, 119, 120, 121, 123, 131, 133, 138, 144, 151, 163, 164, 170, 171, 173, 177, 179, 180, 186, 189, 190, 192, 194, 196, 203, 204, 207, 210, 211, 216, 219, 220, 223, 225, 227, 228, 232, 239, 243, 249, 250, 253, 254, 264, 265, 266, 267, 270, 273, 281, 282, 283, 286, 287, 291, 294, 298, 307, 308, 309, 311, 312, 322, 323, 330, 333, 334, 335, 336, 346, 347, 348, 350, 356, 357, 360, 361, 368, 373, 375, 377, 379, 380, 381, 383, 384, 386, 390, 391, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 409, 410, 414, 415, 417, 422, 424, 425, 428, 430, 432, 436, 437, 440, 443, 445, 448, 450, 451, 454, 455, 461, 464, 465, 466, 470, 471, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "resum": [14, 33, 99, 107, 142, 145, 146, 148, 151, 182, 190, 191, 204, 270, 298, 308, 312, 314, 329, 331, 376, 380, 422, 442, 443, 445, 455, 479, 480, 481, 482, 488], "pycodec_lookuperror": [14, 56], "strict": [14, 34, 63, 106, 107, 111, 119, 156, 171, 180, 188, 189, 199, 216, 221, 222, 225, 239, 254, 256, 257, 258, 262, 267, 270, 273, 274, 276, 277, 291, 308, 309, 310, 311, 314, 357, 360, 368, 377, 381, 409, 425, 441, 471, 477, 478, 480, 483, 484, 487, 489, 490, 491, 492, 494], "pycodec_stricterror": [14, 56], "exc": [14, 23, 33, 47, 123, 133, 145, 151, 179, 182, 227, 396, 403, 405, 443, 451, 458, 483, 485, 487, 490], "pycodec_ignoreerror": [14, 56], "faulti": 14, "pycodec_replaceerror": [14, 56], "fffd": [14, 119, 171, 477], "pycodec_xmlcharrefreplaceerror": [14, 56], "xml": [14, 67, 80, 92, 107, 116, 119, 171, 239, 269, 271, 273, 288, 319, 342, 410, 433, 466, 467, 476, 478, 479, 480, 481, 482, 483, 484, 488, 489, 498], "pycodec_backslashreplaceerror": [14, 56], "backslash": [14, 67, 71, 73, 121, 171, 172, 207, 223, 239, 261, 273, 298, 308, 311, 334, 364, 450, 461, 480, 481, 485, 493, 494], "escap": [14, 16, 42, 49, 58, 67, 71, 85, 90, 97, 104, 114, 116, 119, 131, 138, 149, 171, 180, 188, 190, 191, 203, 222, 239, 245, 252, 261, 265, 273, 277, 303, 334, 336, 346, 360, 361, 364, 381, 399, 401, 409, 432, 434, 443, 464, 467, 477, 478, 481, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pycodec_namereplaceerror": [14, 56, 492], "7": [14, 16, 17, 20, 23, 25, 31, 33, 35, 40, 42, 43, 45, 47, 49, 55, 57, 58, 62, 67, 71, 75, 80, 81, 90, 97, 101, 104, 106, 107, 108, 110, 114, 116, 119, 121, 122, 124, 126, 131, 137, 138, 141, 143, 145, 147, 148, 151, 153, 159, 163, 164, 171, 173, 176, 179, 180, 182, 183, 186, 189, 190, 191, 194, 196, 199, 201, 203, 204, 207, 209, 216, 217, 219, 222, 223, 225, 227, 228, 235, 239, 240, 241, 249, 250, 251, 255, 256, 258, 259, 265, 266, 267, 268, 270, 273, 274, 276, 277, 281, 282, 284, 285, 290, 293, 296, 298, 299, 301, 308, 311, 312, 314, 315, 321, 322, 323, 326, 327, 328, 331, 333, 334, 337, 347, 348, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 368, 373, 380, 381, 382, 392, 393, 396, 397, 399, 400, 401, 403, 404, 405, 409, 412, 413, 414, 415, 418, 422, 424, 427, 428, 429, 434, 435, 436, 437, 441, 442, 443, 445, 447, 450, 455, 456, 457, 461, 464, 465, 466, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 495, 496, 498], "distinct": [15, 33, 35, 42, 45, 71, 90, 97, 99, 104, 116, 117, 119, 154, 173, 182, 194, 196, 199, 207, 240, 276, 283, 285, 290, 299, 307, 314, 323, 349, 357, 360, 363, 368, 384, 401, 422, 447, 450, 461, 477, 479, 483, 489, 490, 493, 494, 496], "dereferenc": [15, 189, 241, 417, 490], "throughout": [15, 67, 85, 92, 105, 113, 123, 155, 199, 265, 282, 404, 449, 477, 479, 480, 482, 483, 484, 488, 489, 492], "portion": [15, 71, 80, 99, 104, 107, 111, 116, 140, 148, 154, 167, 192, 196, 199, 217, 223, 240, 249, 265, 282, 283, 284, 350, 353, 358, 359, 391, 403, 409, 422, 425, 431, 434, 435, 441, 447, 477, 489, 490, 492], "real": [15, 35, 38, 47, 58, 67, 71, 84, 88, 97, 99, 105, 114, 120, 121, 157, 166, 167, 170, 173, 182, 189, 207, 214, 219, 227, 239, 240, 250, 262, 265, 277, 303, 304, 305, 308, 318, 323, 334, 337, 339, 346, 348, 349, 356, 357, 359, 360, 361, 368, 369, 381, 384, 403, 404, 405, 410, 428, 442, 446, 450, 454, 455, 456, 457, 458, 459, 469, 476, 482, 483, 484, 489, 490, 493], "_py_c_sum": 15, "_py_c_diff": 15, "_py_c_neg": 15, "num": [15, 114, 133, 171, 190, 199, 240, 244, 254, 262, 298, 307, 315, 357, 361, 401, 456, 457, 483, 484, 495], "negat": [15, 47, 106, 199, 240, 306, 308, 346, 360, 445, 457], "_py_c_prod": 15, "_py_c_quot": 15, "dividend": [15, 199], "divisor": [15, 199, 290, 464], "quotient": [15, 196, 199, 239, 276, 290, 323, 360, 445, 459, 464], "errno": [15, 18, 23, 35, 67, 85, 96, 129, 145, 155, 189, 201, 227, 229, 265, 269, 308, 329, 343, 348, 353, 357, 368, 377, 458, 483, 488, 490, 492, 494], "edom": [15, 226], "_py_c_pow": 15, "exp": [15, 167, 199, 239, 290, 333, 361, 483, 484, 490], "exponenti": [15, 97, 199, 284, 306, 333, 360, 377, 424, 445, 480, 481, 483], "pycomplexobject": 15, "pycomplex_typ": [15, 56], "pycomplex_check": 15, "pycomplex_checkexact": 15, "pycomplex_fromccomplex": 15, "pycomplex_fromdoubl": [15, 56], "pycomplex_realasdoubl": [15, 56], "pycomplex_imagasdoubl": [15, 56], "imaginari": [15, 67, 99, 167, 196, 304, 360, 361, 368, 442, 443, 445, 464, 483, 484, 489], "pycomplex_asccomplex": [15, 483], "__complex__": [15, 167, 239, 277, 401, 404, 443, 483, 488, 491, 494, 495], "__float__": [15, 25, 62, 167, 239, 401, 404, 443, 487, 494, 495], "__index__": [15, 25, 39, 62, 67, 239, 306, 360, 363, 401, 404, 443, 483, 484, 485, 487, 488, 491, 494, 495, 498], "upon": [15, 18, 25, 31, 33, 35, 41, 63, 65, 84, 85, 92, 97, 99, 105, 113, 153, 157, 164, 168, 171, 172, 182, 186, 188, 190, 199, 201, 202, 207, 256, 258, 261, 262, 265, 286, 299, 308, 312, 314, 343, 344, 346, 348, 349, 350, 356, 357, 363, 365, 368, 377, 395, 414, 415, 416, 425, 441, 443, 445, 447, 454, 455, 465, 468, 478, 483, 488, 490, 491, 493, 495], "perform": [16, 18, 20, 23, 28, 33, 35, 42, 58, 59, 62, 63, 64, 67, 76, 77, 83, 84, 87, 90, 93, 99, 101, 104, 107, 113, 114, 117, 119, 121, 123, 129, 131, 133, 134, 135, 137, 138, 139, 145, 150, 151, 152, 171, 173, 174, 176, 179, 180, 182, 188, 190, 194, 195, 196, 199, 201, 204, 207, 213, 220, 223, 225, 227, 229, 234, 237, 239, 240, 241, 246, 250, 256, 257, 259, 261, 262, 263, 265, 267, 274, 276, 277, 281, 282, 283, 284, 287, 289, 298, 299, 303, 306, 308, 313, 315, 320, 321, 323, 329, 332, 333, 334, 336, 346, 347, 348, 349, 352, 353, 354, 356, 357, 360, 361, 364, 368, 370, 380, 381, 382, 386, 393, 399, 401, 403, 404, 409, 410, 414, 420, 430, 434, 435, 441, 443, 445, 447, 450, 451, 454, 455, 456, 457, 459, 460, 461, 464, 465, 467, 470, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498], "pydict_check": [16, 22], "tree": [16, 33, 34, 62, 67, 72, 73, 75, 77, 78, 80, 81, 90, 96, 97, 98, 99, 107, 121, 123, 164, 176, 187, 203, 208, 210, 218, 219, 221, 230, 245, 250, 261, 269, 279, 288, 308, 311, 326, 327, 347, 358, 360, 368, 372, 384, 390, 391, 399, 414, 424, 425, 426, 443, 446, 467, 468, 470, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 492, 493, 495, 496, 498], "carefulli": [16, 23, 51, 65, 88, 97, 164, 194, 282, 314, 323, 334, 345, 443, 456, 470, 481, 482, 483, 484, 491], "violat": [16, 23, 42, 62, 106, 189, 196, 201, 217, 222, 229, 262, 314, 320, 357, 360, 416, 443, 455, 488, 493], "immedi": [16, 23, 24, 28, 31, 33, 35, 45, 62, 65, 85, 91, 96, 97, 99, 104, 105, 107, 116, 126, 138, 141, 142, 145, 146, 147, 148, 150, 151, 154, 166, 168, 179, 182, 188, 189, 190, 197, 199, 207, 219, 227, 228, 230, 232, 240, 246, 250, 256, 261, 270, 273, 281, 286, 297, 298, 299, 308, 310, 312, 327, 329, 331, 334, 346, 348, 353, 356, 357, 360, 361, 364, 368, 374, 375, 376, 380, 381, 384, 391, 399, 401, 403, 404, 405, 410, 415, 421, 425, 428, 430, 431, 434, 435, 442, 443, 445, 447, 458, 461, 466, 470, 476, 479, 480, 481, 483, 484, 487, 490, 491, 493, 494, 495, 496], "singleton": [16, 20, 45, 46, 49, 55, 57, 62, 85, 97, 99, 106, 114, 133, 196, 289, 314, 360, 404, 434, 442, 443, 445, 456, 457, 478, 487, 488, 493, 494], "heap": [16, 32, 35, 42, 50, 57, 67, 85, 87, 88, 195, 228, 269, 297, 337, 399, 467, 480, 481, 483, 484, 487, 488, 495, 496], "pack": [16, 67, 114, 132, 154, 158, 189, 229, 239, 248, 261, 269, 274, 283, 284, 286, 299, 318, 353, 360, 384, 389, 391, 423, 436, 443, 455, 457, 466, 467, 482, 484, 488, 489], "unpack": [16, 67, 72, 78, 85, 96, 107, 114, 121, 123, 132, 133, 173, 204, 214, 229, 239, 298, 319, 347, 353, 360, 361, 363, 400, 401, 404, 442, 445, 446, 451, 457, 458, 460, 466, 467, 477, 481, 482, 483, 485, 487, 488, 489, 491, 495], "intrins": [16, 180, 306, 314, 443, 486], "direct": [16, 33, 35, 49, 63, 67, 71, 84, 85, 97, 99, 105, 111, 114, 121, 122, 123, 126, 133, 140, 161, 163, 171, 173, 174, 177, 182, 189, 196, 199, 200, 219, 232, 239, 246, 261, 265, 269, 307, 308, 321, 322, 323, 329, 356, 357, 359, 360, 375, 379, 380, 381, 382, 391, 399, 400, 410, 425, 428, 432, 441, 443, 445, 447, 451, 457, 458, 461, 466, 467, 476, 477, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498], "codec": [16, 32, 34, 64, 67, 99, 119, 158, 209, 215, 216, 227, 239, 269, 273, 308, 351, 360, 378, 437, 463, 466, 476, 477, 479, 481, 482, 485, 488, 492, 493, 495, 496, 498], "properti": [16, 57, 62, 67, 90, 97, 99, 106, 107, 111, 113, 116, 118, 127, 133, 163, 171, 173, 183, 188, 189, 190, 194, 195, 199, 207, 209, 210, 217, 219, 222, 225, 233, 235, 239, 240, 244, 249, 250, 266, 270, 272, 273, 274, 277, 281, 286, 296, 298, 304, 319, 346, 351, 357, 359, 360, 362, 363, 368, 375, 380, 393, 397, 399, 400, 401, 402, 403, 404, 410, 417, 420, 425, 426, 429, 430, 431, 437, 441, 442, 443, 450, 451, 455, 457, 465, 466, 476, 477, 479, 480, 481, 482, 484, 488, 489, 490, 491, 492, 493, 494, 495], "latin": [16, 67, 116, 119, 131, 148, 171, 209, 237, 253, 334, 346, 356, 373, 402, 445, 479, 480, 483, 486, 489, 492, 493, 494, 496], "ascii": [16, 23, 31, 34, 42, 49, 67, 83, 104, 113, 114, 116, 117, 119, 120, 129, 131, 133, 145, 149, 152, 156, 158, 164, 171, 189, 190, 196, 204, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 222, 223, 228, 239, 244, 251, 262, 269, 271, 273, 277, 281, 287, 297, 300, 301, 303, 308, 314, 329, 332, 334, 346, 351, 354, 356, 357, 360, 361, 362, 365, 373, 374, 377, 410, 412, 428, 434, 437, 441, 449, 450, 456, 461, 463, 465, 470, 477, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496], "mbc": [16, 33, 34, 67, 158, 368, 470, 476, 479, 480, 489, 490, 493], "window": [16, 23, 33, 34, 35, 42, 56, 58, 62, 65, 67, 71, 73, 77, 78, 80, 81, 83, 85, 86, 90, 92, 93, 94, 95, 96, 97, 99, 113, 114, 117, 119, 120, 122, 126, 129, 138, 144, 145, 149, 158, 164, 168, 177, 179, 180, 184, 189, 192, 205, 206, 227, 228, 236, 239, 243, 245, 257, 264, 265, 269, 273, 276, 281, 284, 287, 290, 291, 293, 296, 297, 298, 307, 308, 309, 311, 321, 331, 343, 344, 346, 347, 348, 349, 351, 353, 356, 357, 358, 368, 369, 370, 373, 375, 376, 377, 380, 381, 383, 385, 386, 387, 388, 390, 391, 393, 403, 410, 412, 414, 418, 422, 437, 439, 440, 441, 443, 450, 453, 454, 456, 461, 463, 465, 468, 470, 471, 473, 474, 477, 478, 479, 481, 482, 485, 486, 487, 489, 491, 492, 495, 496, 498], "cell": [16, 27, 65, 67, 97, 104, 105, 129, 189, 204, 240, 250, 269, 270, 391, 400, 443, 483, 488], "phase": [16, 32, 33, 67, 83, 85, 99, 112, 122, 150, 167, 241, 265, 357, 391, 446, 447, 451, 483, 487, 489, 490], "lookup": [16, 17, 22, 31, 60, 62, 64, 67, 89, 90, 97, 99, 106, 133, 160, 171, 173, 194, 204, 209, 217, 225, 227, 239, 240, 244, 259, 270, 274, 284, 302, 306, 308, 318, 360, 361, 367, 368, 384, 391, 396, 402, 404, 440, 442, 447, 455, 467, 477, 479, 481, 482, 483, 487, 488, 489, 490, 491, 493, 495, 496], "descriptor": [16, 23, 24, 31, 33, 49, 62, 67, 87, 90, 93, 96, 99, 106, 109, 110, 127, 129, 137, 142, 143, 144, 145, 148, 152, 162, 189, 190, 198, 200, 226, 229, 232, 239, 240, 245, 249, 262, 270, 272, 273, 283, 293, 297, 298, 309, 310, 324, 327, 330, 337, 343, 344, 347, 348, 353, 354, 357, 360, 364, 373, 374, 375, 376, 377, 384, 398, 400, 442, 445, 451, 481, 482, 483, 484, 487, 488, 489, 490, 492, 494, 496], "ellipsi": [16, 62, 67, 99, 133, 181, 207, 289, 314, 322, 392, 393, 400, 401, 446, 450, 465, 481, 485, 495], "capsul": [16, 67, 85, 107, 485], "coroutin": [16, 26, 67, 99, 107, 135, 136, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 174, 182, 195, 199, 201, 204, 227, 330, 360, 368, 401, 403, 404, 445, 448, 471, 482, 487, 488, 493, 494, 495, 496], "datetim": [16, 67, 97, 106, 114, 138, 145, 149, 151, 163, 195, 203, 217, 223, 225, 262, 269, 271, 284, 303, 314, 319, 356, 357, 361, 381, 394, 400, 405, 435, 440, 450, 466, 480, 481, 482, 483, 484, 487, 492], "hint": [16, 42, 67, 91, 97, 99, 100, 108, 117, 130, 171, 173, 180, 200, 216, 239, 244, 255, 257, 260, 261, 269, 273, 277, 315, 318, 360, 399, 400, 442, 443, 451, 493, 494, 498], "pycontext": 17, "pycontextvar": 17, "pycontexttoken": 17, "pycontext_new": 17, "bpo": [17, 35, 196, 201, 240, 282, 284, 298, 308, 317, 347, 401, 471, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "34762": [17, 494], "public": [17, 26, 28, 33, 34, 54, 67, 92, 96, 105, 117, 120, 122, 155, 168, 173, 188, 189, 203, 218, 225, 236, 237, 249, 254, 257, 265, 266, 270, 274, 279, 297, 298, 301, 307, 329, 331, 346, 353, 357, 360, 361, 367, 368, 373, 377, 379, 382, 401, 402, 403, 410, 423, 425, 428, 431, 441, 450, 451, 455, 477, 478, 480, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "contextvar": [17, 67, 99, 138, 141, 147, 151, 177, 199, 269, 471], "token": [17, 65, 67, 96, 127, 133, 169, 183, 187, 265, 269, 279, 280, 296, 297, 301, 319, 329, 333, 346, 364, 372, 378, 410, 424, 442, 446, 448, 449, 458, 462, 484, 485, 489, 493, 494], "pycontext_typ": 17, "pycontextvar_typ": 17, "pycontexttoken_typ": 17, "pycontext_checkexact": 17, "pycontextvar_checkexact": 17, "pycontexttoken_checkexact": 17, "pycontext_copi": 17, "ctx": [17, 23, 42, 114, 133, 183, 199, 298, 357, 483], "shallow": [17, 33, 67, 173, 183, 194, 195, 207, 230, 258, 269, 270, 314, 360, 373, 400, 457, 464], "pycontext_copycurr": 17, "pycontext_ent": 17, "pycontext_exit": 17, "deactiv": [17, 384, 414, 443, 468, 476, 487, 488], "pycontextvar_new": 17, "introspect": [17, 67, 87, 97, 99, 105, 108, 173, 183, 200, 204, 227, 240, 265, 314, 330, 384, 404, 434, 435, 443, 447, 485, 487, 488, 489, 490, 491, 492], "debug": [17, 32, 33, 34, 49, 62, 65, 67, 77, 87, 88, 90, 97, 99, 104, 109, 110, 113, 114, 116, 133, 142, 147, 157, 165, 179, 183, 189, 199, 200, 201, 204, 210, 218, 219, 225, 227, 237, 241, 256, 262, 269, 282, 283, 284, 294, 303, 307, 308, 312, 316, 318, 320, 334, 346, 350, 351, 356, 357, 360, 368, 373, 374, 383, 384, 390, 397, 401, 403, 404, 415, 428, 434, 437, 443, 444, 450, 451, 461, 466, 467, 472, 473, 476, 477, 478, 479, 480, 482, 483, 486, 488, 489, 490, 491, 492, 493, 494, 496], "pycontextvar_get": 17, "var": [17, 90, 97, 99, 100, 105, 106, 114, 131, 133, 173, 180, 183, 239, 284, 360, 370, 375, 401, 404, 446, 456, 461, 465, 481, 482, 483, 484, 485, 487, 489], "default_valu": 17, "dure": [17, 18, 22, 23, 24, 28, 33, 34, 45, 51, 62, 63, 67, 71, 89, 92, 97, 99, 105, 106, 114, 133, 145, 151, 152, 153, 160, 164, 171, 180, 181, 184, 189, 190, 194, 196, 199, 207, 212, 215, 216, 217, 222, 225, 227, 232, 239, 240, 241, 245, 249, 251, 265, 266, 273, 277, 282, 283, 284, 285, 286, 296, 303, 308, 314, 323, 328, 329, 334, 335, 338, 341, 347, 348, 349, 350, 351, 356, 357, 360, 368, 375, 376, 377, 381, 382, 391, 395, 397, 400, 401, 403, 404, 405, 415, 417, 428, 429, 430, 431, 437, 440, 442, 443, 445, 447, 450, 451, 454, 455, 458, 459, 462, 466, 470, 476, 477, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496], "pycontextvar_set": 17, "pycontextvar_reset": 17, "reset": [17, 33, 58, 97, 106, 107, 120, 148, 150, 157, 168, 170, 171, 173, 183, 190, 199, 203, 212, 220, 226, 227, 228, 232, 254, 259, 261, 265, 282, 298, 308, 309, 310, 311, 316, 341, 343, 348, 350, 353, 357, 360, 371, 373, 377, 380, 381, 390, 395, 399, 403, 404, 415, 423, 427, 428, 431, 440, 442, 450, 479, 483, 487, 489, 490, 491, 492], "pyos_snprintf": [18, 56, 479], "unix": [18, 23, 33, 34, 35, 58, 65, 67, 72, 73, 74, 77, 78, 80, 81, 83, 85, 86, 92, 93, 95, 99, 104, 107, 108, 113, 117, 119, 126, 129, 131, 136, 142, 143, 144, 145, 148, 149, 152, 159, 163, 173, 180, 187, 188, 189, 190, 210, 213, 215, 222, 229, 233, 239, 242, 243, 244, 247, 257, 261, 269, 272, 273, 276, 281, 284, 286, 287, 293, 298, 301, 302, 303, 307, 308, 309, 310, 311, 313, 316, 320, 321, 324, 325, 328, 337, 338, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 364, 366, 368, 369, 370, 373, 375, 376, 377, 380, 381, 384, 390, 398, 403, 418, 422, 436, 437, 450, 453, 454, 461, 463, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "man": [18, 104, 138, 186, 286, 308, 328, 337, 343, 348, 353, 358, 381, 384, 390, 484], "snprintf": [18, 479, 487], "pyos_vsnprintf": [18, 56, 479], "va": [18, 441], "vsnprintf": [18, 479, 487], "Their": [18, 62, 99, 105, 171, 221, 283, 308, 356, 357, 368, 380, 401, 409, 428, 443, 444, 445, 450, 488, 490, 493, 494], "corner": [18, 62, 104, 190, 399, 422, 464, 479, 482, 483, 488], "int_max": 18, "c99": [18, 35, 62, 88, 167, 189, 290, 360, 363, 368, 459, 483, 487, 489, 493], "necessari": [18, 33, 35, 49, 56, 62, 63, 71, 80, 84, 85, 88, 89, 90, 91, 92, 96, 97, 99, 105, 106, 107, 111, 112, 113, 114, 116, 118, 121, 123, 126, 131, 145, 151, 152, 156, 167, 168, 171, 174, 180, 182, 190, 197, 199, 207, 208, 209, 210, 219, 220, 221, 222, 223, 227, 239, 241, 256, 257, 261, 262, 265, 269, 273, 276, 281, 282, 285, 286, 287, 290, 293, 298, 303, 306, 307, 308, 309, 314, 317, 321, 323, 331, 347, 351, 353, 356, 357, 360, 362, 363, 364, 370, 371, 377, 379, 380, 382, 387, 389, 391, 399, 403, 410, 414, 417, 420, 422, 423, 425, 427, 430, 434, 437, 443, 445, 446, 451, 454, 455, 457, 458, 468, 476, 479, 480, 482, 483, 484, 486, 488, 490, 491, 492, 493, 495], "rv": [18, 35, 229], "someth": [18, 22, 33, 36, 71, 75, 78, 85, 87, 90, 92, 96, 97, 98, 99, 101, 104, 105, 107, 111, 112, 113, 114, 116, 117, 121, 131, 133, 144, 151, 157, 164, 182, 188, 189, 215, 227, 239, 242, 250, 261, 266, 268, 270, 276, 277, 282, 283, 298, 307, 308, 314, 321, 323, 329, 337, 350, 354, 356, 357, 365, 370, 373, 377, 380, 384, 401, 403, 404, 405, 410, 416, 417, 422, 425, 428, 434, 440, 443, 446, 447, 451, 455, 456, 464, 467, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 496], "bad": [18, 42, 67, 71, 74, 84, 85, 98, 101, 113, 117, 120, 131, 188, 200, 203, 207, 215, 226, 227, 249, 261, 281, 283, 286, 298, 307, 323, 348, 399, 401, 437, 451, 456, 458, 465, 479, 483, 485, 487, 493], "pyos_strtoul": [18, 56], "36": [18, 39, 113, 119, 239, 276, 286, 298, 333, 337, 359, 361, 381, 457, 461, 464, 466, 467, 468, 487, 489, 491, 495, 496], "inclus": [18, 34, 35, 39, 42, 71, 76, 92, 99, 131, 163, 173, 179, 196, 226, 252, 274, 280, 282, 285, 308, 323, 333, 334, 346, 359, 397, 428, 441, 443, 445, 449, 451, 470, 484, 489, 494], "white": [18, 90, 104, 106, 116, 190, 191, 213, 225, 261, 364, 391, 399, 410, 441, 449, 467, 491, 496], "0b": [18, 47, 239, 307, 360, 361, 483, 489], "0o": [18, 47, 97, 239, 360, 361, 483, 489], "absent": [18, 131, 173, 190, 283, 312, 353, 361, 410, 489], "scan": [18, 75, 80, 97, 98, 105, 107, 110, 113, 116, 117, 171, 173, 190, 207, 242, 244, 259, 308, 318, 334, 343, 384, 401, 410, 443, 444, 466, 470, 479, 480, 482, 484, 489, 492], "out": [18, 23, 31, 34, 35, 38, 39, 42, 55, 56, 58, 59, 63, 67, 71, 72, 74, 75, 78, 80, 81, 84, 85, 88, 90, 92, 93, 95, 97, 99, 101, 104, 106, 107, 108, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 131, 133, 134, 145, 146, 151, 152, 153, 154, 157, 162, 171, 174, 176, 180, 188, 189, 190, 191, 196, 197, 199, 203, 207, 209, 210, 217, 219, 225, 226, 227, 229, 240, 244, 249, 254, 257, 261, 264, 265, 266, 268, 272, 273, 274, 276, 277, 281, 282, 290, 298, 307, 308, 310, 312, 313, 315, 319, 323, 326, 328, 329, 334, 337, 343, 346, 348, 353, 354, 356, 357, 359, 360, 361, 363, 364, 368, 373, 377, 380, 384, 396, 399, 401, 403, 404, 405, 409, 414, 415, 422, 424, 425, 428, 432, 434, 438, 439, 440, 441, 442, 443, 444, 451, 453, 454, 456, 457, 458, 459, 461, 463, 464, 465, 468, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494], "erang": [18, 226], "ulong_max": [18, 39], "strtoul": 18, "pyos_strtol": [18, 56], "strtol": 18, "pyos_string_to_doubl": [18, 56, 484, 486], "endptr": 18, "overflow_except": 18, "whitespac": [18, 63, 67, 71, 74, 80, 97, 98, 106, 107, 116, 119, 123, 131, 138, 149, 156, 159, 168, 173, 180, 188, 191, 199, 203, 207, 213, 216, 217, 222, 235, 239, 254, 259, 261, 270, 277, 281, 301, 312, 329, 332, 334, 346, 360, 361, 363, 364, 372, 377, 379, 381, 396, 415, 425, 428, 430, 452, 456, 464, 470, 477, 480, 483, 484, 486, 489, 490, 491, 494], "whole": [18, 42, 71, 75, 77, 86, 91, 92, 95, 110, 111, 116, 117, 131, 154, 163, 171, 180, 182, 190, 196, 221, 222, 249, 256, 274, 276, 281, 282, 293, 307, 308, 311, 320, 322, 334, 343, 353, 356, 359, 360, 379, 390, 403, 425, 428, 439, 441, 442, 450, 454, 470, 475, 477, 484, 491, 495], "unconvert": 18, "segment": [18, 42, 48, 133, 167, 189, 197, 207, 228, 229, 234, 298, 308, 309, 311, 348, 357, 381, 409, 414, 422, 482, 484, 489, 490], "1e500": 18, "py_huge_v": 18, "pyos_double_to_str": [18, 56], "val": [18, 22, 23, 71, 85, 107, 127, 160, 180, 204, 210, 219, 237, 258, 281, 312, 356, 360, 401, 405, 410, 443, 482], "format_cod": 18, "ptype": [18, 23, 318], "r": [18, 42, 62, 63, 67, 85, 96, 97, 99, 101, 105, 106, 107, 114, 116, 119, 128, 131, 133, 134, 145, 148, 149, 151, 152, 156, 160, 161, 162, 167, 171, 173, 175, 176, 179, 180, 182, 188, 189, 190, 191, 196, 197, 201, 202, 203, 207, 214, 216, 219, 222, 232, 237, 239, 248, 249, 257, 258, 261, 262, 264, 265, 267, 268, 273, 276, 277, 285, 286, 290, 293, 298, 306, 307, 308, 309, 310, 311, 312, 316, 320, 333, 334, 347, 350, 351, 353, 356, 357, 359, 360, 361, 362, 365, 368, 373, 379, 382, 384, 395, 399, 400, 401, 403, 405, 409, 410, 413, 414, 417, 420, 436, 437, 441, 450, 453, 455, 457, 458, 459, 461, 464, 466, 468, 470, 475, 477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "repr": [18, 23, 24, 49, 62, 63, 67, 87, 106, 108, 114, 118, 119, 123, 133, 151, 152, 189, 194, 195, 196, 204, 207, 225, 239, 256, 261, 269, 298, 329, 344, 353, 360, 361, 368, 377, 379, 393, 396, 400, 401, 404, 405, 440, 442, 443, 450, 451, 459, 461, 465, 467, 477, 478, 480, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495], "py_dtsf_sign": 18, "py_dtsf_add_dot_0": 18, "py_dtsf_alt": 18, "ed": [18, 42, 62, 81, 85, 104, 152, 167, 180, 190, 207, 221, 225, 285, 308, 334, 347, 487, 489, 496], "togeth": [18, 35, 60, 62, 67, 71, 72, 78, 84, 90, 100, 104, 105, 107, 111, 113, 114, 116, 131, 138, 145, 171, 173, 188, 189, 207, 216, 221, 222, 232, 239, 248, 249, 257, 258, 261, 274, 276, 282, 286, 308, 311, 347, 357, 360, 384, 389, 399, 401, 403, 404, 405, 410, 414, 427, 429, 441, 443, 445, 455, 457, 458, 460, 464, 466, 481, 487, 488, 489, 490, 496], "preced": [18, 67, 71, 92, 99, 105, 113, 114, 116, 117, 118, 166, 173, 180, 188, 191, 196, 200, 203, 204, 207, 208, 216, 221, 239, 240, 261, 270, 281, 282, 283, 291, 318, 323, 334, 349, 353, 356, 360, 361, 363, 364, 368, 381, 384, 391, 399, 415, 425, 428, 434, 435, 437, 439, 442, 443, 444, 446, 448, 449, 450, 451, 455, 458, 464, 470, 471, 476, 478, 479, 490, 494], "py_dtst_finit": 18, "py_dtst_infinit": 18, "py_dtst_nan": 18, "signifi": [18, 106, 194, 237, 259, 265, 356, 357, 360, 401, 443, 450], "finit": [18, 25, 35, 96, 104, 107, 116, 167, 199, 235, 276, 290, 333, 360, 368, 443, 459], "infinit": [18, 45, 67, 90, 97, 107, 116, 146, 150, 171, 199, 250, 262, 276, 290, 298, 300, 308, 311, 314, 331, 334, 335, 360, 368, 403, 443, 459, 477, 481, 483, 490], "pyos_stricmp": [18, 483], "s1": [18, 119, 174, 203, 281, 353, 480], "s2": [18, 119, 174, 203, 281, 353, 480], "almost": [18, 33, 35, 63, 74, 78, 84, 87, 88, 90, 96, 97, 99, 101, 104, 114, 116, 117, 119, 121, 123, 129, 131, 137, 139, 152, 167, 170, 190, 199, 250, 266, 273, 281, 287, 290, 298, 303, 307, 333, 334, 357, 360, 364, 384, 401, 403, 404, 422, 439, 443, 449, 458, 459, 466, 471, 476, 478, 480, 483, 485, 490, 496], "pyos_strnicmp": [18, 483], "strncmp": 18, "async": [19, 23, 26, 32, 50, 67, 99, 114, 135, 136, 137, 138, 141, 145, 146, 147, 148, 149, 150, 151, 182, 183, 204, 239, 240, 270, 279, 327, 357, 392, 400, 401, 403, 404, 405, 443, 445, 446, 450, 487, 488, 493, 494, 495, 496], "pycoroobject": 19, "pycoro_typ": 19, "pycoro_checkexact": 19, "pycoro_new": 19, "pyframeobject": [19, 26, 29, 33, 52, 56, 65, 108, 488, 491], "__name__": [19, 29, 45, 60, 62, 67, 96, 97, 99, 105, 106, 108, 113, 114, 138, 157, 168, 170, 179, 196, 201, 203, 207, 211, 214, 225, 239, 240, 242, 264, 265, 270, 282, 298, 304, 307, 311, 312, 314, 317, 328, 330, 336, 338, 339, 348, 354, 356, 358, 360, 377, 380, 382, 400, 401, 403, 414, 415, 417, 422, 435, 436, 443, 447, 465, 479, 480, 483, 485, 487, 490, 491, 492, 493, 495, 496], "__qualname__": [19, 27, 29, 60, 99, 105, 106, 211, 225, 239, 240, 270, 360, 443, 487, 490, 492], "date": [20, 33, 67, 71, 77, 79, 82, 84, 97, 98, 106, 114, 121, 145, 149, 151, 163, 176, 195, 207, 213, 217, 222, 223, 225, 257, 259, 269, 281, 282, 284, 286, 303, 306, 308, 314, 318, 326, 355, 356, 357, 359, 360, 373, 381, 384, 394, 405, 434, 435, 437, 438, 441, 447, 450, 460, 465, 467, 476, 477, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "pydatetime_import": 20, "initialis": [20, 114, 257, 284, 339, 368, 404, 443, 470, 491, 493], "pydatetimeapi": 20, "pydatetime_d": 20, "pydatetime_datetim": 20, "pydatetime_tim": 20, "pydatetime_delta": 20, "pydatetime_datetyp": 20, "pydatetime_datetimetyp": 20, "pydatetime_timetyp": 20, "pydatetime_deltatyp": 20, "timedelta": [20, 67, 106, 195, 303, 400, 440, 480, 484, 489, 490, 494, 495, 496], "pydatetime_tzinfotyp": 20, "zone": [20, 67, 195, 196, 223, 269, 274, 353, 381, 441, 471, 480, 482, 484, 496], "info": [20, 23, 62, 67, 71, 75, 80, 85, 92, 93, 96, 101, 105, 108, 113, 114, 131, 137, 149, 165, 171, 182, 196, 204, 239, 241, 244, 256, 257, 266, 270, 282, 283, 284, 286, 298, 303, 317, 318, 322, 347, 365, 373, 384, 388, 399, 401, 403, 410, 436, 437, 445, 467, 470, 474, 478, 480, 482, 483, 484, 487, 489, 491, 495], "tzinfo": [20, 67, 195, 223, 394, 440, 480, 487, 488, 489, 490, 493, 494, 496], "utc": [20, 67, 196, 203, 217, 223, 284, 356, 357, 381, 440, 466, 483, 488, 489, 492, 493, 494], "pydatetime_timezone_utc": [20, 494], "timezon": [20, 67, 114, 129, 195, 203, 217, 223, 356, 357, 377, 394, 440, 466, 488, 489, 490, 492, 493, 494], "pydate_check": 20, "pydate_checkexact": 20, "pydatetime_check": 20, "pydatetime_checkexact": 20, "pytime_check": 20, "pytime_checkexact": 20, "pydelta_check": 20, "pydelta_checkexact": 20, "pytzinfo_check": 20, "pytzinfo_checkexact": 20, "pydate_fromd": 20, "year": [20, 92, 97, 105, 116, 121, 163, 188, 196, 207, 277, 356, 359, 381, 401, 428, 437, 441, 450, 461, 476, 478, 480, 482, 483, 484, 485, 486, 488, 489, 490, 495, 496], "month": [20, 92, 97, 163, 196, 281, 381, 437, 450, 477, 478, 480, 484], "dai": [20, 85, 92, 96, 97, 106, 116, 117, 138, 163, 180, 196, 240, 258, 277, 281, 284, 290, 303, 308, 355, 357, 381, 400, 437, 440, 447, 450, 466, 469, 477, 480, 482, 483, 484, 491, 493, 495, 496], "pydatetime_fromdateandtim": 20, "hour": [20, 97, 116, 138, 145, 151, 196, 223, 284, 286, 381, 437, 440, 450, 480, 488, 493], "minut": [20, 117, 119, 196, 284, 308, 377, 381, 437, 450, 471, 480, 488, 494], "usecond": 20, "microsecond": [20, 110, 196, 337, 356, 381, 483, 488], "pydatetime_fromdateandtimeandfold": 20, "fold": [20, 196, 215, 216, 217, 222, 265, 311, 362, 440, 441, 481, 482, 493, 494], "pytime_fromtim": 20, "pytime_fromtimeandfold": 20, "pydelta_fromdsu": 20, "lie": [20, 298, 391, 451, 479, 480], "pytimezone_fromoffset": [20, 494], "unnam": [20, 59, 85, 99, 106, 189, 225, 356, 420, 445, 491], "pytimezone_fromoffsetandnam": [20, 494], "tzname": [20, 196, 381, 440, 493, 496], "pydatetime_get_year": 20, "pydatetime_get_month": 20, "pydatetime_get_dai": 20, "31": [20, 105, 116, 121, 163, 186, 189, 191, 196, 225, 248, 274, 277, 333, 334, 359, 360, 368, 381, 434, 437, 439, 440, 450, 466, 480, 482, 483, 489, 494, 495, 496], "pydatetime_date_get_hour": 20, "23": [20, 106, 108, 110, 114, 119, 163, 196, 199, 223, 239, 240, 250, 274, 276, 282, 298, 334, 347, 353, 360, 364, 374, 381, 382, 479, 480, 488, 489, 491, 492, 493, 495, 496], "pydatetime_date_get_minut": 20, "59": [20, 101, 114, 196, 334, 381, 397, 468, 489], "pydatetime_date_get_second": 20, "pydatetime_date_get_microsecond": 20, "999999": [20, 196, 199, 381, 490], "pydatetime_date_get_fold": 20, "pydatetime_date_get_tzinfo": [20, 487], "pydatetime_time_get_hour": 20, "pydatetime_time_get_minut": 20, "pydatetime_time_get_second": 20, "pydatetime_time_get_microsecond": 20, "pydatetime_time_get_fold": 20, "pydatetime_time_get_tzinfo": [20, 487], "delta": [20, 67, 119, 154, 196, 204, 255, 269, 285, 378, 403, 479, 481, 484, 493, 495], "pydatetime_delta_get_dai": 20, "999999999": [20, 196], "pydatetime_delta_get_second": 20, "86399": [20, 196], "pydatetime_delta_get_microsecond": 20, "db": [20, 67, 105, 188, 197, 239, 269, 276, 296, 313, 345, 466, 471, 482, 483, 485, 488], "pydatetime_fromtimestamp": 20, "suitabl": [20, 33, 62, 63, 71, 85, 97, 107, 113, 114, 119, 122, 136, 156, 159, 160, 171, 173, 182, 186, 189, 196, 203, 210, 218, 222, 223, 249, 250, 251, 258, 268, 274, 276, 281, 282, 283, 284, 286, 291, 298, 303, 308, 309, 314, 318, 323, 333, 338, 339, 341, 342, 348, 350, 351, 353, 354, 357, 360, 368, 373, 377, 380, 381, 382, 395, 403, 415, 422, 425, 428, 436, 437, 439, 443, 456, 459, 460, 467, 470, 476, 479, 480, 481, 483, 484, 489, 493, 494, 495], "fromtimestamp": [20, 114, 196, 203, 356, 494], "pydate_fromtimestamp": 20, "pyproperty_typ": [21, 56, 105], "pydescr_newgetset": [21, 56], "pygetsetdef": [21, 56, 57, 62, 87, 88, 112, 270, 400, 494], "getset": [21, 62, 270], "pydescr_newmemb": [21, 56], "pymemberdef": [21, 56, 57, 60, 62, 87, 88, 105, 270, 400, 484, 494], "meth": [21, 44, 62, 90, 97, 99, 123, 401, 478, 481, 488, 490], "pydescr_newmethod": [21, 56], "pymethoddef": [21, 35, 45, 56, 57, 61, 62, 84, 85, 87, 88, 112, 480], "pydescr_newwrapp": 21, "wrapperbas": [21, 494], "pydescr_newclassmethod": [21, 56], "pydescr_isdata": 21, "descr": [21, 105, 189], "pywrapper_new": [21, 56], "pydictobject": [22, 54, 108], "pydict_typ": [22, 56], "pydict_checkexact": 22, "pydict_new": [22, 56], "pydictproxy_new": [22, 56], "mappingproxytyp": [22, 194, 239, 360, 400, 442, 487, 490], "enforc": [22, 67, 99, 106, 136, 199, 210, 219, 239, 257, 308, 337, 358, 360, 361, 399, 401, 425, 426, 428, 445, 451, 455, 456, 470, 478, 479, 482, 485, 488, 489, 490], "prevent": [22, 23, 33, 35, 42, 57, 85, 88, 96, 97, 99, 104, 105, 112, 113, 114, 119, 120, 121, 138, 151, 171, 173, 180, 182, 183, 189, 194, 199, 201, 203, 207, 220, 227, 237, 239, 251, 261, 264, 265, 274, 277, 283, 284, 286, 287, 291, 298, 303, 307, 308, 320, 326, 351, 353, 357, 364, 368, 373, 377, 384, 396, 399, 401, 403, 404, 405, 415, 417, 424, 437, 439, 443, 445, 447, 453, 456, 464, 465, 468, 470, 476, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "modif": [22, 34, 60, 63, 65, 71, 76, 81, 85, 106, 114, 123, 133, 182, 203, 230, 239, 248, 259, 262, 265, 281, 284, 286, 293, 298, 307, 308, 309, 311, 321, 339, 347, 349, 354, 358, 368, 373, 377, 391, 425, 428, 437, 441, 461, 465, 476, 482, 484, 489, 490, 491, 492, 493, 495], "pydict_clear": [22, 56], "pydict_contain": [22, 56, 481], "pydict_copi": [22, 56], "pydict_setitem": [22, 56, 62, 85], "insert": [22, 31, 33, 34, 35, 38, 59, 67, 71, 84, 85, 90, 92, 107, 119, 123, 125, 131, 132, 133, 138, 156, 159, 160, 164, 173, 174, 180, 184, 190, 194, 203, 207, 222, 239, 240, 246, 250, 261, 264, 265, 273, 277, 282, 285, 296, 299, 307, 312, 314, 322, 331, 335, 350, 356, 360, 361, 363, 368, 391, 400, 415, 417, 422, 425, 428, 438, 443, 445, 447, 451, 455, 456, 457, 464, 470, 475, 477, 480, 482, 483, 484, 486, 490, 491, 492, 493, 494, 495], "hashabl": [22, 49, 62, 97, 99, 127, 173, 174, 196, 203, 235, 240, 246, 270, 274, 306, 311, 333, 360, 401, 417, 443, 445, 480, 481, 483, 484, 487, 488, 490, 492, 496], "steal": [22, 23, 33, 35, 38, 45, 49, 53, 59, 487, 488], "pydict_setitemstr": [22, 56], "pydict_delitem": [22, 56], "pydict_delitemstr": [22, 56], "pydict_getitem": [22, 56, 85, 487], "__hash__": [22, 62, 90, 92, 97, 99, 174, 194, 225, 239, 304, 360, 404, 443, 470, 482, 483, 485, 490, 494], "__eq__": [22, 62, 90, 92, 97, 99, 174, 181, 194, 209, 216, 225, 240, 258, 270, 306, 360, 400, 404, 405, 434, 443, 478, 483, 484, 485, 488, 489, 494], "pydict_getitemwitherror": [22, 56], "gil": [22, 23, 42, 45, 58, 62, 67, 88, 96, 99, 112, 151, 179, 189, 201, 249, 483, 484, 487, 489, 491, 493, 496], "held": [22, 31, 33, 42, 58, 96, 112, 134, 180, 261, 264, 273, 283, 284, 293, 298, 360, 368, 380, 403, 417, 441, 443, 477, 482, 483, 484, 487, 488, 493], "histor": [22, 41, 62, 85, 87, 107, 112, 180, 190, 196, 227, 262, 286, 289, 310, 359, 375, 381, 403, 429, 437, 441, 451, 459, 476, 484, 487, 491, 493], "reason": [22, 23, 33, 35, 42, 46, 47, 49, 56, 62, 76, 85, 86, 88, 90, 96, 97, 98, 99, 100, 101, 104, 106, 107, 113, 114, 116, 117, 119, 120, 121, 126, 151, 154, 164, 167, 168, 179, 190, 194, 196, 199, 207, 208, 210, 225, 227, 230, 244, 250, 255, 256, 259, 261, 262, 265, 272, 273, 282, 283, 284, 285, 286, 290, 307, 311, 314, 318, 320, 323, 329, 341, 347, 349, 353, 357, 360, 368, 373, 374, 377, 379, 380, 381, 384, 399, 401, 403, 404, 405, 408, 410, 414, 422, 440, 441, 442, 443, 447, 454, 455, 459, 465, 479, 480, 482, 485, 487, 489, 490, 491, 492], "suppress": [22, 33, 34, 48, 67, 104, 113, 121, 131, 151, 165, 170, 176, 182, 207, 241, 303, 307, 326, 330, 349, 351, 360, 364, 368, 377, 422, 442, 443, 451, 453, 456, 467, 470, 476, 478, 480, 482, 483, 484, 485, 486, 491, 492, 494, 495, 498], "wasn": [22, 31, 45, 71, 88, 90, 92, 114, 131, 239, 284, 307, 371, 403, 438, 458, 477, 479, 480, 482, 483, 493], "pydict_getitemstr": [22, 56, 85, 108], "pyunicode_fromstr": [22, 35, 56, 63, 84, 88], "pydict_setdefault": 22, "defaultobj": 22, "setdefault": [22, 90, 173, 174, 197, 258, 360, 422, 443, 477, 480, 489, 490], "hash": [22, 30, 33, 34, 49, 62, 63, 67, 87, 90, 96, 97, 99, 108, 159, 174, 176, 180, 187, 194, 197, 237, 239, 265, 266, 269, 285, 304, 313, 326, 341, 353, 368, 404, 410, 413, 417, 439, 441, 443, 445, 447, 450, 453, 464, 465, 470, 471, 479, 480, 482, 483, 484, 487, 488, 489, 490, 493, 496], "pydict_item": [22, 56], "pylistobject": [22, 38, 53, 88], "pydict_kei": [22, 56], "pydict_valu": [22, 56], "pydict_s": [22, 56], "pydict_next": [22, 56], "ppo": 22, "pkei": 22, "pvalu": [22, 23, 84], "prior": [22, 33, 45, 58, 67, 90, 97, 99, 105, 113, 114, 118, 124, 133, 138, 156, 179, 188, 199, 225, 239, 259, 266, 270, 282, 329, 331, 344, 347, 353, 356, 357, 359, 360, 364, 368, 371, 373, 375, 377, 380, 401, 403, 417, 428, 437, 441, 442, 443, 445, 447, 450, 458, 491, 492, 493, 494, 495], "Its": [22, 31, 55, 57, 62, 67, 84, 85, 87, 88, 97, 101, 105, 126, 157, 165, 180, 189, 190, 194, 201, 220, 239, 244, 250, 257, 270, 273, 282, 298, 308, 323, 339, 349, 357, 368, 373, 377, 380, 381, 410, 421, 428, 435, 437, 442, 443, 445, 447, 460, 470, 477, 487, 488, 489, 494], "spars": [22, 308, 373], "po": [22, 59, 101, 128, 154, 166, 199, 244, 270, 277, 293, 306, 308, 315, 334, 335, 365, 391, 399, 416, 480, 484, 492], "pylong_aslong": [22, 35, 39, 56, 84, 495], "pylong_fromlong": [22, 35, 39, 45, 56, 84, 85, 87, 88], "py_decref": [22, 23, 28, 35, 36, 45, 51, 56, 62, 84, 85, 87, 88, 91, 99, 112, 487, 495], "pydict_merg": [22, 56], "overrid": [22, 24, 33, 34, 35, 49, 62, 65, 67, 71, 74, 80, 97, 105, 113, 114, 120, 121, 127, 131, 138, 144, 147, 148, 157, 163, 168, 170, 173, 174, 180, 184, 188, 189, 194, 196, 202, 207, 210, 216, 217, 219, 222, 223, 227, 232, 239, 240, 244, 254, 257, 258, 259, 262, 264, 265, 270, 273, 277, 282, 284, 287, 298, 302, 307, 308, 314, 326, 329, 330, 333, 334, 346, 349, 350, 353, 354, 360, 361, 364, 368, 369, 375, 377, 380, 388, 391, 399, 401, 403, 404, 405, 410, 413, 417, 422, 428, 432, 437, 443, 444, 445, 447, 455, 470, 471, 475, 476, 477, 480, 483, 484, 485, 486, 488, 490, 491, 493, 494, 495], "pymapping_kei": [22, 40, 56, 494], "pyobject_getitem": [22, 35, 40, 49, 56, 62], "pydict_upd": [22, 56], "pydict_mergefromseq2": [22, 56], "seq2": [22, 107, 306, 477], "merg": [22, 67, 71, 97, 99, 104, 105, 107, 113, 114, 173, 190, 196, 207, 227, 250, 282, 284, 297, 307, 308, 360, 395, 401, 441, 467, 476, 477, 480, 483, 484, 492], "duplic": [22, 67, 71, 100, 107, 123, 152, 160, 173, 176, 179, 180, 182, 199, 203, 204, 210, 219, 222, 225, 229, 270, 274, 282, 286, 308, 317, 353, 360, 361, 377, 399, 401, 403, 422, 437, 442, 443, 445, 446, 456, 457, 462, 479, 481, 482, 483, 487, 489, 492, 494, 496], "win": [22, 33, 67, 72, 104, 114, 190, 192, 250, 307, 333, 370, 403, 476, 486, 489], "let": [23, 42, 65, 71, 74, 75, 80, 81, 84, 85, 88, 90, 91, 92, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 113, 114, 116, 117, 118, 119, 120, 121, 131, 138, 151, 152, 168, 173, 174, 180, 182, 184, 189, 203, 214, 237, 240, 244, 250, 256, 259, 262, 264, 266, 272, 277, 281, 282, 283, 284, 307, 312, 320, 322, 334, 345, 346, 351, 356, 357, 384, 391, 399, 401, 404, 405, 410, 428, 436, 441, 445, 447, 453, 455, 456, 458, 461, 464, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 494], "understand": [23, 42, 67, 85, 87, 88, 90, 96, 99, 105, 113, 114, 116, 117, 119, 120, 131, 152, 167, 196, 206, 207, 221, 244, 256, 257, 277, 290, 303, 322, 323, 329, 334, 356, 361, 364, 383, 391, 401, 405, 422, 431, 437, 442, 449, 455, 456, 459, 461, 477, 478, 479, 480, 482, 483, 484, 485, 493], "basic": [23, 33, 35, 62, 63, 67, 71, 74, 75, 77, 78, 85, 86, 87, 89, 92, 96, 97, 99, 104, 105, 107, 108, 111, 114, 121, 123, 131, 132, 147, 150, 157, 158, 160, 168, 171, 173, 180, 182, 190, 195, 197, 198, 200, 202, 203, 205, 225, 233, 236, 244, 248, 254, 255, 259, 261, 267, 269, 270, 271, 273, 282, 283, 284, 298, 299, 300, 307, 319, 322, 323, 333, 337, 341, 342, 353, 354, 356, 357, 360, 364, 373, 377, 380, 383, 384, 389, 391, 396, 401, 404, 405, 410, 411, 421, 427, 428, 429, 430, 434, 439, 445, 451, 455, 457, 459, 460, 461, 464, 466, 471, 477, 479, 480, 482, 483, 484, 486, 489, 490, 491, 492, 495], "posix": [23, 34, 67, 71, 80, 114, 117, 121, 122, 126, 145, 149, 163, 189, 196, 223, 227, 269, 272, 281, 298, 299, 301, 307, 308, 309, 311, 316, 324, 331, 337, 343, 346, 347, 353, 354, 364, 368, 370, 373, 375, 380, 381, 406, 414, 436, 440, 441, 470, 471, 477, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 494, 495], "global": [23, 27, 31, 32, 34, 35, 45, 51, 52, 58, 62, 65, 67, 73, 76, 85, 88, 90, 91, 99, 100, 106, 107, 108, 110, 120, 121, 125, 126, 131, 133, 144, 147, 152, 153, 157, 161, 164, 173, 179, 182, 189, 190, 195, 204, 207, 209, 224, 225, 227, 232, 237, 239, 241, 244, 256, 261, 262, 264, 265, 270, 280, 284, 291, 298, 307, 308, 311, 312, 313, 320, 323, 335, 339, 342, 349, 350, 351, 353, 360, 361, 367, 368, 369, 370, 373, 374, 375, 377, 380, 382, 384, 395, 399, 401, 403, 405, 410, 413, 415, 417, 428, 435, 442, 443, 444, 446, 447, 448, 450, 452, 453, 455, 456, 465, 470, 474, 476, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "suppos": [23, 59, 62, 63, 80, 85, 89, 97, 111, 114, 117, 121, 194, 199, 207, 210, 213, 262, 324, 334, 349, 353, 356, 357, 359, 361, 373, 391, 405, 417, 465, 482, 483, 484, 489, 494, 495], "pyarg_": 23, "concret": [23, 32, 33, 67, 71, 87, 88, 106, 116, 127, 133, 179, 189, 196, 200, 211, 222, 233, 244, 265, 268, 269, 273, 283, 307, 333, 344, 354, 360, 363, 368, 380, 403, 409, 422, 425, 432, 440, 447, 479, 480, 483, 490, 491, 494, 496], "traceback": [23, 34, 35, 42, 65, 67, 80, 85, 88, 91, 97, 101, 104, 105, 106, 107, 111, 112, 113, 114, 119, 125, 131, 137, 151, 152, 153, 155, 164, 170, 173, 176, 180, 182, 189, 190, 198, 199, 201, 204, 207, 225, 227, 239, 261, 269, 270, 274, 280, 282, 283, 284, 298, 299, 311, 312, 314, 326, 330, 334, 354, 356, 357, 360, 361, 363, 364, 366, 368, 380, 382, 399, 400, 402, 403, 404, 405, 422, 442, 444, 445, 451, 455, 456, 457, 458, 461, 464, 467, 470, 471, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 494, 495, 496], "although": [23, 25, 35, 42, 62, 71, 75, 78, 80, 84, 90, 92, 97, 101, 106, 113, 114, 134, 146, 151, 152, 163, 171, 189, 194, 196, 203, 207, 210, 211, 214, 219, 220, 245, 262, 270, 273, 276, 277, 282, 286, 289, 296, 298, 307, 308, 309, 310, 311, 314, 322, 334, 359, 360, 361, 368, 370, 373, 381, 383, 390, 403, 422, 427, 429, 430, 431, 436, 440, 441, 442, 443, 445, 447, 449, 451, 455, 456, 457, 458, 459, 463, 465, 470, 476, 477, 491, 492, 493], "forbidden": [23, 42, 106, 120, 151, 255, 314, 360, 380, 483, 487, 492], "clean": [23, 33, 35, 67, 77, 85, 87, 90, 99, 112, 114, 117, 131, 133, 144, 151, 153, 171, 179, 207, 215, 219, 222, 226, 227, 261, 267, 270, 286, 297, 298, 299, 302, 330, 354, 356, 359, 373, 375, 377, 410, 414, 417, 431, 443, 445, 460, 471, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 495, 496], "prepar": [23, 58, 65, 67, 90, 114, 119, 120, 163, 170, 196, 239, 244, 246, 249, 258, 269, 273, 284, 308, 314, 342, 353, 364, 368, 377, 378, 399, 400, 403, 410, 428, 429, 432, 436, 437, 441, 464, 465, 483, 485, 487, 491, 492, 494, 496], "propag": [23, 33, 35, 36, 51, 107, 113, 114, 137, 151, 170, 173, 183, 204, 227, 265, 282, 283, 298, 311, 312, 317, 340, 347, 348, 356, 360, 364, 368, 381, 403, 404, 405, 410, 417, 442, 443, 445, 447, 458, 480, 482, 493], "mysteri": [23, 85, 92, 117, 164, 311, 349, 491], "sy": [23, 24, 28, 31, 33, 34, 35, 45, 58, 62, 63, 65, 67, 71, 72, 78, 80, 85, 91, 92, 97, 99, 100, 110, 112, 113, 114, 119, 121, 123, 124, 125, 126, 129, 133, 145, 148, 149, 151, 153, 155, 157, 164, 165, 168, 170, 176, 182, 188, 189, 190, 199, 201, 203, 204, 207, 214, 224, 227, 228, 229, 230, 232, 237, 239, 241, 242, 243, 244, 248, 259, 261, 264, 265, 266, 269, 270, 273, 276, 277, 280, 282, 283, 284, 290, 294, 295, 298, 307, 308, 310, 312, 314, 315, 317, 318, 322, 323, 324, 326, 327, 328, 330, 336, 339, 342, 343, 346, 347, 348, 349, 353, 354, 356, 358, 360, 363, 364, 370, 371, 373, 374, 376, 377, 380, 382, 384, 395, 396, 397, 400, 401, 403, 404, 405, 410, 414, 415, 417, 422, 428, 432, 435, 436, 437, 438, 442, 443, 445, 447, 451, 452, 453, 458, 461, 463, 465, 466, 467, 468, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 498], "exc_info": [23, 33, 35, 85, 113, 114, 123, 157, 165, 204, 207, 282, 284, 347, 368, 373, 403, 420, 422, 442, 443, 465, 480, 482, 483, 485, 488, 492], "former": [23, 31, 44, 71, 72, 97, 131, 157, 172, 184, 189, 190, 196, 199, 264, 265, 270, 282, 303, 323, 337, 347, 356, 384, 390, 399, 401, 413, 443, 445, 447, 488, 489, 490, 493, 494], "caught": [23, 112, 126, 131, 139, 151, 165, 170, 179, 227, 298, 308, 317, 320, 338, 347, 348, 353, 356, 368, 377, 381, 384, 403, 404, 429, 438, 442, 443, 451, 458, 478, 483, 485, 491, 495], "stop": [23, 34, 55, 67, 71, 97, 106, 107, 110, 113, 114, 132, 142, 145, 149, 151, 157, 168, 172, 173, 174, 200, 203, 207, 211, 221, 227, 239, 241, 242, 249, 261, 270, 276, 282, 283, 284, 286, 298, 299, 307, 308, 310, 312, 315, 317, 323, 329, 333, 348, 354, 360, 364, 377, 380, 391, 397, 399, 400, 401, 403, 405, 421, 422, 442, 443, 445, 447, 456, 457, 458, 459, 477, 478, 479, 480, 482, 483, 484, 485, 487, 489, 492, 493, 494], "pyerr_clear": [23, 35, 56, 85, 491], "pyerr_printex": [23, 56], "set_sys_last_var": 23, "stderr": [23, 33, 34, 42, 58, 63, 67, 71, 72, 84, 85, 97, 113, 114, 125, 138, 142, 145, 149, 164, 170, 182, 207, 228, 241, 243, 259, 261, 273, 282, 283, 284, 298, 307, 308, 326, 336, 348, 356, 360, 364, 368, 373, 377, 380, 382, 396, 401, 403, 414, 415, 422, 443, 465, 466, 467, 470, 476, 477, 481, 483, 484, 485, 489, 491, 492, 493, 494, 496], "systemexit": [23, 65, 71, 113, 126, 151, 153, 170, 181, 227, 261, 368, 380, 421, 444, 458, 465, 482, 483, 485, 493], "exit": [23, 33, 34, 35, 51, 58, 65, 67, 72, 84, 85, 96, 98, 99, 101, 104, 107, 114, 125, 126, 129, 133, 138, 142, 144, 145, 147, 148, 149, 150, 151, 163, 164, 168, 170, 179, 181, 182, 188, 190, 199, 201, 202, 204, 207, 214, 227, 228, 232, 242, 261, 262, 264, 267, 269, 276, 282, 284, 298, 307, 308, 312, 323, 324, 326, 330, 334, 343, 348, 349, 351, 353, 354, 360, 364, 368, 374, 375, 377, 380, 382, 393, 395, 399, 400, 403, 404, 405, 414, 415, 417, 418, 421, 422, 426, 435, 436, 437, 442, 443, 445, 453, 458, 461, 463, 465, 466, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 492, 493, 494, 495, 496], "fatal": [23, 33, 42, 58, 84, 85, 153, 228, 357, 373, 403, 453, 458, 484, 485, 487, 490, 493], "last_typ": [23, 368, 396, 465, 485], "last_valu": [23, 106, 225, 368, 396, 465], "last_traceback": [23, 312, 368, 396, 443, 465], "pyerr_print": [23, 56, 67, 84, 85], "alia": [23, 31, 40, 67, 71, 80, 87, 97, 99, 106, 114, 132, 133, 139, 145, 149, 166, 171, 174, 179, 189, 191, 196, 204, 209, 211, 219, 225, 227, 232, 239, 242, 244, 257, 265, 269, 270, 273, 298, 302, 307, 308, 312, 329, 333, 334, 337, 343, 344, 348, 353, 356, 357, 364, 374, 375, 380, 391, 399, 400, 401, 403, 408, 418, 420, 421, 422, 434, 437, 438, 443, 444, 455, 471, 485, 487, 488, 491, 493, 494, 496], "pyerr_writeunrais": [23, 56, 87], "unraisablehook": [23, 28, 126, 155, 356, 368, 377, 465, 495], "util": [23, 31, 32, 33, 35, 67, 72, 77, 80, 81, 105, 106, 107, 114, 125, 129, 133, 136, 145, 164, 168, 171, 172, 176, 179, 190, 195, 199, 200, 203, 204, 207, 208, 210, 214, 217, 219, 221, 222, 244, 252, 255, 262, 264, 266, 269, 271, 285, 288, 295, 300, 307, 326, 330, 337, 347, 352, 358, 360, 362, 364, 380, 384, 399, 403, 406, 414, 426, 466, 467, 476, 477, 479, 481, 482, 484, 487, 489, 490, 491, 492, 493, 495, 496], "imposs": [23, 40, 53, 62, 90, 92, 97, 113, 171, 227, 283, 298, 308, 311, 327, 359, 365, 377, 380, 401, 403, 416, 425, 437, 451, 477, 478, 479, 480, 481, 483, 484, 492], "__del__": [23, 33, 51, 62, 67, 85, 96, 195, 241, 273, 298, 331, 356, 377, 404, 443, 491], "identifi": [23, 33, 42, 63, 67, 71, 80, 81, 85, 87, 88, 89, 97, 99, 111, 113, 119, 120, 121, 126, 127, 129, 131, 133, 161, 166, 173, 188, 189, 198, 204, 207, 208, 210, 219, 226, 239, 241, 244, 261, 262, 269, 270, 274, 283, 284, 286, 296, 298, 303, 308, 312, 317, 323, 329, 334, 335, 338, 343, 350, 351, 353, 357, 360, 361, 362, 367, 368, 370, 377, 380, 383, 384, 387, 388, 401, 402, 403, 405, 409, 410, 413, 420, 422, 425, 428, 430, 431, 435, 441, 442, 443, 444, 447, 448, 451, 455, 456, 458, 463, 466, 467, 476, 480, 481, 482, 483, 484, 485, 487, 489, 491, 492, 493, 494, 495, 496], "unrais": [23, 155, 356, 368, 377, 488, 495], "statement": [23, 35, 47, 49, 53, 57, 62, 65, 67, 84, 85, 92, 97, 98, 99, 101, 107, 112, 114, 121, 123, 125, 126, 128, 131, 138, 148, 150, 151, 157, 162, 164, 172, 177, 179, 181, 184, 189, 197, 198, 199, 201, 204, 207, 215, 227, 232, 237, 239, 248, 256, 261, 262, 264, 265, 267, 269, 272, 273, 278, 279, 285, 286, 293, 296, 298, 299, 303, 306, 307, 308, 310, 312, 321, 327, 330, 334, 343, 351, 353, 354, 356, 357, 360, 364, 367, 368, 369, 373, 374, 375, 376, 377, 382, 393, 399, 401, 403, 404, 405, 416, 420, 425, 426, 427, 437, 441, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 458, 460, 461, 462, 463, 464, 465, 470, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498], "pyerr_setstr": [23, 35, 56, 85, 87, 88, 112, 484], "pyexc_runtimeerror": [23, 56, 87], "py_incref": [23, 35, 51, 56, 66, 85, 87, 88, 98, 99, 487, 488, 495], "pyerr_setobject": [23, 56, 85], "pyerr_format": [23, 56, 87, 484, 492], "pyunicode_fromformat": [23, 56, 63, 87, 88, 487, 490, 491, 492], "pyerr_formatv": [23, 56, 492], "pyerr_setnon": [23, 56], "shorthand": [23, 90, 97, 111, 131, 156, 204, 207, 274, 317, 353, 379, 384, 396, 401, 415, 442, 455, 458, 480, 481, 491], "pyerr_badargu": [23, 56], "pyexc_typeerror": [23, 56, 85, 87, 88], "illeg": [23, 47, 101, 107, 119, 171, 181, 210, 219, 226, 227, 308, 329, 348, 357, 360, 381, 391, 422, 425, 437, 442, 443, 446, 450, 451, 478, 479, 481, 482, 484, 489, 494, 495], "pyerr_nomemori": [23, 42, 56, 85], "pyexc_memoryerror": [23, 56], "pyerr_setfromerrno": [23, 56, 85], "gotten": [23, 95, 164, 196, 199, 298, 331, 477], "strerror": [23, 226, 227, 281, 308, 483], "eintr": [23, 67, 226, 227, 298, 484], "interrupt": [23, 33, 67, 108, 114, 126, 130, 138, 151, 164, 190, 191, 199, 204, 226, 227, 239, 261, 286, 298, 308, 331, 343, 344, 348, 353, 354, 356, 364, 374, 380, 381, 403, 410, 421, 435, 441, 443, 453, 456, 458, 483, 484, 488, 489, 492, 495, 496], "pyerr_checksign": [23, 56], "pyerr_setfromerrnowithfilenameobject": [23, 56], "filenameobject": 23, "oserror": [23, 71, 72, 119, 142, 145, 166, 189, 196, 201, 227, 229, 232, 237, 239, 244, 248, 257, 259, 265, 270, 273, 293, 297, 298, 303, 308, 309, 310, 311, 318, 321, 337, 343, 347, 348, 351, 353, 357, 364, 373, 374, 377, 381, 408, 410, 420, 438, 442, 458, 465, 484, 487, 490, 491, 495], "filenameobject2": 23, "pyerr_setfromerrnowithfilenam": [23, 56], "pyerr_setfromwindowserr": [23, 56], "ierr": 23, "windowserror": [23, 189, 227, 420, 490], "getlasterror": [23, 189], "win32": [23, 63, 72, 96, 98, 149, 189, 284, 298, 308, 353, 364, 368, 370, 420, 421, 476, 477, 483, 485, 489, 492], "formatmessag": [23, 189, 227], "pyexc_windowserror": [23, 56], "pyerr_setexcfromwindowserr": [23, 56], "pyerr_setfromwindowserrwithfilenam": [23, 56], "fsdecod": [23, 99, 308, 368, 489, 493], "pyerr_setexcfromwindowserrwithfilenameobject": [23, 56], "filename2": [23, 227], "pyerr_setexcfromwindowserrwithfilenam": [23, 56], "pyerr_setimporterror": [23, 56, 491, 493], "msg": [23, 71, 96, 114, 117, 133, 141, 151, 164, 182, 189, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 227, 242, 249, 251, 256, 265, 277, 281, 282, 284, 286, 298, 301, 334, 351, 353, 360, 374, 377, 396, 403, 408, 410, 423, 429, 465, 480, 481, 482, 489, 490, 491, 492, 493], "importerror": [23, 71, 114, 227, 264, 265, 283, 294, 298, 314, 317, 349, 357, 368, 377, 403, 425, 438, 447, 451, 465, 471, 478, 480, 483, 490, 491, 493, 494, 496], "pyerr_setimporterrorsubclass": [23, 56, 493], "pyerr_syntaxlocationobject": 23, "lineno": [23, 110, 133, 157, 180, 201, 204, 207, 227, 232, 270, 277, 280, 282, 301, 312, 314, 323, 327, 329, 334, 346, 377, 396, 397, 403, 415, 443, 446, 470, 487, 492, 493, 495], "col_offset": [23, 133, 204, 495], "syntaxerror": [23, 65, 67, 91, 116, 133, 170, 172, 181, 207, 227, 239, 261, 334, 377, 393, 396, 401, 442, 444, 446, 450, 451, 457, 458, 461, 464, 465, 477, 478, 479, 488, 489, 491, 492, 493, 494], "subsystem": [23, 107, 114, 265, 364, 384, 476, 480, 482, 484, 495], "think": [23, 59, 63, 71, 72, 80, 87, 90, 92, 97, 107, 112, 114, 116, 117, 119, 121, 207, 215, 239, 250, 267, 276, 282, 307, 314, 401, 404, 405, 443, 445, 447, 455, 456, 457, 464, 479, 482, 483], "pyerr_syntaxlocationex": [23, 56], "pyerr_syntaxloc": [23, 56], "omit": [23, 57, 59, 67, 71, 87, 90, 99, 114, 116, 128, 131, 132, 133, 138, 152, 166, 173, 180, 188, 189, 190, 196, 203, 207, 214, 215, 216, 218, 227, 237, 239, 244, 248, 259, 261, 262, 264, 273, 274, 280, 281, 286, 291, 293, 298, 303, 307, 308, 312, 314, 320, 329, 333, 334, 335, 343, 346, 347, 349, 351, 353, 356, 359, 360, 361, 373, 380, 391, 396, 398, 399, 401, 403, 404, 415, 416, 424, 426, 428, 429, 436, 441, 442, 443, 445, 446, 450, 451, 461, 464, 470, 476, 480, 481, 482, 484, 485, 487, 488, 490, 491, 493, 494], "pyerr_badinternalcal": [23, 56], "pyexc_systemerror": [23, 56], "mirror": [23, 120, 237, 282, 283, 284, 384, 392, 402, 430, 470, 481], "user": [23, 28, 33, 34, 35, 42, 44, 56, 57, 62, 63, 65, 67, 69, 71, 72, 74, 77, 78, 80, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 105, 106, 110, 111, 112, 113, 114, 116, 119, 120, 125, 129, 131, 137, 138, 141, 145, 147, 151, 155, 157, 164, 167, 168, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 184, 186, 188, 190, 192, 194, 196, 198, 199, 200, 202, 206, 207, 214, 224, 225, 226, 227, 230, 237, 240, 241, 242, 243, 244, 247, 249, 254, 256, 257, 259, 262, 265, 266, 269, 270, 272, 273, 277, 281, 282, 284, 286, 287, 290, 296, 298, 301, 303, 307, 308, 309, 310, 311, 312, 314, 315, 318, 320, 325, 326, 327, 330, 334, 335, 337, 343, 344, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 360, 363, 364, 368, 373, 374, 375, 377, 380, 381, 384, 385, 388, 390, 391, 394, 395, 396, 399, 400, 403, 405, 409, 410, 411, 414, 415, 418, 420, 422, 426, 427, 428, 429, 430, 434, 436, 437, 440, 441, 442, 444, 445, 447, 451, 453, 454, 455, 456, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "machineri": [23, 45, 62, 67, 80, 85, 99, 105, 114, 127, 171, 223, 225, 239, 264, 266, 270, 283, 295, 317, 357, 368, 400, 417, 421, 438, 439, 443, 447, 470, 476, 478, 479, 481, 484, 487, 488, 489, 490, 491, 492, 493, 494], "nor": [23, 33, 34, 62, 81, 87, 88, 96, 99, 101, 106, 111, 120, 127, 145, 156, 157, 171, 201, 256, 257, 282, 285, 290, 298, 301, 307, 308, 311, 312, 314, 317, 318, 331, 333, 334, 345, 354, 356, 357, 360, 368, 375, 391, 395, 401, 403, 410, 418, 440, 441, 443, 445, 470, 471, 487, 489, 491, 493, 494], "intent": [23, 31, 84, 85, 114, 194, 196, 210, 219, 273, 290, 308, 368, 401, 403, 404, 422, 442, 443, 480, 481, 483, 485, 490, 491], "pyerr_warnex": [23, 56, 415, 482], "stack_level": 23, "forth": [23, 72, 78, 80, 97, 104, 116, 117, 173, 308, 334, 343, 360, 443, 477, 479, 480, 482], "pyexc_warn": [23, 56], "pyexc_except": [23, 56], "pyexc_runtimewarn": [23, 56], "enumer": [23, 67, 90, 105, 107, 118, 119, 173, 195, 239, 240, 269, 276, 298, 326, 360, 380, 397, 413, 420, 437, 456, 457, 465, 467, 476, 488, 491, 493, 498], "command": [23, 33, 34, 35, 65, 67, 72, 74, 75, 77, 78, 80, 81, 83, 84, 85, 89, 90, 91, 93, 97, 98, 101, 113, 114, 116, 119, 121, 122, 123, 125, 129, 130, 136, 137, 138, 142, 148, 149, 155, 164, 170, 173, 177, 181, 190, 195, 198, 200, 201, 205, 206, 207, 220, 228, 236, 237, 239, 244, 259, 262, 266, 269, 273, 279, 282, 283, 287, 298, 300, 303, 310, 311, 316, 318, 320, 321, 323, 324, 325, 328, 330, 339, 342, 346, 347, 350, 351, 356, 357, 360, 366, 368, 369, 374, 375, 378, 383, 384, 388, 391, 397, 399, 414, 415, 418, 422, 428, 435, 443, 444, 451, 452, 453, 454, 460, 462, 463, 464, 465, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 492, 494, 495, 496, 498], "pyerr_warnexplicitobject": 23, "registri": [23, 32, 34, 63, 64, 67, 158, 180, 188, 209, 211, 217, 240, 264, 265, 269, 274, 284, 291, 314, 318, 357, 368, 369, 401, 410, 415, 419, 421, 428, 473, 477, 483, 484, 493, 496], "explicit": [23, 28, 31, 35, 45, 65, 67, 71, 80, 81, 85, 88, 90, 97, 112, 113, 116, 117, 123, 125, 131, 145, 153, 180, 182, 194, 196, 199, 203, 219, 224, 227, 239, 244, 257, 265, 274, 284, 298, 307, 312, 314, 329, 339, 346, 347, 353, 354, 356, 360, 361, 363, 368, 375, 377, 401, 404, 417, 426, 429, 436, 443, 445, 447, 453, 455, 456, 457, 465, 471, 476, 477, 478, 482, 484, 485, 487, 489, 494, 495, 496, 498], "straightforward": [23, 35, 85, 96, 97, 98, 112, 114, 119, 120, 171, 173, 180, 189, 274, 283, 307, 343, 350, 353, 399, 404, 405, 455, 464, 479, 480, 483, 488, 489, 490], "warn_explicit": [23, 415, 493], "pyerr_warnexplicit": [23, 56], "pyerr_warnformat": [23, 56], "pyerr_resourcewarn": [23, 56, 493], "resourcewarn": [23, 67, 137, 200, 227, 241, 308, 364, 377, 403, 415, 465, 489, 493], "warningmessag": [23, 493], "pyerr_set": 23, "pyerr_restor": [23, 56, 62, 87], "pyerr_exceptionmatch": [23, 35, 56], "shown": [23, 35, 42, 80, 81, 85, 89, 101, 104, 106, 108, 112, 113, 114, 118, 120, 121, 122, 127, 131, 160, 173, 182, 194, 199, 201, 203, 204, 207, 217, 227, 228, 261, 282, 283, 307, 312, 323, 328, 334, 340, 361, 364, 381, 390, 391, 396, 399, 403, 404, 405, 409, 415, 417, 443, 454, 456, 458, 476, 483, 487, 492, 493, 494, 495, 496], "pyerr_givenexceptionmatch": [23, 56], "subtupl": 23, "pyerr_fetch": [23, 56, 62, 87, 491], "ptraceback": 23, "catch": [23, 35, 42, 67, 80, 90, 97, 99, 104, 107, 114, 119, 120, 131, 133, 151, 180, 188, 207, 227, 258, 270, 282, 307, 308, 330, 337, 346, 348, 356, 364, 377, 401, 403, 410, 423, 443, 445, 458, 477, 480, 482, 483, 484, 485, 488, 489, 490, 491, 493, 496], "invalid": [23, 28, 34, 56, 58, 60, 63, 67, 85, 90, 92, 97, 99, 101, 105, 106, 111, 112, 113, 116, 119, 120, 126, 129, 138, 139, 159, 163, 170, 172, 173, 176, 189, 196, 197, 199, 210, 213, 215, 217, 219, 222, 223, 225, 226, 227, 230, 239, 240, 241, 244, 248, 252, 254, 256, 258, 261, 264, 265, 270, 273, 277, 281, 283, 286, 290, 298, 307, 308, 309, 310, 314, 324, 326, 334, 337, 343, 344, 348, 353, 356, 357, 359, 360, 361, 364, 365, 373, 377, 380, 381, 391, 393, 394, 401, 403, 409, 411, 415, 416, 417, 420, 425, 434, 440, 442, 443, 446, 451, 456, 458, 464, 470, 477, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496], "later": [23, 24, 33, 34, 35, 42, 45, 60, 63, 71, 80, 81, 84, 85, 87, 88, 96, 98, 104, 107, 108, 113, 114, 116, 117, 120, 121, 125, 131, 137, 138, 150, 151, 153, 154, 155, 162, 164, 165, 167, 168, 171, 180, 182, 189, 190, 196, 204, 210, 216, 219, 244, 249, 257, 261, 265, 270, 273, 276, 280, 281, 282, 283, 285, 294, 298, 307, 308, 314, 334, 340, 343, 346, 348, 353, 356, 357, 365, 368, 373, 375, 377, 396, 401, 403, 404, 405, 410, 414, 415, 416, 417, 436, 439, 441, 442, 443, 445, 447, 451, 454, 455, 456, 457, 464, 465, 470, 476, 477, 478, 479, 480, 483, 484, 485, 488, 489, 491, 492, 494, 496], "awai": [23, 33, 35, 80, 88, 97, 107, 113, 114, 117, 131, 190, 196, 199, 207, 227, 261, 269, 270, 290, 299, 307, 308, 323, 334, 410, 454, 455, 467, 479, 480, 485, 491, 492], "pyerr_normalizeexcept": [23, 56], "tb": [23, 114, 204, 227, 261, 396, 397, 400, 405, 443, 482, 483, 491], "circumst": [23, 42, 90, 97, 104, 106, 114, 164, 180, 227, 257, 282, 285, 307, 308, 337, 347, 359, 410, 418, 443, 451, 455, 458, 465, 481, 488, 491, 495], "unnorm": [23, 333], "instanti": [23, 62, 71, 75, 88, 96, 106, 112, 113, 114, 120, 127, 133, 138, 144, 145, 148, 151, 164, 166, 168, 173, 189, 190, 194, 196, 203, 208, 210, 212, 217, 244, 254, 256, 259, 262, 264, 265, 282, 283, 284, 286, 298, 304, 307, 311, 312, 314, 333, 343, 344, 346, 350, 351, 353, 354, 360, 377, 384, 391, 400, 401, 403, 404, 405, 414, 418, 423, 425, 426, 429, 431, 443, 451, 455, 458, 482, 483, 489, 492, 494, 495, 496], "delai": [23, 67, 96, 104, 114, 124, 137, 141, 151, 190, 259, 261, 270, 284, 298, 303, 329, 340, 348, 353, 357, 377, 399, 405, 410, 411, 428, 443, 465, 483, 487, 489, 493, 494, 495], "implicitli": [23, 34, 80, 97, 99, 112, 125, 138, 145, 156, 179, 180, 182, 194, 197, 201, 227, 237, 254, 262, 265, 273, 283, 296, 310, 339, 348, 351, 353, 356, 360, 361, 364, 401, 404, 415, 427, 443, 445, 447, 450, 451, 455, 458, 484, 487, 488, 489, 490, 492, 493, 494, 495], "__traceback__": [23, 227, 368, 396, 400, 443, 445, 451, 485, 488], "snippet": [23, 67, 74, 90, 101, 106, 114, 137, 151, 183, 198, 258, 269, 283, 346, 357, 380, 457, 476, 479, 480, 482, 492], "pyexception_settraceback": [23, 56], "pyerr_gethandledexcept": [23, 56, 488], "activ": [23, 33, 35, 49, 58, 62, 65, 80, 84, 90, 92, 97, 98, 104, 108, 116, 117, 121, 122, 138, 144, 150, 151, 152, 157, 164, 165, 173, 182, 190, 199, 224, 227, 232, 237, 239, 257, 261, 266, 269, 278, 287, 298, 303, 307, 310, 312, 320, 323, 329, 343, 349, 354, 356, 357, 360, 364, 368, 380, 381, 384, 391, 399, 400, 404, 405, 414, 426, 427, 430, 451, 456, 468, 470, 476, 477, 479, 480, 482, 483, 484, 487, 488, 489, 491, 492, 493, 494, 495, 496], "freshli": [23, 97, 270, 400], "pyerr_sethandledexcept": [23, 56, 488], "pyerr_getexcinfo": [23, 56, 488], "kept": [23, 24, 33, 45, 58, 97, 112, 114, 125, 173, 180, 189, 197, 199, 209, 213, 222, 225, 227, 228, 239, 257, 258, 261, 264, 273, 276, 284, 286, 306, 326, 327, 331, 334, 349, 354, 357, 359, 366, 401, 404, 417, 439, 451, 458, 467, 477, 479, 484, 485, 487, 488, 489, 490, 491, 496], "backward": [23, 24, 33, 56, 58, 63, 65, 80, 92, 99, 113, 114, 131, 132, 134, 140, 152, 157, 180, 190, 196, 207, 208, 210, 219, 221, 222, 225, 227, 242, 250, 255, 259, 262, 265, 270, 273, 282, 283, 286, 289, 306, 308, 309, 310, 314, 317, 323, 329, 333, 334, 337, 347, 353, 357, 360, 364, 366, 372, 375, 377, 381, 396, 399, 401, 403, 409, 410, 412, 434, 443, 445, 447, 450, 451, 455, 475, 476, 477, 479, 480, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pyerr_setexcinfo": [23, 56, 488], "deriv": [23, 33, 49, 58, 60, 67, 72, 76, 88, 90, 99, 100, 121, 127, 131, 133, 157, 170, 171, 173, 179, 187, 189, 190, 191, 194, 196, 211, 213, 215, 216, 217, 227, 239, 240, 244, 254, 258, 262, 264, 265, 266, 270, 273, 276, 277, 282, 283, 287, 303, 307, 308, 323, 325, 327, 328, 329, 343, 354, 357, 361, 368, 370, 384, 399, 401, 403, 408, 410, 413, 415, 422, 423, 426, 431, 434, 435, 441, 443, 446, 447, 450, 455, 458, 477, 480, 481, 482, 483, 484, 485, 488, 490, 491, 493, 494], "main": [23, 33, 34, 35, 42, 58, 62, 65, 67, 75, 80, 84, 85, 86, 87, 88, 90, 96, 97, 99, 101, 104, 105, 108, 112, 114, 125, 126, 131, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 164, 170, 179, 180, 182, 183, 190, 198, 201, 203, 207, 208, 210, 213, 214, 215, 218, 219, 220, 222, 240, 242, 244, 250, 254, 261, 265, 266, 267, 270, 273, 282, 283, 286, 298, 303, 307, 308, 311, 314, 337, 339, 348, 349, 354, 356, 360, 363, 368, 369, 373, 377, 380, 382, 384, 387, 388, 390, 391, 397, 399, 401, 403, 404, 405, 410, 414, 417, 426, 428, 430, 435, 436, 444, 447, 457, 465, 466, 467, 470, 473, 476, 479, 480, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "pend": [23, 33, 39, 67, 81, 87, 99, 123, 138, 145, 151, 179, 250, 273, 286, 296, 320, 343, 348, 356, 357, 439, 445, 489, 490, 491, 493, 496, 498], "invoc": [23, 55, 67, 71, 83, 85, 99, 110, 177, 182, 189, 224, 289, 298, 323, 380, 396, 403, 414, 422, 430, 442, 443, 453, 455, 470, 473, 474, 481, 489, 491, 495], "press": [23, 93, 104, 114, 138, 167, 190, 261, 297, 312, 338, 384, 390, 391, 399, 403, 437, 484, 489], "ctrl": [23, 98, 104, 114, 138, 147, 181, 191, 298, 312, 348, 354, 456, 470, 477, 482, 489, 495], "sigint": [23, 67, 126, 147, 298, 312, 331, 348, 364, 403, 487, 489, 495], "keyboardinterrupt": [23, 108, 113, 114, 126, 147, 151, 170, 227, 298, 331, 348, 403, 422, 435, 453, 458, 465, 482, 483, 484, 485, 493, 494, 495], "pyerr_setinterrupt": [23, 56], "simul": [23, 67, 104, 105, 114, 118, 126, 138, 145, 148, 173, 190, 248, 250, 314, 333, 341, 348, 359, 363, 378, 399, 417, 478, 479, 487, 491], "arriv": [23, 126, 207, 257, 259, 298, 333, 348, 354, 357, 381, 457, 477], "pyerr_setinterruptex": [23, 56, 487], "signum": [23, 96, 126, 138, 228, 308, 348], "sig_dfl": [23, 126, 348, 364], "sig_ign": [23, 126, 348, 364], "outsid": [23, 58, 71, 74, 97, 105, 107, 113, 114, 116, 117, 121, 137, 138, 144, 151, 163, 171, 176, 179, 183, 189, 190, 196, 199, 210, 213, 219, 222, 227, 239, 259, 261, 277, 314, 328, 329, 334, 340, 347, 353, 357, 360, 361, 363, 373, 377, 380, 381, 382, 391, 399, 401, 428, 430, 437, 441, 442, 443, 450, 451, 455, 457, 465, 480, 481, 484, 487, 488, 489, 493, 494, 495, 496], "pysignal_setwakeupfd": [23, 483], "fd": [23, 24, 96, 138, 142, 145, 155, 190, 229, 273, 297, 308, 324, 343, 344, 347, 348, 353, 376, 398, 399, 483], "disabl": [23, 28, 33, 34, 35, 42, 56, 67, 71, 72, 81, 85, 106, 108, 113, 114, 116, 121, 123, 131, 138, 142, 147, 157, 164, 177, 180, 188, 190, 199, 203, 207, 215, 228, 232, 237, 239, 240, 241, 256, 270, 273, 277, 282, 283, 284, 298, 303, 307, 308, 312, 314, 323, 329, 334, 335, 342, 343, 346, 348, 349, 351, 353, 355, 356, 357, 360, 368, 377, 391, 399, 401, 403, 404, 410, 415, 417, 420, 428, 440, 443, 447, 453, 458, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "set_wakeup_fd": [23, 348, 483, 492, 494], "socket": [23, 67, 92, 99, 107, 109, 111, 113, 116, 119, 136, 139, 142, 143, 155, 171, 183, 184, 200, 221, 226, 227, 237, 249, 256, 259, 261, 262, 269, 271, 272, 273, 274, 275, 282, 283, 284, 298, 299, 303, 308, 311, 320, 322, 337, 343, 344, 348, 350, 351, 354, 358, 366, 373, 374, 384, 417, 422, 428, 443, 454, 467, 471, 477, 478, 479, 480, 481, 482, 483, 484], "pyerr_newexcept": [23, 56, 85, 482, 484, 489], "classnam": [23, 97, 133, 174, 384, 390, 404, 405, 442, 455], "__module__": [23, 27, 57, 62, 100, 105, 106, 173, 211, 225, 239, 240, 270, 294, 377, 401, 443, 480, 487, 492, 493], "dot": [23, 31, 45, 62, 71, 88, 99, 105, 110, 113, 114, 116, 121, 133, 207, 239, 245, 257, 261, 264, 265, 274, 276, 281, 282, 283, 286, 291, 303, 306, 311, 317, 328, 334, 338, 347, 353, 360, 368, 373, 375, 384, 392, 399, 403, 404, 405, 435, 437, 438, 442, 443, 447, 449, 451, 455, 456, 462, 463, 465, 470, 476, 483, 486, 487, 492], "pyerr_newexceptionwithdoc": [23, 56, 484, 489], "docstr": [23, 27, 34, 35, 45, 57, 59, 62, 65, 67, 87, 96, 99, 114, 133, 168, 173, 200, 236, 239, 240, 261, 270, 312, 328, 377, 393, 400, 401, 403, 422, 442, 443, 450, 451, 455, 456, 466, 470, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 491, 492, 493, 494, 495, 496], "pyexception_gettraceback": [23, 56], "ex": [23, 34, 42, 67, 71, 98, 99, 114, 116, 261, 284, 298, 308, 309, 335, 347, 349, 353, 360, 364, 414, 434, 436, 437, 446, 453, 461, 463, 470, 471, 476, 479, 482, 484, 489, 492, 493, 494, 496], "pyexception_getcontext": [23, 56], "__context__": [23, 227, 396, 451, 485, 490], "pyexception_setcontext": [23, 56], "pyexception_getcaus": [23, 56], "__cause__": [23, 204, 227, 396, 451, 485], "pyexception_setcaus": [23, 56], "__suppress_context__": [23, 227, 396, 451], "pyunicodedecodeerror_cr": [23, 56], "pyunicodedecodeerror_getencod": [23, 56], "pyunicodeencodeerror_getencod": [23, 56], "pyunicodedecodeerror_getobject": [23, 56], "pyunicodeencodeerror_getobject": [23, 56], "pyunicodetranslateerror_getobject": [23, 56], "pyunicodedecodeerror_getstart": [23, 56], "pyunicodeencodeerror_getstart": [23, 56], "pyunicodetranslateerror_getstart": [23, 56], "pyunicodedecodeerror_setstart": [23, 56], "pyunicodeencodeerror_setstart": [23, 56], "pyunicodetranslateerror_setstart": [23, 56], "pyunicodedecodeerror_getend": [23, 56], "pyunicodeencodeerror_getend": [23, 56], "pyunicodetranslateerror_getend": [23, 56], "pyunicodedecodeerror_setend": [23, 56], "pyunicodeencodeerror_setend": [23, 56], "pyunicodetranslateerror_setend": [23, 56], "pyunicodedecodeerror_getreason": [23, 56], "pyunicodeencodeerror_getreason": [23, 56], "pyunicodetranslateerror_getreason": [23, 56], "pyunicodedecodeerror_setreason": [23, 56], "pyunicodeencodeerror_setreason": [23, 56], "pyunicodetranslateerror_setreason": [23, 56], "depth": [23, 103, 113, 133, 176, 180, 190, 192, 197, 204, 210, 219, 227, 239, 249, 285, 314, 322, 336, 356, 360, 368, 373, 377, 390, 396, 400, 403, 427, 428, 455, 456, 460, 477, 478, 479, 492, 493, 494], "mark": [23, 34, 35, 63, 67, 87, 90, 96, 99, 105, 108, 110, 114, 116, 119, 123, 127, 128, 131, 133, 141, 142, 145, 151, 152, 157, 171, 179, 180, 190, 194, 203, 204, 207, 219, 244, 246, 250, 254, 261, 270, 277, 284, 286, 312, 315, 320, 329, 343, 353, 356, 360, 364, 374, 377, 384, 395, 401, 403, 417, 425, 430, 441, 443, 445, 446, 450, 456, 461, 464, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "use_stackcheck": [23, 58], "pyos_checkstack": [23, 56, 58], "reach": [23, 24, 35, 51, 65, 85, 87, 92, 96, 97, 107, 114, 115, 116, 120, 138, 139, 146, 148, 149, 157, 162, 166, 172, 239, 256, 273, 276, 282, 285, 308, 312, 328, 329, 331, 343, 346, 353, 354, 356, 360, 364, 396, 410, 428, 430, 439, 442, 443, 445, 447, 451, 455, 456, 458, 461, 476, 477, 478, 479, 480, 482, 483, 484, 489, 491, 492, 494, 495], "recursionerror": [23, 133, 227, 277, 314, 368, 458, 492, 493], "concaten": [23, 52, 53, 67, 71, 88, 116, 131, 132, 162, 164, 170, 171, 204, 239, 248, 249, 251, 282, 285, 286, 306, 308, 309, 311, 312, 329, 334, 346, 351, 353, 357, 360, 361, 373, 396, 401, 439, 443, 445, 458, 461, 464, 476, 480, 481, 487], "tp_repr": [23, 62, 87], "protect": [23, 33, 85, 87, 88, 114, 151, 180, 189, 190, 194, 237, 244, 249, 250, 262, 273, 285, 293, 298, 322, 329, 339, 346, 354, 357, 358, 373, 404, 415, 424, 436, 443, 458, 470, 479, 482, 488, 492], "cycl": [23, 28, 60, 62, 67, 85, 88, 90, 92, 97, 99, 107, 110, 112, 114, 121, 125, 151, 173, 224, 241, 246, 261, 270, 276, 299, 368, 377, 380, 391, 417, 442, 443, 451, 454, 467, 478, 480, 482, 483, 484, 489, 491, 495, 496, 498], "facilit": [23, 239, 261, 283, 334, 335, 351, 415, 491, 494], "reprlib": [23, 67, 195, 269, 467, 485], "recursive_repr": [23, 336, 489], "py_reprent": [23, 56], "detect": [23, 28, 34, 35, 42, 58, 62, 67, 71, 75, 85, 87, 88, 90, 97, 99, 105, 107, 116, 117, 120, 123, 127, 145, 152, 153, 171, 174, 188, 190, 194, 196, 199, 201, 204, 208, 217, 220, 227, 239, 246, 261, 265, 269, 279, 286, 290, 307, 308, 309, 310, 311, 314, 322, 329, 335, 336, 346, 348, 351, 353, 356, 360, 364, 368, 373, 377, 379, 380, 393, 397, 403, 404, 408, 410, 418, 422, 442, 443, 444, 445, 450, 452, 458, 471, 476, 477, 478, 479, 480, 483, 484, 487, 488, 489, 491, 492, 493, 494, 495], "typic": [23, 33, 34, 35, 45, 49, 56, 57, 60, 62, 63, 71, 72, 75, 78, 81, 83, 85, 89, 90, 97, 98, 99, 105, 106, 112, 113, 114, 120, 121, 122, 125, 131, 133, 134, 137, 138, 141, 146, 151, 162, 164, 171, 180, 186, 199, 203, 207, 210, 217, 219, 232, 237, 239, 240, 242, 244, 259, 265, 266, 267, 268, 270, 273, 281, 282, 283, 284, 286, 290, 291, 296, 298, 307, 308, 312, 314, 321, 322, 323, 331, 333, 335, 339, 341, 347, 349, 354, 357, 359, 360, 361, 363, 364, 368, 370, 373, 374, 375, 380, 381, 382, 384, 386, 391, 399, 400, 401, 403, 404, 410, 413, 414, 415, 420, 422, 425, 426, 428, 429, 430, 431, 436, 438, 443, 445, 447, 453, 454, 457, 458, 466, 467, 468, 470, 476, 480, 481, 484, 485, 488, 489, 491, 492, 494, 495], "py_reprleav": [23, 56], "pyexc_": 23, "complet": [23, 33, 34, 35, 42, 56, 58, 63, 65, 67, 68, 71, 81, 85, 87, 88, 89, 90, 92, 98, 99, 104, 106, 107, 109, 112, 114, 116, 117, 121, 128, 131, 136, 138, 139, 142, 145, 146, 148, 149, 151, 153, 163, 164, 167, 168, 170, 171, 172, 176, 179, 180, 182, 190, 194, 196, 199, 203, 207, 208, 210, 216, 217, 219, 220, 221, 222, 225, 227, 237, 239, 240, 244, 246, 247, 249, 250, 254, 259, 264, 269, 270, 274, 275, 276, 277, 283, 284, 286, 287, 291, 296, 298, 299, 307, 308, 310, 312, 314, 323, 331, 333, 334, 337, 346, 347, 349, 353, 354, 356, 357, 358, 360, 364, 368, 369, 373, 375, 376, 377, 378, 380, 383, 384, 390, 391, 393, 395, 396, 399, 401, 403, 405, 409, 410, 416, 422, 423, 425, 426, 428, 431, 442, 443, 444, 445, 447, 448, 449, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 468, 469, 470, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "pyexc_baseexcept": [23, 56], "baseexcept": [23, 139, 151, 179, 227, 282, 368, 396, 447, 451, 458, 465, 482, 483, 485, 488, 494, 495], "pyexc_arithmeticerror": [23, 56], "arithmeticerror": [23, 199, 227, 465], "pyexc_assertionerror": [23, 56], "assertionerror": [23, 204, 227, 298, 377, 403, 404, 405, 422, 451, 465, 488, 496], "pyexc_attributeerror": [23, 56, 87, 88], "attributeerror": [23, 49, 57, 67, 100, 105, 114, 164, 182, 189, 194, 225, 227, 239, 240, 265, 270, 276, 283, 298, 314, 317, 334, 348, 360, 377, 382, 400, 403, 404, 405, 425, 426, 442, 443, 445, 451, 465, 471, 477, 479, 484, 488, 489, 490, 491, 492, 494], "pyexc_blockingioerror": [23, 56], "blockingioerror": [23, 152, 226, 227, 273, 308, 357, 442, 465, 490], "pyexc_brokenpipeerror": [23, 56], "brokenpipeerror": [23, 149, 226, 227, 348, 465, 490], "pyexc_buffererror": [23, 56], "pyexc_childprocesserror": [23, 56], "childprocesserror": [23, 226, 227, 308, 465, 490], "pyexc_connectionabortederror": [23, 56], "connectionabortederror": [23, 226, 227, 465, 490], "pyexc_connectionerror": [23, 56], "connectionerror": [23, 227, 256, 458, 465, 490, 492], "pyexc_connectionrefusederror": [23, 56], "connectionrefusederror": [23, 226, 227, 465, 490], "pyexc_connectionreseterror": [23, 56], "connectionreseterror": [23, 149, 226, 227, 256, 465, 490], "pyexc_eoferror": [23, 56], "eoferror": [23, 24, 41, 132, 139, 162, 166, 170, 227, 237, 239, 248, 285, 289, 298, 314, 351, 374, 465, 485], "pyexc_fileexistserror": [23, 56], "fileexistserror": [23, 214, 226, 227, 239, 273, 308, 311, 326, 347, 373, 437, 465, 490, 491], "pyexc_filenotfounderror": [23, 56], "filenotfounderror": [23, 131, 153, 182, 226, 227, 268, 283, 301, 308, 311, 335, 458, 465, 490, 492], "pyexc_floatingpointerror": [23, 56], "floatingpointerror": [23, 227, 465], "pyexc_generatorexit": [23, 56], "generatorexit": [23, 107, 227, 443, 445, 465, 482, 483], "pyexc_importerror": [23, 56, 112], "pyexc_indentationerror": [23, 56], "indentationerror": [23, 67, 98, 227, 465, 477], "pyexc_indexerror": [23, 56], "indexerror": [23, 37, 38, 47, 59, 171, 173, 189, 210, 227, 250, 276, 298, 314, 333, 334, 360, 361, 396, 404, 443, 445, 451, 457, 464, 465, 477, 489], "pyexc_interruptederror": [23, 56], "interruptederror": [23, 226, 227, 239, 308, 343, 348, 353, 465, 490, 492], "pyexc_isadirectoryerror": [23, 56], "isadirectoryerror": [23, 226, 227, 308, 465, 490], "pyexc_keyerror": [23, 35, 56], "pyexc_keyboardinterrupt": [23, 56], "pyexc_lookuperror": [23, 56], "pyexc_modulenotfounderror": [23, 56], "modulenotfounderror": [23, 227, 265, 447, 493, 494], "pyexc_nameerror": [23, 56], "nameerror": [23, 67, 189, 227, 264, 265, 444, 445, 451, 458, 464, 465, 477, 478, 479, 482], "pyexc_notadirectoryerror": [23, 56], "notadirectoryerror": [23, 226, 227, 308, 465, 490], "pyexc_notimplementederror": [23, 56], "notimplementederror": [23, 134, 145, 181, 196, 214, 227, 240, 257, 264, 265, 282, 298, 308, 311, 333, 350, 357, 401, 420, 437, 465, 491, 493], "pyexc_oserror": [23, 56, 85], "pyexc_overflowerror": [23, 56], "overflowerror": [23, 25, 39, 47, 126, 170, 172, 196, 199, 207, 227, 239, 290, 319, 353, 356, 360, 380, 381, 443, 465, 479, 480, 483, 484, 486, 487, 490, 491], "pyexc_permissionerror": [23, 56], "permissionerror": [23, 226, 227, 265, 308, 337, 355, 375, 377, 465, 490, 493], "pyexc_processlookuperror": [23, 56], "processlookuperror": [23, 226, 227, 337, 465, 490], "pyexc_recursionerror": [23, 56, 492], "pyexc_referenceerror": [23, 56], "referenceerror": [23, 227, 417, 465, 478, 479], "runtimeerror": [23, 71, 107, 117, 126, 132, 138, 139, 144, 149, 150, 151, 179, 182, 183, 227, 232, 239, 273, 276, 283, 298, 308, 311, 334, 351, 360, 364, 368, 377, 380, 401, 421, 437, 443, 445, 451, 458, 465, 480, 481, 482, 484, 490, 492, 493, 494, 495], "pyexc_stopasynciter": [23, 56], "stopasynciter": [23, 99, 204, 227, 239, 404, 442, 443, 445, 451], "pyexc_stopiter": [23, 56], "stopiter": [23, 62, 67, 87, 99, 107, 124, 173, 227, 239, 276, 289, 298, 360, 404, 443, 445, 451, 455, 465, 479, 480, 482, 483, 487, 493, 494], "pyexc_syntaxerror": [23, 56, 446], "pyexc_systemexit": [23, 56], "pyexc_taberror": [23, 56], "taberror": [23, 98, 227, 450, 465, 477], "pyexc_timeouterror": [23, 56], "timeouterror": [23, 139, 151, 179, 226, 227, 298, 351, 353, 465, 487, 490], "pyexc_unboundlocalerror": [23, 56], "unboundlocalerror": [23, 227, 444, 465, 477], "pyexc_unicodedecodeerror": [23, 56], "pyexc_unicodeencodeerror": [23, 56], "pyexc_unicodeerror": [23, 56], "pyexc_unicodetranslateerror": [23, 56], "pyexc_valueerror": [23, 56, 85, 484], "pyexc_zerodivisionerror": [23, 56, 85], "zerodivisionerror": [23, 104, 114, 196, 199, 227, 235, 298, 312, 348, 356, 445, 451, 458, 465, 466, 480, 486, 488, 489, 492, 496], "3151": [23, 67, 227, 337, 343, 353, 480, 498], "pyexc_environmenterror": [23, 56], "pyexc_ioerror": [23, 56], "separ": [23, 33, 34, 54, 56, 58, 62, 63, 67, 71, 72, 74, 76, 80, 81, 86, 89, 91, 96, 97, 100, 104, 106, 108, 112, 113, 114, 116, 118, 119, 121, 123, 127, 131, 136, 137, 139, 144, 148, 151, 159, 163, 164, 167, 168, 171, 173, 179, 180, 182, 188, 189, 190, 191, 196, 199, 203, 207, 210, 215, 216, 219, 222, 225, 227, 234, 239, 240, 244, 250, 259, 261, 262, 265, 267, 272, 273, 274, 277, 281, 282, 283, 284, 285, 286, 291, 298, 303, 306, 307, 308, 309, 311, 312, 317, 318, 322, 328, 329, 334, 339, 346, 349, 351, 353, 354, 356, 357, 359, 360, 361, 363, 364, 373, 376, 377, 379, 380, 382, 383, 384, 387, 395, 403, 404, 405, 409, 410, 413, 415, 417, 418, 422, 437, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 456, 457, 461, 464, 465, 466, 467, 470, 471, 476, 477, 479, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "preprocessor": [23, 42, 56, 67, 71, 74, 83, 121, 346, 436, 473, 477, 484], "ms_window": [23, 34], "pyexc_byteswarn": [23, 56], "byteswarn": [23, 34, 227, 415, 465, 494], "pyexc_deprecationwarn": [23, 56], "deprecationwarn": [23, 67, 116, 123, 138, 144, 181, 201, 227, 334, 363, 373, 377, 403, 415, 443, 447, 450, 465, 470, 478, 480, 484, 487, 488, 489, 491, 492, 493, 495, 498], "pyexc_futurewarn": [23, 56], "futurewarn": [23, 227, 334, 415, 465, 480, 481, 484, 494], "pyexc_importwarn": [23, 56], "importwarn": [23, 201, 227, 403, 415, 447, 465, 482, 487, 493], "pyexc_pendingdeprecationwarn": [23, 56], "pendingdeprecationwarn": [23, 123, 201, 227, 403, 415, 465, 480, 483, 484, 492, 493, 494, 495, 496], "pyexc_resourcewarn": [23, 56], "runtimewarn": [23, 45, 137, 227, 353, 368, 403, 415, 465, 489, 495], "pyexc_syntaxwarn": [23, 56], "syntaxwarn": [23, 227, 377, 415, 450, 465, 480, 488, 493, 495], "pyexc_unicodewarn": [23, 56], "unicodewarn": [23, 227, 415, 465, 482, 489], "pyexc_userwarn": [23, 56], "userwarn": [23, 227, 243, 377, 415, 465], "minim": [24, 45, 61, 67, 71, 75, 81, 85, 88, 92, 96, 104, 114, 125, 133, 154, 164, 199, 203, 207, 228, 239, 249, 254, 262, 265, 269, 274, 288, 307, 314, 320, 334, 339, 348, 350, 353, 355, 356, 377, 379, 394, 401, 410, 424, 452, 456, 471, 476, 477, 482, 493], "emul": [24, 33, 67, 88, 91, 97, 105, 121, 152, 170, 172, 173, 190, 194, 202, 207, 229, 264, 273, 281, 286, 298, 307, 308, 309, 317, 324, 335, 347, 348, 364, 368, 374, 455, 479, 480, 483, 489, 490, 493, 495], "reli": [24, 56, 67, 85, 88, 99, 100, 105, 106, 112, 114, 117, 122, 145, 153, 164, 173, 174, 194, 196, 239, 264, 265, 266, 270, 282, 291, 298, 307, 308, 314, 317, 318, 333, 345, 347, 368, 375, 377, 379, 380, 381, 401, 403, 405, 414, 436, 442, 443, 444, 455, 456, 465, 476, 477, 480, 481, 482, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495], "io": [24, 33, 34, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 91, 97, 99, 121, 129, 135, 136, 137, 138, 148, 151, 162, 171, 177, 182, 200, 201, 203, 210, 227, 229, 232, 233, 239, 248, 249, 256, 259, 266, 268, 269, 277, 285, 286, 303, 308, 314, 319, 323, 324, 354, 357, 360, 364, 368, 373, 375, 377, 393, 394, 404, 414, 422, 426, 436, 437, 440, 441, 443, 470, 482, 483, 484, 485, 486, 487, 488, 491, 493, 496, 498], "unbuff": [24, 33, 273, 364, 368, 470], "meant": [24, 35, 49, 60, 78, 90, 113, 114, 125, 133, 145, 151, 154, 171, 179, 227, 244, 250, 254, 265, 323, 353, 377, 384, 401, 410, 437, 446, 456, 461, 476, 482, 483, 484, 487, 489, 490, 491, 492, 494, 495], "advis": [24, 113, 182, 189, 262, 298, 303, 308, 380, 415, 440, 441, 443, 445, 463, 489, 495], "pyfile_fromfd": [24, 56], "newlin": [24, 67, 71, 91, 99, 114, 116, 131, 133, 156, 159, 162, 170, 172, 188, 190, 203, 207, 210, 221, 232, 239, 248, 261, 265, 273, 277, 280, 282, 284, 285, 286, 293, 303, 311, 314, 322, 329, 334, 346, 353, 354, 360, 364, 371, 375, 379, 381, 382, 392, 393, 396, 397, 409, 415, 426, 434, 436, 437, 442, 446, 450, 452, 461, 464, 466, 467, 470, 478, 481, 482, 483, 484, 485, 487, 488, 491, 493, 494, 495, 496, 498], "closefd": [24, 201, 239, 273, 298, 485], "mix": [24, 33, 42, 67, 98, 101, 114, 121, 127, 134, 152, 180, 199, 218, 219, 220, 221, 225, 232, 239, 242, 274, 298, 304, 308, 310, 324, 334, 354, 357, 359, 360, 370, 377, 401, 409, 442, 443, 450, 457, 464, 465, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491], "unexpect": [24, 28, 92, 113, 114, 207, 219, 222, 237, 244, 282, 290, 303, 333, 334, 348, 351, 353, 357, 359, 377, 403, 405, 410, 415, 437, 442, 443, 445, 450, 458, 476, 484, 487, 490, 494, 495, 496], "pyobject_asfiledescriptor": [24, 56], "fileno": [24, 58, 96, 114, 152, 155, 162, 201, 229, 232, 249, 256, 273, 293, 298, 308, 310, 343, 344, 348, 353, 354, 357, 374, 375, 376, 384, 479, 482, 491], "pyfile_getlin": [24, 56], "readlin": [24, 34, 65, 67, 71, 80, 91, 96, 107, 112, 119, 138, 148, 149, 153, 156, 164, 168, 171, 180, 183, 201, 203, 218, 221, 227, 232, 237, 239, 262, 269, 273, 283, 293, 308, 311, 312, 314, 330, 346, 354, 378, 384, 393, 397, 404, 410, 414, 436, 437, 443, 453, 455, 458, 461, 462, 463, 470, 471, 477, 478, 479, 480, 482, 483, 484, 489, 491, 494], "greater": [24, 33, 34, 38, 39, 45, 55, 62, 63, 88, 104, 113, 114, 118, 119, 126, 145, 146, 150, 151, 157, 159, 160, 167, 173, 190, 196, 199, 203, 210, 222, 223, 225, 240, 244, 256, 262, 274, 282, 284, 290, 308, 312, 333, 337, 349, 351, 359, 360, 368, 373, 377, 380, 391, 392, 397, 399, 403, 422, 425, 439, 443, 450, 451, 455, 456, 461, 463, 464, 477, 479, 480, 481, 482, 492, 493, 494, 496], "pyfile_setopencodehook": [24, 273], "py_opencodehookfunct": 24, "open_cod": [24, 273], "userdata": [24, 58], "pyunicodeobject": [24, 62, 63, 108, 487, 488], "hook": [24, 31, 32, 34, 58, 65, 67, 99, 105, 110, 112, 126, 155, 168, 189, 201, 222, 230, 232, 239, 256, 264, 269, 295, 317, 322, 323, 330, 346, 356, 360, 368, 378, 380, 397, 400, 404, 414, 415, 438, 443, 445, 451, 453, 454, 470, 471, 477, 479, 482, 484, 487, 488, 490, 492, 493, 494, 496, 498], "intention": [24, 261, 303, 401, 422, 434, 441, 485], "avoid": [24, 33, 34, 35, 42, 44, 60, 62, 67, 80, 84, 85, 87, 88, 90, 97, 99, 100, 104, 107, 113, 116, 117, 118, 119, 124, 127, 131, 132, 137, 138, 141, 144, 145, 149, 150, 151, 160, 162, 171, 173, 179, 180, 182, 184, 189, 190, 196, 199, 224, 227, 229, 239, 241, 250, 251, 256, 259, 262, 270, 274, 277, 280, 281, 283, 284, 286, 290, 293, 298, 299, 304, 307, 308, 314, 329, 333, 334, 336, 347, 348, 350, 353, 356, 358, 359, 360, 364, 368, 373, 377, 379, 380, 381, 382, 384, 390, 400, 401, 403, 405, 410, 417, 421, 424, 425, 426, 428, 432, 442, 443, 445, 446, 447, 450, 451, 455, 456, 457, 458, 464, 467, 471, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "frozen": [24, 31, 34, 67, 92, 189, 239, 264, 265, 298, 317, 330, 368, 397, 401, 443, 447, 470, 476, 480, 491, 494], "py_initi": [24, 31, 33, 34, 35, 56, 58, 84, 85, 98, 476, 487, 489, 494, 496], "audit": [24, 33, 58, 67, 87, 110, 132, 189, 198, 224, 229, 237, 239, 241, 245, 256, 262, 269, 273, 289, 293, 297, 303, 308, 311, 312, 314, 320, 324, 337, 347, 348, 351, 353, 356, 360, 364, 368, 371, 374, 375, 400, 410, 418, 420, 443, 451, 465, 470, 480, 487], "event": [24, 31, 33, 42, 58, 65, 67, 71, 85, 87, 92, 104, 110, 113, 132, 134, 135, 136, 137, 141, 143, 144, 145, 147, 148, 149, 151, 152, 157, 177, 189, 190, 196, 198, 202, 204, 224, 229, 236, 237, 239, 241, 245, 250, 256, 262, 269, 272, 273, 275, 282, 284, 289, 293, 296, 297, 298, 303, 308, 311, 312, 314, 320, 323, 324, 329, 337, 343, 344, 347, 350, 351, 353, 356, 357, 358, 360, 364, 368, 371, 373, 374, 375, 377, 383, 386, 400, 403, 410, 417, 418, 420, 425, 426, 427, 428, 429, 430, 431, 432, 441, 443, 445, 451, 458, 461, 467, 470, 475, 476, 477, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "setopencodehook": [24, 155], "pyfile_writeobject": [24, 49, 56], "py_print_raw": [24, 49], "pyfile_writestr": [24, 56], "pyfloatobject": [25, 88], "pyfloat_typ": [25, 56], "pyfloat_check": 25, "pyfloat_checkexact": 25, "pyfloat_fromstr": [25, 56], "pyfloat_fromdoubl": [25, 56], "pyfloat_asdoubl": [25, 56, 495], "pyfloat": 25, "pyfloat_as_doubl": 25, "pyfloat_getinfo": [25, 56, 483], "structseq": [25, 484], "minimum": [25, 34, 35, 42, 56, 75, 88, 105, 114, 122, 126, 132, 137, 138, 145, 154, 167, 173, 189, 190, 199, 211, 272, 276, 290, 308, 318, 343, 349, 357, 359, 360, 361, 368, 377, 380, 387, 391, 399, 401, 403, 404, 455, 461, 471, 479, 480, 483, 487, 489, 490, 491, 493, 494], "thin": [25, 58, 67, 152, 240, 261, 290, 302, 348, 383, 384, 471, 488], "pyfloat_getmax": [25, 56, 483], "dbl_max": [25, 368], "pyfloat_getmin": [25, 56, 483], "dbl_min": [25, 368], "routin": [25, 33, 41, 62, 67, 84, 85, 87, 98, 105, 108, 118, 119, 154, 186, 190, 197, 209, 229, 251, 265, 269, 273, 281, 296, 308, 323, 357, 381, 406, 419, 422, 480, 481, 488, 494], "suffix": [25, 63, 67, 83, 92, 99, 114, 121, 123, 189, 214, 259, 262, 264, 265, 274, 282, 283, 284, 291, 308, 311, 334, 345, 351, 360, 375, 410, 437, 445, 446, 464, 465, 471, 476, 477, 479, 488, 489, 490, 495], "ieee": [25, 167, 199, 277, 290, 309, 363, 377, 445, 459, 481, 483, 486, 488, 489, 493, 494], "754": [25, 167, 199, 277, 290, 363, 377, 445, 459, 481, 483, 486, 488, 489, 493, 494], "binary16": [25, 363], "half": [25, 104, 114, 145, 188, 190, 196, 235, 240, 290, 310, 333, 343, 360, 363, 450, 459, 484, 487, 493], "binary32": [25, 363], "binary64": [25, 363, 459], "inf": [25, 132, 167, 199, 239, 277, 290, 360, 361, 368, 483, 484, 488, 489, 492, 493], "nan": [25, 67, 97, 132, 167, 199, 239, 290, 300, 359, 360, 361, 368, 445, 457, 481, 483, 484, 487, 488, 489, 490, 492, 493], "thing": [25, 33, 35, 62, 67, 71, 80, 84, 85, 87, 88, 89, 90, 95, 96, 97, 98, 104, 106, 107, 111, 113, 114, 117, 119, 120, 121, 131, 136, 145, 152, 170, 172, 180, 182, 189, 194, 207, 214, 220, 225, 229, 237, 239, 241, 258, 265, 273, 282, 283, 290, 298, 307, 314, 334, 349, 357, 362, 368, 373, 380, 382, 384, 389, 391, 399, 401, 402, 403, 404, 405, 408, 410, 414, 415, 418, 445, 446, 449, 454, 455, 456, 457, 459, 464, 465, 469, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 490, 491, 495], "larger": [25, 35, 42, 55, 67, 78, 88, 97, 104, 105, 113, 128, 145, 152, 164, 167, 189, 190, 196, 197, 199, 229, 239, 249, 250, 273, 274, 290, 293, 299, 308, 321, 333, 334, 337, 356, 357, 359, 360, 361, 377, 380, 382, 437, 439, 443, 445, 450, 454, 456, 457, 458, 459, 466, 469, 476, 477, 479, 480, 482, 484, 485, 488, 489, 492, 493, 494, 495, 496], "smaller": [25, 42, 63, 104, 105, 116, 117, 145, 189, 196, 199, 203, 204, 240, 250, 274, 285, 290, 308, 314, 323, 331, 333, 359, 361, 363, 370, 384, 391, 397, 399, 409, 426, 439, 443, 445, 450, 457, 459, 465, 470, 478, 480, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 493, 495], "partli": [25, 249, 274, 489, 493, 494], "accident": [25, 33, 90, 114, 199, 203, 207, 227, 401, 451, 458, 465, 478, 480, 483, 492], "ala": [25, 98], "le": [25, 107, 119, 171, 214, 306, 478, 486, 490], "expon": [25, 101, 199, 239, 290, 333, 360, 361, 363, 368, 393, 450, 481, 483, 490, 495], "py_big_endian": 25, "ok": [25, 85, 92, 120, 190, 202, 207, 237, 255, 256, 257, 259, 262, 304, 307, 350, 351, 357, 388, 390, 401, 403, 422, 455, 456, 481, 488, 489], "infin": [25, 116, 167, 199, 239, 277, 290, 333, 360, 361, 368, 481, 483, 489], "pyfloat_pack2": [25, 488], "pyfloat_pack4": [25, 488], "pyfloat_pack8": [25, 488], "refus": [25, 35, 117, 226, 227, 287, 303, 345, 351, 353, 357, 373, 437, 487], "pyfloat_unpack2": [25, 488], "pyfloat_unpack4": [25, 488], "pyfloat_unpack8": [25, 488], "pyeval_getfram": [26, 33, 52, 56], "pythreadstate_getfram": [26, 33, 52, 56, 488, 496], "reflect": [26, 32, 64, 67, 71, 97, 99, 101, 110, 114, 128, 131, 133, 173, 181, 188, 190, 196, 207, 224, 229, 239, 240, 261, 265, 270, 299, 307, 308, 323, 335, 353, 357, 360, 363, 368, 384, 399, 400, 401, 416, 420, 426, 436, 442, 443, 470, 483, 488, 489, 490, 492, 495, 496], "pyframe_typ": [26, 488], "frametyp": [26, 400], "frameobject": [26, 487, 488], "pyframe_check": [26, 488], "pyframe_getback": [26, 488, 496], "pyframe_getbuiltin": [26, 488], "f_builtin": [26, 270, 443, 488], "pyframe_getcod": [26, 56, 488, 496], "pyframe_getgener": [26, 488], "pyframe_getglob": [26, 488], "f_global": [26, 270, 443, 488], "pyframe_getlasti": [26, 488], "f_lasti": [26, 204, 270, 443, 480, 487, 488], "pyframe_getloc": [26, 488], "f_local": [26, 270, 400, 443, 488], "pyfunctionobject": 27, "pyfunction_typ": 27, "functiontyp": [27, 133, 400, 487], "pyfunction_check": 27, "pyfunction_new": 27, "annot": [27, 67, 90, 97, 99, 109, 124, 133, 194, 200, 204, 240, 262, 269, 270, 281, 315, 367, 377, 395, 417, 422, 441, 442, 443, 445, 446, 460, 485, 487, 488, 489, 490, 492, 495, 496], "closur": [27, 57, 65, 88, 138, 182, 183, 204, 239, 265, 270, 307, 360, 443, 488, 490, 493], "co_qualnam": [27, 270, 443], "pyfunction_newwithqualnam": 27, "pyfunction_getcod": 27, "pyfunction_getglob": 27, "pyfunction_getmodul": 27, "pyfunction_getdefault": 27, "pyfunction_setdefault": 27, "pyfunction_getclosur": 27, "pyfunction_setclosur": 27, "pyfunction_getannot": 27, "pyfunction_setannot": 27, "circular": [28, 33, 35, 85, 88, 90, 97, 264, 277, 399, 405, 443, 478, 492, 494], "atom": [28, 67, 96, 241, 298, 308, 331, 334, 353, 360, 380, 381, 446, 448, 484, 485, 488, 490], "tp_flag": [28, 60, 62, 87, 88, 112, 204, 483, 496], "py_tpflags_have_gc": [28, 60, 62, 88, 112, 479, 488], "tp_travers": [28, 60, 62, 67, 87, 88, 241, 488, 496], "tp_clear": [28, 45, 62, 87, 88, 112], "conform": [28, 56, 62, 67, 106, 113, 138, 159, 164, 180, 196, 199, 215, 217, 222, 223, 225, 239, 256, 259, 261, 264, 265, 267, 271, 281, 282, 288, 311, 314, 329, 368, 401, 409, 426, 428, 434, 440, 443, 471, 481, 485, 486, 487, 490, 491, 493, 494, 495, 496], "pyobject_gc_new": [28, 62, 112, 479, 495], "pyobject_gc_newvar": [28, 62, 112, 479, 495], "pyobject_gc_track": [28, 56, 479], "pyobject_gc_untrack": [28, 56, 62, 87, 88, 112, 479, 488], "pyobject_gc_del": [28, 56, 62, 112, 479, 495], "pytype_readi": [28, 45, 56, 60, 62, 87, 88, 112, 488], "indirectli": [28, 57, 63, 71, 76, 97, 105, 184, 189, 227, 265, 308, 329, 368, 417, 443, 444, 445, 447, 457, 458, 485, 491, 494, 495], "pytype_fromspecwithbas": [28, 56, 60, 62, 487], "pytype_fromspec": [28, 45, 56, 57, 60, 62, 88, 112, 495, 496], "popul": [28, 35, 45, 67, 71, 113, 114, 125, 131, 133, 196, 204, 221, 250, 265, 282, 299, 314, 333, 339, 359, 360, 400, 415, 422, 426, 428, 443, 447, 476, 480, 487, 488, 493], "child": [28, 33, 58, 97, 100, 113, 114, 131, 133, 142, 143, 144, 145, 149, 173, 226, 227, 241, 262, 268, 293, 298, 308, 311, 324, 329, 337, 343, 348, 353, 354, 364, 375, 384, 391, 404, 405, 425, 426, 428, 437, 443, 477, 481, 482, 483, 484, 489, 490, 491, 493, 494, 495, 496], "analog": [28, 38, 63, 71, 72, 87, 97, 108, 114, 199, 270, 282, 283, 290, 298, 314, 379, 399, 443, 445, 463, 479, 481, 482, 484, 489, 495], "pyobject_gc_res": 28, "becom": [28, 33, 34, 35, 62, 63, 65, 71, 85, 90, 92, 96, 97, 98, 99, 104, 105, 106, 107, 110, 112, 114, 116, 117, 118, 119, 123, 124, 125, 138, 144, 145, 150, 151, 152, 154, 171, 173, 188, 190, 207, 210, 216, 219, 225, 239, 246, 250, 261, 270, 273, 276, 298, 307, 308, 309, 312, 314, 323, 326, 333, 334, 343, 344, 346, 347, 348, 357, 360, 361, 364, 368, 373, 380, 384, 391, 399, 401, 404, 405, 410, 417, 437, 442, 443, 444, 445, 451, 456, 459, 461, 465, 467, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "pyobject_is_gc": [28, 62, 87, 496], "pyobject_gc_istrack": [28, 56, 496], "gc": [28, 45, 60, 62, 67, 85, 88, 90, 97, 99, 110, 112, 155, 269, 270, 330, 368, 377, 382, 397, 417, 426, 443, 467, 471, 477, 480, 482, 484, 489], "is_track": [28, 241, 484], "pyobject_gc_isfin": [28, 56, 496], "is_fin": [28, 33, 241, 368, 465, 492, 495, 496], "again": [28, 33, 45, 62, 71, 72, 75, 80, 81, 85, 87, 88, 90, 95, 96, 97, 98, 99, 104, 106, 107, 108, 114, 116, 117, 118, 119, 120, 122, 133, 145, 148, 150, 159, 160, 164, 173, 180, 183, 189, 190, 196, 201, 214, 226, 228, 235, 240, 246, 257, 261, 264, 276, 282, 284, 290, 293, 297, 298, 307, 308, 310, 312, 314, 323, 328, 343, 346, 348, 351, 356, 357, 360, 364, 368, 377, 380, 384, 390, 391, 399, 402, 404, 405, 410, 415, 424, 428, 429, 439, 443, 445, 447, 450, 451, 455, 456, 458, 459, 461, 462, 464, 465, 469, 476, 477, 479, 480, 483, 485, 487, 489, 490, 494, 495], "_pyobject_gc_track": [28, 495], "_pyobject_gc_untrack": [28, 495], "visitproc": [28, 56, 62, 88, 112, 496], "visitor": [28, 133], "travers": [28, 31, 45, 51, 62, 88, 99, 107, 112, 123, 133, 176, 197, 210, 219, 227, 267, 268, 282, 308, 317, 360, 391, 403, 404, 422, 427, 428, 437, 447, 451, 477, 479, 480, 482, 483, 484, 488, 492, 495, 496], "traverseproc": [28, 45, 56, 62, 87, 88], "visit": [28, 62, 88, 98, 99, 107, 112, 133, 196, 241, 308, 328, 347, 358, 430, 476, 477, 479, 480, 483, 490, 496], "simplifi": [28, 33, 42, 65, 86, 90, 98, 99, 105, 107, 116, 120, 134, 136, 140, 147, 171, 173, 182, 196, 211, 215, 230, 240, 265, 270, 298, 334, 353, 354, 359, 390, 391, 393, 401, 417, 425, 442, 450, 466, 467, 476, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "py_visit": [28, 62, 88, 112, 496], "my_travers": [28, 112], "noddi": 28, "foo": [28, 71, 74, 75, 78, 80, 90, 91, 97, 98, 99, 100, 101, 106, 113, 114, 116, 120, 121, 127, 131, 133, 164, 168, 180, 189, 207, 210, 214, 242, 257, 261, 264, 265, 270, 277, 281, 282, 283, 287, 298, 303, 306, 307, 308, 309, 311, 314, 317, 319, 323, 326, 334, 349, 356, 360, 373, 377, 401, 403, 404, 405, 420, 422, 426, 427, 428, 437, 438, 442, 445, 447, 450, 451, 456, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495], "inquiri": [28, 45, 56, 62, 87, 88, 273, 403], "drop": [28, 62, 67, 71, 88, 96, 97, 99, 105, 106, 113, 119, 124, 145, 146, 173, 207, 225, 226, 239, 264, 265, 269, 276, 284, 298, 320, 331, 336, 340, 357, 360, 364, 368, 379, 383, 384, 391, 403, 409, 477, 478, 479, 481, 482, 483, 485, 489, 491, 492], "pygc_collect": [28, 56, 496], "uncondition": [28, 126, 261, 265, 298, 299, 303, 308, 311, 349, 403, 443, 453, 458, 470, 484, 485, 489, 490, 491, 492, 494, 496], "unreach": [28, 35, 226, 241, 401, 443, 494, 496], "pygc_en": [28, 56, 487], "pygc_dis": [28, 56, 487], "pygc_isen": [28, 56, 487], "queri": [28, 32, 67, 75, 96, 107, 114, 116, 119, 129, 145, 148, 164, 171, 182, 219, 233, 244, 259, 265, 266, 270, 296, 311, 313, 318, 320, 343, 373, 377, 384, 390, 391, 401, 409, 410, 420, 422, 425, 434, 447, 470, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "isen": [28, 241], "pygen_new": 29, "pygen_newwithqualnam": 29, "pygenobject": 29, "pygen_typ": 29, "pygen_check": 29, "pygen_checkexact": 29, "tp_hash": [30, 49, 62, 87, 483], "py_hash_t": [30, 49, 62, 87, 489], "py_uhash_t": 30, "pyhash_funcdef": 30, "pyhash_getfuncdef": 30, "hash_bit": [30, 368], "seed_bit": [30, 368], "seed": [30, 33, 34, 90, 99, 308, 333, 357, 359, 368, 441, 470, 484, 489, 496], "456": [30, 67, 85, 114, 199], "secur": [30, 67, 77, 97, 114, 121, 129, 138, 177, 187, 189, 237, 251, 256, 257, 258, 262, 269, 271, 284, 285, 287, 289, 298, 300, 301, 303, 308, 314, 320, 329, 333, 346, 349, 351, 353, 360, 368, 373, 375, 410, 420, 422, 424, 426, 427, 428, 429, 434, 435, 439, 473, 477, 478, 479, 480, 482, 483, 488, 489, 490, 492, 493, 498], "interchang": [30, 67, 114, 128, 156, 166, 181, 196, 197, 199, 227, 249, 277, 282, 352, 360, 363, 384, 401, 405, 443, 450, 461, 466, 477, 483, 489, 490], "algorithm": [30, 33, 42, 67, 90, 96, 97, 99, 116, 118, 119, 130, 138, 145, 154, 156, 159, 162, 164, 171, 173, 186, 187, 195, 196, 199, 203, 207, 216, 222, 236, 239, 244, 251, 262, 269, 273, 274, 281, 284, 290, 292, 295, 296, 317, 323, 325, 333, 342, 353, 357, 359, 360, 368, 375, 379, 382, 405, 410, 422, 437, 438, 439, 441, 445, 455, 471, 477, 479, 480, 482, 484, 486, 487, 488, 489, 490, 493, 494, 495, 496], "pyimport_importmodul": [31, 56, 85, 91, 478, 483, 485, 487], "pyimport_import": [31, 56, 84, 483], "pyimport_importmodulenoblock": [31, 56, 483, 485, 490], "switch": [31, 33, 35, 63, 67, 87, 96, 112, 117, 119, 120, 121, 122, 123, 140, 145, 149, 171, 207, 224, 239, 244, 250, 257, 259, 261, 307, 320, 334, 337, 339, 360, 361, 368, 373, 399, 404, 427, 447, 456, 465, 470, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 494, 495, 496], "behaviour": [31, 33, 35, 49, 62, 67, 80, 81, 96, 97, 99, 101, 107, 113, 114, 116, 121, 138, 179, 182, 202, 206, 227, 229, 231, 251, 257, 270, 273, 282, 283, 284, 298, 307, 308, 311, 314, 326, 333, 334, 335, 343, 346, 348, 350, 353, 354, 356, 359, 360, 364, 368, 379, 399, 404, 405, 409, 410, 415, 428, 431, 434, 436, 443, 445, 447, 461, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 490, 491, 493, 494], "pyimport_importmoduleex": [31, 490], "fromlist": [31, 132, 204, 239, 264, 265], "__import__": [31, 204, 239, 264, 265, 283, 314, 443, 447, 465, 483, 486, 490, 493, 496], "submodul": [31, 62, 67, 99, 127, 171, 197, 207, 239, 252, 264, 265, 317, 339, 357, 395, 401, 424, 437, 451, 465, 470, 482, 485, 486, 487, 491, 494], "incomplet": [31, 63, 67, 90, 129, 159, 170, 171, 193, 196, 239, 254, 261, 264, 276, 283, 329, 343, 373, 437, 439, 441, 467, 480, 481, 484, 485, 490, 491], "pyimport_importmodulelevelobject": [31, 56], "pyimport_importmodulelevel": [31, 56, 490], "higher": [31, 33, 55, 67, 96, 107, 110, 113, 114, 117, 126, 138, 152, 153, 159, 179, 182, 190, 199, 204, 216, 218, 237, 238, 244, 256, 269, 273, 276, 282, 283, 284, 285, 294, 296, 297, 298, 303, 308, 314, 320, 324, 340, 347, 353, 356, 357, 360, 368, 373, 374, 380, 382, 397, 401, 403, 404, 410, 428, 439, 464, 466, 478, 479, 482, 483, 487, 488, 489, 490, 491, 494], "absolut": [31, 33, 34, 35, 47, 62, 67, 80, 84, 88, 90, 96, 98, 113, 118, 121, 124, 133, 138, 151, 154, 157, 163, 164, 166, 167, 168, 199, 204, 207, 227, 239, 244, 245, 256, 265, 266, 272, 273, 283, 284, 285, 290, 293, 306, 307, 308, 309, 311, 318, 339, 346, 347, 351, 356, 360, 361, 368, 369, 373, 375, 381, 384, 387, 397, 399, 409, 414, 420, 430, 437, 439, 440, 445, 447, 451, 455, 461, 465, 470, 471, 476, 477, 481, 483, 484, 485, 488, 489, 490, 491, 492, 494, 496, 498], "__builtins__": [31, 108, 161, 239, 270, 444, 465, 485, 487], "instal": [31, 33, 34, 35, 42, 56, 67, 72, 74, 75, 76, 77, 78, 81, 83, 84, 88, 91, 92, 93, 94, 96, 97, 98, 99, 101, 104, 108, 110, 114, 120, 123, 125, 144, 147, 157, 176, 187, 197, 201, 205, 226, 228, 244, 249, 261, 265, 266, 269, 272, 276, 282, 284, 291, 292, 326, 330, 335, 348, 349, 356, 357, 360, 364, 366, 368, 369, 376, 384, 390, 397, 399, 403, 410, 414, 415, 420, 422, 436, 441, 447, 453, 463, 465, 468, 469, 470, 473, 478, 479, 480, 482, 483, 484, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498], "environ": [31, 33, 34, 35, 42, 62, 63, 65, 67, 71, 72, 80, 92, 93, 96, 97, 98, 99, 105, 113, 114, 119, 120, 121, 122, 129, 137, 138, 164, 171, 173, 176, 189, 190, 195, 199, 201, 205, 224, 228, 236, 239, 242, 243, 244, 249, 251, 259, 261, 264, 266, 269, 271, 273, 281, 283, 295, 307, 309, 310, 312, 314, 321, 323, 324, 326, 328, 330, 339, 340, 342, 347, 353, 354, 357, 360, 364, 368, 370, 373, 375, 377, 381, 384, 395, 397, 403, 404, 410, 415, 418, 420, 425, 435, 443, 444, 447, 452, 453, 456, 460, 462, 465, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 491, 494, 495, 496, 498], "pyimport_reloadmodul": [31, 56], "m": [31, 34, 42, 53, 57, 62, 67, 85, 88, 97, 104, 105, 107, 110, 113, 114, 116, 117, 119, 121, 122, 125, 133, 135, 163, 167, 171, 173, 176, 180, 189, 190, 196, 203, 204, 207, 224, 239, 249, 251, 259, 261, 262, 264, 266, 269, 276, 277, 282, 283, 284, 290, 298, 303, 307, 308, 312, 314, 315, 319, 320, 323, 328, 333, 334, 336, 339, 347, 349, 357, 359, 360, 361, 364, 368, 369, 370, 373, 377, 381, 382, 384, 390, 393, 395, 399, 403, 404, 405, 410, 414, 418, 434, 435, 436, 437, 441, 443, 444, 445, 447, 451, 455, 456, 457, 463, 466, 467, 468, 470, 471, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "reload": [31, 97, 106, 123, 257, 261, 264, 265, 368, 377, 397, 447, 465, 480, 485, 491, 494], "pyimport_addmoduleobject": [31, 56], "pyimport_addmodul": [31, 56, 85], "pyimport_execcodemodul": [31, 56], "danger": [31, 35, 58, 97, 298, 307, 308, 357, 373, 404, 449, 478, 481, 482, 487, 488, 495, 496], "unknown": [31, 33, 63, 67, 100, 106, 116, 133, 151, 154, 203, 207, 210, 213, 215, 216, 222, 225, 239, 249, 259, 291, 303, 307, 308, 319, 322, 334, 352, 358, 359, 368, 373, 380, 381, 397, 410, 413, 431, 456, 465, 471, 479, 480, 484, 488, 489, 493, 494], "probabl": [31, 33, 35, 55, 71, 72, 74, 75, 78, 80, 85, 87, 90, 91, 92, 93, 97, 101, 104, 111, 114, 116, 117, 121, 152, 156, 171, 172, 189, 196, 207, 214, 227, 244, 250, 298, 308, 312, 315, 318, 323, 333, 351, 353, 354, 356, 357, 359, 368, 370, 382, 399, 404, 410, 413, 420, 421, 422, 430, 449, 455, 458, 469, 471, 477, 478, 479, 480, 482, 483, 485, 487, 488, 489, 490], "damag": [31, 314, 373, 401, 441], "author": [31, 71, 72, 75, 77, 80, 83, 85, 89, 99, 100, 101, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 138, 171, 173, 206, 207, 227, 249, 266, 284, 304, 308, 322, 356, 357, 403, 410, 422, 434, 441, 465, 468, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492], "__spec__": [31, 67, 265, 267, 339, 400, 465, 487, 491, 493, 494], "__loader__": [31, 45, 239, 264, 265, 280, 339, 400, 447, 465, 487, 490, 491, 494], "spec": [31, 45, 60, 67, 72, 74, 99, 118, 225, 250, 253, 258, 265, 270, 277, 339, 357, 361, 365, 368, 391, 404, 405, 409, 434, 438, 480, 491, 492, 493, 494, 495, 496], "loader": [31, 67, 99, 182, 189, 207, 264, 265, 266, 267, 268, 280, 317, 377, 397, 400, 403, 428, 436, 438, 480, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496], "sourcefileload": [31, 265, 490, 493], "__file__": [31, 45, 101, 108, 114, 125, 201, 207, 239, 249, 265, 270, 280, 317, 338, 339, 377, 397, 403, 438, 443, 447, 471, 480, 491, 493, 494, 496], "co_filenam": [31, 270, 396, 443, 484], "applic": [31, 32, 33, 34, 35, 62, 63, 67, 71, 85, 87, 89, 90, 92, 95, 97, 99, 101, 107, 112, 113, 116, 117, 119, 120, 121, 122, 125, 131, 133, 137, 138, 145, 149, 151, 152, 153, 156, 158, 161, 164, 170, 180, 182, 188, 190, 196, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 222, 227, 228, 239, 240, 241, 249, 250, 256, 260, 269, 272, 273, 277, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 296, 297, 298, 299, 306, 307, 308, 309, 311, 314, 320, 323, 329, 334, 340, 341, 346, 347, 348, 353, 356, 357, 359, 360, 362, 364, 369, 373, 375, 377, 379, 380, 381, 383, 384, 386, 387, 388, 390, 391, 397, 399, 402, 403, 409, 410, 414, 415, 417, 420, 422, 424, 425, 426, 428, 429, 430, 431, 432, 437, 438, 439, 440, 441, 442, 445, 449, 451, 454, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 470, 473, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 498], "__cached__": [31, 108, 239, 265, 339, 447, 487, 489, 491], "pyimport_execcodemoduleex": [31, 56], "pyimport_execcodemodulewithpathnam": [31, 56], "pathnam": [31, 67, 71, 80, 90, 96, 155, 164, 189, 233, 234, 237, 239, 264, 269, 282, 284, 294, 296, 308, 311, 321, 346, 358, 368, 373, 375, 384, 390, 410, 412, 437, 438, 443, 447, 470, 488, 489, 492], "pyimport_execcodemoduleobject": [31, 56], "cpathnam": 31, "Of": [31, 67, 72, 85, 88, 90, 98, 106, 114, 117, 121, 133, 189, 207, 214, 216, 226, 272, 283, 298, 307, 323, 346, 354, 384, 405, 414, 425, 426, 455, 464, 498], "figur": [31, 71, 75, 85, 88, 92, 95, 101, 104, 106, 107, 116, 119, 131, 199, 207, 307, 323, 353, 373, 477, 478, 479, 480, 481, 482, 483, 484, 488, 490], "imp": [31, 67, 269, 366, 368, 447, 485, 487, 488, 489, 490, 491, 493], "source_from_cach": [31, 264, 265, 489, 491, 493], "pyimport_getmagicnumb": [31, 56, 490], "magic": [31, 67, 71, 97, 99, 101, 126, 180, 189, 200, 207, 214, 244, 264, 265, 323, 357, 365, 377, 380, 381, 401, 405, 437, 440, 441, 464, 477, 478, 480, 488, 491, 492, 493, 494], "pyc": [31, 33, 34, 67, 77, 78, 98, 99, 176, 264, 265, 289, 296, 314, 326, 347, 360, 368, 377, 397, 437, 438, 443, 447, 465, 470, 476, 478, 480, 481, 483, 484, 488, 491, 492, 496, 498], "four": [31, 57, 63, 90, 92, 100, 101, 104, 105, 106, 116, 119, 131, 144, 171, 190, 203, 204, 221, 225, 237, 253, 256, 261, 270, 273, 274, 282, 283, 286, 293, 296, 307, 329, 333, 349, 353, 354, 356, 360, 361, 363, 365, 384, 391, 399, 404, 450, 456, 467, 476, 483, 486, 489, 496], "pyimport_getmagictag": [31, 56], "tag": [31, 56, 60, 62, 67, 71, 87, 110, 116, 133, 164, 203, 254, 262, 264, 265, 284, 293, 308, 314, 329, 362, 368, 371, 383, 410, 425, 428, 432, 434, 465, 476, 477, 482, 484, 488, 491, 492, 495, 498], "3147": [31, 67, 71, 97, 176, 264, 265, 326, 339, 377, 447, 465, 490, 498], "keep": [31, 33, 35, 39, 62, 67, 80, 85, 90, 92, 97, 99, 101, 106, 112, 114, 116, 119, 121, 131, 133, 140, 151, 152, 157, 160, 164, 171, 173, 182, 184, 189, 190, 192, 194, 199, 204, 207, 210, 225, 228, 240, 241, 248, 250, 257, 261, 267, 270, 273, 276, 282, 286, 293, 307, 308, 314, 320, 322, 334, 354, 360, 364, 368, 377, 384, 403, 404, 410, 417, 422, 425, 430, 442, 443, 447, 451, 455, 456, 459, 465, 466, 467, 468, 478, 480, 481, 482, 483, 484, 489, 491, 494], "mind": [31, 80, 97, 104, 112, 114, 116, 131, 133, 160, 189, 199, 214, 267, 284, 298, 307, 359, 401, 410, 428, 447, 459, 479, 481, 489], "cache_tag": [31, 264, 265, 368, 490], "authorit": [31, 120, 439], "pyimport_getmoduledict": [31, 56], "administr": [31, 33, 58, 74, 78, 80, 92, 95, 113, 121, 164, 168, 262, 302, 303, 308, 349, 353, 381, 422, 444, 453, 463, 476, 481, 490, 495, 496], "pyimport_getmodul": [31, 56, 494], "pyimport_getimport": [31, 56], "finder": [31, 67, 99, 207, 265, 266, 285, 294, 317, 368, 448, 474, 476, 481, 483, 487, 490, 491], "pkg": [31, 71, 74, 75, 80, 265, 317, 436, 451, 470, 471, 475, 477, 478, 482, 484, 487, 488, 495], "__path__": [31, 67, 99, 264, 265, 317, 327, 368, 465, 491, 493, 494], "fetch": [31, 67, 96, 105, 107, 109, 125, 146, 180, 188, 222, 262, 272, 276, 296, 298, 299, 306, 308, 314, 322, 330, 331, 348, 353, 356, 357, 404, 405, 410, 411, 429, 434, 467, 481, 488, 489, 490], "path_importer_cach": [31, 264, 265, 317, 368, 447, 465, 480, 488, 490, 491, 492, 494], "path_hook": [31, 99, 155, 265, 317, 368, 447, 451, 465, 480, 490, 491], "until": [31, 33, 34, 35, 58, 62, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 88, 91, 96, 97, 99, 100, 104, 107, 113, 114, 116, 117, 121, 126, 131, 133, 138, 141, 142, 145, 146, 148, 149, 150, 151, 152, 156, 164, 166, 173, 179, 190, 196, 199, 221, 225, 228, 232, 237, 239, 240, 244, 246, 249, 250, 254, 256, 257, 261, 264, 265, 273, 276, 280, 282, 284, 285, 298, 307, 308, 310, 312, 314, 320, 323, 329, 331, 335, 338, 340, 343, 344, 346, 348, 350, 353, 354, 355, 356, 357, 360, 363, 364, 374, 375, 376, 377, 380, 382, 384, 396, 399, 401, 404, 410, 415, 417, 418, 420, 422, 423, 427, 430, 431, 439, 442, 443, 451, 455, 456, 457, 458, 467, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 496], "pyimport_importfrozenmoduleobject": [31, 56], "misnom": 31, "pyimport_importfrozenmodul": [31, 56], "_frozen": [31, 189, 488], "freez": [31, 97, 179, 240, 241, 261, 303, 468, 494], "tool": [31, 33, 35, 56, 67, 71, 72, 77, 79, 84, 90, 91, 92, 93, 95, 98, 99, 104, 105, 107, 110, 111, 113, 114, 116, 119, 121, 122, 123, 124, 125, 129, 133, 149, 168, 169, 173, 177, 182, 189, 190, 203, 206, 207, 208, 218, 233, 237, 239, 240, 244, 245, 266, 269, 270, 271, 276, 277, 279, 306, 314, 322, 333, 336, 346, 348, 359, 368, 383, 393, 395, 397, 399, 401, 403, 414, 428, 436, 437, 443, 451, 455, 459, 460, 466, 468, 471, 472, 474, 476, 477, 478, 479, 480, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 496], "is_packag": [31, 265, 438, 488], "pyimport_frozenmodul": [31, 34, 189], "record": [31, 60, 67, 87, 90, 104, 105, 106, 107, 113, 114, 118, 119, 121, 124, 133, 160, 168, 173, 176, 188, 189, 190, 191, 197, 198, 199, 211, 217, 226, 250, 266, 270, 274, 282, 284, 286, 294, 306, 307, 308, 310, 314, 323, 324, 356, 358, 360, 363, 377, 399, 400, 401, 403, 404, 405, 415, 437, 447, 455, 460, 477, 480, 481, 482, 483, 484, 489, 490, 491, 492, 495], "plai": [31, 35, 67, 88, 99, 101, 108, 117, 189, 199, 269, 310, 333, 357, 399, 403, 419, 443, 454, 455, 485], "trick": [31, 90, 97, 189, 239, 312, 356, 368, 401, 405, 455, 479], "collect": [31, 32, 42, 45, 50, 51, 62, 63, 66, 67, 71, 75, 78, 85, 86, 87, 96, 97, 99, 104, 107, 109, 110, 113, 114, 116, 117, 123, 125, 127, 131, 133, 134, 137, 145, 151, 152, 160, 164, 171, 179, 180, 182, 183, 184, 189, 192, 194, 195, 197, 200, 206, 207, 208, 227, 228, 239, 240, 241, 255, 256, 257, 266, 269, 270, 272, 276, 279, 298, 308, 314, 320, 323, 329, 331, 345, 347, 348, 353, 354, 356, 357, 359, 360, 363, 368, 374, 375, 377, 382, 391, 397, 399, 400, 403, 407, 410, 416, 417, 420, 426, 428, 433, 442, 443, 445, 451, 454, 456, 457, 458, 465, 467, 468, 469, 471, 476, 479, 480, 481, 482, 483, 485, 486, 488, 498], "pyimport_appendinittab": [31, 33, 34, 45, 56, 84, 85], "initfunc": 31, "pyimport_extendinittab": [31, 33, 34], "_inittab": 31, "emb": [31, 32, 33, 34, 35, 65, 67, 84, 86, 97, 176, 207, 260, 265, 382, 384, 424, 428, 479, 483, 484, 494, 495], "conjunct": [31, 181, 203, 205, 207, 239, 264, 270, 346, 353, 357, 394, 401, 446, 450, 486, 487, 491], "newtab": 31, "sentinel": [31, 37, 57, 67, 85, 87, 88, 97, 114, 194, 200, 239, 276, 284, 298, 405, 479, 490, 494], "fault": [31, 67, 71, 113, 189, 197, 198, 271, 307, 312, 337, 348, 381, 396, 482, 484, 490], "insuffici": [31, 174, 199, 207, 226, 267, 298, 308, 404, 493], "companion": [32, 152, 480], "principl": [32, 35, 85, 97, 99, 199, 403, 404, 422, 457, 474, 490], "introduct": [32, 67, 77, 86, 88, 101, 104, 109, 122, 124, 125, 131, 145, 177, 198, 207, 236, 269, 274, 295, 333, 353, 357, 382, 401, 405, 448, 460, 463, 474, 481, 491, 493, 498], "consider": [32, 35, 67, 85, 90, 97, 112, 113, 129, 138, 177, 190, 194, 207, 227, 237, 256, 262, 269, 271, 277, 286, 300, 303, 320, 330, 351, 356, 410, 425, 448, 454, 477, 480, 481, 482, 484, 487, 490, 494], "high": [32, 38, 59, 63, 67, 85, 86, 90, 91, 92, 95, 96, 98, 108, 113, 114, 117, 120, 129, 138, 141, 142, 145, 147, 148, 149, 151, 152, 160, 162, 177, 179, 190, 196, 199, 204, 208, 215, 233, 245, 255, 269, 274, 275, 276, 281, 285, 298, 304, 308, 309, 310, 314, 323, 333, 343, 348, 353, 357, 359, 368, 371, 373, 375, 381, 414, 418, 448, 451, 454, 459, 460, 466, 467, 479, 481, 482, 483, 487, 488, 489, 490, 491, 492, 494, 496], "print": [32, 33, 34, 35, 42, 49, 58, 62, 67, 71, 80, 84, 85, 87, 88, 90, 96, 97, 98, 99, 100, 101, 106, 107, 110, 111, 112, 113, 114, 116, 119, 120, 121, 123, 124, 125, 126, 129, 133, 135, 137, 138, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 163, 164, 168, 170, 172, 173, 176, 179, 180, 181, 182, 183, 185, 188, 189, 190, 194, 196, 197, 199, 201, 203, 204, 207, 210, 214, 215, 218, 219, 225, 227, 228, 230, 234, 237, 239, 240, 241, 242, 243, 244, 246, 249, 254, 256, 258, 259, 261, 262, 265, 266, 269, 270, 272, 273, 277, 282, 284, 286, 293, 294, 297, 298, 303, 308, 312, 314, 315, 316, 319, 320, 322, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340, 344, 346, 348, 349, 350, 351, 353, 354, 356, 357, 358, 360, 361, 364, 368, 370, 372, 373, 374, 375, 377, 379, 380, 382, 384, 390, 391, 393, 395, 397, 399, 401, 403, 404, 410, 412, 414, 415, 417, 420, 422, 423, 426, 427, 428, 431, 432, 434, 435, 436, 437, 440, 442, 443, 444, 445, 450, 451, 453, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 470, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "warn": [32, 33, 34, 35, 51, 57, 58, 67, 71, 75, 80, 88, 90, 97, 99, 108, 110, 113, 114, 117, 123, 129, 137, 138, 141, 151, 194, 195, 200, 201, 243, 265, 269, 273, 283, 284, 287, 298, 323, 326, 330, 334, 348, 355, 356, 357, 364, 368, 373, 384, 388, 399, 401, 403, 412, 422, 429, 430, 431, 443, 444, 447, 450, 456, 465, 466, 467, 470, 471, 477, 479, 480, 481, 482, 483, 485, 486, 487, 489, 491, 492, 495, 496, 498], "signal": [32, 33, 34, 49, 58, 62, 67, 104, 107, 112, 114, 116, 126, 135, 137, 142, 144, 145, 147, 149, 153, 154, 155, 179, 189, 190, 198, 200, 201, 207, 227, 239, 256, 269, 272, 273, 275, 276, 282, 283, 290, 298, 305, 307, 308, 312, 314, 324, 334, 337, 343, 344, 346, 353, 356, 357, 361, 364, 368, 377, 380, 381, 386, 396, 401, 410, 428, 430, 434, 445, 447, 458, 470, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 493, 495], "categori": [32, 67, 71, 78, 80, 96, 99, 113, 116, 119, 145, 227, 239, 273, 281, 284, 306, 330, 334, 356, 360, 377, 402, 409, 450, 470, 477, 478, 482, 483, 485, 489, 494], "marshal": [32, 64, 67, 97, 134, 155, 171, 269, 277, 284, 313, 394, 434, 480, 481, 484, 492], "pars": [32, 34, 35, 58, 63, 64, 65, 67, 71, 75, 85, 90, 91, 92, 96, 97, 99, 101, 111, 114, 116, 120, 121, 123, 125, 129, 133, 134, 145, 148, 164, 168, 170, 172, 180, 188, 196, 207, 208, 210, 213, 214, 215, 217, 219, 220, 222, 223, 231, 236, 239, 242, 244, 252, 254, 256, 257, 258, 259, 262, 265, 269, 271, 274, 277, 279, 283, 284, 286, 288, 291, 300, 301, 308, 323, 356, 360, 361, 364, 370, 381, 393, 397, 407, 410, 411, 414, 415, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 445, 446, 450, 451, 452, 458, 461, 465, 466, 469, 470, 477, 478, 479, 480, 481, 482, 483, 488, 490, 491, 492, 493, 498], "pyhash": [32, 64, 67, 441, 471], "abstract": [32, 38, 54, 62, 67, 77, 86, 88, 90, 91, 96, 97, 99, 103, 118, 134, 138, 142, 144, 145, 179, 182, 189, 195, 196, 199, 222, 227, 233, 235, 240, 258, 266, 269, 270, 273, 279, 284, 295, 305, 306, 308, 316, 330, 344, 353, 357, 360, 368, 375, 401, 410, 422, 440, 443, 445, 455, 456, 480, 482, 484, 485, 487, 489, 490, 492, 493, 494, 496, 498], "fundament": [32, 33, 35, 62, 67, 78, 90, 92, 99, 117, 129, 208, 274, 298, 307, 314, 322, 323, 333, 356, 400, 417, 447, 476, 477, 483, 493], "configur": [32, 35, 42, 58, 62, 63, 67, 72, 76, 77, 78, 80, 84, 85, 97, 98, 99, 104, 107, 108, 110, 112, 116, 126, 129, 137, 138, 143, 144, 148, 183, 185, 189, 195, 199, 202, 206, 225, 231, 236, 237, 249, 259, 261, 262, 265, 269, 272, 281, 282, 284, 286, 287, 307, 308, 320, 321, 322, 329, 330, 335, 338, 342, 346, 351, 353, 356, 357, 368, 369, 373, 376, 377, 380, 384, 387, 388, 389, 390, 391, 394, 403, 404, 405, 410, 414, 415, 420, 422, 426, 427, 428, 432, 434, 441, 462, 465, 467, 470, 473, 475, 477, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 492, 493, 494, 496, 498], "sub": [32, 45, 50, 67, 72, 75, 77, 80, 81, 107, 112, 113, 114, 116, 129, 133, 136, 145, 188, 189, 190, 191, 196, 203, 204, 208, 210, 215, 219, 221, 228, 245, 262, 267, 269, 276, 283, 286, 293, 306, 309, 323, 329, 333, 334, 345, 360, 368, 377, 390, 401, 403, 405, 420, 428, 445, 446, 457, 458, 464, 465, 466, 476, 477, 479, 483, 484, 486, 489, 490, 491, 492, 493, 494], "asynchron": [32, 62, 67, 96, 99, 133, 136, 137, 138, 141, 142, 145, 147, 148, 149, 151, 174, 179, 182, 183, 200, 204, 227, 239, 269, 270, 271, 275, 282, 298, 353, 357, 364, 366, 368, 400, 403, 404, 421, 442, 451, 484, 487, 488, 489, 490, 491, 492, 494, 495], "notif": [32, 66, 67, 344, 415, 420, 430, 477, 484, 495], "trace": [32, 34, 35, 42, 62, 67, 81, 85, 110, 113, 126, 157, 169, 170, 184, 189, 198, 204, 228, 240, 250, 255, 262, 269, 270, 272, 308, 312, 356, 368, 377, 380, 396, 399, 443, 451, 453, 455, 470, 471, 478, 479, 480, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496], "advanc": [32, 67, 88, 90, 91, 92, 97, 99, 104, 114, 116, 117, 121, 162, 180, 182, 188, 189, 190, 199, 200, 208, 225, 239, 248, 250, 270, 273, 276, 282, 283, 284, 285, 293, 307, 331, 353, 357, 361, 364, 368, 382, 395, 399, 405, 417, 426, 427, 437, 442, 443, 449, 454, 455, 462, 465, 466, 467, 476, 480, 485, 489, 495, 498], "pywidestringlist": [32, 67, 495], "pystatu": [32, 67, 495], "pypreconfig": [32, 42, 67, 495], "preiniti": [32, 42, 58, 67, 281], "pyconfig": [32, 33, 35, 58, 67, 71, 99, 308, 368, 369, 370, 471, 484, 487, 488, 495, 496], "isol": [32, 33, 62, 65, 67, 90, 99, 107, 109, 122, 125, 133, 151, 207, 261, 342, 368, 369, 377, 403, 404, 414, 470, 476, 488, 491, 493, 496], "py_runmain": [32, 67, 495], "py_getargcargv": [32, 67], "privat": [32, 33, 42, 43, 56, 67, 97, 105, 106, 107, 189, 194, 203, 237, 239, 261, 262, 265, 274, 293, 298, 314, 320, 351, 357, 362, 364, 377, 401, 404, 445, 450, 451, 460, 465, 476, 478, 479, 480, 483, 487, 488, 489, 490, 491, 492, 493, 495], "domain": [32, 67, 78, 110, 113, 138, 158, 217, 222, 223, 226, 244, 249, 257, 258, 262, 272, 281, 283, 284, 298, 302, 350, 351, 353, 354, 357, 362, 363, 368, 397, 409, 413, 454, 470, 480, 482, 490, 491, 492, 493, 494], "custom": [32, 34, 35, 58, 62, 67, 71, 83, 85, 88, 91, 97, 99, 108, 112, 120, 126, 127, 129, 130, 133, 138, 139, 141, 147, 151, 163, 168, 171, 173, 174, 177, 194, 196, 198, 202, 207, 208, 221, 222, 225, 227, 231, 239, 256, 259, 261, 265, 266, 269, 270, 271, 273, 277, 282, 284, 286, 295, 300, 307, 313, 333, 335, 338, 347, 348, 349, 350, 357, 360, 368, 369, 373, 377, 378, 380, 384, 391, 401, 403, 404, 410, 414, 415, 417, 422, 425, 427, 428, 434, 440, 442, 445, 447, 451, 454, 455, 457, 460, 462, 467, 469, 471, 473, 477, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 495, 496], "pymalloc": [32, 34, 67, 368, 470, 471, 478, 483, 484, 489, 491, 493, 495, 498], "tracemalloc": [32, 34, 67, 198, 201, 269, 377, 441, 470], "pyinitfrozenextens": 33, "pymem_setalloc": [33, 34, 42], "pymem_setupdebughook": [33, 42, 201, 493], "pyobject_setarenaalloc": [33, 42], "py_setpath": [33, 56, 369, 476, 488, 495], "py_setprogramnam": [33, 34, 35, 56, 84, 85, 476, 488], "py_setpythonhom": [33, 34, 56, 488], "py_setstandardstreamencod": [33, 34, 488, 491], "pysys_addwarnopt": [33, 56, 58, 488, 494], "pysys_addxopt": [33, 56, 58, 488], "pysys_resetwarnopt": [33, 56, 58], "py_isiniti": [33, 35, 56], "pymem_getalloc": [33, 42], "pyobject_getarenaalloc": [33, 42], "py_getbuildinfo": [33, 56, 482], "py_getcompil": [33, 56], "py_getcopyright": [33, 56], "py_getplatform": [33, 56], "py_getvers": [33, 56], "py_decodelocal": [33, 34, 56, 58, 63, 84, 85, 492, 494], "pymem_rawmalloc": [33, 34, 42, 65, 491], "pymem_rawrealloc": [33, 42, 65, 491], "pymem_rawcalloc": [33, 42, 492], "pymem_rawfre": [33, 42, 58, 84, 85], "py_encodelocal": [33, 56, 58, 63, 492, 494], "py_getpath": [33, 35, 56, 487], "py_getprefix": [33, 35, 56, 487], "py_getexecprefix": [33, 35, 56, 487], "py_getprogramfullpath": [33, 35, 56, 487, 495], "py_getpythonhom": [33, 56, 487], "py_getprogramnam": [33, 56, 487, 495], "pyeval_initthread": [33, 56, 489, 496], "By": [33, 34, 45, 56, 67, 80, 92, 97, 99, 105, 106, 108, 111, 113, 114, 116, 120, 121, 123, 125, 126, 131, 137, 138, 147, 148, 163, 168, 179, 180, 182, 189, 190, 194, 199, 201, 203, 207, 222, 224, 225, 228, 239, 248, 249, 250, 256, 257, 258, 259, 261, 264, 266, 267, 270, 273, 276, 277, 282, 284, 286, 291, 296, 298, 299, 307, 308, 312, 314, 322, 323, 328, 329, 332, 333, 334, 335, 345, 346, 347, 353, 356, 357, 360, 361, 363, 364, 368, 373, 375, 377, 379, 380, 382, 384, 388, 390, 391, 394, 397, 399, 401, 403, 404, 405, 409, 410, 415, 422, 428, 431, 432, 436, 437, 440, 441, 443, 444, 445, 447, 450, 451, 454, 455, 456, 458, 463, 467, 468, 470, 471, 476, 477, 479, 483, 489, 490, 492, 493, 494, 495, 496], "py_byteswarningflag": [33, 494], "bb": [33, 107, 173, 276, 282, 470, 494], "py_debugflag": 33, "parser": [33, 34, 67, 71, 75, 80, 85, 90, 91, 101, 107, 114, 116, 119, 123, 129, 133, 170, 172, 173, 188, 203, 207, 208, 210, 213, 214, 215, 217, 219, 220, 222, 227, 231, 237, 239, 252, 269, 271, 277, 283, 288, 300, 312, 319, 324, 334, 346, 360, 366, 394, 410, 414, 424, 425, 426, 427, 428, 430, 432, 446, 450, 451, 452, 456, 458, 462, 464, 466, 470, 477, 478, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "expert": [33, 34, 307, 465, 470], "pythondebug": [33, 34, 470], "py_dontwritebytecodeflag": 33, "try": [33, 34, 35, 42, 45, 49, 57, 62, 63, 67, 71, 75, 80, 83, 85, 87, 88, 89, 90, 91, 92, 96, 98, 99, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 120, 121, 125, 126, 131, 133, 138, 145, 147, 150, 151, 153, 154, 159, 162, 164, 173, 179, 180, 181, 188, 189, 190, 196, 199, 203, 204, 207, 214, 226, 227, 237, 239, 240, 242, 244, 250, 259, 261, 264, 265, 270, 273, 276, 277, 282, 284, 286, 294, 298, 301, 304, 306, 307, 308, 310, 312, 314, 317, 320, 323, 329, 330, 334, 335, 338, 345, 346, 347, 348, 351, 353, 356, 357, 360, 364, 368, 373, 374, 376, 377, 380, 382, 384, 390, 396, 399, 401, 404, 405, 410, 414, 415, 417, 418, 422, 423, 428, 434, 435, 437, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 458, 459, 461, 464, 470, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498], "pythondontwritebytecod": [33, 34, 97, 368, 470, 483], "py_frozenflag": 33, "_freeze_modul": 33, "frozenmain": 33, "py_hashrandomizationflag": 33, "pythonhashse": [33, 34, 443, 470, 490], "secret": [33, 67, 145, 187, 249, 251, 269, 298, 307, 308, 320, 333, 342, 357, 441, 455, 470, 477], "py_ignoreenvironmentflag": [33, 35, 494], "pythonpath": [33, 34, 35, 83, 98, 121, 164, 368, 369, 377, 447, 465, 470, 474, 476, 491], "pythonhom": [33, 34, 35, 121, 369, 377, 470, 476, 493], "py_inspectflag": [33, 65], "script": [33, 34, 35, 65, 67, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 87, 90, 91, 92, 93, 95, 99, 101, 110, 113, 114, 120, 121, 123, 125, 131, 133, 163, 176, 182, 201, 203, 204, 206, 207, 224, 227, 236, 242, 244, 254, 258, 259, 265, 266, 269, 282, 295, 307, 312, 323, 324, 326, 328, 330, 339, 342, 345, 349, 356, 366, 368, 369, 372, 377, 384, 391, 393, 401, 403, 410, 414, 418, 422, 435, 436, 444, 447, 449, 450, 451, 452, 454, 455, 458, 460, 463, 466, 467, 468, 469, 470, 471, 473, 475, 477, 478, 479, 480, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "stdin": [33, 34, 58, 65, 88, 97, 99, 106, 107, 112, 131, 133, 138, 142, 145, 149, 157, 164, 168, 170, 176, 189, 199, 204, 207, 222, 228, 229, 232, 243, 248, 261, 262, 273, 274, 277, 298, 308, 311, 312, 324, 336, 343, 346, 357, 360, 363, 364, 368, 373, 376, 377, 393, 402, 410, 422, 435, 442, 443, 445, 447, 451, 455, 456, 457, 458, 461, 464, 465, 466, 467, 470, 471, 478, 479, 480, 481, 483, 484, 485, 487, 490, 491, 492, 493, 494, 496], "pythoninspect": [33, 34, 470, 480], "py_interactiveflag": [33, 58], "py_isolatedflag": 33, "neither": [33, 71, 81, 88, 107, 111, 116, 125, 141, 145, 156, 157, 171, 194, 199, 207, 210, 219, 223, 239, 256, 277, 282, 285, 286, 290, 298, 301, 307, 308, 311, 314, 318, 333, 334, 354, 356, 357, 360, 368, 375, 391, 395, 401, 403, 410, 418, 440, 441, 443, 445, 470, 491, 493, 494], "directori": [33, 34, 35, 67, 72, 74, 75, 76, 77, 78, 80, 81, 83, 85, 87, 88, 90, 91, 96, 97, 98, 99, 101, 105, 107, 108, 110, 114, 119, 121, 123, 125, 129, 149, 164, 165, 176, 180, 182, 190, 197, 202, 203, 207, 214, 224, 226, 227, 234, 237, 239, 244, 245, 259, 261, 262, 264, 265, 266, 267, 268, 269, 286, 294, 298, 301, 307, 309, 311, 312, 317, 321, 325, 326, 327, 328, 335, 339, 342, 346, 349, 356, 357, 358, 364, 368, 369, 370, 372, 373, 377, 390, 395, 399, 403, 410, 414, 417, 418, 422, 436, 437, 438, 440, 447, 453, 458, 460, 462, 463, 466, 468, 470, 471, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 498], "site": [33, 34, 67, 80, 92, 97, 107, 108, 119, 120, 121, 169, 180, 224, 239, 257, 258, 265, 266, 269, 274, 282, 308, 317, 330, 351, 368, 369, 370, 373, 410, 411, 414, 429, 445, 447, 453, 460, 465, 468, 469, 470, 471, 476, 477, 482, 484, 485, 490, 491, 492, 498], "py_legacywindowsfsencodingflag": [33, 58], "surrogatepass": [33, 34, 171, 470, 491, 493], "pythonlegacywindowsfsencod": [33, 34, 368, 470, 493], "529": [33, 63, 67, 308, 368, 470, 476, 495], "py_legacywindowsstdioflag": 33, "fileio": [33, 34, 131, 239, 273, 484, 491], "_windowsconsoleio": [33, 34], "pythonlegacywindowsstdio": [33, 34, 368, 470, 493], "528": [33, 34, 67, 476], "py_nositeflag": 33, "entail": [33, 34, 470], "trigger": [33, 34, 42, 62, 67, 88, 99, 105, 107, 110, 151, 182, 190, 199, 202, 210, 219, 224, 227, 240, 265, 270, 298, 299, 301, 307, 308, 331, 348, 349, 356, 360, 368, 384, 386, 403, 404, 409, 415, 424, 428, 434, 443, 458, 467, 470, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494], "py_nousersitedirectori": 33, "pythonnousersit": [33, 34, 349, 470, 483], "py_optimizeflag": [33, 189], "pythonoptim": [33, 34, 470], "py_quietflag": 33, "displai": [33, 34, 42, 67, 72, 75, 92, 99, 101, 106, 108, 110, 114, 116, 119, 129, 131, 133, 137, 151, 164, 165, 168, 170, 173, 181, 192, 198, 199, 201, 204, 207, 214, 217, 227, 228, 252, 261, 269, 270, 274, 281, 282, 286, 296, 303, 308, 312, 322, 326, 328, 334, 335, 336, 358, 360, 361, 362, 364, 368, 373, 379, 382, 384, 387, 388, 390, 391, 393, 395, 396, 399, 403, 410, 414, 415, 418, 436, 441, 443, 450, 451, 456, 458, 459, 461, 463, 464, 466, 467, 468, 470, 471, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 498], "copyright": [33, 34, 67, 72, 85, 98, 121, 135, 181, 249, 261, 368, 428, 441, 463, 465, 470, 489, 495], "q": [33, 34, 62, 96, 101, 104, 110, 114, 132, 173, 175, 176, 196, 199, 203, 216, 228, 239, 276, 290, 298, 303, 307, 311, 312, 315, 326, 331, 332, 333, 334, 359, 363, 368, 372, 409, 457, 459, 470, 474, 479, 486, 489, 490, 492], "py_unbufferedstdioflag": 33, "stdout": [33, 34, 58, 63, 65, 67, 71, 72, 85, 99, 101, 113, 114, 131, 133, 138, 142, 145, 149, 151, 164, 168, 182, 189, 190, 203, 204, 207, 224, 230, 237, 239, 256, 261, 262, 273, 277, 283, 284, 298, 307, 308, 312, 315, 322, 323, 324, 336, 348, 350, 360, 364, 368, 373, 374, 377, 393, 395, 396, 403, 404, 414, 415, 422, 428, 432, 437, 443, 461, 465, 466, 470, 476, 477, 481, 482, 483, 484, 485, 489, 490, 491, 492, 493, 494], "pythonunbuff": [33, 34, 368, 470], "py_verboseflag": 33, "show": [33, 34, 35, 67, 71, 75, 84, 85, 86, 88, 99, 101, 104, 105, 106, 107, 110, 112, 113, 114, 117, 119, 120, 127, 131, 133, 134, 138, 151, 160, 163, 164, 165, 168, 171, 173, 182, 185, 189, 192, 199, 201, 202, 203, 204, 207, 216, 225, 227, 230, 239, 240, 248, 249, 256, 257, 261, 262, 265, 272, 276, 277, 282, 293, 298, 306, 307, 308, 314, 322, 323, 333, 336, 341, 347, 349, 353, 356, 357, 359, 360, 361, 373, 382, 384, 385, 388, 390, 391, 393, 395, 396, 399, 403, 404, 405, 414, 415, 417, 434, 435, 436, 446, 450, 454, 455, 457, 458, 459, 466, 467, 468, 470, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 495, 496], "cleanup": [33, 34, 35, 58, 67, 107, 114, 126, 147, 153, 177, 182, 228, 299, 308, 354, 364, 368, 375, 377, 403, 405, 417, 420, 426, 442, 444, 445, 470, 477, 479, 482, 484, 485, 489, 490, 495], "pythonverbos": [33, 34, 470], "builtin": [33, 34, 35, 52, 67, 97, 99, 105, 108, 118, 133, 155, 171, 173, 200, 204, 207, 239, 244, 249, 258, 261, 264, 265, 269, 270, 273, 274, 276, 283, 314, 323, 330, 338, 349, 360, 368, 400, 401, 405, 442, 445, 447, 450, 452, 455, 456, 458, 465, 471, 483, 486, 487, 489, 491, 492, 493, 494, 496, 498], "__main__": [33, 34, 35, 65, 67, 91, 96, 97, 99, 105, 108, 113, 114, 138, 157, 168, 179, 201, 203, 207, 214, 227, 242, 264, 265, 269, 282, 294, 298, 307, 312, 314, 323, 328, 330, 338, 339, 348, 354, 358, 377, 382, 397, 399, 401, 403, 404, 405, 414, 415, 417, 422, 436, 444, 448, 452, 455, 465, 470, 478, 481, 482, 483, 484, 486, 489, 490, 491, 492, 495, 496], "argv": [33, 34, 35, 65, 67, 71, 72, 84, 85, 114, 125, 129, 138, 148, 155, 201, 207, 232, 242, 261, 307, 308, 312, 324, 339, 354, 358, 368, 371, 384, 403, 422, 458, 463, 465, 466, 470, 480, 483, 484, 485, 489, 494, 495], "pysys_setargvex": [33, 56, 483, 484, 488, 489], "py_finalizeex": [33, 35, 56, 58, 84, 112, 493], "consol": [33, 34, 65, 67, 80, 97, 104, 113, 114, 125, 189, 191, 193, 207, 215, 239, 261, 283, 308, 312, 328, 335, 364, 368, 419, 436, 453, 470, 474, 476, 479, 483, 489, 490, 494], "o_text": [33, 297, 308], "o_binari": [33, 34, 297, 308], "py_initializeex": [33, 56, 112], "initsig": 33, "registr": [33, 58, 174, 182, 308, 314, 344, 410, 420, 435, 436, 483], "undo": [33, 168, 190, 261, 282, 399, 404, 483], "py_newinterpret": [33, 56, 112], "ideal": [33, 62, 74, 90, 107, 114, 119, 147, 163, 196, 368, 415, 422, 460, 465, 481, 489], "flush": [33, 113, 114, 117, 126, 138, 142, 145, 148, 152, 162, 171, 173, 190, 228, 239, 259, 273, 282, 284, 285, 286, 293, 298, 308, 329, 337, 348, 353, 364, 368, 377, 414, 420, 422, 428, 439, 490, 491, 493, 495], "restart": [33, 114, 190, 226, 237, 261, 283, 312, 348, 376, 381, 465, 483, 484, 492, 494, 495], "loadabl": [33, 62, 78, 112, 264, 265, 322, 356, 471, 476], "dll": [33, 34, 56, 67, 78, 86, 96, 121, 129, 284, 308, 368, 384, 436, 476, 477, 482, 483, 487, 491, 495], "unload": [33, 112, 377, 417], "hunt": [33, 307], "destruct": [33, 85, 87, 168, 190, 270, 273, 299, 360, 375, 443, 478, 489], "random": [33, 34, 35, 67, 85, 90, 97, 99, 104, 107, 114, 119, 129, 138, 146, 162, 171, 173, 186, 187, 207, 232, 233, 240, 250, 261, 269, 272, 273, 276, 298, 305, 307, 323, 334, 342, 343, 359, 373, 375, 399, 403, 413, 425, 439, 443, 460, 466, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 495], "amount": [33, 35, 45, 85, 88, 90, 96, 97, 107, 117, 134, 138, 145, 148, 151, 190, 199, 237, 245, 249, 250, 273, 274, 285, 298, 303, 307, 308, 310, 311, 314, 320, 322, 329, 337, 345, 347, 348, 353, 358, 360, 379, 380, 381, 384, 387, 391, 399, 408, 410, 424, 426, 439, 455, 456, 458, 464, 478, 481, 483, 487, 489, 491, 492, 493, 494, 496], "ti": [33, 71, 199, 323, 357, 442, 480, 481, 488, 495], "_pysys_clearaudithook": [33, 155], "py_fin": [33, 34, 56, 484], "stdio_encod": [33, 34, 368], "stdio_error": [33, 34, 368], "pythonioencod": [33, 34, 308, 368, 470, 483, 491], "backslashreplac": [33, 34, 119, 171, 228, 239, 273, 282, 308, 360, 368, 470, 480, 492, 494], "program_nam": [33, 34], "rel": [33, 35, 62, 67, 71, 72, 80, 91, 98, 113, 116, 118, 121, 123, 124, 125, 132, 133, 138, 163, 166, 167, 171, 182, 190, 194, 196, 203, 204, 207, 223, 224, 225, 229, 239, 245, 259, 265, 273, 280, 281, 282, 285, 290, 293, 296, 308, 309, 311, 314, 317, 323, 329, 332, 333, 334, 339, 340, 346, 347, 353, 356, 357, 359, 360, 364, 368, 369, 373, 375, 377, 381, 384, 390, 391, 395, 403, 404, 409, 414, 420, 422, 428, 430, 436, 437, 440, 448, 451, 457, 461, 465, 466, 470, 476, 477, 478, 479, 481, 484, 485, 488, 490, 491, 492, 493, 495, 496, 498], "durat": [33, 35, 71, 99, 114, 137, 138, 151, 196, 286, 298, 323, 353, 354, 357, 360, 368, 376, 377, 380, 381, 421, 484, 489, 490, 492, 495], "wchar_": 33, "prefix": [33, 34, 35, 47, 56, 60, 62, 63, 67, 71, 72, 80, 85, 90, 99, 111, 116, 117, 129, 168, 172, 176, 180, 186, 188, 189, 190, 199, 203, 204, 217, 227, 239, 242, 244, 249, 257, 259, 261, 271, 283, 284, 297, 308, 309, 312, 317, 327, 329, 330, 334, 347, 349, 360, 361, 363, 368, 369, 375, 377, 379, 384, 390, 391, 395, 403, 404, 413, 414, 425, 428, 430, 434, 438, 439, 446, 450, 451, 455, 461, 464, 465, 470, 471, 475, 476, 480, 483, 484, 487, 489, 490, 492, 493, 495], "complic": [33, 62, 80, 85, 90, 99, 100, 104, 106, 107, 112, 116, 117, 119, 120, 121, 154, 171, 182, 189, 194, 203, 207, 229, 240, 241, 257, 307, 314, 334, 381, 443, 445, 454, 458, 461, 464, 477, 479, 480, 481, 482, 483, 484, 486, 489], "usr": [33, 35, 80, 83, 91, 96, 101, 107, 108, 110, 114, 119, 121, 164, 180, 189, 203, 214, 244, 245, 287, 307, 309, 311, 318, 334, 341, 349, 360, 364, 368, 370, 375, 381, 384, 397, 410, 436, 453, 463, 468, 470, 471, 474, 475, 476, 478, 480, 482, 487, 489, 491, 492], "bin": [33, 35, 67, 80, 84, 90, 91, 96, 107, 114, 119, 120, 121, 164, 177, 180, 203, 214, 239, 259, 266, 307, 308, 311, 316, 360, 361, 370, 410, 411, 414, 436, 443, 453, 463, 465, 468, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486], "makefil": [33, 67, 71, 84, 85, 91, 245, 249, 273, 311, 353, 357, 370, 443, 473, 477, 478, 483, 484, 490, 491, 492, 493], "exec": [33, 71, 85, 96, 114, 121, 123, 133, 155, 157, 170, 172, 207, 226, 227, 239, 241, 265, 308, 312, 323, 360, 364, 367, 368, 377, 384, 393, 395, 396, 397, 443, 444, 451, 452, 453, 455, 465, 471, 477, 478, 479, 481, 482, 485, 487, 491, 492], "exec_prefix": [33, 34, 35, 71, 121, 298, 349, 368, 369, 395, 414, 465, 470, 471, 475, 489], "background": [33, 67, 72, 89, 104, 110, 114, 117, 138, 151, 152, 180, 182, 190, 260, 261, 284, 298, 308, 356, 364, 377, 380, 384, 390, 391, 399, 414, 442, 443, 467, 481, 491], "plat": [33, 71, 72, 121, 476, 493], "subtre": [33, 428, 477], "speak": [33, 34, 67, 85, 97, 117, 121, 132, 196, 239, 289, 360, 363, 371, 455, 456], "sparc": [33, 310], "machin": [33, 63, 67, 85, 96, 98, 99, 108, 110, 113, 114, 117, 132, 145, 171, 179, 190, 191, 196, 214, 226, 239, 244, 257, 270, 273, 275, 283, 284, 285, 287, 289, 298, 299, 303, 308, 311, 318, 323, 328, 348, 351, 353, 356, 357, 359, 360, 363, 380, 382, 413, 424, 435, 436, 443, 449, 459, 461, 463, 476, 477, 478, 479, 482, 483, 484, 486, 488, 489, 490, 494, 495], "solari": [33, 67, 71, 72, 78, 260, 308, 318, 321, 343, 368, 370, 381, 477, 484, 489, 490, 492, 494], "consid": [33, 34, 42, 49, 54, 55, 56, 62, 63, 71, 72, 84, 85, 87, 88, 90, 97, 99, 100, 101, 104, 105, 106, 107, 111, 112, 114, 116, 121, 123, 125, 127, 131, 137, 138, 140, 157, 160, 164, 167, 173, 176, 180, 181, 188, 189, 190, 194, 196, 197, 199, 203, 204, 207, 210, 218, 219, 222, 239, 240, 242, 244, 245, 249, 250, 257, 264, 265, 267, 268, 270, 272, 273, 274, 277, 281, 282, 283, 284, 285, 286, 290, 298, 299, 303, 304, 307, 309, 311, 312, 314, 323, 329, 334, 335, 341, 343, 346, 348, 356, 357, 359, 360, 361, 363, 368, 370, 373, 377, 379, 380, 381, 384, 400, 401, 403, 404, 409, 410, 414, 417, 422, 425, 426, 427, 435, 436, 442, 443, 444, 445, 447, 451, 455, 456, 457, 459, 465, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496], "intel": [33, 71, 98, 154, 310, 323, 363, 471, 474, 482, 484, 492, 493, 495, 496], "linux": [33, 67, 71, 72, 78, 83, 84, 92, 95, 96, 104, 105, 109, 110, 121, 126, 129, 144, 189, 190, 199, 226, 228, 229, 244, 261, 272, 273, 284, 293, 310, 321, 324, 337, 341, 343, 347, 348, 353, 358, 364, 368, 370, 373, 375, 377, 380, 381, 384, 410, 463, 471, 473, 476, 477, 478, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "major": [33, 67, 75, 78, 80, 89, 92, 99, 105, 106, 117, 119, 120, 133, 180, 190, 196, 200, 208, 217, 220, 222, 244, 249, 257, 282, 307, 308, 318, 320, 328, 360, 368, 370, 373, 403, 409, 436, 460, 469, 476, 477, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 498], "revis": [33, 67, 90, 119, 120, 250, 318, 363, 423, 441, 477, 482, 485, 486, 490, 493, 494, 498], "stori": [33, 85, 92, 160, 250, 461], "strategi": [33, 42, 62, 85, 88, 91, 131, 147, 152, 171, 284, 350, 377, 384, 403, 418, 439, 440, 447, 456, 480, 485, 489, 494], "meaningless": [33, 119, 478, 479, 491], "mount": [33, 308, 309, 311, 347, 484, 491, 494], "automount": 33, "comput": [33, 34, 35, 49, 62, 63, 67, 71, 83, 84, 87, 88, 90, 92, 94, 97, 98, 99, 104, 105, 107, 110, 111, 113, 114, 116, 118, 119, 121, 132, 145, 151, 154, 159, 160, 163, 167, 173, 174, 175, 179, 191, 194, 196, 198, 199, 204, 207, 230, 237, 239, 240, 249, 250, 251, 269, 270, 274, 276, 282, 284, 290, 298, 306, 308, 309, 311, 318, 322, 323, 326, 333, 341, 349, 353, 354, 357, 359, 360, 368, 378, 380, 384, 399, 403, 410, 413, 420, 439, 441, 442, 443, 445, 450, 451, 453, 454, 455, 457, 459, 461, 466, 467, 469, 470, 471, 474, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 491, 494, 495], "delimit": [33, 58, 67, 71, 90, 97, 99, 116, 117, 180, 188, 207, 215, 235, 252, 261, 262, 286, 303, 307, 314, 334, 335, 360, 361, 364, 384, 393, 409, 440, 448, 467, 476, 480, 489], "maco": [33, 34, 56, 67, 71, 80, 92, 93, 95, 96, 97, 110, 119, 121, 122, 126, 129, 145, 189, 197, 229, 272, 284, 293, 298, 308, 319, 323, 324, 335, 343, 345, 347, 348, 349, 353, 356, 357, 358, 368, 370, 377, 380, 381, 383, 384, 388, 391, 410, 418, 441, 454, 468, 470, 473, 474, 477, 478, 479, 480, 482, 483, 484, 487, 488, 493, 494], "startup": [33, 34, 63, 67, 98, 99, 125, 137, 181, 189, 201, 228, 265, 281, 283, 308, 349, 360, 368, 378, 383, 397, 447, 460, 462, 470, 474, 482, 483, 487, 490, 491, 492, 494, 496], "module_search_path": [33, 34, 58, 488], "module_search_paths_set": [33, 34, 58, 488], "knowledg": [33, 86, 104, 196, 208, 281, 282, 304, 318, 345, 455, 466, 483], "compon": [33, 35, 42, 45, 67, 71, 85, 90, 92, 97, 105, 113, 114, 116, 119, 120, 122, 127, 151, 171, 173, 184, 190, 196, 199, 208, 222, 224, 244, 245, 257, 259, 265, 266, 269, 270, 271, 272, 296, 304, 308, 309, 311, 334, 346, 360, 361, 368, 370, 371, 373, 375, 381, 382, 384, 391, 399, 400, 401, 403, 410, 420, 425, 430, 435, 437, 440, 443, 447, 448, 450, 456, 470, 476, 480, 481, 483, 484, 485, 488, 489, 491, 492, 493, 494], "0a5": 33, "py3k": [33, 99, 357, 368, 370, 485], "63103m": 33, "2008": [33, 72, 171, 196, 237, 347, 363, 428, 441, 483, 484, 485, 489], "00": [33, 71, 101, 117, 119, 196, 199, 249, 282, 333, 334, 357, 381, 399, 440, 466, 467, 470, 482, 483, 484, 489, 493, 496], "53": [33, 90, 114, 151, 196, 199, 290, 333, 359, 360, 381, 405, 459, 482], "55": [33, 105, 107, 113, 114, 151, 199, 240, 299, 333, 334, 399, 456, 457, 459, 464, 465, 470, 493], "gcc": [33, 35, 62, 71, 83, 121, 189, 318, 368, 463, 470, 471, 483, 484, 486, 487, 488, 491, 493], "minor": [33, 56, 62, 65, 67, 75, 80, 89, 90, 91, 92, 96, 104, 114, 120, 121, 133, 173, 190, 217, 220, 308, 318, 328, 368, 370, 373, 430, 467, 471, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495], "period": [33, 56, 72, 90, 97, 99, 106, 113, 164, 190, 196, 199, 234, 240, 282, 284, 298, 309, 317, 333, 338, 341, 353, 354, 357, 379, 391, 411, 435, 445, 450, 456, 476, 477, 480, 481, 482, 483, 484, 488, 489], "offici": [33, 115, 171, 209, 223, 249, 291, 310, 357, 384, 403, 426, 434, 443, 474, 476, 477, 478, 479, 482, 484, 487, 489, 490, 492, 494, 496], "suno": [33, 318, 373], "sunos5": [33, 368], "darwin": [33, 318, 368, 381, 477, 483, 492], "1991": [33, 68, 92, 356, 441], "1995": [33, 68, 223, 441, 477], "sticht": [33, 68, 441], "mathematisch": [33, 68, 441], "centrum": [33, 68, 441], "amsterdam": [33, 92, 381, 441], "67": [33, 239, 353, 359, 397, 399, 461, 483], "aug": [33, 107, 121, 196, 438, 479, 480], "1997": [33, 160, 441, 484, 489], "22": [33, 89, 108, 114, 116, 119, 163, 173, 186, 189, 196, 250, 261, 274, 276, 282, 299, 333, 353, 357, 361, 399, 438, 441, 480, 489, 495, 496], "34": [33, 108, 114, 151, 196, 199, 240, 353, 357, 359, 445, 456, 464, 465, 489], "argc": [33, 34, 65, 84, 85, 204], "updatepath": [33, 483, 484], "parse_argv": [33, 34, 35], "safe_path": [33, 34, 368, 488], "host": [33, 67, 96, 114, 117, 138, 148, 152, 155, 171, 190, 191, 223, 226, 237, 239, 256, 257, 259, 261, 262, 271, 272, 284, 286, 298, 301, 302, 303, 308, 309, 311, 320, 328, 334, 350, 351, 353, 354, 357, 360, 362, 363, 374, 377, 401, 404, 409, 410, 413, 422, 434, 469, 471, 476, 477, 480, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494], "condit": [33, 35, 58, 62, 67, 85, 87, 90, 97, 99, 106, 107, 114, 120, 121, 133, 134, 136, 145, 149, 151, 157, 160, 177, 194, 199, 203, 204, 213, 227, 239, 242, 245, 250, 254, 262, 265, 266, 272, 273, 282, 283, 286, 287, 296, 298, 312, 324, 329, 333, 334, 342, 343, 353, 357, 360, 368, 375, 377, 401, 403, 415, 417, 427, 429, 431, 434, 442, 443, 444, 448, 456, 460, 464, 467, 470, 477, 478, 479, 481, 483, 484, 487, 489, 490, 491, 492, 493, 495, 496, 498], "py_fatalerror": [33, 35, 42, 56, 58, 63, 496], "orig_argv": [33, 34, 368, 487], "themselv": [33, 62, 79, 80, 85, 87, 90, 97, 98, 99, 111, 113, 116, 122, 154, 164, 167, 171, 180, 184, 188, 189, 208, 222, 225, 244, 276, 277, 289, 290, 298, 312, 314, 334, 347, 356, 360, 377, 379, 401, 403, 404, 405, 426, 434, 443, 445, 447, 455, 457, 479, 482, 483, 484, 489, 491, 492, 494], "cve": [33, 360, 424, 483, 484, 487, 488, 494, 495, 496], "5983": [33, 483, 484], "manual": [33, 45, 60, 67, 71, 74, 84, 85, 86, 89, 91, 96, 97, 98, 104, 105, 107, 112, 114, 119, 121, 123, 131, 138, 143, 144, 145, 151, 177, 189, 190, 198, 207, 211, 220, 225, 229, 239, 269, 272, 273, 282, 286, 298, 299, 307, 308, 317, 319, 328, 335, 343, 353, 356, 360, 371, 373, 375, 376, 381, 383, 390, 404, 425, 428, 436, 439, 443, 448, 449, 460, 464, 466, 469, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 488, 490, 491, 492, 494, 495], "pop": [33, 35, 92, 96, 97, 114, 132, 134, 173, 174, 199, 204, 208, 217, 250, 276, 286, 308, 320, 346, 357, 360, 390, 391, 399, 403, 414, 443, 450, 457, 467, 479, 480, 481, 482, 483, 489, 491, 492], "pysys_setargv": [33, 56, 483, 484, 488], "pyrun_simplestr": [33, 34, 65, 84, 91, 98, 483], "home": [33, 34, 67, 71, 80, 92, 93, 97, 98, 104, 108, 114, 116, 164, 168, 180, 190, 228, 248, 261, 266, 286, 287, 301, 308, 309, 311, 312, 321, 325, 329, 330, 335, 346, 349, 357, 364, 369, 377, 384, 390, 399, 414, 437, 439, 449, 453, 468, 471, 476, 483, 489, 490, 492, 495], "simplest": [33, 62, 75, 80, 81, 84, 85, 88, 107, 111, 112, 113, 116, 117, 120, 131, 152, 171, 182, 188, 199, 207, 214, 224, 250, 314, 334, 357, 380, 401, 403, 404, 436, 443, 445, 455, 456, 465, 466, 467, 470, 477, 479, 480, 487], "simultan": [33, 62, 114, 149, 150, 162, 199, 245, 261, 273, 276, 286, 296, 333, 345, 354, 356, 377, 380, 390, 451, 463, 464, 476, 483, 487, 488, 492, 495], "twice": [33, 34, 89, 100, 107, 114, 118, 119, 121, 124, 159, 176, 180, 196, 201, 228, 246, 250, 251, 270, 290, 334, 356, 393, 415, 437, 455, 461, 470, 477, 479, 480, 481, 483, 484, 488, 493, 495], "concurr": [33, 67, 96, 99, 125, 135, 136, 138, 141, 142, 145, 146, 149, 183, 240, 269, 286, 298, 314, 326, 335, 345, 356, 357, 364, 368, 380, 428, 458, 484, 488, 495, 498], "regularli": [33, 42, 122, 227, 399, 476], "setswitchinterv": [33, 96, 368, 377, 465, 489, 496], "potenti": [33, 34, 35, 62, 71, 97, 107, 112, 113, 114, 122, 138, 180, 186, 196, 237, 239, 262, 265, 268, 270, 276, 282, 283, 284, 298, 299, 308, 309, 314, 320, 331, 342, 354, 357, 360, 368, 379, 400, 401, 403, 409, 424, 436, 443, 447, 456, 470, 476, 478, 479, 483, 487, 488, 489, 490, 491, 492, 494, 495, 496], "meantim": [33, 133], "bookkeep": [33, 67, 190, 305], "pythreadst": [33, 56, 487, 488, 491, 496], "pythreadstate_get": [33, 56], "reacquir": [33, 189, 380], "py_end_allow_thread": [33, 56, 85, 495], "hidden": [33, 56, 97, 98, 192, 204, 245, 261, 312, 323, 333, 354, 391, 399, 468, 490, 494, 495, 496], "close": [33, 62, 65, 67, 71, 80, 88, 90, 91, 97, 98, 99, 107, 108, 112, 113, 114, 117, 119, 128, 131, 134, 136, 138, 142, 144, 145, 147, 148, 151, 152, 164, 166, 167, 168, 170, 171, 174, 180, 182, 183, 190, 197, 201, 203, 213, 221, 222, 227, 228, 232, 237, 239, 248, 249, 254, 256, 257, 261, 262, 264, 273, 282, 284, 285, 286, 290, 293, 296, 298, 299, 303, 307, 308, 310, 311, 316, 323, 324, 329, 335, 343, 344, 345, 346, 348, 350, 351, 353, 354, 356, 357, 359, 360, 364, 365, 368, 373, 374, 375, 377, 380, 381, 384, 388, 390, 391, 393, 399, 401, 403, 404, 405, 410, 414, 416, 420, 422, 428, 431, 432, 434, 435, 436, 437, 443, 445, 446, 450, 456, 458, 459, 461, 467, 470, 477, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "expand": [33, 57, 62, 87, 98, 99, 101, 106, 116, 119, 121, 133, 180, 196, 199, 207, 244, 261, 270, 274, 276, 283, 298, 307, 309, 311, 329, 334, 360, 370, 379, 381, 384, 391, 404, 409, 420, 424, 425, 427, 428, 430, 435, 445, 461, 476, 479, 480, 483, 489, 490, 491, 492, 493, 494, 495, 496], "_save": 33, "pyeval_savethread": [33, 56, 489], "pyeval_restorethread": [33, 56, 489, 495], "compress": [33, 67, 71, 72, 81, 99, 107, 111, 114, 128, 145, 171, 180, 214, 232, 248, 249, 269, 274, 276, 291, 296, 310, 314, 347, 352, 357, 358, 365, 373, 416, 424, 436, 437, 460, 469, 479, 480, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "cryptograph": [33, 67, 249, 269, 308, 333, 341, 357, 428, 439, 490, 493], "zlib": [33, 67, 96, 116, 121, 130, 171, 248, 249, 269, 347, 377, 437, 466, 479, 480, 482, 487, 488, 496], "hashlib": [33, 67, 96, 186, 187, 251, 269, 342, 356, 441, 471, 483, 484, 485], "dedic": [33, 67, 87, 114, 180, 207, 249, 357, 360, 377], "aforement": [33, 87, 137, 490], "pygilstate_ensur": [33, 56, 495], "pygilstate_releas": [33, 56], "idiom": [33, 35, 85, 90, 97, 99, 118, 123, 125, 131, 207, 239, 298, 346, 357, 368, 401, 417, 458, 480, 485, 489, 490, 496], "pygilstate_st": [33, 56], "gstate": 33, "callsomefunct": 33, "pygilstate_": 33, "unsupport": [33, 67, 101, 120, 126, 131, 138, 180, 196, 207, 239, 244, 273, 289, 298, 299, 310, 314, 319, 353, 357, 359, 364, 380, 401, 404, 409, 410, 420, 437, 447, 458, 476, 477, 481, 483, 489, 493, 496], "face": [33, 119, 138, 141, 162, 261, 284, 317, 409, 440, 477, 483, 485, 487, 490, 491, 492], "impact": [33, 87, 180, 225, 265, 308, 322, 349, 356, 357, 363, 364, 377, 488], "fact": [33, 35, 63, 72, 74, 75, 78, 80, 85, 90, 92, 97, 98, 107, 113, 116, 117, 120, 121, 138, 163, 180, 184, 189, 199, 207, 220, 224, 237, 239, 246, 265, 282, 294, 307, 314, 323, 360, 373, 384, 399, 401, 410, 422, 436, 443, 445, 447, 449, 455, 456, 459, 464, 465, 476, 477, 478, 483, 488, 490, 491, 492], "solv": [33, 67, 90, 96, 97, 99, 107, 116, 125, 152, 261, 298, 345, 359, 363, 373, 401, 404, 405, 442, 469, 479, 480, 482, 486, 489, 491, 495], "afterward": [33, 84, 105, 189, 196, 199, 276, 308, 343, 356, 368, 374, 405, 436, 443, 463, 464, 479, 480, 483], "pthread_atfork": 33, "accomplish": [33, 35, 97, 131, 190, 241, 262, 321, 345, 425, 487], "deadlock": [33, 108, 149, 179, 226, 228, 264, 282, 298, 331, 354, 364, 368, 380, 443, 483, 489, 490], "defunct": 33, "pyos_afterfork_child": [33, 56, 58, 308, 494, 495], "belong": [33, 42, 57, 62, 75, 78, 85, 97, 106, 112, 121, 151, 179, 207, 225, 257, 273, 274, 287, 296, 307, 308, 329, 354, 356, 360, 391, 400, 415, 425, 431, 442, 443, 455, 456, 484, 487, 490], "pyinterpreterst": [33, 34, 56, 487, 495, 496], "natur": [33, 35, 78, 90, 97, 106, 116, 119, 125, 138, 167, 171, 187, 189, 199, 207, 208, 244, 290, 293, 309, 323, 333, 345, 353, 359, 391, 417, 418, 428, 445, 450, 455, 459, 460, 477, 481, 483, 484, 485, 486, 488, 489, 493, 494], "commonli": [33, 71, 85, 96, 97, 99, 104, 107, 111, 116, 119, 125, 131, 180, 188, 203, 227, 239, 256, 269, 272, 291, 298, 300, 354, 359, 360, 362, 364, 373, 381, 384, 388, 390, 401, 403, 409, 410, 415, 432, 434, 443, 450, 456, 459, 460, 461, 466, 476, 479, 481, 482, 483, 487, 492, 494], "cooper": [33, 99, 127, 151, 177, 217, 239, 357, 368, 384, 441, 455, 494], "interp": [33, 384], "didn": [33, 88, 91, 97, 101, 116, 119, 125, 133, 152, 182, 258, 307, 334, 351, 405, 443, 455, 477, 478, 479, 481, 482, 483, 484, 491, 494, 496], "pyeval_threadsiniti": [33, 56, 481, 496], "tstate": [33, 488, 496], "ensu": [33, 489], "_py_isfin": [33, 495], "unwant": [33, 35, 97, 373, 465, 494], "needn": [33, 334, 363, 494], "pythreadstate_swap": [33, 56], "swap": [33, 84, 117, 171, 173, 189, 204, 276, 298, 337, 353, 363, 377, 443, 451, 466, 488, 494], "henc": [33, 71, 74, 85, 90, 101, 114, 125, 133, 182, 185, 207, 241, 261, 268, 284, 298, 307, 311, 316, 323, 337, 346, 359, 360, 363, 364, 380, 404, 415, 442, 443, 445, 481, 491, 494], "gilstat": 33, "everi": [33, 35, 42, 49, 56, 57, 67, 71, 72, 74, 78, 80, 85, 87, 89, 90, 92, 97, 99, 105, 107, 108, 112, 113, 114, 116, 119, 120, 121, 123, 127, 133, 138, 144, 146, 151, 153, 156, 159, 171, 180, 183, 189, 190, 196, 197, 199, 200, 203, 204, 207, 208, 210, 219, 228, 237, 239, 244, 246, 250, 257, 259, 261, 266, 270, 274, 276, 277, 282, 284, 293, 298, 307, 308, 310, 317, 329, 331, 334, 347, 348, 349, 354, 356, 360, 361, 364, 365, 367, 371, 379, 380, 391, 394, 399, 401, 403, 404, 410, 415, 422, 423, 425, 428, 434, 440, 442, 443, 447, 449, 453, 456, 459, 460, 465, 468, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 491, 492, 493, 495], "pygilstate_getthisthreadst": [33, 56], "auto": [33, 67, 74, 92, 105, 108, 120, 196, 225, 261, 335, 346, 353, 357, 399, 404, 405, 464, 471, 475, 477, 484, 487, 489, 493, 494], "mainli": [33, 45, 71, 80, 113, 133, 168, 180, 270, 289, 292, 307, 324, 368, 370, 401, 422, 434, 443, 476, 487, 488, 496], "diagnost": [33, 42, 67, 87, 113, 301, 372, 401, 404, 422, 434, 436, 473, 489, 493], "pygilstate_check": 33, "sensit": [33, 160, 173, 180, 234, 262, 284, 291, 311, 368, 401, 403, 415, 443, 470, 478, 480, 481, 482, 483, 488, 491], "brace": [33, 90, 99, 171, 296, 334, 360, 361, 413, 445, 450, 457, 467, 493, 494], "earlier": [33, 62, 63, 71, 84, 96, 97, 98, 99, 104, 107, 108, 113, 114, 116, 121, 122, 125, 126, 138, 190, 196, 207, 224, 239, 244, 259, 261, 273, 282, 284, 290, 307, 308, 314, 334, 346, 356, 357, 364, 368, 373, 384, 395, 401, 403, 404, 409, 410, 414, 415, 417, 426, 430, 439, 443, 445, 447, 450, 457, 462, 464, 468, 470, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496], "py_block_thread": [33, 56], "py_unblock_thread": [33, 56], "pyinterpreterstate_new": [33, 56, 155], "serial": [33, 41, 42, 67, 99, 114, 180, 195, 208, 210, 211, 215, 217, 219, 220, 221, 222, 269, 277, 282, 284, 298, 299, 313, 319, 345, 348, 351, 356, 363, 368, 428, 461, 477, 483, 484, 486, 488, 489, 490, 491, 496], "pyinterpreterstate_clear": [33, 56, 155], "pyinterpreterstate_delet": [33, 56], "pythreadstate_new": [33, 56], "pythreadstate_clear": [33, 56], "on_delet": 33, "pythreadstate_delet": [33, 56], "pythreadstate_deletecurr": [33, 496], "uint64_t": 33, "pythreadstate_getid": [33, 56, 496], "pythreadstate_getinterpret": [33, 56, 496], "pythreadstate_entertrac": [33, 488], "suspend": [33, 99, 107, 137, 151, 190, 270, 329, 348, 368, 376, 380, 381, 442, 443, 445, 479, 480, 482, 488, 492, 494], "pythreadstate_leavetrac": [33, 488], "pyeval_settrac": [33, 479], "pyeval_setprofil": [33, 479], "pyinterpreterstate_get": [33, 56, 496], "int64_t": 33, "pyinterpreterstate_getid": [33, 56, 494], "id": [33, 45, 60, 67, 90, 92, 99, 107, 108, 110, 113, 114, 126, 128, 129, 133, 142, 145, 155, 166, 173, 190, 194, 207, 210, 211, 214, 217, 219, 223, 239, 244, 247, 254, 274, 276, 282, 283, 284, 285, 286, 287, 296, 298, 303, 308, 314, 318, 320, 322, 325, 329, 334, 337, 343, 344, 349, 353, 356, 357, 358, 364, 365, 371, 372, 373, 375, 380, 384, 391, 401, 403, 404, 405, 413, 416, 417, 428, 431, 443, 445, 446, 451, 464, 465, 466, 473, 476, 477, 478, 479, 481, 482, 483, 488, 490, 494, 495, 496], "pyinterpreterstate_getdict": [33, 56], "pymodule_getst": [33, 45, 56, 60, 112, 496], "_pyframeevalfunct": [33, 488], "_pyinterpreterfram": [33, 488], "throwflag": [33, 65, 108], "throw": [33, 65, 89, 100, 106, 107, 113, 123, 140, 151, 174, 190, 261, 308, 377, 401, 409, 443, 445, 446, 454, 482, 487, 490, 493, 496], "_pyinterpreterstate_getevalframefunc": 33, "523": [33, 67, 480, 488, 496], "_pyinterpreterstate_setevalframefunc": 33, "eval_fram": [33, 496], "pythreadstate_getdict": [33, 56], "okai": [33, 106, 131, 180, 281, 422, 465], "pythreadstate_setasyncexc": [33, 56, 494], "naiv": [33, 67, 116, 195, 217, 223, 249, 356, 359, 490], "misus": [33, 45, 356, 479], "pyeval_acquirethread": [33, 56, 495], "pyeval_releasethread": [33, 56], "pyeval_acquirelock": [33, 56, 489, 495], "pyeval_releaselock": [33, 56, 489], "perhap": [33, 62, 84, 85, 88, 91, 92, 95, 96, 106, 112, 113, 114, 116, 117, 120, 121, 131, 164, 167, 190, 194, 207, 232, 257, 273, 281, 283, 298, 308, 314, 318, 333, 349, 353, 409, 426, 443, 445, 446, 454, 456, 458, 463, 477, 478, 479, 481, 482, 483, 487, 495], "pyinterpreterstate_main": 33, "total": [33, 34, 35, 58, 85, 90, 97, 101, 107, 114, 128, 138, 139, 145, 146, 151, 173, 196, 199, 203, 204, 207, 210, 219, 225, 239, 240, 241, 244, 250, 273, 274, 276, 287, 308, 323, 333, 334, 347, 353, 356, 357, 360, 361, 373, 381, 382, 391, 397, 401, 403, 410, 416, 443, 445, 450, 459, 470, 484, 488, 489, 490, 491, 492, 493, 495], "unsuccess": [33, 38, 264], "pymodule_fromdefandspec": [33, 45, 492], "squirrel": [33, 323], "init": [33, 45, 62, 67, 71, 85, 98, 155, 189, 217, 264, 265, 291, 308, 311, 323, 330, 350, 378, 390, 401, 482, 483], "initmodul": [33, 80], "py_endinterpret": [33, 56, 112], "haven": [33, 81, 101, 108, 116, 119, 151, 164, 199, 246, 359, 404, 458, 483, 484], "insul": 33, "perfect": [33, 135, 257, 261, 357, 487], "malici": [33, 119, 277, 283, 289, 314, 329, 342, 364, 368, 373, 424, 426, 427, 428, 429, 434, 435, 470, 483, 488], "especi": [33, 62, 72, 75, 80, 84, 85, 88, 96, 97, 99, 111, 119, 121, 138, 152, 173, 180, 182, 196, 199, 207, 212, 219, 250, 261, 273, 277, 283, 299, 303, 308, 312, 323, 326, 328, 329, 331, 333, 348, 357, 358, 364, 368, 377, 399, 417, 425, 442, 447, 449, 467, 477, 479, 480, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495], "namespac": [33, 45, 67, 80, 85, 90, 91, 97, 99, 105, 107, 113, 125, 129, 133, 170, 173, 181, 194, 204, 207, 221, 225, 236, 239, 240, 244, 261, 262, 264, 265, 266, 270, 282, 283, 288, 298, 312, 314, 317, 329, 339, 346, 353, 360, 361, 367, 381, 382, 397, 400, 401, 403, 404, 405, 413, 415, 425, 426, 427, 430, 431, 442, 444, 451, 452, 453, 460, 465, 470, 477, 478, 479, 480, 482, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 498], "reachabl": [33, 51, 90, 117, 207, 241, 307, 308, 401, 443, 488, 496], "delic": [33, 62], "biject": [33, 119], "assumpt": [33, 62, 85, 88, 99, 112, 153, 174, 194, 196, 265, 479, 483, 487, 489, 493, 494], "broken": [33, 75, 80, 112, 114, 117, 119, 123, 136, 150, 179, 203, 221, 226, 245, 270, 281, 298, 308, 309, 311, 320, 348, 357, 360, 368, 377, 379, 380, 384, 403, 404, 405, 409, 450, 470, 482, 486, 487, 488, 490, 491, 495, 496], "presenc": [33, 35, 62, 78, 85, 87, 99, 123, 171, 174, 199, 232, 239, 257, 264, 265, 271, 301, 307, 311, 323, 357, 359, 364, 368, 393, 401, 403, 442, 443, 445, 458, 464, 479, 480, 485, 487, 488, 493, 494, 495, 496], "highli": [33, 42, 97, 98, 116, 133, 140, 204, 262, 272, 273, 314, 324, 334, 356, 357, 364, 378, 401, 480, 481, 488], "furthermor": [33, 90, 96, 121, 131, 171, 204, 270, 283, 284, 286, 339, 360, 401, 414, 436, 442, 476, 487, 488, 491], "ctype": [33, 67, 85, 108, 129, 155, 177, 210, 214, 219, 228, 269, 281, 308, 317, 360, 368, 401, 471, 484, 490, 493], "py_addpendingcal": [33, 56, 484, 496], "func": [33, 34, 35, 44, 52, 58, 62, 65, 71, 90, 97, 99, 100, 105, 107, 112, 131, 133, 138, 151, 153, 157, 173, 189, 190, 226, 240, 270, 276, 281, 282, 298, 307, 323, 329, 347, 356, 360, 368, 377, 380, 382, 384, 395, 401, 403, 417, 435, 442, 458, 481, 483, 485, 489, 490, 493, 495], "schedul": [33, 67, 92, 96, 124, 126, 129, 136, 137, 141, 142, 148, 152, 173, 177, 179, 250, 267, 269, 270, 337, 348, 368, 381, 391, 445, 479, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 496], "queu": [33, 138, 148, 152, 168, 190, 284, 310, 353, 376, 483], "successfulli": [33, 42, 65, 83, 86, 89, 99, 100, 110, 116, 117, 126, 133, 138, 144, 151, 176, 179, 180, 182, 207, 237, 239, 241, 262, 264, 265, 298, 303, 307, 308, 347, 353, 357, 360, 364, 380, 403, 422, 447, 451, 461, 468, 481, 489, 492, 493], "met": [33, 62, 87, 105, 106, 107, 113, 203, 225, 318, 357, 441, 467, 482, 495], "boundari": [33, 106, 116, 160, 166, 196, 207, 210, 213, 219, 220, 225, 227, 298, 314, 334, 360, 363, 377, 430, 450, 456, 483, 488], "subinterpret": [33, 62, 153, 308, 360, 364, 377, 488, 495, 496], "quick": [33, 50, 67, 77, 87, 107, 114, 116, 120, 121, 122, 129, 200, 231, 282, 305, 368, 384, 401, 405, 461, 479, 480, 481, 482, 483, 485, 489], "busi": [33, 80, 97, 117, 149, 226, 284, 354, 364, 384, 421, 430, 441, 456], "pygilst": 33, "attach": [33, 45, 67, 84, 112, 113, 114, 131, 138, 144, 173, 179, 196, 200, 207, 208, 210, 211, 213, 217, 219, 220, 221, 226, 261, 282, 283, 299, 343, 344, 356, 368, 384, 390, 396, 403, 405, 422, 440, 441, 442, 443, 451, 455, 458, 466, 478, 480, 484, 485, 488, 490, 493, 495], "coverag": [33, 97, 368, 384, 395, 485, 487, 491], "overhead": [33, 35, 87, 98, 114, 117, 144, 201, 267, 276, 285, 308, 323, 356, 358, 360, 368, 382, 397, 399, 401, 417, 443, 447, 477, 478, 479, 480, 482, 486, 488, 489, 490, 493, 494, 495, 496], "essenti": [33, 85, 97, 105, 116, 117, 145, 180, 229, 239, 265, 272, 283, 284, 290, 303, 307, 308, 339, 345, 354, 360, 368, 403, 426, 437, 448, 454, 477, 479, 484, 485, 488, 490, 491, 496], "py_tracefunc": 33, "pytrace_cal": 33, "pytrace_except": 33, "pytrace_lin": 33, "pytrace_return": 33, "pytrace_c_cal": 33, "pytrace_c_except": 33, "pytrace_c_return": 33, "pytrace_opcod": 33, "transfer": [33, 35, 67, 84, 85, 99, 104, 117, 120, 148, 156, 182, 209, 210, 211, 212, 215, 216, 217, 220, 221, 222, 237, 249, 255, 256, 258, 286, 289, 291, 298, 303, 308, 314, 351, 363, 410, 412, 434, 441, 445, 447, 483, 484, 488, 489, 490, 493, 495], "unwind": [33, 87, 147, 182, 270, 443], "f_trace_lin": [33, 368, 443, 488, 494], "opcod": [33, 67, 203, 279, 314, 315, 368, 443, 480, 481, 483, 484, 487, 491, 493, 494, 495, 496], "emit": [33, 34, 45, 71, 87, 88, 99, 108, 113, 114, 126, 137, 138, 141, 144, 151, 181, 190, 196, 201, 204, 227, 241, 259, 273, 276, 282, 284, 308, 314, 364, 368, 373, 377, 391, 396, 401, 403, 415, 426, 428, 432, 443, 445, 451, 466, 470, 480, 483, 486, 487, 488, 489, 491, 493, 494, 495, 496], "f_trace_opcod": [33, 368, 443, 488, 494], "monitor": [33, 98, 110, 113, 114, 136, 138, 143, 144, 149, 175, 199, 284, 323, 344, 354, 368, 414, 481, 483, 493, 494], "setprofil": [33, 155, 298, 368, 380, 465, 479, 487], "settrac": [33, 155, 157, 298, 368, 380, 465, 479, 487], "pyinterpreterstate_head": [33, 479], "head": [33, 62, 90, 114, 116, 148, 163, 164, 168, 191, 214, 254, 255, 256, 259, 303, 309, 323, 333, 348, 349, 354, 357, 391, 399, 410, 428, 477, 479, 490], "pyinterpreterstate_next": [33, 479], "pyinterpreterstate_threadhead": [33, 479], "pythreadstate_next": [33, 479], "pthread": [33, 126, 368, 380, 471, 489], "pythread": 33, "behalf": [33, 348, 441], "supersed": [33, 58, 67, 268, 269, 303, 310, 357, 441, 477, 484, 487, 490, 494], "py_tss_t": [33, 494], "539": [33, 67], "py_limited_api": [33, 55, 56, 58, 60, 436, 487, 488, 489, 494, 496], "py_tss_needs_init": 33, "pythread_tss_alloc": [33, 56], "pythread_tss_fre": [33, 56], "pythread_tss_delet": [33, 56], "unassign": [33, 105, 362], "dangl": [33, 62, 85, 89, 99, 308, 347, 360, 361, 377, 442], "pythread_tss_set": [33, 56], "pythread_tss_get": [33, 56], "pythread_tss_cr": [33, 56], "pythread_tss_is_cr": [33, 56], "repeatedli": [33, 90, 116, 120, 168, 189, 203, 276, 281, 291, 356, 380, 382, 399, 403, 420, 421, 422, 442, 467, 479, 489, 493], "forget": [33, 35, 71, 74, 84, 85, 112, 114, 151, 199, 273, 377, 391, 445, 446, 455, 457, 481, 482, 483, 487, 489, 495], "pythread_create_kei": [33, 56], "pythread_delete_kei": [33, 56], "pythread_set_key_valu": [33, 56, 491], "pythread_get_key_valu": [33, 56], "pythread_delete_key_valu": [33, 56], "pythread_reinittl": [33, 56], "py_initializefromconfig": [34, 42, 369, 495], "py_preiniti": [34, 42, 58, 495], "lc_ctype": [34, 58, 99, 119, 281, 308, 360, 470, 493, 494], "unchang": [34, 42, 90, 105, 114, 116, 123, 132, 157, 164, 168, 173, 180, 184, 189, 190, 199, 222, 244, 270, 273, 276, 281, 284, 286, 308, 309, 317, 333, 334, 353, 356, 360, 361, 373, 384, 399, 400, 401, 404, 409, 436, 442, 443, 445, 450, 455, 461, 467, 476, 479, 481, 482, 483, 484, 485, 486, 489, 490, 493, 494], "587": [34, 67, 114, 357, 488], "config": [34, 67, 74, 77, 80, 81, 84, 91, 97, 108, 113, 114, 129, 180, 261, 269, 281, 282, 284, 307, 347, 368, 370, 384, 387, 404, 405, 422, 467, 471, 475, 480, 484, 487, 488, 489, 491, 493, 494, 495], "pyconfig_initpythonconfig": [34, 495], "pyconfig_setbytesargv": [34, 495], "pystatus_except": [34, 495], "goto": [34, 35, 67, 168, 399, 471, 486, 488, 489], "pyconfig_clear": [34, 495], "pystatus_isexit": [34, 495], "exitcod": [34, 298, 308, 364, 377], "py_exitstatusexcept": [34, 495], "pywidestringlist_append": [34, 495], "pywidestringlist_insert": [34, 495], "err_msg": [34, 356, 368, 377], "pystatus_ok": [34, 495], "pystatus_error": [34, 495], "pystatus_nomemori": [34, 495], "pystatus_exit": [34, 495], "pystatus_iserror": [34, 495], "wherea": [34, 85, 97, 98, 108, 114, 138, 143, 149, 180, 254, 277, 282, 298, 334, 344, 368, 384, 404, 410, 414, 417, 447, 456, 476, 485, 487, 496], "preconfigur": [34, 404], "pypreconfig_initpythonconfig": [34, 495], "preconfig": [34, 495], "pypreconfig_initisolatedconfig": [34, 495], "pymem_allocator_not_set": 34, "pymem_allocator_default": 34, "pymem_allocator_debug": 34, "pymem_allocator_malloc": 34, "pymem_allocator_malloc_debug": 34, "pymem_allocator_pymalloc": 34, "pymem_allocator_pymalloc_debug": 34, "configure_local": 34, "coerce_c_local": 34, "coerce_c_locale_warn": 34, "coerc": [34, 63, 111, 180, 199, 209, 210, 219, 276, 277, 281, 359, 361, 470, 477, 485, 488, 494], "decid": [34, 35, 88, 90, 92, 97, 107, 113, 117, 124, 151, 157, 167, 170, 182, 196, 207, 241, 257, 284, 353, 354, 368, 380, 401, 443, 447, 451, 465, 468, 482, 484, 487], "dev_mod": [34, 201, 368], "legacy_windows_fs_encod": 34, "utf8_mod": [34, 308, 368], "filesystem_encod": [34, 58, 99, 308, 368], "filesystem_error": [34, 58, 99, 308, 368], "ifdef": [34, 85, 436, 471, 477], "py_preinitializefromarg": [34, 495], "py_preinitializefrombytesarg": [34, 495], "use_environ": [34, 496], "utf8": [34, 133, 164, 171, 217, 219, 221, 222, 262, 308, 320, 329, 351, 368, 426, 428, 470, 476, 492, 494], "pythonutf8": [34, 308, 368, 470, 476, 494], "_pyruntim": [34, 496], "pre": [34, 35, 71, 78, 80, 83, 85, 99, 113, 114, 116, 122, 152, 199, 204, 217, 222, 240, 250, 259, 265, 273, 276, 282, 283, 307, 311, 339, 346, 354, 368, 373, 396, 401, 402, 404, 410, 414, 442, 451, 459, 470, 471, 474, 476, 477, 480, 481, 482, 484, 489, 491, 492, 493, 494, 496], "pyconfig_initisolatedconfig": [34, 495], "pyconfig_setstr": [34, 495], "config_str": 34, "pyconfig_setbytesstr": [34, 58, 495], "pyconfig_setargv": [34, 495], "pyconfig_setwidestringlist": 34, "pyconfig_read": [34, 58, 99, 308, 368, 488, 495], "stripp": 34, "tune": [34, 90, 240, 241, 257, 307, 334, 337, 357, 439, 477, 480, 488], "strip": [34, 71, 97, 107, 116, 131, 133, 171, 180, 183, 190, 191, 196, 203, 207, 214, 222, 223, 237, 239, 242, 259, 261, 283, 284, 299, 309, 323, 341, 346, 351, 354, 359, 360, 364, 371, 373, 377, 396, 397, 401, 409, 415, 422, 428, 437, 455, 456, 457, 458, 477, 480, 485, 486, 487, 489, 492, 493, 494, 495, 496], "unsaf": [34, 56, 87, 97, 132, 162, 180, 201, 298, 308, 324, 342, 346, 356, 368, 373, 403, 404, 410, 413, 470, 480, 487, 488, 492, 494], "py": [34, 35, 67, 72, 74, 75, 76, 77, 78, 80, 81, 83, 85, 88, 91, 97, 98, 99, 101, 106, 107, 110, 113, 114, 116, 119, 121, 122, 123, 124, 127, 128, 131, 133, 134, 137, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 160, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 189, 191, 194, 196, 197, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 225, 228, 230, 232, 234, 235, 237, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 296, 299, 301, 303, 304, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 445, 447, 453, 463, 464, 465, 466, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "resolv": [34, 67, 87, 90, 97, 98, 99, 113, 114, 131, 138, 140, 151, 180, 189, 196, 204, 207, 225, 265, 266, 270, 274, 282, 283, 307, 308, 309, 311, 317, 323, 329, 353, 357, 364, 368, 400, 401, 403, 404, 414, 426, 427, 428, 430, 431, 432, 444, 455, 468, 470, 476, 479, 487, 490, 491, 492, 493, 494, 495], "pythonsafepath": [34, 342, 368, 470, 488], "base_exec_prefix": [34, 349, 368, 414, 436, 465], "base_execut": 34, "_base_execut": 34, "__pyvenv_launcher__": 34, "base_prefix": [34, 244, 349, 368, 414, 465], "buffered_stdio": 34, "configure_c_stdio": 34, "bytes_warn": [34, 368, 489], "warn_default_encod": [34, 273, 368, 470, 487], "encodingwarn": [34, 67, 129, 227, 470], "textiowrapp": [34, 131, 162, 201, 232, 239, 248, 268, 273, 285, 364, 375, 437, 483, 487, 490, 491, 493, 494], "opt": [34, 56, 67, 74, 80, 84, 121, 129, 180, 227, 242, 265, 307, 314, 321, 354, 447, 465, 470, 471, 480, 483, 484, 489, 491, 492, 494], "code_debug_rang": 34, "caret": [34, 116, 190, 191, 207, 334, 396], "pythonnodebugrang": [34, 443, 470, 488], "no_debug_rang": [34, 443, 470, 488], "check_hash_pycs_mod": 34, "check_sourc": 34, "552": [34, 67, 265, 326, 488], "determinist": [34, 67, 114, 116, 182, 198, 201, 265, 270, 333, 353, 356, 374, 428, 489, 494, 496], "dev": [34, 67, 91, 92, 108, 110, 114, 138, 201, 243, 284, 286, 287, 308, 310, 322, 348, 364, 368, 370, 453, 470, 477, 478, 479, 480, 481, 482, 483, 484, 489, 490, 492], "pythondevmod": [34, 201, 470, 494], "dump_ref": 34, "dump": [34, 42, 67, 80, 85, 106, 113, 114, 133, 155, 164, 185, 188, 198, 201, 269, 277, 281, 284, 289, 299, 301, 308, 312, 314, 319, 323, 348, 356, 358, 396, 397, 422, 428, 434, 461, 470, 471, 477, 478, 479, 480, 483, 484, 486, 490, 491, 492, 493, 496], "aliv": [34, 62, 97, 189, 240, 298, 299, 320, 360, 377, 380, 417, 442, 443, 467, 470, 478, 484, 485, 489, 491], "pythondumpref": [34, 62, 470, 471, 495], "py_trace_ref": [34, 35, 62, 471, 487, 495, 496], "faulthandl": [34, 67, 189, 198, 201, 269, 312, 348, 377, 396, 470], "pythonfaulthandl": [34, 201, 228, 470, 490], "getfilesystemencod": [34, 65, 99, 119, 308, 368, 373, 436, 465, 493], "android": [34, 63, 71, 99, 281, 318, 368, 377, 493, 494, 495], "vxwork": [34, 63, 99, 186, 281, 308, 316, 337, 487], "nl_langinfo": [34, 281, 479], "codeset": [34, 171, 244, 281, 479, 488, 495], "announc": [34, 71, 92, 119, 124, 308, 469, 490], "mbstowc": 34, "latin1": [34, 148, 171, 314, 329, 482, 490, 493, 496], "At": [34, 42, 57, 58, 62, 63, 84, 85, 88, 95, 97, 99, 105, 114, 122, 134, 138, 145, 150, 151, 153, 162, 164, 166, 180, 182, 248, 249, 261, 262, 273, 284, 285, 307, 308, 314, 320, 347, 353, 357, 368, 380, 384, 390, 395, 399, 401, 403, 404, 416, 423, 440, 442, 445, 447, 450, 455, 458, 464, 467, 471, 476, 478, 479, 483, 487, 488, 493, 494], "ansi_x3": 34, "1968": 34, "getfilesystemencodeerror": [34, 99, 368, 465, 493], "surrogateescap": [34, 58, 63, 119, 171, 215, 222, 232, 239, 308, 353, 356, 368, 373, 470, 489, 492, 493, 494], "hash_se": 34, "use_hash_se": 34, "chosen": [34, 45, 85, 99, 106, 113, 116, 121, 179, 199, 225, 239, 249, 272, 283, 298, 299, 307, 314, 333, 341, 353, 357, 363, 368, 375, 390, 413, 430, 443, 466, 470, 476, 480, 481, 485], "randomli": [34, 96, 114, 138, 186, 298, 323, 333, 341, 377, 479, 482, 491], "import_tim": 34, "importtim": [34, 470, 494], "pythonprofileimporttim": [34, 470, 494], "inspect": [34, 67, 85, 88, 99, 100, 110, 114, 124, 131, 133, 141, 151, 169, 174, 188, 194, 207, 239, 241, 249, 265, 266, 269, 274, 282, 286, 312, 317, 322, 328, 330, 347, 348, 349, 357, 360, 368, 373, 377, 386, 397, 403, 404, 410, 437, 442, 443, 470, 477, 478, 479, 483, 484], "install_signal_handl": [34, 487], "repl": [34, 125, 135, 334, 368, 470, 487, 495], "user_site_directori": 34, "prompt": [34, 65, 67, 78, 91, 97, 98, 99, 121, 123, 125, 131, 155, 168, 170, 186, 189, 202, 204, 207, 214, 221, 237, 239, 243, 261, 262, 269, 312, 328, 335, 351, 357, 360, 364, 368, 376, 380, 383, 396, 399, 410, 414, 447, 451, 453, 456, 459, 463, 464, 465, 468, 470, 476, 480, 483, 487, 488, 489, 491, 493, 494, 495, 496], "legacy_windows_stdio": 34, "malloc_stat": 34, "statist": [34, 42, 67, 90, 92, 105, 198, 240, 241, 269, 290, 303, 305, 323, 333, 347, 357, 368, 382, 395, 459, 466, 469, 470, 471, 477, 478, 482, 484, 488, 489, 490], "pythonmallocstat": [34, 42, 470], "platlibdir": [34, 368, 369, 470, 471, 496], "pythonplatlibdir": [34, 369, 470], "lib": [34, 35, 71, 72, 74, 80, 83, 84, 89, 91, 96, 98, 101, 107, 108, 110, 121, 123, 124, 127, 128, 131, 133, 134, 135, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 160, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 194, 196, 197, 199, 202, 203, 204, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 232, 234, 235, 237, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 296, 298, 299, 301, 303, 304, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 373, 374, 375, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 445, 453, 465, 467, 468, 470, 471, 475, 476, 477, 478, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 495, 496], "layout": [34, 42, 62, 67, 75, 80, 88, 112, 113, 114, 121, 171, 202, 227, 282, 286, 357, 363, 370, 383, 384, 388, 413, 443, 447, 460, 461, 476, 483, 490, 491], "virtual": [34, 35, 67, 85, 97, 99, 114, 121, 122, 127, 174, 189, 190, 192, 205, 224, 239, 240, 256, 266, 269, 270, 295, 308, 348, 353, 356, 357, 368, 370, 373, 383, 400, 410, 422, 442, 443, 444, 447, 455, 460, 473, 477, 483, 488, 489, 491, 493, 494, 495, 498], "pythonpath_env": 34, "delim": 34, "pathsep": [34, 308, 349, 395, 418, 440, 470, 471], "optimization_level": 34, "optim": [34, 35, 42, 57, 62, 65, 67, 71, 88, 97, 108, 116, 133, 140, 141, 145, 151, 154, 171, 173, 176, 190, 204, 225, 239, 241, 249, 251, 257, 264, 265, 270, 280, 308, 314, 315, 323, 326, 353, 356, 367, 368, 377, 380, 381, 437, 442, 443, 451, 465, 466, 471, 476, 477, 479, 498], "peephol": [34, 481, 482, 489, 494], "__debug__": [34, 65, 181, 201, 239, 264, 265, 451, 465, 470, 480, 487], "assert": [34, 35, 49, 65, 67, 108, 114, 118, 123, 127, 133, 151, 156, 181, 194, 196, 197, 200, 201, 204, 207, 227, 239, 242, 270, 298, 307, 312, 314, 334, 356, 360, 377, 401, 403, 404, 415, 417, 426, 440, 441, 442, 445, 446, 448, 450, 465, 470, 471, 480, 481, 483, 486, 489, 491, 492, 495, 496], "parser_debug": 34, "pathconfig_warn": 34, "pythonexecut": [34, 470], "with_next_framework": 34, "python3": [34, 56, 84, 101, 108, 110, 114, 119, 121, 122, 123, 125, 201, 203, 214, 222, 228, 311, 349, 360, 369, 370, 382, 397, 414, 436, 453, 463, 468, 470, 471, 475, 476, 484, 487, 489, 491, 493, 495, 496], "pycache_prefix": [34, 176, 368, 465, 470, 495], "pythonpycacheprefix": [34, 368, 470, 495], "quiet": [34, 71, 101, 108, 176, 199, 290, 307, 326, 368, 377, 412, 476, 484, 487, 489, 492], "run_command": [34, 155, 470], "run_filenam": 34, "skip_source_first_lin": 34, "run_modul": [34, 155, 339, 470], "show_ref_count": 34, "showrefcount": [34, 470, 471, 491], "py_ref_debug": [34, 471], "site_import": 34, "no_sit": [34, 368, 489], "invert": [34, 105, 106, 107, 133, 171, 199, 204, 225, 306, 360, 443, 445, 446, 488], "cmd": [34, 67, 76, 77, 98, 114, 131, 138, 149, 155, 157, 190, 229, 236, 237, 269, 308, 312, 316, 323, 347, 351, 364, 395, 414, 470, 489], "hack": [34, 96, 107, 112, 207, 346, 410, 470, 477, 478, 479], "pythontracemalloc": [34, 397, 470], "verbos": [34, 62, 67, 71, 101, 111, 113, 114, 121, 131, 173, 190, 200, 201, 207, 224, 240, 242, 283, 307, 316, 334, 346, 347, 361, 368, 372, 373, 377, 382, 397, 403, 414, 434, 443, 476, 479, 480, 481, 483, 484, 488, 489, 491, 493, 494], "warnopt": [34, 58, 368, 377, 415, 465, 494], "filter": [34, 58, 67, 92, 97, 107, 110, 113, 123, 129, 130, 154, 173, 190, 198, 201, 202, 203, 227, 230, 232, 234, 239, 276, 283, 327, 330, 343, 347, 353, 377, 403, 404, 414, 436, 440, 445, 457, 465, 467, 470, 471, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 493, 494, 495, 496], "lowest": [34, 42, 56, 113, 133, 146, 199, 204, 225, 235, 250, 293, 304, 331, 357, 359, 360, 364, 380, 382, 387, 445, 457, 467, 477, 482, 493], "highest": [34, 91, 105, 106, 113, 133, 145, 180, 225, 241, 282, 293, 314, 315, 341, 343, 348, 356, 357, 359, 360, 368, 381, 387, 445, 457, 483, 490], "prioriti": [34, 67, 105, 136, 155, 180, 195, 265, 272, 276, 277, 284, 308, 314, 331, 337, 340, 343, 357, 360, 364, 371, 380, 390, 443, 445, 457, 467, 479, 480, 483, 489, 490, 491, 493, 495], "revers": [34, 38, 67, 85, 92, 104, 105, 107, 117, 118, 119, 132, 153, 154, 171, 173, 174, 182, 188, 190, 194, 196, 199, 204, 225, 228, 239, 250, 270, 274, 276, 289, 298, 304, 306, 308, 311, 323, 329, 334, 346, 356, 360, 393, 397, 400, 401, 403, 409, 417, 443, 455, 456, 457, 458, 465, 477, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 498], "pythonwarn": [34, 201, 415, 470, 484, 489, 494], "write_bytecod": 34, "dont_write_bytecod": [34, 368, 465, 483, 489], "xoption": [34, 58, 470, 488], "_xoption": [34, 58, 368, 465, 470], "show_alloc_count": [34, 493, 496], "init_python": 34, "my_program": 34, "pysys_getobject": [34, 56, 58, 112, 488], "stdlib": [34, 35, 67, 85, 112, 114, 225, 249, 261, 370, 424, 471, 482, 487, 488, 489, 490, 492], "my_execut": 34, "unspecifi": [34, 107, 138, 162, 189, 207, 239, 245, 273, 274, 285, 290, 302, 308, 311, 314, 329, 353, 381, 391, 401], "coercion": [34, 67, 239, 308, 361, 443, 470, 471, 482, 484, 498], "538": [34, 67, 281, 470, 471], "540": [34, 67, 281, 308], "pythoncoerceclocal": [34, 308, 470, 471, 494], "softwarepythonpythoncorex": 34, "ypythonpath": 34, "hkey_current_us": [34, 420, 476], "hkey_local_machin": [34, 420, 476], "unset": [34, 58, 62, 150, 286, 308, 310, 360, 368, 377, 413, 447, 483, 484, 494], "overridden": [34, 71, 76, 80, 90, 97, 105, 106, 114, 121, 127, 131, 134, 152, 157, 168, 173, 174, 180, 196, 222, 225, 239, 244, 254, 257, 258, 259, 265, 270, 273, 282, 284, 307, 308, 312, 328, 339, 350, 354, 356, 357, 360, 364, 368, 373, 380, 391, 401, 403, 410, 414, 415, 422, 443, 445, 447, 458, 470, 483, 484, 487, 490, 491, 495, 496], "py_main": [34, 56, 65, 436, 476, 494], "pyvenv": [34, 349, 369, 414, 476, 490, 491, 493, 495], "cfg": [34, 72, 74, 80, 81, 97, 121, 180, 283, 349, 369, 399, 414, 476, 483, 490, 492, 493], "_pth": [34, 67, 295, 476, 493, 494], "pybuilddir": 34, "txt": [34, 35, 67, 74, 81, 90, 107, 114, 119, 121, 131, 173, 179, 182, 201, 207, 222, 232, 234, 239, 244, 245, 248, 249, 257, 261, 266, 269, 271, 273, 293, 303, 307, 308, 311, 314, 347, 360, 364, 368, 373, 384, 402, 407, 414, 428, 436, 437, 450, 455, 458, 466, 467, 468, 471, 476, 477, 483, 484, 486, 489, 490, 491, 492, 493, 495], "432": [34, 494], "bare": [34, 71, 80, 99, 113, 114, 133, 180, 217, 307, 351, 446, 474, 476, 482, 485, 488, 495], "importlib": [34, 67, 97, 99, 110, 114, 123, 239, 261, 264, 269, 270, 283, 295, 317, 326, 339, 368, 377, 397, 400, 437, 438, 443, 448, 451, 465, 476, 486, 488, 489, 495, 498], "_init_main": 34, "_isolated_interpret": 34, "subprocess": [34, 67, 114, 135, 137, 142, 144, 155, 177, 179, 182, 222, 224, 262, 269, 272, 298, 308, 316, 342, 346, 353, 354, 377, 383, 397, 399, 414, 415, 436, 470, 475, 480, 483, 484, 487, 489, 495, 496, 498], "fork": [34, 58, 67, 80, 85, 96, 114, 155, 179, 227, 241, 272, 293, 298, 308, 324, 343, 347, 354, 357, 364, 410, 480, 484, 491, 494, 495], "_py_initializemain": 34, "move": [34, 69, 71, 75, 88, 90, 96, 97, 102, 103, 104, 105, 108, 111, 114, 117, 120, 123, 131, 133, 155, 168, 173, 189, 190, 192, 194, 196, 210, 219, 220, 232, 241, 250, 261, 276, 284, 286, 293, 308, 312, 326, 333, 347, 377, 381, 386, 390, 391, 399, 403, 404, 405, 409, 410, 414, 428, 441, 454, 466, 474, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "mayb": [34, 62, 85, 106, 107, 117, 286, 415, 446, 449, 454, 487, 488], "meta_path": [34, 99, 155, 265, 266, 317, 368, 447, 451, 465, 476, 480, 490, 493], "calculatin": 34, "motiv": [34, 80, 105, 373, 443, 445, 478, 480, 481, 487, 490, 495], "anytim": [34, 164, 357, 360, 384], "varieti": [35, 63, 85, 87, 90, 92, 99, 107, 112, 114, 119, 120, 122, 131, 171, 195, 199, 208, 237, 239, 244, 288, 307, 323, 329, 360, 364, 384, 388, 401, 422, 428, 447, 481, 482, 483, 484, 488, 491], "usabl": [35, 39, 48, 53, 55, 56, 58, 62, 63, 88, 90, 92, 97, 99, 111, 117, 118, 138, 152, 164, 171, 189, 190, 223, 239, 259, 265, 274, 283, 291, 298, 308, 309, 318, 353, 357, 360, 361, 364, 425, 443, 445, 447, 455, 465, 479, 480, 481, 482, 488, 489, 493, 494], "breviti": [35, 87, 307, 456], "techniqu": [35, 67, 90, 97, 99, 107, 114, 118, 119, 152, 164, 173, 174, 207, 215, 240, 308, 323, 334, 356, 369, 376, 390, 401, 404, 405, 447, 456, 460, 461, 467, 489, 495], "understood": [35, 80, 84, 117, 164, 188, 257, 283, 289, 298, 308, 312, 346, 360, 382, 412, 436, 441, 443, 455], "cookbook": [35, 67, 75, 86, 97, 109, 113, 120, 225, 282, 283, 284, 290, 382, 469, 489], "approach": [35, 67, 76, 80, 85, 86, 88, 91, 97, 99, 100, 101, 107, 113, 114, 118, 119, 120, 126, 160, 164, 171, 173, 182, 199, 203, 207, 224, 239, 251, 264, 282, 290, 298, 308, 311, 333, 348, 354, 356, 359, 360, 364, 375, 380, 382, 384, 399, 401, 403, 405, 410, 428, 434, 436, 443, 445, 447, 455, 460, 466, 467, 476, 477, 478, 482, 483, 484, 486, 488, 489, 490, 492, 493, 494, 498], "autom": [35, 67, 88, 96, 99, 133, 200, 237, 269, 303, 380, 403, 454, 478, 484, 485, 491, 495], "extent": [35, 145, 168, 184, 249, 273, 293, 391, 399, 441, 486], "familiar": [35, 88, 98, 99, 101, 104, 107, 108, 111, 114, 116, 125, 170, 208, 242, 272, 277, 356, 394, 403, 447, 456, 459, 461, 474, 478, 479, 480, 483], "stdio": [35, 84, 85, 308, 483, 488], "_py": [35, 495], "reserv": [35, 67, 68, 99, 106, 117, 270, 274, 289, 311, 314, 329, 333, 334, 337, 348, 355, 360, 380, 413, 420, 425, 434, 437, 441, 443, 451, 458, 470, 478, 483, 485, 489, 494, 495], "confus": [35, 62, 80, 84, 90, 96, 97, 104, 108, 112, 114, 116, 118, 120, 124, 127, 170, 189, 199, 203, 207, 239, 274, 284, 307, 308, 314, 318, 334, 348, 373, 404, 410, 443, 445, 451, 455, 456, 477, 478, 479, 480, 481, 482, 484, 486, 487, 489, 491, 493, 494, 495], "reader": [35, 67, 90, 92, 103, 111, 116, 117, 119, 138, 148, 162, 171, 173, 183, 210, 214, 216, 219, 231, 239, 256, 268, 273, 286, 287, 298, 303, 307, 314, 348, 353, 357, 363, 402, 414, 425, 428, 429, 430, 431, 432, 443, 449, 455, 460, 470, 480, 482, 485, 487, 492], "jeopard": 35, "portabl": [35, 64, 67, 71, 80, 81, 85, 90, 92, 93, 114, 117, 119, 129, 143, 189, 190, 229, 230, 233, 263, 265, 269, 281, 290, 293, 308, 313, 314, 318, 321, 353, 358, 373, 381, 414, 418, 436, 463, 476, 477, 480, 486, 490, 494, 495], "pythonvers": 35, "version_info": [35, 92, 112, 124, 133, 356, 368, 370, 414, 465, 477, 484, 486, 488, 489, 490], "parent": [35, 58, 60, 62, 67, 71, 97, 99, 100, 111, 113, 114, 125, 129, 133, 145, 173, 190, 202, 239, 241, 250, 262, 265, 268, 270, 282, 293, 296, 298, 308, 309, 311, 317, 320, 324, 327, 329, 348, 354, 356, 357, 364, 368, 384, 386, 388, 391, 400, 404, 405, 410, 414, 425, 428, 436, 443, 447, 455, 465, 479, 480, 481, 482, 483, 487, 490, 491, 493, 494], "pythonx": [35, 84, 121, 349, 360, 368, 414], "break": [35, 56, 62, 63, 67, 74, 80, 87, 88, 90, 96, 99, 104, 106, 107, 114, 116, 117, 121, 133, 140, 144, 148, 151, 157, 164, 171, 182, 183, 189, 190, 207, 214, 216, 222, 250, 261, 265, 270, 276, 286, 298, 307, 312, 314, 322, 329, 334, 341, 348, 351, 353, 357, 360, 361, 364, 368, 374, 376, 377, 379, 380, 399, 403, 409, 414, 415, 422, 426, 442, 443, 444, 445, 446, 448, 450, 455, 458, 460, 464, 467, 477, 478, 479, 480, 482, 483, 484, 486, 489, 490, 491, 492, 494, 495], "extern": [35, 67, 71, 72, 80, 81, 85, 90, 91, 96, 97, 99, 105, 112, 114, 118, 129, 132, 133, 164, 171, 180, 189, 197, 211, 230, 251, 261, 264, 265, 270, 272, 282, 287, 289, 308, 313, 326, 329, 354, 360, 363, 364, 373, 375, 377, 380, 384, 399, 403, 422, 423, 424, 425, 427, 428, 429, 430, 431, 437, 443, 445, 458, 476, 483, 485, 486, 488, 489, 492, 493, 494, 495, 496], "closer": [35, 106, 346, 405, 415, 455, 459, 484, 485, 492], "py_return_non": [35, 46, 85, 481], "pymodinit_func": [35, 85, 88, 471, 480], "pyinit": [35, 83], "linkag": [35, 67, 71, 86, 98, 318], "pyinit_": [35, 83, 471], "pymoduledef": [35, 45, 56, 60, 83, 84, 85, 88, 112, 496], "spam_modul": [35, 85], "pymoduledef_head_init": [35, 45, 84, 85, 88], "m_name": [35, 45, 88], "spam": [35, 45, 85, 89, 114, 116, 120, 131, 183, 188, 189, 232, 239, 240, 244, 256, 257, 259, 265, 270, 273, 283, 311, 322, 328, 334, 345, 349, 356, 360, 364, 373, 396, 401, 404, 405, 410, 428, 437, 443, 445, 447, 455, 456, 458, 461, 464, 465, 477, 483, 492], "pyinit_spam": [35, 85], "py_ab": 35, "py_always_inlin": 35, "ask": [35, 42, 67, 71, 90, 97, 98, 99, 104, 114, 116, 152, 174, 208, 247, 249, 257, 261, 273, 284, 307, 312, 320, 325, 334, 347, 355, 357, 360, 388, 401, 410, 427, 428, 429, 437, 445, 447, 451, 458, 469, 476, 481, 482, 483, 484, 485, 488], "inlin": [35, 56, 57, 59, 63, 67, 99, 180, 203, 204, 210, 211, 217, 219, 249, 251, 323, 334, 394, 403, 480, 482, 487, 489, 493, 495], "critic": [35, 87, 92, 99, 113, 114, 138, 264, 265, 282, 283, 284, 307, 421, 447, 454, 466, 467, 480, 482, 483, 486, 488, 489, 492], "msc": [35, 98], "blindli": [35, 360, 491], "wors": [35, 97, 116, 117, 138, 196, 201, 277, 490, 491], "smarter": [35, 405, 486, 489], "cost": [35, 84, 90, 97, 173, 180, 196, 201, 203, 240, 249, 257, 265, 308, 360, 382, 384, 396, 401, 405, 437, 443, 477, 480, 483, 484, 488, 491], "benefit": [35, 90, 97, 107, 114, 118, 122, 125, 199, 206, 282, 283, 299, 314, 360, 368, 377, 391, 401, 417, 422, 455, 476, 479, 480, 481, 484, 488, 489, 490, 494, 495], "py_debug": [35, 471, 487, 495], "py_charmask": 35, "128": [35, 63, 99, 111, 114, 119, 154, 173, 190, 199, 240, 249, 274, 299, 308, 356, 357, 399, 413, 450, 464, 482, 492], "127": [35, 63, 114, 117, 119, 138, 145, 148, 183, 259, 261, 274, 298, 308, 354, 357, 360, 364, 368, 377, 397, 482, 492], "255": [35, 63, 67, 99, 104, 111, 119, 124, 171, 173, 190, 239, 249, 274, 360, 363, 399, 445, 488, 490, 492, 494, 498], "py_deprec": [35, 495], "pyapi_func": [35, 471, 480, 495], "py_oldfunct": [35, 495], "msvc": [35, 62, 89, 98, 189, 436, 481, 495], "py_getenv": 35, "getenv": [35, 308, 321], "py_max": 35, "py_member_s": 35, "py_min": 35, "py_no_inlin": 35, "reduc": [35, 42, 55, 56, 87, 97, 107, 123, 138, 145, 190, 196, 199, 240, 241, 249, 251, 261, 273, 276, 308, 314, 323, 333, 341, 343, 357, 360, 377, 380, 404, 417, 424, 428, 436, 450, 459, 465, 471, 476, 477, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496], "consumpt": [35, 87, 133, 270, 314, 337, 347, 368, 461, 489, 490], "lto": [35, 471, 488], "pgo": [35, 377, 471, 483, 493, 496], "heavili": [35, 71, 121, 122, 197, 265, 351, 442, 478, 493, 494], "33720": 35, "py_stringifi": 35, "123": [35, 85, 112, 114, 116, 133, 199, 235, 239, 276, 283, 353, 360, 363, 445, 455, 461, 477, 479, 483, 484, 486, 489], "py_unreach": [35, 494], "claus": [35, 67, 99, 107, 114, 126, 133, 151, 182, 227, 270, 298, 312, 329, 356, 360, 368, 375, 377, 443, 444, 445, 450, 451, 453, 457, 458, 460, 477, 482, 483, 487, 488, 489, 491, 494, 495, 496], "cover": [35, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 86, 88, 91, 92, 97, 104, 106, 109, 112, 113, 114, 116, 117, 119, 121, 122, 145, 182, 204, 207, 208, 222, 257, 283, 298, 307, 333, 334, 351, 353, 360, 364, 384, 395, 399, 401, 403, 409, 425, 439, 442, 449, 460, 467, 470, 477, 478, 479, 482, 485, 487, 488, 490, 491], "tempt": [35, 88, 114, 116, 382, 457, 466], "__builtin_unreach": 35, "_py_no_return": 35, "better": [35, 67, 72, 80, 83, 84, 85, 87, 88, 90, 92, 96, 97, 105, 107, 112, 113, 114, 116, 117, 122, 125, 131, 138, 150, 154, 172, 173, 189, 203, 207, 225, 229, 237, 240, 242, 248, 250, 261, 276, 281, 286, 298, 307, 308, 320, 323, 343, 359, 363, 364, 380, 381, 384, 391, 399, 401, 403, 404, 405, 412, 428, 439, 455, 456, 458, 459, 461, 465, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496], "py_unus": [35, 57, 88], "unus": [35, 57, 62, 88, 101, 138, 162, 190, 244, 273, 274, 297, 298, 315, 328, 347, 354, 356, 361, 365, 373, 377, 416, 450, 476, 479, 483, 488, 491, 494, 496], "silenc": [35, 58, 131, 239, 338, 347, 412, 484, 489, 491, 496], "pydoc_strvar": [35, 45, 112, 471], "pop_doc": 35, "rightmost": [35, 160, 171, 173, 190, 199, 276, 308, 360, 445, 481], "deque_method": 35, "pycfunct": [35, 44, 56, 57, 85, 87, 88, 112, 481], "deque_pop": 35, "meth_noarg": [35, 57, 88, 479, 480], "pydoc_str": [35, 62, 88], "pysqlite_row_method": 35, "pysqlite_row_kei": 35, "row": [35, 67, 85, 97, 100, 163, 188, 239, 276, 313, 384, 391, 393, 399, 450, 457, 464, 482, 486, 489, 492, 493], "assign": [35, 38, 53, 62, 67, 71, 85, 87, 88, 91, 92, 97, 99, 100, 101, 105, 106, 107, 119, 123, 126, 131, 132, 133, 138, 151, 171, 173, 180, 181, 183, 184, 189, 190, 194, 199, 204, 210, 216, 217, 219, 222, 225, 226, 227, 239, 240, 250, 257, 265, 282, 286, 293, 298, 299, 306, 307, 308, 312, 314, 321, 329, 334, 345, 346, 353, 356, 357, 359, 360, 363, 367, 368, 375, 377, 379, 380, 391, 396, 401, 402, 403, 404, 415, 426, 428, 437, 440, 442, 443, 444, 446, 447, 448, 450, 455, 456, 457, 463, 464, 465, 471, 478, 479, 480, 481, 482, 483, 484, 485, 487, 490, 492, 493, 494, 496, 498], "live": [35, 62, 66, 67, 71, 75, 80, 85, 90, 96, 114, 121, 122, 164, 179, 181, 196, 221, 237, 241, 261, 262, 266, 268, 269, 298, 304, 308, 314, 320, 330, 356, 357, 373, 409, 417, 425, 440, 443, 455, 461, 463, 476, 477, 478, 479, 485, 489], "sole": [35, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 90, 97, 101, 106, 121, 174, 181, 199, 270, 298, 299, 356, 360, 379, 400, 401, 417, 441, 443, 445, 458, 484, 487, 488, 490, 491, 492, 494], "explain": [35, 42, 45, 62, 80, 83, 85, 87, 88, 89, 91, 97, 99, 101, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 125, 137, 164, 184, 189, 207, 227, 239, 249, 257, 259, 261, 276, 307, 312, 359, 360, 384, 391, 403, 404, 408, 439, 445, 454, 455, 459, 468, 469, 470, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "hierarchi": [35, 45, 67, 78, 80, 97, 110, 113, 114, 127, 129, 157, 199, 239, 265, 269, 270, 277, 282, 283, 304, 305, 314, 317, 344, 348, 356, 360, 368, 384, 390, 391, 401, 403, 425, 428, 442, 445, 447, 448, 451, 455, 461, 480, 482, 485, 498], "pylist_check": [35, 38, 91], "todai": [35, 84, 106, 119, 180, 196, 225, 303, 310, 356, 405, 434, 450, 459, 466, 478, 480, 481, 483, 495], "obviou": [35, 62, 80, 90, 98, 107, 113, 114, 116, 190, 199, 250, 310, 314, 323, 338, 363, 364, 377, 394, 405, 428, 476, 477, 481, 482, 488, 493], "solut": [35, 67, 72, 85, 90, 93, 96, 97, 99, 105, 106, 107, 112, 114, 116, 117, 119, 121, 122, 144, 194, 199, 250, 261, 269, 276, 314, 334, 348, 354, 359, 370, 375, 399, 405, 441, 447, 465, 466, 468, 469, 476, 477, 479, 480, 481, 482, 483, 484, 486, 489, 495], "incref": [35, 62], "sizeof": [35, 42, 62, 88, 189, 318, 363, 368, 404, 436], "theori": [35, 67, 96, 195, 333, 334, 441, 491, 492], "down": [35, 67, 74, 80, 84, 88, 97, 98, 99, 107, 113, 114, 117, 121, 138, 146, 148, 151, 164, 173, 190, 192, 207, 226, 250, 259, 261, 282, 290, 298, 308, 312, 323, 324, 331, 333, 334, 343, 348, 353, 354, 357, 368, 386, 391, 399, 403, 409, 422, 455, 459, 467, 470, 477, 479, 480, 484, 488, 492, 493, 494, 495, 496], "cancel": [35, 67, 136, 137, 138, 139, 141, 146, 147, 150, 154, 164, 179, 182, 190, 191, 202, 226, 228, 296, 329, 340, 348, 380, 386, 388, 390, 391, 399, 403, 442, 445, 453, 488, 489, 494, 495, 496], "we": [35, 56, 63, 71, 72, 78, 80, 81, 84, 85, 87, 88, 90, 92, 95, 97, 98, 100, 101, 103, 105, 106, 107, 108, 113, 114, 116, 117, 118, 119, 120, 121, 125, 131, 133, 134, 138, 141, 145, 146, 148, 151, 152, 157, 163, 167, 168, 170, 173, 179, 180, 182, 183, 189, 196, 203, 208, 210, 214, 216, 219, 222, 225, 227, 246, 249, 250, 256, 257, 261, 264, 266, 270, 276, 281, 283, 284, 298, 299, 304, 307, 308, 311, 314, 334, 347, 348, 354, 356, 357, 359, 360, 361, 363, 364, 377, 382, 384, 391, 393, 397, 399, 401, 403, 404, 405, 409, 410, 413, 415, 417, 422, 426, 428, 434, 437, 439, 441, 442, 443, 445, 446, 447, 455, 456, 457, 458, 459, 461, 462, 464, 477, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 493, 494, 495, 496], "aris": [35, 78, 99, 108, 199, 273, 282, 283, 289, 314, 359, 400, 441, 445, 467, 479, 481, 489, 495], "pitfal": [35, 67, 116, 130, 137, 488], "conceiv": [35, 74, 314, 373, 455], "innoc": 35, "flow": [35, 67, 85, 107, 142, 145, 148, 190, 191, 199, 279, 364, 374, 401, 442, 444, 445, 457, 460, 465, 477, 479, 480, 482, 483, 492], "pyobject_": [35, 45, 62, 482], "pynumber_": 35, "pysequence_": 35, "pymapping_": 35, "soon": [35, 96, 104, 116, 117, 119, 120, 142, 148, 151, 207, 242, 246, 298, 308, 312, 360, 375, 377, 399, 426, 442, 443, 457, 458, 480, 482, 491, 496], "term": [35, 67, 72, 78, 85, 92, 99, 101, 105, 107, 121, 127, 134, 151, 190, 199, 223, 227, 235, 249, 257, 265, 272, 273, 277, 282, 289, 290, 304, 307, 311, 314, 323, 359, 361, 365, 377, 381, 384, 400, 414, 416, 417, 422, 429, 442, 446, 447, 455, 465, 481, 483, 484, 486, 490, 491, 493, 495], "ownership": [35, 67, 112, 114, 138, 148, 272, 298, 301, 380, 441, 483, 490], "py_xdecref": [35, 45, 51, 62, 84, 85, 88, 488, 495], "said": [35, 90, 97, 99, 104, 105, 180, 227, 298, 442, 443, 450, 463, 464, 478, 479, 488, 493], "notabl": [35, 67, 92, 99, 112, 149, 204, 281, 298, 299, 348, 356, 406, 415, 440, 469, 478, 479, 480, 481, 482, 483, 484, 486, 498], "pylist_setitem": [35, 38, 56, 85], "pytuple_setitem": [35, 54, 56, 59, 84, 85], "moment": [35, 90, 97, 119, 196, 227, 273, 298, 308, 359, 416, 447, 455, 493], "pytuple_new": [35, 56, 59, 84], "1l": [35, 357, 479, 480, 483, 484], "2l": [35, 477], "grab": [35, 72, 97, 113, 114, 380, 475, 476], "incident": [35, 97, 121, 227, 266, 400, 441, 455], "pysequence_setitem": [35, 38, 53, 56, 62], "pyobject_setitem": [35, 40, 49, 56, 62, 482], "rare": [35, 62, 90, 96, 99, 122, 138, 145, 152, 190, 194, 207, 213, 227, 237, 249, 257, 261, 273, 282, 289, 307, 345, 348, 353, 360, 373, 405, 422, 425, 455, 459, 467, 478, 479, 482, 483, 487, 488, 490], "ii": [35, 67, 85, 91, 173, 189, 357, 422, 441, 442, 460], "friend": [35, 85, 121, 360, 405, 481, 485], "regard": [35, 62, 112, 113, 122, 127, 182, 219, 240, 249, 284, 308, 356, 359, 360, 364, 375, 425, 428, 441, 455, 476, 487], "saner": 35, "set_al": [35, 240], "pyobject_length": [35, 49, 56], "pylong_fromssize_t": [35, 39, 56], "slightli": [35, 80, 87, 90, 91, 92, 97, 107, 113, 114, 118, 120, 121, 182, 188, 199, 210, 244, 250, 266, 273, 307, 308, 309, 312, 322, 323, 333, 357, 360, 399, 405, 409, 410, 447, 451, 455, 466, 477, 479, 480, 481, 482, 483, 484, 488, 489, 491, 492, 494, 496], "fly": [35, 67, 87, 90, 199, 239, 260, 442, 454], "pysequence_getitem": [35, 53, 56, 62, 91], "owner": [35, 81, 85, 105, 108, 110, 114, 194, 226, 298, 308, 311, 347, 358, 373, 441, 443, 467, 493], "realiz": [35, 90, 91, 92, 98, 117, 222, 312, 455, 459, 482, 483], "plumag": [35, 85, 456], "pylist_getitem": [35, 38, 56, 85, 91], "sum_list": 35, "pylist_s": [35, 38, 56, 91, 482], "Not": [35, 62, 67, 71, 78, 89, 92, 97, 101, 114, 120, 121, 133, 141, 150, 151, 180, 197, 199, 201, 226, 227, 228, 240, 241, 256, 257, 259, 262, 265, 285, 286, 289, 293, 311, 333, 343, 346, 347, 360, 377, 401, 403, 414, 417, 422, 426, 428, 437, 441, 443, 446, 450, 456, 480, 481, 482, 483, 485, 487], "pylong_check": [35, 39, 62], "bail": 35, "sum_sequ": 35, "pysequence_length": [35, 53, 56, 91], "role": [35, 78, 99, 171, 357, 428, 485, 489, 495], "integr": [35, 65, 67, 77, 85, 93, 97, 98, 99, 110, 114, 117, 126, 129, 199, 206, 207, 235, 239, 261, 285, 290, 304, 334, 354, 356, 360, 363, 380, 383, 384, 403, 404, 405, 416, 445, 472, 474, 476, 477, 480, 481, 483, 485, 489, 490, 494, 495, 496], "353": [35, 67, 487, 498], "py_ssize_t_max": [35, 47, 55], "largest": [35, 107, 112, 180, 196, 199, 237, 239, 250, 290, 333, 337, 359, 360, 368, 377, 439, 477, 478, 479, 480, 481, 482, 483, 490], "unhandl": [35, 65, 126, 137, 164, 170, 182, 207, 242, 261, 368, 375, 380, 396, 410, 443, 458, 485], "accompani": [35, 204, 286, 351, 353, 443, 478, 489], "claim": [35, 85, 203, 213, 272, 357, 409, 441], "unthread": [35, 477], "loop": [35, 36, 45, 63, 65, 67, 85, 90, 92, 99, 104, 107, 108, 113, 114, 116, 117, 133, 134, 135, 136, 137, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 160, 170, 172, 184, 189, 190, 197, 199, 202, 204, 210, 219, 232, 238, 239, 246, 269, 272, 284, 298, 309, 311, 312, 323, 324, 334, 347, 348, 350, 353, 354, 357, 360, 361, 364, 368, 377, 380, 382, 384, 396, 399, 403, 404, 427, 428, 435, 442, 443, 444, 445, 446, 450, 451, 455, 460, 461, 464, 467, 471, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "preserv": [35, 42, 67, 80, 85, 92, 96, 97, 107, 114, 117, 118, 123, 131, 173, 179, 180, 188, 196, 199, 203, 207, 210, 215, 217, 219, 222, 227, 239, 245, 254, 255, 270, 276, 277, 283, 284, 307, 308, 312, 314, 315, 346, 347, 356, 360, 373, 377, 383, 394, 400, 401, 403, 404, 417, 426, 428, 439, 442, 443, 445, 450, 455, 459, 476, 477, 478, 479, 480, 482, 483, 484, 488, 489, 490, 491, 492, 494, 495, 496], "overwrit": [35, 85, 90, 113, 114, 123, 162, 173, 176, 190, 194, 210, 214, 219, 273, 282, 284, 285, 308, 335, 345, 360, 373, 410, 436, 437, 442, 443, 456, 457, 475, 476, 480, 483, 484, 486, 489, 490, 491], "task": [35, 64, 67, 78, 85, 97, 99, 101, 107, 108, 112, 113, 116, 119, 121, 122, 126, 135, 137, 139, 141, 142, 146, 147, 148, 150, 152, 160, 177, 178, 180, 182, 183, 215, 221, 246, 250, 261, 264, 269, 274, 284, 286, 298, 308, 311, 314, 323, 331, 337, 354, 356, 364, 380, 403, 409, 435, 445, 454, 458, 459, 464, 466, 467, 469, 471, 477, 479, 483, 484, 486, 488, 489, 492, 493, 494, 495, 496], "lose": [35, 42, 106, 116, 180, 196, 199, 225, 227, 254, 257, 276, 284, 286, 333, 334, 356, 364, 477, 484, 489], "remind": [35, 90, 97, 360, 456, 485], "incr_item": 35, "glori": 35, "const_on": 35, "incremented_item": 35, "0l": [35, 85, 363], "pynumber_add": [35, 47, 56], "endors": [35, 441], "illustr": [35, 97, 112, 113, 114, 120, 131, 151, 182, 186, 196, 207, 222, 254, 257, 265, 283, 346, 348, 356, 360, 364, 374, 384, 403, 410, 414, 442, 445, 481, 490], "dispos": [35, 85, 403, 414], "confront": [35, 429, 480], "likewis": [35, 54, 97, 99, 106, 118, 123, 131, 199, 203, 222, 223, 225, 286, 354, 399, 430, 449, 450, 455, 456, 489, 490], "embedd": [35, 67, 258, 298, 473, 495], "oppos": [35, 71, 88, 99, 104, 116, 133, 138, 170, 215, 222, 237, 261, 353, 359, 410, 447, 483, 492], "guess": [35, 96, 101, 171, 180, 197, 207, 214, 220, 223, 259, 265, 270, 281, 291, 323, 341, 410, 422, 449, 455, 464, 471, 480, 489], "shell": [35, 67, 71, 85, 88, 91, 92, 97, 98, 99, 104, 107, 114, 121, 122, 136, 138, 142, 149, 164, 168, 177, 180, 181, 190, 207, 234, 236, 245, 269, 270, 277, 287, 299, 303, 307, 308, 309, 324, 328, 347, 356, 366, 368, 369, 377, 383, 384, 399, 403, 414, 415, 420, 453, 454, 462, 463, 464, 465, 466, 468, 470, 471, 474, 475, 476, 477, 479, 481, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "fallback": [35, 67, 138, 176, 181, 197, 231, 244, 314, 347, 368, 373, 377, 391, 421, 443, 445, 447, 487, 489, 495], "front": [35, 38, 71, 108, 116, 173, 182, 203, 215, 222, 261, 272, 276, 311, 317, 405, 410, 415, 422, 438, 443, 445, 457, 470, 477, 480, 482, 484], "steer": [35, 124, 399, 478, 481, 488, 489], "getpath": 35, "tend": [35, 90, 97, 112, 162, 203, 240, 320, 323, 359, 455, 486], "specialbuild": [35, 471], "remaind": [35, 47, 87, 110, 116, 168, 196, 199, 222, 239, 272, 276, 283, 290, 307, 309, 311, 334, 360, 381, 384, 403, 445, 459, 464, 483, 494], "pydebug": [35, 108, 368, 471, 480, 487, 491], "_debug": 35, "doubli": [35, 62, 97, 484], "pyiter_check": [36, 56, 62], "pyiter_next": [36, 56, 62], "pyaiter_check": [36, 56], "asynciter": [36, 49, 174, 360, 401, 492], "pyobject_getit": [36, 49, 54, 56, 62], "pysendresult": [36, 62], "enum": [36, 42, 67, 109, 131, 176, 195, 255, 269, 270, 277, 323, 326, 334, 348, 357, 360, 400, 443, 456, 490], "pyiter_send": [36, 56, 62, 487], "presult": 36, "pygen_return": 36, "pygen_next": 36, "pygen_error": 36, "__getitem__": [37, 40, 53, 62, 63, 67, 92, 99, 110, 114, 118, 127, 173, 174, 189, 210, 217, 219, 225, 232, 239, 286, 298, 306, 334, 360, 361, 401, 404, 405, 422, 425, 427, 428, 442, 445, 467, 479, 480, 481, 485, 488, 489, 493, 495], "pyseqiter_typ": [37, 56], "pyseqiter_new": [37, 56], "pyseqiter_check": 37, "seq": [37, 63, 97, 173, 234, 239, 276, 306, 333, 360, 477, 481, 488, 489], "subscript": [37, 62, 67, 99, 114, 173, 189, 227, 261, 279, 360, 401, 443, 451, 455, 464, 470, 480, 483, 487, 488, 496], "pycalliter_typ": [37, 56], "pycalliter_new": [37, 56], "pycalliter_check": 37, "pylist_typ": [38, 56, 88], "pylist_checkexact": 38, "pylist_get_s": 38, "pylist_get_item": [38, 56], "pylist_set_item": [38, 487], "pylist_insert": [38, 56], "pylist_append": [38, 56], "pylist_getslic": [38, 56], "pylist_setslic": [38, 56], "itemlist": 38, "pylist_sort": [38, 56], "sort": [38, 67, 80, 88, 89, 92, 96, 98, 99, 101, 107, 109, 120, 123, 131, 164, 173, 180, 186, 189, 195, 197, 199, 203, 207, 222, 239, 240, 245, 246, 250, 262, 266, 270, 274, 276, 277, 281, 286, 298, 306, 307, 308, 311, 319, 322, 323, 331, 333, 334, 343, 351, 356, 359, 360, 373, 377, 397, 399, 403, 410, 422, 425, 428, 437, 443, 445, 455, 456, 457, 465, 467, 476, 479, 480, 481, 482, 483, 484, 485, 486, 489, 491, 492, 494, 495, 496], "pylist_revers": [38, 56], "pylist_astupl": [38, 56], "pylong_a": 39, "distinguish": [39, 62, 67, 71, 78, 80, 85, 99, 108, 133, 167, 174, 190, 200, 204, 207, 211, 239, 257, 270, 283, 290, 329, 357, 370, 391, 401, 415, 439, 443, 445, 447, 458, 464, 476, 478, 479, 484, 487, 490, 491], "pylongobject": [39, 56, 108], "pylong_typ": [39, 56], "pylong_checkexact": 39, "256": [39, 42, 63, 99, 111, 171, 186, 190, 199, 239, 249, 285, 341, 357, 360, 373, 443, 464, 481, 482, 495, 496], "pylong_fromunsignedlong": [39, 56], "pylong_fromsize_t": [39, 56], "pylong_fromlonglong": [39, 56], "pylong_fromunsignedlonglong": [39, 56], "pylong_fromdoubl": [39, 56, 496], "pylong_fromstr": [39, 56], "radix": [39, 199, 239, 281, 368, 450], "decim": [39, 58, 63, 67, 90, 97, 116, 119, 167, 171, 173, 180, 191, 196, 235, 239, 240, 254, 269, 274, 276, 277, 281, 283, 290, 305, 307, 323, 333, 334, 359, 360, 361, 368, 380, 381, 393, 394, 402, 403, 434, 443, 445, 450, 459, 460, 461, 464, 470, 471, 477, 482, 483, 484, 486, 487, 488, 495, 496, 498], "digit": [39, 58, 63, 75, 90, 97, 112, 116, 117, 119, 128, 154, 156, 159, 167, 171, 173, 186, 191, 196, 199, 207, 235, 237, 239, 249, 251, 258, 274, 281, 283, 290, 303, 308, 334, 336, 341, 357, 360, 361, 368, 377, 381, 382, 384, 393, 402, 403, 409, 410, 413, 428, 439, 441, 450, 459, 464, 471, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496], "to_byt": [39, 360], "from_byt": [39, 360], "pylong_fromunicodeobject": [39, 487], "pylong_fromvoidptr": [39, 56], "pylong_asvoidptr": [39, 56], "__int__": [39, 62, 235, 239, 401, 404, 443, 482, 484, 487, 488, 494, 495], "pylong_aslongandoverflow": [39, 56, 484, 489], "long_min": 39, "pylong_aslonglong": [39, 56], "pylong_aslonglongandoverflow": [39, 56, 484, 489], "llong_max": 39, "llong_min": 39, "pylong_asssize_t": [39, 56], "pylong": [39, 486], "pylong_asunsignedlong": [39, 56], "pylong_assize_t": [39, 56], "pylong_asunsignedlonglong": [39, 56, 486], "pylong_asunsignedlongmask": [39, 56], "reduct": [39, 67, 90, 185, 313, 360, 490], "modulo": [39, 114, 199, 227, 239, 306, 348, 360, 391, 443, 445, 461, 467, 480, 484, 489, 495], "pylong_asunsignedlonglongmask": [39, 56], "ullong_max": 39, "pylong_asdoubl": [39, 56], "assur": [39, 88, 97, 99, 167, 240, 290, 298, 393, 443, 484, 486, 489], "pyobject_delitem": [40, 49, 56, 62, 480], "pymapping_check": [40, 56, 62], "pymapping_s": [40, 56, 62], "pymapping_length": [40, 56], "pymapping_getitemstr": [40, 56], "pymapping_setitemstr": [40, 56], "pymapping_delitem": 40, "pymapping_delitemstr": 40, "pymapping_haskei": [40, 56], "pymapping_haskeystr": [40, 56], "pymapping_valu": [40, 56, 494], "pymapping_item": [40, 56, 494], "unmarshal": [41, 289, 434, 480, 482, 493], "py_marshal_vers": [41, 488], "pymarshal_writelongtofil": [41, 488], "pymarshal_writeobjecttofil": [41, 488], "pymarshal_writeobjecttostr": [41, 488], "pymarshal_readlongfromfil": 41, "pymarshal_readshortfromfil": 41, "pymarshal_readobjectfromfil": 41, "pymarshal_readlastobjectfromfil": 41, "aggress": [41, 90, 360, 404, 482], "pymarshal_readobjectfromstr": [41, 488], "aspect": [42, 84, 85, 92, 106, 114, 116, 120, 194, 196, 207, 250, 265, 283, 308, 333, 351, 409, 443, 464, 489, 493], "prealloc": 42, "room": [42, 54, 359, 404, 449, 461, 485], "polici": [42, 56, 67, 92, 114, 122, 135, 138, 143, 208, 210, 214, 215, 217, 219, 220, 221, 227, 239, 257, 300, 308, 351, 354, 357, 414, 471, 476, 478, 481, 484, 487, 491, 492, 493], "adapt": [42, 67, 97, 114, 133, 154, 189, 199, 204, 239, 244, 282, 312, 313, 347, 353, 357, 384, 399, 477, 478, 482, 484, 486, 487, 493], "peculiar": [42, 74, 97, 138, 270, 308, 455], "tradeoff": 42, "deleg": [42, 62, 67, 113, 114, 152, 239, 240, 248, 282, 283, 284, 290, 304, 314, 339, 400, 403, 405, 443, 445, 447, 485, 488, 489, 493, 495, 496, 498], "corrupt": [42, 58, 105, 119, 159, 190, 197, 226, 229, 257, 285, 286, 298, 314, 331, 345, 356, 360, 373, 461, 476, 494, 495], "calloc": [42, 492], "consequ": [42, 62, 74, 85, 90, 97, 160, 174, 180, 250, 270, 298, 308, 329, 348, 353, 360, 368, 428, 443, 445, 449, 450, 455, 458, 459, 482, 484, 485, 489, 490, 491, 492, 494], "bufsiz": [42, 85, 131, 138, 310, 353, 364, 373, 426, 427, 439, 481, 495], "exclus": [42, 47, 62, 67, 78, 97, 116, 117, 121, 129, 150, 162, 163, 190, 199, 229, 239, 262, 273, 277, 284, 285, 286, 306, 307, 308, 334, 356, 359, 360, 373, 395, 397, 418, 437, 441, 443, 445, 455, 483, 490, 491, 492, 495, 496], "accur": [42, 189, 221, 259, 290, 307, 323, 368, 373, 381, 382, 384, 397, 416, 437, 481, 483, 484, 489, 491, 493, 494, 495], "footprint": [42, 104, 241, 471, 490, 493, 495], "compact": [42, 97, 99, 116, 119, 133, 164, 168, 203, 211, 212, 277, 314, 322, 332, 363, 396, 445, 455, 490, 491, 493], "procedur": [42, 67, 71, 84, 92, 107, 132, 164, 171, 189, 239, 309, 323, 351, 362, 377, 399, 433, 434, 451, 456, 466, 478, 479, 482, 489], "pythonmalloc": [42, 67, 201, 470, 471], "shutdown": [42, 99, 112, 114, 117, 138, 147, 153, 179, 226, 227, 241, 262, 282, 284, 298, 299, 348, 353, 354, 357, 375, 380, 403, 417, 420, 443, 445, 470, 483, 489, 491, 492, 494, 496], "pymemallocatordomain": 42, "pyobject_malloc": [42, 56, 108, 480, 482, 491, 493], "pymem_malloc": [42, 56, 63, 65, 480, 482, 491, 493], "nelem": 42, "elsiz": 42, "model": [42, 59, 61, 67, 96, 97, 99, 105, 109, 129, 138, 182, 196, 199, 208, 210, 219, 269, 288, 298, 308, 321, 333, 341, 351, 357, 359, 380, 383, 399, 410, 426, 427, 430, 448, 476, 477, 479, 480, 481, 482, 488, 489, 491, 492, 493, 494, 495, 498], "ansi": [42, 67, 99, 158, 189, 281, 308, 368, 381, 476, 477, 490, 493, 495], "pymem_calloc": [42, 56, 492], "pymem_realloc": [42, 56, 65, 480, 482, 491], "pymem_new": [42, 63, 478], "pymem_res": 42, "reassign": [42, 88, 181, 225, 322, 364, 401, 404, 417, 495], "pymem_del": [42, 478], "intercept": [42, 114, 151, 359, 368, 493], "pyobject_calloc": [42, 56, 492], "pyobject_realloc": [42, 56, 480, 482], "pyobject_fre": [42, 56, 62, 480, 482, 493], "pymalloc_debug": [42, 470], "malloc_debug": [42, 470], "legend": 42, "pymemallocatorex": [42, 492], "new_siz": [42, 488], "pymemalloc": [42, 492], "renam": [42, 62, 71, 80, 88, 96, 114, 121, 123, 132, 155, 173, 180, 227, 237, 261, 262, 284, 286, 308, 311, 326, 343, 347, 358, 396, 403, 404, 436, 454, 455, 467, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493], "pymem_domain_raw": [42, 470], "pymem_domain_mem": [42, 470, 493], "pymem_domain_obj": [42, 470, 493], "reinstal": [42, 95, 121, 476], "contract": [42, 261, 360, 441], "ones": [42, 56, 63, 71, 85, 87, 97, 99, 101, 106, 114, 116, 121, 123, 171, 173, 180, 203, 214, 244, 254, 257, 291, 307, 334, 345, 353, 356, 360, 364, 373, 377, 381, 391, 404, 410, 415, 422, 447, 458, 464, 476, 477, 478, 479, 480, 481, 484, 486, 487, 490, 491, 492, 493], "impos": [42, 209, 277, 308, 309, 314, 336, 337, 360, 401, 449, 470], "substitut": [42, 67, 71, 90, 97, 99, 113, 114, 116, 123, 144, 156, 171, 173, 177, 180, 191, 196, 199, 207, 265, 276, 287, 289, 307, 308, 323, 334, 335, 336, 356, 360, 361, 374, 393, 401, 418, 441, 442, 443, 445, 451, 456, 460, 461, 463, 467, 476, 480, 482, 483, 484, 489, 491, 492, 498], "setup": [42, 67, 71, 72, 75, 76, 77, 78, 81, 83, 85, 88, 104, 114, 120, 121, 182, 206, 207, 261, 311, 354, 357, 370, 377, 382, 399, 403, 404, 405, 468, 470, 471, 476, 477, 478, 479, 480, 482, 483, 484, 488, 489, 490, 493, 495], "recogniz": [42, 90, 174, 199, 239], "pattern": [42, 62, 67, 73, 80, 88, 97, 105, 118, 119, 136, 155, 157, 173, 176, 182, 191, 202, 203, 204, 233, 236, 240, 261, 262, 269, 276, 279, 282, 290, 296, 298, 299, 303, 307, 308, 311, 312, 323, 331, 333, 334, 347, 360, 361, 377, 384, 386, 397, 401, 403, 404, 405, 417, 444, 445, 446, 450, 456, 458, 460, 465, 471, 476, 478, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494], "0xcd": 42, "pymem_cleanbyt": 42, "0xdd": 42, "pymem_deadbyt": 42, "surround": [42, 91, 107, 116, 180, 188, 203, 239, 258, 261, 281, 361, 364, 389, 414, 442, 444, 445, 446, 450, 457, 465, 467, 471, 477, 482, 483, 484, 485, 486, 493], "0xfd": 42, "pymem_forbiddenbyt": 42, "underflow": [42, 199, 201, 471, 493], "treatment": [42, 49, 71, 114, 208, 298, 359, 409, 477, 485], "easier": [42, 72, 74, 75, 77, 80, 88, 90, 96, 99, 104, 107, 108, 110, 112, 116, 118, 121, 122, 126, 134, 152, 173, 174, 179, 182, 188, 207, 220, 265, 267, 274, 284, 308, 323, 328, 334, 360, 361, 373, 377, 389, 403, 404, 405, 409, 422, 449, 455, 456, 457, 459, 464, 465, 466, 467, 473, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 489, 490, 491, 492, 493], "excess": [42, 97, 121, 123, 133, 145, 159, 189, 199, 256, 282, 336, 381, 442, 445, 456, 487], "overwritten": [42, 81, 114, 121, 257, 284, 286, 311, 323, 347, 368, 401, 442, 484, 490], "pymem_debug_serialno": 42, "excel": [42, 97, 119, 188, 207, 214, 384, 399, 474, 480, 481, 485], "breakpoint": [42, 67, 91, 134, 155, 157, 160, 198, 239, 261, 312, 368, 470, 482, 487, 489], "captur": [42, 67, 104, 107, 114, 133, 182, 189, 196, 207, 280, 282, 308, 333, 334, 357, 361, 364, 368, 372, 373, 377, 396, 401, 415, 444, 456, 481, 487, 488, 490, 491, 492, 494], "instant": [42, 67, 198, 399], "bumpserialno": 42, "obmalloc": [42, 108, 478, 480, 482, 491, 496], "intact": [42, 114, 180, 196, 217, 219, 222, 232, 284, 361, 422, 481], "ve": [42, 88, 101, 106, 107, 110, 111, 114, 116, 117, 119, 121, 125, 151, 165, 266, 286, 307, 311, 356, 384, 454, 457, 461, 465, 468, 477, 479, 480, 481, 483, 484, 486, 491], "provok": 42, "0xcb": [42, 493], "0xdb": [42, 493], "0xfb": [42, 493], "crt": [42, 67, 297, 357, 484, 491], "512": [42, 143, 186, 249, 308, 343, 373, 439, 461, 482, 489, 493, 495], "kib": [42, 126, 148, 281, 285, 308, 347, 380, 397, 495], "mib": [42, 249, 285, 298, 347, 488, 495], "virtualalloc": [42, 491], "virtualfre": 42, "mmap": [42, 67, 155, 227, 269, 275, 477, 483, 488, 489, 492, 493], "munmap": 42, "pyobjectarenaalloc": 42, "pytracemalloc_track": [42, 494], "uintptr_t": 42, "pytracemalloc_untrack": [42, 494], "untrack": [42, 88, 486], "rewritten": [42, 147, 207, 208, 249, 298, 451, 477, 478, 479, 480, 483, 484, 486, 489, 490, 491, 493, 494, 495], "inde": [42, 88, 90, 98, 117, 149, 209, 357], "label": [42, 67, 90, 92, 93, 99, 106, 107, 171, 202, 204, 261, 286, 296, 307, 333, 346, 357, 361, 383, 384, 390, 401, 464, 476, 479, 480, 489, 491, 494], "buf1": 42, "buf2": 42, "buf3": 42, "aim": [42, 84, 87, 90, 93, 111, 119, 120, 147, 285, 296, 359, 368, 401, 428, 476, 479, 481, 482, 491, 495], "pymemoryview_fromobject": [43, 56], "discret": [43, 187, 292, 354, 359, 495], "pybuf_read": 43, "pymemoryview_frommemori": [43, 56, 490], "pymemoryview_getcontigu": [43, 56], "buffertyp": 43, "ortran": 43, "pymemoryview_check": 43, "pymemoryview_get_buff": 43, "mview": 43, "pymemoryview_get_bas": 43, "pymethod_new": 44, "pyinstancemethod_typ": 44, "pyinstancemethod_check": 44, "pyinstancemethod_new": 44, "pyinstancemethod_funct": 44, "im": [44, 97, 104, 360], "pyinstancemethod_get_funct": 44, "pymethod_typ": [44, 105], "methodtyp": [44, 105, 400], "pymethod_check": 44, "pymethod_funct": 44, "pymethod_get_funct": 44, "pymethod_self": 44, "pymethod_get_self": 44, "pymodule_typ": [45, 56], "moduletyp": [45, 265, 267, 400, 443, 447, 480, 492], "pymodule_check": 45, "pymodule_checkexact": 45, "pymodule_newobject": [45, 56], "__doc__": [45, 62, 87, 92, 96, 99, 105, 106, 108, 170, 173, 207, 225, 239, 240, 270, 304, 328, 335, 338, 400, 442, 443, 450, 455, 456, 465, 478, 479, 480, 485, 487, 489, 491, 492, 496], "__package__": [45, 108, 239, 265, 339, 400, 447, 465, 483, 487, 490, 491, 493], "pymodule_new": [45, 56], "pymodule_getdict": [45, 56], "__dict__": [45, 49, 62, 97, 100, 105, 112, 114, 127, 157, 161, 207, 239, 240, 265, 270, 282, 284, 312, 314, 323, 360, 400, 434, 442, 443, 447, 455, 478, 479, 484, 485, 487, 492, 493], "pymodule_": 45, "pymodule_getnameobject": [45, 56], "pymodule_getnam": [45, 56], "m_size": [45, 88, 112, 496], "pymodule_getdef": [45, 56], "pymodule_getfilenameobject": [45, 56], "pymodule_getfilenam": [45, 56], "pymoduledef_bas": [45, 56], "m_base": 45, "m_doc": [45, 88], "m_free": [45, 112, 496], "3121": [45, 485], "m_method": 45, "pymoduledef_slot": 45, "m_slot": 45, "m_reload": 45, "m_travers": [45, 112, 496], "py_mod_exec": [45, 496], "m_clear": [45, 112, 496], "collector": [45, 50, 62, 67, 85, 88, 90, 97, 99, 107, 112, 228, 269, 298, 307, 330, 368, 377, 417, 426, 443, 471, 477, 479, 482, 483, 484, 486, 487, 490, 491, 494, 496], "freefunc": [45, 62, 87], "pymodule_create2": [45, 56], "module_api_vers": 45, "python_api_vers": [45, 480], "pymodule_addobjectref": [45, 56, 487], "split": [45, 63, 67, 71, 74, 80, 90, 96, 97, 114, 118, 131, 154, 168, 171, 180, 199, 203, 204, 210, 214, 216, 222, 227, 242, 244, 262, 276, 296, 306, 307, 308, 309, 312, 318, 322, 333, 334, 336, 346, 351, 356, 357, 360, 361, 364, 379, 393, 401, 403, 404, 409, 414, 422, 430, 450, 454, 455, 461, 465, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496], "__new__": [45, 62, 67, 88, 92, 97, 105, 132, 155, 217, 225, 227, 239, 289, 293, 311, 314, 353, 397, 400, 404, 443, 491, 493, 495], "__init__": [45, 62, 67, 75, 78, 80, 88, 90, 91, 92, 97, 99, 105, 113, 114, 117, 118, 125, 131, 134, 140, 145, 152, 161, 173, 174, 180, 182, 185, 188, 189, 196, 197, 203, 208, 227, 228, 239, 240, 252, 255, 259, 265, 266, 267, 268, 276, 277, 282, 283, 284, 296, 298, 314, 317, 323, 330, 335, 348, 356, 361, 373, 377, 380, 384, 397, 400, 401, 403, 404, 405, 414, 417, 422, 425, 429, 437, 443, 447, 455, 456, 465, 467, 477, 478, 479, 480, 482, 483, 487, 488, 490, 493, 495], "pyinit_modulenam": [45, 83], "pymoduledef_init": [45, 56], "py_mod_cr": 45, "create_modul": [45, 265, 438, 447, 487, 492, 493], "modulespec": [45, 67, 99, 265, 317, 339, 368, 400, 447], "451": [45, 67, 99, 173, 255, 265, 317, 339, 368, 447, 487, 492], "symlink": [45, 71, 81, 155, 176, 245, 272, 307, 308, 309, 311, 326, 347, 373, 414, 465, 474, 475, 481, 483, 487, 489, 490, 491, 495], "exec_modul": [45, 112, 265, 438, 447, 487, 491, 492, 493], "489": [45, 67, 83, 85, 265, 496], "hood": [45, 113, 114, 116, 377, 404, 405, 482, 483, 489], "pymodule_execdef": [45, 56, 492], "pymodule_fromdefandspec2": [45, 56, 492], "pymodule_setdocstr": [45, 56], "pymodule_addfunct": [45, 56], "lack": [45, 46, 90, 92, 97, 111, 173, 188, 227, 230, 261, 265, 298, 308, 309, 331, 351, 357, 363, 437, 444, 445, 455, 476, 477, 478, 483, 485, 488, 490, 491, 492, 494], "add_spam": 45, "pymodule_addobject": [45, 56, 85, 88, 477, 487], "easi": [45, 62, 67, 72, 74, 85, 90, 95, 96, 97, 98, 101, 104, 111, 112, 114, 116, 117, 118, 120, 121, 122, 131, 149, 164, 173, 180, 182, 188, 196, 199, 204, 207, 208, 218, 222, 240, 242, 283, 307, 308, 314, 333, 346, 353, 357, 359, 360, 373, 379, 403, 404, 405, 422, 426, 436, 443, 445, 454, 455, 456, 457, 459, 460, 478, 479, 481, 482, 483, 484, 487, 489, 490, 491, 492, 493, 494, 498], "stole": 45, "pymodule_addintconst": [45, 56, 477], "pymodule_addstringconst": [45, 56, 477], "pymodule_addintmacro": [45, 483], "af_inet": [45, 114, 117, 138, 152, 298, 353, 354, 357, 377, 483], "pymodule_addstringmacro": [45, 483], "pymodule_addtyp": [45, 56, 496], "tp_name": [45, 60, 62, 87, 88], "pystate_findmodul": [45, 56], "pystate_addmodul": [45, 56], "beforehand": [45, 447], "unnecessari": [45, 85, 92, 97, 113, 131, 145, 160, 241, 286, 298, 299, 303, 360, 368, 397, 401, 405, 409, 425, 451, 478, 479, 481, 484, 492, 495], "harmless": [45, 85, 207, 391, 441], "pystate_removemodul": [45, 56], "suffici": [46, 62, 80, 85, 91, 110, 111, 112, 113, 126, 133, 152, 171, 196, 197, 199, 207, 239, 290, 308, 327, 329, 341, 357, 360, 380, 403, 405, 414, 418, 430, 447, 451, 457, 475, 476, 489, 490, 493, 494], "pynone_check": 46, "pynumber_check": [47, 56, 495], "o1": [47, 49, 53, 90, 194], "o2": [47, 49, 53, 90, 194, 321, 417], "pynumber_subtract": [47, 54, 56], "subtract": [47, 154, 173, 196, 199, 274, 285, 290, 306, 323, 359, 360, 399, 434, 445, 477, 480, 483, 484, 488, 489, 494], "pynumber_multipli": [47, 56], "multipli": [47, 84, 88, 154, 179, 189, 196, 199, 213, 276, 284, 323, 333, 360, 361, 368, 434, 445, 459, 477, 480, 481, 483, 487, 488, 489], "pynumber_matrixmultipli": [47, 56, 492], "matrix": [47, 67, 97, 163, 239, 306, 399, 417, 441, 445, 457, 478, 495], "pynumber_floordivid": [47, 56], "floor": [47, 97, 99, 179, 196, 199, 207, 235, 239, 290, 304, 360, 399, 443, 445, 464, 479, 483, 495, 496], "divid": [47, 96, 104, 116, 154, 180, 196, 199, 204, 207, 208, 239, 261, 290, 299, 311, 323, 333, 359, 382, 390, 434, 450, 458, 459, 483, 488, 489, 490, 491, 495], "pynumber_truedivid": [47, 56], "approxim": [47, 63, 67, 90, 91, 97, 167, 171, 173, 179, 190, 194, 199, 203, 207, 216, 227, 235, 261, 290, 295, 298, 331, 341, 359, 363, 364, 377, 396, 399, 403, 443, 445, 447, 459, 461, 476, 483, 484, 494], "mathemat": [47, 67, 90, 99, 107, 116, 173, 196, 199, 269, 306, 333, 360, 443, 445, 457, 459, 460, 467, 481, 483, 492], "pynumber_remaind": [47, 56], "pynumber_divmod": [47, 56], "divmod": [47, 97, 196, 199, 239, 276, 304, 360, 443, 445, 459, 465, 495], "pynumber_pow": [47, 56], "o3": [47, 83, 84], "pow": [47, 97, 101, 133, 179, 182, 239, 276, 290, 298, 304, 306, 360, 435, 443, 445, 446, 465, 479, 488, 489, 495], "pynumber_neg": [47, 56], "pynumber_posit": [47, 56], "pynumber_absolut": [47, 56], "ab": [47, 62, 107, 116, 162, 167, 173, 196, 199, 203, 239, 248, 276, 285, 290, 304, 306, 307, 324, 334, 360, 396, 397, 399, 432, 441, 443, 445, 450, 455, 457, 465, 477, 480, 488, 494], "pynumber_invert": [47, 56], "bitwis": [47, 67, 87, 104, 106, 107, 116, 190, 191, 207, 225, 229, 239, 297, 306, 308, 334, 344, 353, 356, 421, 443, 446, 448, 480, 483, 484, 493], "pynumber_lshift": [47, 56], "shift": [47, 67, 190, 191, 196, 199, 261, 298, 306, 308, 360, 391, 422, 443, 448, 457, 477, 479, 481, 483, 484, 488, 490], "pynumber_rshift": [47, 56], "pynumber_and": [47, 54, 56], "pynumber_xor": [47, 54, 56], "pynumber_or": [47, 54, 56], "pynumber_inplaceadd": [47, 56], "pynumber_inplacesubtract": [47, 54, 56], "pynumber_inplacemultipli": [47, 56], "pynumber_inplacematrixmultipli": [47, 56, 492], "pynumber_inplacefloordivid": [47, 56], "pynumber_inplacetruedivid": [47, 56], "pynumber_inplaceremaind": [47, 56], "pynumber_inplacepow": [47, 56], "pynumber_inplacelshift": [47, 56], "pynumber_inplacershift": [47, 56], "pynumber_inplaceand": [47, 54, 56], "pynumber_inplacexor": [47, 54, 56], "pynumber_inplaceor": [47, 54, 56], "pynumber_long": [47, 56, 486, 495], "pynumber_float": [47, 56, 495], "pynumber_index": [47, 56, 91, 482, 487], "pynumber_tobas": [47, 56], "marker": [47, 67, 119, 128, 162, 171, 183, 204, 207, 239, 270, 273, 285, 312, 314, 356, 357, 392, 401, 415, 456, 471, 487, 490, 493, 494], "pynumber_asssize_t": [47, 56], "clip": [47, 55, 190, 451], "py_ssize_t_min": [47, 55], "pyindex_check": [47, 56, 496], "nb_index": [47, 62, 482], "tp_as_numb": [47, 62, 87, 496], "eas": [48, 62, 67, 90, 137, 345, 360, 380, 403, 451, 477, 490, 492, 494], "port": [48, 63, 67, 71, 90, 104, 109, 114, 117, 120, 138, 148, 152, 155, 180, 237, 256, 257, 259, 261, 262, 272, 283, 284, 298, 303, 308, 320, 328, 348, 350, 351, 353, 354, 356, 357, 358, 374, 377, 409, 410, 422, 434, 435, 447, 459, 478, 479, 498], "act": [48, 62, 66, 80, 87, 97, 107, 113, 127, 133, 150, 157, 173, 189, 194, 196, 204, 210, 215, 219, 222, 239, 240, 258, 262, 265, 268, 274, 282, 308, 324, 326, 356, 360, 368, 380, 390, 400, 401, 404, 441, 443, 450, 456, 464, 476, 477, 478, 483, 487, 490, 491, 495, 496], "pyobject_ascharbuff": [48, 56], "buffer_len": 48, "pyobject_asreadbuff": [48, 56], "pyobject_checkreadbuff": [48, 56], "pyobject_aswritebuff": [48, 56], "py_notimpl": [49, 62, 63, 87, 478], "notimpl": [49, 67, 106, 127, 181, 227, 240, 265, 304, 314, 400, 404, 445, 465, 484, 485, 487, 491, 496], "py_return_notimpl": 49, "pyobject_print": [49, 54, 85], "fp": [49, 58, 65, 90, 107, 131, 164, 180, 199, 201, 210, 214, 215, 218, 221, 237, 244, 256, 264, 277, 291, 308, 319, 370, 375, 394, 397, 410, 441, 481], "pyobject_hasattr": [49, 56], "attr_nam": [49, 377, 479], "hasattr": [49, 99, 105, 114, 120, 239, 240, 270, 298, 329, 335, 360, 368, 373, 382, 401, 403, 404, 414, 428, 442, 443, 447, 465, 480, 483, 489, 491, 494], "__getattr__": [49, 62, 87, 97, 105, 155, 189, 225, 230, 239, 270, 314, 338, 360, 400, 404, 443, 445, 462, 479, 483, 489, 490, 491, 494], "__getattribute__": [49, 62, 92, 99, 105, 239, 270, 314, 443, 445, 479, 483, 489, 494], "pyobject_getattr": [49, 56, 62], "pyobject_hasattrstr": [49, 56], "pyobject_getattrstr": [49, 56, 84, 85, 91, 488], "pyobject_genericgetattr": [49, 56, 62, 105], "getter": [49, 56, 57, 67, 88, 105, 127, 180, 239, 360, 380, 410, 483, 491, 492], "tp_getattro": [49, 62, 87], "mro": [49, 67, 97, 99, 127, 194, 211, 360, 400, 455, 494], "outlin": [49, 71, 113, 114, 127, 147, 151, 180, 258, 357, 399, 443], "pyobject_setattr": [49, 56, 62], "favour": [49, 53, 265, 270, 482, 490, 493, 494, 496], "pyobject_delattr": 49, "plan": [49, 80, 117, 124, 145, 206, 314, 399, 401, 418, 477, 481, 482, 483, 484, 485, 487, 488, 489, 491], "pyobject_setattrstr": [49, 56, 91], "pyobject_delattrstr": 49, "pyobject_genericsetattr": [49, 56, 62], "setter": [49, 56, 57, 67, 88, 105, 127, 239, 240, 360, 380, 404, 410, 483, 491], "tp_setattro": [49, 62, 87], "del": [49, 53, 57, 67, 85, 88, 97, 100, 105, 112, 133, 157, 173, 191, 204, 210, 219, 239, 241, 244, 250, 261, 270, 286, 298, 299, 306, 307, 308, 314, 345, 360, 404, 417, 442, 443, 444, 445, 446, 447, 448, 450, 455, 456, 460, 467, 477, 478, 480, 482, 483, 484, 489], "pyobject_genericgetdict": [49, 56, 62], "pyobject_genericsetdict": [49, 56], "_pyobject_getdictptr": 49, "pyobject_richcompar": [49, 56, 62, 87], "opid": 49, "py_lt": [49, 62, 63, 87], "py_l": [49, 62, 63, 87], "py_eq": [49, 62, 63, 87], "py_n": [49, 62, 63, 87], "py_gt": [49, 62, 63, 87], "py_g": [49, 62, 63, 87], "pyobject_richcomparebool": [49, 54, 56, 87], "pyobject_format": [49, 56, 204], "format_spec": [49, 133, 239, 361, 443, 450, 483], "pyobject_repr": [49, 54, 56, 62, 63, 491, 492], "pyobject_ascii": [49, 56], "pyobject_str": [49, 56, 62, 63, 491], "pyobject_byt": [49, 56], "pyobject_issubclass": [49, 56, 60, 492], "cl": [49, 57, 62, 89, 97, 105, 106, 127, 133, 174, 194, 217, 225, 227, 239, 240, 270, 277, 311, 312, 314, 356, 377, 397, 401, 403, 442, 443, 446, 451, 458, 479, 481, 483, 488, 489, 493, 494], "against": [49, 56, 71, 80, 84, 85, 87, 88, 90, 97, 98, 99, 106, 114, 116, 123, 131, 133, 138, 148, 154, 186, 189, 194, 203, 204, 207, 249, 266, 270, 289, 293, 307, 308, 311, 318, 320, 322, 323, 326, 329, 334, 339, 341, 346, 348, 357, 358, 360, 373, 377, 380, 384, 390, 399, 400, 401, 403, 404, 405, 415, 424, 426, 427, 428, 429, 434, 435, 436, 441, 442, 443, 447, 456, 465, 470, 471, 477, 478, 479, 480, 481, 482, 487, 488, 489, 491, 492, 493, 494, 495], "__subclasscheck__": [49, 60, 127, 404, 443], "3119": [49, 67, 127, 174, 443, 485, 498], "indirect": [49, 71, 85, 97, 239, 322, 441, 443, 445, 447], "__mro__": [49, 62, 97, 105, 127, 211, 239, 360, 401, 443], "__bases__": [49, 62, 88, 217, 239, 314, 360, 443, 480], "pyobject_isinst": [49, 56, 62, 492], "inst": [49, 105, 451, 458], "__instancecheck__": [49, 404, 443], "__class__": [49, 92, 97, 99, 105, 106, 112, 196, 225, 239, 265, 314, 360, 404, 415, 443, 455, 479, 480, 483, 493], "pyobject_hash": [49, 54, 56, 62, 488], "pyobject_hashnotimpl": [49, 56, 62, 483], "pyobject_istru": [49, 54, 56], "pyobject_not": [49, 56], "pyobject_typ": [49, 56], "realli": [49, 76, 78, 83, 84, 87, 89, 90, 92, 97, 100, 104, 107, 114, 116, 117, 119, 121, 125, 152, 196, 204, 214, 217, 219, 286, 298, 303, 308, 343, 360, 368, 380, 381, 399, 402, 428, 443, 450, 451, 454, 456, 457, 459, 461, 477, 478, 479, 480, 481, 482, 485, 493], "py_typ": [49, 57, 60, 62, 87, 88, 112, 483, 488, 495, 496], "pyobject_typecheck": [49, 87], "pyobject_s": [49, 56, 62], "pyobject_lengthhint": [49, 491], "defaultvalu": 49, "estim": [49, 188, 199, 303, 306, 333, 359, 377, 443], "__length_hint__": [49, 306, 443, 491], "length_hint": [49, 306, 443, 491], "pyobject_dir": [49, 56], "dir": [49, 67, 71, 72, 73, 74, 80, 90, 92, 97, 106, 121, 123, 125, 176, 197, 202, 224, 225, 237, 239, 281, 307, 308, 309, 338, 360, 364, 373, 375, 384, 395, 404, 414, 437, 443, 460, 466, 471, 480, 483, 487, 488, 489, 490], "pyobject_getait": [49, 56], "aiter": [49, 239, 443, 487, 493], "tp": [50, 67, 87, 353, 377, 399, 401], "py_newref": [51, 56, 99, 487], "aren": [51, 88, 90, 92, 96, 97, 100, 104, 105, 106, 107, 111, 116, 117, 119, 122, 123, 151, 167, 180, 189, 215, 231, 241, 270, 274, 283, 284, 307, 311, 354, 357, 363, 368, 384, 392, 404, 405, 434, 477, 478, 479, 480, 481, 482, 483, 484, 490, 491], "py_xincref": [51, 85, 488, 495], "py_xnewref": [51, 56, 487], "attr": [51, 62, 67, 91, 104, 133, 190, 254, 258, 266, 270, 288, 296, 306, 307, 314, 329, 377, 384, 403, 404, 428, 430, 431, 432, 442, 443, 446, 451, 477, 478, 481, 488, 490], "py_clear": [51, 62, 85, 87, 88, 481], "_py_dealloc": [51, 495], "_py_forgetrefer": [51, 496], "_py_newrefer": [51, 496], "_py_reftot": 51, "pyeval_getbuiltin": [52, 56], "pyeval_getloc": [52, 56], "pyeval_getglob": [52, 56], "pyeval_getfuncnam": [52, 56], "pyeval_getfuncdesc": [52, 56], "pysequence_check": [53, 56, 62], "pysequence_s": [53, 56, 62], "pysequence_concat": [53, 56, 62], "pysequence_repeat": [53, 56, 62], "pysequence_inplaceconcat": [53, 56, 62], "pysequence_inplacerepeat": [53, 56, 62], "th": [53, 163, 188, 204, 210, 239, 250, 281, 290, 298, 359, 360, 381, 399, 425, 443, 477, 480, 482], "pysequence_getslic": [53, 56, 62], "i1": [53, 203, 293, 434, 481], "i2": [53, 203, 293, 434, 481], "pysequence_delitem": [53, 56], "pysequence_setslic": [53, 56, 62], "pysequence_delslic": [53, 56, 62], "pysequence_count": [53, 56], "occurr": [53, 63, 71, 97, 101, 113, 116, 132, 133, 153, 173, 180, 190, 199, 210, 219, 242, 286, 299, 306, 307, 333, 334, 343, 359, 360, 373, 387, 415, 428, 443, 444, 445, 446, 449, 450, 451, 461, 479, 481, 482, 485, 489], "pysequence_contain": [53, 56, 62], "pysequence_index": [53, 56], "pysequence_list": [53, 56], "pysequence_tupl": [53, 56], "pysequence_fast": [53, 56], "pysequence_fast_get_s": 53, "pysequence_fast_get_item": 53, "pysequence_fast_item": 53, "reloc": [53, 483], "pysequence_item": 53, "frozenset": [54, 67, 99, 133, 195, 239, 269, 289, 314, 368, 401, 403, 417, 442, 443, 445, 465, 481, 482, 483, 488, 489, 496], "pysetobject": 54, "medium": [54, 191, 199, 441, 481, 482], "pyset_typ": [54, 56], "pyfrozenset_typ": [54, 56], "pyset_check": 54, "pyfrozenset_check": 54, "pyanyset_check": 54, "pyset_checkexact": [54, 487], "pyanyset_checkexact": 54, "pyfrozenset_checkexact": 54, "pyset_new": [54, 56, 482], "pyfrozenset_new": [54, 56, 482], "pyset_s": [54, 56, 482], "anyset": 54, "pyset_get_s": 54, "pyset_contain": [54, 56, 482], "__contains__": [54, 57, 62, 92, 97, 99, 106, 110, 174, 210, 219, 225, 276, 286, 306, 360, 404, 422, 431, 443, 445, 477, 480, 481, 483], "unhash": [54, 90, 194, 225, 360, 403, 443, 445, 487, 496], "pyset_add": [54, 56, 482], "grow": [54, 59, 75, 97, 101, 114, 117, 173, 207, 240, 250, 284, 333, 335, 391, 441, 465, 477, 481, 483, 484, 489], "pyset_discard": [54, 56, 482], "miss": [54, 67, 71, 75, 99, 116, 133, 173, 183, 188, 189, 194, 199, 210, 213, 219, 225, 240, 249, 261, 265, 266, 270, 276, 282, 291, 294, 301, 304, 307, 311, 334, 357, 359, 361, 364, 368, 377, 381, 382, 390, 395, 401, 404, 409, 410, 440, 442, 443, 445, 446, 447, 456, 458, 467, 469, 477, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "pyset_pop": [54, 56], "pyset_clear": [54, 56], "pyslice_typ": [55, 56], "pyslice_check": 55, "pyslice_new": [55, 56], "pyslice_getindic": [55, 56], "pysliceobject": 55, "pyslice_getindicesex": [55, 56, 494], "slicelength": 55, "pyslice_unpack": [55, 56, 494], "pyslice_adjustindic": [55, 56, 494], "0x03050400": [55, 494], "0x03060000": [55, 494], "0x03060100": [55, 494], "boost": [55, 91, 240, 481], "py_ellipsi": [55, 446], "387": [56, 92, 227], "seriou": [56, 90, 99, 113, 138, 207, 227, 282, 404], "forward": [56, 63, 71, 90, 97, 105, 107, 116, 133, 160, 166, 168, 189, 190, 196, 214, 240, 244, 273, 282, 286, 304, 309, 311, 312, 356, 357, 360, 399, 401, 417, 422, 426, 442, 456, 457, 462, 469, 477, 478, 479, 481, 483, 486, 487, 488, 489, 494], "vice": [56, 72, 84, 96, 154, 189, 265, 282, 308, 311, 334, 360, 391, 395, 428, 464, 483, 491], "versa": [56, 72, 84, 96, 154, 189, 265, 282, 308, 311, 334, 360, 391, 395, 428, 464, 483, 491], "_py_internalst": 56, "simplic": [56, 63, 87, 277, 356, 360, 477, 479, 487], "talk": [56, 63, 92, 97, 104, 114, 117, 119, 357, 359, 364, 443, 455, 456, 474, 482, 492], "subset": [56, 83, 92, 107, 117, 160, 171, 173, 180, 190, 249, 261, 262, 268, 272, 277, 284, 286, 310, 314, 321, 329, 343, 347, 353, 360, 373, 380, 388, 403, 425, 428, 430, 437, 445, 480, 482, 484, 488, 492, 494], "recompil": [56, 71, 84, 91, 99, 176, 264, 265, 465, 475, 477, 480, 484, 489, 492, 493], "hardcod": [56, 80, 189, 272, 282, 284, 475, 491], "0x030a0000": 56, "0x03020000": 56, "python39": 56, "abi3": [56, 490], "mymodul": [56, 80, 91, 113, 244, 404, 405, 415, 484, 489], "goal": [56, 62, 80, 87, 107, 112, 215, 239, 249, 335, 377, 428, 449, 478, 480, 482, 483, 489, 491, 492, 493], "penalti": [56, 114, 194, 230, 321, 477, 489], "prereleas": 56, "upcom": [56, 227, 240, 340], "One": [56, 57, 65, 67, 84, 85, 87, 90, 93, 96, 97, 99, 104, 105, 107, 114, 116, 117, 119, 120, 122, 127, 130, 131, 133, 137, 145, 156, 167, 170, 180, 189, 194, 207, 215, 239, 244, 259, 261, 265, 266, 274, 282, 296, 298, 320, 323, 332, 334, 348, 356, 357, 360, 362, 364, 373, 377, 379, 391, 399, 404, 405, 409, 415, 428, 443, 445, 446, 447, 449, 450, 451, 458, 459, 462, 463, 464, 465, 466, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 494, 495], "guard": [56, 62, 67, 112, 114, 133, 138, 266, 328, 377, 380, 400, 401, 446, 447, 456, 495], "derefer": [56, 298, 373], "technic": [56, 67, 90, 92, 99, 107, 120, 123, 180, 195, 204, 227, 239, 277, 307, 334, 360, 415, 447, 474, 476, 477, 484, 487, 494], "unintention": [56, 112, 114, 125, 282, 465, 488, 489], "stai": [56, 63, 150, 359, 368, 489, 490, 493, 498], "architectur": [56, 67, 71, 132, 143, 227, 287, 289, 294, 318, 348, 363, 370, 383, 425, 436, 443, 465, 471, 475, 476, 480, 481, 483, 490, 492, 495, 496], "distributor": [56, 78, 357, 440, 488, 493], "pybaseobject_typ": [56, 62], "pybytearrayiter_typ": 56, "pybytesiter_typ": 56, "pybytes_decodeescap": 56, "pybytes_repr": 56, "pycfunctionwithkeyword": [56, 57], "pycfunction_cal": 56, "pycfunction_getflag": 56, "pycfunction_getfunct": 56, "pycfunction_getself": 56, "pycfunction_new": [56, 57], "pycfunction_newex": [56, 57], "pycfunction_typ": 56, "pycmethod_new": [56, 57], "pycapsule_typ": 56, "pyclassmethoddescr_typ": 56, "pydictitems_typ": 56, "pydictiteritem_typ": 56, "pydictiterkey_typ": 56, "pydictitervalue_typ": 56, "pydictkeys_typ": 56, "pydictproxy_typ": 56, "pydictreviteritem_typ": 56, "pydictreviterkey_typ": 56, "pydictrevitervalue_typ": 56, "pydictvalues_typ": 56, "pyellipsis_typ": 56, "pyenum_typ": 56, "pyerr_displai": [56, 487], "pyerr_programtext": 56, "pyeval_callfunct": [56, 496], "pyeval_callmethod": [56, 496], "pyeval_callobjectwithkeyword": [56, 496], "pyeval_evalcod": [56, 65, 487], "pyeval_evalcodeex": [56, 65], "pyeval_evalfram": [56, 65], "pyeval_evalframeex": [56, 65, 108, 491], "pyexc_baseexceptiongroup": 56, "pyexc_encodingwarn": 56, "pyexceptionclass_nam": [56, 495], "pyfilter_typ": 56, "pygetsetdescr_typ": 56, "pylistiter_typ": 56, "pylistreviter_typ": 56, "pylongrangeiter_typ": 56, "pylong_getinfo": 56, "pymap_typ": 56, "pymemberdescr_typ": 56, "pymemoryview_typ": 56, "pymethoddescr_typ": 56, "pymoduledef_typ": 56, "pyos_afterfork": [56, 58, 494], "pyos_afterfork_par": [56, 58, 308, 494], "pyos_beforefork": [56, 58, 308, 494], "pyos_fspath": [56, 58, 493], "pyos_inputhook": [56, 65], "pyos_interruptoccur": 56, "pyos_getsig": [56, 58, 477], "pyos_mystricmp": 56, "pyos_mystrnicmp": 56, "pyos_setsig": [56, 58, 477], "pyos_sighandler_t": [56, 58], "ob_refcnt": [56, 62, 108, 487], "ob_typ": [56, 62, 88, 108, 488], "pyobject_clearweakref": [56, 62, 66, 87], "pyobject_delitemstr": [56, 480], "pyobject_selfit": 56, "pyrangeiter_typ": 56, "pyrange_typ": [56, 482], "pyreversed_typ": 56, "pysequence_in": 56, "pysetiter_typ": 56, "pystructsequence_desc": [56, 59, 494], "pystructsequence_field": [56, 59, 494], "pystructsequence_getitem": [56, 59], "pystructsequence_new": [56, 59], "pystructsequence_newtyp": [56, 59], "pystructsequence_setitem": [56, 59], "pystructsequence_unnamedfield": [56, 59, 496], "pysuper_typ": 56, "pysys_addwarnoptionunicod": [56, 58, 488, 494], "pysys_formatstderr": [56, 58], "pysys_formatstdout": [56, 58], "pysys_getxopt": [56, 58], "pysys_haswarnopt": [56, 488], "pysys_setobject": [56, 58], "pysys_setpath": [56, 58, 488], "pysys_writestderr": [56, 58], "pysys_writestdout": [56, 58], "pythread_getinfo": 56, "pythread_acquire_lock": 56, "pythread_acquire_lock_tim": 56, "pythread_allocate_lock": 56, "pythread_exit_thread": 56, "pythread_free_lock": 56, "pythread_get_stacks": 56, "pythread_get_thread_id": [56, 494], "pythread_get_thread_native_id": 56, "pythread_init_thread": 56, "pythread_release_lock": 56, "pythread_set_stacks": 56, "pythread_start_new_thread": [56, 494], "pytraceback_her": 56, "pytraceback_print": [56, 493], "pytraceback_typ": 56, "pytupleiter_typ": 56, "pytuple_getitem": [56, 59, 85, 91], "pytuple_getslic": [56, 59], "pytuple_pack": [56, 59, 91, 481], "pytuple_s": [56, 59, 91], "pytuple_typ": [56, 59], "pytype_clearcach": [56, 60], "pytype_frommoduleandspec": [56, 60, 62, 112, 487, 496], "pytype_genericalloc": [56, 60, 62, 495], "pytype_genericnew": [56, 60, 62, 88], "pytype_getflag": [56, 60], "pytype_getmodul": [56, 60, 112, 496], "pytype_getmodulest": [56, 60, 112, 496], "pytype_getnam": [56, 60, 488], "pytype_getqualnam": [56, 60, 488], "pytype_getslot": [56, 60, 487, 491], "pytype_issubtyp": [56, 60], "pytype_modifi": [56, 60], "pytype_slot": [56, 60], "pytype_spec": [56, 60, 62, 112], "pytype_typ": [56, 60, 62], "pyunicodeiter_typ": 56, "pyunicode_append": 56, "pyunicode_appendanddel": 56, "pyunicode_asasciistr": [56, 63, 490], "pyunicode_ascharmapstr": [56, 63], "pyunicode_asdecodedobject": [56, 493], "pyunicode_asdecodedunicod": [56, 493], "pyunicode_asencodedobject": [56, 490, 493], "pyunicode_asencodedstr": [56, 63], "pyunicode_asencodedunicod": [56, 493], "pyunicode_aslatin1str": [56, 63, 490], "pyunicode_asmbcsstr": [56, 63, 490], "pyunicode_asrawunicodeescapestr": [56, 63, 490], "pyunicode_asucs4": [56, 63, 490], "pyunicode_asucs4copi": [56, 63, 487, 490], "pyunicode_asutf16str": [56, 63], "pyunicode_asutf32str": [56, 63], "pyunicode_asutf8ands": [56, 63, 487, 494], "pyunicode_asutf8str": [56, 63, 490], "pyunicode_asunicodeescapestr": [56, 63, 490], "pyunicode_aswidechar": [56, 63], "pyunicode_buildencodingmap": 56, "pyunicode_compar": [56, 63, 487, 490], "pyunicode_comparewithasciistr": [56, 63, 489], "pyunicode_concat": [56, 63, 490], "pyunicode_contain": [56, 63], "pyunicode_count": [56, 63], "pyunicode_decod": [56, 63], "pyunicode_decodeascii": [56, 63], "pyunicode_decodecharmap": [56, 63], "pyunicode_decodecodepagest": 56, "pyunicode_decodefsdefault": [56, 63, 84], "pyunicode_decodefsdefaultands": [56, 58, 63], "pyunicode_decodelatin1": [56, 63], "pyunicode_decodelocal": [56, 63], "pyunicode_decodelocaleands": [56, 58, 63, 494], "pyunicode_decodembc": [56, 63], "pyunicode_decodembcsst": [56, 63], "pyunicode_decoderawunicodeescap": [56, 63], "pyunicode_decodeutf16": [56, 63], "pyunicode_decodeutf16st": [56, 63], "pyunicode_decodeutf32": [56, 63], "pyunicode_decodeutf32st": [56, 63], "pyunicode_decodeutf7": [56, 63], "pyunicode_decodeutf7st": [56, 63], "pyunicode_decodeutf8": [56, 63], "pyunicode_decodeutf8st": [56, 63], "pyunicode_decodeunicodeescap": [56, 63], "pyunicode_encodecodepag": [56, 63, 490], "pyunicode_encodefsdefault": [56, 58, 63], "pyunicode_encodelocal": [56, 58, 63, 494], "pyunicode_fsdecod": [56, 63, 493], "pyunicode_find": [56, 63], "pyunicode_findchar": [56, 63, 487, 490, 494], "pyunicode_format": [56, 63], "pyunicode_fromencodedobject": [56, 63], "pyunicode_fromformatv": [56, 58, 63], "pyunicode_fromobject": [56, 63], "pyunicode_fromordin": 56, "pyunicode_fromstringands": [56, 63, 487], "pyunicode_fromwidechar": [56, 63, 490], "pyunicode_getdefaultencod": 56, "pyunicode_getlength": [56, 63, 487, 490], "pyunicode_gets": [56, 63, 488, 490], "pyunicode_internfromstr": [56, 63], "pyunicode_internimmort": [56, 487, 488], "pyunicode_interninplac": [56, 63, 487], "pyunicode_isidentifi": [56, 63], "pyunicode_join": [56, 63, 490], "pyunicode_partit": 56, "pyunicode_rpartit": 56, "pyunicode_rsplit": 56, "pyunicode_readchar": [56, 63, 490], "pyunicode_replac": [56, 63], "pyunicode_res": 56, "pyunicode_richcompar": [56, 63], "pyunicode_split": [56, 63], "pyunicode_splitlin": [56, 63], "pyunicode_substr": [56, 63, 487, 490], "pyunicode_tailmatch": [56, 63, 487, 490, 496], "pyunicode_transl": [56, 63], "pyunicode_typ": [56, 62, 63], "pyunicode_writechar": [56, 63, 490], "ob_bas": [56, 57, 88, 108], "ob_siz": [56, 57, 62, 108, 488], "pyweakrefer": [56, 488], "pyweakref_getobject": [56, 66], "pyweakref_newproxi": [56, 66], "pywrapperdescr_typ": 56, "pyzip_typ": 56, "py_atexit": [56, 58], "py_bytesmain": [56, 65, 495], "py_compilestr": [56, 65, 487], "py_exit": [56, 58, 493], "py_filesystemdefaultencodeerror": [56, 63], "py_filesystemdefaultencod": [56, 63], "py_genericalia": [56, 61], "py_genericaliastyp": [56, 61], "py_getrecursionlimit": 56, "py_hasfilesystemdefaultencod": 56, "py_i": [56, 57, 487], "py_isfals": [56, 57, 487], "py_isnon": [56, 57, 487], "py_istru": [56, 57, 487], "py_makependingcal": 56, "py_setrecursionlimit": 56, "py_ucs4": [56, 63, 490], "py_utf8mod": 56, "py_intptr_t": 56, "py_uintptr_t": 56, "allocfunc": [56, 62, 87], "binaryfunc": [56, 62], "descrgetfunc": [56, 62, 87], "descrsetfunc": [56, 62, 87], "getattrfunc": [56, 62, 87], "getattrofunc": [56, 62, 87], "getiterfunc": [56, 62, 87], "hashfunc": [56, 62, 87], "initproc": [56, 62, 87, 88], "iternextfunc": [56, 62, 87], "lenfunc": [56, 62], "newfunc": [56, 62, 87, 240], "objobjargproc": [56, 62], "objobjproc": [56, 62], "reprfunc": [56, 62, 87], "richcmpfunc": [56, 62, 87], "setattrfunc": [56, 62, 87], "setattrofunc": [56, 62, 87], "ssizeargfunc": [56, 62], "ssizeobjargproc": [56, 62], "ssizessizeargfunc": 56, "ssizessizeobjargproc": 56, "symtabl": [56, 67, 269, 279, 484, 487, 496], "ternaryfunc": [56, 62, 87], "unaryfunc": [56, 62], "ultim": [57, 78, 99, 207, 239, 249, 307, 368, 443, 445, 447, 451, 479, 481], "expans": [57, 67, 233, 234, 248, 261, 269, 276, 290, 309, 323, 329, 364, 379, 424, 437, 456, 481, 487, 490, 491], "py_refcnt": [57, 88, 483, 487], "notion": [57, 71, 98, 121, 196, 199, 203, 207, 239, 314, 360, 391, 425, 429, 445, 449, 452, 453, 489], "py_siz": [57, 483, 488], "pyobject_head": [57, 62, 87, 88, 485], "pyobject_var_head": [57, 62, 87], "py_set_typ": [57, 488], "py_is_typ": 57, "py_set_refcnt": [57, 487], "refcnt": [57, 487], "counter": [57, 62, 67, 85, 88, 97, 99, 107, 150, 153, 195, 203, 204, 214, 241, 250, 298, 307, 308, 360, 380, 381, 401, 403, 445, 455, 479, 481, 482, 483, 484, 486, 489, 490, 495], "py_set_s": [57, 488], "pyobject_head_init": [57, 62], "_pyobject_extra_init": 57, "pyvarobject_head_init": [57, 62, 87, 88], "shall": [57, 309, 311, 314, 344, 430, 441, 476, 489], "meth_keyword": [57, 85, 112], "_pycfunctionfast": 57, "meth_fastcal": [57, 112, 494], "narg": [57, 67, 112, 114, 129, 307, 324, 356, 414, 466, 484, 489], "_pycfunctionfastwithkeyword": 57, "pycmethod": [57, 60, 112, 488, 496], "meth_method": [57, 112, 496], "defining_class": [57, 112], "ml_name": [57, 87], "ml_meth": [57, 87], "ml_flag": [57, 87], "ml_doc": [57, 87], "bitfield": [57, 124, 239], "fast": [57, 63, 67, 99, 106, 112, 117, 118, 154, 160, 173, 183, 197, 199, 204, 239, 248, 249, 264, 265, 269, 270, 273, 276, 284, 288, 306, 314, 323, 331, 333, 347, 359, 360, 382, 383, 384, 399, 401, 428, 443, 457, 461, 469, 477, 481, 482, 484, 488, 489, 490, 491, 492, 493, 494, 496], "fourth": [57, 107, 124, 190, 208, 282, 309, 322, 334, 381, 434, 456, 479, 487], "superclass": [57, 60, 62, 112, 127, 168, 194, 239, 240, 277, 283, 327, 354, 401, 443, 479, 480, 482], "meth_o": [57, 61, 479], "meth_class": [57, 61, 480], "classmethod": [57, 99, 105, 106, 127, 173, 174, 189, 196, 199, 204, 207, 217, 225, 235, 239, 240, 265, 270, 276, 298, 311, 314, 359, 360, 373, 396, 397, 401, 403, 437, 440, 443, 465, 479, 481, 484, 487, 488, 489, 490, 493, 494, 495], "meth_stat": [57, 480], "staticmethod": [57, 97, 99, 105, 127, 207, 225, 239, 240, 283, 373, 404, 435, 443, 465, 479, 481, 484, 487, 489, 490, 495], "meth_coexist": [57, 481], "sq_contain": [57, 62], "preclud": [57, 173, 304, 360, 495], "ml": [57, 107, 480], "unavail": [57, 90, 96, 120, 207, 243, 270, 285, 298, 308, 347, 401, 443], "t_": 57, "t_short": 57, "t_int": [57, 88], "t_long": 57, "t_float": 57, "t_doubl": 57, "t_string": 57, "t_object": 57, "t_object_ex": [57, 88], "t_char": 57, "t_byte": 57, "t_ubyt": 57, "t_uint": 57, "t_ushort": 57, "t_ulong": 57, "t_bool": 57, "t_longlong": 57, "t_ulonglong": 57, "t_pyssizet": 57, "__dictoffset__": 57, "__weaklistoffset__": 57, "__vectorcalloffset__": 57, "tp_dictoffset": [57, 60, 62, 87], "tp_weaklistoffset": [57, 60, 62, 87, 496], "spam_type_memb": 57, "offsetof": [57, 62, 87, 88], "spam_object": 57, "pymember_geton": [57, 105], "obj_addr": 57, "pymember_seton": 57, "tp_getset": [57, 62, 87, 88], "pathlik": [58, 63, 99, 176, 239, 267, 308, 309, 311, 360, 404, 440, 493], "__fspath__": [58, 308, 377, 404, 493], "py_fdisinteract": 58, "deem": [58, 99, 133, 221, 244, 282, 284, 360, 422, 441, 477, 478, 482, 484, 489, 490, 491], "isatti": [58, 166, 239, 273, 308, 368, 461], "clone": [58, 215, 219, 222, 244, 249, 251, 298, 308, 316, 351, 391, 399, 425, 449, 475, 490, 495], "register_at_fork": [58, 308, 494], "reliabl": [58, 117, 136, 138, 144, 145, 151, 171, 174, 199, 201, 298, 309, 318, 348, 364, 418, 430, 439, 442, 447, 455, 459, 467, 476, 480, 484, 487, 489, 490, 491, 492, 493, 494], "microsoft": [58, 67, 72, 77, 80, 89, 98, 171, 180, 189, 269, 308, 366, 368, 413, 414, 422, 463, 473, 479, 480, 482, 483, 488, 492], "visual": [58, 71, 72, 80, 89, 90, 97, 104, 121, 334, 357, 390, 399, 428, 456, 470, 476, 477, 480, 483, 492], "sigact": 58, "dc80": [58, 119, 171, 239], "dcff": [58, 119, 171, 239], "surrog": [58, 63, 171, 239, 277, 308, 356, 362, 373, 425, 490, 491, 495], "error_po": 58, "0x80": [58, 119, 191, 360], "0xff": [58, 171, 239, 360], "implicit": [58, 62, 67, 85, 97, 114, 123, 125, 131, 151, 194, 203, 227, 239, 265, 270, 273, 312, 329, 334, 353, 356, 363, 375, 405, 417, 443, 447, 470, 484, 485, 489, 491, 492, 493, 494, 495, 498], "1000": [58, 97, 110, 114, 119, 162, 186, 190, 196, 235, 261, 274, 276, 290, 298, 299, 335, 344, 360, 361, 368, 384, 397, 399, 441, 455, 456, 459, 461, 464, 465, 477, 482, 483, 484, 489, 490, 495], "unrestrict": [58, 90, 441], "watch": [58, 67, 112, 113, 137, 142, 143, 145, 148, 149, 152, 199, 250, 284, 343, 384, 466], "hundr": [58, 92, 114, 207, 249, 269, 469], "pysys_audit": [58, 110, 155, 368], "apart": [58, 71, 78, 88, 107, 116, 133, 180, 203, 290, 298, 307, 317, 359, 365, 445, 450, 476, 480, 484, 486], "unavoid": [58, 107, 196, 481, 484, 486], "pysys_addaudithook": [58, 155, 368], "py_audithookfunct": 58, "notifi": [58, 113, 146, 150, 151, 261, 262, 298, 380, 386, 417], "578": [58, 67, 155, 368, 482, 483], "addaudithook": [58, 155, 368, 465], "kill": [58, 96, 117, 126, 142, 145, 149, 153, 155, 179, 190, 261, 272, 298, 308, 348, 364, 377, 417, 422, 437, 483, 484, 485, 489, 494], "120": [58, 84, 107, 168, 207, 240, 276, 368, 399, 484, 493, 495], "pytuple_check": [59, 91], "pytuple_checkexact": 59, "oo": [59, 71, 90, 189, 368, 377, 465, 470, 486, 492], "pytuple_get_s": 59, "pytuple_get_item": 59, "pytuple_set_item": [59, 487], "_pytuple_res": [59, 479], "shrink": [59, 197, 481], "client": [59, 67, 85, 96, 105, 113, 114, 117, 120, 134, 136, 138, 142, 155, 157, 164, 171, 177, 180, 183, 208, 210, 255, 258, 259, 266, 269, 271, 273, 274, 282, 284, 301, 308, 314, 343, 344, 350, 353, 354, 356, 366, 377, 380, 399, 401, 409, 410, 422, 424, 425, 432, 435, 441, 455, 456, 466, 479, 481, 483, 490, 495], "namedtupl": [59, 67, 99, 106, 128, 160, 195, 303, 314, 317, 318, 334, 344, 352, 356, 360, 363, 365, 368, 397, 400, 401, 416, 457, 483, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496], "desc": [59, 75, 105, 296, 303, 356, 486], "pystructsequence_inittyp": [59, 491], "pystructsequence_inittype2": [59, 491], "meta": [59, 67, 75, 77, 83, 99, 123, 133, 164, 190, 191, 234, 245, 265, 266, 307, 368, 410, 443, 479, 490, 491, 493], "n_in_sequ": 59, "pystructsequence_get_item": 59, "pystructsequence_set_item": 59, "pytype_check": [60, 85], "pytype_checkexact": 60, "primarili": [60, 86, 90, 97, 111, 113, 151, 154, 171, 173, 196, 208, 220, 239, 240, 270, 282, 314, 319, 360, 364, 368, 401, 403, 415, 422, 426, 476, 478, 479, 481, 483, 484, 488, 490, 492, 494, 496], "pytype_hasfeatur": [60, 62], "pytype_is_gc": 60, "issubclass": [60, 90, 99, 127, 174, 239, 360, 400, 401, 415, 443, 455, 465, 477, 483, 487, 494], "nitem": [60, 62], "tp_alloc": [60, 62, 87, 88, 112], "kwd": [60, 62, 87, 88, 105, 149, 157, 182, 188, 217, 225, 239, 240, 270, 298, 312, 333, 361, 377, 395, 400, 403, 443, 446, 456, 482, 495], "qualifi": [60, 67, 80, 99, 105, 204, 207, 211, 264, 265, 270, 283, 284, 314, 318, 350, 351, 353, 360, 364, 401, 403, 413, 415, 428, 431, 438, 443, 447, 451, 470, 476, 482, 488, 492, 495, 498], "pytype_getmodulebydef": [60, 112, 488], "shortcut": [60, 67, 72, 81, 117, 173, 207, 249, 261, 313, 334, 360, 373, 400, 403, 443, 476, 481, 483, 494], "nb_add": [60, 62, 112], "py_tpflags_heaptyp": [60, 62, 112, 487, 496], "py_tp_bas": [60, 62], "tp_doc": [60, 62, 87, 88, 487], "basics": 60, "pynumbermethod": [60, 62, 87, 479, 482], "pysequencemethod": [60, 62, 87], "pymappingmethod": [60, 62, 87], "pyasyncmethod": [60, 62, 87], "py_": [60, 476], "py_tp_dealloc": 60, "py_nb_add": 60, "py_sq_length": 60, "sq_length": [60, 62], "tp_dict": [60, 62, 87, 483], "tp_mro": [60, 62, 87], "tp_cach": [60, 62, 87], "tp_subclass": [60, 62, 87], "tp_weaklist": [60, 62, 87], "tp_vectorcal": [60, 62, 87], "unlimit": [60, 149, 164, 216, 217, 222, 249, 261, 298, 335, 337, 360, 364, 380, 443, 450], "bf_getbuff": [60, 62, 488], "pfunc": [60, 84], "py_tp_doc": 60, "genericalia": [61, 67, 400, 401, 443, 445, 487, 496], "union": [61, 67, 100, 129, 173, 225, 239, 240, 246, 267, 269, 348, 358, 362, 400, 401, 441, 443, 457, 480, 481, 483, 484, 488, 492, 496], "__origin__": [61, 360], "__args__": [61, 360, 487, 496], "__parameters__": [61, 360, 401], "lazili": [61, 100, 179, 230, 257, 276, 360, 403, 404, 445, 487, 488, 491], "my_obj_method": 61, "__class_getitem__": [61, 67, 360, 401, 445, 488, 494], "585": [61, 99, 174, 360, 400, 401, 488, 496], "pytype_": 62, "fairli": [62, 74, 81, 96, 99, 104, 109, 114, 117, 119, 207, 218, 222, 296, 318, 323, 345, 425, 426, 461, 477, 479, 480, 482, 483], "examin": [62, 67, 84, 97, 100, 113, 119, 121, 124, 194, 200, 241, 270, 279, 308, 312, 315, 323, 346, 347, 348, 351, 360, 368, 377, 425, 454, 478, 480, 482, 483, 487, 490], "glanc": [62, 114, 455, 480], "insight": 62, "tp_getattr": [62, 87], "tp_setattr": [62, 87], "__setattr__": [62, 87, 92, 97, 105, 155, 194, 314, 404, 443, 451, 479], "__delattr__": [62, 87, 92, 105, 155, 194, 443], "tp_as_async": [62, 87, 492], "__repr__": [62, 92, 105, 106, 118, 173, 194, 196, 209, 225, 239, 265, 270, 298, 301, 336, 356, 400, 401, 404, 434, 440, 443, 467, 479, 480, 487, 488, 489, 494, 495], "tp_as_sequ": [62, 87], "tp_as_map": [62, 87], "__call__": [62, 97, 99, 105, 131, 172, 173, 174, 217, 225, 239, 298, 306, 373, 401, 404, 405, 417, 443, 445, 493], "tp_str": [62, 87], "__str__": [62, 92, 106, 113, 114, 173, 196, 209, 210, 215, 216, 217, 219, 225, 270, 282, 298, 360, 361, 400, 404, 440, 443, 458, 479, 487, 488, 495], "tp_as_buff": [62, 87, 496], "tp_richcompar": [62, 87], "__lt__": [62, 87, 92, 106, 118, 174, 181, 194, 239, 240, 306, 360, 400, 404, 443, 445, 478, 484, 485, 489], "__le__": [62, 92, 106, 174, 194, 240, 306, 360, 404, 443, 478, 484, 489], "__ne__": [62, 92, 174, 209, 216, 306, 404, 434, 443, 478, 488], "__gt__": [62, 92, 106, 118, 174, 194, 239, 240, 306, 360, 404, 443, 478, 484, 489], "__ge__": [62, 92, 106, 174, 194, 240, 306, 360, 404, 443, 478, 484, 489], "tp_iter": [62, 87, 360, 479], "__iter__": [62, 87, 92, 99, 106, 114, 127, 174, 225, 239, 273, 276, 286, 298, 360, 401, 403, 404, 405, 437, 443, 445, 455, 479, 480, 483, 491, 493, 496], "tp_iternext": [62, 87, 360, 479], "__next__": [62, 87, 99, 107, 123, 174, 179, 188, 204, 227, 239, 273, 276, 298, 360, 437, 443, 445, 455, 485], "tp_method": [62, 87, 88], "tp_member": [62, 87, 88, 488], "tp_base": [62, 87, 88], "__base__": 62, "tp_descr_get": [62, 87], "__get__": [62, 99, 105, 194, 240, 270, 404, 443, 479, 493], "tp_descr_set": [62, 87], "__set__": [62, 99, 105, 194, 270, 404, 443, 479, 493], "__delete__": [62, 99, 105, 270, 404, 443, 479], "tp_free": [62, 67, 87, 88], "tp_is_gc": [62, 87], "__subclasses__": [62, 360, 404], "tp_del": [62, 87, 241], "tp_version_tag": [62, 87], "tp_final": [62, 87, 492, 495], "angl": [62, 116, 157, 167, 171, 223, 239, 290, 333, 399, 483, 484], "am_await": 62, "__await__": [62, 99, 174, 204, 400, 443, 492], "am_ait": 62, "__aiter__": [62, 99, 174, 204, 239, 404, 405, 442, 443, 492, 493, 494], "am_anext": 62, "__anext__": [62, 99, 174, 204, 227, 239, 404, 442, 443, 445], "am_send": 62, "sendfunc": 62, "__add__": [62, 92, 106, 112, 173, 181, 270, 304, 306, 404, 443, 445], "__radd__": [62, 304, 443, 445], "nb_inplace_add": 62, "__iadd__": [62, 92, 97, 174, 306, 443, 477], "nb_subtract": 62, "__sub__": [62, 174, 306, 404, 443, 445], "__rsub__": [62, 181, 443], "nb_inplace_subtract": 62, "__isub__": [62, 174, 306, 443, 477], "nb_multipli": 62, "__mul__": [62, 92, 173, 306, 404, 443, 445], "__rmul__": [62, 92, 443, 445], "nb_inplace_multipli": 62, "__imul__": [62, 92, 173, 181, 306, 443], "nb_remaind": 62, "__mod__": [62, 306, 404, 443, 445, 487], "__rmod__": [62, 173, 443, 487, 492], "nb_inplace_remaind": 62, "__imod__": [62, 306, 443], "nb_divmod": 62, "__divmod__": [62, 404, 443, 487, 492], "__rdivmod__": [62, 443, 487], "nb_power": 62, "__pow__": [62, 306, 404, 443, 445, 487], "__rpow__": [62, 443, 487], "nb_inplace_pow": 62, "__ipow__": [62, 306, 443, 487], "nb_neg": 62, "__neg__": [62, 306, 404, 443, 445], "nb_posit": 62, "__pos__": [62, 306, 404, 443, 445], "nb_absolut": 62, "__abs__": [62, 239, 306, 401, 443], "nb_bool": [62, 485], "__bool__": [62, 106, 123, 225, 246, 306, 360, 382, 404, 420, 443, 445, 485], "nb_invert": 62, "__invert__": [62, 225, 306, 404, 443, 445], "nb_lshift": 62, "__lshift__": [62, 306, 404, 443, 445], "__rlshift__": [62, 443], "nb_inplace_lshift": 62, "__ilshift__": [62, 306, 443], "nb_rshift": 62, "__rshift__": [62, 306, 404, 443, 445], "__rrshift__": [62, 443], "nb_inplace_rshift": 62, "__irshift__": [62, 306, 443], "nb_and": 62, "__and__": [62, 174, 225, 306, 404, 443, 445], "__rand__": [62, 443, 445], "nb_inplace_and": 62, "__iand__": [62, 174, 181, 306, 443], "nb_xor": 62, "__xor__": [62, 174, 225, 306, 404, 443, 445], "__rxor__": [62, 443, 445], "nb_inplace_xor": 62, "__ixor__": [62, 174, 306, 443], "nb_or": 62, "__or__": [62, 174, 225, 306, 360, 404, 443, 445], "__ror__": [62, 443, 445], "nb_inplace_or": 62, "__ior__": [62, 174, 306, 443], "nb_int": 62, "nb_reserv": 62, "nb_float": 62, "nb_floor_divid": 62, "__floordiv__": [62, 306, 404, 443, 445, 479, 487], "nb_inplace_floor_divid": 62, "__ifloordiv__": [62, 306, 443], "nb_true_divid": 62, "__truediv__": [62, 268, 306, 404, 443, 445, 479, 492], "nb_inplace_true_divid": 62, "__itruediv__": [62, 306, 443], "nb_matrix_multipli": 62, "__matmul__": [62, 306, 404, 443, 492], "__rmatmul__": [62, 443, 492], "nb_inplace_matrix_multipli": 62, "__imatmul__": [62, 306, 443, 492], "mp_length": 62, "__len__": [62, 92, 99, 127, 174, 210, 219, 225, 239, 286, 298, 306, 360, 401, 404, 425, 428, 442, 443, 480, 481, 495], "mp_subscript": 62, "mp_ass_subscript": 62, "__setitem__": [62, 92, 173, 174, 204, 210, 219, 222, 286, 298, 306, 314, 404, 405, 422, 425, 428, 443, 451, 480, 485], "__delitem__": [62, 92, 173, 174, 210, 219, 286, 306, 404, 422, 425, 428, 443, 480, 485], "sq_concat": 62, "sq_repeat": 62, "sq_item": 62, "sq_ass_item": 62, "sq_inplace_concat": 62, "sq_inplace_repeat": 62, "releasebufferproc": 62, "_typeobject": [62, 87], "formerli": [62, 87, 146, 173, 174, 179, 239, 258, 270, 290, 298, 331, 333, 359, 381, 486, 487, 489, 490, 493, 494, 495, 496], "tp_compar": [62, 87], "tp_reserv": [62, 87, 492], "rich": [62, 63, 67, 87, 96, 123, 173, 211, 239, 240, 306, 384, 390, 403, 434, 443, 445, 447, 485, 489, 494, 496, 498], "stuff": [62, 71, 87, 91, 113, 114, 133, 182, 189, 207, 322, 404, 485], "resolut": [62, 67, 87, 88, 90, 97, 99, 105, 112, 127, 129, 138, 143, 196, 228, 230, 239, 240, 246, 248, 259, 270, 308, 309, 310, 311, 314, 323, 353, 360, 381, 442, 443, 455, 480, 482, 488, 490, 491, 492, 493, 495, 496], "type_new": [62, 105], "metatyp": [62, 270], "But": [62, 74, 78, 85, 88, 90, 93, 96, 97, 101, 105, 106, 107, 114, 116, 117, 120, 133, 167, 207, 208, 235, 273, 281, 286, 307, 314, 357, 360, 368, 381, 404, 410, 420, 455, 456, 459, 479, 480, 482, 484, 486, 487, 491], "complain": [62, 88, 90, 101, 114, 182, 261, 478], "foo_typ": 62, "_ob_next": 62, "_ob_prev": 62, "getobject": [62, 471, 495], "subpackag": [62, 83, 99, 265, 296, 368, 403, 437, 447, 465, 477], "pickl": [62, 67, 88, 96, 113, 114, 155, 169, 171, 173, 184, 189, 195, 196, 199, 240, 269, 277, 279, 282, 283, 284, 289, 298, 299, 313, 342, 345, 363, 394, 401, 404, 461, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 498], "pydoc": [62, 67, 88, 96, 169, 200, 239, 269, 435, 478, 479, 480, 481, 484, 486, 492], "meaning": [62, 116, 134, 207, 212, 249, 265, 270, 274, 283, 286, 308, 329, 334, 353, 357, 359, 368, 400, 410, 413, 443, 449, 451, 485, 489, 491, 492], "whichev": [62, 85, 87, 121, 125, 196, 282, 363, 403, 468, 476, 490, 492], "align": [62, 67, 129, 158, 163, 166, 361, 377, 391, 399, 423, 461, 483, 484], "py_tpflags_basetyp": [62, 88], "permiss": [62, 68, 71, 80, 92, 96, 97, 99, 113, 114, 120, 121, 176, 226, 227, 230, 237, 262, 272, 301, 308, 309, 311, 326, 347, 348, 353, 356, 358, 370, 373, 375, 401, 410, 412, 420, 441, 453, 476, 484, 494], "foo_dealloc": [62, 495], "foo_object": 62, "inconsist": [62, 203, 227, 307, 308, 353, 404, 450, 453, 478, 493], "tp_print": [62, 496], "py_tpflags_immutabletyp": [62, 112, 487, 488], "group": [62, 67, 71, 72, 81, 92, 96, 99, 101, 106, 111, 113, 114, 119, 121, 122, 129, 136, 155, 164, 171, 173, 182, 188, 191, 199, 200, 203, 204, 207, 217, 225, 239, 262, 266, 269, 272, 274, 276, 281, 286, 296, 298, 303, 308, 311, 314, 325, 329, 334, 347, 349, 353, 355, 357, 358, 359, 360, 361, 364, 373, 380, 390, 391, 396, 397, 401, 406, 409, 415, 420, 424, 430, 434, 443, 445, 446, 449, 450, 454, 458, 464, 467, 469, 476, 477, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 494, 495], "relev": [62, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 87, 96, 97, 101, 104, 107, 108, 111, 113, 114, 121, 133, 134, 158, 180, 184, 199, 200, 207, 208, 222, 229, 237, 239, 256, 259, 266, 277, 282, 283, 284, 303, 307, 308, 315, 317, 321, 357, 360, 364, 370, 377, 378, 403, 422, 429, 438, 440, 476, 477, 479, 481, 490, 491, 492, 493, 496], "await": [62, 67, 99, 135, 136, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 174, 182, 183, 201, 204, 239, 270, 279, 360, 392, 400, 401, 403, 404, 442, 446, 448, 450, 477, 480, 487, 488, 493, 494, 495, 496], "eval": [62, 97, 100, 123, 132, 133, 157, 170, 172, 227, 239, 270, 283, 312, 314, 322, 342, 360, 390, 396, 444, 446, 450, 451, 452, 455, 459, 465, 477, 481, 483, 485, 486, 487, 488, 489], "feasibl": [62, 78, 85, 345, 487, 491], "deduc": [62, 188, 207, 298, 323, 369, 476, 489], "isinst": [62, 90, 97, 99, 100, 105, 106, 113, 114, 123, 127, 164, 174, 182, 194, 196, 225, 239, 265, 266, 270, 277, 304, 306, 314, 360, 400, 401, 403, 404, 405, 442, 443, 455, 465, 477, 480, 481, 483, 485, 487, 488, 489, 493, 494], "among": [62, 118, 138, 154, 189, 194, 203, 207, 241, 246, 286, 298, 299, 315, 343, 368, 373, 381, 384, 390, 403, 443, 465, 474, 476, 489, 495], "mask": [62, 67, 189, 190, 225, 271, 308, 337, 344, 347, 348, 353, 358, 371, 384, 391, 420, 443, 464, 481, 483, 489, 490, 496], "strictli": [62, 85, 106, 114, 117, 118, 119, 121, 132, 145, 194, 196, 199, 232, 258, 277, 289, 360, 410, 442, 443, 444, 445, 447, 450, 455, 482], "py_tpflags_default": [62, 88], "ORed": [62, 207, 239, 308, 334, 384, 421], "decref": [62, 63], "java": [62, 67, 78, 90, 92, 96, 97, 107, 114, 116, 117, 127, 129, 239, 308, 360, 380, 425, 429, 430, 443, 449, 454, 456, 459, 477, 481, 482, 483, 485, 487, 489], "py_tpflags_readi": 62, "bitmask": [62, 138, 207, 310, 343, 344], "py_tpflags_have_stackless_extens": 62, "py_tpflags_long_subclass": 62, "py_tpflags_list_subclass": 62, "py_tpflags_tuple_subclass": 62, "py_tpflags_bytes_subclass": 62, "py_tpflags_unicode_subclass": 62, "py_tpflags_dict_subclass": 62, "py_tpflags_base_exc_subclass": 62, "py_tpflags_type_subclass": 62, "quickli": [62, 67, 92, 96, 97, 98, 107, 114, 116, 117, 121, 173, 203, 227, 230, 232, 236, 239, 284, 333, 334, 348, 368, 384, 390, 403, 439, 454, 466, 478, 482, 486, 491], "ins": [62, 106, 107, 477, 479, 480, 481], "py_tpflags_have_fin": [62, 495], "py_tpflags_disallow_instanti": [62, 112, 487], "py_tpflags_map": [62, 204, 442], "abc": [62, 67, 85, 90, 92, 97, 99, 100, 105, 107, 116, 119, 123, 138, 145, 148, 173, 180, 183, 189, 195, 197, 200, 204, 240, 242, 256, 266, 267, 269, 273, 274, 276, 282, 283, 295, 298, 305, 314, 330, 334, 336, 345, 346, 360, 361, 368, 377, 397, 400, 437, 438, 441, 442, 443, 445, 447, 450, 455, 457, 477, 479, 480, 481, 482, 483, 484, 485, 488, 493, 494, 495], "py_tpflags_sequ": [62, 204, 442], "634": [62, 67, 123, 442, 443], "local_travers": 62, "_thread": [62, 67, 96, 108, 177, 269, 380, 480, 490], "localobject": 62, "hand": [62, 80, 85, 87, 90, 92, 96, 97, 99, 106, 107, 116, 117, 121, 133, 141, 189, 190, 194, 199, 210, 215, 220, 227, 239, 244, 261, 272, 273, 284, 314, 320, 334, 354, 381, 384, 399, 401, 404, 442, 445, 449, 451, 454, 455, 457, 460, 461, 464, 465, 466, 467, 477, 478, 479, 480, 482, 483, 485, 486, 490, 495], "aid": [62, 99, 356, 466, 476, 480, 481, 484, 489, 490, 491], "get_refer": [62, 155, 241, 480, 487], "weakrefer": 62, "40217": [62, 496], "doubt": [62, 96, 104, 180, 196, 482], "prove": [62, 99, 107, 189, 276, 357, 442, 480, 485, 486], "compos": [62, 67, 99, 127, 186, 214, 215, 216, 217, 222, 287, 308, 351, 370, 371, 390, 397, 401, 402, 450, 490], "local_clear": 62, "trash": [62, 286], "reclam": 62, "weakref": [62, 67, 87, 97, 99, 194, 195, 227, 269, 298, 331, 360, 377, 467, 478, 479, 481, 482, 484, 488], "py_return_richcompar": [62, 494], "val_a": 62, "val_b": 62, "weakli": [62, 66, 87, 417, 491], "pyweakref_": 62, "__slots__": [62, 67, 99, 173, 194, 239, 240, 270, 314, 400, 417, 479, 484, 495], "__weakref__": [62, 194, 417, 443], "unari": [62, 67, 133, 173, 199, 204, 360, 404, 443, 448, 450, 490], "obvious": [62, 71, 72, 85, 114, 116, 121, 180, 282, 307, 404, 455, 477], "overload": [62, 138, 240, 401, 410, 434, 443, 445, 478, 479, 488, 491], "expens": [62, 78, 88, 90, 97, 99, 113, 160, 194, 201, 203, 240, 273, 281, 304, 323, 347, 354, 357, 368, 439, 447, 467, 470, 481, 488, 490, 491, 493, 494, 495], "reiniti": 62, "That": [62, 67, 71, 72, 81, 84, 88, 91, 95, 97, 98, 101, 104, 105, 112, 113, 114, 116, 117, 118, 121, 125, 133, 144, 164, 173, 174, 180, 190, 194, 199, 203, 207, 208, 215, 217, 219, 239, 272, 274, 276, 277, 282, 307, 309, 314, 331, 334, 341, 346, 351, 360, 361, 364, 368, 375, 379, 382, 391, 397, 401, 405, 422, 431, 437, 439, 442, 443, 445, 451, 458, 459, 465, 479, 480, 482, 483, 485, 486, 488, 489, 490, 494], "unrel": [62, 67, 85, 97, 106, 127, 163, 227, 286, 353, 460, 488], "defer": [62, 67, 85, 113, 138, 173, 207, 246, 260, 273, 284, 293, 356, 357, 371, 478, 483], "presum": [62, 113, 174, 188, 196, 223, 286, 298, 363, 364, 409, 445, 479, 484, 485], "mixtur": [62, 217, 446, 450, 455, 488, 492], "fresh": [62, 99, 107, 171, 179, 182, 298, 322, 339, 377, 447, 475, 476, 479, 480], "sane": [62, 190, 196, 334], "trivial": [62, 67, 72, 80, 84, 85, 87, 90, 96, 107, 120, 149, 164, 208, 214, 222, 248, 298, 314, 334, 368, 405, 422, 455, 466, 480, 490, 491], "local_fin": 62, "error_typ": 62, "error_valu": 62, "error_traceback": 62, "442": [62, 67, 87, 241, 496], "tradition": [62, 105, 112, 121, 323, 374, 480, 494], "ternari": [62, 443, 445], "operand": [62, 67, 101, 133, 171, 173, 196, 204, 207, 227, 239, 282, 305, 306, 360, 443, 445, 451, 458, 464, 479, 484, 485, 489, 490], "nb_long": 62, "augment": [62, 67, 71, 87, 97, 131, 133, 207, 283, 291, 346, 390, 443, 446, 450, 470, 489, 498], "root": [62, 67, 71, 72, 75, 78, 80, 81, 99, 100, 105, 108, 113, 114, 121, 122, 123, 125, 154, 155, 167, 173, 189, 199, 215, 219, 220, 221, 224, 245, 249, 250, 261, 262, 276, 279, 282, 283, 290, 298, 304, 308, 309, 311, 317, 319, 329, 347, 355, 357, 358, 359, 364, 368, 373, 377, 381, 384, 386, 387, 390, 391, 401, 403, 425, 428, 430, 436, 437, 438, 443, 467, 470, 471, 475, 477, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 495, 496], "react": [62, 104, 287, 384, 477, 483], "adequ": [62, 88, 97, 227, 459, 484, 490], "demonstr": [62, 78, 83, 85, 87, 101, 104, 106, 114, 116, 117, 125, 127, 131, 153, 162, 189, 199, 256, 258, 261, 282, 293, 298, 299, 307, 322, 334, 335, 356, 363, 384, 395, 396, 399, 403, 411, 428, 440, 445, 455, 456, 457, 464, 466, 476, 478, 489], "tricki": [62, 71, 97, 99, 106, 160, 170, 307, 384, 456, 477, 478, 485], "tutori": [62, 67, 69, 86, 90, 104, 109, 114, 115, 116, 117, 120, 125, 129, 173, 175, 190, 207, 225, 227, 236, 239, 240, 261, 282, 283, 284, 288, 305, 313, 333, 353, 360, 383, 384, 422, 442, 448, 449, 454, 456, 464, 468, 469, 474, 479, 481, 482, 483, 487, 489], "assort": [62, 67, 71, 86, 207, 390], "topic": [62, 67, 80, 84, 86, 88, 91, 92, 96, 101, 104, 109, 114, 116, 168, 207, 225, 239, 282, 307, 322, 328, 353, 477, 480, 486], "myobject": [62, 87], "myobject_typ": 62, "mymod": 62, "my": [62, 67, 72, 75, 85, 90, 92, 94, 106, 107, 114, 117, 120, 121, 164, 173, 207, 244, 250, 262, 283, 311, 357, 360, 361, 377, 384, 461, 477, 479, 480, 481, 482], "myobj_new": 62, "myobj_dealloc": 62, "myobj_repr": 62, "inst_dict": 62, "weakreflist": [62, 87], "myobj_travers": 62, "myobj_clear": 62, "myobj_hash": 62, "mystr": 62, "mystr_typ": 62, "393": [63, 67, 171, 368, 487, 496, 498], "65536": [63, 464], "1114112": [63, 171], "ineffici": [63, 97, 273, 308, 357, 397, 488, 492], "transit": [63, 106, 111, 112, 120, 196, 240, 276, 283, 345, 354, 410, 440, 445, 479, 481, 482, 484, 487, 490], "canon": [63, 71, 97, 99, 106, 157, 180, 196, 199, 209, 225, 249, 251, 307, 309, 311, 353, 362, 402, 428, 440, 445, 484, 488, 492], "legaci": [63, 67, 71, 78, 83, 89, 127, 156, 176, 177, 185, 206, 208, 209, 210, 212, 216, 219, 220, 223, 231, 237, 249, 262, 265, 270, 271, 285, 303, 307, 308, 320, 347, 351, 357, 363, 368, 377, 403, 437, 447, 450, 470, 474, 476, 484, 488, 489, 490, 491, 493, 495, 496], "pyunicode_fromunicod": [63, 487, 488, 490, 496], "pyunicode_readi": [63, 488, 490], "623": [63, 333, 487], "py_ucs2": [63, 490], "py_ucs1": [63, 490], "narrow": [63, 333, 334, 353, 359, 360, 401, 471, 479, 487, 489, 490], "pyasciiobject": [63, 490], "pycompactunicodeobject": [63, 490], "shouldn": [63, 67, 88, 100, 112, 116, 145, 224, 282, 287, 317, 342, 357, 361, 368, 403, 410, 464, 473, 478, 479, 481, 482, 483, 486, 493], "pyunicode_check": [63, 88], "pyunicode_checkexact": 63, "pyunicode_get_length": [63, 487, 490], "pyunicode_1byte_data": [63, 490], "pyunicode_2byte_data": [63, 490], "pyunicode_4byte_data": [63, 490], "ucs1": 63, "ucs2": 63, "ucs4": [63, 479], "pyunicode_kind": [63, 490], "pyunicode_wchar_kind": [63, 488, 490], "pyunicode_1byte_kind": [63, 490], "pyunicode_2byte_kind": [63, 490], "pyunicode_4byte_kind": [63, 490], "pyunicod": 63, "pyunicode_data": [63, 490], "pyunicode_writ": [63, 490], "saniti": [63, 471, 491], "pyunicode_read": [63, 490], "pyunicode_read_char": [63, 490], "pyunicode_max_char_valu": [63, 490], "pyunicode_get_s": [63, 488, 490], "pyunicode_get_data_s": [63, 488, 490], "pyunicode_as_unicod": [63, 488, 490], "pyunicode_as_data": [63, 488, 490], "as_data": 63, "pyunicode_nbyte_data": 63, "py_unicode_isspac": 63, "ch": [63, 104, 113, 114, 171, 190, 203, 410, 477], "py_unicode_islow": 63, "lowercas": [63, 116, 119, 156, 168, 171, 180, 199, 210, 219, 239, 249, 251, 274, 309, 320, 334, 341, 360, 361, 368, 379, 410, 413, 450, 485], "py_unicode_isupp": 63, "uppercas": [63, 97, 105, 119, 131, 161, 191, 239, 274, 296, 307, 308, 341, 350, 360, 361, 410, 450, 477, 484, 485, 491, 493], "py_unicode_istitl": 63, "titlecas": [63, 360, 450], "py_unicode_islinebreak": 63, "linebreak": 63, "py_unicode_isdecim": [63, 489], "py_unicode_isdigit": 63, "py_unicode_isnumer": 63, "py_unicode_isalpha": 63, "alphabet": [63, 97, 101, 118, 156, 159, 186, 191, 199, 210, 213, 239, 277, 282, 283, 286, 318, 323, 341, 349, 360, 400, 476, 480, 481, 482, 483, 484, 487, 491, 492, 493, 494, 495], "py_unicode_isalnum": 63, "alphanumer": [63, 116, 164, 191, 207, 265, 283, 287, 314, 334, 341, 346, 360, 361, 381, 467, 480], "py_unicode_isprint": 63, "printabl": [63, 67, 156, 159, 171, 190, 191, 209, 210, 211, 212, 216, 217, 222, 239, 269, 297, 300, 360, 361, 362, 443, 478, 485, 489], "nonprint": [63, 332, 360], "databas": [63, 67, 84, 105, 116, 119, 135, 155, 171, 188, 190, 194, 196, 223, 239, 243, 257, 269, 276, 281, 291, 311, 313, 314, 323, 345, 360, 362, 366, 378, 380, 381, 384, 390, 391, 403, 406, 410, 440, 447, 450, 454, 458, 466, 467, 478, 479, 480, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "0x20": [63, 156, 360, 443], "py_unicode_tolow": [63, 489], "py_unicode_toupp": 63, "upper": [63, 71, 97, 104, 107, 113, 114, 116, 133, 134, 159, 161, 164, 173, 190, 203, 262, 298, 334, 353, 354, 356, 357, 360, 361, 390, 399, 403, 443, 445, 446, 451, 464, 480, 489, 495], "py_unicode_totitl": 63, "py_unicode_todecim": 63, "py_unicode_todigit": 63, "py_unicode_tonumer": 63, "py_unicode_is_surrog": 63, "0xd800": 63, "0xdfff": 63, "py_unicode_is_high_surrog": 63, "0xdbff": 63, "py_unicode_is_low_surrog": 63, "0xdc00": 63, "py_unicode_join_surrog": 63, "join": [63, 67, 71, 80, 89, 91, 92, 97, 107, 114, 117, 125, 131, 134, 138, 146, 148, 164, 167, 171, 173, 179, 188, 199, 203, 214, 216, 217, 222, 239, 256, 257, 258, 261, 274, 276, 283, 285, 294, 298, 299, 308, 309, 311, 317, 331, 334, 335, 336, 341, 346, 347, 351, 353, 354, 358, 360, 361, 377, 379, 380, 382, 400, 401, 409, 414, 422, 425, 426, 428, 436, 437, 440, 456, 464, 467, 477, 481, 482, 483, 489, 490, 491, 492, 493, 494, 495], "pyunicode_new": [63, 487, 490], "maxchar": 63, "nearest": [63, 99, 196, 199, 235, 239, 290, 304, 333, 359, 368, 416, 444, 451, 455, 459, 467, 485, 486], "65535": [63, 437, 479], "1114111": [63, 368, 490], "pyunicode_fromkindanddata": [63, 490], "transform": [63, 67, 71, 99, 105, 106, 107, 114, 117, 118, 119, 123, 133, 151, 158, 160, 180, 188, 196, 199, 207, 210, 211, 215, 219, 222, 225, 227, 239, 240, 250, 270, 281, 282, 286, 314, 360, 393, 399, 400, 401, 428, 441, 442, 443, 445, 458, 464, 469, 477, 478, 483, 485, 491, 492, 494], "codepoint": [63, 261, 281], "favor": [63, 174, 237, 239, 256, 262, 264, 303, 308, 311, 320, 351, 357, 360, 377, 401, 403, 410, 481, 483, 485, 487, 488, 489, 491, 492, 493, 495], "li": [63, 167, 196, 256, 360, 401, 426, 443, 487, 492, 494], "lld": [63, 471, 484], "lli": 63, "llu": [63, 484], "zi": 63, "formatt": [63, 67, 129, 131, 283, 284, 307, 361, 480, 484, 487, 489, 491, 492, 494], "ing": [63, 91, 116, 117, 207, 257, 484, 488, 490, 494], "pyunicode_copycharact": [63, 487, 488, 490], "to_start": 63, "from_start": 63, "how_mani": 63, "memcpi": [63, 436, 488], "pyunicode_fil": [63, 488, 490], "fill_char": 63, "bigger": [63, 105, 290, 347, 360, 373, 476, 495], "contrast": [63, 99, 118, 173, 199, 240, 261, 323, 357, 360, 363, 384, 401, 427, 443, 445, 447, 466, 479, 490, 493, 494], "substr": [63, 90, 107, 116, 119, 180, 207, 249, 251, 307, 309, 334, 360, 403, 445, 464, 477, 479, 480, 481, 482, 483, 487, 490, 492, 494], "buflen": [63, 353], "copy_nul": 63, "awar": [63, 67, 89, 92, 95, 99, 111, 112, 116, 117, 118, 122, 151, 180, 192, 195, 208, 210, 214, 216, 217, 219, 220, 223, 239, 240, 244, 262, 281, 287, 308, 356, 357, 361, 368, 381, 382, 384, 415, 428, 431, 459, 465, 466, 470, 471, 474, 476, 477, 479, 480, 481, 485, 486, 487, 489, 490, 493, 494], "hit": [63, 98, 104, 114, 157, 166, 189, 227, 240, 261, 312, 357, 374, 384, 395, 404, 416, 482, 487, 489], "pyunicode_asunicod": [63, 488, 490, 496], "pyunicode_asunicodeands": [63, 488, 490, 496], "383": [63, 171, 353], "strlen": [63, 91, 117, 119], "parsetupl": 63, "wstr": [63, 487], "wcslen": 63, "setlocal": [63, 99, 273, 281, 431, 467, 488, 492], "deviat": [63, 333, 359, 364, 382, 409, 489, 490, 491], "pyunicode_asutf8": [63, 490, 494], "byteord": [63, 360, 363, 368, 465], "bom": [63, 67, 119, 158, 277, 393], "divis": [63, 65, 67, 97, 99, 114, 124, 133, 196, 199, 227, 239, 306, 312, 317, 348, 356, 359, 360, 443, 444, 445, 451, 458, 464, 480, 481, 483, 484, 488, 489, 496, 498], "ufeff": 63, "ufff": 63, "odd": [63, 67, 90, 104, 107, 166, 199, 249, 323, 359, 364, 375, 450, 456, 460, 464, 477, 480, 481, 482, 484], "ordin": [63, 106, 119, 171, 189, 190, 191, 196, 359, 360, 399, 490, 492], "unmap": [63, 391], "0xfffe": [63, 171], "dbc": [63, 171], "code_pag": [63, 490], "cp_acp": [63, 171, 490, 493], "capabl": [63, 71, 72, 77, 88, 99, 104, 105, 107, 114, 116, 120, 122, 133, 138, 143, 152, 173, 182, 190, 199, 207, 226, 248, 250, 259, 262, 266, 268, 270, 272, 273, 274, 287, 297, 298, 303, 307, 320, 321, 322, 335, 390, 394, 405, 409, 428, 430, 437, 445, 466, 470, 479, 480, 481, 482, 489, 490, 491, 492], "sep": [63, 97, 107, 159, 196, 199, 239, 245, 258, 261, 308, 311, 357, 360, 361, 373, 422, 442, 456, 479, 482, 483, 484, 485, 488], "maxsplit": [63, 116, 334, 360], "keepend": [63, 171, 203, 214, 360], "crlf": [63, 237, 258, 259, 494], "tail": [63, 164, 173, 203, 276, 309, 349, 428, 482, 490, 493], "overlap": [63, 104, 116, 174, 179, 190, 203, 239, 274, 276, 297, 307, 311, 334, 359, 360, 387, 399, 451, 455, 478, 479], "replstr": 63, "maxcount": 63, "iso": [63, 163, 171, 196, 203, 209, 210, 216, 219, 253, 256, 281, 303, 329, 353, 356, 368, 381, 413, 422, 432, 434, 477, 481, 488, 489, 492, 493, 495], "8859": [63, 119, 171, 203, 209, 210, 216, 219, 256, 303, 329, 356, 422, 432, 477, 489, 492], "accordingli": [63, 88, 101, 104, 107, 111, 182, 232, 239, 240, 273, 276, 333, 360, 409, 410, 416, 443, 445, 447, 470, 479, 483, 489, 490, 491, 493, 494], "p_unicod": 63, "clarif": [63, 447], "lot": [63, 67, 71, 74, 85, 87, 89, 90, 91, 92, 96, 97, 101, 108, 113, 116, 117, 119, 120, 121, 164, 182, 183, 189, 197, 207, 214, 248, 259, 274, 282, 298, 307, 319, 323, 345, 354, 364, 389, 397, 404, 414, 424, 454, 455, 469, 477, 478, 479, 480, 481, 483, 484, 485, 491, 496], "neutral": [63, 80, 85, 111, 269, 491], "grammar": [65, 67, 107, 123, 170, 239, 279, 361, 392, 442, 448, 449, 450, 452, 477, 478, 482, 485, 487, 496], "py_eval_input": [65, 91, 446], "py_file_input": [65, 446, 487], "py_single_input": [65, 446], "incompat": [65, 80, 99, 124, 179, 189, 197, 225, 227, 270, 274, 281, 282, 286, 289, 303, 314, 401, 439, 451, 471, 477, 480, 482, 485, 489, 490, 492, 494, 495, 496], "pyrun_anyfil": 65, "pyrun_anyfileexflag": 65, "closeit": 65, "pyrun_anyfileflag": 65, "pycompilerflag": [65, 495], "pyrun_anyfileex": 65, "devic": [65, 67, 71, 99, 111, 143, 171, 190, 191, 226, 239, 250, 261, 269, 273, 284, 308, 309, 311, 343, 344, 347, 348, 353, 358, 364, 366, 368, 373, 420, 428, 452, 463, 470, 477, 483], "pseudo": [65, 67, 106, 131, 194, 210, 269, 289, 301, 305, 308, 317, 337, 341, 357, 360, 368, 406, 447, 479, 480, 483, 490, 493], "pyrun_interactiveloop": [65, 91], "pyrun_simplefil": [65, 84], "pyrun_simplefileexflag": 65, "pyrun_simplestringflag": 65, "pyrun_simplefileex": 65, "fopen": [65, 490], "rb": [65, 96, 99, 114, 128, 138, 162, 173, 214, 222, 232, 239, 248, 249, 264, 267, 268, 273, 285, 303, 314, 317, 360, 393, 394, 401, 412, 416, 422, 434, 437, 450, 461, 467, 477, 480, 487, 490], "lf": [65, 191, 222, 450], "pyrun_interactiveon": 65, "pyrun_interactiveoneflag": 65, "ps1": [65, 170, 353, 368, 414, 453, 465, 470, 495], "ps2": [65, 170, 368, 453, 465, 470], "errcod": [65, 434], "pyrun_interactiveloopflag": 65, "eof": [65, 117, 138, 142, 145, 148, 149, 162, 168, 170, 181, 207, 227, 237, 239, 273, 285, 308, 324, 343, 346, 353, 356, 357, 374, 439, 470, 482, 487, 490], "prototyp": [65, 67, 83, 90, 129, 168, 199, 356, 477, 482, 484], "idl": [65, 67, 91, 92, 97, 99, 179, 188, 189, 191, 243, 269, 349, 364, 383, 384, 399, 425, 426, 428, 474, 476, 479, 480, 498], "wait": [65, 67, 76, 85, 97, 98, 104, 108, 114, 117, 120, 126, 131, 133, 136, 137, 138, 141, 143, 144, 145, 146, 149, 150, 179, 190, 202, 221, 222, 259, 261, 269, 270, 272, 275, 284, 297, 298, 299, 308, 310, 331, 333, 337, 340, 344, 348, 351, 353, 354, 356, 357, 358, 364, 376, 377, 380, 385, 388, 399, 403, 410, 414, 418, 456, 464, 467, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496], "_tkinter": [65, 384, 399, 480, 488, 492, 496], "pyos_readlinefunctionpoint": [65, 91, 487, 491], "edit": [65, 67, 71, 74, 92, 104, 107, 114, 116, 119, 121, 168, 180, 190, 203, 239, 264, 265, 277, 286, 287, 308, 309, 318, 334, 335, 359, 373, 382, 383, 384, 391, 394, 460, 463, 467, 470, 476, 477, 478, 480, 481, 483, 485, 489, 490, 493, 494], "pyrun_str": [65, 91], "pyrun_stringflag": 65, "pyrun_fil": 65, "pyrun_fileexflag": 65, "pyrun_fileex": 65, "pyrun_fileflag": 65, "py_compilestringflag": 65, "py_compilestringexflag": 65, "py_compilestringobject": 65, "constrain": [65, 111, 132, 133, 222, 299, 401, 428, 445, 447, 479, 482, 489, 495], "kwcount": 65, "defcount": 65, "kwdef": 65, "precompil": [65, 339, 360, 470], "unvarnish": 65, "thrown": [65, 107, 151, 196, 199, 283, 334, 479, 480, 490], "pyeval_mergecompilerflag": 65, "cf": [65, 116, 353], "arbitrarili": [65, 78, 99, 133, 180, 182, 204, 283, 333, 360, 403, 410, 445, 456, 461, 481, 487, 495], "__future__": [65, 67, 99, 100, 123, 172, 227, 239, 269, 270, 278, 330, 401, 442, 443, 451, 479, 480, 482, 483, 485, 487, 488, 491, 492, 494, 495, 496, 498], "cf_flag": [65, 495], "cf_feature_vers": [65, 495], "pycf_only_ast": [65, 133, 482, 495], "co_future_divis": [65, 495, 496], "238": [65, 67, 99, 124, 485, 498], "proxi": [66, 67, 177, 180, 183, 200, 227, 239, 240, 256, 262, 272, 350, 357, 360, 400, 403, 410, 417, 425, 434, 441, 443, 478, 483, 489, 490, 492, 493, 495], "pyweakref_check": 66, "pyweakref_checkref": 66, "pyweakref_checkproxi": 66, "pyweakref_get_object": [66, 488], "summari": [67, 71, 72, 80, 92, 96, 184, 207, 266, 307, 317, 322, 337, 395, 396, 401, 422, 441, 456, 459, 468, 476, 478, 479, 480, 481, 489, 498], "highlight": [67, 90, 92, 104, 190, 203, 261, 403, 409, 472, 477, 484, 489, 498], "657": 67, "fine": [67, 75, 85, 90, 96, 97, 98, 112, 114, 117, 119, 120, 180, 189, 190, 207, 215, 225, 239, 257, 282, 307, 308, 333, 334, 348, 357, 368, 384, 401, 404, 410, 443, 461, 466, 467, 476, 477, 478, 480, 482], "grain": [67, 96, 113, 114, 190, 207, 225, 282, 308, 333, 368, 410, 443, 498], "654": 67, "678": 67, "enrich": [67, 84, 460], "launcher": [67, 122, 414, 436, 463, 473, 474, 484, 491, 493, 494, 498], "646": [67, 171, 401], "655": [67, 401], "typeddict": [67, 401, 487, 495], "673": [67, 114, 401], "675": [67, 239, 401], "681": [67, 401], "563": [67, 124, 303, 401, 442, 451], "asyncio": [67, 96, 114, 125, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 169, 177, 182, 201, 269, 275, 298, 350, 357, 364, 368, 380, 404, 405, 443, 445, 470], "contextlib": [67, 90, 200, 269, 330, 356, 360, 397, 484, 485, 486, 495], "dataclass": [67, 173, 225, 250, 269, 322, 323, 330, 331, 356, 360, 401, 455, 456], "fcntl": [67, 155, 269, 353, 406, 479, 480, 481, 483], "fraction": [67, 85, 92, 119, 173, 196, 199, 207, 239, 240, 269, 276, 281, 290, 304, 305, 323, 333, 334, 356, 357, 359, 360, 380, 381, 399, 445, 450, 459, 464, 479, 480, 481, 482, 484, 485, 486, 487, 492, 493, 495, 496], "functool": [67, 97, 99, 100, 105, 118, 123, 138, 141, 160, 173, 234, 238, 239, 266, 269, 270, 276, 360, 443, 482, 483, 484, 485, 486], "idlelib": [67, 169, 383, 384, 480], "math": [67, 99, 107, 121, 167, 173, 179, 199, 207, 226, 235, 239, 269, 276, 298, 304, 305, 333, 359, 360, 363, 368, 399, 441, 443, 445, 457, 459, 461, 466, 471, 480, 481, 483, 484, 486], "pathlib": [67, 131, 155, 176, 233, 245, 266, 267, 268, 269, 308, 309, 431, 436, 437], "shutil": [67, 96, 114, 120, 130, 155, 179, 233, 239, 248, 269, 308, 364, 373, 377, 417, 466, 480, 483, 484, 487, 494, 496], "sqlite3": [67, 96, 105, 155, 173, 269, 313, 314, 466, 471, 483, 484, 495], "sysconfig": [67, 77, 80, 84, 169, 269, 308, 330, 397, 414, 436, 440, 487, 491], "tempfil": [67, 120, 155, 214, 233, 239, 269, 298, 308, 342, 377, 410, 417, 483, 485], "tkinter": [67, 92, 116, 269, 383, 399, 474, 477, 480, 483, 484, 485, 486], "unicodedata": [67, 116, 119, 269, 360, 378, 445, 450, 477, 482, 483, 484, 487, 489, 490], "unittest": [67, 90, 96, 123, 169, 200, 269, 377, 397, 415, 466, 480, 486, 496], "venv": [67, 99, 114, 122, 125, 169, 205, 266, 269, 370, 468, 476, 490, 494], "zipfil": [67, 71, 72, 81, 130, 169, 269, 339, 342, 347, 373, 415, 436, 447, 466, 467, 470, 477, 482, 483, 484, 486], "cheaper": [67, 396, 494], "lazi": [67, 90, 100, 107, 121, 147, 239, 276, 295, 357, 360, 368, 374, 420, 482, 487, 492, 494], "659": 67, "faq": [67, 71, 94, 99, 104, 239, 249, 270, 305, 320, 360, 409, 444, 464, 469, 482, 484, 491], "speedup": [67, 314, 441, 446, 478, 482, 483, 484, 486, 489, 490, 491, 495], "Will": [67, 71, 84, 123, 134, 189, 262, 270, 298, 334, 359, 391, 420, 494], "workload": [67, 136, 146, 496], "jit": [67, 493], "tarfil": [67, 125, 130, 169, 269, 347, 466, 480, 481, 482, 483, 484, 493, 494], "openssl": [67, 249, 251, 357, 377, 471, 473, 477, 482, 483, 484, 487, 489, 491, 492, 493, 494, 496], "wildcard": [67, 133, 202, 234, 245, 303, 346, 357, 364, 403, 428, 450, 456, 458, 460, 494, 495], "604": [67, 100, 360, 401], "612": [67, 113, 401, 483], "613": [67, 401], "typealia": [67, 401], "647": [67, 401], "argpars": [67, 97, 109, 114, 129, 173, 203, 214, 242, 269, 307, 324, 414, 466, 498], "asynchat": [67, 152, 269, 366, 441, 483, 488, 491], "asyncor": [67, 134, 269, 350, 354, 366, 441, 481, 483, 488], "smtpd": [67, 208, 269, 366, 488, 493, 496], "base64": [67, 159, 169, 171, 209, 210, 211, 212, 213, 216, 217, 220, 222, 249, 262, 266, 269, 300, 332, 341, 342, 351, 357, 397, 410, 412, 434, 479, 481, 496], "bdb": [67, 180, 198, 269, 312, 471, 484, 495], "bisect": [67, 195, 269, 467, 481], "curs": [67, 109, 129, 269, 477, 478, 481, 483], "distutil": [67, 72, 74, 77, 79, 80, 81, 86, 88, 89, 122, 205, 266, 269, 349, 370, 436, 471, 478, 482, 483, 484, 488, 489, 495, 498], "doctest": [67, 90, 96, 123, 169, 189, 200, 269, 377, 393, 396, 397, 403, 466, 478, 480, 482, 484, 486, 489, 490], "fileinput": [67, 169, 233, 239, 269, 308, 368, 482, 488, 489, 495], "glob": [67, 73, 80, 114, 155, 157, 207, 233, 234, 269, 296, 309, 311, 312, 347, 364, 466, 483, 484, 488, 489, 493], "hmac": [67, 186, 187, 249, 269, 284, 298, 314, 341, 353, 479, 484, 495], "metadata": [67, 77, 78, 79, 80, 81, 96, 110, 120, 122, 194, 240, 244, 265, 269, 270, 295, 303, 308, 309, 326, 347, 358, 373, 401, 434, 437, 443, 447, 456, 468, 488, 489, 491, 492, 493, 494, 495, 496, 498], "itertool": [67, 99, 123, 173, 238, 239, 240, 250, 261, 265, 269, 294, 306, 333, 359, 480, 481, 482, 483, 484, 485, 486], "linecach": [67, 233, 269, 397], "pprint": [67, 105, 160, 195, 203, 269, 312, 314, 357, 467, 478, 486, 489], "py_compil": [67, 71, 97, 169, 176, 264, 269, 279, 484, 489, 491], "pyclbr": [67, 169, 269, 279], "shelv": [67, 96, 197, 269, 289, 313, 314, 342, 360, 477, 480, 489], "ssl": [67, 106, 120, 138, 145, 148, 237, 256, 262, 269, 275, 284, 303, 308, 320, 342, 351, 353, 401, 410, 422, 434, 441, 471, 475, 477, 480, 481, 484, 496], "urllib": [67, 96, 109, 123, 148, 155, 164, 179, 182, 237, 240, 255, 256, 257, 269, 271, 284, 308, 322, 324, 397, 404, 414, 466, 477, 480, 482, 483, 485], "zipimport": [67, 189, 267, 269, 295, 317, 447, 480, 482, 486], "652": 67, "zoneinfo": [67, 195, 196, 269, 381, 471], "graphlib": [67, 195, 269], "ast": [67, 169, 197, 239, 269, 279, 367, 392, 393, 482, 487, 488, 490, 494], "compileal": [67, 97, 169, 269, 279, 326, 368, 465, 476, 489, 493], "ftplib": [67, 155, 169, 171, 269, 271, 410, 478, 480, 483, 484, 489, 491, 492, 493, 494, 495], "imaplib": [67, 116, 155, 208, 269, 271, 320, 479, 480, 481, 484, 486, 493], "ipaddress": [67, 109, 269, 271, 495], "multiprocess": [67, 96, 113, 117, 137, 138, 177, 179, 261, 269, 284, 331, 342, 357, 377, 380, 413, 422, 436, 484, 485, 498], "nntplib": [67, 155, 208, 215, 269, 366, 477, 481, 484, 486, 488, 489], "pdb": [67, 97, 125, 155, 157, 169, 198, 207, 228, 239, 269, 368, 396, 397, 470, 476, 480, 482, 483, 486, 488], "poplib": [67, 155, 169, 208, 269, 271, 466, 481, 490, 493], "smtplib": [67, 96, 114, 155, 208, 214, 215, 222, 269, 271, 284, 357, 466, 479, 483, 489, 493], "sur": 67, "appl": [67, 105, 189, 203, 231, 261, 269, 284, 306, 363, 457, 466, 474, 480, 483, 484, 486, 493], "silicon": [67, 474], "mac": [67, 121, 239, 249, 347, 357, 391, 413, 471, 473, 485, 487, 489, 491, 493, 494], "14": [67, 97, 101, 107, 108, 110, 116, 119, 132, 151, 154, 163, 171, 173, 189, 190, 196, 199, 204, 207, 239, 250, 255, 261, 274, 276, 308, 334, 337, 347, 359, 360, 361, 368, 373, 381, 393, 399, 401, 402, 413, 445, 450, 457, 459, 461, 464, 467, 479, 481, 482, 484, 487, 488, 489, 492, 498], "parallel": [67, 71, 96, 99, 107, 112, 114, 136, 138, 141, 146, 149, 173, 176, 177, 178, 182, 221, 239, 246, 249, 269, 276, 368, 399, 403, 416, 418, 428, 458, 467, 470, 477, 484, 488, 489, 490, 491, 492, 496], "band": [67, 152, 313, 343], "cprofil": [67, 169, 198, 482], "csv": [67, 112, 173, 231, 269, 377, 466, 480, 482, 486, 493], "gettext": [67, 101, 114, 260, 269, 281, 426, 450, 466, 477, 481, 488], "gzip": [67, 71, 72, 81, 92, 99, 114, 130, 162, 169, 171, 214, 232, 269, 291, 347, 373, 377, 424, 441, 466, 477, 480, 484, 486, 487, 491, 493], "json": [67, 113, 114, 131, 164, 169, 180, 266, 269, 273, 283, 284, 300, 313, 322, 363, 460, 466, 484, 486, 487, 489, 490, 491, 496], "plistlib": [67, 231, 269, 493, 494, 496], "shlex": [67, 125, 138, 149, 180, 236, 269, 312, 364, 496], "xmlrpc": [67, 269, 271, 298, 314, 424, 441, 466, 479, 485, 491], "demo": [67, 83, 101, 114, 116, 190, 236, 261, 422, 426, 435, 466, 480, 483, 489], "postpon": [67, 124, 190, 265, 401, 442, 443, 488], "553": 67, "562": [67, 443], "564": 67, "nanosecond": [67, 308, 381, 382, 420, 482, 488, 490, 495, 496], "565": [67, 227], "560": [67, 400, 443], "545": 67, "binascii": [67, 112, 156, 171, 269, 300, 412, 441, 484, 488, 491, 496], "calendar": [67, 169, 195, 196, 269, 381, 466, 477, 480, 488, 493], "crypt": [67, 187, 269, 325, 366, 441, 488, 493], "dbm": [67, 96, 269, 313, 314, 345, 443, 471, 484, 485, 495], "di": [67, 99, 104, 169, 196, 226, 269, 270, 279, 315, 368, 417, 482, 493, 495], "server": [67, 92, 95, 96, 97, 104, 107, 113, 117, 120, 121, 134, 135, 136, 142, 164, 169, 180, 183, 189, 205, 208, 212, 214, 222, 237, 240, 249, 255, 256, 257, 258, 261, 262, 269, 271, 272, 274, 282, 283, 284, 298, 303, 308, 311, 320, 328, 333, 342, 343, 344, 348, 351, 353, 356, 366, 368, 370, 371, 374, 377, 380, 384, 397, 401, 403, 408, 410, 424, 441, 466, 467, 476, 478, 479, 480, 481, 482, 483, 484, 490, 491, 492, 493, 495, 496, 498], "mimetyp": [67, 169, 211, 214, 269, 287, 300, 397, 422, 479, 483, 484, 493], "msilib": [67, 269, 366, 482, 483, 488], "queue": [67, 96, 113, 114, 117, 134, 135, 138, 173, 177, 190, 195, 226, 246, 269, 276, 284, 308, 333, 337, 340, 343, 353, 354, 360, 374, 376, 380, 384, 428, 460, 467, 477, 480, 481, 482, 483, 485, 489, 492, 495, 496], "socketserv": [67, 114, 255, 259, 269, 271, 353, 435, 483, 484, 485], "mock": [67, 200, 269, 397, 403, 488, 490, 491, 495, 496], "uu": [67, 159, 171, 269, 366, 441, 479, 488], "uuid": [67, 269, 271, 296, 353, 482, 488, 495], "etre": [67, 269, 288, 424, 426, 466, 482, 484, 489, 493, 495, 496], "zipapp": [67, 125, 169, 205, 269], "aifc": [67, 220, 269, 352, 365, 366, 416, 477, 488, 496], "macpath": [67, 495], "sunau": [67, 269, 366, 488, 496], "wave": [67, 166, 269, 292, 365, 477, 493, 496], "498": [67, 99, 450, 491], "526": [67, 99, 114, 133, 194, 401, 442, 451, 487, 494, 495], "515": [67, 235, 361, 488], "525": [67, 99, 174, 270, 368, 445], "530": [67, 445], "487": 67, "enhanc": [67, 90, 92, 99, 104, 107, 114, 117, 188, 206, 240, 269, 283, 350, 357, 364, 377, 391, 399, 401, 441, 445, 450, 462, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 498], "519": [67, 99, 397], "495": [67, 440], "520": 67, "468": [67, 173], "dtrace": [67, 109, 471], "systemtap": [67, 109, 471], "probe": [67, 491], "cmath": [67, 99, 269, 290, 305, 360, 481, 483, 491], "pickletool": [67, 169, 269, 279, 314, 397, 483], "rlcomplet": [67, 125, 269, 335, 349, 378, 482, 483], "telnetlib": [67, 155, 269, 366, 483, 488], "timeit": [67, 97, 169, 182, 198, 269, 323, 466, 470, 480, 481, 483], "robotpars": [67, 269, 271, 407, 477, 485], "winreg": [67, 155, 269, 419, 465, 485], "winsound": [67, 89, 269, 419], "grp": [67, 269, 325, 355, 364, 406, 480, 496], "regen": [67, 471], "13": [67, 107, 110, 114, 115, 119, 121, 123, 128, 151, 154, 163, 164, 165, 166, 171, 173, 186, 189, 196, 207, 225, 240, 250, 255, 263, 274, 276, 281, 287, 293, 296, 302, 309, 310, 316, 337, 347, 352, 355, 356, 359, 360, 361, 365, 374, 375, 393, 399, 401, 412, 418, 423, 456, 461, 464, 465, 479, 480, 481, 482, 483, 484, 488, 489, 491, 492, 494, 495, 496, 498], "492": [67, 99, 174, 270, 442, 443, 445, 493], "465": [67, 351], "infix": [67, 90], "448": [67, 445], "461": [67, 360], "percent": [67, 96, 359, 361, 392, 409, 410, 441, 467, 476, 483, 485, 489], "484": [67, 99, 133, 360, 401, 442, 443, 451, 456, 487, 488, 493, 494, 495], "471": [67, 173], "scandir": [67, 155, 245, 308, 493, 494, 495], "475": [67, 227, 239, 308, 343, 344, 348, 353, 381], "retri": [67, 116, 120, 227, 239, 284, 308, 343, 344, 348, 353, 357, 364, 388, 410, 444, 456, 479, 480, 484, 488], "479": [67, 124, 227, 493, 494], "485": [67, 167, 290], "486": [67, 228, 490], "488": [67, 71, 265, 326, 377, 470], "elimin": [67, 99, 105, 113, 173, 199, 203, 265, 266, 276, 277, 286, 309, 311, 315, 399, 443, 455, 457, 467, 471, 481, 488, 490, 495], "pyo": [67, 176, 264, 265, 397, 480, 483, 484, 491], "bz2": [67, 71, 72, 81, 130, 171, 189, 232, 269, 285, 311, 347, 373, 377, 437, 466, 480, 484, 486, 487, 491, 496], "cgi": [67, 120, 259, 269, 342, 343, 366, 410, 411, 422, 435, 477, 483, 487, 488, 489, 491, 493, 494, 495, 496], "configpars": [67, 125, 231, 269, 283, 346, 477, 481, 484, 485, 486, 488, 491, 494], "difflib": [67, 158, 169, 207, 230, 269, 378, 478, 479, 481, 482, 483, 484, 491], "heapq": [67, 99, 195, 239, 240, 269, 331, 333, 467, 480, 481, 482, 483], "imghdr": [67, 269, 352, 366, 488], "lzma": [67, 130, 162, 269, 347, 373, 377, 424, 437, 466, 487, 491], "selector": [67, 107, 137, 138, 143, 269, 275, 276, 343, 348, 354, 357, 376, 383, 410, 484, 486, 488, 494], "sndhdr": [67, 269, 366, 488], "bio": [67, 303], "negoti": [67, 152, 255, 357, 483, 490], "wsgiref": [67, 269, 271, 488, 489, 493, 495], "sax": [67, 269, 288, 424, 425, 426, 427, 466, 477, 478, 487, 493, 494, 495], "453": [67, 224], "bootstrap": [67, 122, 155, 205, 269, 333, 349, 414], "pip": [67, 121, 125, 205, 206, 266, 269, 276, 414, 436, 460, 470, 476, 487], "446": [67, 484], "ensurepip": [67, 122, 155, 169, 205, 269, 414, 471, 487], "audioop": [67, 269, 366, 482, 488, 496], "colorsi": [67, 269, 292], "filecmp": [67, 169, 203, 233, 269, 477], "html": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 90, 91, 92, 107, 113, 116, 120, 121, 138, 148, 163, 164, 165, 171, 175, 203, 214, 219, 256, 257, 259, 261, 269, 288, 308, 328, 356, 357, 384, 395, 409, 410, 411, 422, 426, 427, 428, 432, 434, 435, 439, 441, 443, 450, 467, 470, 471, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 492, 494, 495, 496, 498], "pty": [67, 155, 269, 308, 357, 406], "stat": [67, 71, 99, 119, 198, 203, 230, 233, 248, 265, 269, 273, 284, 303, 308, 309, 311, 320, 347, 357, 373, 397, 401, 447, 471, 479, 480, 482, 483, 487, 489, 492, 493, 494, 495], "textwrap": [67, 131, 269, 378, 467, 480, 483], "445": 67, "436": [67, 334], "clinic": [67, 493, 495], "476": [67, 397], "certif": [67, 138, 145, 148, 237, 256, 262, 284, 320, 351, 377, 410, 434, 483, 494], "verif": [67, 130, 251, 283, 356, 357, 360, 409, 489], "405": [67, 120, 255, 414, 498], "420": [67, 99, 265, 447, 498], "3118": [67, 360, 485, 495, 498], "flexibl": [67, 80, 85, 96, 99, 101, 105, 111, 114, 116, 123, 145, 164, 173, 182, 189, 203, 207, 210, 219, 222, 244, 282, 283, 298, 307, 310, 314, 356, 360, 364, 373, 381, 401, 404, 426, 428, 443, 454, 455, 467, 477, 478, 480, 482, 484, 485, 489, 492, 496, 498], "397": [67, 347, 476, 492, 498], "rework": [67, 227, 303, 478, 479, 480, 482, 484, 489, 493, 498], "380": [67, 445, 498], "subgener": [67, 445, 498], "409": [67, 120, 255, 498], "414": [67, 120, 199, 255, 397, 450, 480, 498], "3155": [67, 99, 498], "412": [67, 120, 240, 255, 498], "362": [67, 99, 110, 270, 498], "421": [67, 255, 368, 498], "simplenamespac": [67, 173, 322, 400, 414, 496], "finer": [67, 86, 99, 113, 138, 282, 308, 459, 494, 495, 498], "framework": [67, 71, 90, 93, 96, 114, 127, 134, 135, 138, 145, 168, 180, 183, 189, 198, 200, 207, 208, 255, 261, 269, 271, 349, 351, 357, 360, 368, 383, 401, 404, 410, 422, 435, 443, 458, 471, 474, 479, 480, 483, 484, 485, 489, 491, 492, 494, 495, 496, 498], "sched": [67, 177, 269, 483], "webbrows": [67, 155, 169, 214, 269, 271, 477, 482, 488], "elementtre": [67, 269, 288, 424, 426, 466, 491, 493, 495, 496], "384": [67, 196, 482, 487, 496, 498], "389": [67, 498], "391": [67, 498], "3148": [67, 179, 498], "repositori": [67, 92, 108, 122, 265, 440, 475, 477, 478, 482, 484, 498], "3149": [67, 368, 498], "3333": [67, 422, 498], "gatewai": [67, 92, 120, 269, 271, 366, 469, 482, 498], "v1": [67, 353, 363, 498], "ftp": [67, 92, 120, 269, 271, 284, 301, 357, 409, 410, 475, 477, 478, 483, 484, 490, 493, 494, 495, 496], "popen": [67, 114, 138, 145, 149, 155, 164, 177, 222, 262, 308, 316, 321, 343, 353, 375, 377, 414, 443, 481, 483, 490, 491, 493, 494, 495], "nntp": [67, 208, 269, 366, 409, 481, 490, 496], "mailbox": [67, 97, 208, 215, 262, 269, 300, 320, 469, 482, 484, 493, 496], "turtledemo": [67, 169, 236, 261], "372": [67, 498], "378": [67, 108, 361, 397, 498], "thousand": [67, 119, 249, 269, 281, 322, 323, 334, 361, 424, 456, 493, 494, 498], "stumbl": [67, 117, 498], "And": [67, 72, 80, 85, 87, 97, 101, 106, 107, 113, 114, 117, 121, 131, 133, 179, 182, 188, 199, 204, 207, 239, 244, 250, 261, 272, 277, 306, 307, 334, 356, 357, 373, 391, 399, 404, 405, 437, 446, 456, 478, 482, 486, 489, 490], "3101": [67, 361, 498], "miscellan": [67, 77, 129, 130, 168, 177, 204, 208, 231, 269, 300, 383, 422, 473, 498], "3106": [67, 498], "3137": [67, 498], "ttk": [67, 269, 383, 384, 390, 486, 493, 494, 495], "theme": [67, 261, 269, 383, 384, 480, 483, 486, 493, 494], "widget": [67, 93, 104, 105, 114, 121, 129, 182, 194, 202, 261, 269, 307, 383, 386, 399, 403, 477, 480, 481, 486, 489, 493], "tk": [67, 121, 261, 269, 386, 387, 399, 454, 474, 476, 477, 478, 483, 486, 487, 488, 489, 490, 492, 493, 494, 496], "freebsd": [67, 104, 126, 145, 226, 229, 308, 310, 324, 337, 343, 353, 368, 377, 380, 381, 473, 482, 488, 491, 494, 496], "mainten": [67, 122, 224, 341, 450, 465, 476, 487, 489, 490, 491, 494, 495, 496, 498], "434": [67, 261], "branch": [67, 90, 167, 204, 285, 318, 334, 377, 390, 395, 455, 456, 477, 482, 483, 487, 496], "466": 67, "network": [67, 95, 113, 117, 119, 120, 121, 134, 135, 136, 137, 142, 145, 148, 152, 154, 158, 197, 226, 261, 263, 269, 271, 272, 284, 298, 303, 308, 314, 318, 337, 343, 351, 357, 363, 370, 373, 377, 409, 410, 413, 420, 424, 429, 435, 447, 458, 461, 478, 479, 480, 483, 488, 490, 492, 494, 495], "477": 67, "backport": [67, 261, 266, 267, 329, 373, 401, 404, 428, 437, 483, 487, 492, 493, 494, 495, 496], "493": [67, 110], "acknowledg": [67, 148, 180, 191, 260, 498], "tracker": [67, 92, 108, 122, 298, 377, 482, 484], "roundup": 67, "343": [67, 99, 124, 182, 442, 443, 461, 464, 485, 498], "366": [67, 106, 110, 196, 265, 339, 381, 447, 485, 490, 498], "370": [67, 349, 470, 485, 498], "371": [67, 485, 498], "3105": [67, 124, 485, 498], "3110": [67, 485, 498], "3112": [67, 124, 485, 498], "3116": [67, 99, 485, 486, 498], "3127": [67, 485, 498], "3129": [67, 442, 485, 498], "decor": [67, 99, 105, 106, 114, 127, 133, 153, 173, 174, 189, 194, 195, 200, 239, 240, 265, 270, 330, 336, 360, 377, 403, 435, 442, 443, 445, 446, 482, 484, 485, 487, 488, 489, 490, 491, 494, 495, 496, 498], "3141": [67, 127, 304, 485, 498], "future_builtin": [67, 123], "javascript": [67, 180, 254, 258, 272, 277, 314, 456, 461, 487], "notat": [67, 90, 99, 107, 111, 114, 116, 119, 173, 180, 199, 239, 274, 277, 293, 308, 314, 329, 353, 360, 361, 364, 378, 384, 404, 425, 428, 430, 442, 443, 445, 446, 448, 450, 455, 457, 459, 461, 465, 470, 480, 481, 482, 485, 489, 495, 496], "irix": [67, 485], "308": [67, 240, 255, 445, 498], "309": [67, 498], "314": [67, 71, 97, 498], "328": [67, 124, 239, 265, 447, 485, 490, 498], "338": [67, 339, 447, 470, 498], "341": [67, 114, 498], "unifi": [67, 133, 171, 203, 207, 314, 402, 455, 491, 498], "342": [67, 107, 174, 382, 445, 498], "352": [67, 483, 485, 488, 498], "ssize_t": [67, 189, 363, 489, 490, 498], "357": [67, 498], "218": [67, 240, 498], "237": [67, 360, 485, 498], "289": [67, 107, 240, 323, 498], "292": [67, 114, 282, 361, 498], "318": [67, 442, 498], "322": [67, 498], "324": [67, 97, 364, 498], "327": [67, 488, 498], "331": [67, 498], "cookielib": [67, 484, 485], "datatyp": [67, 87, 97, 189, 195, 199, 231, 269, 277, 314, 394, 467, 481, 483, 484, 486, 489, 498], "263": [67, 119, 265, 393, 482, 498], "273": [67, 171, 285, 299, 438, 498], "zip": [67, 71, 72, 78, 81, 97, 99, 107, 114, 121, 123, 125, 130, 159, 171, 173, 179, 205, 239, 265, 266, 267, 268, 269, 276, 290, 295, 342, 347, 356, 360, 361, 369, 373, 377, 424, 447, 455, 457, 465, 467, 468, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 498], "archiv": [67, 72, 77, 78, 79, 81, 96, 114, 115, 121, 125, 205, 233, 266, 269, 286, 295, 358, 369, 377, 414, 441, 466, 469, 477, 478, 482, 483, 484, 486, 488, 489, 491, 494, 495, 498], "277": [67, 498], "nt": [67, 71, 113, 120, 173, 284, 308, 318, 329, 330, 368, 414, 426, 428, 477, 489, 495, 498], "278": [67, 99, 498], "univers": [67, 71, 74, 99, 106, 188, 196, 239, 249, 262, 265, 273, 318, 360, 373, 381, 403, 409, 413, 437, 455, 471, 481, 482, 483, 488, 491, 493, 494, 495, 496, 498], "279": [67, 240, 498], "282": [67, 77, 282, 347, 498], "285": [67, 99, 455, 498], "293": [67, 397, 498], "301": [67, 71, 114, 120, 255, 410, 498], "302": [67, 99, 120, 239, 255, 256, 259, 264, 265, 280, 317, 339, 368, 410, 438, 447, 482, 483, 486, 490, 498], "305": [67, 120, 188, 255, 498], "307": [67, 120, 255, 314, 410, 498], "optpars": [67, 101, 129, 269, 366, 481, 482, 484, 489, 493], "252": [67, 111, 350, 443, 498], "253": [67, 111, 498], "diamond": [67, 106, 190, 239, 443, 455], "234": [67, 199, 361, 467, 486, 492, 498], "227": [67, 124, 498], "236": [67, 124, 451, 498], "207": [67, 255, 323, 498], "230": [67, 237, 489, 493, 498], "229": [67, 498], "205": [67, 120, 255, 259, 303, 417, 498], "232": [67, 498], "235": [67, 265, 498], "217": [67, 397, 498], "208": [67, 255, 498], "241": [67, 498], "sax2": [67, 269, 288, 424, 426, 430], "dom": [67, 269, 272, 288, 424, 430, 466, 478, 480, 482, 488, 493, 494, 495], "relationship": [67, 77, 105, 145, 173, 174, 196, 207, 250, 313, 359, 360, 368, 384, 395, 417, 425, 441, 443, 455, 482], "pyxml": [67, 80, 478], "changelog": [67, 322, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498], "whet": [67, 460, 479], "appetit": [67, 460, 479], "toward": [67, 97, 159, 199, 207, 210, 219, 232, 235, 236, 239, 282, 290, 360, 368, 379, 381, 399, 443, 455, 460, 478, 480, 482, 483, 491, 496], "recap": [67, 105, 460], "lambda": [67, 99, 114, 118, 133, 138, 145, 157, 160, 173, 180, 194, 203, 240, 249, 270, 276, 298, 314, 333, 356, 360, 373, 379, 382, 400, 403, 404, 405, 414, 435, 442, 443, 446, 448, 450, 457, 460, 477, 478, 479, 481, 482, 483, 485, 486, 491, 492, 496], "intermezzo": [67, 86, 460], "intra": [67, 125, 203, 460], "fancier": [67, 96, 131, 203, 460, 481, 482, 484], "predefin": [67, 85, 97, 113, 116, 123, 168, 171, 189, 190, 261, 282, 296, 361, 384, 388, 418, 420, 439, 443, 460], "remark": [67, 92, 286, 399, 405, 460, 477, 481], "brief": [67, 92, 120, 121, 131, 207, 219, 239, 240, 283, 307, 317, 323, 334, 337, 360, 364, 395, 441, 457, 460, 477, 479, 481, 482, 485, 489], "tour": [67, 107, 460, 479, 480, 498], "internet": [67, 92, 109, 111, 117, 156, 208, 224, 237, 249, 254, 257, 261, 269, 287, 332, 351, 353, 354, 357, 377, 378, 381, 409, 410, 441, 456, 460, 476, 477, 478, 480, 487, 489, 491], "measur": [67, 104, 105, 145, 151, 152, 154, 167, 198, 199, 203, 236, 240, 269, 305, 314, 323, 337, 349, 354, 381, 384, 387, 397, 456, 460, 461, 477, 480, 481, 482, 483, 484, 488, 490, 491, 494, 495, 496], "qualiti": [67, 128, 207, 308, 310, 320, 341, 443, 460, 489], "batteri": [67, 460], "templat": [67, 71, 73, 80, 81, 85, 97, 99, 108, 113, 125, 173, 215, 282, 334, 360, 378, 382, 383, 388, 399, 460, 461, 479, 481, 483, 484, 488, 489, 490, 493, 494], "arithmet": [67, 181, 196, 227, 235, 239, 269, 271, 290, 305, 306, 333, 334, 359, 360, 368, 434, 440, 442, 443, 446, 448, 455, 456, 460, 464, 466, 480, 481, 482, 488, 489, 490, 492, 495], "histori": [67, 68, 92, 94, 114, 119, 153, 168, 196, 239, 250, 261, 286, 312, 349, 378, 380, 439, 460, 463, 470, 487, 491, 492, 493], "appendix": [67, 249, 441, 460, 463], "latest": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 92, 97, 121, 122, 164, 196, 199, 224, 261, 414, 437, 468, 473, 474, 476, 482, 484, 486, 489, 490, 491, 493], "openbsd": [67, 126, 237, 308, 380, 381, 473, 492, 494], "opensolari": [67, 473], "webassembli": [67, 134, 135, 152, 164, 176, 179, 186, 224, 237, 243, 256, 259, 262, 293, 298, 302, 303, 308, 320, 343, 344, 348, 350, 351, 353, 354, 355, 357, 364, 368, 374, 380, 410, 414, 418, 434, 435, 440, 473, 488], "linker": [67, 71, 80, 84, 89, 98, 189, 473, 488], "cross": [67, 71, 77, 84, 88, 92, 93, 97, 114, 117, 121, 129, 154, 196, 206, 226, 258, 261, 308, 314, 333, 353, 373, 425, 440, 441, 450, 473, 474, 477, 478, 479, 480, 483, 484, 486, 488, 489, 490, 491, 492, 493, 495], "max_path": [67, 473, 493], "ui": [67, 108, 114, 422, 473, 477], "download": [67, 71, 72, 75, 78, 80, 87, 92, 97, 108, 114, 121, 311, 322, 390, 408, 410, 414, 441, 443, 455, 468, 469, 473, 474, 475, 482, 483, 484, 489, 490, 494, 495], "nuget": [67, 473, 494], "bundl": [67, 72, 97, 122, 182, 215, 221, 224, 237, 262, 320, 357, 383, 384, 410, 436, 455, 471, 473, 474, 480, 484, 487, 489, 491, 492, 494], "excursu": [67, 463, 473], "shebang": [67, 180, 414, 436, 463, 473, 475, 490, 493], "ini": [67, 231, 346, 473, 489], "dry": [67, 71, 76, 299, 307, 473], "pywin32": [67, 97, 473], "cx_freez": [67, 97, 298, 473], "gui": [67, 72, 95, 96, 97, 107, 119, 261, 307, 356, 358, 368, 383, 384, 403, 436, 454, 473, 483, 490], "editor": [67, 84, 90, 99, 116, 119, 264, 265, 383, 450, 463, 464, 465, 473, 474, 477, 483, 487, 488, 491, 492, 493, 494, 495, 496], "lexic": [67, 236, 254, 269, 270, 311, 372, 393, 430, 443, 445, 448, 449, 494], "blank": [67, 71, 74, 96, 97, 107, 131, 134, 164, 168, 180, 188, 190, 199, 203, 207, 210, 219, 221, 222, 256, 259, 261, 283, 312, 315, 349, 357, 360, 369, 399, 409, 422, 428, 451, 452, 456, 461, 464, 481, 492, 494], "indent": [67, 74, 92, 98, 99, 110, 116, 123, 131, 133, 180, 182, 207, 218, 227, 269, 270, 277, 279, 315, 322, 379, 382, 383, 390, 392, 393, 404, 405, 426, 428, 442, 446, 454, 456, 462, 464, 467, 477, 487, 489, 490, 491, 496], "soft": [67, 190, 261, 278, 337, 373, 377, 442, 446, 487], "metaclass": [67, 99, 105, 106, 123, 127, 133, 189, 225, 239, 240, 270, 360, 400, 401, 442, 483, 485, 488, 489, 491, 492, 493, 494, 495], "bodi": [67, 71, 90, 96, 97, 99, 120, 123, 133, 147, 148, 151, 156, 182, 196, 202, 204, 209, 210, 211, 213, 214, 215, 219, 221, 222, 239, 254, 256, 259, 262, 270, 286, 287, 303, 332, 348, 350, 351, 356, 360, 377, 382, 401, 403, 404, 405, 410, 417, 422, 428, 442, 444, 445, 446, 451, 456, 464, 481, 482, 483, 489, 490, 491, 492, 493, 494, 495], "versu": [67, 90, 196, 207, 268, 333, 445, 489, 495], "power": [67, 92, 97, 99, 101, 105, 106, 154, 180, 186, 189, 199, 225, 239, 249, 276, 305, 307, 308, 312, 314, 334, 341, 353, 360, 373, 399, 404, 405, 428, 441, 442, 446, 448, 455, 459, 460, 464, 467, 480, 481, 483, 484, 485, 487, 488, 489, 490, 495], "membership": [67, 104, 106, 111, 164, 173, 191, 225, 247, 360, 404, 443, 457, 481, 489], "nonloc": [67, 97, 99, 133, 173, 239, 270, 367, 442, 444, 446, 448, 450, 455, 456, 485, 493], "irrefut": 67, "OR": [67, 87, 88, 104, 116, 190, 207, 225, 229, 285, 297, 308, 311, 324, 334, 353, 356, 441, 445], "AS": [67, 356, 441], "servic": [67, 114, 117, 120, 133, 152, 177, 239, 260, 269, 270, 277, 282, 284, 297, 298, 299, 308, 318, 329, 333, 336, 343, 351, 353, 354, 357, 360, 373, 381, 424, 434, 443, 452, 470, 476, 477, 481, 484, 487, 488, 490, 494, 495, 496], "mini": [67, 81, 180, 239, 360, 378, 443, 450, 461, 484, 486, 488], "scanf": [67, 378], "phonebook": [67, 378], "mung": [67, 378], "adverb": [67, 378], "sequencematch": [67, 378, 478, 482, 483, 491], "stringprep": [67, 171, 269, 378, 480], "gnu": [67, 71, 84, 110, 242, 248, 260, 269, 281, 307, 308, 313, 345, 347, 373, 378, 441, 443, 450, 453, 462, 463, 470, 471, 475, 477, 480, 481, 483, 484, 492, 494, 495], "stateless": [67, 154, 158, 160], "streamreaderwrit": [67, 158], "streamrecod": [67, 119, 158], "idna": [67, 158, 217, 402, 409, 480], "internation": [67, 101, 119, 158, 208, 269, 297, 300, 351, 357, 361, 362, 381, 450, 466, 477, 480, 481, 492, 494], "codepag": [67, 158, 368], "utf_8_sig": [67, 158], "strftime": [67, 113, 114, 151, 195, 281, 282, 284, 286, 381, 434, 466, 467, 480, 482, 483, 489, 490, 493], "strptime": [67, 195, 282, 357, 381, 434, 479, 480, 482, 489], "iana": [67, 195, 196, 255, 269, 274, 291, 329, 357, 426, 428, 496], "chainmap": [67, 195, 360, 401, 490, 491, 494], "recip": [67, 75, 97, 106, 114, 120, 160, 187, 195, 203, 214, 238, 264, 265, 290, 305, 308, 313, 330, 345, 360, 368, 428, 441, 469, 489], "dequ": [67, 195, 276, 331, 360, 401, 417, 442, 445, 457, 467, 481, 482, 483, 484, 488, 489, 492, 493], "defaultdict": [67, 99, 195, 360, 401, 482, 489], "ordereddict": [67, 99, 180, 188, 195, 270, 360, 401, 484, 486, 488, 489, 492, 493, 495, 496], "userdict": [67, 195, 478, 480, 483], "userlist": [67, 195, 479], "userstr": [67, 195, 477, 492, 496], "deep": [67, 72, 80, 99, 114, 173, 195, 265, 269, 314, 322, 346, 368, 373, 425, 466], "pretti": [67, 88, 101, 104, 119, 121, 133, 180, 195, 198, 203, 269, 270, 277, 284, 307, 312, 323, 393, 404, 426, 428, 434, 445, 467, 477, 478, 479, 482, 483, 485, 487, 496], "printer": [67, 116, 195, 261, 269, 384, 393, 420, 467], "prettyprint": [67, 195, 491], "__dunder__": [67, 195], "_sunder_": [67, 195], "graph": [67, 195, 269, 283, 307, 314, 359, 399, 479, 491, 496], "tower": [67, 235, 305, 359, 399, 483, 485], "implementor": [67, 305, 479, 484, 493], "theoret": [67, 100, 107, 199, 251, 305], "logarithm": [67, 160, 199, 250, 305, 310, 333, 360, 439, 480, 483, 486, 489, 490], "trigonometr": [67, 305, 481], "angular": [67, 305, 449], "hyperbol": [67, 203, 305, 483], "polar": [67, 305, 483], "coordin": [67, 90, 97, 104, 106, 114, 122, 150, 175, 189, 190, 192, 196, 286, 290, 296, 305, 356, 361, 381, 384, 391, 393, 399, 467, 477, 483, 487, 492], "classif": [67, 281, 305, 307, 450], "mitig": [67, 137, 147, 258, 305, 360, 373, 459, 486, 487, 488, 493, 494, 495, 496], "off": [67, 71, 90, 96, 99, 104, 107, 113, 114, 116, 120, 121, 123, 131, 134, 168, 180, 189, 190, 196, 203, 204, 214, 222, 223, 230, 239, 246, 250, 257, 261, 276, 282, 283, 284, 290, 305, 307, 309, 316, 320, 323, 333, 346, 351, 360, 376, 377, 381, 382, 391, 399, 403, 404, 410, 435, 443, 447, 450, 451, 455, 456, 460, 463, 465, 467, 470, 477, 478, 479, 480, 481, 482, 483, 485, 489, 491, 492, 493, 495, 496], "ration": [67, 196, 199, 269, 304, 305, 360, 443, 459, 483, 484, 485, 489], "reproduc": [67, 97, 120, 133, 215, 248, 305, 359, 364, 377, 410, 432, 441, 467, 489, 494, 495], "averag": [67, 90, 105, 154, 250, 276, 305, 308, 323, 333, 341, 360, 364, 382, 391, 397, 449, 466, 485, 487, 488, 491, 495], "central": [67, 171, 196, 208, 219, 239, 302, 305, 477, 478, 479, 480, 482, 489], "spread": [67, 90, 117, 147, 305, 384, 483], "normaldist": [67, 305, 495], "pure": [67, 72, 74, 77, 78, 80, 86, 96, 97, 107, 110, 112, 114, 115, 121, 133, 173, 182, 189, 196, 199, 206, 233, 237, 239, 244, 276, 323, 348, 350, 368, 370, 371, 377, 424, 442, 443, 455, 457, 470, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 495], "dircmp": [67, 233, 477, 482, 491], "fnmatch": [67, 233, 245, 269, 311, 364, 397, 403], "copytre": [67, 96, 155, 233, 483, 484, 489, 495], "rmtree": [67, 96, 155, 233, 308, 377, 417, 488, 490, 494, 495], "base_dir": [67, 71, 155, 233], "persist": [67, 197, 255, 259, 261, 269, 283, 284, 289, 296, 335, 405, 441, 466, 489, 491], "unpickl": [67, 88, 106, 114, 196, 282, 284, 298, 299, 313, 315, 440, 480, 483, 484, 486], "dispatch": [67, 90, 96, 97, 99, 113, 114, 117, 134, 152, 157, 168, 190, 211, 240, 259, 313, 323, 336, 350, 403, 434, 486, 488, 489, 491, 495], "copyreg": [67, 184, 269, 294, 313, 314, 485], "ndbm": [67, 313, 345, 443, 471, 495], "dumb": [67, 72, 77, 117, 313, 374, 492, 493, 494, 495], "sqlite": [67, 269, 313, 458, 466, 471, 482, 484, 487, 488, 489, 490, 491, 494], "connect": [67, 98, 104, 105, 111, 114, 117, 120, 129, 134, 135, 136, 142, 148, 152, 155, 164, 173, 177, 182, 221, 226, 227, 237, 255, 256, 257, 259, 261, 262, 273, 281, 282, 284, 299, 303, 307, 308, 313, 314, 320, 324, 342, 343, 347, 348, 350, 351, 354, 357, 363, 364, 368, 374, 377, 380, 384, 390, 399, 401, 405, 410, 412, 420, 422, 424, 426, 429, 431, 434, 441, 445, 458, 461, 463, 464, 470, 471, 476, 477, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "cursor": [67, 104, 168, 173, 188, 190, 261, 313, 314, 335, 384, 390, 391, 405, 482, 483, 486, 489, 493, 495, 496], "blob": [67, 313, 357, 405, 488], "prepareprotocol": [67, 313], "placehold": [67, 105, 114, 121, 204, 244, 250, 282, 284, 313, 336, 361, 373, 379, 409, 414, 420, 451, 461, 467, 482, 488, 489, 491, 494], "sql": [67, 107, 119, 188, 276, 296, 307, 313, 401, 466, 482, 486, 488, 490], "uri": [67, 114, 120, 256, 257, 311, 313, 329, 357, 399, 409, 410, 422, 425, 428, 430, 431, 433, 434, 487, 490, 491], "explan": [67, 80, 90, 92, 116, 120, 180, 196, 203, 236, 259, 281, 286, 298, 301, 312, 313, 316, 319, 334, 353, 360, 368, 381, 384, 410, 456, 457, 461, 469, 477, 478, 479, 480, 481, 482, 483, 489], "transact": [67, 107, 173, 256, 257, 296, 313, 333, 350, 380, 410, 480, 482, 483, 489, 492, 493], "bzip2": [67, 71, 81, 130, 232, 269, 347, 373, 437, 488, 489, 490], "shot": [67, 130, 182, 343, 494], "decompress": [67, 130, 162, 171, 232, 248, 424, 439, 466, 482, 487, 489, 490, 492, 493], "pyzipfil": [67, 130, 491], "zipinfo": [67, 130, 483, 493], "tar": [67, 71, 72, 78, 81, 92, 121, 130, 269, 291, 307, 311, 347, 414, 441, 468, 475, 477, 480, 481, 482, 483, 484, 487, 488, 489, 495, 496], "tarinfo": [67, 130, 484, 489], "dialect": [67, 231, 356, 480, 482, 489], "interpol": [67, 71, 231, 359, 360, 445, 461, 489, 492, 493], "rawconfigpars": [67, 231, 283, 484, 488, 491], "tomllib": [67, 180, 231, 269, 488], "toml": [67, 180, 231, 269, 273, 487, 488], "netrc": [67, 231, 237, 269, 303, 479, 491, 492], "plist": [67, 231, 269, 287, 474, 483, 491, 494, 495], "digest": [67, 101, 187, 210, 218, 219, 251, 269, 298, 320, 357, 410, 482, 484, 485, 489, 490, 491, 494, 495, 496], "shake": [67, 187, 471, 488, 493, 496], "blake2": [67, 187, 471, 488, 493, 496], "person": [67, 72, 105, 107, 121, 187, 239, 261, 356, 357, 359, 370, 441, 476, 477, 479, 483], "credit": [67, 98, 121, 135, 181, 187, 261, 276, 368, 442, 463, 465, 488, 495], "authent": [67, 177, 187, 237, 249, 255, 262, 269, 282, 284, 301, 303, 320, 341, 351, 357, 408, 410, 434, 439, 479, 484, 489, 490, 491, 492, 493, 494, 495, 496], "reentranc": [67, 129, 182, 331], "clock": [67, 97, 129, 138, 143, 151, 196, 323, 337, 399, 483, 488, 490, 492, 493, 494, 495], "add_argu": [67, 101, 114, 129, 173, 203, 214, 242, 324, 414, 466, 484, 489], "argumentpars": [67, 101, 114, 129, 173, 203, 214, 242, 324, 414, 466, 484, 489, 492, 494], "prog": [67, 101, 114, 129, 307, 334, 414, 466, 489], "epilog": [67, 129, 219, 307, 482, 489], "formatter_class": [67, 114, 129], "prefix_char": [67, 129], "fromfile_prefix_char": [67, 129], "argument_default": [67, 129], "allow_abbrev": [67, 129, 492], "conflict_handl": [67, 129, 307], "add_help": [67, 129], "exit_on_error": [67, 129], "metavar": [67, 114, 129, 214, 307, 414, 484, 489], "parse_arg": [67, 101, 114, 129, 173, 203, 214, 242, 307, 324, 414, 466, 480, 484, 489], "abbrevi": [67, 99, 119, 129, 163, 190, 196, 199, 281, 307, 312, 323, 364, 381, 396, 428, 467, 470, 491, 492, 493], "filetyp": [67, 129, 202, 352, 484, 491], "intermix": [67, 129, 242, 494], "upgrad": [67, 75, 92, 99, 120, 121, 122, 129, 142, 148, 224, 261, 414, 468, 471, 476, 479, 480, 484, 488, 489, 491, 493, 494, 495], "getopt": [67, 77, 101, 129, 269, 307, 480, 484], "logger": [67, 129, 137, 182, 283, 284, 298, 347, 371, 401, 403, 480, 484, 486, 489, 490, 491, 492, 494, 495, 496], "logrecord": [67, 113, 129, 284, 403, 480, 491], "loggeradapt": [67, 129, 484], "schema": [67, 105, 129, 296, 356, 484], "streamhandl": [67, 113, 114, 129, 282, 283, 489, 494], "filehandl": [67, 113, 114, 120, 129, 271, 282, 283, 483], "nullhandl": [67, 113, 129, 486], "watchedfilehandl": [67, 113, 129, 483, 493], "baserotatinghandl": [67, 113, 129, 481], "rotatingfilehandl": [67, 113, 114, 129, 283, 481, 483, 484], "timedrotatingfilehandl": [67, 113, 129, 481, 483, 491], "sockethandl": [67, 113, 114, 129, 283, 488, 491], "datagramhandl": [67, 113, 129, 283, 491], "sysloghandl": [67, 113, 129, 283, 371, 484, 488, 490], "nteventloghandl": [67, 113, 129, 283], "smtphandler": [67, 113, 114, 129, 283], "memoryhandl": [67, 113, 114, 129, 283], "httphandler": [67, 113, 114, 120, 129, 271, 283, 492], "queuehandl": [67, 113, 129], "queuelisten": [67, 129, 492], "getpass": [67, 129, 186, 262, 269, 297, 308, 320, 374, 376, 483], "password": [67, 114, 120, 129, 237, 247, 249, 262, 269, 284, 298, 301, 303, 308, 309, 320, 341, 351, 357, 366, 374, 376, 406, 409, 410, 434, 437, 482, 483, 484, 490, 491, 492, 493], "textpad": [67, 104, 129, 269, 483], "textbox": [67, 104, 129, 483], "panel": [67, 72, 95, 129, 190, 269, 421, 478], "foreign": [67, 129, 180, 269, 347, 356, 373], "surpris": [67, 90, 96, 97, 100, 114, 117, 129, 196, 199, 207, 239, 250, 261, 282, 290, 298, 323, 359, 373, 375, 384, 440, 447, 455, 459, 478, 479, 482, 486, 487, 488, 492, 494, 495, 496], "rlock": [67, 177, 182, 298, 483, 487, 489, 492], "semaphor": [67, 96, 110, 126, 136, 177, 226, 298, 308, 368, 377, 467, 483, 489, 490, 495, 496], "timer": [67, 104, 108, 110, 177, 198, 226, 228, 298, 343, 348, 381, 382, 384, 391, 399, 466, 479, 480, 483, 488, 490, 492, 493, 494], "barrier": [67, 136, 177, 298, 488, 489], "exchang": [67, 84, 117, 138, 177, 189, 226, 249, 250, 251, 293, 308, 331, 357, 363, 373, 380, 459, 461, 483, 484, 489, 490], "synchron": [67, 126, 135, 177, 182, 191, 197, 199, 226, 265, 269, 273, 293, 308, 345, 348, 354, 357, 377, 380, 384, 404, 413, 443, 467, 483, 488, 489, 492, 494], "pool": [67, 85, 96, 122, 136, 142, 173, 177, 179, 237, 276, 299, 308, 333, 478, 480, 483, 484, 489, 490, 491, 493], "worker": [67, 71, 114, 146, 176, 177, 179, 246, 331, 380, 482, 483, 484, 492, 496], "pipe": [67, 99, 114, 116, 117, 137, 142, 143, 145, 149, 177, 222, 226, 227, 229, 269, 273, 308, 343, 344, 347, 348, 358, 364, 366, 368, 373, 377, 414, 470, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494], "primit": [67, 87, 96, 97, 126, 135, 136, 147, 148, 177, 189, 190, 200, 273, 306, 314, 323, 334, 343, 344, 348, 357, 380, 465, 467, 487, 488, 490, 491, 494], "sharedctyp": [67, 177, 492], "remot": [67, 92, 108, 113, 114, 121, 132, 134, 138, 142, 145, 152, 177, 183, 226, 256, 259, 262, 281, 282, 283, 284, 303, 320, 350, 351, 353, 357, 370, 374, 390, 410, 418, 420, 424, 429, 433, 434, 466, 479, 489, 492, 493, 494, 495, 496], "listen": [67, 96, 117, 138, 152, 177, 259, 283, 284, 303, 328, 344, 351, 353, 354, 357, 359, 377, 399, 422, 434, 480, 483, 484, 491, 492], "spawn": [67, 77, 114, 136, 142, 144, 149, 150, 155, 177, 179, 272, 308, 324, 350, 354, 377, 380, 491, 495, 496], "forkserv": [67, 177, 491], "shared_memori": [67, 177, 269, 368, 495], "launch": [67, 71, 99, 144, 177, 178, 199, 243, 269, 298, 308, 364, 368, 377, 413, 418, 463, 474, 476, 477, 488, 489, 490, 491, 495], "executor": [67, 114, 137, 138, 142, 147, 177, 488, 489, 492, 496], "threadpoolexecutor": [67, 96, 137, 138, 177, 298, 380, 488, 489, 492, 493, 494, 495, 496], "processpoolexecutor": [67, 96, 137, 138, 177, 298, 380, 489, 492, 494, 495, 496], "sh": [67, 96, 114, 177, 316, 324, 346, 477], "pipelin": [67, 177, 269, 366, 477], "popen2": [67, 177, 481, 483], "popen3": [67, 177], "vfork": [67, 177], "posix_spawn": [67, 155, 177, 308, 495], "simplequeu": [67, 177, 284, 298, 360, 494, 496], "interprocess": [67, 145, 269, 298, 353], "runner": [67, 114, 135, 136, 207, 403, 415, 481, 484, 488], "keyboard": [67, 93, 98, 104, 108, 190, 261, 348, 364, 391, 399, 403, 456, 483], "sleep": [67, 96, 107, 108, 114, 135, 136, 137, 138, 141, 145, 146, 147, 149, 150, 179, 180, 190, 272, 298, 337, 340, 348, 356, 364, 377, 381, 483, 487, 488, 490, 492, 493, 494, 495], "shield": [67, 136, 495], "timeout": [67, 108, 114, 117, 120, 126, 136, 138, 141, 146, 149, 150, 152, 179, 182, 190, 198, 237, 256, 262, 283, 284, 298, 303, 312, 320, 331, 343, 344, 348, 351, 354, 356, 357, 364, 374, 377, 380, 381, 396, 401, 410, 471, 480, 483, 484, 487, 488, 489, 490, 492, 495, 496], "tcp": [67, 92, 96, 113, 114, 117, 136, 138, 142, 237, 272, 284, 298, 351, 353, 354, 357, 377, 483, 484, 493, 494], "echo": [67, 98, 101, 104, 125, 138, 142, 149, 154, 183, 190, 243, 261, 277, 297, 308, 314, 344, 346, 353, 364, 376, 403, 445, 463, 465, 483], "boundedsemaphor": [67, 136, 298, 380, 490, 495], "lifo": [67, 136, 173, 331, 360, 403], "tl": [67, 142, 148, 190, 237, 256, 269, 275, 284, 320, 342, 351, 353, 377, 471, 475, 479, 483, 484, 487, 488, 489, 491, 492, 493, 494, 495], "dn": [67, 114, 140, 142, 171, 274, 284, 353, 357, 413, 492], "hello": [67, 85, 87, 91, 97, 98, 108, 114, 123, 125, 132, 141, 145, 147, 148, 149, 151, 159, 164, 189, 197, 240, 244, 249, 254, 293, 298, 303, 306, 314, 316, 319, 353, 354, 356, 357, 360, 375, 377, 379, 380, 383, 393, 401, 403, 404, 422, 450, 455, 457, 458, 461, 476, 489, 491, 492, 495, 496], "world": [67, 71, 72, 85, 88, 91, 97, 104, 108, 111, 114, 117, 125, 141, 145, 148, 151, 159, 164, 182, 189, 196, 240, 244, 249, 262, 272, 293, 298, 306, 307, 314, 316, 325, 340, 353, 354, 356, 357, 360, 375, 377, 379, 380, 383, 393, 399, 403, 404, 410, 422, 425, 441, 450, 455, 457, 458, 461, 463, 469, 485, 492, 493], "call_soon": [67, 137, 141, 142, 145, 148, 401, 494], "call_lat": [67, 142, 494], "sigterm": [67, 145, 149, 298, 348, 364, 483], "transport": [67, 135, 138, 141, 148, 149, 183, 208, 212, 215, 220, 226, 289, 332, 351, 357, 433, 434, 479, 492, 493, 494], "datagram": [67, 138, 142, 284, 354, 357, 467, 488], "udp": [67, 113, 138, 142, 284, 353, 354, 377, 484, 488, 493, 494, 495, 496], "subprocess_exec": [67, 138, 142, 143, 144, 149], "subprocessprotocol": [67, 138], "watcher": [67, 149, 496], "multithread": [67, 138, 149, 151, 249, 281, 298, 333, 364, 374, 422, 480, 496], "ca": [67, 104, 116, 175, 237, 256, 262, 276, 320, 351, 410, 441, 483, 484, 491], "session": [67, 97, 98, 105, 113, 114, 134, 138, 168, 182, 207, 227, 237, 256, 257, 298, 308, 320, 324, 335, 344, 351, 368, 410, 451, 453, 462, 465, 470, 476, 481, 490, 491, 493, 495], "cipher": [67, 145, 180, 186, 249, 471, 484, 487, 489, 490, 492, 493, 494], "poll": [67, 96, 134, 138, 144, 149, 152, 298, 308, 344, 348, 354, 357, 358, 364, 481, 483, 489, 490, 492, 496], "edg": [67, 189, 190, 207, 215, 239, 246, 377, 379, 399, 464, 490, 491], "epol": [67, 344, 483, 491, 492, 496], "kqueue": [67, 337, 344, 483, 492], "kevent": 67, "multiplex": [67, 117, 269, 275, 343, 357, 491], "sigpip": [67, 364], "madv_": 67, "map_": 67, "mime": [67, 99, 116, 156, 159, 164, 171, 210, 214, 216, 217, 218, 219, 221, 222, 259, 269, 287, 300, 368, 422, 447, 466, 479, 481, 484, 487, 489, 491, 492, 493, 494], "feedpars": [67, 208, 213, 300, 481], "defect": [67, 208, 210, 217, 219, 221, 222, 300, 481, 490, 494], "headerregistri": [67, 208, 213, 214, 219, 222, 300], "contentmanag": [67, 208, 220, 300, 491], "compat32": [67, 208, 209, 212, 215, 216, 219, 220, 221, 222, 223, 300, 490, 492, 493], "scratch": [67, 101, 114, 140, 202, 208, 212, 215, 221, 300, 357, 414, 425, 490, 491], "charset": [67, 164, 196, 203, 208, 210, 211, 216, 219, 220, 222, 223, 244, 262, 300, 357, 410, 422, 489, 492], "complianc": [67, 199, 208, 217, 222, 300, 303, 422, 425, 490, 491], "interoper": [67, 106, 114, 127, 138, 141, 154, 222, 259, 274, 300, 314, 333, 357, 360, 437, 443, 461, 486, 489, 491], "maildir": [67, 300, 482, 484], "mbox": [67, 210, 215, 300, 482], "mh": [67, 300, 482], "babyl": [67, 300], "mmdf": [67, 300], "maildirmessag": [67, 300], "mboxmessag": [67, 219, 300], "mhmessag": [67, 300], "babylmessag": [67, 300], "mmdfmessag": [67, 300], "base16": [67, 269, 300, 481], "base32": [67, 269, 300, 481, 487], "base85": [67, 269, 300, 491], "quopri": [67, 159, 169, 171, 269, 300], "markup": [67, 231, 254, 269, 329, 425, 434, 483, 489, 490], "hypertext": [67, 120, 254, 255, 269, 288, 425], "xhtml": [67, 120, 252, 253, 269, 288, 329, 410, 425, 426, 428, 489], "htmlparser": [67, 288, 485, 487, 490, 491, 492, 496], "entiti": [67, 99, 116, 120, 252, 254, 256, 269, 283, 288, 329, 359, 410, 424, 425, 426, 427, 429, 430, 431, 432, 441, 480, 490, 493, 494, 495], "vulner": [67, 119, 138, 149, 207, 251, 259, 288, 314, 329, 342, 346, 356, 364, 401, 426, 427, 428, 429, 434, 435, 439, 482], "defusedxml": [67, 288], "pull": [67, 85, 196, 199, 250, 288, 343, 399, 404, 427, 440, 477, 481, 484, 491, 494], "xpath": [67, 288, 424, 496], "xinclud": [67, 288], "qname": [67, 288, 425, 430, 431], "treebuild": [67, 288, 489, 495], "xmlparser": [67, 288, 484, 491, 495], "xmlpullpars": [67, 288, 491], "domimplement": [67, 288], "node": [67, 246, 249, 250, 254, 274, 279, 288, 308, 309, 311, 318, 353, 357, 368, 391, 392, 413, 426, 427, 428, 430, 467, 471, 477, 480, 482, 483, 484, 487, 488, 489, 493, 494, 495, 496], "nodelist": [67, 288, 426, 443], "documenttyp": [67, 288], "namednodemap": [67, 288], "cdatasect": [67, 288], "processinginstruct": [67, 288, 428, 430, 482], "minidom": [67, 269, 288, 424, 425, 427, 477, 478, 480, 493, 494, 495], "pulldom": [67, 269, 288, 424, 488, 495], "domeventstream": [67, 288, 488, 495], "saxexcept": [67, 288], "contenthandl": [67, 288, 427, 429, 431, 432, 477], "dtdhandler": [67, 288, 431], "entityresolv": [67, 288, 431], "errorhandl": [67, 288, 429, 431, 470, 483], "lexicalhandl": [67, 288, 481, 487], "saxutil": [67, 269, 288, 429], "xmlreader": [67, 269, 288, 427, 429, 430, 432, 492], "incrementalpars": [67, 288], "inputsourc": [67, 288, 429, 430, 432, 492], "attributesn": [67, 288, 429, 430], "expat": [67, 80, 269, 288, 319, 424, 428, 430, 471, 477, 478, 480, 482, 484, 489], "expaterror": [67, 288, 489], "browser": [67, 107, 117, 119, 120, 134, 164, 165, 203, 258, 259, 261, 269, 271, 272, 279, 287, 323, 328, 368, 409, 410, 455, 467, 468, 471, 477, 478, 480, 481, 482, 483, 488, 489, 490, 493, 494], "wsgi": [67, 269, 271, 482, 488, 489], "simple_serv": [67, 271, 482, 493], "checker": [67, 97, 99, 131, 190, 196, 207, 271, 307, 360, 401, 443, 481, 482, 487, 488, 492, 493, 495, 496], "url": [67, 71, 72, 75, 78, 80, 83, 97, 148, 155, 156, 163, 164, 179, 180, 237, 255, 256, 257, 259, 261, 266, 269, 271, 284, 291, 328, 341, 360, 377, 411, 413, 414, 418, 422, 428, 431, 432, 434, 435, 441, 447, 466, 477, 480, 481, 482, 483, 484, 487, 489, 491, 492, 493, 494, 495, 496], "openerdirector": [67, 120, 271, 491], "basehandl": [67, 271, 404, 422], "httpredirecthandl": [67, 120, 271], "httpcookieprocessor": [67, 257, 271, 481], "proxyhandl": [67, 120, 271], "httppasswordmgr": [67, 120, 271], "httppasswordmgrwithpriorauth": [67, 271, 492], "abstractbasicauthhandl": [67, 271, 404], "httpbasicauthhandl": [67, 120, 271], "proxybasicauthhandl": [67, 271], "abstractdigestauthhandl": [67, 271, 404], "httpdigestauthhandl": [67, 271], "proxydigestauthhandl": [67, 271], "httpshandler": [67, 271, 489], "datahandl": [67, 120, 271, 491], "ftphandler": [67, 120, 271], "cacheftphandl": [67, 271], "unknownhandl": [67, 120, 271], "httperrorprocessor": [67, 120, 271], "robot": [67, 269, 271, 399, 407, 477], "httpconnect": [67, 271, 434, 483, 484, 489, 491, 492, 493, 494], "httprespons": [67, 271, 410, 484, 490], "httpmessag": [67, 120, 259, 271], "ftp_tl": [67, 271, 484, 489, 490, 496], "pop3": [67, 269, 271, 490, 491, 492, 496], "imap4": [67, 269, 271, 320, 489, 492, 493, 495, 496], "smtp": [67, 92, 96, 113, 114, 208, 214, 215, 217, 222, 269, 271, 284, 357, 366, 466, 477, 479, 483, 489, 490, 491, 492, 496], "rfc": [67, 71, 113, 114, 116, 120, 138, 156, 159, 164, 171, 188, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 221, 222, 223, 237, 244, 249, 251, 255, 256, 257, 258, 259, 262, 269, 271, 274, 277, 281, 284, 286, 287, 303, 320, 332, 342, 350, 351, 353, 357, 362, 363, 374, 381, 408, 409, 410, 422, 423, 434, 466, 477, 479, 480, 481, 482, 483, 484, 487, 489, 490, 492, 493, 494, 495, 496], "4122": [67, 269, 271, 482], "tcpserver": [67, 114, 259, 271, 282, 435, 484], "udpserv": [67, 271], "mixin": [67, 106, 174, 182, 271, 273, 410], "cooki": [67, 120, 126, 249, 255, 269, 271, 273, 357, 380, 393, 410, 481, 483, 484, 485, 492, 494], "morsel": [67, 271, 483, 492, 494], "cookiejar": [67, 255, 258, 269, 271, 410], "filecookiejar": [67, 271], "cookiepolici": [67, 271], "defaultcookiepolici": [67, 271], "rpc": [67, 92, 261, 269, 271, 277, 289, 433, 441, 479, 480, 481, 482, 483, 484, 493], "serverproxi": [67, 271, 435, 492, 495], "protocolerror": [67, 271], "multical": [67, 271, 435], "simplexmlrpcserv": [67, 271, 434, 479, 481, 482, 483, 484, 485], "cgixmlrpcrequesthandl": [67, 271, 481], "docxmlrpcserv": [67, 271, 480, 482, 483, 485], "doccgixmlrpcrequesthandl": [67, 271], "ipv4": [67, 111, 117, 138, 259, 269, 271, 353, 357, 483, 490, 493, 494, 495, 496], "ipv6": [67, 111, 138, 259, 269, 271, 350, 353, 357, 377, 409, 471, 479, 483, 484, 486, 489, 490, 492, 495, 496], "ip": [67, 92, 113, 114, 138, 257, 259, 271, 282, 284, 353, 354, 357, 374, 377, 409, 410, 477, 483, 489, 490, 492, 493, 494, 495, 496], "net": [67, 71, 74, 80, 93, 96, 120, 121, 196, 208, 249, 257, 271, 334, 343, 439, 441, 449, 476, 477, 478, 479, 480, 481, 482, 483, 485, 490], "multimedia": [67, 269, 287, 310], "wav": [67, 154, 220, 269, 292, 352, 421, 465], "wave_read": [67, 292], "wave_writ": [67, 292], "color": [67, 97, 99, 106, 114, 168, 173, 190, 202, 225, 236, 254, 269, 292, 346, 383, 384, 390, 391, 393, 420, 443, 456, 457, 487, 488, 489, 493, 494], "multilingu": [67, 260, 261, 269], "nulltransl": [67, 260, 488], "gnutransl": [67, 260], "catalog": [67, 80, 260, 477, 478, 480], "tip": [67, 97, 108, 239, 260, 261, 465, 477, 484], "turtl": [67, 168, 236, 261, 269, 384, 483, 485, 488, 489], "graphic": [67, 94, 97, 104, 119, 121, 171, 186, 190, 236, 263, 269, 332, 384, 390, 403, 418, 454, 483], "draw": [67, 104, 168, 190, 236, 261, 333, 391, 483], "pen": [67, 236], "turtlescreen": [67, 236], "screen": [67, 90, 97, 104, 107, 110, 119, 168, 181, 190, 192, 236, 261, 335, 364, 384, 390, 391, 393, 458, 467, 477, 479, 480, 483, 487, 489, 492, 496], "rawturtl": [67, 236], "motion": [67, 190, 236, 386], "anim": [67, 106, 236, 244, 391, 461, 483, 492], "tcl": [67, 93, 261, 269, 383, 390, 391, 467, 474, 476, 477, 480, 483, 484, 487, 488, 489, 492, 493, 495, 496], "life": [67, 72, 99, 115, 180, 240, 299, 314, 356, 373, 383, 425, 437, 456, 476, 477, 483, 495], "concept": [67, 77, 92, 99, 104, 107, 111, 112, 113, 119, 121, 127, 151, 180, 199, 208, 258, 265, 273, 276, 298, 316, 324, 333, 356, 360, 373, 380, 383, 399, 401, 403, 405, 427, 428, 442, 447, 454, 460, 479, 480, 485, 487, 488, 490, 491, 492], "handi": [67, 71, 97, 104, 105, 106, 116, 117, 121, 125, 163, 180, 189, 203, 307, 360, 383, 404, 453, 454, 456, 460, 465, 477, 481], "packer": [67, 383], "coupl": [67, 75, 80, 81, 87, 97, 114, 117, 121, 131, 138, 219, 222, 223, 282, 298, 307, 348, 383, 404, 405, 410, 424, 476, 491, 493, 494], "colorchoos": [67, 269, 383, 384], "choos": [67, 71, 85, 87, 90, 96, 97, 101, 107, 114, 116, 117, 119, 121, 131, 171, 176, 207, 219, 239, 240, 249, 259, 265, 269, 272, 282, 290, 299, 307, 310, 314, 323, 333, 356, 357, 363, 368, 380, 383, 384, 390, 404, 413, 428, 441, 447, 459, 474, 476, 479, 480, 484, 489, 490, 491, 494], "dialog": [67, 89, 104, 108, 261, 269, 296, 307, 377, 383, 384, 388, 390, 399, 476, 487, 491, 492, 493, 494, 495, 496], "font": [67, 114, 119, 180, 226, 261, 269, 379, 383, 384, 388, 390, 391, 399, 463, 487, 493, 494, 496], "simpledialog": [67, 383, 384], "filedialog": [67, 383, 384], "commondialog": [67, 383, 384, 385], "messagebox": [67, 189, 202, 269, 383, 384], "scrolledtext": [67, 269, 383, 384], "scroll": [67, 104, 168, 190, 261, 269, 383, 384, 391], "dnd": [67, 269, 383, 384], "drag": [67, 269, 383, 384, 390, 391, 399, 474, 487], "scrollabl": [67, 261, 383, 390], "combobox": [67, 383, 390], "spinbox": [67, 383, 390, 494, 495], "notebook": [67, 383, 390, 495], "progressbar": [67, 383], "sizegrip": [67, 383], "treeview": [67, 383, 495], "tix": [67, 93, 269, 383, 384, 480, 493], "hierarch": [67, 113, 259, 264, 282, 283, 383, 384, 391, 409, 427, 428, 435, 447, 465], "listbox": [67, 383, 391], "tabular": [67, 188, 383], "geometri": [67, 383, 384, 389, 391], "menu": [67, 72, 98, 99, 104, 383, 384, 390, 399, 443, 474, 476, 482, 486, 487, 489, 493, 494, 495, 496], "calltip": [67, 383], "newtyp": [67, 200, 493], "nomin": [67, 133, 200, 359], "timelin": [67, 200], "onlin": [67, 92, 200, 269, 384, 399, 414, 429, 456, 479, 483], "recogn": [67, 71, 80, 85, 97, 98, 99, 105, 111, 116, 131, 134, 168, 171, 180, 190, 200, 204, 210, 217, 232, 237, 242, 249, 263, 264, 265, 273, 277, 281, 291, 297, 307, 312, 314, 318, 334, 346, 352, 361, 377, 381, 384, 392, 401, 404, 409, 410, 431, 450, 451, 456, 463, 465, 476, 477, 485, 489, 490, 491, 492], "doctestfind": [67, 200, 481], "doctestpars": [67, 200], "doctestrunn": [67, 200, 481], "outputcheck": [67, 200, 481], "soapbox": [67, 200], "discoveri": [67, 200, 207, 295, 351, 434, 488, 489, 491, 492], "organ": [67, 92, 96, 100, 107, 112, 114, 116, 200, 207, 272, 273, 357, 441, 447, 480, 496], "subtest": [67, 200, 491], "load_test": [67, 200, 207, 377, 492], "fixtur": [67, 200, 484], "setupclass": [67, 200, 484, 495], "teardownclass": [67, 200, 484], "setupmodul": [67, 200, 484, 495], "teardownmodul": [67, 200, 484], "patcher": [67, 200, 405], "test_prefix": [67, 200], "magicmock": [67, 200, 492], "create_autospec": [67, 200], "filter_dir": [67, 200], "mock_open": [67, 200, 405, 491], "autospecc": [67, 200], "seal": [67, 200, 229, 489, 494], "side_effect": [67, 200, 493], "return_valu": [67, 157, 200, 204, 405, 489, 491, 493], "cope": [67, 92, 200, 481], "2to3": [67, 71, 99, 200, 269, 483, 484, 485, 488, 489], "fixer": [67, 200], "lib2to3": [67, 99, 200, 488, 496], "regress": [67, 90, 97, 200, 207, 269, 277, 359, 484, 491, 492, 495], "socket_help": [67, 200, 269], "script_help": [67, 200, 269], "bytecode_help": [67, 200, 269], "threading_help": [67, 200, 269], "os_help": [67, 200, 269], "import_help": [67, 200, 269], "warnings_help": [67, 200, 269], "calibr": [67, 198], "programmat": [67, 84, 90, 124, 133, 180, 182, 198, 222, 224, 279, 281, 283, 295, 307, 314, 324, 335, 368, 393, 410, 484, 490, 491], "peak": [67, 154, 198, 482, 496], "domainfilt": [67, 198, 493], "snapshot": [67, 198, 272, 358, 491], "statisticdiff": [67, 198], "envbuild": [67, 205, 491], "standalon": [67, 71, 78, 90, 99, 133, 182, 205, 207, 267, 329, 399, 403, 426, 442, 456, 474, 483], "posix_us": [67, 330, 489], "nt_user": [67, 330, 489], "osx_framework_us": [67, 330], "posix_hom": [67, 330, 489], "posix_prefix": [67, 330, 489], "idiomat": [67, 123, 282, 330, 401, 455, 457], "post": [67, 92, 106, 107, 113, 114, 120, 134, 156, 164, 189, 207, 208, 255, 256, 259, 284, 303, 310, 312, 330, 357, 368, 384, 409, 410, 414, 435, 455, 459, 469, 476, 477, 479, 483, 489, 490, 493, 494, 495], "__enter__": [67, 99, 114, 204, 273, 298, 330, 348, 360, 373, 401, 403, 404, 420, 442, 443, 482, 483, 484, 488, 490, 493], "reusabl": [67, 78, 125, 330, 422, 491], "reentrant": [67, 273, 330, 331, 380, 491], "atexit": [67, 90, 96, 123, 179, 269, 282, 330, 335, 417, 477, 481, 487], "tracebackexcept": [67, 330, 488, 492], "stacksummari": [67, 330, 488, 492], "framesummari": [67, 330, 492], "sitecustom": [67, 121, 330, 369, 453, 484, 491], "usercustom": [67, 330, 369, 453, 491], "codeop": [67, 91, 193, 269], "pkgutil": [67, 269, 295, 475, 482, 483, 487, 488, 490, 493, 494], "modulefind": [67, 269, 295], "runpi": [67, 125, 169, 269, 295, 397, 470, 482, 483, 484, 486, 487, 491], "import_modul": [67, 97, 114, 239, 264, 283, 295, 339, 377, 443, 447, 451, 484, 490], "tabnanni": [67, 98, 169, 269, 279, 477], "disassembl": [67, 269, 279, 315, 491, 494], "msvcrt": [67, 89, 98, 155, 189, 269, 419, 483, 484], "vc": [67, 189, 269, 419], "hkey_": [67, 419], "sound": [67, 84, 96, 121, 128, 154, 190, 237, 269, 310, 365, 366, 370, 419, 465, 480, 483], "pwd": [67, 121, 186, 237, 243, 247, 269, 308, 309, 355, 364, 406, 437, 480, 496], "termio": [67, 229, 269, 398, 406, 496], "tty": [67, 190, 243, 269, 273, 308, 406, 452, 453, 463, 470, 483], "ioctl": [67, 132, 155, 269, 310, 353, 406, 481, 483, 493], "syslog": [67, 113, 155, 269, 284, 406, 484, 490], "cli": [67, 248, 266, 269, 377, 436, 470, 491, 494], "aiff": [67, 166, 220, 269, 352, 366, 465], "audio": [67, 128, 166, 220, 269, 352, 365, 366, 377, 416, 421, 477], "cgitb": [67, 164, 269, 366, 488], "iff": [67, 207, 269, 366], "mailcap": [67, 269, 366, 487, 488], "cab": [67, 482], "precomput": [67, 160], "ni": [67, 89, 247, 269, 322, 366, 409, 461, 482, 488], "sun": [67, 72, 119, 154, 163, 196, 259, 263, 269, 289, 310, 366, 381, 423, 441, 488], "yellow": [67, 104, 106, 160, 173, 190, 269, 366, 399, 467, 481], "terminologi": [67, 77, 111, 215, 259, 289, 381, 391, 425, 455, 478, 479, 482, 483], "conflict": [67, 72, 85, 90, 99, 114, 116, 120, 127, 131, 173, 180, 225, 227, 244, 255, 368, 399, 401, 420, 428, 441, 450, 455, 463, 468, 470, 476, 487, 489, 491, 494], "ossaudiodev": [67, 269, 366, 480, 488, 492], "oss": [67, 269, 364, 366, 480, 490], "mixer": 67, "smtpserver": [67, 491, 492, 493], "debuggingserv": 67, "pureproxi": 67, "smtpchannel": [67, 491, 492, 493], "spwd": [67, 247, 269, 325, 366, 482, 488, 493], "shadow": [67, 97, 98, 186, 247, 269, 270, 325, 366, 373, 465, 466, 482, 488, 491, 496], "au": [67, 220, 269, 310, 352, 357, 366, 465], "au_read": 67, "au_writ": [67, 491], "telnet": [67, 155, 183, 269, 366, 409, 483, 493], "uuencod": [67, 156, 159, 171, 269, 366], "xdrlib": [67, 132, 269, 366, 488], "xdr": [67, 132, 269, 314, 366], "ic": [67, 196, 299, 363, 483], "caution": [67, 85, 97, 140, 203, 283, 307, 308, 364, 428, 482], "tss": [67, 494], "arena": [67, 446, 470, 482, 496], "scientif": [67, 199, 359, 361, 469, 476, 483], "howto": [67, 96, 97, 104, 334, 353, 356, 410, 434, 477, 479, 484, 485, 489], "pad": [67, 96, 133, 156, 159, 166, 190, 196, 199, 210, 213, 239, 248, 249, 274, 299, 353, 360, 361, 363, 365, 381, 384, 391, 410, 423, 461, 477, 480, 483, 484, 489, 493], "primer": 67, "thought": [67, 90, 92, 107, 112, 160, 298, 456, 477, 479, 480, 485, 487, 492], "super": [67, 97, 99, 106, 114, 116, 121, 127, 131, 144, 173, 182, 194, 217, 227, 239, 265, 277, 298, 314, 327, 337, 384, 397, 399, 405, 410, 414, 417, 443, 455, 465, 479, 483, 485, 487, 491, 493], "orm": 67, "gdb": [67, 91, 97, 109, 484], "prerequisit": [67, 442, 485], "distro": [67, 121, 475, 487], "bt": [67, 484], "intenum": [67, 225, 255, 348, 353, 357, 360, 493], "strenum": [67, 225, 255, 487, 488], "intflag": [67, 225, 334, 357, 360, 493], "_private__nam": 67, "minutia": 67, "aka": [67, 133, 207, 370, 424, 437, 443, 476, 488, 494], "orderedenum": 67, "duplicatefreeenum": 67, "planet": [67, 482], "timeperiod": [67, 225], "enumtyp": [67, 225, 488], "formal": [67, 71, 86, 207, 239, 249, 307, 334, 360, 361, 409, 429, 436, 443, 444, 445, 449, 451, 456, 460, 477, 479, 486, 488, 491, 492, 495, 496], "provabl": [67, 476], "modular": [67, 96, 99, 113, 186, 239, 490, 495], "combinator": [67, 276, 333, 486, 495], "destin": [67, 71, 113, 119, 190, 202, 222, 226, 282, 283, 284, 286, 293, 307, 308, 347, 353, 360, 371, 373, 414, 481, 483, 487, 488, 490, 491, 495, 496], "contextu": [67, 203, 282], "impart": [67, 282], "deploi": [67, 156, 216, 254, 364, 384, 422, 440, 489, 495, 496], "gunicorn": 67, "uwsgi": [67, 364], "rotat": [67, 113, 173, 199, 284, 399, 481, 483, 484], "zeromq": 67, "pynng": 67, "namer": [67, 284], "elabor": [67, 90, 116, 121, 239, 441, 450, 477, 480], "dictconfig": [67, 113, 283, 484, 489], "condition": [67, 125, 282, 334, 377, 496], "gmt": [67, 113, 196, 223, 259, 282, 357, 381], "starter": 67, "qt": [67, 474], "rfc5424": 67, "plagu": [67, 491], "metacharact": [67, 287, 334, 364, 481], "lookahead": [67, 71, 334, 442, 446, 481], "greedi": [67, 171, 334, 374], "feedback": [67, 92, 244, 329, 399, 428, 441, 481], "ipc": [67, 135, 142, 145, 272, 353], "disconnect": [67, 320, 351, 353, 356, 420, 495], "die": [67, 343], "TO": [67, 97, 99, 102, 107, 109, 114, 239, 240, 350, 360, 441], "ascend": [67, 204, 323, 360], "descend": [67, 113, 127, 133, 176, 210, 219, 270, 282, 298, 323, 358, 372, 384, 391, 403, 425, 426, 428, 455, 482, 484], "undecor": [67, 114, 240, 360], "urlerror": [67, 408, 410, 483], "httperror": [67, 240, 408, 410, 491], "geturl": [67, 256, 409, 410], "footnot": [67, 74, 85, 88, 121, 127, 164, 166, 174, 180, 188, 196, 207, 211, 212, 214, 215, 217, 219, 222, 223, 239, 244, 250, 253, 277, 289, 311, 312, 314, 329, 357, 360, 381, 402, 418, 426, 428, 434, 442, 443, 444, 445, 447, 450, 453, 455, 456, 457, 463, 464, 465, 469], "conclus": 67, "instrument": [67, 109, 138, 240, 323, 471, 489, 493], "tapset": 67, "newer": [67, 71, 87, 88, 92, 99, 108, 113, 128, 151, 207, 257, 261, 272, 283, 284, 303, 308, 312, 314, 327, 329, 343, 356, 357, 360, 381, 384, 401, 423, 424, 437, 474, 475, 476, 487, 488, 491, 492, 493, 494, 495, 496], "un": [67, 214, 217, 270, 303, 451, 464, 487, 491], "stringiz": [67, 270, 487], "__annotations__": [67, 99, 105, 194, 204, 239, 240, 270, 401, 442, 443, 451, 456, 485, 487, 489, 491, 492, 493, 495, 496], "quirk": [67, 104, 360, 449, 455, 457, 474, 487, 491], "lossless": [67, 393], "am": [67, 113, 114, 196, 281, 314, 381, 449, 464, 493], "strang": [67, 97, 126, 152, 250, 379, 409, 443, 456, 476, 478, 482, 483], "inaccur": [67, 239, 479, 481], "tradit": [67, 71, 85, 88, 99, 121, 171, 186, 281, 286, 290, 307, 308, 314, 325, 370, 377, 442, 446, 447, 466, 471, 476, 483, 489], "__builtin_new": 67, "__pure_virtu": 67, "pyd": [67, 78, 83, 96, 284, 369, 438, 482, 489, 492, 495], "keypress": [67, 104, 297, 483], "l1": [67, 96, 171, 391], "toolkit": [67, 119, 276, 383, 384, 454, 474, 477], "glossari": [67, 78, 119, 194, 460], "contributor": [67, 122, 133, 441, 485, 488], "licens": [67, 68, 71, 72, 80, 92, 98, 121, 122, 135, 181, 261, 266, 286, 322, 368, 463, 465, 468, 479, 495], "psf": [67, 92, 311], "agreement": [67, 359, 477, 495], "FOR": [67, 334], "beopen": [67, 68], "cnri": [67, 477], "cwi": [67, 92, 254, 353, 409], "bsd": [67, 96, 104, 117, 145, 190, 229, 337, 343, 348, 353, 358, 381, 453, 471, 477, 479, 483, 491], "IN": [67, 483, 493], "THE": [67, 215, 446], "incorpor": [67, 85, 92, 113, 116, 173, 199, 282, 357, 409, 428, 480, 482, 483, 484, 487, 489, 495], "mersenn": [67, 333, 480], "twister": [67, 333, 480], "uudecod": 67, "test_epol": 67, "siphash24": [67, 471, 488], "strtod": 67, "dtoa": [67, 471, 484], "libffi": [67, 484, 488, 494], "cfuhash": 67, "libmpdec": [67, 199, 471, 490], "w3c": [67, 120, 254, 256, 410, 425, 426, 430, 443, 478, 487, 493, 494, 495, 496], "c14n": [67, 428, 495], "2001": [68, 111, 114, 223, 274, 347, 373, 381, 428, 437, 441, 478, 479, 480, 483, 489, 495], "2023": [68, 114, 424, 441], "foundat": [68, 80, 107, 122, 135, 182, 357, 384, 441, 474, 476, 480, 481, 483, 490], "2000": [68, 97, 113, 163, 171, 237, 284, 299, 381, 399, 441, 456, 459, 477, 480, 483, 489, 490, 491], "corpor": [68, 122, 441], "nation": [68, 441], "research": [68, 107, 441, 487], "guidanc": [69, 98, 108, 115, 400, 456, 484, 488], "retain": [70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 100, 118, 121, 131, 173, 180, 182, 190, 199, 210, 219, 222, 227, 261, 264, 265, 270, 276, 282, 286, 308, 346, 356, 357, 399, 409, 434, 441, 443, 445, 450, 490, 491, 493, 495], "setuptool": [70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 88, 121, 206, 266, 317, 322, 414, 468, 476, 484, 487, 493], "readthedoc": [70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 121, 266, 422, 482], "en": [70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 107, 119, 120, 121, 173, 244, 249, 254, 303, 410, 475, 476, 482, 489, 490], "ever": [71, 85, 97, 105, 106, 117, 124, 133, 190, 213, 215, 265, 273, 276, 297, 298, 357, 364, 399, 401, 404, 476, 479, 480, 482, 483, 484, 485, 491], "laid": [71, 99, 122], "long_descript": [71, 72, 75, 80, 83, 273], "author_email": [71, 72, 75, 80, 83, 322], "maintainer_email": [71, 72, 75, 80, 322], "homepag": [71, 322, 390], "download_url": [71, 80, 322, 482], "py_modul": [71, 75, 78, 80, 81, 477], "ext_modul": [71, 75, 80, 81, 83, 88, 477], "classifi": [71, 80, 241, 266, 322, 359, 480, 484], "pypi": [71, 76, 80, 81, 82, 90, 96, 101, 113, 164, 201, 318, 322, 357, 368, 404, 414, 424, 440, 449, 464, 469, 474, 480, 482, 484, 487, 489, 491, 492, 493, 494, 495, 496], "distclass": 71, "script_nam": [71, 377, 422], "script_arg": 71, "cmdclass": [71, 76], "data_fil": [71, 80, 81], "package_dir": [71, 75, 80], "run_setup": 71, "stop_aft": 71, "drive": [71, 117, 121, 245, 250, 261, 307, 309, 311, 373, 377, 384, 403, 437, 441, 476, 490, 491, 492], "commandlin": [71, 80], "ie": [71, 90, 120, 219, 232, 254, 257, 262, 293, 307, 410, 434, 492], "slash": [71, 73, 80, 81, 90, 116, 121, 239, 270, 274, 307, 308, 309, 311, 328, 373, 392, 409, 422, 437, 438, 456, 476], "swig": [71, 74, 80, 86, 91, 98], "include_dir": [71, 80, 83, 471, 477], "define_macro": [71, 80, 83, 436, 477], "dfoo": 71, "undef_macro": [71, 80], "library_dir": [71, 80, 83, 180], "runtime_library_dir": [71, 80], "extra_object": [71, 80], "eg": [71, 75, 121, 227, 257, 262, 308, 357, 442], "extra_compile_arg": [71, 80], "sens": [71, 87, 90, 97, 101, 106, 111, 113, 114, 121, 123, 125, 131, 132, 134, 196, 199, 203, 219, 220, 240, 261, 274, 286, 298, 307, 308, 323, 348, 354, 356, 357, 360, 361, 368, 382, 399, 409, 418, 441, 443, 447, 455, 456, 459, 476, 485, 489, 491, 492, 494], "extra_link_arg": [71, 80], "export_symbol": [71, 80], "extension_nam": 71, "objc": 71, "libpython": [71, 110, 471, 487, 488, 495], "gen_lib_opt": 71, "gen_preprocess_opt": 71, "get_default_compil": 71, "osnam": 71, "new_compil": [71, 436], "dry_run": [71, 347, 377], "perfectli": [71, 107, 117, 164, 210, 307, 445, 476], "show_compil": 71, "behind": [71, 105, 121, 152, 189, 207, 299, 324, 340, 370, 373, 399, 410, 443, 455, 461, 476, 478, 481, 487], "basi": [71, 97, 99, 113, 114, 171, 189, 206, 254, 257, 277, 282, 286, 323, 368, 373, 375, 437, 441, 447, 451, 454, 476, 479, 480, 487, 488, 494], "rebuild": [71, 80, 85, 121, 176, 489], "add_include_dir": [71, 436], "set_include_dir": 71, "add_librari": 71, "libnam": 71, "driven": [71, 72, 90, 97, 177, 182, 291, 377, 384, 399, 403, 425, 427, 477, 489], "infer": [71, 131, 174, 207, 239, 240, 273, 283, 298, 317, 381, 396, 401, 467, 488, 493], "set_librari": 71, "mention": [71, 80, 81, 85, 87, 88, 89, 100, 107, 111, 114, 116, 119, 121, 125, 180, 189, 190, 207, 227, 228, 229, 239, 277, 282, 283, 286, 298, 307, 308, 346, 349, 354, 369, 377, 442, 443, 447, 449, 450, 451, 458, 477, 485, 488, 490, 491, 494, 496], "add_library_dir": [71, 436], "set_library_dir": 71, "add_runtime_library_dir": 71, "set_runtime_library_dir": 71, "outcom": [71, 172, 180, 306, 401, 403, 404, 442, 457], "undefine_macro": 71, "redefinit": [71, 264, 265, 443], "undefinit": 71, "redefin": [71, 97, 121, 157, 174, 254, 264, 265, 354, 443, 455, 480, 483], "add_link_object": 71, "analogu": [71, 97, 298], "set_link_object": 71, "autodetect": [71, 119, 319, 373, 410, 478, 482], "autoconf": [71, 78, 471], "detect_languag": 71, "language_map": 71, "language_ord": 71, "job": [71, 96, 104, 113, 114, 116, 119, 131, 140, 163, 172, 179, 215, 221, 237, 244, 298, 308, 314, 361, 364, 390, 410, 447, 454, 457, 477, 483, 489], "find_library_fil": 71, "has_funct": 71, "library_dir_opt": 71, "library_opt": 71, "runtime_library_dir_opt": 71, "set_execut": [71, 298, 436], "stage": [71, 116, 380, 410, 415, 425, 477, 496], "linker_so": 71, "linker_ex": 71, "split_quot": 71, "output_dir": [71, 373, 437], "extra_prearg": 71, "extra_postarg": 71, "realiti": [71, 85, 196, 307, 353, 410], "alongsid": [71, 74, 75, 250, 369, 390, 436, 441, 450, 476], "consult": [71, 72, 92, 96, 97, 99, 104, 107, 113, 116, 121, 167, 173, 180, 189, 196, 204, 244, 270, 282, 283, 286, 308, 310, 334, 337, 351, 353, 356, 358, 368, 381, 383, 422, 439, 447, 461, 468, 476, 477, 479, 480, 481, 482, 483, 484, 485, 496], "hatch": [71, 401, 484], "occas": [71, 119, 120, 312, 328, 348, 363, 377, 459, 482, 491], "cut": [71, 116, 167, 239, 261, 359, 381, 466, 481, 483, 487], "mustard": 71, "coars": [71, 494], "granular": [71, 99, 112, 114, 265, 308, 368, 466], "compileerror": 71, "create_static_lib": 71, "output_libnam": 71, "target_lang": 71, "bunch": [71, 80, 114, 140, 214, 221, 307, 454, 477, 478, 479, 480, 483], "matter": [71, 81, 90, 97, 101, 105, 106, 114, 119, 121, 176, 207, 222, 261, 268, 281, 307, 308, 354, 356, 360, 368, 376, 391, 401, 403, 404, 405, 415, 443, 446, 455, 456, 459, 465, 476, 477, 479, 481, 482, 483, 484, 491], "liberror": 71, "target_desc": 71, "output_filenam": 71, "build_temp": 71, "libfoo": 71, "slight": [71, 101, 114, 229, 257, 477, 480, 489], "sake": [71, 101, 104, 114, 140, 219, 250, 308, 346, 447, 480], "cours": [71, 72, 75, 78, 80, 81, 85, 88, 90, 92, 98, 106, 107, 113, 114, 117, 121, 127, 189, 199, 207, 214, 216, 221, 249, 272, 282, 283, 298, 304, 307, 308, 346, 354, 357, 359, 384, 399, 404, 405, 425, 434, 441, 443, 455, 456, 464, 470, 477, 478, 480, 485, 489, 490, 491], "linkerror": 71, "link_execut": [71, 436], "output_prognam": 71, "link_shared_lib": 71, "link_shared_object": 71, "preprocess": [71, 180, 188, 273, 409], "output_fil": [71, 323], "preprocesserror": 71, "executable_filenam": 71, "basenam": [71, 72, 110, 114, 131, 197, 207, 307, 309, 311, 384, 390, 414, 437], "strip_dir": [71, 323], "library_filenam": 71, "lib_typ": 71, "liblibnam": 71, "object_filenam": 71, "source_filenam": 71, "shared_object_filenam": 71, "mkpath": 71, "511": [71, 255, 437, 493], "ancestor": [71, 113, 114, 190, 282, 283, 298, 311, 357, 391, 404, 405, 428, 443, 480], "move_fil": 71, "dst": [71, 155, 189, 196, 308, 347, 356, 381, 490], "debug_print": 71, "dname": 71, "unam": [71, 308, 318, 368, 370, 373, 489, 490], "idir": 71, "llib": 71, "ldir": 71, "cc": [71, 80, 121, 173, 217, 223, 276, 286, 351, 357, 376, 436, 471, 480, 490], "ranlib": 71, "studio": [71, 72, 89, 97, 476, 483, 492], "2003": [71, 114, 196, 282, 428, 438, 466, 480, 483], "distutils_use_sdk": 71, "mssdk": 71, "sdk": [71, 272, 471, 496], "setenv": [71, 496], "borlandccompil": 71, "cygwinccompil": 71, "mingw32ccompil": 71, "mingw32": [71, 121], "tarbal": [71, 72, 78, 81, 477], "make_arch": [71, 155, 347, 484, 489, 492, 495], "base_nam": [71, 155, 347], "root_dir": [71, 155, 245, 347, 487], "minu": [71, 173, 190, 199, 239, 241, 290, 347, 360, 361, 363, 380, 392, 445, 451, 461, 494], "gztar": [71, 72, 81, 347, 489, 493], "bztar": [71, 72, 81, 347, 489], "xztar": [71, 72, 81, 347, 492], "ztar": [71, 72, 81], "chdir": [71, 155, 182, 308, 347, 368, 466, 488, 489, 490, 496], "make_tarbal": 71, "xz": [71, 72, 81, 105, 285, 347, 373, 401, 489, 490, 492], "gz": [71, 72, 78, 81, 114, 121, 232, 248, 291, 311, 347, 373, 414, 439, 441, 468, 475, 477, 482, 489], "make_zipfil": 71, "infozip": 71, "distutilsexecerror": 71, "timestamp": [71, 110, 114, 138, 163, 173, 176, 196, 217, 223, 248, 250, 259, 282, 308, 326, 351, 356, 357, 373, 381, 395, 413, 437, 447, 470, 480, 484, 490, 492, 494], "recent": [71, 85, 88, 96, 97, 98, 101, 105, 106, 107, 108, 111, 112, 114, 119, 125, 131, 137, 144, 146, 157, 164, 173, 180, 182, 189, 199, 201, 207, 224, 225, 228, 239, 240, 248, 254, 261, 262, 270, 274, 282, 284, 298, 299, 308, 310, 311, 312, 314, 322, 329, 331, 334, 351, 353, 356, 357, 360, 361, 363, 364, 368, 377, 390, 396, 397, 399, 402, 403, 404, 405, 409, 415, 417, 437, 442, 443, 445, 451, 455, 456, 457, 458, 461, 464, 467, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "ag": [71, 97, 105, 118, 173, 239, 240, 257, 258, 356, 357, 466, 479, 480, 481, 484, 489], "distutilsfileerror": 71, "newer_pairwis": 71, "walk": [71, 131, 133, 155, 210, 214, 218, 219, 221, 307, 308, 311, 364, 384, 396, 423, 479, 483, 485, 490, 492], "newer_group": 71, "blow": [71, 114, 164, 307, 489], "ll": [71, 75, 80, 85, 87, 88, 93, 95, 96, 97, 98, 100, 101, 104, 105, 106, 107, 111, 113, 114, 116, 117, 119, 120, 121, 123, 192, 207, 214, 250, 284, 287, 304, 307, 312, 333, 334, 346, 356, 357, 360, 384, 399, 405, 428, 447, 449, 450, 454, 455, 457, 459, 461, 463, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 495, 496], "pretend": [71, 85, 117, 190, 404, 443, 455, 479, 495], "carri": [71, 104, 105, 113, 171, 197, 199, 204, 280, 282, 290, 298, 307, 333, 360, 403, 424, 425, 441, 444, 450, 451, 457, 482, 483, 484, 492, 495], "wouldn": [71, 85, 90, 96, 116, 264, 347, 359, 377, 403, 404, 442, 456, 477, 478, 479, 480, 481, 483], "0o777": [71, 308, 311], "unabl": [71, 104, 107, 108, 113, 114, 120, 270, 282, 286, 308, 343, 356, 364, 368, 379, 410, 458, 468, 476, 482], "mkdir": [71, 96, 155, 214, 308, 311, 437, 466, 488, 490, 492], "create_tre": 71, "copy_tre": 71, "preserve_mod": 71, "preserve_tim": 71, "preserve_symlink": 71, "unaffect": [71, 199, 347, 381, 443, 451, 470, 480, 483, 493], "copy_fil": 71, "nf": [71, 226], "d2": [71, 96, 484, 496], "remove_tre": 71, "underneath": 71, "ruthlessli": 71, "clobber": [71, 257, 307], "sym": 71, "_copy_file_cont": 71, "dest_nam": 71, "write_fil": 71, "piec": [71, 84, 92, 99, 107, 116, 117, 145, 154, 159, 164, 182, 192, 203, 204, 207, 216, 257, 285, 307, 357, 373, 384, 401, 429, 444, 450, 455, 456, 479, 482, 491, 496], "get_platform": [71, 370, 489], "kernel": [71, 104, 126, 138, 144, 272, 276, 293, 308, 343, 347, 348, 353, 370, 375, 380, 477, 482, 487, 490, 491, 493, 495], "particularli": [71, 84, 90, 111, 116, 120, 121, 131, 298, 307, 308, 312, 323, 354, 364, 370, 401, 403, 404, 409, 461, 464, 469, 477, 478, 480, 481, 484, 485, 489, 491, 492, 494], "i586": [71, 370, 489], "sun4u": [71, 370], "macosx_deployment_target": [71, 308], "fat": [71, 308, 370, 420], "fat64": 71, "fat3": 71, "ppc": [71, 370, 483, 489], "i386": [71, 370, 475, 476, 492], "x86_64": [71, 84, 108, 370, 471, 492, 495], "macosx": [71, 370, 418, 474, 488, 489], "aix": [71, 85, 126, 308, 321, 368, 380, 495, 496], "technologi": [71, 92, 96, 104, 117, 271, 441], "5307": 71, "0747": 71, "oslevel": 71, "5300": 71, "07": [71, 114, 196, 282, 286, 334, 361, 381, 393, 440, 482, 483, 493, 496], "0000": [71, 99, 111, 119, 171, 196, 217, 223, 274, 360, 381, 443, 477, 489, 490], "7105": 71, "1731": 71, "7100": 71, "05": [71, 101, 114, 146, 167, 196, 276, 290, 334, 357, 363, 381, 467, 482, 483, 493], "01": [71, 101, 108, 114, 117, 159, 196, 199, 223, 239, 249, 254, 282, 347, 353, 355, 357, 360, 381, 423, 437, 440, 445, 466, 476, 478, 480, 481, 482, 489, 490, 493, 494], "convert_path": 71, "ish": [71, 453], "change_root": 71, "new_root": 71, "check_environ": 71, "subst_var": 71, "local_var": [71, 401], "perl": [71, 99, 107, 116, 118, 257, 334, 454, 459, 467, 477, 481, 482], "fledg": 71, "letter": [71, 75, 96, 98, 104, 116, 119, 156, 160, 171, 173, 190, 191, 199, 203, 207, 242, 281, 282, 307, 309, 311, 312, 316, 325, 334, 357, 360, 361, 379, 391, 402, 403, 409, 410, 437, 445, 450, 456, 457, 464, 467, 477, 479, 481, 482, 483, 484, 485, 488, 490, 492, 493, 494], "bureaucraci": 71, "embodi": [71, 97, 221, 425], "strtobool": 71, "byte_compil": 71, "py_fil": [71, 373], "__pycache__": [71, 97, 264, 265, 311, 326, 368, 465, 470, 488, 489, 495], "subdirectori": [71, 75, 80, 81, 83, 85, 88, 96, 97, 114, 121, 176, 214, 230, 245, 261, 267, 268, 286, 308, 311, 317, 349, 370, 395, 403, 414, 436, 437, 438, 465, 476, 477, 478, 480, 483, 484, 488, 492, 494, 495, 496], "basedir": [71, 296], "wish": [71, 72, 78, 85, 87, 95, 100, 104, 107, 113, 116, 120, 121, 131, 159, 171, 173, 180, 196, 207, 217, 222, 248, 265, 266, 267, 268, 274, 277, 282, 284, 286, 293, 307, 333, 334, 351, 357, 358, 364, 370, 391, 400, 414, 415, 417, 422, 443, 454, 458, 459, 462, 478, 481, 482, 483, 484, 491, 498], "rfc822_escap": 71, "822": [71, 116, 119, 214, 216, 244, 256, 351, 381, 479], "negative_opt": 71, "long_opt": 71, "short_opt": 71, "help_str": 71, "fancygetopt": 71, "wrap_text": 71, "option_t": 71, "optiondummi": 71, "get_option_ord": 71, "generate_help": 71, "poke": [71, 307], "find_execut": 71, "normpath": [71, 308, 309, 484], "get_config_var": [71, 84, 308, 370, 440, 484, 489, 491], "get_config_h_filenam": [71, 370], "get_makefile_filenam": [71, 84, 370], "get_python_inc": [71, 80, 436], "plat_specif": [71, 80], "get_python_lib": 71, "standard_lib": 71, "customize_compil": 71, "flavor": [71, 87, 99, 117, 207, 237, 249, 308, 358, 360, 403, 445, 460, 471], "set_python_build": 71, "adjac": [71, 90, 116, 196, 203, 285, 297, 334, 403, 425, 450, 456, 476, 491, 494], "span": [71, 99, 112, 116, 133, 163, 180, 188, 207, 234, 254, 293, 334, 360, 361, 442, 464, 482, 483, 490, 492, 493], "unreadlin": 71, "strip_com": 71, "lstrip_w": 71, "rstrip_w": 71, "skip_blank": 71, "join_lin": 71, "collapse_join": 71, "predecessor": [71, 122, 246, 480, 489], "unread": [71, 197, 314, 410, 486, 492], "strip_blank": 71, "push": [71, 90, 114, 134, 170, 173, 182, 190, 192, 199, 204, 227, 250, 297, 298, 329, 346, 380, 428, 450, 451, 456, 477, 483, 488, 490], "onto": [71, 117, 121, 182, 188, 190, 204, 227, 250, 262, 314, 322, 346, 362, 399, 403, 405, 436, 447, 459, 477, 483], "cleans": 71, "bee": [71, 106], "analogi": [71, 97, 447, 491], "subroutin": [71, 84, 99, 107, 482], "initialize_opt": 71, "finalize_opt": 71, "come": [71, 74, 81, 87, 90, 92, 93, 96, 97, 99, 101, 104, 105, 110, 113, 114, 117, 119, 120, 121, 125, 160, 163, 164, 171, 173, 174, 182, 190, 194, 199, 207, 223, 240, 246, 249, 258, 264, 265, 307, 310, 314, 315, 333, 334, 335, 349, 354, 357, 360, 370, 383, 384, 391, 401, 410, 414, 425, 430, 439, 443, 447, 449, 454, 455, 456, 458, 461, 465, 468, 469, 474, 475, 476, 477, 478, 479, 480, 481, 483, 491, 494, 495, 496], "sampl": [71, 81, 85, 87, 96, 100, 105, 106, 107, 114, 116, 118, 121, 123, 128, 154, 168, 188, 189, 207, 237, 261, 294, 310, 314, 322, 323, 333, 334, 352, 359, 365, 373, 382, 391, 410, 416, 428, 442, 456, 466, 476, 478, 479, 480, 483, 484, 488, 489, 491, 493, 494, 495], "command_templ": 71, "peel_banana": 71, "late": [71, 97, 104, 203, 477], "raison": 71, "etr": 71, "sub_command": 71, "command_nam": 71, "predic": [71, 105, 107, 150, 270, 276, 379, 380, 428, 480, 483, 489, 494, 496], "build_py_2to3": 71, "subcommand": [71, 73, 114, 131, 468, 484, 489], "intermediari": [71, 72, 78], "spoken": [72, 114], "mainstream": 72, "desktop": [72, 80, 98, 119, 418, 474, 476], "debian": [72, 91, 237, 475, 477, 478, 494], "concentr": [72, 78, 85, 92, 116, 120, 249, 333, 384, 467, 483], "specialti": 72, "speci": 72, "spring": [72, 116, 196, 239, 455], "somewher": [72, 85, 96, 97, 114, 259, 261, 307, 317, 329, 359, 360, 425, 456, 476, 483, 487], "bdist": [72, 77, 78, 492], "fake": [72, 96, 307, 422, 443], "bdist_dumb": [72, 77, 83], "someon": [72, 85, 95, 97, 117, 196, 351, 375, 410, 428, 483, 484], "smart": [72, 261, 479], "far": [72, 80, 85, 88, 90, 92, 97, 101, 116, 117, 182, 196, 199, 203, 249, 250, 251, 257, 273, 290, 298, 307, 308, 309, 311, 334, 346, 347, 354, 374, 381, 390, 403, 410, 449, 461, 477, 478, 479, 480, 481, 483], "sdist": [72, 77, 78, 81, 83, 477, 478, 482, 484, 493, 494], "bzip": [72, 489], "xzip": 72, "pkgtool": [72, 78], "sdux": 72, "hp": [72, 78, 95, 481], "ux": [72, 78], "swinstal": [72, 78], "msi": [72, 296, 482, 492, 494], "bdist_rpm": [72, 74, 77, 78, 83, 477], "srpm": [72, 77], "bdist_": [72, 478], "popular": [72, 78, 85, 90, 96, 99, 105, 114, 117, 118, 122, 152, 203, 207, 240, 262, 271, 286, 363, 395, 399, 449, 461, 463, 466, 476, 488, 489, 490, 495], "red": [72, 78, 91, 92, 104, 106, 113, 114, 116, 118, 121, 160, 163, 173, 175, 190, 225, 244, 254, 333, 359, 360, 384, 391, 399, 417, 441, 456, 464, 467, 480, 481, 486, 487, 488, 493], "hat": [72, 78, 91, 92, 121, 244, 441, 466], "suse": [72, 78, 368, 471, 496], "mandrak": [72, 78], "john": [72, 105, 118, 120, 173, 188, 203, 384, 428, 455, 456, 457, 478, 481, 482, 483, 484, 487, 488, 490, 493], "jdoe": 72, "preambl": [72, 210, 214, 219, 315], "vendor": [72, 104, 249, 318, 454, 475, 476, 487, 488], "obsolet": [72, 80, 85, 104, 164, 227, 257, 277, 282, 321, 329, 360, 368, 381, 404, 415, 423, 434, 468, 477, 478, 479, 482, 484, 487, 489, 491, 492, 493], "distribution_nam": 72, "buildrequir": 72, "build_requir": 72, "icon": [72, 95, 384, 388, 476, 479, 480], "tediou": [72, 74, 80, 112, 119, 121, 133, 140, 164, 399, 404, 454, 477, 482, 495], "prone": [72, 88, 90, 125, 164, 196, 207, 314, 323, 360, 487, 492], "pydistutil": [72, 121], "wind": [72, 121, 307], "dist": [72, 75, 76, 77, 266, 285, 290, 311, 399, 482, 489, 492, 495], "customiz": [72, 196, 384, 460, 484], "32bit": [72, 353, 479], "64bit": [72, 370], "amd64": [72, 117, 318, 363, 370], "pcbuild": [72, 377, 476, 483], "sln": 72, "x64": [72, 120, 483], "pythoncor": [72, 476, 488], "reexecut": [72, 264], "uninstal": [72, 75, 95, 224, 228, 296, 397, 468, 474, 476, 491], "directory_cr": 72, "file_cr": 72, "get_special_folder_path": 72, "csidl_str": 72, "folder": [72, 262, 286, 414, 474, 476], "csidl_appdata": 72, "csidl_common_startmenu": 72, "csidl_startmenu": 72, "csidl_common_desktopdirectori": 72, "csidl_desktopdirectori": 72, "csidl_common_startup": 72, "csidl_startup": 72, "csidl_common_program": 72, "csidl_program": 72, "csidl_font": 72, "shgetspecialfolderpath": 72, "create_shortcut": 72, "workdir": 72, "iconpath": 72, "iconindex": 72, "ishelllink": 72, "install_lib": [73, 77], "manifest": [73, 77, 80, 83, 239, 377, 484], "pat1": 73, "pat2": 73, "prune": [73, 81, 308], "graft": 73, "za": [73, 116, 119, 186, 334, 360, 450, 479], "f0": [73, 360], "9_": [73, 116, 119, 334, 450], "priori": [74, 268], "proce": [74, 84, 150, 173, 199, 209, 219, 276, 286, 298, 323, 357, 375, 380, 388, 442, 445, 455], "cheap": [74, 90, 97, 189, 314, 455], "solicit": [74, 168], "middl": [74, 90, 97, 104, 138, 173, 182, 213, 312, 333, 336, 359, 379, 399, 431, 467, 482, 484, 493], "ground": [74, 190], "build_pi": [74, 76, 77], "build_ext": [74, 77, 80, 121, 492], "temp": [74, 83, 85, 121, 298, 345, 356, 375, 426, 436, 445, 471, 476], "inplac": [74, 232], "undef": [74, 80], "spell": [74, 80, 104, 171, 196, 217, 239, 272, 282, 323, 360, 391, 450, 451, 463, 480, 485, 490], "foo_bar": [74, 131, 307, 405], "sai": [74, 75, 78, 80, 84, 85, 87, 89, 90, 97, 98, 101, 105, 111, 114, 116, 117, 119, 121, 127, 145, 151, 160, 188, 196, 207, 216, 240, 244, 250, 257, 261, 266, 281, 282, 283, 284, 286, 298, 306, 364, 370, 410, 428, 436, 443, 447, 449, 456, 459, 461, 469, 478, 479, 480, 482, 483, 484, 487, 488, 489, 491], "ext": [74, 113, 114, 171, 204, 214, 283, 291, 309, 312, 467, 480, 481, 489], "mod1": [74, 80], "mod2": [74, 80], "rememb": [74, 85, 90, 92, 95, 97, 99, 101, 104, 105, 107, 113, 114, 116, 121, 172, 173, 207, 239, 261, 276, 298, 334, 356, 377, 384, 391, 410, 417, 425, 427, 451, 455, 456, 459, 464, 465, 474, 476, 477, 478, 482, 483, 484, 486, 489, 490], "rpm": [74, 77, 78, 91, 477, 480], "greg": [74, 77, 80, 96, 121, 477, 479, 480, 481, 482, 490, 492, 495], "ward": [74, 77, 80, 121, 477, 479, 480, 481, 482, 492], "gward": [74, 80], "doc_fil": 74, "readm": [74, 81, 121, 201, 237, 261, 273, 311, 471, 475, 476, 477, 489, 493, 494], "diagram": [75, 113, 207, 239, 250, 354, 479], "stick": [75, 104, 119, 285, 298, 377, 391, 399, 479, 480, 483], "hyphen": [75, 83, 131, 171, 242, 307, 334, 379, 401, 413, 470, 476, 480], "foobar": [75, 97, 131, 234, 239, 283, 307, 334, 360, 405], "Or": [75, 80, 81, 96, 97, 106, 107, 113, 114, 117, 121, 133, 159, 160, 214, 250, 261, 304, 306, 307, 312, 347, 381, 393, 409, 428, 445, 446, 447, 454, 480, 482, 483, 488, 490], "subfoo": 75, "blah": [75, 119, 285, 307], "foopkg": 75, "meet": [75, 90, 105, 107, 114, 153, 182, 188, 199, 203, 207, 314, 360, 403, 410, 441, 443, 467, 468, 469, 477, 481, 487], "tarek": [75, 347, 370, 483, 484, 489, 492], "ziad": 75, "underlin": [75, 104, 190, 387, 391], "pyx": 75, "egg": [75, 114, 173, 188, 203, 232, 239, 240, 266, 273, 311, 322, 334, 345, 360, 364, 373, 396, 401, 404, 405, 410, 428, 437, 447, 456, 458, 461, 464, 477], "distributionmetadata": 75, "read_pkg_fil": 75, "py2": [75, 468, 489], "pkg_info_path": 75, "difficult": [76, 80, 88, 92, 96, 104, 107, 113, 116, 119, 131, 152, 250, 283, 314, 352, 410, 428, 467, 477, 478, 479, 480, 481, 484, 487, 489, 495], "lobbi": 76, "_build_pi": 76, "builder": [76, 121, 414, 425, 426, 428], "valuabl": [76, 90, 104, 125, 244, 353, 396, 490], "everyon": [76, 78, 491], "command_packag": 76, "distcmd": 76, "buildcmd": 76, "bdist_openpkg": 76, "dist_fil": 76, "upload": [76, 120, 164, 478, 482, 484, 492, 494, 496], "anthoni": [77, 479, 481, 482, 494, 495, 496], "baxter": [77, 479, 481, 482], "sig": [77, 80, 92, 112, 119, 122, 138, 155, 171, 249, 270, 308, 348, 393, 474, 477, 478, 480, 484, 492], "readili": [77, 114, 273, 298, 359, 374, 487, 491], "wider": [77, 171, 196, 289, 401, 481, 491], "audienc": [77, 80, 113, 322, 415, 449, 480, 485], "ccompil": [77, 436], "unixccompil": 77, "msvccompil": 77, "bcppcompil": 77, "borland": [77, 479], "cygwincompil": 77, "cygwin": [77, 308, 368, 375, 476, 478, 480, 495], "archive_util": 77, "dep_util": 77, "dir_util": 77, "file_util": [77, 484], "fancy_getopt": 77, "filelist": 77, "text_fil": 77, "textfil": [77, 214], "bdist_packag": 77, "redhat": 77, "build_clib": 77, "build_script": 77, "install_data": 77, "install_head": [77, 80], "install_script": [77, 414], "solid": [78, 190, 490, 491], "multitud": 78, "hope": [78, 117, 227, 344, 401, 465, 476, 477, 478, 490, 493, 495], "accessori": [78, 121], "occasion": [78, 84, 90, 96, 98, 114, 131, 132, 182, 190, 199, 203, 215, 219, 244, 261, 286, 290, 307, 308, 380, 383, 451, 455, 467, 477, 482, 483, 489], "bdist_pkgtool": 78, "bdist_sdux": 78, "noarch": 78, "nevertheless": [78, 88, 114, 151, 171, 211, 227, 273, 307, 373, 383, 428, 465, 485], "concern": [78, 90, 111, 113, 121, 138, 145, 171, 180, 284, 314, 329, 357, 377, 405, 441, 478, 479, 484, 487, 488, 493, 494, 495, 496], "jython": [78, 90, 96, 99, 106, 318, 377, 422, 449, 464, 470, 478, 481, 483, 489, 491], "vast": [78, 106, 345, 495, 496], "mass": [78, 96, 106, 196, 477], "scipi": [78, 359, 459, 466, 469, 476], "pillow": [78, 384, 465], "mxbase": 78, "publish": [79, 80, 85, 114, 116, 122, 199, 203, 205, 356, 377, 382, 411, 435, 441, 476, 478, 484, 489, 496], "centr": [80, 163], "saw": [80, 85, 457], "env": [80, 96, 114, 119, 155, 180, 203, 214, 308, 311, 360, 364, 410, 414, 436, 453, 463, 468, 470, 475, 476, 480, 481, 488, 495], "www": [80, 87, 91, 107, 117, 119, 120, 121, 152, 164, 171, 175, 179, 182, 196, 197, 214, 249, 254, 256, 257, 329, 333, 334, 356, 357, 360, 368, 402, 409, 410, 411, 418, 426, 428, 439, 441, 443, 450, 455, 460, 469, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 490, 492, 494], "dozen": [80, 466, 483, 489], "spirit": [80, 101], "listdir": [80, 90, 105, 119, 155, 214, 227, 234, 244, 259, 308, 311, 347, 358, 414, 480, 481, 484, 485, 490, 494], "mydir": [80, 90], "subdir": [80, 131, 230, 286, 377], "promis": [80, 85, 106, 270, 489], "lai": [80, 114, 229, 461], "Then": [80, 84, 90, 91, 96, 97, 104, 106, 114, 121, 164, 203, 204, 207, 208, 259, 266, 284, 287, 296, 304, 307, 349, 354, 357, 361, 388, 397, 443, 458, 464, 476, 485, 489], "great": [80, 84, 106, 113, 204, 250, 257, 334, 404, 457, 482, 488], "foo1": [80, 298, 334], "foo2": [80, 298, 334], "ext_packag": 80, "subpkg": [80, 265], "cpp": [80, 480], "seem": [80, 85, 88, 90, 91, 92, 98, 107, 113, 116, 131, 152, 230, 286, 294, 308, 323, 356, 447, 457, 477, 478, 479, 480, 482], "notwithstand": [80, 441, 477], "_foo": [80, 270], "swig_opt": 80, "modern": [80, 85, 110, 125, 138, 143, 151, 156, 190, 191, 208, 249, 273, 325, 347, 353, 357, 373, 384, 412, 421, 461, 474, 477, 481, 483, 484, 489, 490, 493, 494, 495, 496], "mc": [80, 450], "rc": [80, 81, 114, 116, 189, 222, 311, 364, 370, 377, 414, 426], "x11r6": 80, "x11": [80, 116, 384, 391, 410, 418], "xlib": [80, 384], "python1": [80, 121], "arrayobject": 80, "incdir": 80, "sensibl": [80, 117, 120, 131, 138, 180, 196, 249, 270, 307, 380, 404, 405, 409, 445, 481, 484, 493, 494], "ndebug": [80, 471], "have_strftim": 80, "have_foo": 80, "have_bar": 80, "gdbm": [80, 96, 197, 471, 485], "xt": [80, 93, 162, 248, 285], "AND": [80, 225, 274, 356, 441, 445], "mypkg": [80, 307, 403], "clever": [80, 90, 119, 164, 250, 314, 361, 479], "xmlproc_pars": 80, "xmlproc_val": 80, "package_data": [80, 81], "arrang": [80, 96, 98, 107, 113, 114, 138, 144, 145, 151, 207, 239, 250, 270, 283, 298, 357, 380, 384, 388, 390, 391], "dat": [80, 131, 197, 476], "spoon": 80, "bitmap": [80, 263, 270, 296, 343, 384, 390, 391], "bm": 80, "b1": [80, 353, 399], "gif": [80, 210, 219, 220, 245, 263, 384, 399, 422, 482], "b2": [80, 353, 399], "user_bas": [80, 121, 349, 370, 484], "discourag": [80, 107, 116, 151, 171, 194, 208, 239, 265, 303, 334, 349, 357, 360, 373, 375, 377, 443, 479, 482, 487], "wheel": [80, 122, 203, 266, 333, 471, 487, 488, 495, 496], "trove": [80, 480], "licenc": 80, "200": [80, 90, 97, 120, 168, 190, 199, 203, 237, 255, 256, 259, 353, 357, 360, 384, 399, 403, 410, 422, 442, 461, 467, 480, 493, 495], "sourceforg": [80, 93, 121, 196, 441, 477, 478, 480, 483], "art": [80, 166, 167, 173, 207, 250], "adher": [80, 171, 180, 259, 277, 284, 298, 356, 449, 456], "experiment": [80, 90, 105, 255, 261, 286, 356, 384, 386, 425, 449, 480, 485, 486, 488, 489, 494, 495], "mileston": 80, "a1": [80, 114, 242], "a2": [80, 114, 242, 334], "bn": [80, 92], "pr1": 80, "pr2": 80, "prn": 80, "osi": [80, 322], "approv": [80, 257, 303, 322, 410, 476, 477, 484], "offic": [80, 208, 441], "gut": [80, 119, 164], "bottom": [80, 85, 96, 107, 108, 112, 131, 189, 190, 192, 204, 273, 282, 308, 312, 357, 384, 391, 399, 401, 404, 405, 443, 450, 454, 476, 477, 479, 480, 487], "distutils_debug": 80, "527": [81, 479], "rst": [81, 201, 311, 471, 475, 494], "roll": [81, 173, 196, 284, 356, 375, 377, 403, 455, 482, 483], "regener": [81, 215, 326, 447, 471, 484, 492, 493], "cv": [81, 308, 380, 399, 477, 478, 479, 480, 481, 482], "svn": [81, 108, 131, 176, 370, 409, 480, 482, 483, 484, 489], "hg": [81, 180, 311, 357, 480, 484, 489], "git": [81, 92, 156, 364, 414, 491, 495], "bzr": 81, "_darc": 81, "redund": [81, 85, 127, 285, 309, 334, 360, 401, 439, 451, 456, 479, 484, 487], "weed": 81, "unalt": [81, 457], "pyinitu_": 83, "punycod": [83, 171, 480], "initfunc_nam": 83, "_": [83, 105, 114, 131, 133, 146, 156, 159, 162, 194, 196, 204, 239, 240, 244, 258, 261, 265, 274, 276, 287, 298, 303, 314, 322, 334, 336, 337, 347, 348, 360, 361, 368, 377, 393, 399, 401, 409, 414, 417, 437, 442, 446, 449, 450, 451, 456, 464, 465, 487, 488, 493, 494, 495], "u_": 83, "driver": [83, 190, 207, 226, 244, 308, 310, 353, 377, 420, 421, 431, 480], "module1": [83, 477], "packagenam": 83, "major_vers": 83, "minor_vers": 83, "tcl83": 83, "martin": [83, 119, 244, 303, 477, 479, 480, 481, 482, 483, 484, 489, 490, 491, 492, 493, 495], "loewi": [83, 303], "dndebug": [83, 84], "wall": [83, 84, 196, 323, 483], "wstrict": 83, "fpic": [83, 471], "dmajor_vers": 83, "dminor_vers": 83, "python2": [83, 91, 108, 121, 122, 123, 360, 370, 436, 476, 478, 483, 491], "i686": [83, 410], "ltcl83": 83, "trust": [83, 164, 237, 256, 262, 283, 298, 314, 317, 320, 351, 357, 364, 373, 409, 410, 475, 476, 483, 484, 491, 493, 494, 495, 496], "tailor": [84, 260, 360, 377], "identif": [84, 149, 298, 318, 362, 380, 487], "fprintf": [84, 85], "ctime": [84, 196, 308, 309, 358, 381, 480], "shut": [84, 99, 114, 117, 138, 259, 343, 348, 353, 354, 368, 399, 422, 467, 470, 480, 484, 492, 496], "troubl": [84, 111, 117, 120, 227, 476, 481], "cumbersom": [84, 112, 199, 384], "despit": [84, 97, 99, 114, 117, 249, 251, 277, 311, 340, 357, 364, 401, 447, 466, 483], "accommod": [84, 114, 118, 215, 384, 457, 481], "pname": 84, "pmodul": [84, 85], "parg": 84, "pythonfil": 84, "atoi": [84, 281], "glue": [84, 479, 481], "numarg": 84, "emb_numarg": 84, "embmethod": 84, "embmodul": 84, "pyinit_emb": 84, "cflag": [84, 121, 321, 376, 471, 480], "wsign": 84, "fwrapv": 84, "ldflag": [84, 471, 480], "lpython3": [84, 495], "lpthread": 84, "ldl": 84, "lutil": 84, "lm": [84, 121, 360, 450], "linkforshar": 84, "xlinker": [84, 121], "cffi": [85, 86, 103, 199], "favorit": [85, 92, 119, 457, 465], "food": [85, 99, 314, 461], "monti": [85, 180, 207, 239, 277, 308, 311, 356, 359, 360, 373, 437, 454, 469, 481, 483, 489], "fan": 85, "spammodul": 85, "spammifi": 85, "shortli": [85, 87, 150, 384, 467], "spam_system": 85, "st": [85, 96, 364, 399, 480, 481], "convention": [85, 257, 299, 307, 308, 414], "pyerr_": 85, "lost": [85, 101, 106, 113, 114, 119, 142, 145, 190, 196, 199, 215, 240, 261, 277, 282, 284, 298, 323, 347, 348, 351, 354, 441, 442, 459, 465, 477, 479, 489, 490, 491, 496], "went": [85, 101, 157, 227, 310, 351, 428, 477, 479, 482, 483, 496], "predeclar": 85, "wise": [85, 106, 194, 199, 283, 479, 494], "couldn": [85, 116, 120, 273, 308, 348, 356, 401, 405, 438, 478, 479, 482, 484, 493], "satisfi": [85, 120, 194, 235, 245, 248, 270, 273, 283, 290, 380, 443, 447, 457, 489], "spamerror": 85, "unintend": [85, 97, 199, 298, 311, 373, 488], "genuin": [85, 207, 229, 484, 489], "seen": [85, 87, 96, 97, 99, 101, 106, 107, 114, 168, 225, 244, 249, 270, 276, 284, 286, 307, 320, 346, 384, 415, 417, 428, 430, 439, 455, 456, 458, 464, 466, 470, 480, 483, 486, 491, 494], "spammethod": 85, "spam_doc": 85, "pyinit_nam": 85, "satisfactorili": 85, "pyimport_inittab": 85, "interven": [85, 114, 160, 203, 207, 218, 467, 490], "exercis": [85, 90, 96, 113, 114, 117, 173, 200, 282, 307, 323, 377, 441, 483], "substanti": [85, 257, 276, 289, 329, 425, 441, 479, 481, 486, 488, 489, 490, 491, 493], "xxmodul": 85, "perman": [85, 120, 121, 237, 241, 255, 262, 410, 467, 476, 492, 496], "luckili": [85, 403, 422], "toplevel": [85, 173, 199, 239, 367, 384, 390, 391, 428], "lx11": 85, "imagin": [85, 116, 125, 314, 399, 404, 405, 461], "fortun": [85, 88, 90, 104, 125, 164, 485], "dwell": 85, "somehow": [85, 90, 298, 359, 373, 465, 483, 484], "wherev": [85, 91, 104, 106, 114, 116, 119, 132, 173, 190, 261, 384, 401, 412, 441, 456, 479, 482, 488], "my_callback": [85, 87, 307], "my_set_callback": 85, "set_callback": 85, "boilerpl": [85, 88, 112, 304, 377, 404, 447, 492], "arglist": 85, "eventcod": 85, "placement": [85, 159, 317, 384, 428], "mistak": [85, 106, 116, 117, 131, 137, 225, 227, 282, 286, 307, 360, 381, 384, 471, 481, 482, 484, 486, 487, 488], "whoop": [85, 114], "si": [85, 191, 364], "wb": [85, 99, 114, 128, 131, 162, 214, 222, 237, 248, 285, 293, 314, 324, 335, 365, 401, 412, 416, 434, 436, 437, 477, 486, 489], "100000": [85, 239, 323, 382, 397, 480], "rectangl": [85, 104, 190, 194], "400": [85, 87, 114, 120, 128, 168, 237, 255, 298, 303, 351, 384, 399, 456, 467, 487], "300": [85, 104, 114, 120, 168, 255, 261, 399, 410, 442, 467, 489], "myfunct": [85, 91, 182], "2j": [85, 110, 239, 277], "kwlist": [85, 88, 203, 278], "geoff": 85, "philbrick": 85, "hk": [85, 490], "keywdarg_parrot": 85, "keywd": 85, "voltag": [85, 239, 456], "stiff": [85, 456], "voom": [85, 456], "norwegian": [85, 171, 456], "blue": [85, 104, 106, 114, 116, 118, 160, 168, 173, 175, 190, 225, 333, 359, 360, 384, 391, 399, 417, 456, 457, 464, 467, 480, 481, 486, 487, 489, 493], "sss": [85, 87, 196], "parrot": [85, 239, 256, 322, 456, 483], "volt": [85, 456], "love": [85, 90, 114, 160, 188, 258, 456, 486, 491], "keywdarg_method": 85, "skit": [85, 207, 454], "keywdargmodul": 85, "keywdarg": 85, "pyinit_keywdarg": 85, "counterpart": [85, 114, 190, 239, 273, 276, 282, 303, 353, 360, 376, 484, 486, 487, 488, 489, 494], "iii": [85, 441], "789": [85, 199, 483], "ss": [85, 119, 196, 262, 360, 381, 487, 490], "hell": 85, "forgotten": [85, 119, 137, 457], "occupi": [85, 119, 128, 298, 337, 387, 391, 491], "reus": [85, 88, 92, 117, 138, 140, 150, 171, 179, 182, 189, 197, 207, 228, 240, 250, 265, 308, 334, 353, 354, 357, 363, 373, 377, 379, 380, 404, 417, 442, 447, 454, 482, 489, 493, 494, 495, 496], "unusu": [85, 104, 114, 121, 196, 227, 310, 323, 337, 359, 364, 370, 409, 445, 493, 494, 495, 496], "prematur": [85, 113, 256, 286, 450, 485], "undetect": [85, 286, 380], "plenti": [85, 117], "appar": [85, 95, 98, 104, 164, 348, 423, 456, 477, 481], "heavi": [85, 120, 180, 459, 469, 484, 490, 494], "disadvantag": [85, 88, 96, 97, 116, 144, 171, 199, 357, 382, 479, 486], "truli": [85, 93, 96, 97, 112, 126, 151, 194, 286, 379, 410, 484, 485], "reclaim": [85, 87, 264, 265, 401, 417], "nobodi": [85, 164, 249, 259, 351], "seemingli": [85, 207, 445, 477], "pictur": [85, 180, 214, 448, 479, 481], "bet": 85, "therebi": [85, 97, 211, 217, 399, 491], "no_bug": 85, "spent": [85, 151, 323, 337, 348, 482, 483], "slowli": [85, 99, 114, 487], "enclos": [85, 99, 116, 122, 173, 190, 239, 256, 262, 270, 277, 303, 312, 334, 346, 361, 377, 380, 382, 401, 403, 425, 442, 444, 445, 449, 450, 451, 455, 456, 457, 464, 478, 479, 482, 487, 488, 489, 495], "__cplusplu": 85, "sight": [85, 154], "unic": [85, 310, 325, 475], "clash": [85, 114, 189, 261, 282, 283, 286, 445, 450, 455, 465, 468, 483, 492, 495, 496], "strongli": [85, 106, 113, 239, 359, 368, 430, 437, 443, 478, 479, 482, 487], "degre": [85, 168, 190, 290, 359, 360, 399, 443, 480, 495], "certainti": [85, 420], "burden": [85, 484, 485, 490, 492], "pyspam_system": 85, "pyspam_api": 85, "pyspam_api_point": 85, "c_api_object": 85, "pyspam_system_num": 85, "_c_api": 85, "disappear": [85, 87, 98, 113, 117, 141, 151, 399, 479, 481], "bulk": [85, 199, 272, 491], "ifndef": 85, "py_spammodule_h": 85, "endif": [85, 254, 334, 436, 471, 487, 488, 495, 496], "pyspam_system_return": 85, "pyspam_system_proto": 85, "import_spam": 85, "pyinit_cli": 85, "clientmodul": 85, "metaphor": [85, 267, 268, 390], "cython": [86, 90, 91, 97, 103, 491], "numba": 86, "sophist": [86, 97, 145, 152, 168, 182, 199, 282, 333, 357, 361, 428, 466, 467, 479, 482], "assist": [86, 107, 119, 279, 293, 299, 400, 414, 441, 443, 479, 480, 481, 482, 483, 484, 494], "baggag": 87, "easiest": [87, 88, 91, 93, 96, 97, 117, 131, 199, 207, 257, 261, 273, 307, 308, 404], "dealt": [87, 117, 170, 225, 307, 333], "newdatatype_dealloc": 87, "newdatatypeobject": 87, "obj_underlyingdatatypeptr": 87, "other_obj": 87, "unwound": [87, 282, 334, 443], "mislead": [87, 119, 133, 165, 181, 196, 410, 426, 479, 487, 489], "my_dealloc": [87, 112], "cbresult": 87, "err_typ": 87, "err_valu": 87, "err_traceback": 87, "unstabl": [87, 123, 199, 495], "textual": [87, 88, 97, 119, 131, 189, 215, 282, 301, 303, 329, 334, 360, 373, 391, 403, 425, 426, 445, 451, 455, 479, 493], "newdatatype_repr": 87, "ified_newdatatyp": 87, "human": [87, 90, 113, 114, 119, 128, 203, 204, 212, 244, 257, 259, 282, 303, 314, 318, 348, 351, 357, 358, 365, 368, 392, 402, 416, 429, 445, 461, 468, 479, 486, 490, 491], "newdatatype_str": 87, "stringified_newdatatyp": 87, "structmemb": [87, 88, 105], "py_audit_read": 87, "read_restrict": 87, "write_restrict": 87, "newdatatype_getattr": 87, "50": [87, 91, 96, 97, 107, 113, 114, 151, 168, 173, 196, 199, 261, 282, 294, 323, 333, 334, 353, 359, 368, 381, 382, 391, 399, 403, 405, 427, 428, 441, 464, 465, 466, 483, 484, 488, 489, 492, 493, 494, 495, 496], "newdatatype_setattr": 87, "newdatatype_richcmp": 87, "obj1": [87, 481], "obj2": [87, 481], "size1": 87, "size2": 87, "newdatatyp": 87, "unfil": [87, 445], "newdatatype_hash": 87, "some_s": 87, "32767": [87, 363], "some_numb": 87, "toi": [87, 314], "newdatatype_cal": 87, "arg3": [87, 97, 110, 127], "incur": [87, 173, 199, 276, 441, 489], "trivialobject": 87, "trivialtyp": 87, "trivial_dealloc": 87, "tp_": 87, "some_object": [87, 97, 270, 404], "mytyp": [87, 307, 488], "myth": 87, "gentl": [88, 101, 111, 131, 479], "customobject": 88, "customtyp": 88, "custommodul": 88, "pyinit_custom": 88, "hopefulli": [88, 111, 114, 491], "mandatori": [88, 96, 124, 148, 262, 265, 283, 308, 357, 358, 456, 471, 480, 490, 494, 496], "wari": [88, 369, 459], "accid": [88, 90, 131, 455, 483, 484, 485, 495], "ob_fval": 88, "mycustom": 88, "fire": [88, 110, 114, 131, 151, 152, 348], "uninterest": [88, 203], "showcas": [88, 138, 145], "custom2": 88, "custom_dealloc": 88, "custom_new": 88, "custom_init": 88, "tmp": [88, 114, 119, 121, 182, 237, 259, 286, 347, 375, 447, 471, 477, 480, 481, 482, 483, 484, 489, 495], "ooi": 88, "custom_memb": 88, "custom_nam": 88, "custom_method": 88, "pyinit_custom2": 88, "midwai": [88, 439], "polymorph": [88, 99, 432], "proceed": [88, 92, 101, 120, 308], "ourselv": [88, 106, 125, 401], "anyon": [88, 121, 357, 370, 377, 441, 478, 484, 491, 498], "riski": [88, 207], "paranoid": 88, "uui": 88, "custom_getfirst": 88, "custom_setfirst": 88, "custom_getlast": 88, "custom_setlast": 88, "custom_getsett": 88, "custom3": 88, "pyinit_custom3": 88, "unneed": [88, 90, 426, 484, 491, 496], "some_attribut": [88, 404], "custom_travers": 88, "custom_clear": 88, "custom4": 88, "pyinit_custom4": 88, "subobject": [88, 97], "vret": 88, "micro": [88, 92, 97, 368, 477, 484, 486, 487, 494], "robust": [88, 164, 197, 270, 323, 348, 359, 383, 417, 466, 484, 489, 491, 492], "reimplement": [88, 403, 479, 491, 492, 493, 494], "sublist": [88, 390, 477, 489], "sublistobject": 88, "sublist_incr": 88, "sublist_method": 88, "sublist_init": 88, "sublisttyp": 88, "sublistmodul": 88, "pyinit_sublist": 88, "resembl": [88, 106, 121, 190, 239, 257, 308, 312, 346, 456, 470, 479, 483, 484, 487, 495], "briefli": [89, 119, 199, 482], "explanatori": [89, 207, 329, 403], "materi": [89, 107, 116, 190, 203, 248, 272, 353, 357, 383, 390, 441, 469, 481, 484], "xy": [89, 121, 276, 349, 370, 401], "studi": [89, 97, 107, 207, 250, 399, 428, 456, 480, 483], "paradigm": [89, 92, 107], "reassur": 89, "pythonxi": [89, 476, 495], "_declspec": 89, "dllexport": [89, 98], "initspam": 89, "nigetspamdata": 89, "100k": 89, "rid": [89, 117, 478, 487], "xx": [89, 131, 259, 308, 334, 345, 409, 476], "guido": [90, 92, 97, 99, 105, 203, 294, 360, 401, 441, 457, 465, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 495, 496], "van": [90, 92, 97, 99, 173, 196, 438, 441, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 495, 496], "rossum": [90, 92, 97, 99, 438, 441, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 495, 496], "believ": [90, 99, 107, 117, 250, 307, 341, 480], "eleg": [90, 97, 99, 173, 180, 460, 489], "clariti": [90, 117, 125, 132, 306, 307, 375, 381, 442, 489], "disagr": 90, "perceiv": [90, 286], "fragment": [90, 107, 154, 329, 357, 360, 409, 410, 427, 428, 482, 484, 489, 490], "experienc": 90, "stare": 90, "feel": [90, 101, 202, 307, 383, 391, 405, 456, 479, 480, 483, 487], "uneasi": 90, "wast": [90, 114, 119, 485, 488], "harder": [90, 97, 207, 307, 360, 405], "20": [90, 97, 101, 104, 105, 107, 110, 113, 114, 116, 119, 146, 151, 163, 168, 189, 194, 196, 199, 204, 207, 223, 225, 249, 250, 261, 270, 274, 276, 282, 298, 308, 311, 323, 333, 334, 336, 337, 353, 357, 359, 360, 368, 373, 381, 382, 399, 401, 409, 411, 441, 450, 455, 464, 466, 470, 471, 477, 481, 482, 483, 484, 486, 488, 489, 491, 492, 493, 494, 495, 496], "30": [90, 96, 97, 104, 105, 107, 110, 113, 114, 138, 152, 163, 168, 173, 196, 199, 204, 207, 250, 274, 276, 282, 284, 308, 331, 333, 336, 353, 359, 360, 361, 377, 380, 381, 382, 399, 438, 455, 456, 466, 467, 471, 480, 481, 482, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496], "certainli": [90, 97, 104, 116, 117, 121, 189, 287, 298, 477, 478, 479, 480, 484], "19999999999999996": 90, "0011001100110011001100110011001100110011001100110011": 90, "1999999999999999555910790149937383830547332763671875": 90, "15": [90, 97, 104, 107, 110, 113, 114, 118, 119, 143, 163, 171, 173, 180, 194, 196, 207, 217, 225, 229, 237, 250, 255, 261, 273, 274, 276, 281, 282, 283, 303, 308, 314, 333, 334, 337, 356, 357, 359, 360, 361, 364, 368, 381, 382, 393, 396, 399, 439, 440, 461, 471, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 492, 493, 494, 495, 496], "accuraci": [90, 196, 276, 290, 323, 382, 459, 481], "fuller": [90, 478], "eight": [90, 119, 190, 274, 341, 359, 360, 370, 384, 450, 477, 480, 481, 495], "modula": [90, 92, 289, 455], "heart": [90, 480], "m_": 90, "baseclass": 90, "methodnam": [90, 298, 403, 434, 455, 456], "syntact": [90, 97, 99, 182, 216, 254, 265, 272, 301, 329, 356, 360, 393, 401, 404, 409, 415, 429, 442, 445, 449, 450, 451, 455, 456, 458, 481, 482, 485], "piti": 90, "nice": [90, 98, 101, 117, 131, 153, 157, 164, 182, 189, 207, 239, 250, 285, 308, 337, 351, 354, 359, 360, 375, 405, 418, 443, 456, 461, 462, 464, 477, 489, 490], "unqualifi": [90, 227, 364, 455, 491], "walru": [90, 133, 445, 457, 495], "572": [90, 442, 445, 495], "postfix": 90, "mathematician": 90, "rewrit": [90, 112, 133, 214, 232, 308, 393, 459, 477, 480, 482, 484, 485, 492, 495], "formula": [90, 196, 244, 360], "clumsi": [90, 99, 490], "me": [90, 92, 96, 117, 121, 214, 240, 250, 254, 361, 377, 405, 468, 476, 483, 488], "wit": [90, 485], "pipermail": [90, 469, 478, 480], "3000": [90, 99, 124, 400, 401, 442, 443, 483, 485], "2006": [90, 107, 196, 282, 329, 426, 428, 437, 441, 482, 496], "novemb": [90, 163, 196, 450], "004643": 90, "becam": [90, 107, 124, 162, 173, 227, 308, 351, 368, 381, 401, 477, 483, 484, 487, 492, 495, 496], "uncomfort": 90, "ugli": [90, 91, 125, 203, 384, 457, 477, 480], "sadli": [90, 101], "difficulti": [90, 298, 477, 480], "obei": [90, 120, 346, 360, 364, 380, 443, 483], "mydict": [90, 97, 401, 481], "getvalu": [90, 91, 97, 164, 182, 210, 248, 273, 277, 314, 323, 377, 404, 431, 436, 489, 492], "elif": [90, 97, 101, 104, 107, 114, 120, 133, 134, 196, 203, 214, 242, 265, 304, 334, 356, 358, 360, 368, 373, 414, 442, 443, 446, 447, 450, 456, 482, 490], "function_1": [90, 110], "function_2": [90, 110], "method_1": 90, "myvisitor": 90, "visit_a": 90, "method_nam": [90, 91], "visit_": [90, 133], "untrust": [90, 119, 133, 203, 259, 277, 283, 289, 298, 314, 315, 327, 329, 342, 345, 347, 357, 373, 424, 426, 427, 428, 429, 434, 435, 437, 461, 480, 483], "attack": [90, 119, 133, 138, 186, 239, 249, 251, 258, 277, 283, 341, 347, 356, 360, 373, 401, 424, 461, 482, 483, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496], "imit": [90, 323, 483], "fallthrough": 90, "unfortun": [90, 96, 100, 104, 107, 112, 114, 116, 120, 164, 171, 298, 320, 323, 341, 345, 353, 357, 373, 375, 384, 405, 459, 467, 476, 478, 481, 483, 486, 493, 496], "stackless": [90, 449], "redesign": [90, 483, 484, 491], "invent": [90, 117, 171, 286, 380, 449, 480, 484], "nuitka": [90, 97], "inaccess": [90, 269, 308, 309, 410, 443, 477, 480, 491], "blown": [90, 479], "very_long_list_of_fil": 90, "interv": [90, 107, 113, 190, 196, 261, 284, 308, 323, 333, 348, 359, 368, 377, 380, 381, 391, 399, 481, 483, 489, 493, 495], "boehm": 90, "assembl": [90, 97, 107, 119, 356, 384, 443, 482], "transpar": [90, 98, 119, 131, 162, 171, 189, 190, 216, 217, 232, 255, 261, 273, 285, 314, 373, 391, 399, 436, 476, 478, 480, 481, 487, 488, 490, 491, 493, 494], "purifi": [90, 471], "pascal": [90, 92, 97, 107, 363, 455, 456, 457, 480, 484], "cartesian": [90, 167, 276, 356, 483, 486, 492], "lisp": [90, 97, 107, 479], "grown": [90, 207, 343], "539294296": 90, "1142331976": 90, "whoever": 90, "unaccept": [90, 314, 353, 428, 451], "forgot": [90, 446, 487], "invari": [90, 97, 106, 107, 199, 210, 250, 314, 401, 445, 447, 455, 459], "referenti": [90, 314], "resid": [90, 114, 121, 214, 244, 286, 308, 328, 337, 358, 447, 477], "listwrapp": 90, "the_list": 90, "98767": 90, "555": 90, "el": [90, 156, 374, 409, 428, 446], "9999999": 90, "1001": [90, 171, 361], "7777777": 90, "333": [90, 97, 457, 459, 482], "misbehav": [90, 151], "anomali": [90, 199], "fool": [90, 97, 477, 481], "unsort": [90, 486], "mutablemap": [90, 99, 174, 180, 197, 345, 360, 401, 443, 483, 485, 490], "disciplin": [90, 222], "stub": [90, 168, 272, 273, 308, 368, 401, 404], "increasingli": [90, 399, 459, 483, 484], "sloppi": 90, "1970": [90, 92, 160, 163, 196, 355, 381], "messi": [90, 107, 480, 484], "spaghetti": 90, "jump": [90, 114, 204, 207, 261, 285, 312, 399, 443, 456, 480, 482, 485, 488, 493, 494], "abus": [90, 373, 424, 451, 489], "sparingli": 90, "unpair": [90, 277], "untermin": [90, 97], "chiefli": 90, "engin": [90, 92, 96, 99, 107, 111, 116, 199, 281, 334, 356, 384, 391, 428, 430, 477, 479, 481, 483, 484, 488, 492], "unmatch": [90, 334, 361, 409, 492], "entranc": 90, "delphi": 90, "volum": [90, 92, 96, 173, 276, 310, 342, 437, 481, 491], "21": [90, 107, 110, 114, 119, 163, 196, 199, 203, 217, 237, 240, 249, 250, 334, 357, 359, 381, 393, 397, 456, 464, 465, 470, 479, 480, 482, 483, 489, 490, 493, 495, 496], "42": [90, 97, 106, 108, 113, 131, 133, 137, 141, 151, 173, 182, 183, 189, 199, 207, 239, 240, 270, 283, 298, 299, 307, 333, 359, 360, 361, 382, 396, 399, 401, 403, 404, 435, 442, 444, 455, 456, 461, 464, 481, 482, 483, 489, 490, 493, 495, 496], "63": [90, 333, 356, 368], "english": [90, 97, 114, 116, 119, 163, 171, 255, 307, 356, 379, 381, 399, 449, 450, 484, 485, 492], "reorder": [90, 97, 106, 138, 173, 301, 318, 428], "diagnos": [90, 97, 108, 113, 189, 261, 282, 403, 405], "fee": [90, 239, 441], "fie": 90, "fum": [90, 239], "fiefoo": 90, "book": [91, 103, 107, 116, 163, 167, 173, 196, 286, 334, 356, 377, 383, 384, 460, 469, 489], "pyrex": 91, "sip": [91, 409], "cxx": [91, 370, 471], "weav": 91, "pythonrun": [91, 482], "al": [91, 107, 194, 353, 357, 362, 391, 483, 493], "pymap": 91, "arg_format": 91, "seek": [91, 96, 97, 119, 128, 162, 166, 188, 206, 226, 229, 232, 239, 250, 273, 293, 308, 314, 356, 373, 375, 377, 437, 439, 461, 477, 483, 486], "print_error": [91, 489], "stringio": [91, 97, 99, 182, 210, 221, 273, 277, 323, 360, 368, 377, 404, 422, 426, 483, 484, 485, 489, 491, 492], "stdoutcatch": 91, "textiobas": [91, 239, 256, 273, 375, 384, 443, 483, 484, 485, 488], "attrnam": [91, 282, 425], "hackeri": 91, "worth": [91, 114, 128, 162, 207, 237, 276, 283, 284, 298, 399, 449, 450, 460, 474, 477, 478, 479, 482, 492], "gdbinit": [91, 108, 484], "br": [91, 190, 450, 485, 490], "_pyimport_loaddynamicmodul": 91, "myscript": [91, 312, 323, 453, 470], "devel": [91, 110, 303], "apt": [91, 108, 110, 493], "tripl": [91, 99, 116, 119, 190, 203, 264, 303, 308, 315, 334, 343, 360, 379, 399, 442, 443, 450, 461, 464, 487], "myreadlin": 91, "relink": 91, "linkcc": [91, 471], "bpl": 91, "beginn": [92, 95, 282, 346], "introductori": [92, 95, 101, 116, 119, 353, 399, 482], "profit": [92, 441], "mission": [92, 307], "donat": [92, 481], "tax": [92, 97, 334, 464, 467, 480], "exempt": [92, 484], "commerci": [92, 97, 104, 310, 441, 483], "sell": [92, 441, 482], "logo": [92, 254, 399, 441], "trademark": [92, 441], "experi": [92, 96, 106, 107, 113, 116, 135, 138, 189, 244, 323, 356, 384, 399, 403, 425, 454, 460, 476, 477, 478, 479, 483, 484, 486, 487, 488, 492, 495], "gripe": 92, "remedi": [92, 173, 495], "complaint": [92, 93, 101, 458, 478], "biggest": [92, 104, 397, 485, 489, 490], "amoeba": 92, "bourn": [92, 316], "acut": [92, 119], "foolish": 92, "1989": [92, 196, 483], "christma": 92, "holidai": 92, "colleagu": 92, "februari": [92, 163, 196, 381, 450, 478, 489], "usenet": [92, 96, 113], "imap": [92, 123, 208, 262, 298, 320, 357, 409, 480, 481, 495], "earth": [92, 106, 356, 456], "shatter": 92, "bugfix": [92, 101, 477, 478, 479, 480, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "rcn": [92, 105], "0an": 92, "0bn": 92, "0rcn": 92, "unreleas": 92, "a0": 92, "4a0": 92, "freeli": [92, 134, 152, 207, 360, 441, 460, 488], "pdf": [92, 113, 119, 249, 333, 359, 368, 495], "comp": [92, 96, 97, 113, 162, 303, 469, 478, 479, 482, 490, 491], "lang": [92, 96, 97, 113, 119, 244, 281, 356, 410, 469, 478, 479, 480, 482, 485], "subscrib": [92, 114, 262, 401, 443], "traffic": [92, 222, 353, 357, 359, 479, 489], "moder": [92, 97, 107, 116, 237, 303, 307, 320, 334, 479, 480], "five": [92, 99, 114, 160, 199, 284, 286, 307, 308, 334, 352, 354, 356, 357, 368, 409, 430, 477, 483, 490, 495], "rss": [92, 479], "feed": [92, 106, 171, 190, 191, 221, 222, 249, 254, 276, 298, 360, 404, 411, 422, 428, 431, 439, 467, 482, 489], "cite": 92, "outdat": [92, 108, 189, 265, 383, 384, 483, 489, 494], "jelk": 92, "boer": 92, "quarterli": 92, "decemb": [92, 163, 196, 450, 466, 479, 480, 485, 493], "pp": [92, 105, 312, 322, 333, 495], "283": [92, 196], "303": [92, 120, 255, 410], "wiki": [92, 93, 96, 97, 107, 108, 173, 249, 356, 357, 383, 474, 481, 482, 484, 489, 490], "moin": [92, 96, 474, 481], "pythonbook": 92, "bookstor": 92, "infrastructur": [92, 114, 122, 127, 134, 152, 171, 357, 415, 483, 484, 491, 494], "team": [92, 441, 476, 477, 478, 479, 484, 488, 489, 491, 496], "he": [92, 171, 250, 312, 334, 380, 441, 450, 469, 477, 493], "began": [92, 257, 265, 282, 377, 477, 478, 487], "bbc": [92, 179, 454, 492], "comedi": 92, "roughli": [92, 97, 105, 114, 117, 119, 240, 257, 267, 276, 290, 296, 298, 307, 308, 360, 377, 380, 400, 442, 443, 477, 483, 484, 494, 495, 496], "18": [92, 101, 107, 110, 119, 163, 196, 199, 207, 237, 240, 250, 311, 333, 334, 347, 357, 359, 360, 363, 368, 391, 399, 461, 466, 480, 481, 484, 487, 488, 489, 494, 495, 496], "602": [92, 496], "gradual": [92, 99, 478, 479], "million": [92, 119, 382, 456], "sale": [92, 486, 489], "past": [92, 99, 114, 131, 133, 196, 207, 230, 261, 270, 308, 311, 314, 329, 361, 364, 381, 422, 439, 464, 466, 476, 488, 489, 491, 492, 495, 496], "confer": [92, 359, 391, 469, 478, 482], "reveal": [92, 105, 108, 196, 251, 401, 467, 483, 489], "compani": [92, 357, 476, 482, 483, 488], "mailman": [92, 479, 481, 488, 496], "zope": [92, 441, 478, 479, 489], "googl": [92, 95, 96, 113, 120, 418, 434, 482, 483, 484, 490, 495], "yahoo": [92, 197, 482, 483], "lucasfilm": [92, 95], "ltd": [92, 95, 357, 441], "concis": [92, 99, 107, 111, 180, 282, 307, 356, 443, 455, 456, 457, 477, 481, 488, 489, 493], "rational": [92, 99, 224, 227, 239, 249, 308, 343, 344, 348, 353, 373, 381, 417, 443, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 489, 491, 492, 493, 495], "publicli": [92, 138, 441, 477], "frown": [92, 465], "stroke": [92, 119, 479], "disrupt": [92, 144], "student": [92, 118, 125, 188, 240, 359, 363, 399, 401, 455, 476, 488, 489], "importantli": [92, 112, 281, 405, 447], "skill": [92, 97, 399, 461], "decomposit": [92, 114, 402], "unnatur": 92, "master": [92, 116, 119, 202, 207, 307, 308, 310, 314, 324, 334, 384, 385, 388, 389, 391, 399, 483], "slow": [92, 104, 114, 117, 137, 138, 160, 173, 197, 249, 261, 273, 276, 284, 298, 345, 354, 360, 377, 399, 401, 413, 437, 438, 454, 457, 477, 478, 480, 481, 483, 488, 496], "pace": [92, 359, 478, 483], "balanc": [92, 116, 118, 173, 250, 357, 491], "gain": [92, 96, 114, 157, 173, 180, 265, 273, 314, 368, 410, 447, 449, 480, 481, 482, 483, 484, 486, 489, 490, 491, 492, 493, 494, 495], "satisfact": [92, 357], "realist": [92, 96, 107, 364, 404, 426, 439, 481, 482], "teach": [92, 244, 356, 479, 495], "pygam": 92, "__dir__": [92, 106, 225, 239, 270, 404, 443, 483, 491, 494], "__format__": [92, 196, 225, 239, 274, 361, 404, 443, 450, 483, 484, 488, 490, 491, 494], "__reduce__": [92, 225, 314, 404, 482, 495], "__reduce_ex__": [92, 106, 314, 404], "__reversed__": [92, 99, 173, 174, 225, 239, 404, 443, 493], "__sizeof__": [92, 368, 404, 483], "__subclasshook__": [92, 127, 174], "__": [92, 97, 114, 304, 377, 450], "emac": [92, 98, 104, 119, 168, 190, 286, 346, 450, 483], "happi": [92, 106, 138, 480, 495], "educ": [92, 265, 276, 399], "edu": [92, 107, 410, 441, 479, 480], "ship": [93, 99, 138, 144, 197, 268, 289, 384, 403, 424, 436, 468, 474, 476, 477, 480, 484, 486, 489, 491, 492, 496], "tcl_librari": 93, "tk_librari": 93, "sam": [93, 441, 477, 488], "tclsam_init": 93, "tkappinit": 93, "libtclsam": 93, "libtksam": 93, "restructur": [93, 97, 117, 322, 477, 478, 483], "xtaddinput": 93, "mainloop": [93, 117, 261, 384, 391, 399], "heard": [93, 455], "focu": [93, 117, 196, 202, 222, 261, 373, 384, 391, 399, 409, 466, 484, 490, 493], "takefocu": [93, 391], "school": [95, 199, 359, 363, 480], "colleg": 95, "profession": [95, 359, 454, 467, 476, 486], "nasa": 95, "hewlett": [95, 477], "packard": [95, 477], "compaq": 95, "came": [95, 107, 114, 207, 216, 265, 298, 453, 458, 478, 479, 480, 481, 482], "deliber": [95, 97, 99, 131, 307, 320, 349, 360, 400, 403, 441, 470, 491], "hurt": [95, 481], "mathmodul": 96, "sl": [96, 299], "builtin_module_nam": [96, 265, 368, 465], "chmod": [96, 114, 155, 164, 308, 311, 347, 358, 373, 453, 475, 487, 490], "scriptfil": 96, "755": [96, 114], "alex": [96, 480, 483, 484, 487, 488, 492, 493, 495, 496], "rezinski": 96, "ncurs": [96, 104, 190, 477, 478, 481, 487, 495], "sysv": [96, 108, 477, 478], "colour": [96, 104, 116, 133, 477], "mous": [96, 104, 190, 364, 386, 391, 399, 477, 483], "os": [96, 273, 353, 477, 494], "smalltalk": [96, 107, 173, 403, 455, 478], "delight": 96, "main_log": 96, "tractabl": 96, "ters": [96, 318, 399, 448, 469, 476], "surprisingli": [96, 401], "pleasant": [96, 459, 477, 478, 482], "fun": [96, 180, 240, 399, 401, 403, 488, 493], "flaw": [96, 99, 100, 404, 479, 488, 489], "self_test": 96, "epydoc": 96, "thread_task": 96, "sequenti": [96, 114, 117, 137, 176, 232, 249, 273, 298, 314, 323, 360, 377, 404, 443, 467], "001": [96, 196, 239, 276, 286, 323, 381, 403, 450, 459], "current_thread": [96, 298, 354, 380, 487], "130283832797456": 96, "130283824404752": 96, "130283816012048": 96, "130283807619344": 96, "130283799226640": 96, "pvm": 96, "l2": [96, 171, 391], "d1": [96, 484, 496], "mutex": [96, 126, 136, 150, 356, 368], "hindranc": 96, "deploy": [96, 113, 114, 308, 440, 476], "multiprocessor": [96, 299, 318], "cpu": [96, 117, 119, 133, 137, 138, 142, 151, 171, 177, 179, 249, 250, 277, 285, 298, 308, 337, 353, 360, 363, 373, 381, 382, 397, 424, 471, 480, 487, 490, 491, 492, 494, 495, 496], "insist": [96, 324, 384], "stein": [96, 477], "adam": [96, 483, 484, 487, 489, 490, 493, 494, 495, 496], "olsen": [96, 483, 484], "safethread": 96, "exhibit": [96, 261, 273, 308, 360, 455], "sharp": [96, 171], "compens": [96, 323, 493], "creativ": [96, 249, 352], "judici": [96, 194, 483], "tremend": [96, 456], "3rd": [96, 334, 349, 401, 461, 490], "rate": [96, 128, 154, 250, 304, 310, 323, 359, 365, 411, 416, 493], "unlink": [96, 227, 298, 299, 308, 311, 343, 375, 377, 391, 414, 425, 426, 490], "rmdir": [96, 155, 308, 311, 377, 490], "makedir": [96, 308, 311, 492, 494], "removedir": [96, 308], "old_path": 96, "new_path": 96, "ftruncat": [96, 308, 492], "copyfil": [96, 155, 347, 466, 484, 491, 495], "ntf": 96, "hf": 96, "copy2": [96, 347, 489, 490, 492, 495], "hhl": 96, "homogen": [96, 360, 363, 423, 457, 467], "osx": [96, 189, 491, 494], "ironpython": [96, 99, 106, 318, 449, 483], "pyseri": 96, "mitch": 96, "chapman": [96, 481, 495], "selm": 96, "34a04430": 96, "cf9": 96, "ohioe": 96, "paul": [96, 329, 476, 477, 478, 479, 480, 482, 483, 484, 488, 490, 491, 492, 494, 495, 496], "boddi": [96, 476], "webprogram": 96, "cameron": [96, 160], "laird": 96, "20210224183619": 96, "phaseit": 96, "claird": 96, "web_python": 96, "josephin": 96, "mi": [96, 162, 261, 482], "req": [96, 120, 357, 404, 410, 489], "urlopen": [96, 120, 179, 182, 240, 257, 322, 408, 409, 410, 466, 482, 483, 484, 489, 490, 491, 492], "hdr": [96, 303, 410], "urlencod": [96, 120, 164, 256, 284, 409, 410, 489, 492], "steel": 96, "2c": [96, 384], "sender": [96, 114, 214, 217, 222, 286, 351], "fromaddr": [96, 114, 283, 284, 351, 357], "toaddr": [96, 114, 283, 284, 351], "localhost": [96, 114, 117, 120, 152, 214, 256, 259, 261, 283, 284, 298, 320, 328, 344, 351, 354, 357, 374, 410, 434, 435, 466], "sendmail": [96, 114, 116, 215, 222, 334, 351, 466, 489, 492], "sbin": [96, 189, 334], "einprogress": [96, 226, 227], "progress": [96, 116, 164, 207, 226, 237, 246, 250, 298, 304, 308, 346, 356, 357, 373, 390, 391, 414, 415, 456, 476, 477, 479, 484], "connect_ex": [96, 353, 477], "eisconn": [96, 226], "twist": [96, 405, 441], "disk": [96, 99, 107, 113, 119, 182, 197, 208, 214, 222, 227, 233, 248, 250, 257, 261, 273, 280, 282, 284, 286, 293, 296, 299, 303, 308, 310, 313, 314, 337, 342, 345, 347, 356, 364, 368, 373, 375, 397, 420, 428, 437, 443, 461, 480, 482, 483, 485, 488, 490], "lightweight": [96, 173, 230, 240, 277, 356, 396, 414, 424, 476, 477, 482, 483, 492, 493], "databaseprogram": 96, "randrang": [96, 333, 466, 481, 487, 489], "uniform": [96, 120, 146, 333, 409, 413, 434, 465, 489], "normalvari": [96, 333], "sdev": 96, "gaussian": [96, 333, 489], "shuffl": [96, 333, 334, 488, 489, 496], "permut": [96, 107, 276, 333, 439, 450, 477, 483, 486, 495], "idle3": 97, "pythonwin": [97, 189, 476, 477], "cool": 97, "activepython": [97, 476], "eric": [97, 104, 188, 190, 311, 339, 428, 457, 477, 478, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "pyqt": [97, 474], "scintilla": 97, "trepan3k": 97, "wing": 97, "komodo": 97, "pycharm": [97, 493], "pylint": 97, "pyflak": 97, "sooner": [97, 189, 426, 483], "mypi": [97, 401, 443, 488, 492, 493], "pyre": 97, "pytyp": [97, 493], "pyinstal": [97, 298, 474], "pyoxid": 97, "py2app": [97, 474], "py2ex": [97, 298], "superfici": [97, 456], "clutter": [97, 114, 489], "defeat": [97, 116, 415, 443], "everywher": [97, 117, 377], "mod": [97, 114, 133, 239, 265, 294, 306, 395, 436, 446, 451, 483, 495], "linter": [97, 133, 401], "dateutil": [97, 196], "gordon": [97, 117, 477, 480], "mcmillan": [97, 117, 480], "2nd": [97, 276, 334, 384], "1st": [97, 196, 276], "gone": [97, 99, 101, 111, 120, 255, 404, 477, 478, 480, 483, 485, 489, 495], "bite": [97, 116, 307, 405], "neophyt": 97, "memoiz": [97, 240, 478, 493], "_cach": [97, 298, 478], "tast": 97, "3c": [97, 384], "somevar": 97, "wrote": [97, 107, 354, 441, 477, 479, 481, 491], "factor": [97, 119, 154, 174, 207, 249, 276, 307, 329, 360, 401, 403, 445, 446, 456, 479, 484, 490, 494, 496], "mistakenli": [97, 491], "a_list": [97, 396], "some_tupl": 97, "some_int": 97, "se": [97, 257, 374, 384], "func1": [97, 401], "99": [97, 104, 117, 160, 189, 196, 199, 276, 281, 283, 334, 359, 360, 381, 481, 484, 485, 489], "100": [97, 104, 114, 119, 120, 128, 137, 138, 148, 160, 168, 194, 196, 199, 203, 206, 215, 222, 228, 239, 255, 259, 276, 281, 290, 298, 299, 310, 333, 344, 353, 359, 360, 361, 373, 381, 382, 391, 399, 403, 410, 420, 422, 434, 442, 445, 456, 459, 461, 464, 465, 466, 467, 477, 480, 482, 483, 484, 487, 488, 489, 491, 492, 495], "clearest": [97, 480], "changeabl": 97, "func2": 97, "func3": 97, "setattr": [97, 99, 105, 131, 194, 239, 265, 307, 417, 455, 465, 477], "func4": 97, "linear": [97, 154, 160, 174, 182, 203, 246, 250, 359, 360, 365, 399, 455, 469, 480, 491, 495], "10e6": 97, "inc": [97, 357, 423, 441, 477, 483], "dec": [97, 98, 107, 196, 235, 237, 466, 479, 480], "deepcopi": [97, 173, 184, 194, 334, 405, 439, 484, 493, 494], "newdict": 97, "olddict": 97, "new_l": 97, "0x16d07cc": 97, "arguabl": [97, 357], "benefici": [97, 114, 441, 492], "gave": [97, 119, 403, 484, 489], "cat": [97, 106, 114, 116, 173, 244, 302, 364, 456, 466, 468, 489, 492], "porch": 97, "neighbour": 97, "on_tru": 97, "on_fals": 97, "ulf": 97, "bartelt": 97, "prime": [97, 179, 207, 222, 239, 276, 298, 360, 368, 381, 456, 466, 489, 493, 495], "fibonacci": [97, 240, 456, 464, 465, 488], "mandelbrot": 97, "ru": [97, 232, 480], "ro": [97, 356], "iu": [97, 480], "sx": 97, "yc": 97, "xc": [97, 368], "chr": [97, 119, 239, 254, 329, 402, 443, 465, 482, 484], "80": [97, 110, 117, 148, 152, 160, 168, 171, 180, 222, 256, 257, 261, 276, 322, 323, 347, 353, 354, 359, 399, 403, 409, 410, 467, 481, 488, 489, 492, 493], "___": 97, "______": 97, "__________": 97, "_________________": 97, "axi": [97, 167, 290, 391, 456, 487], "____________________________": 97, "kid": 97, "div": [97, 133, 199, 254, 427, 446], "0o10": [97, 239], "0xa5": 97, "165": [97, 282, 359], "0xb2": 97, "178": 97, "ago": [97, 99, 479], "190": [97, 359, 479], "144": [97, 240, 276, 456, 464, 465, 495], "0144": 97, "0x144": 97, "significantli": [97, 111, 145, 179, 182, 273, 308, 357, 426, 443, 478, 480, 481, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496], "rm": [97, 101, 154, 311, 346], "rf": [97, 226, 346, 450], "eras": [97, 104, 114, 190, 360, 374, 461], "09": [97, 114, 167, 223, 282, 290, 347, 357, 463], "oct": [97, 107, 114, 121, 196, 225, 237, 239, 357, 360, 361, 368, 382, 443, 465, 479, 483, 485], "fanci": [97, 104, 114, 456, 461, 480, 484], "04d": [97, 240], "3f": [97, 173, 461, 489, 495], "sio": 97, "yello": 97, "tounicod": [97, 132, 171], "paren": [97, 123, 133, 188, 261, 446, 482], "get_input": 97, "do_foo": [97, 168], "do_bar": [97, 168], "foo_inst": 97, "do_": [97, 168, 259], "opnam": [97, 204, 377, 491], "myfunc": [97, 114, 204, 334, 435], "fname": [97, 119, 182, 283, 397, 491], "rstrip": [97, 145, 148, 149, 201, 261, 299, 360, 466, 480], "workaround": [97, 194, 207, 312, 357, 360, 405, 417, 437, 450, 464, 488, 490, 495], "tough": 97, "dive": 97, "focus": [97, 112, 120, 482, 488, 489, 491], "hot": [97, 261, 323, 488], "spot": [97, 310, 379], "benchmark": [97, 240, 323, 470, 477, 478, 480, 481, 482, 484, 485, 486, 488, 490, 491, 492, 495, 496], "sprinkl": [97, 449], "outweigh": 97, "detriment": 97, "confid": [97, 121, 164, 333], "devot": [97, 116, 473], "quadrat": [97, 174, 203, 225, 329, 360, 424, 484, 487], "accumul": [97, 99, 104, 107, 131, 199, 240, 276, 307, 314, 323, 333, 346, 395, 403, 456, 459, 478, 489, 490, 495], "my_str": 97, "my_bytes_object": 97, "penultim": 97, "activest": [97, 115, 121, 469, 474, 477, 489], "52560": 97, "mylist": [97, 194, 336, 489], "variat": [97, 105, 106, 116, 173, 196, 207, 286, 308, 320, 357, 364, 369, 443, 465, 476, 482], "keep_funct": 97, "keep_condit": 97, "fastest": [97, 99, 248, 298, 334, 382, 399, 439, 466, 483, 489, 495], "con": [97, 356], "lisp_list": 97, "car": [97, 359], "cdr": 97, "replic": [97, 107, 222, 298, 476, 481, 484], "suffic": [97, 239, 310, 403, 459], "exemplar": 97, "randal": [97, 118], "schwartz": [97, 118, 483], "metric": [97, 387], "isort": 97, "list1": 97, "list2": 97, "refin": [97, 494], "mboxmailbox": 97, "maildirmailbox": 97, "outlookmailbox": 97, "mere": [97, 98, 99, 182, 196, 207, 239, 299, 307, 348, 364, 368, 399, 441, 442, 485], "class1": [97, 404, 405, 479], "class2": [97, 404, 405, 479], "upperout": 97, "outfil": [97, 131, 153, 277, 307, 316, 395, 467, 486, 489], "_outfil": 97, "trickier": [97, 307], "basealia": 97, "getcount": [97, 306, 496], "rebind": [97, 241, 451, 455, 481], "tightli": [97, 121, 445, 449], "cout": 97, "mangl": [97, 210, 239, 336, 445, 450, 451, 455, 491], "_classname__spam": [97, 455], "privaci": [97, 357, 413], "bother": [97, 104, 114, 119, 298, 478, 479], "children": [97, 113, 133, 144, 250, 282, 298, 308, 311, 327, 329, 337, 377, 384, 391, 399, 403, 404, 405, 425, 426, 427, 428, 437, 477, 484, 494], "vanish": [97, 171, 250, 401], "inconveni": [97, 257, 270, 405, 428], "patholog": [97, 459], "13901272": 97, "13891296": 97, "inadvis": 97, "500": [97, 114, 120, 168, 196, 199, 228, 237, 255, 303, 359, 360, 413, 422, 465, 467, 480, 482, 487], "thon": [97, 464], "_sentinel": 97, "firstofmonthd": 97, "namedint": 97, "xlat": 97, "titlestr": [97, 399], "isalnum": [97, 191, 334, 360], "2012": [97, 104, 119, 237, 490, 496], "blog": [97, 405, 482], "rock": [97, 119, 131], "princip": [97, 133, 257, 357, 360, 441, 467, 486, 489], "cached_properti": [97, 105, 240, 360, 495], "lru_cach": [97, 173, 234, 240, 489, 490, 492, 495], "maxsiz": [97, 105, 123, 146, 173, 234, 239, 240, 276, 298, 318, 331, 360, 368, 377, 384, 443, 465, 485, 489, 495], "weather": 97, "govern": [97, 99, 114, 194, 199, 208, 409, 434, 441, 489], "websit": [97, 120, 197, 249, 410, 441, 449, 474, 489], "station_id": 97, "_station_id": 97, "current_temperatur": 97, "hourli": 97, "longitud": [97, 361], "latitud": [97, 361], "station": 97, "historic_rainfal": 97, "mm": [97, 121, 196, 262, 293, 360, 381, 409], "rainfal": 97, "change_st": 97, "cm": [97, 151, 182, 377, 403], "xyz": [97, 131, 282, 283, 360, 403, 489], "cfile": [97, 326], "bar_var": 97, "foo_var": 97, "jim": [97, 107, 114, 323, 449, 477, 481, 483, 489, 493], "roskind": [97, 323], "matthia": [97, 484, 487, 490, 493, 494, 495], "urlich": 97, "modnam": [97, 455, 465, 482, 493], "proof": [97, 107, 217, 298, 477, 495], "paradox": [97, 480], "0x7352a0": 97, "0x4198d0": 97, "yournam": 98, "recognis": [98, 188, 227, 283, 317, 346, 356, 404, 436, 443], "v3": [98, 353], "d48eceb": 98, "19": [98, 101, 107, 108, 113, 114, 116, 119, 121, 151, 163, 173, 189, 196, 199, 207, 223, 237, 250, 276, 308, 357, 359, 360, 361, 399, 438, 480, 481, 482, 483, 484, 487, 489, 490, 495, 496], "2017": [98, 357, 450], "06": [98, 114, 196, 259, 282, 347, 464, 482, 493], "04": [98, 101, 104, 196, 361, 363, 381, 440, 463, 482, 484, 487, 493, 494], "45": [98, 107, 159, 173, 180, 199, 282, 298, 333, 353, 399, 401, 480, 481, 482, 487, 495, 496], "1900": [98, 196, 381, 450, 483, 489], "strongest": [98, 186, 484], "hellohellohello": 98, "pathext": [98, 347, 414, 476, 491], "suddenli": 98, "puzzl": [98, 108, 482], "misconfigur": [98, 113, 261], "viru": 98, "scanner": [98, 334, 372, 393, 491], "magnitud": [98, 196, 199, 239, 277, 290, 360, 361, 424, 477, 488, 490], "mcafe": 98, "offend": [98, 444, 458, 478], "pyinit_foo": 98, "__declspec": 98, "app": [98, 114, 117, 261, 284, 368, 384, 414, 422, 474, 476, 483, 484, 489], "undocu": [98, 168, 197, 251, 282, 289, 312, 377, 403, 437, 487, 488, 490, 491, 492, 493, 494, 496], "nn": 98, "33": [98, 108, 160, 173, 189, 191, 276, 298, 299, 334, 368, 404, 459, 465, 466, 479, 480, 481, 489, 495, 496], "greatli": [98, 173, 364, 417, 466, 477, 478, 479, 480, 483, 484, 485, 490, 492, 495], "loadlibraryex": [98, 189, 495], "getprocaddress": 98, "grungi": 98, "leo": [98, 162], "initleo": 98, "initleoc": 98, "initmyappc": 98, "myapp": [98, 114, 180, 249, 282, 384, 436, 492], "pythonnn": 98, "standpoint": 98, "_resultobj": 98, "mult": [98, 133, 446], "typemap": [98, 284], "newbi": [98, 482, 484], "wxpythonwindow": 98, "_any_": 98, "radio": [98, 296, 390], "batch": [98, 113, 116, 138, 276, 314, 364, 454, 467, 476, 492], "kbhit": [98, 297], "getch": [98, 104, 190, 297], "curli": [99, 119, 296, 361, 402, 413, 445, 450, 457, 483, 484, 493], "complement": [99, 108, 116, 334, 360, 399, 443, 487, 490, 494, 496], "duck": [99, 401, 483, 491], "subtli": [99, 104, 117, 188, 210, 219, 447], "__aenter__": [99, 182, 204, 403, 404, 405, 442, 443], "__aexit__": [99, 151, 182, 204, 403, 404, 405, 442, 443], "bdfl": 99, "benevol": [99, 477], "bytesio": [99, 210, 221, 248, 249, 273, 286, 314, 360, 375, 393, 436, 440, 483, 485, 489, 492], "gzipfil": [99, 248, 373, 484, 486, 487, 489, 492, 496], "argument1": 99, "argument2": 99, "argumentn": 99, "1j": [99, 167, 239, 277, 404], "__exit__": [99, 114, 182, 204, 273, 298, 348, 360, 373, 377, 403, 404, 420, 442, 443, 482, 483, 484, 493], "multidimension": [99, 360], "sugar": [99, 114, 182, 239, 258, 265, 356, 456, 485], "dictview": [99, 360, 495], "quack": [99, 114, 483], "emphas": [99, 107, 207, 299, 388, 442], "emploi": [99, 164, 298, 308, 427, 447, 490], "eafp": [99, 308], "forgiv": [99, 477], "character": [99, 368], "lbyl": 99, "mediat": 99, "synonym": [99, 104, 114, 119, 126, 190, 239, 307, 314, 358, 384, 401, 425, 450, 483], "75": [99, 104, 114, 203, 207, 298, 359, 399, 464, 466, 480, 481, 483, 484, 493, 494, 495, 496], "downward": 99, "sum_two_numb": [99, 133], "_featur": [99, 124, 239], "8192": [99, 117, 152, 237, 239, 256, 422], "81": [99, 276, 298, 333, 359, 393, 457, 461, 464, 466, 495], "singledispatch": [99, 240, 488, 491, 494], "443": [99, 148, 256, 357, 491], "parameter": [99, 190, 207, 356, 360, 400, 401, 443, 487, 496], "483": [99, 401, 492], "afford": [99, 477], "computation": 99, "intens": [99, 137, 190, 285, 308, 490], "suffer": [99, 403, 404, 459, 478, 479, 480], "overcom": [99, 380, 489], "costlier": 99, "unequ": [99, 199, 311, 360, 443, 445, 481, 482, 485, 490], "blurri": 99, "shorter": [99, 116, 216, 239, 249, 276, 307, 315, 341, 363, 445, 454, 457, 461, 477, 478, 481, 483, 484, 489], "collat": [99, 281, 356, 488], "strxfrm": [99, 118, 281], "nsmallest": [99, 239, 240, 250, 481, 482], "nlargest": [99, 239, 240, 250, 481, 482], "groupbi": [99, 107, 240, 276, 306, 481, 486], "attrgett": [99, 107, 118, 160, 306, 481, 482, 483, 489, 492], "itemgett": [99, 118, 160, 276, 306, 481, 482, 492, 495], "methodcal": [99, 118, 306, 483, 492], "leap": [99, 113, 116, 163, 196, 381], "race": [99, 199, 265, 308, 342, 353, 375, 417, 489, 490, 496], "akin": [99, 267, 360, 447], "04x": [99, 119], "load_modul": [99, 264, 265, 438, 447, 480, 487, 491, 493], "new_local": 99, "cp1252": [99, 171, 463], "getencod": [99, 104, 119, 171, 188, 190, 239, 273, 281, 431, 476, 488], "metapathfind": [99, 265, 266, 368, 487, 488, 490, 491, 494], "organiz": [99, 357, 443], "localtim": [99, 113, 196, 217, 223, 262, 282, 381, 478, 479, 490], "float_info": [99, 290, 360, 465, 483], "1024": [99, 119, 188, 199, 229, 249, 283, 324, 353, 354, 357, 360, 397, 450, 466], "max_exp": [99, 368], "islic": [99, 107, 173, 239, 276, 482, 494], "innermost": [99, 127, 182, 207, 329, 368, 401, 445, 455, 456, 491], "versatil": [99, 455, 464, 467], "position": [99, 133, 404, 491, 495], "posonly1": 99, "posonly2": 99, "positional_or_keyword": [99, 270], "kw_only1": 99, "kw_only2": 99, "pathentryfind": [99, 265, 438, 447, 487, 488, 490, 491, 494], "fspath": [99, 248, 308, 311, 493], "fsencod": [99, 308, 311, 368, 377, 489, 493], "decis": [99, 114, 117, 124, 170, 270, 368, 391, 442, 451, 465, 477, 481, 482, 484, 489, 490], "consensu": [99, 477], "dissent": [99, 477], "opinion": [99, 103, 477, 482], "gratuit": 99, "uncov": [99, 494], "resort": [99, 113, 197, 281, 282, 375, 479], "evolv": [99, 112, 272, 283, 447, 455, 457], "411": [99, 120, 255, 282, 368, 397], "nicknam": [99, 180, 469], "coin": [99, 333], "distant": [99, 461], "unfamiliar": [99, 242, 282, 307, 482, 483], "cleaner": [99, 360, 477, 486, 487, 490, 492], "getrefcount": [99, 368, 465], "richer": [99, 493], "abracadabra": [99, 105, 173, 298, 360, 361, 457, 481], "variable_nam": 99, "analyz": [99, 124, 188, 198, 294, 314, 315, 334, 346, 357, 397, 401, 441, 450, 482, 483, 484, 489], "10ffff": [99, 171, 443, 490], "recreat": [99, 106, 171, 313, 353, 409, 414, 417, 443, 459, 490, 494], "datastream": 99, "quotat": [99, 171, 364, 461, 464, 483], "apostroph": [99, 360, 486], "unescap": [99, 116, 203, 252, 253, 303, 334, 409, 432, 450, 491, 496], "remove_gray_shad": 99, "refactor": [99, 107, 123, 133, 403, 404, 405, 481, 488, 491, 492, 493, 494], "get_type_hint": [99, 401, 488, 494, 496], "macintosh": [99, 171, 450, 477, 480], "splitlin": [99, 168, 203, 214, 222, 360, 379, 396, 483, 489, 491], "interf": [99, 199, 298, 382, 445, 491], "zen": [99, 125], "philosophi": [99, 199, 210, 466, 485], "larri": [100, 359, 484, 486, 487, 490, 491, 495, 496], "hast": [100, 484, 486, 487, 490, 491, 495, 496], "get_annot": [100, 270, 487], "viabl": 100, "inadvert": [100, 121, 182, 270, 483, 491, 492], "ann": 100, "exot": [100, 112, 277, 408, 479], "malform": [100, 133, 171, 199, 213, 239, 256, 273, 286, 309, 361, 481, 483, 489], "nutshel": 100, "update_wrapp": [100, 105, 240, 270, 482, 491], "unwrap": [100, 270, 357, 409, 491], "__wrapped__": [100, 105, 239, 240, 270, 487, 488, 489, 491, 492], "__globals__": [100, 270, 443, 485, 487], "type_check": [100, 265, 307, 401, 493], "fn": [100, 114, 119, 179, 214, 282, 414, 422, 436, 437, 485, 492, 495], "paragraph": [100, 113, 151, 211, 261, 277, 307, 308, 311, 357, 360, 379, 428, 435, 441, 443, 456, 467, 477, 480], "tshepang": 101, "lekhonkhob": 101, "fulfil": [101, 120, 255, 259, 357, 478, 480, 489], "explor": [101, 113, 118, 120, 180, 204, 254, 261, 308, 399, 403, 414, 428, 443, 462, 476, 483, 488, 489], "devguid": [101, 108, 491], "ctypes_configur": 101, "dotview": 101, "lib_pypi": 101, "drwxr": [101, 237], "xr": [101, 237, 347, 489], "wena": 101, "4096": [101, 117, 119, 126, 134, 173, 186, 237, 239, 249, 353, 360, 380, 489], "feb": [101, 107, 196, 479], "51": [101, 114, 333, 399, 457, 483, 487], "rwxr": [101, 347], "535": 101, "rw": [101, 106, 114, 237, 310, 347, 356, 364, 489, 492, 493, 494], "741": 101, "cftuvsux": 101, "cp": [101, 105, 171, 307, 308, 484, 492], "shorten": [101, 197, 336, 379, 487, 489, 490, 491, 496], "willing": [101, 307, 357, 459, 496], "helpfulli": 101, "store_tru": [101, 131, 203, 242, 307, 324, 414, 484, 489], "brought": [101, 117, 239, 314, 480], "vv": [101, 131, 470, 486, 493], "vvv": [101, 131, 410], "vvvv": 101, "nonetyp": [101, 181, 207, 240, 299, 334, 400, 401, 487, 488], "surfac": [101, 108, 399], "add_mutually_exclusive_group": [101, 131], "opposit": [101, 107, 116, 119, 173, 223, 334, 399, 443, 477, 483, 485], "vq": 101, "conclud": [101, 107, 113, 116], "babel": [101, 244], "pybabel": [101, 244], "thorough": [101, 334, 353, 489], "overwhelm": [101, 307], "py3c": 103, "kuchl": [104, 107, 116, 119, 190, 477, 478, 479, 480, 481, 482, 483, 484, 491], "raymond": [104, 105, 107, 118, 190, 363, 442, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "paint": [104, 190, 399, 479], "vt100": [104, 190], "nich": 104, "checkbox": [104, 164, 296, 476], "urwid": 104, "AT": [104, 392], "proprietari": [104, 359], "unicurs": 104, "addstr": [104, 190], "mvaddstr": 104, "mvwaddstr": 104, "initscr": [104, 190], "stdscr": [104, 190, 483], "noecho": [104, 190], "instantli": [104, 308, 399], "cbreak": [104, 190, 398], "multibyt": [104, 190, 222, 360, 490], "key_left": [104, 190], "keypad": [104, 190], "nocbreak": [104, 190], "endwin": [104, 190], "mess": [104, 131, 307, 455, 461, 479], "buggi": [104, 117, 477, 479, 490, 491], "uncaught": [104, 165, 356, 368, 380, 445, 478, 495], "refresh": [104, 173, 190, 303, 384, 391, 482, 496], "getkei": [104, 190], "funni": [104, 154], "rectangular": [104, 167, 399], "redraw": 104, "newwin": [104, 190], "begin_x": [104, 190], "begin_i": [104, 190], "height": [104, 190, 194, 261, 296, 308, 334, 359, 384, 391, 399, 401, 464, 482], "40": [104, 105, 107, 108, 113, 168, 173, 196, 207, 261, 282, 323, 333, 334, 336, 347, 359, 381, 390, 399, 439, 456, 466, 467, 487, 491, 494, 495, 496], "col": [104, 190, 261, 361, 492], "baud": 104, "flurri": [104, 477], "paus": [104, 107, 142, 145, 149, 190, 310, 312, 348, 445, 481, 482], "redrawn": [104, 190, 399], "subsect": [104, 116, 121, 132, 138, 149, 261, 360, 445, 456], "newpad": [104, 190], "addch": [104, 190], "ord": [104, 119, 131, 133, 189, 191, 239, 356, 360, 404, 443, 445, 450, 465, 477, 483], "26": [104, 106, 113, 121, 163, 196, 250, 274, 298, 333, 347, 357, 381, 382, 393, 409, 438, 441, 480, 481, 484, 489, 493, 495, 496], "ordinari": [104, 113, 116, 132, 164, 182, 207, 239, 248, 315, 334, 345, 348, 356, 359, 372, 373, 404, 417, 428, 447, 450, 451, 455, 477, 487, 490], "annoi": [104, 164, 188, 250, 282, 404, 477, 483], "flicker": [104, 190], "noutrefresh": [104, 190], "doupdat": [104, 190, 192], "twisti": 104, "maze": 104, "waddstr": [104, 490], "hide": [104, 108, 110, 119, 188, 192, 207, 208, 230, 261, 273, 307, 364, 377, 382, 391, 399, 401, 415, 442, 455, 464, 465, 476, 480, 484, 489, 496], "boldfac": [104, 483], "bytestr": [104, 174, 308, 353, 360, 401, 422, 428, 439, 483], "acs_plminu": [104, 190], "acs_ulcorn": [104, 190], "border": [104, 190, 384, 391, 409], "flash": [104, 190], "distract": [104, 307], "blink": [104, 190, 495, 496], "curs_set": [104, 190], "invis": [104, 171, 190, 192, 399, 484, 486], "leaveok": [104, 190], "video": [104, 190, 287, 290, 333, 469, 483], "viewer": [104, 261, 284, 399], "safest": [104, 189, 286], "a_blink": [104, 190], "a_bold": [104, 190, 483], "bright": 104, "bold": [104, 163, 190, 384, 387], "a_dim": [104, 190], "a_revers": [104, 190], "a_standout": [104, 190], "a_underlin": [104, 190], "xterm": [104, 190], "start_color": [104, 190], "has_color": [104, 190], "american": [104, 196], "canadian": [104, 171], "british": 104, "resign": 104, "misspel": [104, 105, 180, 404], "foreground": [104, 190, 261, 391, 467], "color_pair": [104, 190], "init_pair": [104, 190, 487], "wire": [104, 113, 171, 190, 282, 283, 284, 357, 362, 404, 434, 492], "black": [104, 106, 114, 119, 160, 173, 190, 225, 261, 333, 391, 399, 467, 480, 481, 487, 488, 491, 495], "green": [104, 106, 133, 173, 175, 190, 225, 254, 333, 359, 399, 417, 456, 464, 467, 480, 481, 486, 487, 489, 493], "magenta": [104, 106, 190, 467], "cyan": [104, 106, 190, 467], "color_black": [104, 190], "color_r": [104, 190], "color_whit": [104, 190], "alert": [104, 117, 254, 284, 357, 401, 415, 494], "rgb": [104, 106, 175, 190, 220, 263, 307, 384, 399, 464, 491], "purpl": [104, 106, 114, 225], "can_change_color": [104, 190], "lucki": [104, 189], "talent": 104, "key_up": [104, 190], "nodelai": [104, 190], "err": [104, 190, 227, 242, 284, 329, 364, 403, 434, 441, 458, 490], "halfdelai": [104, 190], "tenth": [104, 154, 190, 223], "key_ppag": [104, 190], "key_hom": [104, 190], "printdocu": 104, "getstr": [104, 190, 296, 483], "backspac": [104, 116, 190, 191, 261, 334, 450, 463], "keybind": [104, 190, 261, 335], "gather": [104, 110, 131, 136, 146, 149, 151, 190, 225, 239, 241, 308, 323, 353, 395, 403, 471, 488, 492, 494, 495], "editwin": 104, "struck": 104, "brows": [104, 120, 272, 328, 391, 456, 468, 469, 483], "acs_": 104, "lengthi": [104, 107, 116, 276, 315, 477, 478, 479, 480, 481, 489], "swear": 104, "pycon": [104, 115, 119, 357, 482], "2013": [104, 114, 119, 196, 309, 357, 441], "hetting": [105, 107, 118, 442, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "gentli": 105, "curiou": [105, 164], "objtyp": 105, "directorys": 105, "dirnam": [105, 237, 286, 308, 309, 311, 317, 377, 403, 471, 494], "song": 105, "game": [105, 108, 117, 131, 399, 454, 482, 483], "twenti": [105, 188], "chess": [105, 107, 119, 479, 480], "_age": 105, "basicconfig": [105, 113, 114, 137, 182, 282, 481, 489, 490, 495], "loggedageaccess": 105, "birthdai": [105, 466, 487], "mari": [105, 353, 456], "dave": [105, 118, 480, 481, 484, 489], "david": [105, 107, 108, 110, 119, 244, 441, 476, 477, 478, 479, 480, 481, 483, 484, 486, 488, 489, 490, 491, 492, 493, 495], "hardwir": [105, 182, 323], "__set_name__": [105, 194, 443, 493], "loggedaccess": 105, "public_nam": 105, "private_nam": 105, "_name": [105, 189, 194, 210, 219], "pete": 105, "peter": [105, 111, 125, 244, 333, 382, 477, 478, 479, 480, 481, 482, 483, 488, 490, 491, 492, 493, 496], "kate": 105, "catherin": 105, "some_class": 105, "descriptor_nam": 105, "notori": [105, 417], "abstractmethod": [105, 127, 240, 265, 266, 268, 304, 308, 344, 483, 490], "oneof": 105, "minvalu": 105, "maxvalu": 105, "minsiz": 105, "isupp": [105, 191, 276, 341, 360, 403], "wood": [105, 131], "metal": 105, "plastic": 105, "quantiti": [105, 199, 290, 308, 334, 357, 461, 464, 467, 480, 484, 489], "metl": 105, "deeper": [105, 120, 173, 180, 196, 206, 207, 322, 361, 368, 488], "everydai": [105, 239, 269, 403], "lastli": [105, 137, 445, 451], "find_name_in_mro": 105, "_pytype_lookup": [105, 487], "object_getattribut": 105, "cls_var": 105, "descr_get": 105, "bypass": [105, 171, 239, 240, 249, 308, 361, 368, 369, 404, 440, 443, 445, 447], "getattr_hook": 105, "slot_tp_getattr_hook": 105, "type_getattro": 105, "super_getattro": 105, "set_nam": [105, 138, 151, 495], "skeleton": 105, "conn": [105, 138, 152, 173, 179, 182, 256, 298, 314, 344, 350, 353, 357, 380, 482, 489, 492], "fetchon": [105, 314, 356, 482, 489], "commit": [105, 131, 296, 303, 320, 356, 364, 386, 446, 468, 482, 483, 484, 491, 493], "movi": [105, 160, 356, 488], "director": [105, 160, 410], "music": [105, 173], "artist": 105, "genr": 105, "entertain": [105, 164], "star": [105, 133, 173, 204, 373, 392, 428, 442, 446, 449, 451, 487, 488], "war": [105, 488], "georg": [105, 119, 276, 461, 482, 483, 484, 486, 487, 489, 490, 492, 493], "luca": [105, 249, 491, 492], "jaw": [105, 160], "1975": [105, 160, 277, 356, 359, 464, 495], "steven": [105, 478, 482, 484, 489, 491, 492, 493, 495], "spielberg": [105, 160], "countri": [105, 257, 281, 357, 360, 428, 481], "road": [105, 258], "denver": 105, "abram": 105, "excit": [105, 454, 477, 479], "prepackag": 105, "succinct": [105, 401, 466, 487], "fget": [105, 239, 400], "fset": [105, 239, 400], "fdel": [105, 239, 400], "getx": [105, 239], "__x": 105, "setx": [105, 239, 399, 476], "delx": [105, 239], "descrobject": 105, "prop": [105, 476], "grant": [105, 116, 309, 441, 477, 478, 482], "intervent": [105, 384, 440], "spreadsheet": [105, 188, 359, 466, 480], "b10": 105, "recalcul": [105, 127, 133, 282, 359, 440, 488], "recalc": 105, "_valu": [105, 210, 219], "seamlessli": 105, "classobject": [105, 488], "__func__": [105, 123, 270, 360, 443, 455, 483, 484], "__self__": [105, 270, 360, 443, 455, 483], "func_descr_get": 105, "funcobject": [105, 488], "0x00c45070": 105, "0x00b18c90": 105, "chart": [105, 119, 465], "median": [105, 333, 359, 466, 491], "conceptu": [105, 107, 113, 131, 154, 208, 210, 214, 219, 268, 333, 361, 401, 415, 447, 456, 487, 494], "erf": [105, 290, 484, 489, 494], "dataset": [105, 118, 180, 240, 250, 359, 481, 495], "9332": 105, "unexcit": 105, "pystaticmethod_typ": 105, "fromkei": [105, 173, 276, 360, 400, 480, 488, 489], "dict_fromkei": 105, "dictobject": [105, 108, 482], "pyclassmethod_typ": 105, "vehicl": 105, "id_numb": 105, "id_nubm": 105, "vye483814lqex": 105, "_dept": 105, "dept": [105, 455, 486, 489], "botani": 105, "watnei": 105, "pirat": 105, "mar": [105, 106, 107, 196, 449, 456, 479, 483], "48": [105, 108, 249, 359, 360, 397, 413, 487], "152": 105, "flyweight": 105, "35": [105, 107, 199, 239, 333, 359, 450, 480, 481, 482, 483, 489, 493, 495, 496], "m1": [105, 276, 363, 488], "pi": [105, 167, 189, 190, 199, 235, 290, 312, 333, 399, 428, 457, 459, 461, 466, 489, 490, 495], "100_000": [105, 359], "faith": 105, "_slotvalu": 105, "clsname": 105, "descr_new": 105, "member_get": 105, "member_set": 105, "member_delet": 105, "member_repr": 105, "mcl": [105, 397], "pytypereadi": 105, "add_method": 105, "slot_nam": 105, "rough": [105, 188, 216, 317, 477], "object_new": 105, "empty_slot": 105, "_pyobject_genericsetattrwithdict": 105, "0x7fb5d302f9d0": 105, "slot_valu": 105, "week": [106, 163, 196, 281, 381, 477, 495], "weekdai": [106, 163, 196, 225, 284, 381, 495], "mondai": [106, 163, 196, 225, 281, 284, 381], "tuesdai": [106, 163, 196, 225, 284, 466], "wednesdai": [106, 163, 196, 225], "thursdai": [106, 163, 196, 225], "fridai": [106, 163, 225], "saturdai": [106, 163, 196, 225], "sundai": [106, 163, 196, 225, 281, 284, 381, 484], "upper_cas": 106, "isoweekdai": [106, 196, 225], "from_dat": 106, "plot": [106, 481], "chore": [106, 477], "first_week_dai": 106, "weekend": 106, "96": [106, 111, 121, 274, 360, 397, 493, 494, 495, 496], "chores_for_ethan": 106, "dish": [106, 360], "show_chor": 106, "circl": [106, 168, 290, 399, 483], "alias_for_squar": 106, "ONE": [106, 119, 131, 225, 360, 402, 488], "unimport": [106, 225], "_generate_next_value_": [106, 225], "autonam": 106, "north": [106, 196, 391, 399, 484, 486], "south": [106, 171, 334, 391, 399, 483, 486], "east": [106, 196, 381, 391, 399, 402, 455, 481], "west": [106, 196, 381, 391, 399, 455, 486], "__members__": [106, 225, 479, 485], "mood": 106, "funki": [106, 180], "favorite_mood": 106, "_ignore_": [106, 225, 494], "enumnam": 106, "morecolor": 106, "pink": [106, 399], "some_behavior": 106, "sad": [106, 485], "test_enum": 106, "fruit": [106, 322, 443, 457], "tomato": [106, 356], "picklabl": [106, 179, 270, 298, 314, 492], "myenum": 106, "pickle_by_enum_nam": 106, "ant": [106, 162], "dog": [106, 116, 173, 334, 455, 489, 492], "somedata": [106, 249, 319], "newenumnam": 106, "chartreus": 106, "sea_green": 106, "rosemari": 106, "flagboundari": [106, 225, 488], "perm": [106, 237, 290, 450, 488, 494, 495], "rwx": [106, 347], "floatenum": 106, "_value_": [106, 225], "px": [106, 290], "km": [106, 359], "vx": 106, "vy": 106, "member_nam": [106, 225, 487], "_name_": [106, 225], "_missing_": [106, 225], "_order_": [106, 225], "sync": [106, 190, 197, 298, 308, 310, 345, 384, 490, 495], "enumclass": 106, "jupit": 106, "mercuri": [106, 489, 491], "neptun": 106, "saturn": 106, "uranu": 106, "venu": [106, 456], "radiu": [106, 168, 290, 356, 399], "surface_grav": 106, "compris": [106, 133, 303, 317, 364, 445, 450, 451, 483], "eject": [106, 225], "_convert_": 106, "some_enum_var": 106, "__getnewargs__": [106, 173, 314, 404, 480, 492], "renumb": [106, 262], "autonumb": 106, "swatch": 106, "panton": 106, "auburn": 106, "3497": 106, "1246": 106, "bleached_cor": 106, "grade": [106, 118, 160, 239, 359, 360, 399, 480], "grene": 106, "303e": 106, "4397e6": 106, "869e": 106, "0518e6": 106, "976e": 106, "37814e6": 106, "421e": 106, "3972e6": 106, "9e": 106, "27": [106, 121, 163, 196, 250, 272, 308, 334, 353, 357, 359, 382, 393, 450, 461, 464, 477, 480, 486, 487, 489, 490, 494, 495, 496], "1492e7": 106, "688e": 106, "0268e7": 106, "686e": 106, "5559e7": 106, "024e": 106, "4746e7": 106, "kilogram": 106, "meter": [106, 390], "gravit": [106, 399], "m3": [106, 381, 488], "kg": 106, "67300e": 106, "6378140": 106, "802652743337129": 106, "367": 106, "day_": 106, "day_0": 106, "day_1": [106, 281], "day_365": 106, "365": [106, 196, 357, 381], "day_366": 106, "subclaus": 107, "ocaml": 107, "haskel": [107, 276, 456, 477, 480], "puriti": [107, 409], "constraint": [107, 199, 225, 246, 272, 282, 314, 322, 360, 401, 409, 446, 447, 482, 483, 485, 488], "rigor": [107, 239], "aros": 107, "impract": 107, "enorm": [107, 462], "daili": [107, 466, 479], "proven": [107, 207, 399, 480], "wrongli": 107, "clearli": [107, 116, 131, 250, 270, 401, 403, 467, 477, 479, 482, 490, 494], "synthes": [107, 207, 401], "smallest": [107, 119, 132, 196, 199, 239, 250, 290, 333, 359, 360, 368, 377, 384, 397, 467, 480, 481, 482, 483], "jan": [107, 196, 357, 364, 420, 479, 484, 487, 488, 489, 492, 493, 494, 495, 496], "apr": [107, 470, 479, 482], "jun": [107, 237, 381, 479], "jul": [107, 237, 479, 489], "nov": [107, 196, 223, 237, 259, 357, 381, 479, 493], "itali": 107, "rome": 107, "franc": 107, "pari": [107, 116, 440, 464], "washington": [107, 262], "dc": [107, 276, 308, 428, 482], "listcomp": [107, 133, 446, 457], "genexp": [107, 446], "line_list": 107, "stripped_it": 107, "stripped_list": 107, "expr": [107, 133, 157, 356, 403, 445, 451, 477, 481, 485, 495, 496], "sequence1": [107, 477], "condition1": 107, "expr2": [107, 445, 477], "sequence2": [107, 477], "condition2": 107, "expr3": [107, 445], "sequence3": 107, "condition3": 107, "exprn": [107, 477], "sequencen": [107, 477], "conditionn": 107, "obj_tot": 107, "list_all_object": [107, 481], "expr1": [107, 445, 477], "seq1": [107, 306, 477], "doubtless": [107, 478, 479, 480], "weren": [107, 116, 133, 249, 478, 479, 480, 481, 482, 484], "generate_int": [107, 479, 480], "gen": [107, 270, 276, 445, 479, 480, 489, 492], "messier": [107, 116, 479, 480, 484], "test_gener": [107, 479, 480], "inord": [107, 479, 480], "queen": [107, 333, 334, 479, 480], "nxn": [107, 479, 480], "board": [107, 112, 190, 479, 480], "threaten": [107, 479, 480], "knight": [107, 119, 322, 441, 457, 461, 479, 480, 495], "rout": [107, 117, 120, 226, 400, 422, 467, 479, 480, 484, 491], "chessboard": [107, 479, 480], "cumul": [107, 232, 240, 290, 323, 333, 359, 395, 397, 470, 482, 489, 491, 492], "itera": 107, "iterb": 107, "sentenc": [107, 116, 240, 334, 379, 464, 479, 480, 483], "is_even": [107, 434], "verb": [107, 117, 308, 456], "10000": [107, 323, 348, 382, 399, 480, 490], "rand_list": 107, "769": 107, "7953": 107, "9828": 107, "6431": 107, "8442": 107, "9878": 107, "6213": 107, "2207": 107, "shortest": [107, 209, 239, 276, 459, 477, 482, 484, 485, 486, 489], "broad": [107, 307, 409, 479, 482, 490], "evenli": [107, 276, 333], "elem": [107, 173, 239, 240, 276, 360, 428, 457, 482, 484, 488, 489], "endlessli": [107, 276, 481], "tee": [107, 190, 276, 481], "ne": [107, 123, 306, 384], "starmap": [107, 239, 276, 298, 490], "rubi": [107, 359, 467], "filterfals": [107, 123, 239, 276, 359], "takewhil": [107, 276], "less_than_10": 107, "dropwhil": [107, 276], "aba": 107, "combinations_with_replac": [107, 173, 276, 333, 484, 486], "relax": [107, 196, 258, 489, 496], "key_func": 107, "city_list": 107, "decatur": 107, "huntsvil": 107, "selma": 107, "anchorag": 107, "ak": 107, "nome": 107, "flagstaff": 107, "az": 107, "phoenix": 107, "tucson": 107, "get_stat": [107, 241, 491], "city_st": 107, "kwarg1": [107, 482], "value1": [107, 180, 482, 496], "kwarg2": [107, 482], "value2": [107, 180, 482, 496], "server_log": [107, 482], "initial_valu": [107, 273], "abbc": 107, "mul": [107, 123, 154, 199, 276, 298, 306, 435], "clearer": [107, 207, 307, 360, 477, 478, 479, 480, 481, 483, 494], "floordiv": [107, 133, 306, 446], "not_": [107, 306], "and_": [107, 306], "or_": [107, 306], "eq": [107, 133, 194, 306, 401, 446], "lt": [107, 133, 306, 360, 399, 432, 446, 450, 478, 489, 494], "gt": [107, 133, 252, 253, 254, 306, 432, 446, 489, 490], "ge": [107, 306], "is_": [107, 306], "is_not": [107, 306], "stripped_lin": 107, "existing_fil": 107, "file_list": 107, "adder": 107, "print_assign": 107, "multiwai": 107, "overli": [107, 479], "disentangl": 107, "heck": 107, "essenc": [107, 150], "disagre": [107, 393, 410, 477], "draft": [107, 119, 164, 286, 311, 368, 425, 454, 477, 478, 479, 480, 481, 482, 483, 484, 493, 494], "ian": [107, 422, 488], "bick": [107, 422], "nick": [107, 111, 119, 339, 443, 479, 481, 482, 483, 484, 486, 489, 490, 491, 492, 493, 494], "coghlan": [107, 111, 119, 339, 481, 482, 483, 484, 486, 489, 490, 491, 492, 493, 494], "efford": 107, "jewett": [107, 481, 483], "mike": [107, 479, 481, 482, 483, 488], "krell": 107, "leandro": 107, "lameiro": 107, "jussi": 107, "salmela": 107, "collin": [107, 483, 484, 492], "winter": [107, 239, 483, 484], "blake": [107, 249], "winton": 107, "june": [107, 163, 423, 486, 494], "juli": [107, 163, 203, 441, 450, 479, 480, 484], "typo": [107, 164, 401, 404, 445, 479], "tutor": 107, "harold": [107, 361], "abelson": 107, "gerald": 107, "jai": [107, 478, 489], "sussman": 107, "mitpress": 107, "mit": [107, 266, 322, 441], "sicp": 107, "classic": [107, 137, 180, 197, 217, 244, 286, 317, 359, 384, 399, 405, 464, 479, 480, 482, 484, 485, 489], "textbook": [107, 116, 250, 334, 482, 483], "scienc": [107, 116, 359, 380, 492], "defmacro": 107, "rambl": 107, "wikipedia": [107, 119, 173, 249, 286, 357, 359, 363, 399, 482, 489, 490], "functional_program": 107, "curri": 107, "gnosi": 107, "cx": [107, 276, 480], "tpip": 107, "mertz": 107, "ibm": [107, 171, 190, 199, 363, 437, 480, 482, 490], "developerwork": 107, "tinker": [108, 373], "consolid": [108, 176, 299, 480, 490, 493], "debuginfo": 108, "dbg": 108, "fedora": [108, 115, 237, 368, 471, 475, 487, 489, 496], "sudo": [108, 110, 114], "dnf": 108, "ubuntu": [108, 488, 494], "debuginfod": 108, "backtrac": 108, "0x000000000041a6b1": 108, "nbyte": [108, 138, 145, 155, 297, 299, 329, 341, 353, 360], "0x7fffff7fefe8": 108, "748": 108, "0x000000000041b7c0": 108, "_pyobject_debugmallocapi": 108, "111": [108, 119, 239, 276, 359, 361, 476], "1445": 108, "0x000000000041b717": 108, "_pyobject_debugmalloc": 108, "1412": 108, "0x000000000044060a": 108, "_pyunicode_new": 108, "unicodeobject": 108, "346": 108, "0x00000000004466aa": 108, "pyunicodeucs2_decodeutf8st": 108, "0x5c2b8d": 108, "__lltrace__": [108, 471], "0x0": [108, 171], "2531": [108, 484, 489], "0x0000000000446647": 108, "pyunicodeucs2_decodeutf8": 108, "2495": 108, "0x0000000000440d1b": 108, "pyunicodeucs2_fromstringands": 108, "551": [108, 484], "0x0000000000440d94": 108, "pyunicodeucs2_fromstr": 108, "569": 108, "0x0000000000584abd": 108, "yuck": [108, 117, 465], "0xad4730": 108, "0x7ffff7fd5ee8": 108, "crasher": 108, "nasty_eq_vs_dict": 108, "0xaacd80": 108, "0xaace60": 108, "2171": 108, "0x7ffff7fb1868": 108, "0x7ffff7f14360": 108, "0x3dbdf85820": 108, "ma_fil": 108, "ma_us": 108, "ma_mask": 108, "ma_tabl": 108, "0x63d0f8": 108, "ma_lookup": 108, "0x3dbdc7ea70": 108, "lookdict_str": 108, "ma_smallt": 108, "me_hash": 108, "7065186196740147912": 108, "me_kei": 108, "me_valu": 108, "368181376027291943": 108, "9177857982131165996": 108, "8518757509529533123": 108, "6614918939584953775": 108, "some_machine_integ": 108, "some_python_integ": 108, "0x3dad39f5e0": 108, "ob_digit": 108, "ptr_to_python_str": 108, "hexadecim": [108, 112, 116, 159, 171, 191, 239, 249, 251, 254, 274, 307, 334, 341, 360, 361, 363, 368, 413, 450, 459, 477, 481, 483, 487, 488, 489, 490, 491, 494, 495, 496], "ptr_to_char_star": 108, "0x6d72c0": 108, "0x3dad3a95a0": 108, "0x7ffff2128500": 108, "defenc": 108, "901": [108, 486], "902": [108, 489], "903": [108, 397], "profile_m": 108, "904": 108, "905": 108, "906": 108, "907": 108, "908": 108, "909": 108, "gtk": [108, 481, 483], "910": 108, "911": [108, 397], "37": [108, 189, 259, 333, 360, 361, 397, 421, 466, 481, 484, 486, 487, 488, 494, 495, 496], "0x9420b04": 108, "gnome_sudoku": 108, "start_gam": 108, "0x948e82c": 108, "0xb771b7f4": 108, "0x99262ac": 108, "game_selector": 108, "201": [108, 120, 255, 276, 384, 477], "run_swallowed_dialog": 108, "neworsavedgameselector": 108, "new_game_model": 108, "liststor": 108, "0x98fab44": 108, "saved_gam": 108, "gsd": 108, "auto_fil": 108, "saved_at": 108, "1270084485": 108, "n7": 108, "impossible_hint": 108, "__absolute_start_time__": 108, "0x984b474": 108, "active_tim": 108, "0x984b494": 108, "total_tim": 108, "0x984b464": 108, "0x98faaa4": 108, "saved_game_model": 108, "0x98fad24": 108, "sudoku_mak": 108, "sudokumak": 108, "batch_siz": 108, "swallow": [108, 113, 114, 151, 467, 477, 484, 489, 495], "run_dialog": 108, "0x9aead74": 108, "dialog_swallow": 108, "swappablearea": 108, "main_pag": 108, "0x98fa6e4": 108, "scarlet_pimpernel": 108, "snip": 108, "68": [108, 119, 199, 239, 333, 381, 428, 490, 495], "0xaa4560": 108, "regrtest": [108, 377, 397, 480, 484], "1548": 108, "0x00000000004cd1e6": 108, "ceval": [108, 487], "2665": 108, "call_funct": [108, 155, 189, 488, 493], "sp": [108, 191, 249, 254], "oparg": [108, 204], "1543": 108, "cwd": [108, 155, 237, 308, 311, 364, 377, 414, 481, 495], "1544": 108, "1545": 108, "1546": 108, "test_support": [108, 483, 485], "savedcwd": [108, 377], "1547": 108, "temp_cwd": [108, 377], "testcwd": 108, "105": [108, 199, 359], "0x7fffefa18710": 108, "lwp": 108, "10260": 108, "sem_wait": 108, "nptl": 108, "sysdep": 108, "86": [108, 186, 359, 361, 397, 399], "104": [108, 199, 359, 489, 495, 496], "0x7fffdf5fe710": 108, "10259": 108, "0x7ffff7fe2700": 108, "10145": 108, "0x00000038e46d73e3": 108, "syscal": [108, 138, 139, 227, 308, 337, 347, 487, 492, 493, 495], "82": [108, 479], "0x7fffd00019d0": 108, "155": [108, 334], "_acquire_restor": 108, "_rlock": 108, "_verbose__verbos": 108, "_rlock__own": 108, "140737354016512": 108, "_rlock__block": 108, "0x858770": 108, "_rlock__count": 108, "0xd7ff40": 108, "count_own": 108, "140737213728528": 108, "__block": 108, "0x7fffac001640": 108, "269": [108, 201], "_condit": 108, "_condition__lock": 108, "instancemethod": 108, "0xd80260": 108, "_is_own": 108, "0xd80160": 108, "_release_sav": 108, "0xd803e0": 108, "0xd802e0": 108, "0xd7ee60": 108, "_condition__wait": 108, "0xd7fd10": 108, "waiter": [108, 150, 380], "0x858a90": 108, "saved_st": 108, "0x7fffb8001a10": 108, "lock_test": 108, "348": 108, "cond": [108, 150, 157, 368, 401, 482], "0x7fffb8001c40": 108, "tid": [108, 380], "0x7fffe4001580": 108, "140736940992272": 108, "0x7fffc8002090": 108, "0x858860": 108, "0x7fffac001c90": 108, "0x7fffac0011c0": 108, "0xcb5380": 108, "_wait": 108, "0x7fffd00024a0": 108, "_check_notifi": 108, "conditiontest": 108, "_testmethodnam": 108, "test_notifi": 108, "_resultfordocleanup": 108, "testresult": [108, 207, 403, 484, 486, 490], "_original_stdout": 108, "cstringio": [108, 483, 485], "stringo": 108, "0xc191e0": 108, "_mirroroutput": 108, "testsrun": [108, 403], "39": [108, 173, 196, 207, 298, 308, 381, 471, 481, 487, 490, 495, 496], "_original_stderr": 108, "0x7ffff7fc6340": 108, "_stdout_buff": 108, "0xc9c7f8": 108, "_stderr_buff": 108, "0xc9c790": 108, "_modulesetupfail": 108, "expectedfailur": [108, 377, 403, 486], "_previoustestclass": 108, "0x928310": 108, "unexpectedsuccess": [108, 403], "shouldstop": [108, 403], "failfast": [108, 403, 484], "0xc185a0": 108, "_cleanup": 108, "_type_equality_func": 108, "0x7eba00": 108, "0xd750e0": 108, "0x7e7820": 108, "0xd75160": 108, "0x7e30e0": 108, "0xd75060": 108, "0x7e7d20": 108, "0xd751e0": 108, "0x7f19e0": 108, "foster": [109, 488], "malcolm": [110, 334, 484, 489, 493], "\u0142ukasz": [110, 303, 489, 491, 492, 493, 494, 495, 496], "langa": [110, 303, 489, 491, 492, 493, 494, 495, 496], "incorrectli": [110, 114, 156, 181, 270, 286, 307, 308, 364, 404, 443, 488, 489, 490, 491], "yum": 110, "sdt": 110, "29564": 110, "python18035": 110, "_pyeval_evalframedefault": 110, "29565": 110, "dtrace_function_entri": 110, "29566": 110, "29567": 110, "dtrace_function_return": 110, "29568": 110, "29569": 110, "29570": 110, "29571": 110, "maybe_dtrace_lin": 110, "stapsdt": 110, "readelf": 110, "grep": [110, 114, 261, 364, 477], "0000000000000000": 110, "00308d78": 110, "libpython3": 110, "3dm": 110, "00365b68": 110, "0x00000254": 110, "0x00000020": [110, 189], "0x00000010": 110, "nt_gnu_abi_tag": 110, "0x00000274": 110, "0x00000024": 110, "0x00000014": 110, "nt_gnu_build_id": 110, "bitstr": 110, "df924a2b08a7e89f6e11251d4602022977af2670": 110, "0x002d6c30": 110, "0x00000144": 110, "0x00000031": 110, "nt_stapsdt": 110, "gc__start": 110, "0x00000000004371c3": 110, "0x0000000000630ce2": 110, "0x00000000008d6bf6": 110, "ebx": 110, "0x00000030": 110, "gc__done": 110, "0x00000000004374e1": 110, "0x00000000008d6bf8": 110, "rax": 110, "0x00000045": 110, "function__entri": 110, "0x000000000053db6c": 110, "0x00000000008d6be8": 110, "rbp": 110, "r12": 110, "eax": 110, "0x00000046": 110, "function__return": 110, "0x000000000053dba8": 110, "0x00000000008d6bea": 110, "strateg": 110, "copyinstr": 110, "probenam": 110, "arg0": [110, 308], "call_stack": 110, "156641360502280": 110, "156641360518804": 110, "156641360532797": 110, "function_3": 110, "156641360546807": 110, "156641360563367": 110, "156641360578365": 110, "156641360591757": 110, "156641360605556": 110, "156641360617482": 110, "156641360629814": 110, "156641360642285": 110, "156641360656770": 110, "156641360669707": 110, "156641360687853": 110, "function_4": 110, "156641360700719": 110, "156641360719640": 110, "function_5": 110, "156641360732567": 110, "156641360747370": 110, "user_str": 110, "thread_ind": 110, "stap": 110, "stp": 110, "11408": 110, "8274": 110, "_abcol": 110, "11414": 110, "425": [110, 255, 496], "11418": 110, "490": 110, "11424": 110, "11428": 110, "426": [110, 255], "11433": 110, "pid": [110, 138, 144, 149, 155, 180, 293, 298, 308, 314, 324, 337, 353, 364, 377, 482, 484, 496], "6dm": 110, "begun": [110, 380, 480, 481], "import__find__load__start": [110, 494], "import__find__load__don": [110, 494], "find_and_load": 110, "frameptr": 110, "arg4": 110, "probepoint": 110, "cleanli": [110, 112, 116, 350, 357], "fn_call": 110, "033": [110, 190], "1h": [110, 484], "foreach": 110, "6d": [110, 114], "moodi": [111, 490, 491, 492], "ip_address": [111, 155, 274, 353], "192": [111, 114, 257, 274, 282, 361], "ipv4address": [111, 274, 492], "db8": [111, 274], "ipv6address": [111, 274, 492, 496], "3221225985": [111, 274], "42540766411282592856903984951653826561": 111, "ip_network": [111, 274], "ipv4network": [111, 274, 492, 494], "ipv6network": [111, 274, 492, 494], "3221225984": 111, "42540766411282592856903984951653826560": 111, "firewal": [111, 237, 261, 298, 424, 478, 490], "router": [111, 274, 353], "hybrid": [111, 196, 491], "ip_interfac": [111, 274], "ipv4interfac": [111, 274], "ipv6interfac": [111, 274], "ipv": 111, "intuit": [111, 112, 113, 116, 164, 199, 203, 276, 390, 445, 477, 478, 479, 488, 491], "addr4": 111, "addr6": [111, 492], "host4": 111, "host6": 111, "net4": 111, "num_address": [111, 274], "net6": 111, "4294967296": [111, 274, 485], "254": 111, "netmask": [111, 274, 492], "hostmask": [111, 274], "ffff": [111, 274, 477, 490], "explod": [111, 274, 477, 479], "0db8": 111, "0001": [111, 196, 450, 494], "explos": [111, 428], "lend": [111, 479], "agnost": [111, 360, 401], "addressvalueerror": [111, 274], "netmaskvalueerror": [111, 274], "168": [111, 114, 257, 274, 282, 361], "octet": [111, 214, 220, 274, 320, 361, 409, 413], "safer": [112, 207, 314, 315, 457, 480, 481], "old_binascii": 112, "stringent": [112, 491], "unhexlifi": [112, 159], "qwertyuiop": 112, "boo": 112, "circuit": [112, 251, 360, 457], "led": [112, 180, 308, 478, 488, 490, 491, 493], "field_size_limit": [112, 188, 482], "price": [112, 173, 334, 427, 464, 481, 482, 492, 495], "xxlimit": 112, "my_struct": 112, "pai": [112, 114, 116, 207, 456, 476, 491], "myattribut": 112, "pickleabl": [112, 284], "blueprint": 112, "py_tp_travers": 112, "grew": [112, 486, 489], "awkward": [112, 160, 251, 375, 495], "0x03090000": [112, 496], "roadblock": 112, "get_defining_class": 112, "get_type_of_self": 112, "example_method": 112, "example_method_doc": 112, "my_method": 112, "module_def": 112, "capi": [112, 484], "iron": 112, "vinai": [113, 114, 480, 481, 483, 484, 486, 489, 490, 491, 492, 493, 494, 495, 496], "sajip": [113, 114, 480, 481, 483, 484, 486, 489, 490, 491, 492, 493, 494, 495, 496], "vinay_sajip": [113, 114], "dove": [113, 114], "ascrib": 113, "getlogg": [113, 114, 137, 282, 403, 480, 484, 486, 496], "investig": [113, 360], "confirm": [113, 202, 282, 309, 312, 401, 410, 415, 476, 487, 488], "told": [113, 401, 414, 443, 480], "flexibli": [113, 415], "\u00f8resund": 113, "malm\u00f6": 113, "threshold": [113, 114, 241, 282, 360, 482], "loglevel": 113, "numeric_level": 113, "afresh": [113, 182, 282], "filemod": [113, 114, 282, 358, 373, 490, 495], "levelnam": [113, 114, 282, 283, 284, 298, 481, 484, 489], "asctim": [113, 114, 282, 283, 324, 381, 478, 484, 489], "2010": [113, 114, 119, 282, 347, 361, 368, 405, 484, 489], "41": [113, 276, 322, 333, 334, 359, 434, 466, 483, 496], "iso8601": [113, 434], "3339": 113, "datefmt": [113, 114, 282, 283], "46": [113, 173, 333, 360, 467, 487, 495, 496], "invest": 113, "favourit": 113, "beverag": 113, "hereaft": [113, 121, 323, 370, 457, 465], "threefold": 113, "setlevel": [113, 114, 137, 282, 298, 480], "addhandl": [113, 114, 282, 486], "removehandl": [113, 114, 282, 403, 484], "addfilt": [113, 114, 282], "removefilt": [113, 282], "baz": [113, 114, 131, 180, 261, 264, 265, 277, 282, 283, 298, 308, 326, 377, 403, 404, 405, 422, 447, 451], "bam": [113, 282], "scenario": [113, 114, 147, 199, 201, 282, 283, 335, 403, 404, 405, 410, 447, 487, 491, 493], "setformatt": [113, 114, 282, 284], "deconfigur": 113, "fmt": [113, 114, 196, 215, 274, 282, 310, 319, 377, 467, 483], "millisecond": [113, 137, 138, 143, 190, 196, 261, 282, 343, 391, 399, 421, 488, 489, 493, 496], "tack": [113, 436], "gmtime": [113, 114, 163, 196, 223, 282, 286, 381, 479, 489, 490], "fileconfig": [113, 114, 283, 484, 491, 494], "simple_exampl": [113, 114], "simple_logging_modul": 113, "2005": [113, 114, 196, 286, 441, 481, 482, 483], "03": [113, 114, 196, 199, 282, 357, 361, 363, 381, 466, 480, 482], "618": [113, 487], "620": [113, 481], "695": 113, "697": 113, "773": 113, "nearli": [113, 117, 152, 180, 197, 199, 284, 312, 443, 479, 480, 483, 484, 485, 488, 489, 492], "conf": [113, 114, 116, 311, 467, 480, 489], "simpleexampl": [113, 114], "consolehandl": 113, "simpleformatt": 113, "logger_root": [113, 283], "logger_simpleexampl": 113, "handler_consolehandl": 113, "formatter_simpleformatt": 113, "simple_logging_config": 113, "38": [113, 114, 203, 239, 282, 353, 397, 480, 487, 495, 496], "977": [113, 303], "979": 113, "56": [113, 196, 199, 239, 273, 298, 353, 359, 457, 459, 489, 492], "054": 113, "055": 113, "130": [113, 274, 357, 359, 484], "noncod": 113, "disable_existing_logg": [113, 114, 283], "mypackag": 113, "myhandl": [113, 114, 283], "superset": [113, 173, 321, 360, 445, 477, 480], "yaml": [113, 131, 266, 277, 283, 484, 487, 489], "lastresort": [113, 282, 489], "raiseexcept": [113, 114, 282, 284, 489], "absenc": [113, 120, 126, 179, 181, 270, 280, 282, 334, 357, 380, 422, 443, 458, 464], "organis": [113, 114, 122, 250, 282], "orgnam": 113, "prerog": 113, "interfer": [113, 122, 144, 180, 240, 281], "deliv": [113, 120, 145, 196, 239, 343, 348, 351, 391, 405, 410, 445, 456, 483], "notset": [113, 282, 283, 298], "desk": [113, 454, 464], "staff": [113, 347, 373], "convinc": [113, 281], "daemon": [113, 114, 284, 298, 331, 351, 353, 354, 380, 381, 417, 480, 483, 487, 490, 494, 496], "xp": [113, 284, 480, 492], "criteria": [113, 188, 262, 282, 323], "reopen": [113, 237, 284, 314, 356, 374, 484, 493], "xxx": [113, 114, 131, 368, 447, 471, 483, 484, 486, 490, 491], "bufferingformatt": [113, 282], "provis": [113, 317, 357, 441, 445], "trailer": [113, 308, 439, 446], "handleerror": [113, 282, 284], "altogeth": [113, 114, 164, 227, 329, 404, 437, 443, 488, 489], "isenabledfor": [113, 114, 282, 484], "expensive_func1": 113, "expensive_func2": 113, "deepli": [113, 184, 377, 404, 424, 450, 467, 477, 483, 488], "tight": [113, 147], "recomput": [113, 343, 344, 348, 381, 491], "_srcfile": 113, "_getfram": [113, 155, 368, 465, 478, 488], "logthread": 113, "getpid": [113, 138, 298, 308], "logprocess": 113, "logmultiprocess": 113, "somelogg": 114, "auxiliary_modul": 114, "spam_appl": 114, "fh": 114, "auxiliari": [114, 276, 388, 489], "do_someth": [114, 164, 282, 357, 403, 445], "some_funct": [114, 404, 405], "module_logg": 114, "47": [114, 196, 223, 333, 334, 439, 457, 466, 483, 487], "663": 114, "665": 114, "668": [114, 347], "669": [114, 173], "670": [114, 488], "671": 114, "672": 114, "relativecr": [114, 282], "threadnam": [114, 282], "mainthread": 114, "505": [114, 120, 255], "1007": 114, "1507": [114, 483], "1508": 114, "2258": 114, "2512": 114, "3009": 114, "3013": 114, "3515": 114, "3761": 114, "4017": 114, "4513": 114, "4518": 114, "interspers": [114, 239, 307], "quota": [114, 226, 262], "dormant": 114, "jackdaw": 114, "quartz": 114, "logger1": 114, "area1": 114, "logger2": 114, "area2": 114, "zephyr": 114, "vex": [114, 478], "daft": 114, "zebra": [114, 173, 314], "jail": 114, "zesti": 114, "vixen": 114, "wizard": [114, 479], "warnings_and_below": 114, "filter_mak": 114, "levelno": [114, 282], "9999": [114, 145, 163, 196, 261, 354, 489, 494], "stoplisten": [114, 283], "data_to_send": 114, "sock_stream": [114, 117, 138, 152, 284, 353, 354, 357, 377, 484, 494], "culprit": 114, "sluggish": 114, "poorli": [114, 162, 320, 465], "capac": [114, 190, 284, 308, 359, 380, 482, 484, 487], "precaut": [114, 127], "eat": [114, 290], "que": 114, "queue_handl": 114, "respect_handler_level": [114, 284, 492], "rootlogg": 114, "default_tcp_logging_port": [114, 283], "unformat": [114, 277, 334], "logrecordstreamhandl": 114, "streamrequesthandl": [114, 354, 493], "recv": [114, 117, 138, 152, 298, 342, 344, 348, 353, 354, 357, 377, 384, 484, 492], "slen": 114, "makelogrecord": [114, 282, 284], "handlelogrecord": 114, "lognam": [114, 243, 308], "bandwidth": [114, 119, 456, 484, 487], "logrecordsocketreceiv": 114, "threadingtcpserv": [114, 354], "allow_reuse_address": [114, 354, 435, 483], "serve_until_stop": 114, "rd": [114, 357, 360, 490], "wr": [114, 478], "handle_request": [114, 134, 183, 348, 354, 422, 435, 484], "5d": 114, "69": [114, 381, 428, 487], "makepickl": [114, 284], "supervisor": 114, "gist": 114, "bone": [114, 474], "bash": [114, 168, 311, 346, 414, 462, 468], "ensure_app": 114, "log_listen": 114, "webapp": 114, "unzip": [114, 121, 239, 436, 438, 480], "bottl": [114, 189, 483], "supervisorctl": 114, "tweak": [114, 307, 405, 478, 481, 493], "usernam": [114, 120, 164, 186, 214, 217, 237, 243, 262, 284, 308, 309, 320, 351, 409, 410, 489, 490, 492], "customadapt": 114, "connid": 114, "some_conn_id": 114, "threadloc": 114, "contextfilt": 114, "inject": [114, 138, 141, 149, 282, 287, 346, 356, 364, 373, 401, 410, 424, 470, 482, 487, 488, 492], "sheila": 114, "231": 114, "lvl": 114, "lvlname": 114, "getlevelnam": [114, 282], "webapplib": 114, "appnam": [114, 284], "ctx_request": 114, "ctx_appnam": 114, "injectingfilt": 114, "num_request": 114, "process_request": [114, 354], "splitext": [114, 214, 309, 311, 373, 467, 483, 493], "adhf": 114, "argumentdefaultshelpformatt": [114, 131], "ap": [114, 203], "aa": [114, 173, 276, 334, 457, 484], "app1": 114, "app2": 114, "49": [114, 259, 276, 282, 298, 397, 457, 461, 464, 487, 495, 496], "wc": 114, "153": 114, "147": [114, 495], "600": [114, 196, 493], "issue3770": 114, "listener_configur": 114, "mptest": 114, "processnam": [114, 282, 298], "listener_process": 114, "print_exc": [114, 382, 396], "worker_configur": 114, "worker_process": 114, "current_process": [114, 298], "orchestr": [114, 403], "put_nowait": [114, 146, 284, 298, 331], "logger_thread": 114, "qh": 114, "ham": [114, 173, 183, 203, 239, 270, 294, 445, 447, 456, 492], "mplog": 114, "foofil": 114, "wp": 114, "lp": [114, 285, 488], "max_work": [114, 138, 179, 489], "log_filenam": 114, "logging_rotatingfile_exampl": 114, "my_logg": 114, "mylogg": [114, 282], "maxbyt": [114, 283, 284, 484], "backupcount": [114, 283, 284, 484], "logfil": [114, 164], "backup": [114, 123, 232, 284, 356, 373, 483, 489, 494], "bf": [114, 334, 466], "df": [114, 484], "924": 114, "494": [114, 493], "833": 114, "recal": [114, 261, 401, 459], "bracemessag": 114, "dollarmessag": 114, "unwieldi": 114, "palat": 114, "brethren": 114, "2f": [114, 146, 361, 409, 459, 483, 484, 486], "trip": [114, 133, 162, 257, 393, 483, 485, 486, 488], "styleadapt": 114, "stacklevel": [114, 273, 282, 415, 482], "makerecord": [114, 282], "setloggerclass": [114, 282], "setlogrecordfactori": [114, 282], "interrog": [114, 219, 405], "getlogrecordfactori": [114, 282], "old_factori": [114, 282], "record_factori": [114, 282], "custom_attribut": [114, 282], "0xdecafbad": [114, 282], "born": [114, 360], "zmq": 114, "pyzmq": 114, "sock": [114, 116, 117, 134, 138, 145, 148, 152, 256, 323, 344, 353, 354, 357, 377, 489, 492, 494], "pub": [114, 136, 237, 347, 475], "5556": 114, "zeromqsockethandl": 114, "enqueu": [114, 146, 179, 284, 298, 331], "send_json": 114, "socktyp": [114, 284, 353, 377, 484], "zeromqsocketlisten": 114, "setsockopt_str": 114, "dequeu": [114, 284], "recv_json": 114, "nng": 114, "bill": [114, 360, 461, 477, 483], "spiritu": 114, "successor": [114, 140, 246, 404, 441], "juat": 114, "default_addr": 114, "13232": 114, "nngsocketlisten": 114, "sub0": 114, "recv_timeout": 114, "enqueue_sentinel": [114, 284], "nngsockethandl": 114, "pub0": 114, "dial": 114, "send_timeout": 114, "logger_nam": 114, "lib1": [114, 471], "lib2": 114, "msgno": 114, "django": [114, 173, 312, 317, 404, 484, 490], "specialfilt": 114, "mail_admin": 114, "adminemailhandl": 114, "myproject": [114, 403], "runnabl": [114, 138, 414], "f_in": [114, 248], "f_out": [114, 248], "copyfileobj": [114, 120, 248, 347, 495], "rh": [114, 490], "six": [114, 185, 196, 239, 240, 314, 318, 333, 334, 356, 391, 409, 413, 437, 483, 489, 491, 494, 495], "zcat": 114, "02": [114, 121, 196, 199, 282, 298, 347, 381, 438, 466, 477, 479, 480, 481, 489, 490, 493], "767": [114, 421], "996": 114, "997": 114, "998": 114, "stop_ev": 114, "heterogen": [114, 132, 360, 457, 485], "config_initi": 114, "config_work": 114, "config_listen": 114, "hang": [114, 117, 120, 147, 298, 343, 348, 377, 480, 489], "5424": [114, 284], "compliant": [114, 123, 138, 159, 196, 208, 209, 210, 212, 215, 216, 217, 221, 222, 223, 229, 249, 277, 286, 317, 326, 346, 356, 381, 409, 422, 424, 441, 445, 479, 482, 484, 490, 493, 494], "ufeffunicod": 114, "feff": [114, 119, 171], "xef": [114, 159, 409], "xbb": 114, "xbf": 114, "parseabl": [114, 318, 346], "serialis": [114, 171, 339, 428], "structuredmessag": 114, "fnum": 114, "specialis": [114, 120, 356, 360, 401, 446], "jsonencod": [114, 277, 493], "unicode_escap": [114, 171], "set_valu": 114, "snowman": 114, "u2603": 114, "chown": [114, 155, 308, 347, 490], "owned_file_handl": 114, "puls": 114, "chowntest": 114, "orthogon": 114, "getmessag": [114, 282, 429], "firstli": [114, 339, 360], "secondli": 114, "cater": [114, 207, 283, 284], "myfilt": [114, 489], "param": [114, 151, 164, 210, 211, 217, 219, 223, 256, 270, 296, 308, 320, 356, 403, 409, 410, 414, 434, 435, 446, 484, 489, 496], "noshow": 114, "onelineexceptionformatt": 114, "formatexcept": [114, 282], "exc_text": [114, 282, 284], "configure_log": 114, "2015": [114, 196, 341, 441, 492], "logtest7": 114, "nzerodivisionerror": 114, "simplist": [114, 404], "render": [114, 119, 138, 202, 212, 215, 237, 321, 354, 391, 396, 426, 443, 458, 476, 480, 483, 484, 487, 495], "audibl": [114, 190], "speech": [114, 310], "tt": [114, 196], "frequenc": [114, 128, 241, 359, 365, 381, 416, 421, 430, 483], "swamp": 114, "espeak": 114, "ttshandler": 114, "femal": [114, 359], "voic": [114, 352, 479], "s150": 114, "ven": 114, "f3": [114, 131], "goodby": [114, 153, 237, 314, 384, 458], "parameteris": [114, 488], "log_if_error": 114, "target_handl": 114, "flush_level": 114, "flushlevel": [114, 284], "write_lin": 114, "decorated_foo": 114, "bufferinghandl": [114, 284], "har": [114, 168, 403, 489, 491], "bufferingsmtphandl": 114, "mailhost": [114, 283, 284], "mailport": 114, "starttl": [114, 262, 284, 303, 351, 357, 483, 489, 490], "login": [114, 186, 237, 243, 262, 301, 303, 308, 325, 351, 355, 374, 410, 489], "nto": [114, 351], "nsubject": 114, "addresse": [114, 284], "102": [114, 199, 255, 276, 359, 484, 489, 495, 496], "eleven": 114, "eleventh": 114, "utcformatt": 114, "console1": 114, "console2": 114, "501": [114, 120, 255, 259, 308, 489], "sat": [114, 163, 196, 357, 359], "revert": [114, 183, 225, 237, 256, 257, 339, 373, 377, 470, 484, 490, 493], "loggingcontext": 114, "old_level": 114, "ev": [114, 357], "logctx": 114, "generalis": 114, "scriptnam": 114, "subpars": [114, 131, 489, 494], "add_subpars": [114, 131, 489, 494], "start_cmd": 114, "add_pars": [114, 131, 489], "stop_cmd": 114, "restart_cmd": 114, "log_level": 114, "plural": [114, 244, 484, 494], "rfind": [114, 293, 360, 483, 489, 490, 492], "pyside2": 114, "pyqt5": 114, "qthandler": 114, "qthread": 114, "pyside6": 114, "pyqt6": 114, "qtcore": 114, "qtgui": 114, "qtwidget": 114, "pyqtsign": 114, "pyqtslot": 114, "qobject": 114, "slotfunc": 114, "ctname": 114, "currentthread": [114, 203, 380, 487], "objectnam": 114, "kick": 114, "qthreadnam": 114, "isinterruptionrequest": 114, "1f": [114, 333, 397], "qwidget": 114, "orang": [114, 173, 306, 399, 457, 486], "textedit": 114, "te": 114, "qplaintextedit": 114, "monospac": [114, 261, 379], "qfont": 114, "nosuchfont": 114, "setstylehint": 114, "stylehint": 114, "qt6": 114, "setfont": 114, "setreadonli": 114, "pb": [114, 285], "qpushbutton": 114, "work_button": 114, "log_button": 114, "clear_button": 114, "update_statu": 114, "abouttoquit": 114, "force_quit": 114, "qvboxlayout": 114, "addwidget": 114, "setfixeds": 114, "900": [114, 464], "manual_upd": 114, "clear_displai": 114, "start_thread": [114, 377], "seten": 114, "worker_thread": 114, "setobjectnam": 114, "workerthread": 114, "movetothread": 114, "kill_thread": 114, "requestinterrupt": 114, "isrun": 114, "appendhtml": 114, "qapplic": 114, "exec_": 114, "2009": [114, 196, 334, 356, 405, 441, 478, 484, 486], "detault": 114, "3164": 114, "hail": 114, "widespread": [114, 216, 449, 478, 489], "sysloghandler5424": 114, "tz_offset": 114, "msgid": [114, 214, 223], "isoformat": [114, 196, 203, 356, 440, 480, 493, 494], "has_offset": 114, "hr": [114, 359], "hostnam": [114, 120, 138, 148, 155, 164, 171, 197, 223, 237, 256, 262, 274, 284, 298, 303, 308, 320, 328, 351, 353, 357, 409, 410, 434, 464, 477, 480, 484, 489, 490, 491, 494], "gethostnam": [114, 117, 155, 308, 353], "procid": 114, "sdata": 114, "structured_data": 114, "sd": 114, "sdid": 114, "dv": [114, 377], "specir": 114, "12345": [114, 189, 239, 455, 457, 480, 486, 493], "bozz": [114, 283], "fizz": 114, "buzz": 114, "54321": [114, 457], "rab": 114, "zab": 114, "zzif": 114, "loggerwrit": 114, "info_fp": 114, "debug_fp": 114, "merci": [114, 443], "mutipl": 114, "slghtly": 114, "bufferingloggerwrit": 114, "52": [114, 116, 151, 196, 290, 333, 334, 357, 359, 361, 397, 457, 459, 481, 484], "unhelp": [114, 477], "garbl": 114, "unexpectedli": [114, 122, 183, 337, 348, 351, 403, 455, 479, 492], "supposedli": [114, 408], "circumv": [114, 424], "pointless": 114, "brett": [115, 323, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496], "cannon": [115, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496], "2020": [115, 360, 440, 441, 484, 487, 488, 494, 495, 496], "373": [115, 484], "discontinu": [115, 381, 410], "digitalocean": 115, "amk": [116, 334, 480, 483, 484], "gentler": [116, 334], "regex": [116, 176, 234, 281, 317, 334, 374, 403, 478, 482, 483, 489, 491, 494], "tex": 116, "automata": 116, "akm": 116, "z0": [116, 119, 186, 334, 361, 450], "dotal": [116, 334], "ct": [116, 117], "caaat": 116, "repetit": [116, 131, 162, 249, 276, 285, 290, 334, 360, 382, 396, 403, 405, 415, 443, 445, 449, 479], "bcd": [116, 276], "abcbd": 116, "abcb": 116, "bc": [116, 163, 173, 261, 276, 360, 477], "quantifi": [116, 276, 329, 334, 488], "brew": 116, "homebrew": 116, "reductionist": 116, "bent": 116, "ignorecas": [116, 334, 361], "bloat": 116, "latex": [116, 483, 496], "findal": [116, 173, 334, 428, 466, 491], "findit": [116, 294, 334, 479], "redemo": 116, "tempo": 116, "clarifi": [116, 360, 404, 464, 482, 483, 489, 491], "drummer": 116, "drum": 116, "piper": 116, "lord": 116, "cook": [116, 190, 374], "callable_iter": 116, "fromag": 116, "1998": [116, 122, 333, 441], "multilin": [116, 171, 180, 261, 334, 351, 403, 489, 496], "i\u0307": [116, 334], "0130": [116, 334], "capit": [116, 119, 121, 199, 334, 360, 361, 401, 402, 445, 456, 477, 494, 496], "\u0131": [116, 334], "0131": [116, 334], "dotless": [116, 334], "\u017f": [116, 334], "017f": [116, 334], "212a": [116, 334], "kelvin": [116, 334], "\u017fpam": 116, "french": [116, 119, 381, 492, 494], "\u00e9": 116, "\u00e7": 116, "unreli": [116, 190, 334], "cultur": [116, 118, 244, 281, 334, 467], "charref": 116, "octal": [116, 123, 164, 197, 239, 274, 307, 308, 334, 360, 361, 450, 477, 478, 480, 481, 483, 485, 487, 488, 489, 494, 495, 496], "9a": [116, 334], "fa": [116, 334], "crow": 116, "servo": 116, "cro": 116, "ervo": 116, "etern": [116, 151], "recit": 116, "bclass": 116, "declassifi": 116, "subtleti": [116, 196, 257], "worst": [116, 117, 189, 201, 203, 250, 443, 447, 470, 481, 493, 494], "collis": [116, 249, 304, 345, 456, 476, 487, 491, 495, 496], "x08class": 116, "x08": [116, 363, 413], "dissect": [116, 272, 478, 479], "subgroup": [116, 204, 227, 334, 488, 489, 495], "agent": [116, 120, 286, 287, 351, 368, 410, 411, 479, 483], "thunderbird": 116, "20061227": 116, "ababababab": 116, "upward": [116, 190, 311, 314, 399, 404], "parenthesi": [116, 123, 133, 261, 446, 481], "abcd": [116, 119, 173, 203, 276, 480, 483, 487], "backrefer": [116, 334], "keystrok": [116, 168, 190, 348, 477, 484], "confusingli": [116, 120, 384, 450, 477], "chose": [116, 264, 265, 449, 482], "subexpress": 116, "punctuat": [116, 119, 346, 361, 450, 493], "groupdict": [116, 334], "jane": [116, 118], "internald": [116, 262], "mon": [116, 163, 196, 223, 480], "sec": [116, 381, 382, 492], "zonen": 116, "zoneh": 116, "zonem": 116, "autoexec": 116, "bat": [116, 311, 334, 377, 414, 468], "subn": [116, 334, 484, 486, 492], "sweet": 116, "p2": [116, 189, 276, 299, 364, 442, 456, 481, 487, 488, 492], "leftmost": [116, 160, 173, 203, 207, 240, 249, 334, 357, 445, 481, 494, 495], "shoe": 116, "abxd": [116, 334, 494], "carriag": [116, 191, 221, 222, 273, 334, 346, 360, 379, 422, 434, 450, 480, 482], "hexrepl": 116, "65490": 116, "49152": 116, "0xffd2": 116, "0xc000": 116, "bbbb": 116, "deed": 116, "swordfish": 116, "sdeedfish": 116, "bword": 116, "superstit": 116, "insuper": 116, "resist": [116, 249, 347, 478, 484, 490], "temptat": [116, 403, 478], "backtrack": [116, 334], "pain": [116, 281, 477, 482], "dirti": 116, "terribli": 116, "neatli": [116, 182, 484], "pat": [116, 202, 234, 492], "unclear": 116, "jeffrei": [116, 334, 357, 483, 484, 487, 488, 489], "friedl": [116, 334], "reilli": [116, 334, 382, 469, 479, 492], "flavour": [116, 119, 265, 311, 373, 405, 482], "misunderstood": 117, "000": [117, 173, 189, 196, 199, 249, 276, 297, 323, 403, 476, 489, 490], "foot": [117, 334, 359, 466], "decent": [117, 464], "inet": [117, 353], "endpoint": [117, 134, 138, 145, 152, 173, 226, 256, 353, 399, 489], "switchboard": 117, "town": 117, "berkelei": [117, 197, 485], "wildfir": 117, "unbeliev": 117, "repli": [117, 196, 217, 237, 259, 286, 298, 303, 351, 354, 410], "serversocket": 117, "snmp": 117, "clientsocket": 117, "client_thread": 117, "chat": 117, "recycl": [117, 126, 380], "beast": 117, "peer": [117, 142, 145, 226, 227, 303, 343, 350, 357], "etiquett": 117, "signon": 117, "forev": [117, 134, 142, 151, 324, 343, 478, 479, 480, 481, 490], "eot": [117, 191], "shrug": 117, "righter": 117, "mysocket": [117, 277], "mysend": 117, "totals": 117, "msglen": [117, 353], "myrec": 117, "bytes_recd": 117, "2048": [117, 357, 420], "nasti": [117, 375], "discov": [117, 125, 196, 210, 219, 258, 377, 403, 430, 478, 479, 480, 484, 489, 491], "competit": 117, "x86": [117, 189, 315, 363, 471, 476, 483, 488, 494], "arm": [117, 492], "risc": 117, "ntohl": [117, 353], "htonl": [117, 353], "ntoh": [117, 353, 487, 494], "hton": [117, 353, 487, 494], "advisori": [117, 286, 443, 470, 477], "riddanc": 117, "neglect": [117, 420], "habit": [117, 244, 286, 456], "indefinit": [117, 163, 190, 196, 259, 276, 280, 284, 286, 348, 374, 484, 488, 491, 492], "dead": [117, 322, 417, 455, 456, 471, 480, 485, 489], "screw": 117, "setblock": [117, 308, 344, 353, 357], "o_nonblock": [117, 308, 490, 492], "indistinguish": [117, 298, 323], "o_ndelai": [117, 229, 308], "tcp_nodelai": [117, 138, 484, 493, 494], "nut": 117, "crazi": 117, "suck": 117, "brain": [117, 481], "cake": 117, "ready_to_read": 117, "ready_to_writ": 117, "in_error": 117, "potential_read": 117, "potential_writ": 117, "potential_err": 117, "healthi": 117, "outbound": 117, "andrew": [118, 119, 190, 441, 477, 479, 480, 481, 482, 487, 488, 489, 490, 491, 493, 494, 495, 496], "dalk": [118, 441, 479, 480, 482], "student_tupl": 118, "student_object": 118, "secondari": [118, 138, 173, 261, 276, 323, 368, 453, 463, 464, 465, 484, 485, 487], "multisort": 118, "timsort": [118, 489], "dsu": 118, "lexicograph": [118, 276, 360, 445, 457, 482], "schwartzian": 118, "scale": [118, 144, 333, 343, 359, 391, 401, 477, 480, 483, 493, 494], "lighter": [118, 403], "heavier": 118, "cmp": [118, 230, 239, 360, 477, 478, 481, 485], "strcoll": [118, 240, 281, 489], "cmp_to_kei": [118, 239, 240, 360, 484, 489], "interestingli": [118, 334, 459], "standard_wai": 118, "double_revers": 118, "newgrad": 118, "japanes": [119, 171, 281, 481, 494], "hebrew": [119, 171], "russian": [119, 171], "emoji": [119, 489, 495], "\u00e8": 119, "\u00ed": 119, "roman": [119, 387, 402, 480], "\u2170": 119, "0x10ffff": [119, 239, 368, 490], "265e": 119, "0x265e": 119, "0061": 119, "0062": 119, "0063": 119, "007b": 119, "2167": 119, "\u2177": 119, "2168": 119, "\u2178": 119, "nine": [119, 199, 359, 370, 491], "265f": 119, "pawn": 119, "1f600": 119, "grin": 119, "1f609": 119, "wink": 119, "paper": [119, 131, 167, 333, 353, 399, 403, 480], "glyph": [119, 222, 261], "diagon": [119, 456, 487], "horizont": [119, 190, 191, 390, 391, 399, 450], "114": [119, 133, 239], "0x50": 119, "79": [119, 397, 456], "74": [119, 359, 467, 495, 496], "6f": 119, "6e": 119, "0x00": [119, 191, 204], "ram": [119, 199, 482], "gigabyt": [119, 424], "intoler": 119, "strcpy": 119, "resynchron": [119, 490], "consortium": [119, 425], "chronologi": 119, "computerphil": 119, "youtub": 119, "channel": [119, 128, 134, 145, 152, 154, 189, 215, 226, 237, 283, 298, 310, 350, 352, 353, 357, 365, 416, 479, 490, 493, 494, 495, 496], "tom": [119, 394, 479, 482, 487, 489, 491], "scott": [119, 480, 482, 495], "jukka": [119, 492], "korpela": 119, "joel": [119, 493], "spolski": 119, "rudiment": 119, "fichier": 119, "trouv\u00e9": 119, "r\u00e9pertoir": 119, "greek": [119, 171], "u0394": 119, "u00000394": 119, "xnn": 119, "x80abc": 119, "ufffdabc": 119, "iso_8859_1": 119, "57344": 119, "ue000": 119, "xmlcharrefreplac": [119, 171, 239, 273, 360, 480], "unnnn": 119, "namereplac": [119, 171, 239, 273, 492], "40960": 119, "1972": [119, 356, 480, 481, 482], "xea": 119, "x80": [119, 315, 479], "x80abcd": 119, "xde": 119, "xb4": 119, "ua000": 119, "ua000abcd": 119, "u07b4": 119, "yi": 119, "syllabl": 119, "IT": 119, "comfort": [119, 207], "xac": 119, "u1234": [119, 171, 277], "u20ac": [119, 485, 492], "u00008000": 119, "97": [119, 133, 239, 293, 360, 484, 489], "172": [119, 490], "4660": 119, "8364": [119, 239], "32768": [119, 234, 357, 363, 439], "dose": 119, "annoy": [119, 479, 480, 485, 490, 495], "accent": [119, 346], "abcd\u00e9": 119, "inspir": [119, 180, 214, 276, 277, 403, 441, 442, 477, 478, 480, 483, 487, 488, 489, 490], "fifth": [119, 190, 261, 360, 381], "bidirect": [119, 138, 145, 175, 298, 360, 362, 402, 477], "233": [119, 240, 456, 464, 465], "0x0bf2": 119, "3972": [119, 484], "6000": [119, 249, 298], "13231": 119, "00e9": 119, "WITH": [119, 171, 354, 402, 441, 445], "0bf2": 119, "tamil": 119, "0f84": 119, "mn": [119, 450], "tibetan": 119, "halanta": 119, "1770": 119, "lo": [119, 160, 360, 401, 450, 486], "tagbanwa": 119, "sa": [119, 163, 196, 353, 359], "33af": 119, "rad": [119, 480], "subcategori": 119, "nonspac": [119, 450], "\u00ea": 119, "00ea": 119, "0065": 119, "0302": 119, "circumflex": [119, 392], "casefold": [119, 131, 156, 173, 360, 490, 492, 495], "german": [119, 171, 281, 360, 399, 491], "\u00df": [119, 171, 360, 490], "00df": 119, "street": [119, 131, 334], "g\u00fcrzenichstra\u00df": 119, "g\u00fcrzenichstrass": 119, "inequ": [119, 199, 209, 216, 403, 445, 483, 489], "compare_str": 119, "nfd": [119, 402], "single_char": 119, "multiple_char": 119, "nfc": [119, 402, 495], "nfkc": [119, 362, 402, 409, 450], "nfkd": [119, 402], "caseless": [119, 360, 490], "compare_caseless": 119, "nd": [119, 239, 261, 334, 360, 450], "57": [119, 480, 490, 495, 496], "thai": [119, 171, 441], "arab": [119, 171, 199, 360, 477, 484, 489], "u0e55": 119, "u0e57": 119, "pragmat": 119, "ned": [119, 484, 489, 491, 495, 496], "batcheld": 119, "marc": [119, 244, 356, 477, 478, 479, 480, 482, 490], "andr\u00e9": [119, 244, 356, 477, 478, 479, 480, 482], "lemburg": [119, 244, 356, 477, 478, 479, 480, 482], "slide": [119, 426], "europython": 119, "2002": [119, 121, 196, 274, 441, 479, 480], "transmiss": [119, 134, 191, 222, 284, 315, 422], "gib": [119, 285, 321, 373, 377, 437, 477, 480, 482], "u4500": 119, "converg": [119, 359], "u4500abc": 119, "xe4": 119, "x94": [119, 249], "bytestream": 119, "new_f": 119, "getdecod": [119, 171], "getread": [119, 171], "getwrit": [119, 171], "beazlei": [119, 479, 489], "benjamin": [119, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495], "peterson": [119, 483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495], "alexand": [119, 483, 484, 486, 489, 492, 493, 494], "belopolski": [119, 483, 484, 486, 489, 492, 493, 494], "brandl": [119, 482, 483, 484, 486, 489, 490, 492, 493], "ezio": [119, 484, 489, 490, 491, 492], "melotti": [119, 484, 489, 490, 491, 492], "\u00e9ric": [119, 488, 490, 491, 495], "araujo": [119, 488, 490, 491, 495], "nichola": [119, 480, 487], "bastin": [119, 481], "mariu": [119, 477], "gedmina": 119, "kent": [119, 357, 377, 403, 478, 482, 483], "johnson": [119, 482, 483], "ken": [119, 384, 487, 488, 493, 494, 495, 496], "krugler": 119, "von": [119, 244, 333, 443, 477, 479, 480, 481, 482, 483, 484, 489, 490, 491, 495], "l\u00f6wi": [119, 244, 303, 477, 479, 480, 481, 482, 483, 484, 489, 490, 491, 495], "terri": [119, 457, 487, 488, 492, 493, 494, 495, 496], "reedi": [119, 480, 487, 488, 492, 493, 494, 495, 496], "serhii": [119, 487, 488, 490, 491, 492, 493, 494, 495, 496], "storchaka": [119, 487, 488, 490, 491, 492, 493, 494, 495, 496], "eryk": [119, 488], "chad": [119, 480, 482, 483], "whitacr": 119, "graham": [119, 457, 483, 488], "wideman": 119, "michael": [120, 456, 457, 478, 479, 480, 481, 482, 483, 484, 489, 490, 491, 492, 495, 496], "foord": [120, 484, 489], "2616": [120, 256, 408, 410, 422, 489], "supplementari": [120, 353], "namedtemporaryfil": [120, 214, 375, 483], "tmp_file": 120, "the_pag": 120, "transmit": [120, 134, 138, 145, 154, 303, 351, 353, 376, 422, 424, 434, 481, 495], "someserv": 120, "northampton": 120, "hundredweight": 120, "tin": [120, 286], "door": [120, 131, 358], "somebodi": 120, "url_valu": 120, "full_url": [120, 410, 491], "dislik": [120, 404], "user_ag": 120, "win64": [120, 477, 492], "pretend_serv": 120, "getaddrinfo": [120, 138, 142, 155, 353, 441, 492, 493, 494], "404": [120, 164, 255, 256, 259, 277, 410, 422, 434, 435, 456, 487, 492], "403": [120, 255, 259, 456, 487], "401": [120, 255, 410, 456, 487, 492], "299": [120, 237], "599": [120, 237, 303], "basehttprequesthandl": [120, 256, 259, 408, 422, 489, 490], "shortmessag": [120, 259], "longmessag": [120, 259, 403, 484], "101": [120, 131, 255, 276, 333, 359, 361, 397, 404, 476, 484, 489], "202": [120, 196, 249, 255], "203": [120, 255], "204": [120, 255, 259, 399], "206": [120, 255], "304": [120, 255, 259, 494], "unauthor": [120, 255], "402": [120, 255, 397], "payment": [120, 276], "charg": [120, 265, 441, 467], "406": [120, 255], "407": [120, 255], "408": [120, 255], "410": [120, 255], "precondit": [120, 357, 479, 489], "413": [120, 255], "415": [120, 255], "media": [120, 166, 296, 334, 441], "416": [120, 255, 397], "417": [120, 255, 259], "502": [120, 255, 481], "503": [120, 255], "504": [120, 255, 360], "respond": [120, 237, 256, 259, 261, 284, 328, 350, 353, 357, 368, 384, 404, 422, 434, 435, 484], "fish": [120, 314, 404, 405, 414, 468, 491], "doctyp": [120, 254, 256, 329, 410, 425, 428, 489, 495], "dtd": [120, 254, 329, 410, 424, 429, 430, 431, 493, 494, 495], "w3": [120, 254, 329, 410, 426, 428, 441], "tr": [120, 190, 254, 316, 329, 410, 426, 428, 441], "xhtml1": [120, 410], "someurl": 120, "lift": [120, 399, 493, 494, 495], "add_handl": [120, 410], "some_handler_inst": 120, "build_open": [120, 257, 410], "install_open": [120, 410], "realm": [120, 222, 410], "cpanel": 120, "httppasswordmgrwithdefaultrealm": [120, 410], "add_password": [120, 410], "password_mgr": [120, 410], "knew": [120, 304, 485], "top_level_url": 120, "a_url": 120, "http_proxi": [120, 410], "httpdefaulterrorhandl": [120, 410], "8080": [120, 152, 256, 257, 353, 410, 434], "userinfo": [120, 410], "joe": [120, 164, 248, 399, 410, 492, 495], "proxy_support": 120, "request_method": [120, 410, 422], "getproxi": [120, 410], "setdefaulttimeout": [120, 353], "voidspac": [120, 484], "uk": [120, 179, 257, 360, 381, 484], "lee": [120, 481, 482, 484, 488, 489, 494], "snif": 120, "msie": [120, 258], "sv1": 120, "clr": 120, "4322": 120, "aspn": [120, 290], "promin": [121, 441, 485], "gunzip": [121, 248], "xf": [121, 307, 455], "cd": [121, 128, 131, 203, 276, 310, 403, 432, 483], "winzip": 121, "pkunzip": 121, "privileg": [121, 164, 303, 308, 353, 355, 358, 381, 420, 455, 490, 493], "pristin": 121, "pybuild": 121, "6a1": [121, 483], "2004": [121, 171, 196, 391, 441, 481], "abiflag": [121, 368, 465, 471, 489, 495], "distnam": 121, "python32": [121, 489], "painless": 121, "platbas": [121, 489], "userbas": [121, 370, 489], "user_sit": [121, 349, 370], "rpath": [121, 471, 475, 487], "stash": [121, 370], "typist": 121, "tild": [121, 207, 245, 309, 392], "addsitedir": [121, 349], "mental": 121, "trifl": [121, 370], "mnt": [121, 370], "immateri": [121, 447], "purelib": [121, 370, 414, 489], "platlib": [121, 370, 489], "pth": [121, 317, 349, 368, 369, 470, 477, 493], "20000731": 121, "112": [121, 199, 359, 397, 487, 495, 496], "linux2": [121, 368, 490], "dynload": [121, 368, 369, 471], "stock": [121, 356, 482, 489], "ver": 121, "getpwuid": [121, 308, 325], "expandus": [121, 180, 245, 257, 301, 309, 311, 335, 347, 364, 492, 495], "userprofil": [121, 309, 495], "homedr": [121, 309], "homepath": [121, 309], "quietli": [121, 481], "forcibli": [121, 239, 490, 491], "blib": 121, "implic": [121, 265, 298, 311, 314, 329, 409, 424, 445], "inappropri": [121, 227, 354, 362, 443], "foreseen": 121, "sourcefil": 121, "cpparg": 121, "judg": 121, "foomodul": 121, "libm": [121, 189, 471], "xcompil": 121, "o32": 121, "omf": 121, "coff": 121, "python25": 121, "coff2omf": 121, "python25_bcpp": 121, "_bcpp": 121, "foo_bcpp": 121, "bcpp": 121, "inferior": 121, "binutil": [121, 495], "90": [121, 160, 168, 276, 298, 333, 359, 399, 495], "20030111": 121, "pexport": 121, "dlltool": [121, 495], "dllname": [121, 284, 495], "libpython25": 121, "sourcewar": 121, "cygwin1": 121, "collabor": [122, 480], "institut": [122, 441], "semi": [122, 298, 307, 392], "virtualenv": [122, 414, 476, 490], "evolut": [122, 477, 478], "bitbucket": [122, 414], "somepackag": 122, "diminish": 122, "greet": [123, 320, 350, 351, 356, 401, 492], "raw_input": [123, 170, 485], "diff": [123, 156, 203, 207, 403, 478, 481, 484, 489], "has_kei": [123, 190, 477, 478, 479, 480, 485], "beneath": [123, 388, 428], "print_funct": [123, 124, 451, 483], "py3": [123, 468, 486, 489], "mycod": 123, "failunlessequ": [123, 403, 488], "assertequ": [123, 377, 403, 404, 405, 466, 484, 488, 489, 491, 495], "failifequ": [123, 403, 488], "assertnotequ": [123, 403, 488, 489], "failunless": [123, 403, 488], "asserttru": [123, 403, 484, 488, 489], "assert_": [123, 403, 488, 489], "failif": [123, 403, 488], "assertfals": [123, 403, 484, 488], "failunlessrais": [123, 403, 488], "cal": [123, 163, 410, 411], "assertrais": [123, 403, 466, 484, 486, 488, 490], "failunlessalmostequ": [123, 403, 488], "assertalmostequ": [123, 403, 484, 488, 489], "failifalmostequ": [123, 403, 488], "assertnotalmostequ": [123, 403, 484, 488, 489], "basestr": [123, 480, 485, 491], "iteritem": [123, 286, 479, 480, 481, 485], "iterkei": [123, 286, 479, 480, 481, 483, 485], "itervalu": [123, 286, 479, 480, 481, 485], "viewitem": [123, 484], "viewkei": [123, 484], "viewvalu": [123, 484], "execfil": [123, 480, 481, 485], "exitfunc": [123, 477, 481, 485], "funcattr": 123, "my_funct": [123, 456], "func_closur": [123, 485], "__closure__": [123, 443, 485], "new_featur": 123, "getcwdu": [123, 480], "getcwd": [123, 308, 309, 311, 377, 422, 466, 494], "someclass": [123, 314, 401, 404, 405, 477], "some_iter": 123, "imports2": 123, "itertools_import": 123, "ifilt": [123, 480], "izip": [123, 481], "ifilterfals": 123, "__metaclass__": [123, 479, 483, 485], "methodattr": 123, "im_func": [123, 483], "__nonzero__": [123, 485], "numliter": 123, "iscal": [123, 484, 485], "sequenceinclud": [123, 484, 485], "issequencetyp": 123, "ismappingtyp": 123, "isnumbertyp": 123, "irepeat": 123, "imul": [123, 306], "with_traceback": [123, 227, 451], "maxint": [123, 485], "backtick": [123, 159, 412, 485, 494], "set_liter": 123, "standarderror": [123, 483, 485], "sys_exc": 123, "exc_valu": [123, 356, 368, 377, 380, 396, 443, 484, 485, 488], "exc_typ": [123, 182, 348, 360, 368, 377, 380, 396, 405, 443, 485, 488], "exc_traceback": [123, 368, 377, 380, 396, 485, 488], "tuple_param": 123, "urllib2": [123, 410, 481, 483, 484, 485], "ws_comma": 123, "xrang": [123, 478, 479, 480, 481, 485], "xreadlin": [123, 478, 480, 481], "peg": [123, 446, 487, 488, 496], "617": [123, 446, 487, 488, 496], "parsabl": [123, 490, 496], "libcst": [123, 133, 496], "parso": [123, 133, 496], "nested_scop": [124, 451, 478, 479], "0b1": 124, "0a1": 124, "0a2": 124, "absolute_import": [124, 451, 482], "with_stat": [124, 451, 482, 483], "unicode_liter": [124, 451, 483], "generator_stop": [124, 227, 451, 492], "tbd": 124, "featurenam": [124, 431], "optionalreleas": 124, "mandatoryreleas": 124, "compilerflag": 124, "0a3": 124, "getoptionalreleas": 124, "getmandatoryreleas": 124, "predict": [124, 154, 239, 273, 359, 368, 428, 443, 470, 476, 489, 496], "compiler_flag": [124, 239], "council": [124, 488], "649": 124, "helloworld": [125, 450], "tim": [125, 361, 382, 476, 477, 478, 479, 480, 481, 482, 484, 488, 491, 492, 493, 496], "beauti": [125, 203], "phrase": [125, 255, 256, 262, 287, 307, 410, 445, 449, 450, 480, 483, 487, 490, 492], "proactiv": 125, "exemplifi": [125, 283, 456], "hypothet": [125, 307, 353, 477], "bandclass": 125, "teacher": [125, 399], "search_stud": 125, "student_nam": 125, "fenc": 125, "did_user_define_their_nam": 125, "my_nam": [125, 404], "print_user_nam": 125, "dinsdal": 125, "uncom": [125, 214, 261, 479], "jabberwocki": 125, "light": [126, 175, 189, 190, 483, 484, 486], "weight": [126, 173, 189, 216, 333, 359, 361, 387, 403, 493], "locktyp": 126, "start_new_thread": 126, "interrupt_main": [126, 487], "raise_sign": [126, 348], "allocate_lock": 126, "unlock": [126, 150, 229, 286, 297, 298, 320, 377, 380, 443, 482], "get_id": [126, 348, 367, 380, 381, 490], "get_native_id": [126, 380, 495], "netbsd": [126, 308, 318, 353, 380, 381, 488, 494], "stack_siz": [126, 380, 482], "768": [126, 380], "timeout_max": [126, 380], "a_lock": 126, "surviv": [126, 189, 241, 417], "abcmeta": [127, 443, 483, 489, 490, 491], "myabc": 127, "get_cache_token": [127, 491], "get_iter": 127, "myiter": [127, 401], "update_abstractmethod": 127, "my_abstract_method": 127, "my_abstract_classmethod": 127, "my_abstract_staticmethod": 127, "my_abstract_properti": 127, "_get_x": 127, "_set_x": 127, "__isabstractmethod__": [127, 490], "_fget": 127, "_fset": 127, "_fdel": 127, "abstractclassmethod": [127, 489, 490], "abstractstaticmethod": [127, 489, 490], "abstractproperti": [127, 483, 490], "594": [128, 134, 152, 154, 164, 165, 166, 186, 263, 287, 296, 302, 303, 310, 316, 350, 352, 355, 365, 374, 412, 423, 488], "mono": [128, 154, 310, 365, 416], "stereo": [128, 154, 310, 365, 416, 465], "quadro": 128, "nchannel": [128, 154, 310, 352, 365, 416], "samples": 128, "framer": [128, 352, 365, 416], "44": [128, 173, 199, 299, 333, 343, 402, 487, 490, 495, 496], "44100": [128, 310], "176": 128, "seekabl": [128, 162, 273, 365, 416, 437, 483], "ahead": [128, 276, 374, 381, 418, 425, 446, 465, 481], "writeframesraw": [128, 365, 416, 491], "setnfram": [128, 365, 416], "getnchannel": [128, 365, 416], "getsampwidth": [128, 365, 416], "getframer": [128, 365, 416], "getnfram": [128, 365, 416], "getcomptyp": [128, 365, 416], "getcompnam": [128, 365, 416], "getparam": [128, 365, 416, 491], "sampwidth": [128, 352, 365, 416], "nframe": [128, 352, 365, 397, 416, 470], "comptyp": [128, 365, 416], "compnam": [128, 365, 416], "getmark": [128, 365, 416], "readfram": [128, 365, 416], "uncompress": [128, 162, 248, 285, 347, 373, 436, 437, 439, 487, 489], "rewind": [128, 250, 273, 365, 416], "setpo": [128, 365, 399, 416], "writefram": [128, 365, 416, 491], "setnchannel": [128, 365, 416], "setsampwidth": [128, 365, 416, 491], "setframer": [128, 365, 416], "setcomptyp": [128, 365, 416], "ulaw": [128, 352, 365], "alaw": [128, 365], "g722": 128, "setparam": [128, 365, 416], "setmark": 128, "programnam": 131, "store_const": [131, 307], "append_const": [131, 307], "helpformatt": [131, 307], "myprogram": 131, "print_help": [131, 307], "parent_pars": 131, "foo_pars": 131, "bar_pars": 131, "yyi": [131, 447], "rawdescriptionhelpformatt": 131, "rawtexthelpformatt": 131, "metavartypehelpformatt": 131, "weird": 131, "dedent": [131, 261, 379, 392, 393, 442, 446, 450], "nbar": 131, "convert_arg_line_to_arg": 131, "set_default": [131, 307], "foonlei": 131, "store_fals": [131, 307], "foon": 131, "argumenterror": [131, 189], "_storeact": 131, "option_str": 131, "f1": [131, 230, 283, 298, 360, 442, 455], "f2": [131, 230, 298, 360, 442], "f4": [131, 479], "booleanoptionalact": 131, "format_usag": 131, "fooaction": 131, "yy": 131, "infil": [131, 133, 153, 204, 277, 316, 346, 395, 467, 486, 489], "_io": [131, 201, 489, 493], "argumenttypeerror": 131, "distanc": [131, 167, 168, 285, 290, 359, 384, 387, 399, 488, 495], "code_point": 131, "source_fil": 131, "dest_fil": 131, "datapath": 131, "short_titl": 131, "tale": 131, "citi": [131, 357, 411, 441], "downstream": [131, 282, 440, 488], "jsondecodeerror": [131, 277, 492], "scissor": 131, "frobbl": 131, "xyzz": 131, "badger": 131, "inher": [131, 132, 380, 414, 428], "cautiou": [131, 277, 286, 409], "bacon": [131, 173, 203, 265, 294, 360, 396, 410, 443], "bac": 131, "mmm": [131, 262], "ba": [131, 270, 276, 437, 487, 492], "parser_class": 131, "checkout": [131, 476, 484], "cmd1": 131, "cmd2": 131, "parser_a": 131, "parser_b": 131, "parser_foo": 131, "parser_bar": 131, "xyzyx": 131, "subparser_nam": 131, "subparser1": 131, "subparser2": 131, "add_argument_group": 131, "group1": [131, 334, 458], "group2": [131, 458], "736": 131, "get_default": 131, "print_usag": [131, 307], "format_help": 131, "parse_known_arg": 131, "arg_lin": 131, "myargumentpars": 131, "errorcatchingargumentpars": 131, "parse_intermixed_arg": [131, 494], "parse_known_intermixed_arg": 131, "unpars": [131, 133, 213, 266, 329, 428, 430, 496], "doit": 131, "monkei": [131, 404, 405], "optionpars": [131, 307, 480, 482], "add_opt": [131, 307, 480], "disable_interspersed_arg": [131, 307], "callback_": 131, "optionerror": [131, 307], "optionvalueerror": [131, 307], "compactli": [132, 454, 467, 480], "typecod": [132, 155, 298, 400, 467, 485], "frombyt": [132, 353, 489, 496], "fromunicod": 132, "buffer_info": 132, "byteswap": [132, 154, 491], "fromfil": [132, 203, 485], "fromstr": [132, 428, 489, 496], "unicodestr": 132, "enc": [132, 357], "tobyt": [132, 360, 484, 489, 496], "tofil": [132, 203, 485], "tostr": [132, 428, 484, 489, 491, 496], "tolist": [132, 360, 479, 484, 489], "u2641": 132, "asdl": [133, 482, 487, 496], "stmt": [133, 356, 382, 483], "type_ignor": [133, 392], "argtyp": [133, 189], "functiondef": 133, "decorator_list": 133, "type_com": [133, 392, 446, 495], "asyncfunctiondef": 133, "classdef": [133, 442], "augassign": [133, 446], "annassign": 133, "orels": [133, 483], "asyncfor": 133, "withitem": 133, "asyncwith": 133, "match_cas": 133, "excepthandl": 133, "finalbodi": 133, "trystar": 133, "importfrom": 133, "end_lineno": [133, 204, 227, 396, 446, 487, 495], "end_col_offset": [133, 204, 446, 495], "boolop": 133, "namedexpr": 133, "binop": [133, 483], "unaryop": 133, "ifexp": 133, "elt": 133, "setcomp": [133, 446], "dictcomp": [133, 446], "generatorexp": 133, "yieldfrom": 133, "cmpop": 133, "formattedvalu": 133, "joinedstr": 133, "expr_context": 133, "matmult": [133, 446], "lshift": [133, 306, 446], "rshift": [133, 306, 446], "bitor": [133, 446], "bitxor": [133, 446], "bitand": [133, 446], "uadd": [133, 446], "usub": [133, 446], "noteq": [133, 446], "lte": [133, 446], "gte": [133, 446], "isnot": [133, 446], "notin": [133, 446], "ifs": 133, "is_async": [133, 327], "posonlyarg": 133, "vararg": [133, 270], "kwonlyarg": [133, 270], "kw_default": 133, "asnam": 133, "context_expr": 133, "optional_var": 133, "matchvalu": 133, "matchsingleton": 133, "matchsequ": 133, "matchmap": 133, "matchclass": 133, "kwd_attr": 133, "kwd_pattern": 133, "matchstar": 133, "matcha": 133, "matchor": 133, "typeignor": 133, "_ast": [133, 482, 489], "_field": [133, 173, 401, 483, 484], "asterisk": [133, 262, 325, 360, 421, 428, 445, 451, 457, 494], "source_lin": 133, "nameconst": [133, 495], "extslic": [133, 496], "fantast": 133, "snake": [133, 173], "func_typ": [133, 446, 495], "115": [133, 276, 361, 397], "sin": [133, 167, 199, 290, 443, 480], "collaps": [133, 210, 274, 309, 311, 379, 491], "soc": 133, "otherexcept": [133, 227], "subpattern": [133, 442, 456, 487], "overal": [133, 188, 196, 208, 241, 250, 283, 299, 307, 323, 334, 361, 363, 382, 397, 443, 459, 484, 488, 491, 492], "point2d": [133, 401], "point3d": [133, 173, 401], "outermost": [133, 270, 360, 380, 455], "decorator1": 133, "decorator2": 133, "3115": [133, 400, 442, 443, 485, 490], "base1": [133, 455], "base2": [133, 455], "other_func": 133, "feature_vers": [133, 392, 495], "pycf_type_com": 133, "misplac": 133, "ast_obj": 133, "literal_ev": [133, 239, 483, 489, 494], "node_or_str": 133, "oneself": 133, "denial": [133, 239, 277, 329, 360, 373, 424, 443, 470, 487, 488, 494, 495, 496], "get_docstr": 133, "cleandoc": [133, 270], "get_source_seg": [133, 495], "fix_missing_loc": 133, "increment_lineno": 133, "copy_loc": 133, "new_nod": 133, "old_nod": 133, "iter_field": 133, "fieldnam": [133, 173, 188, 483, 486], "iter_child_nod": 133, "nodevisitor": [133, 483, 495], "generic_visit": 133, "visit_const": [133, 495], "nodetransform": [133, 483], "visit_num": [133, 495], "visit_str": [133, 495], "visit_byt": [133, 495], "visit_nameconst": [133, 495], "visit_ellipsi": [133, 495], "rewritenam": 133, "visit_nam": 133, "new_tre": 133, "yourtransform": 133, "annotate_field": 133, "include_attribut": 133, "pycf_allow_top_level_await": [133, 239, 495, 496], "asttoken": 133, "leoast": 133, "codemod": 133, "recoveri": [133, 215, 262, 341, 410, 446], "async_chat": [134, 152, 491], "collect_incoming_data": 134, "found_termin": 134, "incom": [134, 138, 145, 152, 227, 250, 259, 277, 298, 354, 357, 427, 489], "emscripten": [134, 135, 152, 164, 176, 179, 186, 224, 229, 237, 243, 247, 256, 259, 262, 272, 293, 298, 302, 303, 308, 320, 325, 337, 343, 344, 348, 350, 351, 353, 354, 355, 357, 364, 368, 371, 374, 380, 410, 414, 418, 434, 435, 440, 471, 488], "wasi": [134, 135, 152, 164, 176, 179, 186, 224, 226, 227, 229, 237, 243, 247, 256, 259, 262, 272, 293, 298, 302, 303, 308, 320, 325, 337, 343, 344, 348, 350, 351, 353, 354, 355, 357, 364, 368, 371, 374, 380, 410, 414, 418, 434, 435, 440, 471, 488], "wasm32": [134, 135, 152, 164, 176, 179, 186, 224, 237, 243, 256, 259, 262, 272, 293, 298, 302, 303, 308, 320, 343, 344, 348, 350, 351, 353, 354, 355, 357, 364, 368, 374, 380, 410, 414, 418, 434, 435, 440, 471, 488], "conserv": [134, 478, 481], "ac_in_buffer_s": 134, "ac_out_buffer_s": 134, "fifo": [134, 136, 146, 173, 276, 298, 308, 311, 331, 344, 358, 373, 493, 494], "handle_writ": [134, 152], "set_termin": 134, "close_when_don": 134, "discard_buff": 134, "emerg": [134, 284, 456, 477], "get_termin": 134, "encrypt": [134, 171, 186, 247, 262, 283, 303, 320, 325, 341, 351, 355, 357, 437, 477, 479, 480, 484, 489, 490, 491], "push_with_produc": 134, "http_request_handl": 134, "extran": [134, 277, 323, 384], "addr": [134, 145, 148, 152, 164, 183, 274, 344, 350, 353, 357, 377, 435, 489, 492], "ibuff": 134, "obuff": 134, "reading_head": 134, "cgi_data": 134, "parse_head": [134, 164, 256, 259], "clen": 134, "gethead": [134, 256], "bridg": [135, 141, 384, 489], "taskgroup": [136, 151, 488], "create_task": [136, 137, 138, 140, 141, 142, 146, 150, 151, 488, 492, 494, 495], "current_task": [136, 140, 151, 494, 496], "all_task": [136, 140, 151, 494, 496], "wait_for": [136, 146, 149, 150, 151, 298, 380, 488, 495, 496], "to_thread": [136, 151, 496], "run_coroutine_threadsaf": [136, 137, 151, 487, 492, 493], "as_complet": [136, 141, 151, 179, 495], "amongst": [136, 289, 357, 414], "priorityqueu": [136, 146, 331, 360, 483], "lifoqueu": [136, 146, 331, 360, 483], "create_subprocess_exec": [136, 138, 144, 149, 364, 495], "create_subprocess_shel": [136, 138, 149, 495], "open_connect": [136, 138, 145, 148, 492, 494], "open_unix_connect": [136, 148], "start_serv": [136, 138, 145, 148, 183, 380, 494], "start_unix_serv": [136, 138, 148], "cancellederror": [136, 139, 141, 147, 150, 151, 179, 495], "brokenbarriererror": [136, 150, 380, 488, 489], "trap": [137, 182, 199, 382, 479, 481, 490], "pythonasynciodebug": [137, 138, 201, 470], "set_debug": [137, 138, 142, 241, 492], "threadsaf": [137, 240, 276, 282, 333], "call_at": [137, 138, 142, 494], "slow_callback_dur": [137, 138], "call_soon_threadsaf": [137, 138, 142, 494], "fut": [137, 141], "coro_func": 137, "run_in_executor": [137, 138, 142, 151, 496], "coro": [137, 138, 140, 147, 151, 492], "set_except": [137, 141, 151, 179, 493], "321": [137, 199], "source_traceback": 137, "base_ev": [138, 368, 445], "prefac": [138, 145, 464], "get_running_loop": [138, 141, 142, 145, 148, 151, 494], "get_event_loop": [138, 142, 144, 492, 493, 494], "get_event_loop_polici": [138, 142, 144], "set_event_loop": [138, 142, 143, 144, 147, 495], "new_event_loop": [138, 142, 144, 147, 495], "timerhandl": 138, "create_serv": [138, 142, 145, 148, 353, 492, 493, 494, 495], "selectoreventloop": [138, 143, 144, 149, 488], "proactoreventloop": [138, 143, 144, 149, 488, 495], "run_until_complet": [138, 142, 492, 493, 495], "run_forev": [138, 142], "is_run": [138, 142], "is_clos": [138, 142, 145, 148, 492, 493, 494], "idempot": [138, 145, 180, 494], "irrevers": [138, 341], "shutdown_asyncgen": [138, 142, 368, 445, 493], "aclos": [138, 174, 182, 445, 487, 496], "shutdown_default_executor": [138, 147, 496], "567": [138, 141, 183, 199, 361, 467, 486, 494], "monoton": [138, 143, 146, 182, 203, 340, 381, 455, 480, 488, 490, 492], "create_futur": [138, 140, 141, 142, 145, 492, 493], "set_task_factori": [138, 142, 492], "get_task_factori": [138, 142, 492], "create_connect": [138, 140, 142, 145, 148, 353, 357, 483, 484, 488, 489, 492, 494, 495], "protocol_factori": [138, 145], "proto": [138, 148, 315, 353, 401, 410], "local_addr": [138, 145, 148], "server_hostnam": [138, 148, 357, 489, 494], "ssl_handshake_timeout": [138, 148, 494], "ssl_shutdown_timeout": [138, 148], "happy_eyeballs_delai": [138, 148, 495], "interleav": [138, 148, 207, 298, 484, 489, 494, 495], "af_inet6": [138, 353], "chronolog": [138, 493], "synopsi": [138, 328, 357], "connection_mad": [138, 142, 145], "sslcontext": [138, 145, 148, 237, 256, 262, 284, 303, 320, 351, 357, 410, 434, 484, 487, 489, 490, 491, 492, 493, 494], "create_default_context": [138, 237, 256, 262, 320, 351, 357, 410, 484, 491], "eyebal": [138, 495], "8305": 138, "250": [138, 237, 323, 350, 351, 356, 399, 484], "local_host": 138, "local_port": 138, "handshak": [138, 148, 357, 487, 491, 492, 493, 494, 495], "60": [138, 148, 160, 168, 179, 196, 199, 210, 276, 322, 333, 357, 359, 381, 396, 397, 399, 413, 450, 480, 482, 488, 489, 493, 495], "dual": [138, 353, 357, 441, 450], "undesir": [138, 478, 482, 488], "datatrack": 138, "ietf": [138, 249, 274, 357, 363], "rfc6555": 138, "create_datagram_endpoint": [138, 142, 145, 488, 493, 494, 495, 496], "remote_addr": [138, 145], "reuse_port": [138, 148, 353], "allow_broadcast": 138, "af_unix": [138, 143, 298, 353, 354], "sock_dgram": [138, 284, 353, 354, 484], "remote_host": 138, "remote_port": 138, "so_reuseport": [138, 353, 377], "broadcast": [138, 274, 353], "preexist": 138, "reuse_address": [138, 148, 488, 493, 494, 495, 496], "so_reuseaddr": [138, 152, 353, 377, 488, 493, 494, 495, 496], "pose": [138, 477, 481], "uid": [138, 155, 164, 259, 262, 308, 311, 319, 320, 325, 337, 347, 358, 373, 483, 484, 490, 492, 495], "packet": [138, 145, 154, 274, 284, 353, 354, 434, 484], "create_unix_connect": [138, 142, 143, 145, 148], "af_unspec": [138, 148, 353], "ai_pass": [138, 148, 353], "backlog": [138, 148, 152, 298, 353, 492], "time_wait": [138, 353], "expir": [138, 151, 226, 257, 258, 298, 340, 344, 348, 351, 353, 355, 357, 364, 380, 381, 410, 490], "serve_forev": [138, 145, 148, 183, 259, 298, 348, 354, 422, 434, 435, 482, 483, 490, 494], "create_unix_serv": [138, 142, 143, 145, 148, 494], "connect_accepted_socket": [138, 142, 145, 487, 493], "sendfil": [138, 139, 142, 145, 308, 347, 353, 357, 422, 490, 492, 494], "sendfilenotavailableerror": [138, 139], "start_tl": [138, 142, 148, 488, 494], "server_sid": [138, 357], "coder": [138, 154], "sporad": [138, 308], "add_read": [138, 142, 143, 145, 148], "remove_read": [138, 142], "add_writ": [138, 142, 143], "remove_writ": [138, 142], "sock_recv": [138, 142, 494], "sock_recv_into": [138, 142, 494], "recv_into": [138, 353, 357, 482, 484], "sock_recvfrom": [138, 142, 488], "recvfrom": [138, 353, 384, 492], "sock_recvfrom_into": [138, 142, 488], "recvfrom_into": [138, 353, 482, 484], "sock_sendal": [138, 142, 494], "sendal": [138, 353, 354, 357, 492], "sock_sendto": [138, 142, 488], "sendto": [138, 142, 145, 155, 353, 354, 492], "sock_connect": [138, 142, 492], "inet_pton": [138, 274, 353, 491, 495, 496], "sock_accept": [138, 142, 494], "sock_sendfil": [138, 142, 494], "getnameinfo": [138, 142, 155, 353, 441, 494], "sockaddr": [138, 155, 353], "connect_read_pip": [138, 142, 143, 145, 149], "readtransport": [138, 145, 494], "connect_write_pip": [138, 142, 143, 145, 149], "writetransport": [138, 145], "subprocess_shel": [138, 142, 143, 145, 149], "add_signal_handl": [138, 142, 143], "uncatch": 138, "remove_signal_handl": [138, 142, 143], "blocking_io": [138, 151], "urandom": [138, 249, 298, 308, 333, 357, 481, 484, 488, 491, 492, 493], "cpu_bound": 138, "set_default_executor": [138, 142, 488, 495], "set_exception_handl": [138, 142], "call_exception_handl": [138, 142], "get_exception_handl": [138, 142, 492, 493], "default_exception_handl": [138, 142], "asyncgen": 138, "get_debug": [138, 142, 241, 492], "devnul": [138, 149, 298, 308, 348, 364, 490], "universal_newlin": [138, 149, 364, 481, 494], "subprocesstransport": [138, 145], "srv": [138, 183, 494], "wait_clos": [138, 148, 494], "get_loop": [138, 141, 147, 494], "client_connect": 138, "is_serv": [138, 494], "trsock": 138, "transportsocket": 138, "mypolici": [138, 490], "defaulteventlooppolici": [138, 144], "selectselector": [138, 143, 344], "set_event_loop_polici": [138, 142, 144], "iocp": 138, "msdn": [138, 308], "abstracteventloop": [138, 140, 144, 496], "purposefulli": 138, "hello_world": 138, "reschedul": [138, 151], "display_d": [138, 151], "end_tim": [138, 151], "socketpair": [138, 145, 148, 348, 353, 481, 494], "rsock": [138, 145, 148], "wsock": [138, 145, 148], "recept": [138, 145, 148, 350], "ask_exit": 138, "signam": [138, 348], "3600": [138, 145, 151, 182, 196], "exceed": [139, 151, 199, 226, 227, 239, 284, 322, 337, 379, 396, 437, 439, 480, 481, 483, 493], "deadlin": [139, 151, 340], "invalidstateerror": [139, 141, 151, 179], "incompletereaderror": [139, 148], "limitoverrunerror": [139, 148], "baseeventloop": 140, "_make_socket_transport": 140, "_register_task": 140, "_unregister_task": 140, "_enter_task": 140, "_leave_task": 140, "base_futur": 141, "isfutur": 141, "_asyncio_future_block": 141, "ensure_futur": [141, 151, 492, 493], "iscoroutin": [141, 151, 270, 492], "isawait": [141, 174, 270, 404, 492], "mid": [141, 151], "wrap_futur": 141, "set_result": [141, 145, 151, 179], "add_done_callback": [141, 151, 179, 494], "remove_done_callback": [141, 151], "set_aft": 141, "mimic": [141, 196, 270, 282, 363, 396, 399, 484, 486], "lifecycl": [142, 417, 484, 491], "get_extra_info": [142, 145, 148, 183, 495], "set_protocol": [142, 145], "get_protocol": [142, 145], "is_read": [142, 145, 494], "pause_read": [142, 145, 494], "resume_read": [142, 145, 494], "writelin": [142, 145, 148, 171, 203, 273, 477], "can_write_eof": [142, 145, 148], "write_eof": [142, 145, 148, 357], "get_write_buffer_s": [142, 145], "get_write_buffer_limit": [142, 145, 492], "water": [142, 343, 492], "set_write_buffer_limit": [142, 145], "get_pid": [142, 145], "get_pipe_transport": [142, 145], "get_returncod": [142, 145], "send_sign": [142, 145, 149, 364, 483], "connection_lost": [142, 145], "pause_writ": [142, 145], "resume_writ": [142, 145], "drain": [142, 145, 148, 150, 357, 489], "data_receiv": [142, 145], "eof_receiv": [142, 145], "get_buff": [142, 145, 423], "buffer_upd": [142, 145], "datagram_receiv": [142, 145], "error_receiv": [142, 145], "pipe_data_receiv": [142, 145], "pipe_connection_lost": [142, 145], "process_exit": [142, 145], "abstracteventlooppolici": [142, 144], "proactor_ev": 143, "windows_ev": 143, "windows_util": [143, 494], "hpet": 143, "set_child_watch": [143, 144], "kqueueselector": [143, 344], "pollselector": [143, 344, 494], "get_child_watch": 144, "abstractchildwatch": 144, "windowsselectoreventlooppolici": [144, 494], "windowsproactoreventlooppolici": [144, 494], "threadedchildwatch": [144, 149], "multiloopchildwatch": 144, "safechildwatch": 144, "fastchildwatch": 144, "prohibit": [144, 207, 273, 277, 357, 422, 445, 487, 488, 494, 495, 496], "add_child_handl": 144, "returncod": [144, 145, 149, 364, 492, 495], "remove_child_handl": 144, "attach_loop": 144, "detach": [144, 155, 162, 273, 285, 308, 353, 357, 391, 417, 420, 445, 489, 490], "is_act": [144, 246], "inact": [144, 149, 456, 483], "sigchld": [144, 308, 348], "reap": 144, "waitpid": [144, 272, 308, 324, 482, 491, 492], "pidfdchildwatch": [144, 496], "pidfd": [144, 348], "goldilock": 144, "linearli": [144, 154, 343, 359], "myeventlooppolici": 144, "eventloop": 144, "basetransport": [145, 148, 495], "datagramtransport": 145, "baseprotocol": 145, "bufferedprotocol": [145, 494, 495], "datagramprotocol": [145, 488], "outgo": [145, 214, 353, 357, 489, 490], "getsockopt": [145, 353, 357, 484, 493], "peernam": [145, 148], "getpeernam": [145, 183, 350, 353, 357], "socknam": 145, "getsocknam": [145, 148, 353, 357], "sslsocket": [145, 357, 484, 487, 491, 492, 493, 494, 496], "peercert": 145, "getpeercert": [145, 357, 483, 491], "ssl_object": 145, "sslobject": [145, 357, 401, 492, 494], "watermark": [145, 148], "opportun": [145, 151, 171, 340, 405, 476], "list_of_data": 145, "sigkil": [145, 149, 298, 308, 348, 364, 375, 481, 494], "terminateprocess": [145, 149, 155, 298, 308, 364, 483, 484], "unidirect": [145, 298], "reassembl": 145, "sizehint": [145, 171, 343], "recipi": [145, 214, 222, 223, 350, 351, 354, 441], "undeliver": 145, "enobuf": [145, 226], "echoserverprotocol": 145, "8888": [145, 148], "echoclientprotocol": 145, "on_con_lost": 145, "myprotocol": 145, "dateprotocol": 145, "exit_futur": 145, "pipe_clos": 145, "check_for_exit": 145, "get_dat": [145, 149, 286], "qsize": [146, 298, 331], "get_nowait": [146, 276, 298, 331], "queueempti": 146, "unfinish": [146, 257, 298, 329, 331, 424], "task_don": [146, 298, 331, 482, 492], "unblock": [146, 150, 246, 298, 331, 348], "queueful": 146, "priority_numb": [146, 331], "sleep_for": 146, "slept": 146, "total_sleep_tim": 146, "started_at": 146, "total_slept_for": 146, "return_except": [146, 151], "threadpool": [147, 298], "loop_factori": 147, "tcp_echo_cli": 148, "client_connected_cb": 148, "feed_eof": 148, "readexactli": [148, 493], "readuntil": [148, 492, 493], "at_eof": 148, "handle_echo": 148, "print_http_head": 148, "urlsplit": [148, 409, 484, 493], "wait_for_data": 148, "base_subprocess": 149, "proc": [149, 254, 308, 364, 493], "zzz": [149, 447], "stdout_data": [149, 364, 481], "stderr_data": [149, 364, 481], "ctrl_c_event": [149, 308, 348, 364, 484], "ctrl_break_ev": [149, 308, 348, 364, 484], "creationflag": [149, 364, 481], "create_new_process_group": [149, 364], "fair": [150, 357, 384, 403, 409, 479, 493], "waiter_task": 150, "awaken": [150, 380], "is_set": [150, 380, 487], "wake": [150, 261, 343, 348, 380, 483], "notify_al": [150, 380, 487], "sem": 150, "example_barri": 150, "housekeep": [150, 380], "n_wait": [150, 380], "0x1053bb7c8": 151, "say_aft": 151, "task1": [151, 467], "task2": [151, 467], "tg": 151, "function_that_returns_a_future_object": 151, "some_python_coroutin": 151, "background_task": 151, "some_coro": 151, "robustli": [151, 484], "uncancel": [151, 488], "another_coro": 151, "bubbl": [151, 442], "exceptiongroup": [151, 227, 353, 396, 442, 458, 488], "baseexceptiongroup": [151, 227, 396, 442, 488], "aw": 151, "aggreg": [151, 276, 356, 403, 488], "long_running_task": 151, "overdu": 151, "new_deadlin": 151, "timeout_at": 151, "yai": [151, 464], "return_when": [151, 179], "all_complet": [151, 179], "first_complet": [151, 179], "first_except": [151, 179], "earliest": [151, 163, 196, 203, 381], "earliest_result": 151, "54": [151, 333, 347, 359, 438, 480, 487, 488], "took": [151, 182, 323, 382, 477], "get_stack": [151, 157], "oldest": [151, 241, 284, 380, 397, 417, 484, 489, 494, 495], "newest": 151, "print_stack": [151, 282, 396, 492], "get_coro": [151, 495], "get_nam": [151, 367, 495], "deni": [151, 226, 354, 443, 480], "cancel_m": 151, "ineffect": [151, 491], "make_request_with_timeout": 151, "make_request": 151, "make_another_request": 151, "unrelated_cod": 151, "fashion": [151, 179, 181, 183, 248, 277, 298, 323, 334, 353, 396, 401, 428, 442, 443, 445, 456, 481, 484, 490, 491], "suppres": 151, "emptiv": 152, "juggl": 152, "snap": 152, "invalu": [152, 207, 334], "use_pol": 152, "thereof": [152, 220, 239, 284, 308, 377, 380, 441, 444, 458], "handle_connect": 152, "handle_clos": 152, "handle_accept": [152, 489], "handle_read": 152, "handle_expt": 152, "oob": 152, "tenuous": 152, "banner": [152, 168, 170], "handle_error": [152, 354, 493], "condens": [152, 249, 283, 482], "passiv": [152, 237, 270, 476, 478, 493, 494, 495, 496], "partner": 152, "create_socket": 152, "buffer_s": [152, 273, 329, 483], "set_reuse_addr": 152, "dispatcher_with_send": 152, "file_dispatch": 152, "file_wrapp": [152, 422], "dup": [152, 173, 308, 353], "httpclient": 152, "nhost": [152, 357], "echohandl": 152, "echoserv": 152, "_exit": [153, 227, 228, 308], "unregistr": [153, 344], "counterfil": 153, "_count": 153, "incrcount": 153, "savecount": 153, "adject": [153, 461], "donni": 153, "sector": 153, "law": [154, 249, 352, 365, 381, 441, 482], "dvi": 154, "adpcm": 154, "fragment1": 154, "fragment2": 154, "adpcm2lin": 154, "adpcmfrag": 154, "lin2adpcm": 154, "newstat": 154, "alaw2lin": 154, "avg": 154, "avgpp": 154, "bia": [154, 323, 489], "findfactor": 154, "proport": [154, 180, 333, 359], "findfit": 154, "findmax": 154, "energi": 154, "maxim": [154, 203, 204, 210, 239, 241, 249, 261, 377, 455, 495], "getsampl": 154, "wherebi": [154, 164, 283, 314], "ima": 154, "lin2alaw": 154, "lin2lin": 154, "newwidth": 154, "new_fram": 154, "old_width": 154, "lin2ulaw": 154, "maxpp": 154, "minmax": 154, "ratecv": 154, "inrat": 154, "outrat": 154, "weighta": 154, "weightb": 154, "newfrag": 154, "sqrt": [154, 167, 179, 199, 290, 359, 481, 482, 483, 489, 495], "s_i": [154, 358], "tomono": 154, "lfactor": 154, "rfactor": 154, "tostereo": 154, "ulaw2lin": 154, "recombin": [154, 490], "mul_stereo": 154, "lsampl": 154, "rsampl": 154, "toler": [154, 167, 197, 274, 290, 492, 494], "loss": [154, 199, 239, 257, 273, 286, 290, 381, 410, 436, 441, 445, 459, 479, 481, 483, 487, 489, 493, 494, 495], "misinterpret": 154, "energet": 154, "echocancel": 154, "outputdata": 154, "inputdata": 154, "800": [154, 249, 285, 482, 484, 487, 489, 493], "out_test": 154, "in_test": 154, "ipo": 154, "prefil": 154, "postfil": 154, "breakpointhook": [155, 239, 368, 465, 470, 494], "run_fil": [155, 470], "run_interactivehook": [155, 368], "run_startup": [155, 470], "run_stdin": [155, 470], "addressof": [155, 189], "func_point": 155, "cdata": [155, 189, 329, 425, 430, 431], "create_string_buff": [155, 189, 482], "create_unicode_buff": [155, 189], "dlopen": [155, 189, 308, 368, 471, 479, 482], "dlsym": [155, 189], "get_errno": [155, 189, 483], "get_last_error": [155, 189, 483], "seh_except": [155, 189], "set_errno": [155, 189, 483], "set_last_error": [155, 189, 483], "string_at": [155, 189, 228, 490], "wstring_at": [155, 189], "code_object": 155, "flock": [155, 229, 286], "lockf": [155, 229, 286, 308, 479, 483, 490], "whenc": [155, 166, 229, 273, 293, 308, 461, 479], "sendcmd": [155, 237], "get_object": [155, 241, 487, 495], "get_referr": [155, 241, 397, 487], "dir_fd": [155, 239, 245, 308, 347, 487, 488, 490], "get_osfhandl": [155, 297], "open_osfhandl": [155, 297], "putlin": [155, 303, 320], "add_dll_directori": [155, 308, 495], "chflag": [155, 308, 347, 358, 483, 490], "gid": [155, 247, 308, 311, 325, 373, 483, 484, 490, 492], "forkpti": [155, 308], "fwalk": [155, 308, 490, 494], "topdown": [155, 308], "onerror": [155, 308, 317, 347, 494], "follow_symlink": [155, 308, 311, 347, 487, 490], "getxattr": [155, 308, 490], "killpg": [155, 308, 480], "pgid": [155, 308], "src_dir_fd": [155, 308], "dst_dir_fd": [155, 308], "listxattr": [155, 308, 490], "putenv": [155, 308, 321, 496], "removexattr": [155, 308, 490], "setxattr": [155, 308, 490], "startfil": [155, 308], "show_cmd": [155, 308], "unsetenv": [155, 308, 483, 496], "utim": [155, 308, 347, 490], "followlink": [155, 308, 483], "rglob": [155, 311, 488], "find_class": [155, 314], "prlimit": [155, 337, 491], "setrlimit": [155, 337, 377], "copymod": [155, 347], "copystat": [155, 347, 490], "unpack_arch": [155, 347, 487, 488, 489, 495, 496], "extract_dir": [155, 347], "pthread_kil": [155, 308, 348, 490], "thread_id": [155, 348, 381], "signalnum": [155, 348], "gethostbyaddr": [155, 308, 353], "gethostbynam": [155, 353], "getservbynam": [155, 353], "servicenam": [155, 353], "protocolnam": [155, 353], "getservbyport": [155, 353, 481], "sendmsg": [155, 353, 490, 492], "sethostnam": [155, 353, 490], "connection_handl": [155, 356], "enable_load_extens": [155, 356, 471, 484, 487, 489], "load_extens": [155, 356, 484, 487, 489], "_current_except": [155, 368], "_current_fram": [155, 368, 465, 482], "excepthook": [155, 165, 368, 377, 380, 465, 478, 487, 495, 496], "set_asyncgen_hooks_fin": [155, 368], "set_asyncgen_hooks_firstit": [155, 368], "closelog": [155, 371], "openlog": [155, 371], "logopt": [155, 371], "setlogmask": [155, 371], "maskpri": [155, 371], "mkdtemp": [155, 308, 375, 377, 417], "fullpath": [155, 375], "mkstemp": [155, 298, 375], "fullurl": [155, 410], "connectregistri": [155, 420], "computer_nam": [155, 420], "createkei": [155, 420], "sub_kei": [155, 420], "deletekei": [155, 420], "deletevalu": [155, 420], "disablereflectionkei": [155, 420, 483, 484], "enablereflectionkei": [155, 420, 483, 484], "enumkei": [155, 420], "enumvalu": [155, 420], "expandenvironmentstr": [155, 420, 483], "loadkei": [155, 420], "file_nam": [155, 420], "openkei": [155, 420], "pyhkei": [155, 420], "queryinfokei": [155, 420], "queryreflectionkei": [155, 420, 483, 484], "queryvalu": [155, 420], "value_nam": [155, 420], "savekei": [155, 420], "setvalu": [155, 420], "_winapi": 155, "createfil": 155, "desired_access": 155, "share_mod": 155, "creation_disposit": 155, "flags_and_attribut": 155, "createjunct": 155, "src_path": 155, "dst_path": 155, "createnamedpip": 155, "open_mod": 155, "pipe_mod": 155, "createpip": 155, "createprocess": [155, 364], "application_nam": 155, "command_lin": [155, 364], "current_directori": 155, "openprocess": 155, "process_id": [155, 353], "exit_cod": [155, 227], "pyobj_fromptr": 155, "4648": [156, 342], "facto": [156, 190, 257, 373, 409, 434, 461], "ascii85": [156, 491], "76": [156, 216, 359, 397, 399, 434], "2045": [156, 208, 210, 216, 217, 219, 434], "b64encod": [156, 249], "altchar": 156, "b64decod": [156, 249, 490], "a2b_base64": [156, 159], "standard_b64encod": 156, "standard_b64decod": 156, "urlsafe_b64encod": 156, "urlsafe_b64decod": 156, "b32encod": 156, "b32decod": [156, 491], "map01": 156, "oh": 156, "ey": [156, 199, 203, 456, 482, 492, 495], "b32hexencod": [156, 487], "b32hexdecod": [156, 487], "b16encod": 156, "b16decod": 156, "a85encod": [156, 491], "foldspac": 156, "wrapcol": 156, "adob": [156, 491], "btoa": 156, "a85decod": [156, 491], "ignorechar": 156, "x0b": [156, 360, 413], "b85encod": [156, 491], "b85decod": [156, 491], "decodebyt": [156, 171, 496], "encodebyt": [156, 171, 496], "zgf0ysb0bybizsblbmnvzgvk": 156, "1521": [156, 332], "multipurpos": [156, 332], "bdbquit": 157, "bpbynumb": 157, "bplist": 157, "deletem": 157, "bpformat": 157, "bpprint": 157, "botfram": 157, "stopfram": 157, "returnfram": 157, "trace_dispatch": 157, "c_call": [157, 368], "c_return": [157, 368], "c_except": [157, 368], "dispatch_lin": 157, "user_lin": 157, "dispatch_cal": 157, "user_cal": 157, "dispatch_return": 157, "user_return": 157, "dispatch_except": 157, "user_except": 157, "is_skipped_lin": 157, "module_nam": [157, 265, 377, 487, 494], "stop_her": 157, "break_her": 157, "break_anywher": 157, "argument_list": [157, 442, 445], "do_clear": 157, "set_step": 157, "set_next": 157, "set_return": 157, "set_until": 157, "set_trac": [157, 207, 239, 312, 368, 470, 494], "set_continu": 157, "set_quit": 157, "dispatch_": 157, "set_break": 157, "clear_break": 157, "clear_bpbynumb": 157, "clear_all_file_break": 157, "clear_all_break": 157, "get_bpbynumb": 157, "get_break": 157, "get_file_break": 157, "get_all_break": 157, "format_stack_entri": 157, "frame_lineno": 157, "lprefix": 157, "runev": [157, 312], "runctx": [157, 323, 395], "runcal": [157, 312, 323, 495], "checkfuncnam": 157, "a2b_": [159, 490], "a2b_uu": 159, "b2a_uu": [159, 494], "strict_mod": 159, "3548": [159, 481], "b2a_base64": [159, 493], "a2b_qp": 159, "b2a_qp": 159, "quotetab": [159, 171, 332], "istext": 159, "1522": [159, 332], "linefe": [159, 222, 346, 361, 450, 480], "crc_hqx": [159, 488], "crc": [159, 437, 439], "ccitt": [159, 365], "polynomi": [159, 276, 290], "0x1021": 159, "binhex4": [159, 496], "crc32": [159, 249, 439, 466, 467], "checksum": [159, 353, 373, 437, 439], "010x": 159, "b2a_hex": [159, 171], "bytes_per_sep": [159, 360], "hexlifi": 159, "xb9": 159, "x01": [159, 273, 274, 299, 353, 363, 413], "b901ef": 159, "b9": 159, "ef": [159, 173, 276, 409, 432], "b9_01ef": 159, "b901": 159, "a2b_hex": [159, 171, 491], "hexstr": 159, "invers": [159, 163, 167, 196, 199, 215, 223, 225, 239, 258, 274, 290, 306, 314, 333, 346, 356, 359, 360, 381, 445, 446, 483, 495], "liber": [159, 207], "fromhex": [159, 360, 459, 483, 488, 493, 494], "85": [159, 166, 303, 359, 492], "bisect_left": 160, "partit": [160, 276, 333, 347, 360, 482, 492, 495], "halv": [160, 353, 481, 484], "bisect_right": 160, "insort_left": 160, "domin": [160, 257], "insort_right": 160, "insort": [160, 467], "sortedcollect": 160, "straight": [160, 216, 220, 239, 298, 368, 403, 417, 426, 456, 477, 485, 495], "find_lt": 160, "find_l": 160, "find_gt": 160, "find_g": 160, "exam": [160, 359], "score": [160, 203, 356, 359, 467], "89": [160, 199, 240, 353, 359, 456, 464, 465, 486, 489], "70": [160, 196, 199, 333, 359, 379, 397, 456, 466, 467], "fdcba": 160, "77": [160, 199, 397, 399, 489], "titan": 160, "bird": 160, "1963": 160, "hitchcock": 160, "alien": [160, 380], "1986": [160, 196], "1960": 160, "by_year": 160, "romanc": 160, "hiller": 160, "_f": 161, "bz2file": [162, 285, 484, 486, 487, 490, 491, 496], "bz2compressor": 162, "bz2decompressor": [162, 492], "compresslevel": [162, 248, 373, 437, 494, 496], "xb": [162, 248, 285], "rt": [162, 239, 248, 285, 377, 399], "wt": [162, 239, 248, 285, 359], "bufferediobas": [162, 239, 248, 256, 259, 273, 285, 314, 354, 375, 384, 422, 483, 484, 488, 489, 490, 492, 493], "peek": [162, 173, 248, 273, 285, 417, 489], "read1": [162, 248, 273], "compressor": [162, 285, 439], "decompressor": [162, 285, 439], "max_length": [162, 285, 439, 492], "needs_input": [162, 285], "unused_data": [162, 285, 439], "donec": 162, "rhoncu": 162, "qui": 162, "sapien": 162, "sit": [162, 390, 432], "amet": 162, "molesti": 162, "fusc": 162, "scelerisqu": 162, "vel": 162, "augu": 162, "nec": 162, "ullamcorp": 162, "nam": 162, "rutrum": 162, "pretium": 162, "placerat": 162, "aliquam": 162, "tristiqu": 162, "lorem": 162, "cursu": 162, "interdum": 162, "laoreet": 162, "ultric": 162, "puru": 162, "pulvinar": 162, "gravida": 162, "euismod": 162, "magna": 162, "variu": 162, "justo": 162, "tincidunt": 162, "feugiat": 162, "pharetra": 162, "lacu": 162, "risu": 162, "vehicula": 162, "maecena": 162, "feli": 162, "pellentesqu": 162, "semper": 162, "nunc": 162, "nibh": 162, "ac": [162, 171, 173, 190, 276, 333, 334, 441, 471, 480], "elementum": 162, "dolor": 162, "luctu": 162, "curabitur": 162, "lacinia": 162, "ornar": 162, "consectetur": 162, "vestibulum": 162, "ratio": [162, 203, 235, 290, 359, 360, 399, 459, 490], "513595166163142": 162, "gen_data": 162, "chunksiz": [162, 179, 298, 318, 492], "nonrandom": 162, "myfil": [162, 273, 308, 403, 437, 455, 458, 467], "european": [163, 171, 484], "setfirstweekdai": 163, "gregorian": [163, 196], "prolept": [163, 196], "dershowitz": [163, 196], "reingold": [163, 196], "calendr": [163, 196], "prescrib": [163, 452], "8601": [163, 196, 203, 281, 356, 434, 488, 493], "firstweekdai": 163, "iterweekdai": 163, "itermonthd": [163, 494], "itermonthdai": 163, "itermonthdays2": 163, "itermonthdays3": [163, 494], "itermonthdays4": [163, 494], "monthdatescalendar": 163, "seven": [163, 199, 258, 405, 489], "monthdays2calendar": 163, "monthdayscalendar": 163, "yeardatescalendar": 163, "yeardays2calendar": 163, "yeardayscalendar": 163, "textcalendar": 163, "formatmonth": 163, "theyear": 163, "themonth": 163, "center": [163, 168, 190, 199, 262, 270, 360, 361, 384, 391, 399, 441, 443, 461, 481, 483, 490], "prmonth": 163, "formatyear": 163, "pryear": 163, "htmlcalendar": [163, 494], "withyear": 163, "formatyearpag": 163, "css": [163, 254, 489, 494], "cascad": 163, "sheet": [163, 399, 401], "formatmonthnam": 163, "cssclass": 163, "tue": [163, 196], "wed": [163, 196, 381], "fri": [163, 223, 489, 490], "cssclass_nodai": 163, "cssclasses_weekday_head": 163, "cssclass_month_head": 163, "cssclass_month": 163, "cssclass_year": 163, "cssclass_year_head": 163, "singular": [163, 244], "customhtmlc": 163, "nowrap": 163, "ital": [163, 190, 387], "localetextcalendar": [163, 488], "localehtmlcalendar": [163, 488], "formatweekdai": 163, "lc_time": [163, 281], "isleap": 163, "leapdai": 163, "y1": [163, 445, 456, 487], "y2": [163, 239, 456, 487], "centuri": [163, 196, 381, 489], "weekhead": 163, "monthrang": 163, "monthcalendar": 163, "prcal": 163, "timegm": [163, 381], "epoch": [163, 189, 223, 257, 262, 286, 303, 309, 356, 357, 373, 381, 434, 478], "day_nam": 163, "day_abbr": 163, "month_nam": [163, 450], "januari": [163, 166, 196, 333, 381, 441, 450, 478], "month_abbr": 163, "illegalmontherror": 163, "illegalweekdayerror": 163, "march": [163, 196, 360, 381, 399, 441, 466, 477, 481, 491], "mo": [163, 196, 244, 334, 360, 480, 493, 495], "tu": [163, 480], "fr": [163, 244, 286, 333, 450, 480, 494], "su": 163, "april": [163, 196, 450, 463, 477, 478], "august": [163, 482], "septemb": [163, 450, 477, 482, 490, 492], "octob": [163, 196, 441, 477, 479, 480, 483, 487, 488, 495, 496], "stylesheet": [163, 484], "fieldstorag": [164, 491, 492, 494], "parse_qsl": [164, 409, 483, 487, 493, 494, 495, 496], "multipart": [164, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221], "maxlen": [164, 173, 276, 401, 483, 484], "isindex": 164, "goodi": 164, "h1": [164, 249, 254, 256, 283, 435], "logdir": [164, 165], "keep_blank_valu": [164, 409], "minifieldstorag": 164, "getlist": [164, 492], "fileitem": 164, "userfil": 164, "linecount": 164, "getfirst": 164, "strict_pars": [164, 409], "parse_q": [164, 409, 483, 487, 493, 494, 495, 496], "parse_multipart": [164, 487, 493, 494, 495, 496], "pdict": 164, "megabyt": 164, "emailmessag": [164, 208, 210, 211, 214, 215, 216, 219, 221, 222, 256, 410, 491, 493], "get_content_typ": [164, 210, 214, 219], "print_environ": 164, "print_form": 164, "print_directori": 164, "print_environ_usag": 164, "hole": [164, 241, 308, 346, 375, 483, 484, 487], "hacker": [164, 333], "exploit": [164, 259, 285, 308, 373, 424, 443, 470, 491], "gullibl": 164, "dash": [164, 171, 190, 210, 219, 334, 346, 422], "0o755": 164, "0755": 164, "0o644": 164, "0o666": [164, 197, 308, 311, 412], "everybodi": [164, 258], "cryptic": 164, "yourhostnam": 164, "suspect": [164, 477], "userid": [164, 284, 401, 493], "suexec": 164, "liabil": [164, 441], "excerpt": [165, 199, 495], "ea": 166, "rmff": 166, "bigendian": 166, "inclhead": 166, "getnam": [166, 373, 380, 431, 487], "getsiz": [166, 308, 309], "ioerror": [166, 227, 229, 232, 239, 244, 257, 270, 273, 297, 298, 310, 347, 348, 408, 438, 465, 483, 484, 485, 490], "jerri": 166, "morrison": [166, 491], "electron": [166, 357, 441], "1985": [166, 356], "kahan": 167, "elementari": [167, 190, 399], "annex": [167, 290, 402, 450, 483], "4142135623730951j": 167, "modulu": [167, 304, 360, 368, 483, 489, 495], "phi": [167, 290], "counterclockwis": [167, 399], "radian": [167, 199, 290, 333, 399, 480, 495], "atan2": [167, 290], "\u03c0": [167, 290], "141592653589793": [167, 459, 489], "rect": [167, 189, 483], "log10": [167, 199, 290, 483], "aco": [167, 290], "arc": [167, 290, 399, 483, 484, 486, 489], "cosin": [167, 199, 290], "asin": [167, 290], "sine": [167, 199, 290], "atan": [167, 290, 483], "tangent": [167, 290, 399], "tan": [167, 290], "acosh": [167, 290, 483], "asinh": [167, 290, 483], "atanh": [167, 290, 483], "cosh": [167, 290], "sinh": [167, 290], "tanh": [167, 290], "isfinit": [167, 290, 489], "isinf": [167, 290, 360, 483], "isnan": [167, 290, 359, 360, 457, 483], "isclos": [167, 290, 492], "rel_tol": [167, 290, 492], "1e": [167, 239, 290, 361, 363, 445, 492], "abs_tol": [167, 290, 492], "tau": [167, 290, 493], "\u03c4": [167, 290, 493], "infj": [167, 493], "nanj": [167, 493], "curv": [167, 357, 399, 490], "enlighten": 167, "ado": 167, "iserl": 167, "powel": 167, "clarendon": 167, "1987": [167, 171, 196, 423], "pp165": 167, "211": [167, 303, 490], "completekei": [168, 312], "use_rawinput": 168, "cmdloop": 168, "intro": [168, 357, 484], "do_help": 168, "do_shel": 168, "postcmd": 168, "complete_foo": 168, "begidx": 168, "endidx": 168, "help_bar": 168, "help_": 168, "onecmd": 168, "precmd": 168, "emptylin": 168, "nonempti": [168, 204, 334, 360, 399, 418, 443], "completedefault": 168, "complete_": 168, "displaywidth": 168, "preloop": 168, "postloop": 168, "identchar": 168, "lastcmd": 168, "cmdqueue": 168, "doc_head": 168, "misc_head": 168, "undoc_head": 168, "ruler": 168, "drawn": [168, 190, 308, 399], "do_forward": 168, "playback": [168, 310], "do_playback": 168, "turtleshel": 168, "do_right": 168, "do_left": 168, "do_goto": 168, "do_hom": 168, "do_circl": 168, "do_posit": 168, "do_head": [168, 259], "do_color": 168, "do_undo": 168, "do_reset": 168, "do_by": 168, "bye": [168, 183, 262, 303, 399, 490], "do_record": 168, "rose": [168, 493], "spiral": 168, "180": [168, 249, 359, 399, 489], "rot_13": [169, 171], "pstat": [169, 323, 466, 478, 482], "interactiveinterpret": [170, 492], "__console__": 170, "interactiveconsol": [170, 335], "readfunc": 170, "exitmsg": 170, "compile_command": [170, 172], "runsourc": 170, "showsyntaxerror": 170, "runcod": 170, "showtraceback": [170, 492], "stuf": 170, "resetbuff": 170, "codecinfo": [171, 482], "getincrementalencod": [171, 490], "getincrementaldecod": 171, "encodedfil": 171, "data_encod": 171, "file_encod": 171, "transcod": [171, 422, 489], "iterencod": [171, 277], "base64_codec": 171, "iterdecod": 171, "bom_b": 171, "bom_l": 171, "bom_utf8": 171, "bom_utf16": 171, "bom_utf16_b": 171, "bom_utf16_l": 171, "bom_utf32": 171, "bom_utf32_b": 171, "bom_utf32_l": 171, "xdf": [171, 249, 319], "u266c": 171, "223": 171, "9836": 171, "strict_error": 171, "ignore_error": [171, 347], "replace_error": 171, "hh": [171, 196, 262, 381, 450, 477], "xxxx": [171, 450], "xxxxxxxx": [171, 450], "backslashreplace_error": 171, "xmlcharrefreplace_error": 171, "namereplace_error": 171, "d800": 171, "dfff": 171, "register_error": [171, 239, 273, 360, 480], "error_handl": [171, 429], "lookup_error": [171, 480], "getstat": [171, 333], "setstat": [171, 333], "utf_8": 171, "rescan": [171, 317], "recov": [171, 227, 235, 368, 412, 430, 484, 489], "firstlin": [171, 201], "huge": [171, 273, 477, 491], "reposit": [171, 173, 273], "resp": [171, 281, 303, 322, 492], "frontend": 171, "backend": [171, 190, 197, 356, 377, 405, 471], "00ff": [171, 489, 490], "charmap": 171, "BE": [171, 259, 441], "fffe": 171, "NO": [171, 207, 262, 388, 441], "ligatur": 171, "2060": [171, 262], "joiner": [171, 492], "payload": [171, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 256, 266, 484], "00000000": 171, "0000007f": 171, "0xxxxxxx": 171, "00000080": 171, "000007ff": 171, "110xxxxx": 171, "10xxxxxx": 171, "00000800": 171, "0000ffff": 171, "1110xxxx": 171, "00010000": 171, "0010ffff": 171, "11110xxx": 171, "notepad": 171, "0xef": 171, "0xbb": 171, "0xbf": 171, "improb": 171, "diaeresi": 171, "iso8859": 171, "utf16": 171, "utf32": 171, "euro": [171, 239, 484, 485], "ebcdic": [171, 491], "pc": [171, 190, 289, 421, 436, 437, 450, 471, 476, 483, 488], "big5": [171, 481], "tw": 171, "csbig5": 171, "chines": [171, 481], "big5hksc": [171, 481], "hksc": 171, "cp037": 171, "ibm037": 171, "ibm039": 171, "cp273": [171, 491], "ibm273": 171, "csibm273": 171, "cp424": 171, "ibm424": 171, "cp437": [171, 437], "437": 171, "ibm437": 171, "cp500": 171, "ibm500": 171, "western": [171, 381], "europ": [171, 179, 381, 440, 484], "cp720": [171, 484, 489], "cp737": 171, "cp775": 171, "ibm775": 171, "baltic": 171, "cp850": 171, "850": [171, 484], "ibm850": 171, "cp852": 171, "852": 171, "ibm852": 171, "eastern": [171, 196, 381, 493], "cp855": 171, "855": 171, "ibm855": 171, "bulgarian": 171, "byelorussian": 171, "macedonian": 171, "serbian": 171, "cp856": 171, "cp857": 171, "857": 171, "ibm857": 171, "turkish": 171, "cp858": [171, 484], "858": 171, "ibm858": 171, "cp860": 171, "860": 171, "ibm860": 171, "portugues": 171, "cp861": 171, "861": [171, 311], "ibm861": 171, "iceland": [171, 482], "cp862": 171, "862": 171, "ibm862": 171, "cp863": 171, "863": 171, "ibm863": 171, "cp864": 171, "ibm864": 171, "cp865": 171, "865": 171, "ibm865": 171, "danish": 171, "cp866": 171, "866": [171, 203, 495], "ibm866": 171, "cp869": 171, "869": 171, "gr": 171, "ibm869": 171, "cp874": 171, "cp875": 171, "cp932": [171, 481], "932": 171, "ms932": 171, "mskanji": 171, "kanji": 171, "cp949": [171, 481], "949": 171, "ms949": 171, "uhc": 171, "korean": [171, 481, 494], "cp950": [171, 481], "950": 171, "ms950": 171, "cp1006": 171, "urdu": 171, "cp1026": 171, "ibm1026": 171, "cp1125": [171, 491], "1125": 171, "ibm1125": 171, "cp866u": 171, "ruscii": 171, "ukrainian": [171, 491, 494], "cp1140": 171, "ibm1140": 171, "cp1250": [171, 180], "1250": 171, "cp1251": 171, "1251": 171, "1252": [171, 463, 467], "cp1253": 171, "1253": 171, "cp1254": 171, "1254": [171, 334], "cp1255": 171, "1255": 171, "cp1256": 171, "1256": 171, "cp1257": 171, "1257": 171, "cp1258": 171, "1258": 171, "vietnames": 171, "euc_jp": 171, "eucjp": 171, "uji": 171, "ji": [171, 481], "euc_jis_2004": 171, "jisx0213": [171, 481], "eucjis2004": 171, "euc_jisx0213": 171, "eucjisx0213": 171, "euc_kr": 171, "euckr": 171, "ksc5601": 171, "ks_c": 171, "5601": 171, "ksx1001": 171, "ks_x": 171, "gb2312": [171, 402, 481, 490], "csiso58gb231280": 171, "euc": [171, 209, 481], "cn": 171, "euccn": 171, "eucgb2312": 171, "1980": [171, 203, 437, 483], "ir": 171, "58": [171, 333, 359, 361], "gbk": [171, 481], "936": 171, "cp936": 171, "ms936": 171, "gb18030": [171, 481], "hz": [171, 481, 490], "hzgb": 171, "gb": [171, 357], "2312": 171, "iso2022_jp": 171, "csiso2022jp": 171, "iso2022jp": 171, "2022": [171, 196, 209, 249, 466, 481, 488], "jp": [171, 209, 441, 481], "iso2022_jp_1": 171, "iso2022_jp_2": 171, "iso2022_jp_2004": 171, "iso2022_jp_3": 171, "iso2022_jp_ext": 171, "iso2022_kr": 171, "csiso2022kr": 171, "iso2022kr": 171, "kr": [171, 481], "latin_1": [171, 209], "cp819": 171, "iso8859_2": 171, "latin2": [171, 356], "iso8859_3": 171, "latin3": 171, "l3": 171, "esperanto": 171, "maltes": 171, "iso8859_4": 171, "latin4": 171, "l4": 171, "iso8859_5": 171, "cyril": 171, "iso8859_6": 171, "iso8859_7": 171, "greek8": 171, "iso8859_8": 171, "iso8859_9": 171, "latin5": 171, "l5": 171, "iso8859_10": 171, "latin6": 171, "l6": [171, 490], "nordic": 171, "iso8859_11": 171, "iso8859_13": 171, "latin7": 171, "l7": 171, "iso8859_14": 171, "latin8": 171, "l8": 171, "celtic": 171, "iso8859_15": 171, "latin9": 171, "l9": 171, "iso8859_16": 171, "latin10": 171, "l10": 171, "johab": [171, 481], "cp1361": 171, "ms1361": 171, "koi8_r": 171, "koi8_t": [171, 492], "tajik": [171, 492], "koi8_u": 171, "kz1048": [171, 492], "kz_1048": 171, "strk1048_2002": 171, "rk1048": 171, "kazakh": [171, 492], "mac_cyril": 171, "maccyril": 171, "mac_greek": 171, "macgreek": 171, "mac_iceland": 171, "maciceland": 171, "mac_latin2": 171, "maclatin2": 171, "maccentraleurop": 171, "mac_centeuro": 171, "mac_roman": 171, "macroman": 171, "mac_turkish": 171, "macturkish": 171, "ptcp154": 171, "csptcp154": 171, "pt154": 171, "cp154": 171, "asian": [171, 402, 481], "shift_ji": 171, "csshiftji": 171, "shiftji": 171, "sji": 171, "s_ji": 171, "shift_jis_2004": 171, "shiftjis2004": 171, "sjis_2004": 171, "sjis2004": 171, "shift_jisx0213": 171, "shiftjisx0213": 171, "sjisx0213": 171, "s_jisx0213": 171, "utf_32": 171, "u32": 171, "utf_32_b": 171, "32be": 171, "utf_32_l": 171, "32le": 171, "utf_16": 171, "u16": 171, "utf_16_b": 171, "16be": 171, "utf_16_l": 171, "16le": 171, "utf_7": 171, "u7": 171, "u8": 171, "cp65001": [171, 490], "asymmetr": 171, "3490": [171, 480], "oem": [171, 493], "cp_oemcp": [171, 493], "palmo": 171, "3492": [171, 480], "raw_unicode_escap": 171, "bewar": [171, 227, 235, 277, 298, 345, 356, 357, 375, 447, 466, 485], "unicode_intern": [171, 490, 495], "base_64": 171, "bz2_codec": [171, 491], "hex_codec": [171, 491], "quopri_codec": 171, "quotedprint": 171, "quoted_print": 171, "uu_codec": 171, "zlib_codec": 171, "rot13": [171, 491], "caesar": 171, "cypher": 171, "nameprep": [171, 362], "idn": [171, 357, 494], "5891": 171, "5895": 171, "alliancefran\u00e7ais": [171, 480], "nu": [171, 480], "xn": [171, 357, 480, 494], "alliancefranais": [171, 480], "npb": [171, 480], "allowunassign": 171, "toascii": 171, "usestd3asciirul": 171, "commandcompil": 172, "subcontext": 173, "new_child": [173, 491], "baselin": [173, 382, 387], "bach": 173, "rembrandt": 173, "gogh": 173, "opera": [173, 418, 482], "carmen": 173, "584": [173, 308, 400, 417, 496], "multicontext": 173, "enthought": [173, 476], "codetool": 173, "pylookup": 173, "guest": [173, 353], "command_line_arg": 173, "flatten": [173, 210, 215, 216, 217, 219, 222, 276, 314, 360, 401, 457, 487, 491, 492, 496], "deepchainmap": 173, "inner": [173, 182, 204, 249, 251, 270, 334, 356, 360, 399, 401, 428, 442, 457, 481, 484, 489, 490], "eleph": 173, "lion": 173, "topmost": [173, 368, 482], "rapid": [173, 460, 495], "talli": [173, 484, 489, 490], "cnt": 173, "hamlet": [173, 477], "most_common": [173, 484], "1143": 173, "966": 173, "762": 173, "631": 173, "554": 173, "546": [173, 397], "514": [173, 284, 476, 480, 488], "bag": [173, 214, 455], "multiset": [173, 489], "gallahad": [173, 457, 486], "sausag": [173, 239, 360], "list_of_pair": 173, "intersect": [173, 360, 399, 443, 457, 480, 481, 483, 484], "unnecessarili": [173, 308], "knuth": [173, 199], "donald": [173, 357, 484, 491], "pronounc": [173, 489], "deck": [173, 333], "movement": [173, 190, 250, 399, 483, 489], "appendleft": [173, 481], "extendleft": 173, "popleft": [173, 276, 331, 457, 467, 481], "ghi": [173, 189, 282, 346, 481], "jkl": 173, "pyshel": [173, 199, 261, 334, 493, 494, 495], "moving_averag": 173, "43": [173, 186, 196, 237, 357, 360, 382, 456, 489, 495, 496], "robin": [173, 308, 428, 457, 495], "roundrobin": [173, 276], "delete_nth": 173, "bring": [173, 196, 261, 276, 361, 390, 404, 487, 488, 491, 492, 495, 496], "rot": [173, 479], "default_factori": [173, 194, 401], "__missing__": [173, 360, 404, 442, 443, 482, 489], "mississippi": [173, 360], "constant_factori": 173, "ran": [173, 207, 227, 364, 403, 483, 484], "typenam": [173, 322, 356, 483], "field_nam": [173, 361], "_1": [173, 484, 486], "_3": 173, "_sourc": [173, 494], "_field_default": [173, 401], "employeerecord": 173, "depart": [173, 239, 360], "paygrad": 173, "emp": 173, "_make": [173, 356, 363], "employe": [173, 401, 455], "companydata": 173, "fetchal": [173, 356, 482], "somenamedtupl": 173, "_asdict": [173, 483, 484, 486, 495], "_replac": [173, 409, 483], "partnum": 173, "inventori": [173, 194, 306], "newpric": 173, "pixel": [173, 384, 387, 391, 399], "premium": 173, "hypot": [173, 290, 495], "714": 173, "018": 173, "hardcov": 173, "isbn": [173, 384, 469], "writeabl": [173, 189, 239, 273, 289, 357, 364], "part_numb": 173, "lru": [173, 240], "k1": [173, 417], "k2": [173, 417], "popitem": [173, 174, 180, 276, 286, 303, 360, 443, 478, 480, 484], "od": [173, 484, 489], "move_to_end": [173, 489], "rearrang": [173, 360, 454, 467, 477, 480, 482, 484, 487, 496], "acdeb": 173, "bacd": 173, "od1": [173, 484], "od2": [173, 484], "lastupdatedordereddict": 173, "timeboundedlru": 173, "maxag": 173, "multihitlrucach": 173, "maxrequest": 173, "cache_aft": 173, "uncached_kei": 173, "request_count": 173, "cached_kei": 173, "function_result": 173, "uncach": [173, 308, 489], "supplant": 173, "initialdata": 173, "compli": [173, 199, 277, 286, 329, 441, 483], "format_map": [173, 360, 489, 492], "isprint": [173, 191, 360, 492], "maketran": [173, 360, 486, 489, 492], "_collections_abc": 174, "mutablesequ": [174, 360, 401, 485, 490, 492], "isdisjoint": [174, 360], "mutableset": [174, 360, 401], "mappingview": [174, 360, 401], "itemsview": [174, 360, 401], "keysview": [174, 360, 401], "valuesview": [174, 360, 401], "asyncgener": [174, 360, 401, 493], "asend": [174, 445, 496], "athrow": [174, 445, 496], "gencoro": 174, "myvar": 174, "listbasedset": 174, "lst": [174, 312], "abcdef": [174, 189, 273, 276, 334, 484, 491], "defghi": [174, 276], "_from_iter": 174, "_hash": 174, "orderedset": 174, "yiq": [175, 491], "hl": 175, "hue": [175, 488], "satur": [175, 489], "hsv": 175, "poynton": 175, "colorfaq": 175, "cambridgeincolour": 175, "htm": [175, 196, 259, 479, 480, 481, 482, 483, 484, 485], "rgb_to_yiq": 175, "yiq_to_rgb": 175, "rgb_to_hl": 175, "hls_to_rgb": 175, "rgb_to_hsv": 175, "hsv_to_rgb": 175, "qq": 176, "destdir": 176, "strip_prefix": 176, "prepend_prefix": 176, "coexist": [176, 465], "cpu_count": [176, 179, 298, 308, 487, 491], "uncheck": [176, 447, 470, 494], "source_date_epoch": [176, 326, 494], "hardlink": [176, 373, 496], "dupe": [176, 496], "multilevel": 176, "getrecursionlimit": [176, 227, 261, 368, 465, 477], "compile_dir": [176, 492, 494], "maxlevel": [176, 322, 336], "ddir": 176, "rx": [176, 334], "invalidation_mod": [176, 326, 494], "stripdir": [176, 496], "prependdir": [176, 496], "limit_sl_dest": [176, 496], "hardlink_dup": [176, 496], "pycinvalidationmod": [176, 326], "compile_fil": [176, 492], "fullnam": [176, 264, 265, 267, 268, 317, 438, 480], "compile_path": [176, 492], "skip_curdir": 176, "multitask": [177, 384], "preemptiv": 177, "323": [179, 493], "1235": 179, "chop": [179, 298, 309, 477, 481, 485], "cancel_futur": [179, 496], "src1": [179, 489], "dest1": [179, 489], "src2": [179, 489], "dest2": [179, 489], "src3": [179, 489], "dest3": [179, 489], "src4": 179, "dest4": [179, 489], "wait_on_b": 179, "wait_on_a": 179, "wait_on_futur": 179, "thread_name_prefix": [179, 493], "initarg": [179, 298, 494], "gracefulli": [179, 334, 348, 380, 445, 464, 484, 489], "brokenthreadpool": 179, "foxnew": 179, "cnn": [179, 197], "wsj": 179, "nonexist": [179, 422], "subdomain": 179, "load_url": 179, "promptli": [179, 298, 334, 458], "future_to_url": 179, "mp_context": [179, 494], "max_tasks_per_child": 179, "61": [179, 360, 381, 481], "brokenprocesspool": 179, "abruptli": [179, 357, 375, 380], "start_method": 179, "112272535095293": 179, "112582705942171": 179, "115280095190773": 179, "115797848077099": 179, "1099726899285419": 179, "is_prim": 179, "sqrt_n": 179, "set_running_or_notify_cancel": 179, "woken": [179, 483], "not_don": 179, "brokenexecutor": 179, "serveraliveinterv": 180, "compressionlevel": 180, "forwardx11": 180, "forg": 180, "topsecret": 180, "50022": 180, "configfil": 180, "another_config": 180, "read_str": [180, 489, 492], "nport": 180, "48484": 180, "read_dict": [180, 489, 494, 495, 496], "21212": 180, "getboolean": 180, "getint": 180, "getfloat": 180, "3de": [180, 357, 493], "cbc": [180, 353], "monster": [180, 379], "batchmod": 180, "sectcr": 180, "1000000": [180, 196, 235, 239, 298, 323, 382, 456, 484, 493], "14159265359": [180, 459, 461], "choru": 180, "lumberjack": [180, 322, 396], "night": 180, "key_without_valu": 180, "harm": [180, 307, 489], "can_values_be_as_wel": 180, "does_that_mean_anything_speci": 180, "multiline_valu": 180, "basicinterpol": [180, 488], "home_dir": 180, "my_dir": 180, "my_pictur": 180, "extendedinterpol": [180, 488, 489], "zc": 180, "buildout": [180, 489], "system_dir": 180, "macports_dir": 180, "arthur": [180, 360, 495], "shed": 180, "last_nam": [180, 188, 334], "jackson": [180, 491], "twosh": 180, "python_dir": 180, "optionxform": 180, "defaultsect": 180, "visibli": [180, 261], "section_nam": 180, "section_proxi": 180, "dict_typ": [180, 319], "section1": 180, "key1": [180, 442, 496], "key2": [180, 442, 496], "key3": [180, 496], "value3": [180, 496], "section2": 180, "keya": 180, "valuea": 180, "keyb": 180, "valueb": 180, "keyc": 180, "valuec": 180, "section3": 180, "allow_no_valu": [180, 484], "sample_config": [180, 484], "mysqld": [180, 484], "mysql": [180, 237, 484], "old_password": 180, "acid": 180, "innodb": 180, "space_around_delimit": 180, "comment_prefix": 180, "inline_comment_prefix": 180, "enabled_extens": 180, "another_extens": 180, "disabled_by_com": 180, "yet_another_extens": 180, "read_fil": [180, 283], "empty_lines_in_valu": 180, "gotcha": 180, "she": 180, "default_sect": 180, "parser_inst": 180, "getdecim": 180, "boolean_st": 180, "nope": [180, 456], "unsuit": [180, 333, 342, 428, 467, 478, 484], "anotherkei": 180, "larch": 180, "optcr": 180, "downright": 180, "counterintuit": 180, "add_sect": [180, 489], "an_int": 180, "a_bool": 180, "a_float": 180, "1415": [180, 199, 483], "evil": [180, 484], "nooptionerror": [180, 484], "remove_opt": [180, 307], "duplicatesectionerror": [180, 489], "duplicateoptionerror": [180, 489], "has_sect": 180, "has_opt": [180, 307], "readfp": [180, 291, 484, 488], "nosectionerror": 180, "fileobject": [180, 487], "remove_sect": 180, "cfgparser": 180, "readline_gener": 180, "max_interpolation_depth": 180, "interpolationerror": 180, "interpolationdeptherror": 180, "interpolationmissingoptionerror": 180, "interpolationsyntaxerror": 180, "missingsectionheadererror": 180, "parsingerror": [180, 488], "notimplementedtyp": [181, 400, 487], "ellipsistyp": [181, 400, 487], "pager": [181, 328], "abstractcontextmanag": [182, 360, 401, 493], "abstractasynccontextmanag": [182, 360, 401, 494], "contextmanag": [182, 360, 401, 482, 483, 489, 493], "managed_resourc": 182, "acquire_resourc": 182, "release_resourc": 182, "rerais": [182, 204, 298, 360, 442, 443, 458], "contextdecor": [182, 489], "asynccontextmanag": [182, 401, 405, 443, 494], "get_connect": 182, "acquire_db_connect": 182, "release_db_connect": 182, "get_all_us": 182, "my_gener": 182, "nullcontext": [182, 487, 494], "enter_result": 182, "ignore_except": 182, "process_fil": 182, "file_or_path": 182, "send_http": 182, "aiohttp": 182, "clientsess": 182, "somefil": [182, 218, 244, 308, 346, 395], "someotherfil": 182, "redirect_stdout": [182, 491, 492], "new_target": [182, 386], "redirect_stderr": [182, 492], "relinquish": [182, 299, 308, 380, 381], "mycontext": 182, "contextbaseclass": 182, "asynccontextdecor": [182, 487], "exitstack": [182, 488, 490, 494, 495], "enter_context": [182, 488], "pop_al": 182, "close_fil": 182, "asyncexitstack": [182, 488, 494, 495], "enter_async_context": [182, 488], "push_async_exit": 182, "push_async_callback": [182, 495], "need_special_resourc": 182, "acquire_special_resourc": 182, "release_special_resourc": 182, "acquisit": [182, 282, 380, 489], "resourcemanag": 182, "check_resource_ok": 182, "_cleanup_on_error": 182, "exc_detail": 182, "cleanup_need": 182, "perform_oper": 182, "cleanup_resourc": 182, "cb": [182, 276, 360], "track_entry_and_exit": [182, 489], "exc_tb": [182, 348, 360], "load_widget": [182, 489], "singleus": 182, "write_to_stream": 182, "outer_stack": 182, "inner_stack": 182, "copy_context": 183, "bleed": 183, "old_valu": 183, "client_addr_var": 183, "client_addr": 183, "render_goodby": 183, "8081": 183, "memo": [184, 314, 315, 446, 493], "copied_list": 184, "original_list": 184, "__copy__": 184, "__deepcopy__": 184, "constructor_ob": 185, "dispatch_t": [185, 314, 490], "pickler": [185, 314, 315, 486, 490, 495], "pickle_c": 185, "passlib": 186, "crack": 186, "method_sha512": 186, "salt": [186, 249, 341, 443, 470, 489, 490], "sha": [186, 249, 413, 482, 483, 487, 489, 490, 493], "method_sha256": 186, "method_blowfish": 186, "blowfish": [186, 494], "method_md5": 186, "md5": [186, 249, 251, 262, 351, 356, 357, 413, 471, 482, 483, 484, 485, 489, 491, 495, 496], "method_crypt": [186, 493], "weakest": 186, "method_": 186, "mksalt": [186, 490, 494], "perturb": 186, "999_999_999": 186, "5000": [186, 199], "2_147_483_648": 186, "exposur": [186, 490], "compare_digest": [186, 249, 251, 341, 484, 490], "compare_hash": 186, "cryptedpasswd": 186, "getpwnam": [186, 325, 364], "cleartext": [186, 284], "plaintext": [186, 237, 262, 490], "4180": 188, "dictread": [188, 493, 495], "dictwrit": [188, 489], "csvfile": 188, "fmtparam": 188, "list_dialect": 188, "quote_nonnumer": 188, "unquot": [188, 210, 219, 223, 254, 318, 409, 410], "spamread": 188, "quotechar": 188, "bake": [188, 334], "bean": [188, 334], "stringifi": [188, 396, 488], "spamwrit": 188, "quote_minim": 188, "writerow": [188, 489, 492], "register_dialect": 188, "unregister_dialect": 188, "get_dialect": 188, "new_limit": [188, 482], "restkei": 188, "restval": 188, "first_nam": [188, 334], "clees": [188, 428, 456, 495], "extrasact": 188, "writehead": [188, 489], "doublequot": 188, "excel_tab": 188, "unix_dialect": [188, 489], "sniffer": [188, 353], "sniff": 188, "has_head": [188, 257, 410], "heurist": [188, 203, 211, 217, 239, 486, 489], "quote_al": 188, "linetermin": 188, "quote_non": 188, "escapechar": 188, "quote_": 188, "skipinitialspac": 188, "csvreader": 188, "line_num": [188, 334, 482], "csvwriter": 188, "passwd": [188, 237, 311, 325, 376, 403, 410, 481, 482, 483], "someiter": 188, "unixpwd": 188, "linend": 188, "c_int": [189, 298, 482], "c_long": [189, 360], "cdll": [189, 482, 495], "windll": [189, 483], "oledl": [189, 483], "cdecl": 189, "stdcall": 189, "hresult": 189, "kernel32": [189, 368], "libc": [189, 272, 318, 364, 471, 482], "loadlibrari": 189, "_funcptr": 189, "getmodulehandlea": 189, "myownfunct": 189, "239": 189, "_stdcallfuncptr": 189, "user32": 189, "getmodulehandl": 189, "hmodul": 189, "lpcstr": 189, "lpmodulenam": 189, "getmodulehandlew": 189, "lpcwstr": 189, "yapaxi": 189, "310": 189, "1150640792": 189, "0x1d000000": 189, "erron": [189, 289, 307, 399, 424, 440, 477, 491, 492, 494, 496], "c_bool": [189, 483], "_bool": [189, 363, 483], "c_char": [189, 298], "c_wchar": 189, "c_byte": 189, "c_ubyt": 189, "c_short": [189, 298], "c_ushort": 189, "c_uint": 189, "c_ulong": 189, "c_longlong": 189, "__int64": 189, "c_ulonglong": 189, "c_size_t": 189, "c_ssize_t": [189, 489], "c_float": [189, 482], "c_doubl": [189, 298, 482], "c_longdoubl": 189, "c_char_p": [189, 482], "c_wchar_p": 189, "c_void_p": 189, "140018365411392": 189, "65533": 189, "c_": 189, "139966785747344": 189, "139966783348904": 189, "x00": [189, 249, 273, 274, 299, 334, 353, 360, 363, 413], "x00lo": 189, "c_buffer": 189, "beer": 189, "1234": [189, 199, 274, 328, 344, 360, 393, 413, 457, 483, 487, 492], "140000": [189, 361], "arm64": [189, 495, 496], "inhibit": [189, 265, 329], "_as_parameter_": 189, "200000": [189, 382], "000000": [189, 196, 381, 479], "from_param": 189, "typecheck": [189, 401], "restyp": [189, 482], "strchr": 189, "8059983": 189, "validhandl": 189, "winerror": [189, 227], "486539264": 189, "silli": [189, 307, 405], "126": [189, 274, 397, 495], "errcheck": 189, "byref": [189, 483], "sscanf": 189, "1400001049": 189, "_fields_": [189, 298, 360], "upperleft": 189, "lowerright": 189, "ofs": 189, "_pack_": 189, "pragma": 189, "bigendianstructur": [189, 360], "littleendianstructur": 189, "bigendianunion": 189, "littleendianunion": 189, "first_16": 189, "second_16": 189, "tenpointsarraytyp": 189, "artifici": [189, 428, 443, 465, 491], "mystruct": [189, 298], "point_arrai": 189, "arr": [189, 298], "pt": 189, "teninteg": 189, "c_long_array_10": 189, "oor": 189, "scene": [189, 399, 455, 461, 476], "lp_c_long": 189, "null_ptr": 189, "c_byte_array_4": 189, "c1": [189, 360], "c2": 189, "cfunctyp": 189, "winfunctyp": 189, "qsort": 189, "intarray5": 189, "ia": 189, "cmpfunc": 189, "py_cmp_func": 189, "cmp_func": 189, "in_dll": 189, "pythonapi": [189, 482], "opt_flag": 189, "struct_frozen": 189, "get_cod": [189, 265, 438, 491], "frozent": 189, "_pyimport_frozenbootstrap": 189, "_frozen_importlib": 189, "31764": 189, "_frozen_importlib_extern": 189, "41499": 189, "__hello__": 189, "p1": [189, 276, 299, 364, 442, 481, 488, 492], "hm": 189, "temp0": 189, "temp1": 189, "short_arrai": 189, "find_librari": [189, 493], "dylib": 189, "ldconfig": 189, "objdump": 189, "ld_library_path": [189, 493], "libbz2": 189, "agl": 189, "default_mod": 189, "use_errno": [189, 483], "use_last_error": [189, 483], "winmod": [189, 495], "dumpbin": 189, "succeed": [189, 263, 352, 353, 403, 442, 458, 481], "pydll": 189, "manpag": [189, 308, 493], "rtld_now": [189, 308, 490], "setlasterror": 189, "hijack": 189, "rtld_global": [189, 308, 368, 490, 495], "rtld_local": [189, 308, 490, 495], "_handl": 189, "prefabr": 189, "libraryload": 189, "dlltype": 189, "pyfunctyp": 189, "func_spec": 189, "paramflag": 189, "name_or_ordin": 189, "vtbl_index": 189, "iid": [189, 391], "messageboxw": 189, "winuserapi": 189, "winapi": [189, 364, 436], "hwnd": 189, "lptext": 189, "lpcaption": 189, "uint": 189, "utyp": 189, "wintyp": 189, "caption": 189, "getwindowrect": 189, "lprect": 189, "obj_or_typ": 189, "init_or_s": 189, "dllcanunloadnow": 189, "_ctype": [189, 441, 471, 484, 494], "dllgetclassobject": 189, "find_msvcrt": 189, "formaterror": [189, 286], "lasterror": [189, 483], "memmov": [189, 483], "memset": 189, "enlarg": 189, "_cdata": 189, "_object": 189, "from_buff": [189, 483], "from_buffer_copi": [189, 483], "from_address": 189, "_b_base_": 189, "_b_needsfree_": 189, "_simplecdata": 189, "c_int8": 189, "c_int16": 189, "c_int32": 189, "c_int64": 189, "c_uint8": 189, "c_uint16": 189, "c_uint32": 189, "c_uint64": 189, "py_object": [189, 482], "wparam": 189, "dword": 189, "pnext": 189, "_anonymous_": 189, "_u": 189, "lptdesc": 189, "typedesc": 189, "lpadesc": 189, "arraydesc": 189, "hreftyp": 189, "vt": [189, 191, 401, 450], "vartyp": 189, "td": [189, 196], "vt_ptr": 189, "some_typ": 189, "_length_": 189, "_type_": 189, "_pointer": 189, "a_norm": 190, "baudrat": 190, "beep": [190, 421, 463, 493], "color_cont": [190, 487], "color_numb": 190, "pair_numb": 190, "a_": 190, "def_prog_mod": 190, "reset_prog_mod": 190, "def_shell_mod": 190, "reset_shell_mod": 190, "delay_output": 190, "erasechar": 190, "cup": 190, "cud": 190, "cud1": 190, "cuu1": 190, "cuu": 190, "vpa": 190, "cr": [190, 191, 222, 450, 494], "confin": [190, 207], "bell": [190, 191, 384, 450, 482], "flushinp": 190, "typeahead": 190, "getmous": 190, "key_mous": 190, "bstate": 190, "buttonn_press": 190, "buttonn_releas": 190, "buttonn_click": 190, "buttonn_double_click": 190, "buttonn_triple_click": 190, "button_shift": 190, "button_ctrl": 190, "button_alt": 190, "button5_": [190, 487], "getsyx": 190, "getwin": 190, "putwin": 190, "has_extended_color_support": [190, 487], "256color": 190, "has_ic": 190, "has_il": 190, "region": [190, 261, 293, 297, 299, 308, 334, 384, 391, 399, 455, 483, 486, 488], "init_color": [190, 487], "fg": [190, 276, 360, 384, 391], "bg": [190, 384, 391, 399], "use_default_color": [190, 481], "is_term_res": 190, "nline": [190, 201], "ncol": 190, "resize_term": 190, "isendwin": 190, "deiniti": 190, "keynam": 190, "alt": [190, 191, 254, 261, 391, 477], "killchar": 190, "longnam": [190, 373], "terminfo": 190, "mouseinterv": 190, "elaps": [190, 284, 298, 308, 323, 344, 353, 380, 381, 489], "mousemask": 190, "availmask": 190, "oldmask": 190, "napm": 190, "pminrow": 190, "pmincol": 190, "sminrow": 190, "smincol": 190, "smaxrow": 190, "smaxcol": 190, "nl": [190, 191, 254, 353, 392, 393, 409, 441, 450, 483], "nonl": 190, "vertic": [190, 191, 246, 261, 312, 360, 361, 379, 384, 387, 389, 390, 391, 399, 442, 449, 450], "noqiflush": 190, "intr": 190, "susp": 190, "noraw": 190, "pair_cont": [190, 487], "putp": 190, "tput": 190, "putchar": 190, "qiflush": 190, "resetti": 190, "savetti": 190, "resizeterm": 190, "sigwinch": [190, 348], "get_escdelai": [190, 496], "set_escdelai": [190, 496], "get_tabs": [190, 496], "set_tabs": [190, 496], "setsyx": 190, "setupterm": 190, "termattr": 190, "termnam": 190, "tigetflag": 190, "capnam": 190, "tigetnum": 190, "tigetstr": 190, "tparm": 190, "4h": [190, 363], "breakout": 190, "unctrl": [190, 191], "ungetch": [190, 297], "update_lines_col": [190, 492], "unget_wch": [190, 490], "get_wch": [190, 490], "ungetmous": 190, "use_env": 190, "newterm": 190, "subwindow": 190, "addnstr": 190, "segfault": [190, 481, 482, 493, 494], "20190511": 190, "stuck": 190, "attroff": 190, "attron": 190, "attrset": 190, "bkgd": 190, "bkgdset": 190, "bl": 190, "acs_vlin": 190, "acs_hlin": 190, "acs_urcorn": 190, "acs_llcorn": 190, "acs_lrcorn": 190, "vertch": 190, "horch": 190, "chgat": [190, 483], "touchlin": 190, "redisplai": [190, 335, 480], "repaint": 190, "clearok": 190, "clrtobot": 190, "clrtoeol": 190, "cursyncup": 190, "delch": 190, "deleteln": 190, "derwin": 190, "subwin": 190, "echochar": 190, "getbegyx": 190, "getbkgd": 190, "getmaxyx": 190, "getparyx": 190, "getyx": 190, "hline": 190, "idcok": 190, "idlok": 190, "immedok": 190, "degrad": [190, 489], "wrefresh": 190, "inch": [190, 384], "insch": 190, "insdelln": 190, "insertln": 190, "insnstr": 190, "insstr": 190, "instr": [190, 204, 377, 491], "is_linetouch": 190, "is_wintouch": 190, "new_i": 190, "new_x": 190, "mvderwin": 190, "mvwin": 190, "notimeout": 190, "overlai": 190, "destwin": 190, "dminrow": 190, "dmincol": 190, "dmaxrow": 190, "dmaxcol": 190, "redrawln": 190, "beg": 190, "redrawwin": 190, "rendit": 190, "scrollok": 190, "setscrreg": 190, "standend": 190, "standout": 190, "subpad": 190, "syncdown": 190, "syncok": 190, "syncup": 190, "touchwin": 190, "untouchwin": 190, "vline": 190, "__version__": [190, 259, 403, 490, 492, 496], "ncurses_vers": [190, 495], "a_altcharset": 190, "dim": 190, "a_invi": 190, "a_ital": 190, "a_protect": 190, "a_horizont": 190, "a_left": 190, "a_low": 190, "a_right": 190, "a_top": 190, "a_vert": 190, "a_attribut": 190, "a_chartext": 190, "a_color": 190, "key_": 190, "keycap": 190, "key_min": 190, "key_break": 190, "key_down": 190, "arrow": [190, 261, 312, 390, 391, 399, 458], "key_right": 190, "key_backspac": 190, "key_f0": 190, "key_fn": 190, "key_dl": 190, "key_il": 190, "key_dc": 190, "key_ic": 190, "key_eic": 190, "key_clear": 190, "key_eo": 190, "key_eol": 190, "key_sf": 190, "key_sr": 190, "key_npag": 190, "key_stab": 190, "key_ctab": 190, "key_catab": 190, "key_ent": 190, "key_sreset": 190, "key_reset": 190, "key_print": 190, "key_ll": 190, "key_a1": 190, "key_a3": 190, "key_b2": 190, "key_c1": 190, "key_c3": 190, "key_btab": 190, "key_beg": 190, "key_cancel": 190, "key_clos": 190, "key_command": 190, "key_copi": 190, "key_creat": 190, "key_end": 190, "key_exit": 190, "key_find": 190, "key_help": 190, "key_mark": 190, "key_messag": 190, "key_mov": 190, "key_next": 190, "key_open": 190, "key_opt": 190, "key_previ": 190, "prev": [190, 391], "key_redo": 190, "redo": [190, 261], "key_refer": 190, "key_refresh": 190, "key_replac": 190, "key_restart": 190, "key_resum": 190, "key_sav": 190, "key_sbeg": 190, "key_scancel": 190, "key_scommand": 190, "key_scopi": 190, "key_screat": 190, "key_sdc": 190, "key_sdl": 190, "key_select": 190, "key_send": 190, "key_seol": 190, "key_sexit": 190, "key_sfind": 190, "key_shelp": 190, "key_shom": 190, "key_sic": 190, "key_sleft": 190, "key_smessag": 190, "key_smov": 190, "key_snext": 190, "key_sopt": 190, "key_sprevi": 190, "key_sprint": 190, "key_sredo": 190, "key_sreplac": 190, "key_sright": 190, "key_srsum": 190, "key_ssav": 190, "key_ssuspend": 190, "key_sundo": 190, "key_suspend": 190, "key_undo": 190, "key_res": 190, "key_max": 190, "key_f1": 190, "key_f2": 190, "key_f3": 190, "key_f4": 190, "twelv": [190, 391], "crude": 190, "acs_bbss": 190, "acs_block": 190, "acs_board": 190, "acs_bsb": 190, "acs_bssb": 190, "acs_bsss": 190, "acs_bte": 190, "acs_bullet": 190, "bullet": [190, 314], "acs_ckboard": 190, "stippl": 190, "acs_darrow": 190, "acs_degre": 190, "acs_diamond": 190, "acs_gequ": 190, "acs_lantern": 190, "lantern": 190, "acs_larrow": 190, "acs_lequ": 190, "acs_lte": 190, "acs_nequ": 190, "acs_pi": 190, "acs_plu": 190, "acs_rarrow": 190, "acs_rte": 190, "acs_s1": 190, "acs_s3": 190, "acs_s7": 190, "acs_s9": 190, "acs_sbb": 190, "acs_sbsb": 190, "acs_sbss": 190, "acs_ssbb": 190, "acs_ssb": 190, "acs_sssb": 190, "acs_ssss": 190, "crossov": 190, "acs_sterl": 190, "pound": [190, 203, 453], "sterl": 190, "acs_tte": 190, "acs_uarrow": 190, "color_blu": 190, "color_cyan": 190, "greenish": 190, "color_green": 190, "color_magenta": 190, "purplish": 190, "color_yellow": 190, "netscap": [190, 257, 286, 418, 478, 481, 483], "bbedit": [190, 474], "framemak": 190, "uli": 190, "ulx": 190, "lry": 190, "lrx": 190, "stripspac": 190, "do_command": 190, "land": [190, 304], "soh": 191, "stx": 191, "etx": 191, "enq": 191, "enquiri": 191, "bel": [191, 450], "ht": [191, 333, 359, 399], "ff": [191, 203, 239, 334, 363, 450], "dle": 191, "dc1": 191, "xon": 191, "dc2": 191, "dc3": 191, "xoff": 191, "dc4": 191, "nak": 191, "syn": 191, "etb": 191, "em": [191, 334], "esc": 191, "mnemon": [191, 283, 357, 391, 479], "teleprint": 191, "predat": [191, 203, 298, 409], "isalpha": [191, 360], "isdigit": [191, 341, 360], "islow": [191, 341, 360], "isascii": [191, 360, 494], "isblank": 191, "iscntrl": 191, "0x1f": [191, 487], "0x7f": [191, 360], "isgraph": 191, "ispunct": 191, "isspac": [191, 360], "isxdigit": 191, "hexdigit": [191, 296, 361, 450], "isctrl": 191, "ismeta": 191, "anded": 191, "ored": 191, "controlnam": 191, "thirti": [191, 331], "bottom_panel": 192, "new_panel": 192, "top_panel": 192, "update_panel": 192, "set_userptr": 192, "userptr": 192, "557": [194, 397, 494], "inventoryitem": 194, "unit_pric": 194, "quantity_on_hand": 194, "total_cost": 194, "unsafe_hash": [194, 401], "match_arg": [194, 401], "kw_onli": [194, 401, 487], "weakref_slot": 194, "dunder": [194, 450, 495], "__match_args__": [194, 442, 443, 456, 487], "class_or_inst": 194, "classvar": [194, 401, 488, 493], "initvar": 194, "asdict": 194, "dict_factori": [194, 356], "astupl": 194, "tuple_factori": 194, "make_dataclass": 194, "cls_name": [194, 225], "add_on": 194, "__post_init__": 194, "forewarn": 194, "is_dataclass": 194, "is_dataclass_inst": 194, "frozeninstanceerror": 194, "databasetyp": 194, "my_databas": 194, "intconversiondescriptor": 194, "_default": 194, "datetyp": 196, "differenti": [196, 199, 335, 410, 487, 489, 490, 493, 496], "categor": [196, 307, 334, 415, 445], "polit": [196, 237, 477], "daylight": [196, 223, 381, 440, 496], "metr": 196, "mile": 196, "est": [196, 381, 489, 493], "edt": [196, 381, 490, 493], "minyear": 196, "maxyear": 196, "utcoffset": 196, "29000": 196, "29156": 196, "tiebreak": 196, "t1": [196, 199, 276, 401, 414], "t2": [196, 199, 276, 401, 414], "t3": [196, 199, 307, 401], "uuuuuu": 196, "68400": 196, "total_second": [196, 484], "270": [196, 399], "another_year": 196, "84": [196, 359, 493, 495], "31536000": 196, "ten_year": 196, "3650": 196, "nine_year": 196, "3285": 196, "three_year": 196, "1095": [196, 303], "2038": [196, 381], "fromordin": [196, 494], "toordin": 196, "fromisoformat": [196, 356, 488, 494], "date_str": 196, "yyyi": [196, 262], "yyyyyi": 196, "dd": [196, 262, 276, 307], "ooo": [196, 450], "2019": [196, 359, 470, 495], "20191204": 196, "2021": [196, 441, 463, 483, 487], "w01": 196, "fromisocalendar": [196, 495], "isocalendar": [196, 495, 496], "date2": 196, "date1": 196, "timetupl": 196, "struct_tim": [196, 262, 286, 381, 493], "ydai": 196, "isocalendard": 196, "mktime": [196, 223, 381, 489], "2007": [196, 384, 441, 483], "my_birthdai": 196, "time_to_birthdai": 196, "730920": 196, "730920th": 196, "70th": 196, "tz": [196, 377, 381, 440], "gettimeofdai": [196, 381], "utcnow": 196, "utcfromtimestamp": [196, 357], "2011": [196, 217, 357, 428, 441, 443, 470, 489], "20111104": 196, "04t00": 196, "23z": 196, "20111104t000523": 196, "2t00": 196, "283000": 196, "14400": 196, "datetime2": 196, "datetime1": 196, "comparand": 196, "timetz": 196, "astimezon": [196, 203, 440, 490, 493, 495], "astz": 196, "dt": [196, 223, 434, 440, 496], "fromutc": 196, "tm_isdst": [196, 381], "utctimetupl": 196, "spill": 196, "timespec": [196, 493], "ddthh": 196, "ffffff": [196, 399], "132263": 196, "18t15": 196, "08": [196, 223, 259, 282, 357, 381, 440, 496], "27t00": 196, "000100": 196, "25t00": 196, "01t12": 196, "79043": 196, "79060": 196, "325": [196, 199, 482], "30pm": 196, "kabul": 196, "afghanistan": 196, "1945": 196, "thereaft": [196, 261, 281, 410, 463], "kabultz": 196, "utc_move_d": 196, "1944": 196, "pep495": 196, "tz1": 196, "dt1": 196, "dt2": 196, "dt3": 196, "midnight": [196, 284, 483, 489, 492], "obscur": [196, 207, 404, 483, 491, 492, 494], "13936": [196, 492], "time_str": 196, "t04": 196, "t042301": 196, "000384": 196, "01z": 196, "123456": 196, "geograph": 196, "dston": 196, "dstoff": 196, "america": [196, 440, 441, 484, 496], "york": 196, "straddl": 196, "dtoff": 196, "dtdst": 196, "tzinfo_exampl": 196, "_time": 196, "stdoffset": 196, "dstoffset": 196, "altzon": [196, 381], "dstdiff": 196, "localtimezon": 196, "stamp": [196, 399, 455, 480, 481], "dst_diff": 196, "_isdst": 196, "first_sunday_on_or_aft": 196, "days_to_go": 196, "olson": 196, "pytz": 196, "twinsun": 196, "2am": 196, "dststart_2007": 196, "dstend_2007": 196, "dststart_1987_2006": 196, "dstend_1987_2006": 196, "1967": [196, 399, 484], "dststart_1967_1986": 196, "dstend_1967_1986": 196, "us_dst_rang": 196, "dststart": 196, "dstend": 196, "1966": 196, "ustimezon": 196, "reprnam": 196, "stdname": [196, 323], "dstname": [196, 347], "gap": [196, 284, 286, 489], "std_time": 196, "dst_time": 196, "cst": 196, "cdt": 196, "mountain": [196, 441], "mst": 196, "mdt": 196, "pacif": [196, 440], "pst": [196, 440, 496], "pdt": [196, 440, 496], "0500": [196, 223], "2016": [196, 357, 461, 468, 476, 493, 494], "u0": [196, 493], "tzdata": [196, 440, 496], "globe": 196, "civil": 196, "59pm": 196, "en_u": [196, 492], "de_d": [196, 281, 492], "sonntag": 196, "montag": 196, "samstag": 196, "dez": 196, "januar": 196, "februar": 196, "dezemb": 196, "0002": 196, "2014": [196, 357, 483, 484, 491], "9998": [196, 493], "pm": [196, 207, 281, 312, 368, 381], "000001": 196, "hhmm": [196, 262, 381], "0400": [196, 490], "1030": 196, "063415": 196, "030712": 196, "345216": 196, "002": [196, 323, 360], "1988": [196, 203, 373, 483], "88": [196, 359, 397, 492], "c89": [196, 483], "broadli": [196, 401, 484], "01t00": 196, "0330": 196, "japan": [196, 281], "jst": 196, "gent": 196, "oracl": [197, 356, 482, 490], "whichdb": [197, 485], "cabl": 197, "open_flag": 197, "firstkei": 197, "nextkei": 197, "reorgan": [197, 208, 478, 483, 486, 488, 493, 495], "unwritten": 197, "pag": 197, "dumbdbm": [197, 485], "breakdown": [198, 199], "bottleneck": [198, 240, 486], "intrus": 198, "paramount": 199, "3000000000000003": 199, "5511151231257827e": 199, "017": 199, "customari": [199, 379, 441, 465, 470], "monetari": [199, 281, 482, 494], "schoolbook": 199, "multiplicand": [199, 467], "5600": 199, "getcontext": [199, 467, 481], "prec": [199, 467, 481, 482, 483], "142857": [199, 207], "1428571428571428571428571429": [199, 481], "modest": [199, 466], "inexact": [199, 308, 459, 490], "prejudic": 199, "unround": 199, "coeffici": [199, 276, 290, 359, 360, 361, 480, 491], "round_ceil": [199, 481], "round_down": [199, 481], "round_floor": 199, "round_half_down": 199, "round_half_even": [199, 481], "round_half_up": 199, "round_up": 199, "round_05up": 199, "clamp": [199, 489, 490], "invalidoper": [199, 481, 483, 484, 490], "divisionbyzero": [199, 481], "subnorm": 199, "floatoper": [199, 490], "sticki": [199, 358, 373, 391], "emin": [199, 490], "emax": [199, 490], "140000000000000124344978758017532527446746826171875": 199, "4142135623730951": 199, "414213562373095048801688724": 199, "1415926535": 199, "7182818285": 199, "85987": 199, "85988": 199, "1e9999999999999999999": 199, "circu": [199, 239, 454], "87": [199, 262, 359, 364], "5058": 199, "718281828459045235360287471": [199, 483], "ln": [199, 261, 483, 490], "302585092994045684017991455": 199, "quantiz": [199, 490], "setcontext": 199, "basiccontext": [199, 490], "extendedcontext": [199, 490], "myothercontext": 199, "142857142857142857142857142857142857142857142857142857142857": 199, "142857143": [199, 481], "143": [199, 262, 397, 399, 479], "clear_flag": 199, "355": [199, 235], "113": [199, 235, 464], "14159292": 199, "snan": [199, 484], "devan\u0101gar\u012b": 199, "fullwidth": 199, "uff10": 199, "uff19": 199, "losslessli": [199, 203, 333, 443, 459, 489], "100000000000000088817841970012523233890533447265625": [199, 486, 489], "00000": 199, "321e": 199, "as_integer_ratio": [199, 235, 360, 459, 483, 493, 495], "denomin": [199, 235, 304, 360, 459, 483, 493, 495], "157": [199, 493], "as_tupl": [199, 483], "decimaltupl": 199, "compare_sign": 199, "compare_tot": 199, "compare_total_mag": 199, "copy_ab": 199, "conjug": [199, 304, 360, 483], "copy_neg": 199, "copy_sign": 199, "561702493119680037517373933e": 199, "139": [199, 397, 479], "from_float": [199, 235, 459, 484, 486, 489], "0x1": [199, 360, 459, 483, 486, 487], "999999999999ap": 199, "1000000000000000055511151231257827021181583404541015625": [199, 459, 484], "fma": 199, "fuse": 199, "is_canon": [199, 484], "is_finit": 199, "is_infinit": 199, "is_nan": 199, "is_norm": [199, 402, 495], "is_qnan": 199, "is_sign": 199, "is_snan": 199, "is_subnorm": 199, "is_zero": 199, "logb": 199, "logical_and": 199, "logical_invert": 199, "logical_or": 199, "logical_xor": 199, "max_mag": 199, "min_mag": 199, "next_minu": 199, "next_plu": 199, "next_toward": 199, "closest": [199, 235, 239, 290, 442, 459, 483, 484], "321000e": 199, "number_class": 199, "41421356": 199, "etini": 199, "remainder_near": 199, "same_quantum": 199, "scaleb": 199, "to_eng_str": [199, 481], "123e": 199, "23e": 199, "to_integr": 199, "to_integral_valu": 199, "to_integral_exact": 199, "localcontext": [199, 360, 482, 483], "calculate_someth": 199, "halt": [199, 226, 307, 311, 403, 456, 491], "defaultcontext": [199, 490], "max_prec": [199, 490], "min_emin": [199, 490], "max_emax": [199, 490], "02e": 199, "weaker": [199, 478], "999": [199, 299], "create_decim": [199, 483, 490], "23e999": 199, "23000e": 199, "clear_trap": 199, "copy_decim": 199, "4445": 199, "0023": 199, "create_decimal_from_float": 199, "etop": 199, "recount": 199, "divide_int": 199, "qnan": 199, "msd": 199, "xor": [199, 225, 306, 445], "to_sci_str": [199, 481], "425000000": [199, 490], "999999999999999999": [199, 490], "min_etini": 199, "849999999": 199, "1999999999999999997": 199, "have_thread": [199, 490], "have_contextvar": [199, 471], "decimalexcept": 199, "inward": 199, "outward": 199, "stricter": [199, 404, 477, 478, 482, 488, 490, 492, 494], "amplifi": 199, "seminumer": 199, "11111113": 199, "11111111": [199, 360], "51111111": 199, "5111111": 199, "20000": [199, 382], "0000003": 199, "0060000": 199, "affin": 199, "indetermin": [199, 368, 391, 415, 423, 458], "854": [199, 374], "accustom": 199, "0e": 199, "1000026": 199, "applicationwid": 199, "moneyfmt": 199, "curr": 199, "dp": 199, "trailneg": 199, "monei": [199, 364], "currenc": [199, 281, 482], "1234567": [199, 467, 486], "8901": [199, 496], "568": 199, "123456789": 199, "141592653589793238462643383": 199, "na": [199, 341, 487, 488, 495, 496], "da": [199, 276, 334, 492, 493], "389056098930650227230427461": 199, "38905609893": 199, "0j": [199, 239, 360, 434], "taylor": [199, 483], "8775825618903727161162815826": 199, "87758256189": 199, "4794255386042030002732879352": 199, "479425538604": 199, "twoplac": 199, "214": [199, 323], "72": [199, 261, 276, 359, 399, 481, 482], "4314": 199, "62": [199, 252, 254, 397], "2e2": 199, "2e": 199, "1416": [199, 457], "00005": 199, "remove_expon": 199, "5e": [199, 363], "141592653589793115997963468544185161590576171875": 199, "spuriou": [199, 311, 348, 486], "ill": [199, 319, 489, 494], "23456789": 199, "2345678": 199, "2345": 199, "pypy3": 199, "karatsuba": [199, 480], "bignum": [199, 360, 490], "904625697166532776746648320380374280103671755200316906558262375061821325312": 199, "overalloc": [199, 360, 495], "8gb": 199, "500mb": 199, "maxdigit": [199, 368], "getsizeof": [199, 368, 377, 397, 465, 483, 488], "524288112": 199, "tighter": [199, 442, 481, 490], "sigsegv": [201, 228, 348, 470, 490], "sigfp": [201, 228, 348, 470, 490], "sigabrt": [201, 228, 308, 348, 470, 490], "sigbu": [201, 228, 348, 470, 490], "sigil": [201, 228, 348, 470, 490], "iobas": [201, 203, 227, 229, 273, 393, 470, 495], "unclos": [201, 261, 356, 393, 487, 489, 493], "18748": [201, 495], "modal": [202, 385, 388], "askfloat": 202, "askinteg": 202, "askstr": 202, "buttonbox": [202, 390], "initialdir": 202, "initialfil": 202, "defaultextens": 202, "askopenfil": 202, "asksaveasfil": 202, "savea": 202, "askopenfilenam": 202, "asksaveasfilenam": 202, "askdirectori": 202, "mustexist": 202, "cancel_command": 202, "dirs_double_ev": 202, "dirs_select_ev": 202, "files_double_ev": 202, "files_select_ev": 202, "filter_command": 202, "get_filt": 202, "get_select": 202, "dir_or_fil": 202, "curdir": [202, 230, 308, 309, 347, 384], "ok_ev": 202, "set_filt": 202, "set_select": 202, "loadfiledialog": 202, "ok_command": 202, "savefiledialog": 202, "ratcliff": 203, "obershelp": 203, "gestalt": 203, "longest": [203, 250, 274, 276, 309, 450, 479, 482, 492], "junk": [203, 298, 303, 364], "cubic": 203, "autojunk": 203, "intralin": 203, "htmldiff": [203, 481, 492], "tabsiz": [203, 360, 379], "wrapcolumn": 203, "linejunk": 203, "charjunk": 203, "is_character_junk": 203, "ndiff": [203, 207, 478, 479], "make_fil": [203, 492], "fromlin": 203, "tolin": 203, "fromdesc": 203, "todesc": 203, "numlin": 203, "hyperlink": 203, "make_t": 203, "context_diff": 203, "fromfiled": 203, "tofiled": 203, "lineterm": 203, "uniformli": [203, 270, 333], "eggi": 203, "hamster": 203, "get_close_match": 203, "cutoff": 203, "appel": 203, "peach": 203, "puppi": 203, "pineappl": 203, "is_line_junk": 203, "constitut": [203, 274, 346, 409, 441, 487], "nois": [203, 307, 308, 359], "ntwo": 203, "nthree": 203, "ore": 203, "ntree": 203, "nemu": 203, "emu": 203, "unified_diff": 203, "diff_byt": [203, 492], "dfunc": 203, "metzen": 203, "dr": [203, 237, 379, 489], "dobb": 203, "journal": 203, "isjunk": 203, "synch": 203, "bjunk": [203, 491], "bpopular": [203, 491], "b2j": 203, "set_seq": 203, "set_seq2": 203, "set_seq1": 203, "find_longest_match": 203, "alo": 203, "ahi": 203, "blo": 203, "bhi": 203, "get_matching_block": [203, 482], "abxcd": 203, "get_opcod": 203, "j1": [203, 475], "j2": 203, "qabxcd": 203, "abycdf": 203, "get_grouped_opcod": 203, "cluster": [203, 239, 353, 359, 470, 483], "quick_ratio": 203, "real_quick_ratio": 203, "tide": [203, 390], "diet": 203, "bcde": [203, 276, 484], "volatil": [203, 299], "text1": 203, "text2": 203, "flat": [203, 215, 218, 384, 391, 427], "interlin": 203, "file_mtim": 203, "st_mtime": [203, 248, 308, 311, 358, 373, 480], "fromdat": 203, "todat": 203, "tf": [203, 489], "show_cach": 204, "alist": [204, 319, 443], "disassembli": [204, 279, 315, 377, 494], "load_glob": [204, 495], "load_fast": [204, 491], "precal": [204, 488], "reciev": 204, "first_lin": 204, "current_offset": [204, 491], "analys": 204, "get_instruct": [204, 491], "from_traceback": [204, 491], "codeobj": 204, "code_info": [204, 489], "show_cod": [204, 489, 491], "distb": [204, 491], "lasti": 204, "disco": 204, "findlinestart": 204, "co_lin": [204, 443, 487], "co_firstlineno": [204, 270, 443], "co_lnotab": [204, 270, 443, 487, 493], "findlabel": 204, "stack_effect": [204, 491], "argval": [204, 377], "argrepr": 204, "starts_lin": 204, "is_jump_target": 204, "nop": [204, 374, 456], "pop_top": 204, "TOS": 204, "quicken": [204, 488], "unary_posit": 204, "unary_neg": 204, "unary_not": 204, "unary_invert": 204, "get_it": 204, "get_yield_from_it": 204, "tos1": 204, "binary_op": [204, 488], "binary_subscr": 204, "store_subscr": 204, "tos2": 204, "delete_subscr": 204, "get_await": 204, "co_iterable_coroutin": [204, 270], "get_ait": 204, "get_anext": 204, "end_async_for": [204, 495], "before_async_with": 204, "print_expr": 204, "set_add": 204, "list_append": [204, 481], "map_add": [204, 495], "yield_valu": 204, "setup_annot": [204, 493], "import_star": 204, "pop_except": 204, "push_exc_info": [204, 488], "check_exc_match": [204, 488], "check_eg_match": [204, 488], "prep_reraise_star": [204, 488], "reconstruct": [204, 273, 314, 322, 393, 422, 459, 461], "with_except_start": 204, "context_manag": 204, "load_assertion_error": [204, 496], "load_build_class": 204, "__build_class__": [204, 465], "before_with": [204, 488], "get_len": 204, "match_map": 204, "match_sequ": 204, "match_kei": [204, 488], "store_nam": [204, 357], "namei": 204, "co_nam": [204, 270, 396, 443, 492], "store_fast": 204, "store_glob": 204, "delete_nam": 204, "unpack_sequ": 204, "unpack_ex": 204, "leftov": [204, 307], "store_attr": 204, "delete_attr": 204, "delete_glob": 204, "load_const": [204, 489, 491], "consti": 204, "co_const": [204, 270, 443], "load_nam": [204, 489], "build_tupl": 204, "build_list": 204, "build_set": 204, "build_map": 204, "tos3": 204, "build_const_key_map": [204, 493], "build_str": [204, 493], "list_to_tupl": 204, "list_extend": 204, "set_upd": 204, "dict_upd": 204, "dict_merg": 204, "load_attr": [204, 487], "compare_op": [204, 489, 496], "cmp_op": 204, "is_op": [204, 496], "contains_op": [204, 496], "import_nam": [204, 446], "import_from": [204, 446], "jump_forward": 204, "jump_backward": [204, 488], "jump_backward_no_interrupt": [204, 488], "pop_jump_forward_if_tru": 204, "pop_jump_backward_if_tru": 204, "pop_jump_forward_if_fals": 204, "pop_jump_backward_if_fals": 204, "pop_jump_forward_if_not_non": 204, "pop_jump_backward_if_not_non": 204, "pop_jump_forward_if_non": 204, "pop_jump_backward_if_non": 204, "jump_if_true_or_pop": [204, 488], "jump_if_false_or_pop": [204, 488], "for_it": 204, "var_num": 204, "delete_fast": 204, "make_cel": [204, 488], "load_closur": 204, "co_fastlocalnam": 204, "load_deref": 204, "load_classderef": [204, 491], "store_deref": 204, "delete_deref": 204, "copy_free_var": [204, 488], "raise_vararg": 204, "kw_name": [204, 488], "call_function_ex": [204, 493], "load_method": [204, 494], "push_nul": [204, 488], "make_funct": [204, 487, 493], "0x02": [204, 493], "0x08": [204, 443], "build_slic": 204, "extended_arg": 204, "format_valu": [204, 493], "fmt_spec": 204, "match_class": [204, 488], "return_gener": [204, 488], "async_gen_wrap": [204, 488], "async_generator_wrapped_valu": 204, "have_argu": 204, "opmap": 204, "hasconst": 204, "hasfre": 204, "hasnam": 204, "hasjrel": 204, "hasjab": 204, "hasloc": 204, "hascompar": 204, "plugin": [206, 493], "prebuild": 206, "expositori": 207, "265252859812191058636308480000000": 207, "ridicul": 207, "1e100": [207, 290, 445, 450], "1e300": 207, "testmod": [207, 466, 481, 486], "test_doctest": 207, "testfil": [207, 482], "giant": 207, "720": [207, 489, 495], "__test__": 207, "blanklin": [207, 481], "normalize_whitespac": 207, "trial": [207, 333, 359, 382, 480], "crumb": 207, "your_dict": 207, "rapidli": [207, 323], "verbatim": [207, 364, 424, 441], "ndetail": 207, "transcript": 207, "ignore_exception_detail": [207, 484], "dont_accept_true_for_1": 207, "dont_accept_blanklin": 207, "oop": [207, 458], "comparison_flag": 207, "report_udiff": [207, 481], "report_cdiff": [207, 481], "report_ndiff": [207, 481], "mismatch": [207, 227, 230, 282, 334, 349, 357, 428, 442, 478, 480, 482, 484, 492], "report_only_first_failur": 207, "fail_fast": [207, 491], "reporting_flag": 207, "register_optionflag": 207, "my_flag": 207, "directive_opt": 207, "on_or_off": 207, "directive_option_nam": 207, "hermion": 207, "harri": [207, 482], "7948648": 207, "0x00ac18f0": 207, "14285714285714285": [207, 461], "142857142857": 207, "contriv": 207, "utterli": [207, 485], "module_rel": 207, "optionflag": 207, "extraglob": 207, "raise_on_error": 207, "failure_count": 207, "test_count": 207, "slate": [207, 447, 487, 488, 491, 492], "mortem": [207, 312, 368, 455], "exclude_empti": 207, "run_docstring_exampl": 207, "nonam": [207, 437], "compileflag": 207, "systemat": 207, "my_module_with_doctest": 207, "addtest": [207, 403], "doctestsuit": [207, 403, 480, 492], "testsuit": [207, 377, 403, 480, 491, 492], "docfilesuit": [207, 482], "teardown": [207, 377, 403, 404, 405, 484], "failureexcept": [207, 403], "tear": [207, 403], "set_unittest_reportflag": 207, "test_find": 207, "doctestcas": 207, "testcas": [207, 377, 403, 404, 405, 441, 466, 484, 486, 488, 489, 490, 491, 495], "docfilecas": 207, "runtest": [207, 403], "revolv": [207, 250], "exc_msg": 207, "format_exception_onli": [207, 396, 487], "get_doctest": 207, "get_exampl": 207, "testrunn": [207, 403], "report_start": 207, "report_success": 207, "report_unexpected_except": 207, "report_failur": 207, "clear_glob": 207, "report_": 207, "check_output": [207, 364, 484, 491], "output_differ": 207, "debugrunn": 207, "cont": 207, "script_from_exampl": 207, "testsourc": 207, "post_mortem": [207, 312, 483], "debug_src": 207, "sketch": [207, 257, 456, 469, 482, 483, 487], "unexpectedexcept": 207, "doctestfailur": 207, "amaz": [207, 479], "skimp": 207, "prose": 207, "attitud": 207, "coher": [207, 240], "narr": 207, "blur": [207, 276], "_regrtest_top": 207, "2821": 208, "5322": [208, 210, 213, 215, 217, 219, 221, 222, 351], "6532": [208, 219, 221, 222, 492, 494], "2046": [208, 211, 216], "2047": [208, 216, 217, 222, 223, 249, 489], "2183": [208, 210, 219], "2231": [208, 210, 216, 219, 223], "subcompon": 208, "forego": [208, 441], "promot": [208, 250, 441, 456, 483, 488], "emailpolici": [208, 211, 217, 222, 490, 492], "input_charset": [209, 210], "default_charset": 209, "outright": 209, "header_encod": 209, "qp": 209, "body_encod": 209, "output_charset": [209, 210, 484, 488, 495], "input_codec": 209, "output_codec": 209, "get_body_encod": 209, "7bit": [209, 211, 212, 215, 217, 222, 286, 489, 490], "get_output_charset": 209, "header_encode_lin": 209, "maxlength": [209, 298], "add_charset": 209, "header_enc": 209, "body_enc": 209, "add_codec": 209, "add_alia": 209, "codecnam": 209, "rfc822": [210, 211, 218, 219, 220, 221, 262, 479, 481], "envelop": [210, 215, 219, 221, 262, 286, 350, 351], "from_": [210, 286, 391], "as_str": [210, 215, 216, 219, 491], "unixfrom": [210, 215, 219, 491], "maxheaderlen": [210, 215, 219, 491], "max_line_length": [210, 219, 222, 490], "mangle_from_": [210, 215, 222, 492], "as_byt": [210, 214, 215, 219, 222, 266, 491], "bytesgener": [210, 211, 215, 219, 222, 351, 489], "__bytes__": [210, 215, 219, 360, 401, 443, 488, 491, 492], "is_multipart": [210, 213, 219, 221], "cte": [210, 211, 212, 217, 219, 222, 356], "get_content_maintyp": [210, 214, 219], "set_unixfrom": [210, 219], "get_unixfrom": [210, 219], "set_payload": [210, 220], "set_cont": [210, 211, 212, 214, 219, 221, 222], "get_payload": [210, 214, 218, 220, 489], "invalidbase64paddingdefect": [210, 213], "invalidbase64charactersdefect": [210, 213], "8bit": [210, 211, 212, 215, 216, 217, 221, 222, 489, 490], "get_cont": [210, 211, 214, 219, 222], "iter_part": [210, 219, 221], "set_charset": 210, "get_charset": [210, 219], "2822": [210, 216, 223, 256, 259, 286, 381, 466, 479], "bias": [210, 219, 333, 359, 480], "contravent": 210, "mymessag": [210, 219], "get_al": [210, 219, 223, 422], "extant": [210, 219], "roolz": [210, 219], "failobj": [210, 219], "add_head": [210, 219, 220, 404, 410, 422], "_param": [210, 219, 220, 422], "disposit": [210, 211, 217, 219, 262, 308, 348, 415, 422, 492], "bud": [210, 219, 422], "fu\u00dfbal": [210, 219], "ppt": [210, 219], "fu": 210, "dfballer": 210, "replace_head": [210, 219], "maintyp": [210, 211, 214, 215, 217, 218, 219], "get_default_typ": [210, 219], "mandat": [210, 219, 262, 277, 334, 381, 493], "get_content_subtyp": [210, 219], "subpart": [210, 212, 213, 215, 218, 219, 220, 221], "set_default_typ": [210, 219], "get_param": [210, 223], "collapse_rfc2231_valu": [210, 223], "rawparam": 210, "set_param": [210, 219, 491], "requot": [210, 219], "del_param": [210, 219], "set_typ": 210, "make_": 210, "add_": [210, 211], "get_filenam": [210, 214, 219, 265, 438, 491], "get_boundari": [210, 219], "set_boundari": [210, 213, 219], "headerparseerror": [210, 213, 219], "get_content_charset": [210, 219], "get_content_disposit": [210, 219, 492], "deliveri": [210, 214, 219, 221, 286, 308, 333, 348, 353], "_structur": [210, 218, 219], "armor": [210, 219], "epilogu": [210, 219], "clear_cont": [211, 219], "typ": [211, 262, 401], "mimepart": [211, 219, 491], "add_get_handl": 211, "add_set_handl": 211, "typekei": 211, "raw_data_manag": [211, 222], "content_manag": [211, 219, 222, 491], "cid": [211, 214, 353], "headernam": 211, "headervalu": 211, "mimetext": [212, 220, 492], "_subtyp": [212, 220], "_charset": [212, 220, 244], "mimeaudio": [212, 220], "mimeimag": [212, 213, 214, 220], "encode_quopri": 212, "unprint": 212, "encode_base64": [212, 220], "drawback": [212, 267, 307, 494], "encode_7or8bit": 212, "encode_noop": 212, "messageerror": 213, "messageparseerror": [213, 286], "boundaryerror": 213, "multipartconversionerror": [213, 220], "add_payload": 213, "mimenonmultipart": [213, 220], "messagedefect": 213, "headerdefect": [213, 217], "noboundaryinmultipartdefect": 213, "startboundarynotfounddefect": 213, "closeboundarynotfounddefect": 213, "firstheaderlineiscontinuationdefect": 213, "misplacedenvelopeheaderdefect": 213, "missingheaderbodyseparatordefect": 213, "malformedheaderdefect": 213, "multipartinvariantviolationdefect": [213, 221], "invalidbase64lengthdefect": 213, "invaliddatedefect": 213, "send_messag": [214, 222, 351, 489, 492], "bytespars": [214, 215, 221, 489], "messagefil": 214, "uncommon": [214, 265, 356, 482], "parsestr": [214, 221, 426, 427, 429, 477, 492], "someone_els": 214, "display_nam": [214, 217, 490], "reunion": 214, "pngfile": 214, "img_data": 214, "add_attach": [214, 219], "png": [214, 220, 254, 263, 384, 391], "abspath": [214, 309, 311, 414, 484], "isfil": [214, 309, 311, 373, 453, 489, 495], "guess_typ": [214, 259, 291, 422], "msgfile": 214, "message_from_binary_fil": [214, 221, 222, 489], "sanit": [214, 471], "guess_extens": [214, 291], "03d": [214, 282, 360], "make_msgid": [214, 223], "ayon": 214, "asperg": 214, "pour": 214, "d\u00e9jeuner": 214, "pep\u00e9": 214, "pew": 214, "pepe": 214, "penelop": 214, "pussycat": 214, "fabrett": 214, "salut": 214, "cela": 214, "ressembl": 214, "\u00e0": [214, 282], "yummli": 214, "roast": 214, "asparagu": 214, "epicuri": 214, "203718": 214, "asparagus_cid": 214, "add_altern": [214, 219], "href": [214, 252, 254, 256, 428, 484], "img": [214, 254], "peel": 214, "jpg": [214, 273, 309, 434, 467, 482], "add_rel": [214, 219], "jpeg": [214, 220, 263, 384, 461, 483], "magic_html_pars": 214, "html_text": 214, "partfil": 214, "preview": [214, 272], "useless": [214, 237, 404, 426, 487, 495], "get_bodi": [214, 219, 221], "preferencelist": [214, 219], "richest": 214, "content_typ": [214, 217], "iter_attach": [214, 219], "matthew": [214, 488, 491], "dixon": 214, "cowl": 214, "necess": 215, "smime": 215, "outfp": 215, "refold": [215, 222, 490], "rewrap": [215, 240], "manheaderlen": 215, "linesep": [215, 216, 217, 222, 239, 273, 308, 351, 364, 490], "cte_typ": [215, 217, 222, 490], "craft": [215, 314, 447, 461, 489], "amessag": 215, "transfer_encod": 215, "decodedgener": [215, 493], "part_info": 215, "_mangle_from_": 215, "refold_sourc": [215, 222, 490], "worldwid": [216, 249, 441], "slew": 216, "xf6stal": 216, "f6stal": 216, "maxlinelen": 216, "header_nam": [216, 410, 422], "continuation_w": 216, "splitchar": 216, "decode_head": [216, 303, 490], "decoded_str": 216, "make_head": [216, 490], "decoded_seq": 216, "header_factori": [217, 222, 490], "basehead": [217, 219], "unstructuredhead": 217, "max_count": [217, 222], "_myattr": 217, "myattr": 217, "unstructur": 217, "datehead": 217, "wild": [217, 451], "format_datetim": [217, 223, 490], "addresshead": 217, "singleaddresshead": 217, "uniqueunstructuredhead": 217, "mimeversionhead": 217, "parameterizedmimehead": 217, "supplement": [217, 227, 241, 308, 476, 483, 491], "contenttypehead": 217, "contentdispositionhead": 217, "content_disposit": 217, "contenttransferencod": 217, "base_class": 217, "default_class": 217, "use_default_map": 217, "uniquedatehead": 217, "resent": [217, 223, 286, 351], "orig": [217, 411], "uniquesingleaddresshead": 217, "uniqueaddresshead": 217, "bcc": [217, 351], "contenttransferencodinghead": 217, "messageidhead": 217, "map_to_typ": 217, "addr_spec": [217, 490], "5321": [217, 350, 490], "body_line_iter": 218, "typed_subpart_iter": 218, "include_default": 218, "message_from_fil": [218, 221], "addtion": 219, "6531": [219, 222, 350, 351, 492], "is_attach": 219, "make_rel": 219, "make_altern": 219, "make_mix": 219, "ordinarili": [220, 346], "dice": 220, "mimebas": 220, "_maintyp": 220, "nonmultipart": 220, "mimemultipart": 220, "_subpart": 220, "mimeappl": 220, "_data": [220, 240], "_encod": 220, "_audiodata": 220, "_imagedata": 220, "tiff": [220, 263, 384, 482], "pbm": [220, 263], "pgm": [220, 263, 384], "ppm": [220, 263, 384, 390], "rast": [220, 263], "xbm": [220, 263, 384, 390], "bmp": [220, 261, 263, 384, 490, 491, 494, 495], "webp": [220, 263, 384, 492], "exr": [220, 263], "mimemessag": 220, "_msg": 220, "_text": 220, "cloth": 221, "bytesfeedpars": [221, 489], "conduc": 221, "_factori": 221, "message_factori": [221, 222, 493], "stitch": 221, "fed": [221, 249, 254, 298, 329, 428, 482], "bytesheaderpars": [221, 490], "headerpars": [221, 490], "_class": 221, "headersonli": 221, "parsebyt": 221, "message_from_byt": [221, 489], "message_from_str": [221, 490], "mybyt": 221, "dispar": 222, "settabl": [222, 261, 415, 477, 479], "mymsg": [222, 491], "compat_smtp": 222, "compat_strict": 222, "raise_on_defect": [222, 490], "compat_strict_smtp": 222, "commut": 222, "policy100": 222, "policy80": 222, "apolici": 222, "78": [222, 299, 490], "fold_binari": 222, "register_defect": 222, "handle_defect": 222, "header_max_count": 222, "faithfulli": [222, 361, 368], "header_source_pars": 222, "sourcelin": 222, "unfold": 222, "header_store_pars": 222, "header_fetch_pars": 222, "smtputf8": [222, 350, 351, 492], "stype": 222, "rejoin": 222, "refold_head": 222, "somepolici": 222, "isdst": 223, "summer": [223, 239, 381, 482, 483], "divin": 223, "idstr": 223, "strengthen": 223, "parseaddr": 223, "constitu": [223, 266, 425], "realnam": 223, "formataddr": [223, 490], "email_address": 223, "getaddress": 223, "fieldvalu": 223, "tos": 223, "resent_to": 223, "resent_cc": 223, "all_recipi": 223, "parsed": 223, "mailer": 223, "parsedate_tz": 223, "greenwich": [223, 381], "parsedate_to_datetim": [223, 490], "mktime_tz": 223, "formatd": [223, 481], "timev": 223, "usegmt": 223, "decode_rfc2231": 223, "encode_rfc2231": 223, "fallback_charset": 223, "decode_param": 223, "pipx": [224, 484, 491], "altinstal": [224, 471, 475, 484, 489, 491], "default_pip": 224, "nomenclatur": [225, 368], "reprenum": [225, 488], "enumcheck": [225, 488], "named_flag": 225, "nonmemb": [225, 488], "global_enum": [225, 488], "show_flag_valu": 225, "some_var": 225, "__init_subclass__": [225, 239, 443, 488, 493], "enummeta": [225, 443, 488], "powersofthre": 225, "otherstyl": 225, "something_els": 225, "_numeric_repr_": 225, "crimson": 225, "neon": 225, "0x18": 225, "strictflag": 225, "0b0": 225, "10100": 225, "00111": 225, "conformflag": 225, "ejectflag": 225, "keepflag": 225, "regexflag": [225, 334, 488, 494], "myintenum": 225, "errorcod": [226, 329], "eperm": [226, 227, 490], "enoent": [226, 227, 343, 490], "esrch": [226, 227], "eio": 226, "enxio": 226, "e2big": 226, "enoexec": 226, "ebadf": [226, 343, 493, 496], "echild": [226, 227], "eagain": [226, 227, 229, 308], "enomem": 226, "eacc": [226, 227, 229, 265, 490], "efault": 226, "enotblk": 226, "ebusi": 226, "eexist": [226, 227, 308], "exdev": [226, 308], "enodev": 226, "enotdir": [226, 227], "eisdir": [226, 227], "einval": [226, 308], "enfil": 226, "emfil": 226, "enotti": 226, "typewrit": 226, "etxtbsi": 226, "efbig": 226, "enospc": 226, "espip": 226, "erof": 226, "emlink": 226, "epip": [226, 227, 348], "edeadlk": 226, "enametoolong": 226, "enolck": 226, "enosi": 226, "enotempti": 226, "eloop": 226, "ewouldblock": [226, 227], "enomsg": 226, "eidrm": 226, "echrng": 226, "el2nsync": 226, "el3hlt": 226, "el3rst": 226, "elnrng": 226, "eunatch": 226, "enocsi": 226, "csi": 226, "el2hlt": 226, "ebad": 226, "ebadr": 226, "exful": 226, "enoano": 226, "anod": 226, "ebadrqc": 226, "ebadslt": 226, "edeadlock": 226, "ebfont": 226, "enostr": 226, "enodata": [226, 308], "etim": 226, "enosr": 226, "enonet": 226, "enopkg": 226, "eremot": 226, "enolink": 226, "eadv": 226, "advertis": [226, 303, 350, 351, 357, 441, 483, 491, 492, 495], "esrmnt": 226, "srmount": 226, "ecomm": 226, "eproto": 226, "emultihop": 226, "multihop": 226, "edotdot": 226, "ebadmsg": 226, "eoverflow": 226, "enotuniq": 226, "ebadfd": 226, "eremchg": 226, "elibacc": 226, "elibbad": 226, "elibscn": 226, "elibmax": 226, "elibexec": 226, "eilseq": 226, "erestart": 226, "estrpip": 226, "euser": 226, "enotsock": 226, "edestaddrreq": 226, "emsgsiz": 226, "eprototyp": 226, "enoprotoopt": 226, "eprotonosupport": 226, "esocktnosupport": 226, "eopnotsupp": 226, "enotsup": 226, "epfnosupport": 226, "eafnosupport": 226, "eaddrinus": 226, "eaddrnotavail": 226, "enetdown": 226, "enetunreach": 226, "enetreset": 226, "econnabort": [226, 227], "econnreset": [226, 227], "enotconn": [226, 491], "eshutdown": [226, 227], "etoomanyref": 226, "splice": [226, 308, 487], "etimedout": [226, 227, 483], "econnrefus": [226, 227], "ehostdown": 226, "ehostunreach": 226, "ealreadi": [226, 227], "estal": 226, "stale": [226, 265, 491], "euclean": 226, "enotnam": 226, "xenix": 226, "enavail": 226, "eisnam": 226, "eremoteio": 226, "edquot": 226, "eqful": 226, "enotcap": [226, 227], "ecancel": 226, "eownerdead": 226, "enotrecover": 226, "recover": [226, 341, 430], "new_exc": 227, "original_exc": 227, "3134": [227, 485], "someexcept": [227, 403, 485], "add_not": [227, 458, 488], "__notes__": [227, 396], "unpredict": [227, 286, 308, 357, 428, 431, 443, 470, 479], "rescu": 227, "perror": 227, "environmenterror": [227, 465, 490], "end_offset": [227, 396, 487], "abandon": [227, 384, 430, 489], "characters_written": 227, "dubiou": [227, 415], "mygroup": [227, 357], "apport": 228, "sigaltstack": 228, "catastroph": [228, 489], "dump_traceback": [228, 492], "all_thread": 228, "print_tb": [228, 396, 492], "is_en": 228, "dump_traceback_lat": [228, 492], "cancel_dump_traceback_lat": 228, "watchdog": 228, "dup2": [228, 308, 348, 488, 492, 494], "0x00007fb899f39700": [228, 490], "f_add_seal": 229, "f_get_seal": 229, "f_seal_": 229, "memfd_creat": [229, 308, 495], "f_getpath": 229, "f_ofd_getlk": [229, 496], "f_ofd_setlk": [229, 496], "f_ofd_setlkw": [229, 496], "f_getpipe_sz": 229, "f_setpipe_sz": 229, "f_dup2fd": [229, 488], "f_dup2fd_cloexec": [229, 488], "fd_cloexec": [229, 488], "mutate_flag": 229, "simplif": 229, "getpgrp": [229, 308], "13341": 229, "tiocgpgrp": 229, "lock_un": 229, "lock_sh": 229, "lock_ex": 229, "lock_nb": 229, "lock_": 229, "seek_set": [229, 273, 293, 308, 356, 482, 486], "seek_cur": [229, 273, 293, 308, 356, 482, 486], "seek_end": [229, 273, 293, 308, 356, 482, 486], "svr4": 229, "f_setfl": 229, "lockdata": 229, "hhllhh": 229, "f_wrlck": 229, "f_setlkw": 229, "o_shlock": [229, 308, 482], "o_exlock": [229, 308, 482], "clear_cach": [230, 440, 491], "cmpfile": 230, "dir1": 230, "dir2": 230, "mtime": [230, 248, 265, 308, 373, 411, 495], "default_ignor": [230, 491], "pardir": [230, 308], "report_partial_closur": 230, "report_full_closur": 230, "left_list": 230, "right_list": 230, "left_onli": 230, "right_onli": 230, "common_dir": 230, "common_fil": 230, "common_funni": 230, "same_fil": 230, "diff_fil": 230, "funny_fil": 230, "mydircmp": 230, "print_diff_fil": 230, "dcmp": 230, "sub_dcmp": 230, "openhook": [232, 482], "hook_compress": [232, 487], "filelineno": 232, "isfirstlin": 232, "isstdin": 232, "nextfil": 232, "bak": 232, "fi": [232, 239], "hook_encod": [232, 493], "fnmatchcas": [234, 403], "normcas": [234, 309], "reobj": 234, "other_fract": 235, "limit_denomin": 235, "414213": 235, "1414213": 235, "125": [235, 276, 459, 461, 464, 483], "7e": 235, "2476979795053773": [235, 489], "2251799813685248": [235, 489], "gcd": [235, 290, 492, 496], "supportsint": [235, 401, 488, 495], "flt": 235, "from_decim": [235, 489], "max_denomin": 235, "1415926535897932": 235, "4503599627370497": 235, "9007199254740992": 235, "__floor__": [235, 290, 404, 443], "greatest": [235, 290, 360], "__ceil__": [235, 290, 404, 443], "ceil": [235, 290, 304, 337, 360, 443, 483, 495], "__round__": [235, 239, 401, 404, 443, 485], "ndigit": [235, 239, 443], "959": 237, "2640": [237, 496], "retrlin": 237, "1176": 237, "1063": 237, "sr": 237, "226": [237, 255], "retrbinari": 237, "retr": [237, 320], "221": 237, "acct": 237, "source_address": [237, 256, 351, 353, 484, 489, 490], "ftp1": [237, 489], "proftpd": [237, 489], "154": [237, 299, 397, 481, 489], "cento": [237, 488, 489, 494], "set_debuglevel": [237, 256, 303, 320, 351, 374, 492], "getwelcom": [237, 303, 320], "disclaim": [237, 303, 365, 416, 441], "voidcmd": 237, "error_repli": 237, "blocksiz": [237, 256, 308, 373, 494], "stor": 237, "transfercmd": 237, "nlst": [237, 490], "set_pasv": [237, 478], "storbinari": [237, 483, 484], "storlin": [237, 483], "eprt": 237, "epsv": 237, "pasv": 237, "ntransfercmd": 237, "mlsd": [237, 490], "3659": 237, "fromnam": 237, "tonam": 237, "error_perm": 237, "mkd": 237, "rmd": 237, "unilater": 237, "keyfil": [237, 262, 284, 296, 320, 351, 357, 477, 493], "certfil": [237, 262, 320, 351, 357, 477, 493], "4217": 237, "prot_p": 237, "pem": [237, 262, 320, 351, 357, 475, 491], "check_hostnam": [237, 256, 262, 303, 320, 351, 357, 410, 493], "has_sni": [237, 256, 262, 303, 320, 351, 357, 410], "load_cert_chain": [237, 256, 262, 320, 351, 357, 410, 490], "pureftpd": 237, "6jack": 237, "antilink": 237, "blogbench": 237, "bsdcam": 237, "clockspe": 237, "djbdn": 237, "jedi": 237, "eacceler": 237, "favicon": 237, "ico": 237, "francoton": 237, "fugu": 237, "libpuzzl": 237, "metalog": 237, "minidentd": 237, "udf": 237, "php": [237, 434, 477, 479], "jenkin": [237, 403], "skein": [237, 249], "webdav": [237, 255], "phpaudit": 237, "phpbench": 237, "pincast": 237, "ping": [237, 477, 478, 479, 482], "posto": 237, "public_kei": 237, "ftpd": 237, "qscan": 237, "qtc": 237, "shared": 237, "skycach": 237, "ucarp": 237, "ssl_version": [237, 357], "protocol_sslv23": [237, 357, 487], "auth": [237, 262, 284, 351, 357, 480, 492], "ccc": [237, 363, 391, 490], "nat": [237, 353, 490], "prot_c": 237, "error_temp": 237, "499": [237, 303], "error_proto": [237, 320, 490], "all_error": [237, 353, 488], "anext": [239, 487], "delattr": [239, 455, 465], "async_iter": 239, "0b11": 239, "0b1010": [239, 485], "0b1110": 239, "1110": 239, "pythonbreakpoint": [239, 368, 470, 494], "dont_inherit": [239, 491], "pycf_": 239, "__all__": [239, 261, 294, 334, 377, 451, 465, 478, 493], "__initializing__": 239, "_clearcach": 239, "pack_into": [239, 363, 482], "unpack_from": [239, 363, 482], "perimet": 239, "season": 239, "complementari": [239, 290, 333, 423, 484, 489], "floatvalu": 239, "digitpart": [239, 450], "floatnumb": [239, 445, 450], "003": [239, 443, 461, 470], "1e6": 239, "0x2a": [239, 361], "__trunc__": [239, 290, 404, 443, 488], "010": [239, 276, 377], "classinfo": 239, "mydata": [239, 380, 426, 467, 489], "process_block": 239, "keyfunc": [239, 276], "featureless": 239, "0o70": 239, "0o12": 239, "write_through": [239, 273, 490], "reconfigur": [239, 273, 494], "default_buffer_s": [239, 273, 364], "nnn": [239, 254, 410], "untransl": [239, 273], "somedir": 239, "o_rdonli": [239, 297, 298, 308], "spamspam": 239, "bufferedread": [239, 273, 373, 483, 484, 489], "bufferedwrit": [239, 273, 483, 489], "bufferedrandom": [239, 273, 483], "rawiobas": [239, 273, 483, 490, 492], "3j": [239, 304, 484], "inv_bas": 239, "_x": [239, 274, 483, 493], "_voltag": 239, "displayhook": [239, 368, 465, 478], "salari": [239, 360, 455], "argn": 239, "regular_funct": 239, "fsum": [239, 290, 359, 459, 483], "object_or_typ": 239, "type2": [239, 401], "spice": 239, "transpos": [239, 276, 457, 481], "fo": [239, 242, 479], "zip_longest": [239, 276, 485], "x2": [239, 445, 456, 487], "attain": 239, "till": [239, 298, 323, 357, 374, 496], "sau": 239, "_temp": 239, "pythoncaseok": [239, 470, 478, 496], "user_funct": 240, "evict": 240, "3628800": 240, "479001600": 240, "sequence_of_numb": [240, 495], "stdev": [240, 359, 488, 495], "count_vowel": 240, "vowel": 240, "aeiouaeiou": 240, "cache_paramet": 240, "cache_info": [240, 489], "currsiz": [240, 489], "cache_clear": [240, 489], "predictor": 240, "impur": 240, "get_pep": 240, "290": 240, "320": [240, 403], "9991": 240, "cacheinfo": [240, 489], "fib": [240, 456, 465], "377": [240, 456, 464, 465], "610": [240, 456, 464, 465], "total_ord": [240, 443, 445, 484, 489, 491], "_is_valid_operand": 240, "lastnam": [240, 356, 489, 495], "firstnam": [240, 356, 489], "unrecognis": [240, 283, 490], "farg": 240, "fkeyword": 240, "newkeyword": 240, "basetwo": 240, "10010": 240, "partialmethod": [240, 360, 491, 495], "_aliv": 240, "set_stat": 240, "set_dead": 240, "strength": [240, 359, 488], "eh": [240, 488], "uniontyp": [240, 360, 400, 401, 488], "fun_num": 240, "615": [240, 440, 496], "0x1035a2840": 240, "0x103fe0000": 240, "dict_kei": [240, 484], "singledispatchmethod": [240, 495], "wrapper_assign": 240, "wrapper_upd": 240, "17482": 240, "my_decor": [240, 482], "debug_leak": 241, "debug_saveal": 241, "uncollect": [241, 489], "set_threshold": 241, "threshold0": 241, "threshold1": 241, "threshold2": 241, "sweep": [241, 482], "youngest": 241, "get_count": [241, 482], "count0": 241, "count1": 241, "count2": 241, "get_threshold": 241, "referr": 241, "lazaru": 241, "gc_ref": 241, "unfreez": [241, 494], "get_freeze_count": [241, 494], "debug_uncollect": [241, 489], "debug_stat": 241, "debug_collect": 241, "shortopt": 242, "longopt": 242, "frob": [242, 405], "getopterror": 242, "gnu_getopt": [242, 480], "posixly_correct": 242, "cfoo": 242, "optlist": 242, "ho": 242, "getpasswarn": 243, "getus": [243, 262, 308, 320], "lname": 243, "getlogin": [243, 308], "i18n": [244, 361, 477, 484], "l10n": [244, 477], "monolingu": 244, "bindtextdomain": [244, 281], "localedir": 244, "lc_messag": [244, 281], "lc_all": [244, 281, 377, 467, 470, 488, 494], "textdomain": [244, 281], "dgettext": [244, 281], "ngettext": 244, "dngettext": 244, "pgettext": [244, 495], "dpgettext": 244, "npgettext": 244, "dnpgettext": 244, "dcgettext": [244, 281], "unimpl": [244, 257], "myapplic": 244, "class_": 244, "_info": 244, "_fallback": 244, "add_fallback": 244, "_pars": 244, "albeit": [244, 401, 456], "gnome": [244, 359, 481, 490], "jame": [244, 438, 441, 477, 480, 482, 484, 488, 494], "henstridg": [244, 477, 484], "mylog": [244, 486, 489], "xgettext": 244, "fran\u00e7oi": [244, 490, 491, 492], "pinard": 244, "xpot": 244, "pygettext": [244, 492], "msgfmt": [244, 484], "lang1": 244, "lang2": 244, "lang3": 244, "language1": 244, "mollusk": 244, "albatross": 244, "rat": 244, "penguin": [244, 442], "n_": 244, "markthisstringfortransl": 244, "funk": [244, 477], "juan": [244, 484], "ib\u00e1\u00f1ez": 244, "palomar": 244, "barri": [244, 477, 478, 479, 481, 482, 483, 489, 490, 491, 492, 493, 494, 495], "warsaw": [244, 477, 478, 479, 481, 482, 483, 489, 490, 491, 492, 494, 495], "gustavo": [244, 479, 480, 481, 482], "niemey": [244, 479, 480, 481, 482], "concert": [245, 487, 489], "subshel": [245, 308], "expandvar": [245, 309, 364, 483], "include_hidden": 245, "altsep": [245, 261, 308, 311, 488], "inordin": [245, 311], "iglob": [245, 487, 492, 493], "unc": [245, 308, 309, 311, 437], "sharepoint": [245, 309, 437], "quo": 245, "vadi": 245, "card": [245, 310, 333, 334, 451], "topologicalsort": [246, 496], "topolog": [246, 480, 496], "vertex": [246, 399], "acycl": 246, "get_readi": 246, "static_ord": 246, "topological_sort": 246, "task_queu": [246, 298], "finalized_tasks_queu": 246, "cycleerror": 246, "node_group": 246, "ts2": 246, "gr_name": [247, 480], "gr_passwd": 247, "gr_gid": [247, 364, 480], "gr_mem": 247, "yp": 247, "getgrnam": [247, 364, 480], "getgrgid": [247, 493], "getgral": 247, "badgzipfil": [248, 495], "fileobj": [248, 249, 344, 348, 373, 490], "discern": 248, "slowest": [248, 377, 399, 439], "unseek": [248, 416, 437, 489, 491, 492], "wbit": [248, 439], "file_cont": [248, 285], "s_in": 248, "s_out": 248, "fip": 249, "sha1": [249, 471, 482, 484, 489], "sha224": [249, 482, 484, 489], "sha256": [249, 266, 353, 357, 471, 482, 484, 489], "sha384": [249, 357, 482, 484, 489], "sha512": [249, 471, 482, 484, 489], "rsa": [249, 357, 487], "1321": 249, "adler32": [249, 439], "hexdigest": [249, 251, 356, 482], "sha3_224": [249, 493], "sha3_256": [249, 493], "sha3_384": [249, 493], "sha3_512": [249, 493], "shake_128": [249, 493], "shake_256": [249, 493], "blake2b": [249, 488, 493, 496], "algorithms_guarante": [249, 484, 489], "algorithms_avail": [249, 484, 489], "seealso": 249, "sha3": [249, 471, 488, 496], "keccak": [249, 488, 493], "usedforsecur": [249, 342], "insecur": [249, 301, 342, 345, 356, 357, 461, 482, 489], "spammish": 249, "x03": [249, 299, 353, 360, 363, 413], "x1e": [249, 360], "xdd": 249, "ae": [249, 353, 357, 480], "x15": [249, 363], "x93": 249, "xc5": 249, "xfe": 249, "x00o": 249, "xa5u": 249, "xfd": 249, "xf7": 249, "xbcn": 249, "x84": [249, 483], "xa6": 249, "xaf": [249, 483], "x0c": [249, 360, 413], "x95": 249, "x0fk": 249, "x06": [249, 413], "031edd7d41651593c5fe5c006fa5752b37fddff7bc4e843aa6af0c950f4b9406": 249, "upstream": [249, 350, 495], "digest_s": [249, 251, 491], "block_siz": [249, 251, 491], "incept": 249, "length_in_bit": 249, "44709d6fcb83d92a76dcb0b668c98e1b1d3dafe7": 249, "file_digest": [249, 488], "socketio": 249, "mac1": 249, "digestmod": [249, 251, 491, 495], "mac2": 249, "stretch": [249, 261, 391, 399, 425, 494], "brute": [249, 341], "tunabl": [249, 308, 489], "pbkdf2_hmac": [249, 484, 487, 491], "hash_nam": 249, "dklen": 249, "pkc": [249, 357, 491], "pseudorandom": [249, 333, 357], "nist": [249, 480], "132": 249, "stackexchang": 249, "pbkdf2": [249, 487], "our_app_it": 249, "500_000": [249, 360], "dk": 249, "15530bba69924174860db778f2c6f8104d3aaf9d26241840c8c4a641c8d000a9": 249, "scrypt": [249, 493], "maxmem": 249, "7914": 249, "7693": 249, "fanout": 249, "leaf_siz": 249, "node_offset": 249, "node_depth": 249, "inner_s": 249, "last_nod": 249, "leaf": [249, 308, 392, 401], "salt_siz": 249, "person_s": 249, "max_key_s": 249, "max_digest_s": 249, "6ff843ba685842aa82031d3f53c48b66326df7639a63d128974c5c14f31a0f33343a8c65551134ed1ae0f2b0dd2bb495dc81039e3eeb0aa1bb0388bbeac29183": 249, "d24f26cf8de66472d58d4e1b1774b4c9158b1f4c": 249, "6fa1d8fcfd719046d762": 249, "eb6ec15daf9546254f0809": 249, "1bf21a98c78a1c376ae9": 249, "567004bf96e4a25773ebf4": 249, "indifferenti": 249, "3d363ff7401e02026f4a4687d4863c": 249, "symmetr": [249, 299, 333, 357, 360, 443, 445, 457, 477, 479, 480, 481, 490], "tamper": [249, 314], "secret_kei": 249, "pseudorandomli": 249, "auth_siz": 249, "good_sig": 249, "alic": 249, "43b3c982cf697e0c5ab22172d1ca7421": 249, "bob": [249, 298, 401, 474, 482, 483, 484, 486, 490], "0102030405060708090a0b0c0d0e0f00": 249, "e3c8102868d28b5ff85fc35dda07329970d1a01e273c37481326fe0c861c8142": 249, "signer": 249, "likelihood": [249, 359, 495], "106": [249, 276, 359, 476, 479], "salt1": 249, "salt2": 249, "h2": [249, 256, 283, 426], "serious": 249, "summarili": 249, "files_hash_person": 249, "block_hash_person": 249, "20d9cd024d4fb086aae819a1432dd2466de12947831b75c5a30cf2676095d3b4": 249, "cf68fb5761b9c44e7878bfb2c4c9aea52264a80b75005e65619778de59f383a3": 249, "orig_kei": 249, "rm5epjai72qck3rgbpw3vpnfzy5ozothi": 249, "khy6h21km": 249, "enc_kei": 249, "kencrypt": 249, "mac_kei": 249, "kmac": 249, "rbpb15": 249, "z9t": 249, "agffno5wuhb77vbri6f9iv2qixu7whw": 249, "g9gthfe1yluxy1zwplyk1": 249, "nwfu0wseb0krcjhdep": 249, "h00": 249, "h01": 249, "h10": 249, "3ad2a9b37c6070e374c7a8c508fe20ca86b6ed54e286e93a0318e95e881db5aa": 249, "jean": [249, 441, 483, 484, 490], "philipp": [249, 441, 482, 487], "aumasson": [249, 441], "samuel": [249, 353, 441, 480, 482, 493, 496], "neve": [249, 441, 493], "zooko": [249, 441], "wilcox": 249, "hearn": 249, "christian": [249, 441, 477, 481, 483, 487, 488, 490, 491, 493, 494, 495, 496], "winnerlein": 249, "finalist": 249, "henzen": 249, "willi": 249, "meier": 249, "raphael": 249, "phan": 249, "chacha": 249, "daniel": [249, 480, 483, 484, 487, 488, 489, 491, 492, 493], "bernstein": [249, 441, 483], "pyblake2": 249, "dmitri": [249, 481, 492, 493], "chestnykh": [249, 493], "heim": [249, 441, 483, 487, 488, 490, 491, 493, 494, 495, 496], "neighbor": [249, 428, 479, 480], "warranti": [249, 441, 495], "cc0": 249, "creativecommon": 249, "publicdomain": 249, "alexandr": [249, 483, 484, 486, 489, 491], "sokolovskii": 249, "nvlpub": 249, "gov": [249, 257, 480], "nistpub": 249, "csrc": 249, "cryptographic_hash_funct": 249, "rfc8018": 249, "cryptographi": [249, 251, 341, 353], "nistspecialpublication800": 249, "heapifi": [250, 333, 467], "heappush": [250, 467, 480, 483], "heappop": [250, 276, 467, 480, 483], "heappushpop": [250, 483], "heapreplac": [250, 333], "heapsort": 250, "challeng": [250, 298, 351, 359, 467, 489, 494], "tie": 250, "breaker": 250, "prioritizeditem": [250, 331], "pq": [250, 334], "entry_find": 250, "add_task": 250, "remove_task": 250, "pop_task": 250, "tournament": 250, "sport": 250, "winner": [250, 333], "oppon": 250, "loser": 250, "percol": 250, "midi": 250, "speedi": 250, "terribl": 250, "cleverli": 250, "fuzzili": 250, "melt": 250, "nowadai": [250, 373], "tape": [250, 373], "spectacular": 250, "2104": [251, 479], "digest_con": 251, "crypto_memcmp": 251, "x3e": [252, 254], "lenient": 252, "html5": [253, 490, 491], "name2codepoint": [253, 254], "codepoint2nam": 253, "entitydef": 253, "whatwg": [253, 409, 487, 493, 494, 495, 496], "multipag": 253, "convert_charref": [254, 491, 492], "myhtmlpars": 254, "handle_starttag": 254, "handle_endtag": 254, "handle_data": 254, "insofar": [254, 286, 451], "unprocess": 254, "getpo": 254, "get_starttag_text": 254, "handle_startendtag": 254, "handle_entityref": 254, "handle_charref": 254, "handle_com": 254, "condcom": 254, "ie9": 254, "handle_decl": 254, "decl": 254, "handle_pi": 254, "sgml": [254, 288, 432, 483], "unknown_decl": 254, "ent": 254, "startswith": [254, 308, 360, 368, 403, 414, 437, 466, 477, 480, 482, 483, 486, 490, 492, 495], "html4": 254, "buff": 254, "er": 254, "pan": 254, "soup": 254, "httpstatu": [255, 492, 496], "switching_protocol": 255, "7231": 255, "2518": 255, "103": [255, 276, 359, 360, 397, 476, 484, 489, 496], "early_hint": [255, 496], "8297": 255, "non_authoritative_inform": 255, "no_cont": 255, "reset_cont": 255, "partial_cont": 255, "7233": 255, "multi_statu": 255, "4918": 255, "already_report": 255, "5842": 255, "im_us": 255, "3229": 255, "multiple_choic": 255, "moved_perman": [255, 481], "see_oth": 255, "not_modifi": 255, "7232": [255, 484], "use_proxi": 255, "temporary_redirect": 255, "permanent_redirect": 255, "7238": 255, "bad_request": 255, "7235": 255, "payment_requir": 255, "not_found": [255, 256], "method_not_allow": 255, "not_accept": 255, "proxy_authentication_requir": 255, "request_timeout": 255, "length_requir": 255, "precondition_fail": 255, "request_entity_too_larg": 255, "request_uri_too_long": 255, "unsupported_media_typ": 255, "requested_range_not_satisfi": 255, "expectation_fail": 255, "418": [255, 456, 487, 490, 496], "im_a_teapot": [255, 496], "htcpcp": 255, "2324": 255, "misdirected_request": 255, "7540": 255, "422": 255, "unprocessable_ent": 255, "423": 255, "424": [255, 491], "failed_depend": 255, "too_earli": [255, 496], "8470": 255, "upgrade_requir": 255, "428": [255, 311, 491], "precondition_requir": 255, "6585": 255, "429": [255, 491], "too_many_request": 255, "431": 255, "request_header_fields_too_larg": 255, "unavailable_for_legal_reason": 255, "obstacl": 255, "7725": 255, "internal_server_error": 255, "not_impl": 255, "bad_gatewai": 255, "service_unavail": 255, "gateway_timeout": 255, "http_version_not_support": 255, "506": [255, 341, 493], "variant_also_negoti": 255, "2295": 255, "507": 255, "insufficient_storag": 255, "508": 255, "loop_detect": 255, "510": 255, "not_extend": 255, "2774": 255, "network_authentication_requir": 255, "httpmethod": 255, "5789": 255, "h3": 256, "h4": 256, "httpsconnect": [256, 410, 483, 484, 489, 491, 494], "key_fil": [256, 410], "cert_fil": [256, 410], "unverifi": [256, 257, 410], "_create_unverified_context": [256, 484, 491], "post_handshake_auth": [256, 357, 493, 494, 495], "alpn": [256, 357, 410, 487, 492], "set_alpn_protocol": [256, 357, 410, 492], "debuglevel": [256, 351, 374, 410, 492], "httpexcept": 256, "notconnect": 256, "invalidurl": 256, "unknownprotocol": 256, "unknowntransferencod": 256, "unimplementedfilemod": 256, "incompleteread": 256, "improperconnectionst": 256, "cannotsendrequest": 256, "cannotsendhead": 256, "responsenotreadi": 256, "badstatuslin": 256, "linetoolong": 256, "remotedisconnect": [256, 492], "getrespons": [256, 492], "http_port": 256, "https_port": 256, "encode_chunk": 256, "reconnect": [256, 492], "set_tunnel": [256, 434, 489], "tunnel": [256, 489], "putrequest": 256, "skip_host": 256, "skip_accept_encod": 256, "puthead": 256, "endhead": [256, 493], "message_bodi": 256, "7230": [256, 410], "amt": 256, "getcod": [256, 410], "r1": [256, 399, 409], "data1": [256, 405], "r2": [256, 399, 409], "data2": [256, 405], "12524": 256, "issue12524": 256, "filecont": 256, "2965": [257, 410], "2109": [257, 258], "cookie2": 257, "loaderror": 257, "delayload": 257, "blocked_domain": 257, "allowed_domain": 257, "rfc2965": 257, "rfc2109_as_netscap": 257, "hide_cookie2": 257, "strict_domain": 257, "strict_rfc2965_unverifi": 257, "strict_ns_unverifi": 257, "strict_ns_domain": 257, "domainliber": 257, "strict_ns_set_initial_dollar": 257, "strict_ns_set_path": 257, "secure_protocol": 257, "wss": [257, 409], "websocket": [257, 272], "downgrad": 257, "make_cooki": 257, "curl": [257, 475, 476], "cookie_spec": 257, "kristol": 257, "errata": [257, 277], "2964": 257, "add_cookie_head": 257, "get_full_url": [257, 410], "get_head": [257, 401, 410], "header_item": [257, 410], "add_unredirected_head": [257, 410], "origin_req_host": [257, 410], "get_origin_req_host": [257, 410, 491], "extract_cooki": 257, "set_ok": 257, "set_polici": 257, "set_cookie_if_ok": 257, "set_cooki": 257, "clear_session_cooki": 257, "ignore_discard": 257, "ignore_expir": 257, "wipe": 257, "mozillacookiejar": 257, "lynx": [257, 418, 481], "lwpcookiejar": 257, "libwww": [257, 481], "cookie3": 257, "return_ok": 257, "domain_return_ok": 257, "path_return_ok": 257, "mycookiepolici": 257, "i_dont_want_to_store_this_cooki": 257, "tighten": [257, 477, 484, 489], "loos": [257, 380], "benign": 257, "blocklist": 257, "allowlist": [257, 409], "set_blocked_domain": 257, "coyot": 257, "193": [257, 399, 485], "is_block": 257, "set_allowed_domain": 257, "is_not_allow": 257, "nz": 257, "domainstrictnodot": 257, "domainstrictnondomain": 257, "domainrfc2965match": 257, "domainstrict": 257, "acm": [257, 333], "rocket_launch": 257, "expiri": 257, "is_expir": 257, "comment_url": 257, "rfc2109": 257, "port_specifi": 257, "domain_specifi": 257, "domain_initial_dot": 257, "has_nonstandard_attr": 257, "get_nonstandard_attr": 257, "set_nonstandard_attr": 257, "cj": 257, "serializ": [258, 277], "2068": [258, 381], "ascii_lett": [258, 341, 361, 479, 485], "cookieerror": 258, "basecooki": 258, "simplecooki": 258, "value_decod": 258, "value_encod": 258, "real_valu": 258, "coded_valu": [258, 492, 494], "js_output": 258, "rawdata": 258, "http_cooki": 258, "httponli": [258, 483], "samesit": 258, "csrf": 258, "lax": [258, 482], "isreservedkei": 258, "outputstr": 258, "fig": 258, "newton": [258, 334], "wafer": 258, "rocki": [258, 483], "chip": [258, 484], "ahoi": 258, "vienna": 258, "finger": [258, 485], "keebler": 258, "fudg": 258, "012": [258, 276, 360, 478], "oreo": 258, "doublestuff": 258, "twix": 258, "httpserver": [259, 348, 422], "server_class": [259, 422], "handler_class": [259, 422], "server_address": [259, 354, 422], "8000": [259, 310, 348, 422, 434, 435, 482, 495], "httpd": [259, 291, 348, 422, 482], "requesthandlerclass": [259, 354, 422], "server_nam": [259, 422, 435], "server_port": [259, 422], "threadinghttpserv": [259, 494], "threadingmixin": [259, 354, 494], "client_address": [259, 354, 422], "do_spam": 259, "close_connect": 259, "handle_one_request": 259, "requestlin": 259, "3986": [259, 409, 484, 487, 492, 493, 494, 495, 496], "hier": 259, "request_vers": 259, "messageclass": 259, "rfile": [259, 354], "wfile": [259, 354, 493], "server_vers": 259, "basehttp": 259, "sys_vers": 259, "version_str": 259, "error_message_format": [259, 491], "send_error": [259, 491], "error_content_typ": 259, "protocol_vers": [259, 262], "send_head": 259, "send_response_onli": 259, "handle_expect_100": 259, "send_respons": 259, "date_time_str": 259, "end_head": [259, 490], "flush_head": [259, 490], "log_request": 259, "log_error": 259, "log_messag": 259, "1994": [259, 441], "log_date_time_str": 259, "address_str": 259, "simplehttprequesthandl": [259, 348, 494], "do_get": 259, "simplehttp": 259, "extensions_map": 259, "list_directori": 259, "webserv": 259, "9000": [259, 401, 445], "cgihttprequesthandl": 259, "empt": 259, "cgi_directori": 259, "htbin": 259, "do_post": 259, "scrub": 259, "nefari": 259, "namag": 261, "aqua": [261, 474], "unsav": 261, "undon": [261, 399, 404, 405], "clipboard": [261, 384, 493, 494, 495], "reformat": [261, 286, 307, 480], "tabifi": 261, "untabifi": 261, "toggl": [261, 353, 391, 464, 495, 496], "chitespac": 261, "autosav": 261, "pane": [261, 390, 391], "zoom": 261, "momentarili": [261, 286], "deiconifi": 261, "idlerc": 261, "squeez": [261, 493, 494, 495], "dicuss": 261, "leftarrow": 261, "rightarrow": 261, "pageup": 261, "pagedown": 261, "popup": [261, 377], "100000000": 261, "uncolor": 261, "idlestartup": 261, "pythonstartup": [261, 335, 349, 368, 453, 470, 491], "masquerad": [261, 404, 475], "tcpconnect": 261, "irv": [261, 457], "6543": 261, "tcplisten": 261, "antiviru": [261, 377], "taught": [261, 359], "admin": 261, "zombi": [261, 298, 354, 377, 482, 490], "pythonw": [261, 298, 349, 368, 474, 476, 479, 493, 494], "dismiss": [261, 399], "glitch": 261, "active_count": [261, 298, 380, 483, 487], "__stdin__": [261, 368, 465], "__stdout__": [261, 347, 368, 465], "__stderr__": [261, 368, 377, 465], "pyw": [261, 453, 476, 479], "setrecursionlimit": [261, 314, 368, 465, 477, 488], "plane": [261, 290, 487], "x02": [261, 274, 299, 353, 363, 413], "x07": [261, 299, 413], "x08c": 261, "loopback": [261, 274, 377], "transient": [261, 283, 356], "f5": [261, 477], "mousewheel": 261, "scrollbar": [261, 384, 389, 391, 399], "toc": 261, "dock": 261, "zzdummi": 261, "imap4_ssl": [262, 490, 496], "imap4_stream": [262, 496], "imap4rev1": 262, "1730": 262, "imap4_port": 262, "logout": [262, 492, 495], "noop": [262, 298, 320, 350, 351], "d25if65hy903weo": 262, "imap4_ssl_port": 262, "ssl_context": [262, 303], "993": 262, "internaldate2tupl": 262, "datestr": 262, "int2ap": 262, "parseflag": 262, "flagstr": 262, "time2internald": 262, "date_tim": [262, 437], "expung": 262, "uw": 262, "message_set": 262, "authobject": [262, 351], "checkpoint": [262, 368], "new_mailbox": 262, "deleteacl": [262, 481], "acl": [262, 347], "5161": [262, 492], "6855": [262, 492], "message_part": 262, "getacl": [262, 479], "cyru": 262, "getannot": 262, "getquota": 262, "rfc2087": 262, "getquotaroot": 262, "login_cram_md5": 262, "cram": [262, 351], "lsub": 262, "myright": [262, 481], "2342": [262, 479], "message_num": 262, "proxyauth": 262, "authoris": 262, "oldmailbox": 262, "newmailbox": 262, "criterion": [262, 314, 443, 477], "msgnum": 262, "ldj": 262, "inbox": [262, 286], "setacl": [262, 479], "setannot": 262, "setquota": 262, "sort_criteria": 262, "search_criterion": 262, "flag_list": 262, "3501": 262, "gmail": 262, "nonetheless": 262, "threading_algorithm": 262, "unsubscrib": 262, "unselect": [262, 496], "xatom": 262, "utf8_en": [262, 492], "sgi": 263, "imglib": 263, "87a": 263, "89a": 263, "graymap": 263, "pixmap": [263, 390], "raster": 263, "jfif": 263, "exif": 263, "openexr": [263, 492], "bass": [263, 352], "get_mag": [264, 491], "magic_numb": [264, 265, 491], "get_suffix": 264, "py_sourc": 264, "c_extens": 264, "find_modul": [264, 265, 368, 438, 447, 480, 487, 488, 490, 491, 494], "c_builtin": 264, "py_frozen": 264, "pkg_directori": 264, "find_spec": [264, 265, 317, 368, 438, 447, 487, 491, 492, 494], "find_load": [264, 265, 317, 438, 447, 487, 488, 490, 491, 494], "conduct": 264, "spec_from_file_loc": [264, 265, 493], "module_from_spec": [264, 265, 400, 492], "new_modul": 264, "rebound": [264, 265, 451, 455], "cache_from_sourc": [264, 265, 489, 491, 492, 493], "debug_overrid": [264, 265, 492], "get_tag": [264, 265, 489], "lock_held": 264, "acquire_lock": [264, 485], "release_lock": [264, 485], "nullimport": [264, 368, 447, 490], "path_str": 264, "comprehend": 265, "3120": [265, 450, 485], "anchor": [265, 311, 357, 369, 384, 391, 484, 491], "invalidate_cach": [265, 438, 487, 490, 494], "resourceload": [265, 494], "inspectload": [265, 491, 492], "executionload": 265, "fileload": [265, 490, 491], "sourceload": [265, 490, 491], "spec_from_load": [265, 487], "pathfind": [265, 447, 487, 488, 491, 494], "get_resource_read": [265, 267, 268, 494], "resourceread": [265, 267, 268, 494], "module_for_load": [265, 487, 488, 491], "module_repr": [265, 447, 487, 488, 491], "get_data": [265, 317, 410, 438, 483, 491], "get_sourc": [265, 280, 438, 491], "source_to_cod": [265, 491, 492], "sourceless": [265, 490, 492], "path_stat": [265, 490], "path_mtim": [265, 490], "set_data": 265, "source_suffix": 265, "debug_bytecode_suffix": 265, "bytecode_suffix": 265, "optimized_bytecode_suffix": 265, "extension_suffix": 265, "all_suffix": [265, 270], "getmodulenam": [265, 270, 493], "builtinimport": [265, 487, 488, 493], "allevi": [265, 477], "frozenimport": [265, 487, 488, 491], "windowsregistryfind": [265, 476, 487, 488, 493], "filefind": [265, 317, 487, 488, 490], "loader_detail": 265, "sourcelessfileload": [265, 490, 493], "extensionfileload": [265, 490, 491, 493], "namespaceload": [265, 491], "path_find": 265, "my_namespac": 265, "loader_st": 265, "submodule_search_loc": [265, 267, 447], "has_loc": [265, 447], "decode_sourc": [265, 491], "source_byt": 265, "resolve_nam": [265, 317, 496], "set_load": [265, 491], "set_packag": [265, 491], "source_hash": [265, 494], "lazyload": [265, 492, 493], "lazy_load": 265, "file_path": 265, "lazy_import": 265, "lazy_typ": 265, "spammetapathfind": 265, "spampathentryfind": 265, "absolute_nam": 265, "parent_nam": 265, "child_nam": 265, "rpartit": [265, 360, 482, 484, 489], "parent_modul": 265, "pkg_resourc": [266, 267], "discover": [266, 327, 476, 491], "package_distribut": 266, "importlib_metadata": [266, 487, 496], "entrypoint": [266, 487], "console_script": 266, "entry_point": 266, "ep": 266, "setup_keyword": [266, 480], "egg_info": 266, "0x103528488": 266, "selectablegroup": 266, "wheel_metadata": 266, "packagemetadata": 266, "566": 266, "requires_python": [266, 322], "quickest": [266, 463], "packagepath": [266, 495], "purepath": [266, 308, 311, 487, 488, 496], "859": 266, "_hook": 266, "pathdistribut": 266, "0x101e0cef0": 266, "filehash": 266, "bykw5omccfazvcoyqwkkkemovymafor34mmkbx8r1ni": 266, "read_text": [266, 267, 268, 273, 311, 437, 488, 492], "text_typ": 266, "posixpath": [266, 309, 311], "gustav": 266, "always_iter": 266, "pytest": [266, 403], "cov": 266, "packages_distribut": [266, 487], "pyyaml": [266, 484, 486], "jaraco": 266, "find_distribut": 266, "distributionfind": 266, "leverag": [267, 298, 491, 496], "as_fil": [267, 268], "open_binari": [267, 488], "binaryio": [267, 401], "joinpath": [267, 268, 311, 437], "open_text": [267, 488], "textio": [267, 401], "read_binari": [267, 488], "read_byt": [267, 268, 293, 311, 437, 492], "is_resourc": [267, 268, 488], "is_fil": [267, 268, 308, 311, 437, 492, 495], "iterdir": [267, 268, 311, 437], "traversableresourc": 268, "perspect": [268, 422], "artifact": [268, 310, 474, 490], "correl": [268, 359, 487, 488], "open_resourc": 268, "resource_path": 268, "is_dir": [268, 308, 311, 437, 493, 495], "getmemb": [270, 373, 492], "set_coroutine_origin_tracking_depth": [270, 368, 465, 494], "__code__": [270, 360, 443, 485, 495], "__defaults__": [270, 443, 485], "__kwdefaults__": [270, 443, 491], "tb_frame": [270, 400, 443], "tb_lasti": [270, 400, 443], "tb_lineno": [270, 396, 400, 443], "tb_next": [270, 396, 400, 443, 494], "f_back": [270, 396, 443, 488], "f_code": [270, 396, 443, 480, 488], "f_lineno": [270, 443, 480, 487, 488, 493], "f_trace": [270, 368, 443, 488], "co_argcount": [270, 443], "co_flag": [270, 443], "co_": 270, "co_posonlyargcount": [270, 443, 495], "co_kwonlyargcount": [270, 443], "co_nloc": [270, 443], "co_stacks": [270, 443], "gi_fram": [270, 482], "gi_run": 270, "gi_cod": [270, 483, 492], "gi_yieldfrom": [270, 492], "cr_await": 270, "cr_frame": 270, "cr_run": 270, "cr_code": 270, "cr_origin": [270, 368], "getmembers_stat": [270, 488], "ismodul": 270, "isclass": [270, 443], "ismethod": 270, "isfunct": 270, "isgeneratorfunct": [270, 483], "isgener": [270, 483], "iscoroutinefunct": [270, 404, 492], "gen_coro": 270, "isasyncgenfunct": 270, "agen": [270, 445], "isasyncgen": 270, "istraceback": 270, "isfram": 270, "iscod": 270, "isbuiltin": 270, "ismethodwrapp": [270, 488], "methodwrappertyp": [270, 400, 488, 494], "isroutin": 270, "isabstract": [270, 483], "ismethoddescriptor": 270, "isdatadescriptor": 270, "isgetsetdescriptor": 270, "ismemberdescriptor": 270, "getdoc": [270, 443, 492, 495], "getcom": [270, 328], "getfil": 270, "getmodul": 270, "getsourcefil": 270, "getsourcelin": 270, "getsourc": 270, "follow_wrap": [270, 492], "eval_str": 270, "__signature__": [270, 491], "unannounc": 270, "return_annot": 270, "boundargu": [270, 490, 492, 496], "bind_parti": 270, "omiss": [270, 329, 353], "new_sig": 270, "anno": 270, "from_cal": [270, 487, 488, 492], "mysignatur": 270, "implicit0": [270, 493], "keyword_onli": 270, "positional_onli": 270, "var_posit": 270, "var_keyword": 270, "apply_default": [270, 492], "getclasstre": 270, "getfullargspec": [270, 328, 488, 491, 492, 493], "fullargspec": 270, "varkw": 270, "kwonlydefault": 270, "getargspec": [270, 488, 491, 492, 493], "getargvalu": [270, 492], "arginfo": 270, "formatargvalu": [270, 492], "formatarg": 270, "formatvararg": 270, "formatvarkw": 270, "formatvalu": 270, "getmro": 270, "getcallarg": [270, 484, 492], "getclosurevar": [270, 490], "closurevar": 270, "conting": 270, "frameinfo": [270, 488], "code_context": 270, "lifespan": 270, "handle_stackframe_without_leak": 270, "currentfram": [270, 488], "getframeinfo": [270, 488], "getouterfram": [270, 488, 492], "getinnerfram": [270, 488, 492], "getattr_stat": [270, 489], "slot_descriptor": 270, "getset_descriptor": 270, "wrapper_descriptor": [270, 481], "descriptor_typ": 270, "getgeneratorst": [270, 489], "gen_creat": [270, 489], "gen_run": 270, "gen_suspend": [270, 489], "gen_clos": [270, 489], "getcoroutinest": [270, 492], "coro_cr": 270, "coro_run": 270, "coro_suspend": 270, "coro_clos": 270, "getgeneratorloc": [270, 490], "getcoroutineloc": [270, 492], "co_optim": 270, "co_newloc": 270, "co_vararg": 270, "co_varkeyword": 270, "co_nest": 270, "co_gener": 270, "co_coroutin": [270, 495], "co_async_gener": 270, "bore": [272, 456, 484], "novel": [272, 299, 479, 480, 482], "enjoi": [272, 401, 428], "glibc": [272, 274, 308, 337, 488, 491, 495, 496], "sandbox": [272, 339, 368], "wasm": [272, 471], "nodej": 272, "wasmtim": 272, "pyodid": [272, 488], "pyscript": 272, "xmlhttprequest": 272, "execv": [272, 307, 308, 321, 490], "markdown": [273, 487], "md": 273, "686": [273, 308], "597": [273, 487], "pythonwarndefaultencod": [273, 470, 487], "text_encod": 273, "blksize": [273, 422], "unsupportedoper": 273, "unoptim": [273, 492], "bufferedrwpair": [273, 483], "readal": [273, 487, 491], "readinto1": [273, 492], "seek_": 273, "seek_hol": [273, 308, 490], "seek_data": [273, 308, 490], "immin": 273, "latenc": [273, 284, 308, 456, 484, 487, 493], "initial_byt": 273, "getbuff": [273, 489], "ab56ef": 273, "line_buff": 273, "getpreferredencod": [273, 281, 308, 364, 488, 494], "nsecond": [273, 464], "incrementalnewlinedecod": 273, "subnet": [274, 490, 492], "downsid": [274, 476, 490, 494], "3232235521": [274, 361], "xc0": [274, 479], "xa8": 274, "max_prefixlen": 274, "reverse_point": [274, 492], "arpa": [274, 374, 492], "ip6": [274, 492], "is_multicast": 274, "multicast": [274, 353, 377, 413], "3171": 274, "2373": 274, "is_priv": 274, "is_glob": [274, 367, 491], "is_unspecifi": 274, "5735": 274, "is_reserv": [274, 311], "is_loopback": 274, "3330": 274, "is_link_loc": 274, "3927": 274, "0b11000000101010000000000000000001": 274, "2001_0db8_0000_0000_0000_0000_0000_1000": 274, "_n": 274, "0x2001_0db8_0000_0000_0000_0000_0000_1000": 274, "longhand": 274, "4291": 274, "0abc": 274, "0007": 274, "0def": 274, "scope_id": [274, 353, 496], "4007": 274, "fe80": 274, "ff02": 274, "5678": [274, 413], "is_site_loc": 274, "3879": 274, "4193": 274, "ipv4_map": 274, "sixtofour": 274, "6to4": 274, "3056": 274, "teredo": 274, "4380": 274, "nbit": 274, "ff00": 274, "cisco": 274, "network_address": 274, "broadcast_address": 274, "with_prefixlen": 274, "with_netmask": 274, "with_hostmask": 274, "prefixlen": 274, "wholli": [274, 428], "address_exclud": 274, "n1": 274, "n2": 274, "prefixlen_diff": 274, "new_prefix": 274, "supernet": [274, 492], "subnet_of": [274, 494], "supernet_of": [274, 494], "compare_network": 274, "db00": 274, "anycast": 274, "v4_int_to_pack": 274, "v6_int_to_pack": 274, "summarize_address_rang": [274, 492], "ipaddr": 274, "collapse_address": [274, 492], "get_mixed_type_kei": 274, "sortabl": [274, 284], "apl": [276, 486, 489], "sml": 276, "recast": [276, 489], "algebra": [276, 469, 483], "succinctli": [276, 455], "tabul": [276, 360, 426], "vec1": 276, "vec2": [276, 401], "p0": 276, "plast": 276, "q0": 276, "q1": 276, "from_iter": [276, 483], "pred": [276, 414], "abcdefg": [276, 306, 488], "pairwis": [276, 399, 487], "it1": 276, "it2": 276, "itn": 276, "fillvalu": [276, 336, 483], "ax": 276, "bd": 276, "addabl": 276, "110": [276, 320, 359, 361, 456], "amort": 276, "1296": 276, "loan": 276, "annual": [276, 496], "cashflow": 276, "bal": 276, "pmt": 276, "960": 276, "918": 276, "873": 276, "9000000000001": 276, "827": 276, "5950000000001": 276, "013": 276, "023": 276, "uniq": [276, 481], "BY": [276, 356, 441], "uniquekei": 276, "aaaabbbccdaabbb": 276, "aaaabbbccd": 276, "aaaa": [276, 334, 484], "bbb": 276, "tgtkei": 276, "currkei": 276, "currvalu": 276, "_grouper": 276, "nexti": 276, "021": 276, "210": 276, "odomet": 276, "ai": [276, 334], "bx": 276, "cy": 276, "dx": [276, 359], "dy": 276, "011": 276, "prod": [276, 290, 495], "mydequ": 276, "newval": 276, "uneven": [276, 333], "num_act": 276, "incub": 276, "iter_index": 276, "superior": 276, "all_equ": 276, "ncycl": 276, "grouper": 276, "gxx": 276, "sumprod": 276, "sum_of_squar": 276, "1400": 276, "matmul": [276, 306, 492], "m2": [276, 479, 484, 488, 490], "matric": [276, 303, 478], "convolv": 276, "betterexplain": 276, "convolut": 276, "polynomial_from_root": 276, "x\u00b3": 276, "4x\u00b2": 276, "17x": [276, 487], "polynomial_ev": 276, "horner": 276, "aabcadeaf": 276, "seq_index": 276, "indexof": [276, 306, 496], "siev": 276, "isqrt": [276, 290, 495], "list_of_list": 276, "repeatfunc": 276, "triplewis": 276, "triplet": 276, "cde": 276, "efg": 276, "sliding_window": 276, "cdef": 276, "defg": 276, "sakki": [276, 484], "is_odd": 276, "before_and_aft": 276, "abcdefghi": 276, "all_upp": 276, "true_iter": 276, "remainder_iter": 276, "subslic": [276, 333], "getitem": [276, 306, 405, 479], "powerset": 276, "unique_everseen": 276, "abbccad": 276, "dedupl": 276, "unique_justseen": 276, "iter_except": 276, "first_tru": 276, "nth_combin": 276, "comb": [276, 290, 359, 457, 488, 495], "7159": [277, 492], "4627": 277, "ecma": 277, "sort_kei": [277, 319, 489], "x08ar": 277, "as_complex": 277, "dct": 277, "object_hook": 277, "parse_float": [277, 394], "complexencod": 277, "unord": [277, 298, 360, 443, 457], "skipkei": [277, 319], "ensure_ascii": [277, 492], "check_circular": 277, "allow_nan": 277, "item_separ": 277, "key_separ": 277, "parse_int": 277, "parse_const": 277, "object_pairs_hook": [277, 484, 486], "deseri": [277, 299, 314, 356, 440, 461, 484, 488, 491, 493], "num_str": [277, 394], "jsondecod": [277, 484, 493], "raw_decod": 277, "bigobject": 277, "colno": [277, 334, 492], "forbid": [277, 314, 357, 360, 388, 424, 484], "weird_json": 277, "voluntarili": [277, 308], "mp_film": 277, "1971": [277, 356, 359], "holi": [277, 356, 361, 457], "grail": [277, 356, 418, 457], "2028": 277, "2029": 277, "ecmascript": [277, 425], "iskeyword": [278, 360], "issoftkeyword": 278, "softkwlist": 278, "detect_encod": [280, 393], "getlin": [280, 397, 492], "module_glob": [280, 415], "clearcach": 280, "checkcach": 280, "lazycach": [280, 492], "_local": [281, 496], "localeconv": [281, 360, 467, 493, 494], "lc_numer": [281, 360, 492, 493, 494], "decimal_point": [281, 360], "thousands_sep": [281, 360], "char_max": 281, "lc_monetari": 281, "int_curr_symbol": 281, "currency_symbol": [281, 467], "p_cs_preced": 281, "n_cs_preced": 281, "p_sep_by_spac": 281, "n_sep_by_spac": 281, "mon_decimal_point": 281, "frac_digit": [281, 467], "int_frac_digit": 281, "mon_thousands_sep": 281, "mon_group": 281, "positive_sign": 281, "negative_sign": 281, "p_sign_posn": 281, "n_sign_posn": 281, "d_t_fmt": 281, "d_fmt": 281, "t_fmt": 281, "t_fmt_ampm": 281, "day_2": 281, "day_3": 281, "day_4": 281, "day_5": 281, "day_6": 281, "day_7": 281, "abday_1": 281, "abday_2": 281, "abday_3": 281, "abday_4": 281, "abday_5": 281, "abday_6": 281, "abday_7": 281, "mon_1": 281, "mon_2": 281, "mon_3": 281, "mon_4": 281, "mon_5": 281, "mon_6": 281, "mon_7": 281, "mon_8": 281, "mon_9": 281, "mon_10": 281, "mon_11": 281, "mon_12": 281, "abmon_1": 281, "abmon_2": 281, "abmon_3": 281, "abmon_4": 281, "abmon_5": 281, "abmon_6": 281, "abmon_7": 281, "abmon_8": 281, "abmon_9": 281, "abmon_10": 281, "abmon_11": 281, "abmon_12": 281, "radixchar": 281, "thousep": 281, "yesexpr": 281, "noexpr": 281, "crncystr": 281, "era": [281, 482], "emperor": 281, "reign": 281, "era_d_t_fmt": 281, "era_d_fmt": 281, "era_t_fmt": 281, "alt_digit": 281, "getdefaultlocal": [281, 470, 488], "envvar": [281, 377], "1766": 281, "getlocal": [281, 488], "lc_": 281, "do_setlocal": [281, 308], "localenam": 281, "resetlocal": [281, 488], "string1": [281, 356, 457], "string2": [281, 356, 457], "lc_collat": 281, "format_str": [281, 361, 467, 482, 492, 494], "0f": [281, 282, 489], "deloc": [281, 492], "atof": [281, 481, 482], "ssh": [281, 303, 346, 347, 409], "pyctyp": [281, 487], "py_tolow": [281, 484], "loc": 281, "xe4n": 281, "umlaut": 281, "bind_textdomain_codeset": [281, 481, 488, 495], "mylib": [282, 403], "grip": [282, 391], "geteffectivelevel": 282, "getchild": [282, 484], "stack_info": 282, "clientip": 282, "fblogg": 282, "hdlr": 282, "findcal": 282, "lno": 282, "sinfo": 282, "hashandl": 282, "createlock": [282, 284], "tidi": [282, 403, 480, 482, 483], "emiss": [282, 377], "formattim": 282, "preparatori": 282, "formatstack": 282, "uuu": 282, "default_time_format": 282, "default_msec_format": 282, "print_except": [282, 284, 396, 487], "linefmt": 282, "formathead": 282, "formatfoot": 282, "footer": [282, 357], "tracebacktyp": [282, 396, 400, 443, 494], "msec": [282, 382, 492], "004": 282, "896": [282, 359], "la": [282, 482], "_log": 282, "entrant": 282, "getloggerclass": 282, "throttl": 282, "28524": 282, "addlevelnam": 282, "getlevelnamesmap": [282, 488], "reinstat": [282, 455], "attrdict": 282, "reconstitut": [282, 314], "orderli": 282, "klass": 282, "capturewarn": [282, 415], "formatwarn": [282, 415, 483], "inabl": [283, 308, 441], "dictconfigur": 283, "dictconfigclass": 283, "uncustom": 283, "default_logging_config_port": 283, "decrypt": [283, 357, 437], "victim": 283, "customis": [283, 333, 399], "allow_foo": 283, "logconfig": 283, "compel": [283, 484], "customformatterfactori": 283, "_after_": 283, "my_app": 283, "tld": 283, "support_team": 283, "dev_team": 283, "houston": 283, "mykei": 283, "config_dict": 283, "baseconfigur": 283, "log01": 283, "logger_log01": 283, "hand01": 283, "handler_hand01": 283, "form01": 283, "formatter_form01": 283, "log02": 283, "log03": 283, "log04": 283, "log05": 283, "log06": 283, "log07": 283, "hand02": 283, "hand03": 283, "hand04": 283, "hand05": 283, "hand06": 283, "hand07": 283, "hand08": 283, "hand09": 283, "form02": 283, "form03": 283, "form04": 283, "form05": 283, "form06": 283, "form07": 283, "form08": 283, "form09": 283, "logger_pars": 283, "_defaultformatt": 283, "handler_hand02": 283, "handler_hand03": 283, "handler_hand04": 283, "default_udp_logging_port": 283, "handler_hand05": 283, "syslog_udp_port": [283, 284], "log_us": [283, 284, 371], "handler_hand06": 283, "handler_hand07": 283, "user1": [283, 488], "user2": [283, 488], "handler_hand08": 283, "handler_hand09": 283, "9022": 283, "typifi": 283, "setstream": [284, 296, 494], "42378": 284, "newsyslog": 284, "logrot": 284, "inod": [284, 308, 358], "st_ino": [284, 308, 358], "reopenifneed": [284, 493], "precursor": 284, "rotation_filenam": 284, "rollov": [284, 375, 491], "getfilestodelet": 284, "default_nam": [284, 443], "predetermin": 284, "dorollov": 284, "attim": [284, 491], "w0": 284, "w6": 284, "w1": [284, 455], "d_": 284, "ly": [284, 334, 461], "makesocket": 284, "record_attr_dict": 284, "datalen": 284, "createsocket": [284, 488], "retrystart": 284, "retryfactor": 284, "retrymax": 284, "rsyslog": 284, "monterei": 284, "gh": [284, 299, 334, 364, 401, 483, 487, 488, 493, 494, 495, 496], "91070": 284, "12168": 284, "append_nul": [284, 490], "12419": 284, "encodeprior": 284, "log_": 284, "log_alert": [284, 371], "crit": 284, "log_crit": [284, 371], "log_debug": [284, 371], "panic": [284, 480], "log_emerg": [284, 371], "log_err": [284, 371], "log_info": [284, 371], "log_notic": [284, 371], "log_warn": [284, 371], "log_auth": [284, 371], "authpriv": 284, "log_authpriv": [284, 371], "cron": 284, "log_cron": [284, 371], "log_daemon": [284, 371], "log_ftp": 284, "kern": 284, "log_kern": [284, 371], "lpr": 284, "log_lpr": [284, 371], "log_mail": [284, 371], "log_new": [284, 371], "log_syslog": [284, 371], "uucp": 284, "log_uucp": [284, 371], "local0": 284, "log_local0": [284, 371], "local1": 284, "log_local1": 284, "local2": 284, "log_local2": 284, "local3": 284, "log_local3": 284, "local4": 284, "log_local4": 284, "local5": 284, "log_local5": 284, "local6": 284, "log_local6": 284, "local7": 284, "log_local7": [284, 371], "mapprior": 284, "hammond": [284, 476, 477, 479, 480, 490], "logtyp": 284, "win32servic": 284, "slimmer": 284, "geteventcategori": 284, "geteventtyp": 284, "getmessageid": 284, "credenti": [284, 303, 353, 410, 476, 492], "getsubject": 284, "shouldflush": 284, "flushonclos": 284, "settarget": 284, "maplogrecord": 284, "lzmafil": [285, 491], "lzmaerror": 285, "preset": [285, 318, 373], "lzmadecompressor": [285, 492], "lzmacompressor": 285, "format_xz": 285, "format_alon": 285, "format_raw": 285, "format_auto": 285, "check_non": 285, "check_crc32": 285, "check_crc64": 285, "check_sha256": 285, "preset_extrem": 285, "preset_default": 285, "memlimit": 285, "check_unknown": 285, "is_check_support": 285, "liblzma": [285, 488], "filter_lzma1": 285, "filter_lzma2": 285, "filter_delta": 285, "bcj": 285, "filter_x86": 285, "filter_ia64": 285, "filter_arm": 285, "filter_armthumb": 285, "filter_powerpc": 285, "filter_sparc": 285, "dict_siz": 285, "lc": 285, "mode_fast": 285, "mode_norm": 285, "nice_len": 285, "mf": 285, "mf_hc3": 285, "mf_hc4": 285, "mf_bt2": 285, "mf_bt3": 285, "mf_bt4": 285, "start_offset": 285, "data_in": 285, "data_out": 285, "lzc": 285, "out1": 285, "out2": 285, "out3": 285, "out4": 285, "lzf": 285, "my_filt": 285, "noteworthi": [286, 460, 477, 478], "get_messag": 286, "get_byt": [286, 489], "get_str": [286, 489], "get_fil": [286, 489], "externalclasherror": 286, "qmail": 286, "cur": [286, 356], "courier": [286, 384, 387], "exclam": [286, 312, 361, 391, 421, 450], "list_fold": 286, "get_fold": 286, "nosuchmailboxerror": 286, "add_fold": 286, "remove_fold": 286, "notemptyerror": 286, "deserv": [286, 465, 477], "inventor": [286, 384], "shortcom": [286, 480], "mboxo": 286, "mh_sequenc": 286, "mh_profil": 286, "get_sequ": 286, "set_sequ": 286, "correspondingli": [286, 334, 477], "nmh": 286, "gpl": [286, 441, 479], "rmail": 286, "037": 286, "014": 286, "abridg": 286, "attract": [286, 483, 485], "get_label": 286, "multichannel": 286, "memorandum": 286, "newsread": 286, "composit": [286, 368, 391, 402, 447, 457, 488], "bounc": [286, 477], "get_subdir": 286, "get_flag": 286, "set_subdir": 286, "set_flag": 286, "add_flag": 286, "remove_flag": 286, "set_dat": 286, "get_info": 286, "set_info": 286, "unseen": 286, "mua": [286, 357, 494], "get_from": 286, "set_from": 286, "time_": 286, "add_sequ": 286, "remove_sequ": 286, "set_label": 286, "add_label": 286, "remove_label": 286, "get_vis": 286, "set_vis": 286, "update_vis": 286, "list_nam": 286, "list_id": 286, "mpeg": 287, "xmpeg": 287, "1524": 287, "findmatch": 287, "cap": 287, "showparti": 287, "getcap": [287, 303], "tmp1223": 287, "unmarsh": [289, 488], "unauthent": [289, 329, 357, 424, 426, 427, 428, 429, 434, 435], "therein": [289, 314], "stem": [289, 311, 436, 437, 484, 488], "binomi": [290, 359], "\u207f": 290, "copysign": [290, 483], "fab": 290, "fmod": [290, 445], "frexp": 290, "mantissa": [290, 333, 481, 483], "9999999999999999": 290, "summat": [290, 459], "\u00b2": 290, "lcm": [290, 496], "ldexp": [290, 333], "modf": 290, "nextaft": [290, 496], "ulp": [290, 333, 368, 483, 496], "halfwai": [290, 485], "trunc": [290, 304, 360, 443, 483], "denorm": [290, 368], "epsilon": [290, 368, 483], "cbrt": [290, 488], "cube": [290, 461, 464, 488], "718281": 290, "exp2": [290, 488], "expm1": [290, 484, 489], "0000050000069649e": 290, "0000050000166668e": 290, "log1p": [290, 483], "log2": [290, 489, 490], "bit_length": [290, 333, 360, 484, 486], "quadrant": 290, "euclidean": [290, 495], "qx": 290, "norm": [290, 450], "hypotenus": 290, "triangl": [290, 399], "pythagorean": 290, "theorem": [290, 359, 360], "hyperbola": 290, "erfc": [290, 484, 489, 494], "gamma": [290, 333, 484, 489], "lgamma": [290, 484, 489], "141592": 290, "283185": 290, "circumfer": 290, "vi": [290, 335], "hart": 290, "celebr": 290, "pie": [290, 356], "guess_all_extens": 291, "knownfil": 291, "rebuilt": [291, 490, 492], "read_mime_typ": 291, "add_typ": 291, "suffix_map": 291, "recognit": 291, "tgz": [291, 475], "encodings_map": 291, "types_map": [291, 483], "common_typ": 291, "types_map_inv": 291, "read_windows_registri": 291, "access_read": 293, "access_writ": 293, "access_copi": 293, "access_default": 293, "prot": 293, "tagnam": [293, 391, 425, 426, 427], "allocationgranular": 293, "map_shar": 293, "prot_writ": 293, "prot_read": 293, "map_priv": 293, "lieu": [293, 441], "pages": 293, "madvis": [293, 495], "advic": [293, 308, 476], "pagefil": 293, "write_byt": [293, 311, 492], "madv_norm": 293, "madv_random": 293, "madv_sequenti": 293, "madv_willne": 293, "madv_dontne": 293, "madv_remov": 293, "madv_dontfork": 293, "madv_dofork": 293, "madv_hwpoison": 293, "madv_merg": 293, "madv_unmerg": 293, "madv_soft_offlin": 293, "madv_hugepag": 293, "madv_nohugepag": 293, "madv_dontdump": 293, "madv_dodump": 293, "madv_fre": 293, "madv_nosync": 293, "madv_autosync": 293, "madv_nocor": 293, "madv_cor": 293, "madv_protect": 293, "madv_free_reus": 293, "map_denywrit": 293, "map_execut": 293, "map_anon": 293, "map_anonym": 293, "map_popul": 293, "map_stack": 293, "addpackagepath": 294, "pkg_name": [294, 377, 397], "replacepackag": 294, "oldnam": 294, "newnam": [294, 467], "replace_path": 294, "run_script": 294, "oldpath": 294, "newpath": 294, "baconhamegg": 294, "globalnam": 294, "badmodul": 294, "_type": 294, "_inverted_registri": 294, "_slotnam": 294, "_compil": [294, 323], "isstr": 294, "_sre": [294, 492], "_optimize_unicod": 294, "_constant": [294, 360], "repeat_on": 294, "makedict": 294, "at_end_lin": 294, "_expand": 294, "_parser": [294, 323], "_patternend": 294, "sre_flag_unicod": 294, "inttyp": 294, "typetyp": 294, "cabinet": 296, "fcicreat": 296, "cabnam": 296, "mszip": 296, "uuidcreat": 296, "uuidtostr": 296, "opendatabas": 296, "msiopendatabas": 296, "msidbopen_createdirect": 296, "msidbopen_cr": 296, "msidbopen_direct": 296, "msidbopen_readonli": 296, "msidbopen_transact": 296, "msidbopen_patchfil": 296, "createrecord": 296, "msicreaterecord": 296, "init_databas": 296, "productnam": 296, "productcod": 296, "productvers": 296, "manufactur": 296, "_validation_record": 296, "add_data": [296, 410, 491], "add_tabl": 296, "add_stream": 296, "_stream": 296, "gen_uuid": 296, "openview": 296, "msidatabaseopenview": 296, "msidatabasecommit": 296, "getsummaryinform": 296, "msigetsummaryinform": 296, "msiclosehandl": 296, "msiviewexecut": 296, "getcolumninfo": 296, "msiviewgetcolumninfo": 296, "msicolinfo_nam": 296, "msicolinfo_typ": 296, "msiviewfetch": 296, "msiviewmodifi": 296, "msimodify_seek": 296, "msimodify_refresh": 296, "msimodify_insert": 296, "msimodify_upd": 296, "msimodify_assign": 296, "msimodify_replac": 296, "msimodify_merg": 296, "msimodify_delet": 296, "msimodify_insert_temporari": 296, "msimodify_valid": 296, "msimodify_validate_new": 296, "msimodify_validate_field": 296, "msimodify_validate_delet": 296, "msiviewclos": 296, "summaryinform": 296, "getproperti": [296, 431], "msisummaryinfogetproperti": 296, "pid_codepag": 296, "pid_titl": 296, "pid_subject": 296, "pid_author": 296, "pid_keyword": 296, "pid_com": 296, "pid_templ": 296, "pid_lastauthor": 296, "pid_revnumb": 296, "pid_lastprint": 296, "pid_create_dtm": 296, "pid_lastsave_dtm": 296, "pid_pagecount": 296, "pid_wordcount": 296, "pid_charcount": 296, "pid_appnam": 296, "pid_secur": 296, "getpropertycount": 296, "msisummaryinfogetpropertycount": 296, "setproperti": [296, 430, 431], "msisummaryinfosetproperti": 296, "msisummaryinfopersist": 296, "getfieldcount": 296, "msirecordgetfieldcount": 296, "getinteg": [296, 483], "setstr": 296, "msirecordsetstr": 296, "msirecordsetstream": 296, "setinteg": 296, "msirecordsetinteg": 296, "cleardata": 296, "msirecordcleardata": 296, "msierror": 296, "componentflag": 296, "start_compon": 296, "defaultdir": 296, "keypath": 296, "add_fil": 296, "remove_pyc": 296, "featurecompon": 296, "set_curr": 296, "dlg": 296, "controlev": 296, "eventmap": 296, "controlcondit": 296, "radiobuttongroup": 296, "control_next": 296, "pushbutton": 296, "next_control": 296, "radiogroup": 296, "radiobutton": [296, 390, 391], "adminexecutesequ": 296, "adminuisequ": 296, "advtexecutesequ": 296, "installexecutesequ": 296, "installuisequ": 296, "uitext": 296, "actiontext": 296, "lk_": 297, "lk_lock": 297, "lk_rlck": 297, "lk_nblck": 297, "lk_nbrlck": 297, "lk_unlck": 297, "setmod": 297, "o_append": [297, 308], "fdopen": [297, 308, 353, 443], "xe0": 297, "keycod": [297, 384], "getwch": [297, 483], "putch": 297, "putwch": [297, 483], "unicode_char": 297, "ungetwch": 297, "heapmin": 297, "crt_assembly_vers": [297, 484], "assembli": [297, 364, 449], "crtassem": [297, 484], "vc_assembly_publickeytoken": [297, 484], "libraries_assembly_name_prefix": [297, 484], "getppid": [298, 308], "33725": [298, 495], "sharedmemori": [298, 299], "reboot": [298, 311, 491], "set_start_method": [298, 491], "mp": [298, 480], "get_context": [298, 491], "duplex": [298, 310], "parent_conn": 298, "child_conn": 298, "liabl": [298, 417, 441], "1415927": 298, "offload": 298, "imap_unord": 298, "apply_async": [298, 483], "multiple_result": 298, "patienc": 298, "poolwork": 298, "is_al": [298, 380, 483, 496], "orphan": 298, "authkei": [298, 299], "waitforsingleobject": 298, "waitformultipleobject": 298, "processerror": 298, "buffertooshort": 298, "recv_bytes_into": 298, "authenticationerror": 298, "joinablequeu": [298, 492], "infinitesim": 298, "cancel_join_thread": 298, "conn1": 298, "conn2": 298, "feeder": [298, 401], "sem_getvalu": 298, "join_thread": [298, 377], "allow_exit_without_flush": 298, "3770": 298, "active_children": 298, "sched_getaffin": [298, 308, 490], "parent_process": 298, "freeze_support": 298, "get_all_start_method": [298, 491], "get_start_method": [298, 491], "allow_non": [298, 434, 435, 480], "send_byt": 298, "recv_byt": 298, "arr1": 298, "arr2": 298, "solitari": 298, "unown": 298, "sem_timedwait": 298, "typecode_or_typ": 298, "get_lock": 298, "size_or_initi": 298, "rawarrai": 298, "rawvalu": 298, "get_obj": 298, "875": 298, "375": [298, 359], "1111111111111111": 298, "515625": 298, "0625": [298, 464], "640625": 298, "syncmanag": 298, "basemanag": [298, 299], "shutdown_timeout": 298, "get_serv": 298, "xmlrpclib": [298, 479, 480, 481, 482, 483, 484, 485], "50000": [298, 382], "typeid": [298, 495], "proxytyp": [298, 417], "method_to_typeid": 298, "create_method": 298, "baseproxi": 298, "_callmethod": 298, "_exposed_": 298, "_method_to_typeid_": 298, "_z": 298, "mathsclass": 298, "mymanag": 298, "queuemanag": 298, "get_queu": 298, "listproxi": 298, "l_outer": 298, "d_first_inn": 298, "lproxi": 298, "remoteerror": 298, "_getvalu": 298, "deregist": 298, "maxtasksperchild": [298, 484], "apach": [298, 357, 434, 441, 468, 477, 493], "mod_wsgi": [298, 364], "error_callback": 298, "asyncresult": 298, "map_async": [298, 483, 490], "lazier": 298, "starmap_async": [298, 490], "outstand": [298, 441], "deliver_challeng": 298, "answer_challeng": 298, "af_pip": 298, "last_accept": 298, "object_list": 298, "waitabl": [298, 308, 343, 381, 488], "1729": 298, "pipenam": 298, "servernam": 298, "get_logg": 298, "log_to_stderr": 298, "doom": [298, 482], "mainprocess": 298, "pymp": 298, "_bootstrap": [298, 397], "collid": [298, 334, 410, 451], "_pid": 298, "5155": 298, "5313": 298, "5331": 298, "_h": 298, "generatorproxi": 298, "get_operator_modul": 298, "94": [298, 333, 484], "calculatestar": 298, "pow3": 298, "imap_it": 298, "imap_unordered_it": 298, "tgot": 298, "imapiter": 298, "applyresult": 298, "number_of_process": 298, "tasks1": 298, "tasks2": 298, "done_queu": 298, "multicor": 299, "smp": 299, "sharedmemorymanag": 299, "shm_a": 299, "shm_b": 299, "howdi": 299, "ndarrai": 299, "np": [299, 490], "shm": 299, "dtype": [299, 401], "psm_21467_46075": 299, "existing_shm": 299, "int64": 299, "888": 299, "shareablelist": 299, "smm": 299, "psm_6572_7512": 299, "raw_shm": 299, "another_sl": 299, "psm_6572_12221": 299, "depict": 299, "do_work": [299, 308], "total_result": 299, "storabl": 299, "10m": 299, "106939": 299, "nul_bug_demo": 299, "deserialized_sl": 299, "netrcparseerror": 301, "mapnam": 302, "default_domain": 302, "joi": [302, 399], "get_default_domain": 302, "poster": 303, "3977": 303, "2980": 303, "newsgroup": [303, 469, 481], "gmane": [303, 490], "committ": [303, 490], "1096": 303, "1087": 303, "1088": 303, "1089": 303, "1090": 303, "1091": 303, "1092": 303, "1093": 303, "1094": 303, "fellow": 303, "240": [303, 399], "119": [303, 359, 397, 495], "readermod": 303, "usenetrc": 303, "authinfo": 303, "nntppermanenterror": 303, "1755": [303, 490], "nntp_ssl": [303, 489, 496], "4642": 303, "nntperror": 303, "nntpreplyerror": 303, "nntptemporaryerror": 303, "nntpprotocolerror": 303, "nntpdataerror": 303, "nntp_version": 303, "nntp_implement": 303, "newgroup": 303, "groupinfo": 303, "tor": 303, "newnew": 303, "group_pattern": [303, 442, 446], "offlin": [303, 397, 476], "grouppattern": 303, "wildmat": 303, "295": 303, "biopython": 303, "elid": 303, "message_spec": 303, "xover": 303, "article_numb": 303, "art_num": 303, "117216": 303, "xref": 303, "ik1hcnrpbib2libmw7z3axmi": 303, "message_id": 303, "9099": 303, "20030112190404": 303, "ge29873": 303, "metaslash": 303, "65": [303, 333, 347, 359, 360, 464, 477, 483, 484, 492], "neal": [303, 480, 482, 483], "norwitz": [303, 480, 482, 483], "ihav": 303, "slave": [303, 308, 324, 384], "xhdr": 303, "header_str": 303, "e9buter_en_python": 303, "d\u00e9buter": 303, "chjvymzdqg1ligrlig1hdhjpy2u": 303, "probl\u00e8m": 303, "poor": [304, 320, 323, 334, 478, 479], "myfoo": 304, "myintegr": 304, "do_my_adding_stuff": 304, "othertypeiknowabout": 304, "do_my_other_adding_stuff": 304, "intellig": [304, 307, 309, 310, 312], "_operator_fallback": 304, "monomorphic_oper": 304, "fallback_oper": 304, "__r": 304, "_add": 304, "__not__": 306, "inv": [306, 492], "__inv__": 306, "truediv": 306, "66": [306, 404, 457, 478, 483], "__concat__": 306, "countof": [306, 496], "delitem": 306, "setitem": [306, 405], "extractor": [306, 481], "resolve_attr": 306, "cdefg": 306, "soldier": 306, "rank": [306, 428], "captain": [306, 493], "dotterbart": 306, "banana": [306, 360, 457, 466, 486], "pear": [306, 457, 466, 486], "iadd": 306, "iand": 306, "iconcat": 306, "__iconcat__": 306, "ifloordiv": 306, "ilshift": 306, "imod": 306, "imatmul": [306, 492], "ior": 306, "ipow": 306, "irshift": 306, "isub": 306, "itruediv": 306, "ixor": 306, "yourscript": 307, "foutfil": 307, "qfoutfil": 307, "acquaint": 307, "execl": [307, 308], "pf": [307, 391], "ffoo": 307, "controversi": [307, 479], "contradictori": 307, "whatsoev": [307, 340, 441], "mutant": 307, "oddbal": 307, "rightli": 307, "humbl": 307, "opt_str": 307, "jam": 307, "n42": 307, "vewwi": 307, "wabbit": 307, "novic": 307, "bland": [307, 482, 483], "clue": 307, "optiongroup": 307, "optioncontain": 307, "add_option_group": 307, "get_option_group": 307, "print_vers": 307, "get_vers": 307, "4x": [307, 487, 490, 491, 493], "suppress_usag": 307, "option_list": 307, "standard_option_list": 307, "option_class": 307, "indentedhelpformatt": 307, "titledhelpformatt": 307, "add_help_opt": 307, "make_opt": 307, "irrelev": [307, 484], "callback_arg": 307, "callback_kwarg": 307, "suppress_help": 307, "fbar": 307, "noisi": 307, "check_choic": 307, "enable_interspersed_arg": 307, "get_opt": 307, "set_conflict_handl": 307, "optionconflicterror": 307, "whittl": 307, "set_usag": 307, "get_usag": 307, "overkil": 307, "rarg": 307, "optionvalu": 307, "record_foo_seen": 307, "saw_foo": 307, "check_ord": 307, "moon": 307, "check_moon": 307, "is_moon_ful": 307, "store_valu": 307, "hairi": 307, "intricaci": 307, "stab": 307, "vararg_callback": 307, "floatabl": 307, "vararg_attr": 307, "check_mytyp": 307, "sillier": 307, "check_complex": 307, "myoption": 307, "store_act": 307, "typed_act": 307, "always_typed_act": 307, "take_act": 307, "ding": [307, 496], "dong": 307, "ensure_valu": 307, "optparse_pars": 307, "valv": 307, "badoptionerror": 307, "ambiguousoptionerror": 307, "threat": 308, "getuid": 308, "device_encod": 308, "nonsens": [308, 491], "ctermid": 308, "environb": [308, 364, 489], "supports_bytes_environ": [308, 489], "fchdir": [308, 492], "getenvb": [308, 489], "get_exec_path": 308, "getegid": 308, "geteuid": 308, "getgid": 308, "getgrouplist": [308, 490], "getgroup": 308, "setgroup": [308, 364], "getpgid": [308, 480], "getprior": [308, 490], "prio_process": 308, "prio_pgrp": 308, "prio_us": 308, "setprior": [308, 490], "getresuid": [308, 484], "ruid": 308, "euid": 308, "suid": 308, "getresgid": [308, 484], "rgid": 308, "egid": 308, "sgid": 308, "initgroup": [308, 484], "setegid": 308, "seteuid": 308, "setgid": [308, 373], "superus": 308, "setpgrp": 308, "setpgid": [308, 364], "pgrp": 308, "setregid": [308, 364], "setresgid": [308, 484], "setresuid": [308, 484], "setreuid": [308, 364], "getsid": [308, 481], "setsid": [308, 364], "setuid": [308, 373], "umask": [308, 311, 364, 377, 494], "sysnam": [308, 318], "nodenam": [308, 318, 425], "decept": [308, 480], "closerang": [308, 483], "fd_low": 308, "fd_high": 308, "copy_file_rang": 308, "offset_src": 308, "offset_dst": 308, "fd2": 308, "fchmod": [308, 483, 492], "fchown": [308, 483, 492], "fdatasync": [308, 492], "filedescriptor": 308, "fpathconf": 308, "95": [308, 329, 333, 359, 397, 480, 483], "98": [308, 353, 360, 420, 483, 484, 489], "pathconf_nam": 308, "pathconf": [308, 490], "fstat": [308, 309, 358, 479, 490, 492], "stat_result": [308, 311, 373, 480, 492, 495], "fstatvf": [308, 479, 492], "statvf": [308, 479, 483, 490], "fsync": [308, 492], "_commit": 308, "get_block": [308, 492], "set_block": [308, 492], "f_lock": 308, "f_tlock": 308, "f_ulock": 308, "f_test": 308, "login_tti": 308, "leader": [308, 346], "lseek": [308, 482, 490], "o_wronli": [308, 348], "o_rdwr": [308, 348], "o_creat": 308, "o_excl": [308, 375], "o_trunc": 308, "o_dsync": 308, "o_rsync": 308, "o_sync": 308, "o_noctti": 308, "o_cloexec": [308, 490], "o_noinherit": 308, "o_short_liv": 308, "o_temporari": 308, "o_random": 308, "o_sequenti": 308, "o_evtonli": [308, 487], "o_fsync": [308, 487], "o_symlink": [308, 487], "o_nofollow_ani": [308, 487], "o_async": 308, "o_direct": 308, "o_directori": 308, "o_nofollow": 308, "o_noatim": 308, "o_path": [308, 491], "o_tmpfil": [308, 375, 491], "openpti": [308, 324], "pipe2": [308, 490], "ORing": [308, 357], "posix_falloc": [308, 490, 492], "posix_fadvis": [308, 490, 492], "posix_fadv_norm": 308, "posix_fadv_sequenti": 308, "posix_fadv_random": 308, "posix_fadv_noreus": 308, "posix_fadv_willne": 308, "posix_fadv_dontne": 308, "pread": [308, 490, 492, 494], "preadv": [308, 494], "rwf_hipri": 308, "rwf_nowait": 308, "sysconf": [308, 353], "sc_iov_max": [308, 353], "readv": [308, 490, 492, 494], "pwrite": [308, 490, 492, 494], "pwritev": [308, 494], "rwf_dsync": 308, "rwf_sync": 308, "rwf_append": 308, "writev": [308, 490, 492, 494], "out_fd": 308, "in_fd": 308, "sf_nodiskio": 308, "sf_mnowait": 308, "sf_sync": 308, "sf_nocach": 308, "splice_f_mov": 308, "splice_f_nonblock": 308, "splice_f_mor": 308, "tcgetpgrp": 308, "tcsetpgrp": 308, "pg": 308, "ttynam": 308, "get_terminal_s": [308, 347, 490], "stdout_fileno": 308, "terminal_s": [308, 347], "close_fd": [308, 364, 481, 489, 494, 495], "get_inherit": [308, 353, 491], "set_inherit": [308, 343, 353, 491], "get_handle_inherit": [308, 491], "set_handle_inherit": [308, 364, 491], "supports_fd": [308, 490], "faccessat": 308, "supports_dir_fd": [308, 490], "supports_follow_symlink": [308, 347], "effective_id": [308, 490], "f_ok": [308, 347], "r_ok": 308, "w_ok": 308, "x_ok": [308, 347], "supports_effective_id": [308, 490], "uf_nodump": [308, 358], "uf_immut": [308, 358, 483], "uf_append": [308, 358, 483], "uf_opaqu": [308, 358], "uf_nounlink": [308, 358], "uf_compress": [308, 358], "uf_hidden": [308, 358], "sf_archiv": [308, 358], "sf_immut": [308, 358], "sf_append": [308, 358], "sf_nounlink": [308, 358], "sf_snapshot": [308, 358], "s_isuid": [308, 358], "s_isgid": [308, 358], "s_enfmt": [308, 358], "s_isvtx": [308, 358], "s_iread": [308, 358], "s_iwrit": [308, 347, 358], "s_iexec": [308, 358], "s_irwxu": [308, 358], "s_irusr": [308, 358, 373], "s_iwusr": [308, 358, 373], "s_ixusr": [308, 358, 373], "s_irwxg": [308, 358], "s_irgrp": [308, 358], "s_iwgrp": [308, 358, 373], "s_ixgrp": [308, 358, 373], "s_irwxo": [308, 358], "s_iroth": [308, 358], "s_iwoth": [308, 358, 373], "s_ixoth": [308, 358, 373], "chroot": 308, "getcwdb": [308, 485, 495], "lchflag": [308, 483], "lchmod": [308, 311, 483], "lchown": [308, 480], "lstat": [308, 309, 311, 358, 377, 490, 495], "vista": 308, "repars": [308, 329, 428, 495], "junction": [308, 309, 347, 495], "exist_ok": [308, 311, 492], "21082": 308, "mkfifo": [308, 490, 492], "rendezv": [308, 489], "mknod": [308, 480, 490, 492], "0o600": 308, "s_ifreg": [308, 358], "s_ifchr": [308, 358], "s_ifblk": [308, 358], "s_ififo": [308, 358], "makedev": [308, 480], "st_dev": [308, 358], "st_rdev": 308, "readlink": [308, 311, 490, 495, 496], "realpath": [308, 309, 311, 476, 487, 495], "direntri": [308, 492, 493], "opendir": 308, "readdir": [308, 492], "findfirstfilew": 308, "findnextfilew": 308, "scandir_path": 308, "s_isdir": [308, 358], "dirent": 308, "d_type": 308, "dt_unknown": 308, "is_symlink": [308, 311, 495], "islink": [308, 309, 311, 495], "st_nlink": [308, 358], "statinfo": 308, "st_mode": [308, 311, 358, 491, 495], "33188": 308, "7876932": 308, "234881026": 308, "st_uid": [308, 358], "st_gid": [308, 358], "st_size": [308, 311, 358, 479], "264": [308, 363, 479], "st_atim": [308, 358], "1297230295": 308, "1297230027": 308, "st_ctime": [308, 358], "st_atime_n": 308, "st_mtime_n": 308, "st_ctime_n": 308, "fat32": 308, "st_block": 308, "st_blksize": 308, "st_flag": [308, 482], "st_gen": [308, 482], "st_birthtim": [308, 482], "st_fstype": [308, 494], "st_rsize": 308, "st_creator": 308, "st_type": 308, "st_file_attribut": [308, 358, 492], "dwfileattribut": [308, 492], "by_handle_file_inform": [308, 492], "getfileinformationbyhandl": [308, 492], "file_attribute_": 308, "file_attribute_arch": [308, 358], "st_reparse_tag": [308, 358, 495], "file_attribute_reparse_point": [308, 358], "io_reparse_tag_": 308, "f_bsize": 308, "f_frsize": 308, "f_block": 308, "f_bfree": 308, "f_bavail": 308, "f_file": 308, "f_ffree": 308, "f_favail": 308, "f_flag": 308, "f_namemax": 308, "f_fsid": 308, "st_rdonli": 308, "st_nosuid": 308, "st_nodev": 308, "st_noexec": 308, "st_synchron": 308, "st_mandlock": 308, "st_write": 308, "st_append": 308, "st_immut": 308, "st_noatim": 308, "st_nodiratim": 308, "st_relatim": 308, "atim": 308, "target_is_directori": [308, 311, 490], "morph": [308, 311], "unprivileg": 308, "secreatesymboliclinkprivileg": 308, "unelev": 308, "atime_n": 308, "mtime_n": 308, "dirpath": 308, "resumpt": [308, 493], "dirfd": 308, "rootfd": 308, "mfd_cloexec": 308, "mfd_": 308, "memfd": 308, "mfd_allow_s": 308, "mfd_hugetlb": 308, "mfd_huge_shift": 308, "mfd_huge_mask": 308, "mfd_huge_64kb": 308, "mfd_huge_512kb": 308, "mfd_huge_1mb": 308, "mfd_huge_2mb": 308, "mfd_huge_8mb": 308, "mfd_huge_16mb": 308, "mfd_huge_32mb": 308, "mfd_huge_256mb": 308, "mfd_huge_512mb": 308, "mfd_huge_1gb": 308, "mfd_huge_2gb": 308, "mfd_huge_16gb": 308, "mfd_huge": 308, "eventfd": [308, 487], "initv": 308, "efd_cloexec": 308, "efd_nonblock": 308, "efd_semaphor": 308, "eventfd_read": 308, "eventfd_writ": 308, "efc_cloexec": 308, "xattr_replac": 308, "xattr_creat": 308, "xattr_size_max": 308, "adddlldirectori": 308, "execlp": 308, "execvp": [308, 364], "ex_ok": 308, "exit_success": 308, "ex_usag": 308, "ex_dataerr": 308, "ex_noinput": 308, "ex_nous": 308, "ex_nohost": 308, "ex_unavail": 308, "ex_softwar": 308, "ex_oserr": 308, "ex_osfil": 308, "ex_cantcreat": 308, "ex_ioerr": 308, "ex_tempfail": 308, "retryabl": 308, "ex_protocol": 308, "ex_noperm": 308, "ex_config": 308, "ex_notfound": 308, "pidfd_open": [308, 496], "plock": 308, "waitstatus_to_exitcod": [308, 324, 496], "file_act": 308, "setpgroup": 308, "resetid": 308, "setsigmask": 308, "setsigdef": 308, "posix_spawnp": 308, "posix_spawn_open": 308, "posix_spawn_clos": 308, "posix_spawn_dup2": 308, "new_fd": 308, "posix_spawn_file_actions_addopen": 308, "posix_spawn_file_actions_addclos": 308, "posix_spawn_file_actions_adddup2": 308, "posix_spawn_setpgroup": 308, "posix_spawn_resetid": 308, "posix_spawn_setsid": 308, "posix_spawn_setsid_np": 308, "posix_spawn_setsigmask": 308, "sigdef": 308, "posix_spawn_setsigdef": 308, "sched_param": 308, "posix_spawn_setschedparam": 308, "posix_spawn_setschedul": 308, "after_in_par": 308, "after_in_child": 308, "spawnl": 308, "spawnlp": [308, 364], "spawnv": 308, "spawnvp": [308, 364], "p_nowait": [308, 364], "p_wait": [308, 364], "p_nowaito": 308, "p_detach": 308, "p_overlai": 308, "shellexecut": 308, "comspec": [308, 364, 490, 491], "children_us": 308, "children_system": 308, "getprocesstim": 308, "waitid": [308, 490, 492], "idtyp": 308, "p_pid": 308, "p_pgid": 308, "p_all": 308, "p_pidfd": [308, 496], "wexit": 308, "wstop": 308, "wcontinu": 308, "wnohang": 308, "wnowait": 308, "siginfo_t": [308, 348], "si_pid": [308, 348], "si_uid": [308, 348], "si_signo": [308, 348], "si_statu": [308, 348], "si_cod": [308, 348, 496], "cld_exit": 308, "wuntrac": 308, "wait3": [308, 482, 492], "getrusag": [308, 337, 482], "wait4": [308, 482, 492], "cld_kill": [308, 496], "cld_dump": 308, "cld_trap": 308, "cld_stop": [308, 496], "cld_continu": 308, "wifexit": 308, "wexitstatu": 308, "wifsign": 308, "wtermsig": 308, "wifstop": 308, "wstopsig": 308, "wcoredump": 308, "wifcontinu": 308, "sigcont": [308, 348], "ptrace": 308, "sched_oth": 308, "sched_batch": 308, "sched_idl": 308, "sched_sporad": 308, "sched_fifo": 308, "sched_rr": 308, "sched_reset_on_fork": 308, "sched_prior": 308, "sched_setparam": [308, 490], "sched_setschedul": [308, 490], "sched_getparam": [308, 490], "sched_get_priority_min": [308, 490], "sched_get_priority_max": [308, 490], "sched_getschedul": [308, 490], "sched_rr_get_interv": [308, 490], "quantum": 308, "sched_yield": [308, 490], "sched_setaffin": [308, 490], "confstr": 308, "confstr_nam": 308, "undetermin": 308, "getloadavg": 308, "unobtain": 308, "sysconf_nam": 308, "sc_minsigstksz": 308, "extsep": 308, "defpath": [308, 347], "rtld_lazi": [308, 368, 490], "rtld_nodelet": [308, 490], "rtld_noload": [308, 490], "rtld_deepbind": [308, 490], "setdlopenflag": [308, 368, 465, 479, 490], "getdlopenflag": [308, 368, 465, 479], "getrandom": [308, 492, 493], "entropi": [308, 357, 493], "environment": [308, 410, 470], "grnd_random": 308, "grnd_nonblock": 308, "524": [308, 493], "bcryptgenrandom": [308, 488], "systemrandom": [308, 333, 341], "getentropi": [308, 492], "cryptgenrandom": [308, 488], "ntpath": [309, 494], "lexist": [309, 481, 495], "isdir": [309, 311, 317, 373, 495], "ismount": [309, 491, 495], "unrepresent": [309, 311, 495], "commonpath": [309, 492], "commonprefix": [309, 492], "getatim": 309, "getmtim": 309, "getctim": 309, "isab": [309, 311], "getvolumepathnam": 309, "std": [309, 368, 381, 482], "1003": 309, "relpath": [309, 311, 483], "filepath": 309, "samefil": [309, 311, 491, 492], "path1": 309, "path2": 309, "sameopenfil": 309, "fp1": 309, "fp2": 309, "samestat": [309, 311, 491], "stat1": 309, "stat2": 309, "splitdriv": [309, 494], "cshrc": [309, 474], "supports_unicode_filenam": [309, 480], "soundcard": 310, "ossaudioerror": 310, "audiodev": [310, 483], "dsp": 310, "player": [310, 334, 361, 399], "linuxaudiodev": [310, 477, 480, 483], "openmix": 310, "mixerdev": 310, "setfmt": 310, "setparamet": 310, "oss_audio_devic": 310, "writeal": 310, "sndctl_dsp_setfmt": 310, "sndctl_dsp_sync": 310, "nonblock": 310, "getfmt": 310, "afmt_mu_law": 310, "afmt_a_law": 310, "afmt_ima_adpcm": 310, "afmt_u8": 310, "afmt_s16_l": 310, "afmt_s16_b": 310, "68k": 310, "powerpc": [310, 481, 482, 483], "afmt_s8": 310, "afmt_u16_l": 310, "afmt_u16_b": 310, "afmt_queri": 310, "monophon": 310, "stereophon": 310, "sampler": 310, "11025": 310, "22050": 310, "96000": 310, "dvd": 310, "obufcount": 310, "obuffre": 310, "oss_mixer_devic": 310, "mixabl": 310, "sound_mixer_pcm": 310, "sound_mixer_synth": 310, "sound_mixer_": 310, "pcm": [310, 416], "sound_mixer_volum": 310, "gravi": 310, "ultrasound": 310, "stereocontrol": 310, "reccontrol": 310, "left_volum": 310, "right_volum": 310, "get_recsrc": 310, "set_recsrc": 310, "microphon": 310, "setrecsrc": 310, "sound_mixer_m": 310, "windowspath": 311, "purewindowspath": 311, "test_pathlib": 311, "pathseg": 311, "pureposixpath": 311, "lib64": [311, 368, 369, 471, 496], "na\u00efv": [311, 478], "apache2": 311, "an_absolute_path": 311, "regroup": 311, "gar": 311, "as_posix": 311, "as_uri": 311, "is_absolut": 311, "is_relative_to": 311, "relative_to": 311, "694": [311, 489], "subpath": [311, 438], "with_nam": 311, "antoin": [311, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "751": 311, "with_stem": 311, "851": 311, "with_suffix": 311, "798": 311, "is_mount": [311, 494, 495], "is_block_devic": [311, 495], "is_char_devic": [311, 495], "is_fifo": [311, 495], "is_socket": [311, 495], "956": 311, "1327883547": 311, "852554": 311, "33277": 311, "0o444": 311, "33060": 311, "nonexistentfil": 311, "film": [311, 359, 401], "_templat": 311, "_build": 311, "_static": 311, "mimick": 311, "my_binary_fil": 311, "my_text_fil": 311, "write_text": [311, 492], "mylink": 311, "symlink_to": [311, 487], "other_path": 311, "hardlink_to": [311, 487], "link_to": [311, 487, 488, 495], "missing_ok": 311, "abnorm": [312, 368, 409, 489], "pdbrc": [312, 488, 489, 493, 496], "nosigint": [312, 489], "readrc": [312, 493], "elp": 312, "hel": 312, "reak": 312, "tbreak": 312, "ear": 312, "bpnumber": 312, "uncondit": [312, 405, 450], "some_vari": 312, "tep": 312, "unt": 312, "il": [312, 357, 449, 491], "eturn": 312, "ont": 312, "inu": 312, "ump": 312, "ist": 312, "longlist": 312, "rg": 312, "whati": 312, "undisplai": [312, 489], "classinst": 312, "unalia": 312, "list_opt": 312, "uit": 312, "retval": [312, 478], "ecosystem": 314, "tackl": [314, 477], "3154": [314, 491], "574": [314, 397, 495], "highest_protocol": [314, 480], "default_protocol": [314, 345, 487], "fix_import": [314, 486], "buffer_callback": 314, "pickleerror": 314, "picklingerror": 314, "unpicklingerror": 314, "picklebuff": 314, "persistent_id": 314, "persistent_load": 314, "reducer_overrid": [314, 495], "superflu": [314, 353, 356], "elig": [314, 445, 489], "__getstate__": [314, 404, 480, 488], "picklestr": [314, 315], "worthwhil": [314, 482, 490], "__setstate__": [314, 404, 480, 495], "__getnewargs_ex__": 314, "list_of_item": 314, "sixth": [314, 318, 479, 495], "memorecord": 314, "dbpickler": 314, "dbunpickl": 314, "type_tag": 314, "key_id": 314, "fight": [314, 489], "INTO": [314, 356], "italian": [314, 399], "disturb": 314, "reduce_someclass": 314, "mypickl": 314, "textread": 314, "endswith": [314, 360, 414, 477, 480, 482, 483, 492], "new_read": 314, "myclass": [314, 443, 455], "my_attribut": 314, "unpickled_class": 314, "massiv": [314, 481, 482, 492], "eschew": 314, "reconstructor": 314, "zerocopybytearrai": 314, "_reconstruct": 314, "unseri": [314, 489], "new_b": 314, "nsystem": 314, "ntr": 314, "inoffens": 314, "safe_builtin": 314, "restrictedunpickl": 314, "restricted_load": 314, "cbuiltin": [314, 486], "neval": 314, "4j": [314, 442, 450, 457, 483], "intim": [315, 318], "binint1": 315, "tuple2": 315, "binput": 315, "indentlevel": 315, "genop": 315, "opcodeinfo": 315, "pipefil": 316, "moduleinfo": [317, 493], "module_find": 317, "ispkg": 317, "extend_path": 317, "impimport": [317, 487, 488], "impload": [317, 487, 488], "get_import": 317, "path_item": 317, "get_load": 317, "module_or_nam": 317, "iter_import": [317, 490], "iter_modul": [317, 490, 493], "walk_packag": [317, 490, 493, 494], "12915": 317, "pyramid": 317, "is_64bit": 318, "system_alia": 318, "mac_ver": 318, "amdk6": 318, "python_build": 318, "buildno": 318, "builddat": 318, "python_compil": 318, "python_branch": 318, "scm": 318, "python_implement": 318, "python_revis": 318, "python_vers": 318, "python_version_tupl": 318, "market": [318, 482], "dega": 318, "java_v": 318, "vminfo": 318, "osinfo": 318, "vm_name": 318, "vm_releas": 318, "vm_vendor": 318, "os_nam": 318, "os_vers": 318, "os_arch": 318, "win32_ver": 318, "csd": 318, "uniprocessor": 318, "win32_edit": 318, "enterpris": 318, "iotuap": 318, "serverstandard": 318, "nanoserv": 318, "win32_is_iot": 318, "iot": 318, "versioninfo": 318, "dev_stag": 318, "non_release_vers": 318, "libc_ver": 318, "16384": 318, "freedesktop_os_releas": [318, 487], "freedesktop": [318, 487, 490], "pretty_nam": 318, "id_lik": 318, "version_id": 318, "variant_id": 318, "get_like_distro": 318, "nskeyedarchiv": [319, 495], "nskeyedunarchiv": 319, "fmt_xml": [319, 491], "fmt_binari": [319, 491], "invalidfileexcept": 319, "pl": 319, "astr": 319, "doodah": 319, "afloat": 319, "anint": 319, "728": 319, "adict": 319, "anotherstr": 319, "athirdstr": 319, "xe4ssig": 319, "ma": [319, 487, 488], "atruevalu": 319, "afalsevalu": 319, "gunk": 319, "somemoredata": 319, "adat": 319, "1939": 320, "stl": [320, 491], "2595": 320, "pop3_ssl": [320, 489, 496], "obsolesc": 320, "mailserv": [320, 466], "pop3_port": 320, "pop3_ssl_port": 320, "995": [320, 493], "fetchmail": 320, "noncompli": 320, "capa": [320, 491], "2449": 320, "pass_": 320, "apop": 320, "rpop": 320, "mesg_num": 320, "dele": 320, "eudora": 320, "qpop": 320, "rset": [320, 350, 351], "signoff": 320, "howmuch": 320, "uidl": 320, "mesgnum": 320, "6856": [320, 484, 489, 492], "nummessag": 320, "thinli": 321, "disguis": [321, 334, 443], "off_t": 321, "getconf": 321, "lfs_cflag": 321, "d_largefile64_sourc": 321, "d_file_offset_bit": 321, "sort_dict": [322, 495], "underscore_numb": [322, 487], "pformat": [322, 491], "isread": 322, "isrecurs": 322, "saferepr": 322, "tup": [322, 399, 401], "sampleproject": 322, "project_info": 322, "pypa": [322, 414], "googlegroup": 322, "bugtrack_url": 322, "webpag": 322, "description_content_typ": 322, "docs_url": 322, "last_dai": 322, "last_month": 322, "last_week": 322, "home_pag": 322, "package_url": 322, "project_url": 322, "release_url": 322, "requires_dist": 322, "lsprof": 323, "rosen": 323, "ted": 323, "czotter": 323, "ncall": 323, "tottim": 323, "percal": 323, "cumtim": 323, "759": 323, "937": 323, "598": 323, "_code": 323, "435": [323, 491], "_parse_sub": 323, "induc": [323, 440], "subfunct": [323, 490], "restat": 323, "sort_ord": 323, "sort_stat": 323, "sortkei": 323, "print_stat": 323, "cull": 323, "print_cal": 323, "print_calle": 323, "timeunit": 323, "subcal": 323, "pr": [323, 477], "sortbi": 323, "create_stat": 323, "dump_stat": 323, "coalesc": 323, "printout": 323, "pcall": 323, "nfl": 323, "reverse_ord": 323, "percentag": [323, 359, 361, 461, 483], "get_stats_profil": 323, "statsprofil": 323, "functionprofil": 323, "tick": [323, 337, 381], "lag": 323, "probabilist": 323, "exception": 323, "god": 323, "alarm": [323, 348, 491], "8ghz": 323, "i5": 323, "process_tim": [323, 381, 382, 490, 495], "04e": 323, "your_computed_bia": 323, "your_time_func": 323, "lone": [323, 351, 445], "cleanest": 323, "your_integer_time_func": 323, "_lsprof": 323, "perf_count": [323, 381, 382, 490, 495], "thoroughli": [324, 360, 462], "master_read": 324, "stdin_read": 324, "baffl": 324, "pseudotermin": 324, "typescript": 324, "use_python": 324, "pw_name": 325, "pw_passwd": 325, "pw_uid": [325, 364], "pw_gid": 325, "pw_geco": 325, "pw_dir": 325, "pw_shell": 325, "getpwal": 325, "pycompileerror": 326, "dfile": 326, "dorais": 326, "checked_hash": 326, "unchecked_hash": 326, "filen": 326, "readmodul": [327, 487], "readmodule_ex": [327, 487], "pagin": 328, "pythondoc": 328, "pyexpat": [329, 424, 441, 471, 477, 480, 482, 483, 484], "xmlparsertyp": 329, "parsercr": 329, "errorstr": 329, "namespace_separ": 329, "repertoir": [329, 351, 390, 483], "startelementhandl": 329, "endelementhandl": 329, "xmln": [329, 410, 428, 484], "elem1": [329, 482], "elem2": [329, 482], "isfin": 329, "parsefil": 329, "setbas": 329, "externalentityrefhandl": 329, "notationdeclhandl": 329, "unparsedentitydeclhandl": 329, "getbas": 329, "getinputcontext": 329, "externalentityparsercr": 329, "ordered_attribut": 329, "specified_attribut": 329, "setparamentitypars": 329, "xml_param_entity_parsing_nev": 329, "xml_param_entity_parsing_unless_standalon": 329, "xml_param_entity_parsing_alwai": 329, "useforeigndtd": 329, "startdoctypedeclhandl": 329, "enddoctypedeclhandl": 329, "xml_error_cant_change_feature_once_pars": 329, "setreparsedeferralen": [329, 428], "deferr": [329, 428], "responsibl": 329, "getreparsedeferralen": 329, "buffer_text": [329, 480], "characterdatahandl": 329, "buffer_us": 329, "errorbyteindex": 329, "errorcolumnnumb": 329, "errorlinenumb": 329, "currentbyteindex": 329, "currentcolumnnumb": 329, "currentlinenumb": 329, "handlernam": 329, "xmldeclhandl": 329, "doctypenam": 329, "systemid": [329, 425, 430], "publicid": [329, 425, 430], "has_internal_subset": 329, "elementdeclhandl": 329, "attlistdeclhandl": 329, "elnam": 329, "attnam": 329, "idref": 329, "processinginstructionhandl": 329, "startcdatasectionhandl": 329, "endcdatasectionhandl": 329, "entitynam": 329, "notationnam": 329, "ndata": [329, 430], "entitydeclhandl": 329, "is_parameter_ent": 329, "startnamespacedeclhandl": 329, "endnamespacedeclhandl": 329, "commenthandl": 329, "defaulthandl": 329, "defaulthandlerexpand": 329, "notstandalonehandl": 329, "xml_error_not_standalon": 329, "xml_error_external_entity_handl": 329, "some_xml_docu": 329, "start_el": [329, 427], "end_el": [329, 427], "char_data": 329, "child1": [329, 404], "child2": [329, 404], "xml_ctype_ani": 329, "xml_ctype_choic": 329, "xml_ctype_empti": 329, "xml_ctype_mix": 329, "xml_ctype_nam": 329, "xml_ctype_seq": 329, "xml_cquant_non": 329, "xml_cquant_opt": 329, "xml_cquant_plu": 329, "xml_cquant_rep": 329, "xml_error_": 329, "constant_nam": 329, "xml_error_async_ent": 329, "xml_error_attribute_external_entity_ref": 329, "xml_error_bad_char_ref": 329, "xml_error_binary_entity_ref": 329, "xml_error_duplicate_attribut": 329, "xml_error_incorrect_encod": 329, "xml_error_invalid_token": 329, "xml_error_junk_after_doc_el": 329, "xml_error_misplaced_xml_pi": 329, "xml_error_no_el": 329, "xml_error_no_memori": 329, "xml_error_param_entity_ref": 329, "xml_error_partial_char": 329, "xml_error_recursive_entity_ref": 329, "xml_error_syntax": 329, "xml_error_tag_mismatch": 329, "xml_error_unclosed_token": 329, "xml_error_undefined_ent": 329, "xml_error_unknown_encod": 329, "xml_error_unclosed_cdata_sect": 329, "xml_error_unexpected_st": 329, "xml_error_entity_declared_in_p": 329, "xml_error_feature_requires_xml_dtd": 329, "xml_error_unbound_prefix": 329, "undeclar": 329, "xml_error_undeclaring_prefix": 329, "xml_error_incomplete_p": 329, "xml_error_xml_decl": 329, "xml_error_text_decl": 329, "xml_error_publicid": 329, "xml_error_suspend": 329, "xml_error_not_suspend": 329, "xml_error_abort": 329, "xml_error_finish": 329, "xml_error_suspend_p": 329, "xml_error_reserved_prefix_xml": 329, "xml_error_reserved_prefix_xmln": 329, "xml_error_reserved_namespace_uri": 329, "xml_error_invalid_argu": 329, "xml_error_no_buff": 329, "xml_error_amplification_limit_breach": 329, "amplif": 329, "breach": [329, 441], "rec": [329, 426, 428], "xml11": [329, 426, 428], "20060816": [329, 426, 428], "encodingdecl": [329, 426, 428], "compet": [331, 489], "upperbound": 331, "uninterrupt": [331, 348], "decodestr": [332, 496], "encodestr": [332, 496], "lognorm": 333, "mise": 333, "19937": 333, "devis": 333, "matsumoto": [333, 441], "nishimura": [333, 441], "equidistribut": 333, "vol": 333, "randbyt": [333, 496], "token_byt": [333, 341], "randint": [333, 489], "getrandbit": [333, 481, 491], "mersennetwist": 333, "cum_weight": 333, "2080": 333, "raffl": 333, "grand": [333, 428], "prize": 333, "10000000": 333, "equat": [333, 495], "triangular": [333, 483], "midpoint": [333, 359], "betavari": 333, "expovari": 333, "lambd": 333, "gammavari": 333, "gauss": 333, "mu": [333, 359, 495], "sigma": [333, 359, 495], "lognormvari": 333, "vonmisesvari": 333, "kappa": 333, "paretovari": 333, "pareto": 333, "weibullvari": 333, "weibul": 333, "seeder": 333, "37444887175646646": 333, "1800146073117523": 333, "148957571865031": 333, "roulett": 333, "spin": 333, "jack": [333, 334, 360, 412, 441, 457, 461, 479, 480, 482, 486], "king": [333, 334, 477, 495], "settl": [333, 483], "10_000": [333, 359], "4169": 333, "quartil": [333, 359, 495], "2_500": 333, "7_500": 333, "7958": 333, "resampl": 333, "thoughtco": 333, "3126155": 333, "fmean": [333, 359, 495], "73": [333, 397, 467, 481, 495, 496], "drug": 333, "placebo": 333, "denni": [333, 487, 488, 496], "shasha": 333, "manda": 333, "wilson": [333, 480, 481, 492, 496], "observed_diff": 333, "new_diff": 333, "reshuffl": 333, "4f": 333, "hypothesi": 333, "multiserv": 333, "quantil": [333, 359, 495], "average_arrival_interv": 333, "average_service_tim": 333, "stdev_service_tim": 333, "num_serv": 333, "arrival_tim": 333, "1_000_000": [333, 493], "next_server_avail": 333, "service_dur": 333, "service_complet": 333, "jake": [333, 484, 486, 495], "vanderpla": 333, "econom": 333, "marketplac": 333, "norvig": 333, "random_product": 333, "random_permut": 333, "random_combin": 333, "random_combination_with_replac": 333, "\u2075\u00b3": 333, "05954861408025609": 333, "2\u2075\u00b2": 333, "2\u2075\u00b3": 333, "geometr": [333, 359, 399, 488], "fullrandom": 333, "0x10_0000_0000_0000": 333, "87925541791544": 333, "\u00b9\u2070\u2077\u2074": 333, "allen": [333, 357, 489], "downei": 333, "frie09": 334, "nfoo2": 334, "possess": [334, 360, 420, 488], "aaaab": 334, "aaab": 334, "aaaaaa": 334, "ailmsux": 334, "imsx": 334, "x7f": 334, "isaac": 334, "asimov": 334, "lookbehind": [334, 492], "theth": 334, "atla": 334, "athen": 334, "attornei": 334, "typographi": 334, "\u00fc": 334, "noflag": 334, "nicer": [334, 405, 487], "fullmatch": [334, 491], "0a3b9": 334, "fell": [334, 456, 466, 478, 479, 480], "z_": [334, 450], "z_0": 334, "npy_": 334, "npy_myfunc": 334, "dashrepl": 334, "matchobj": 334, "pro": 334, "gram": [334, 446], "sand": 334, "new_str": 334, "number_of_subs_mad": 334, "legal_char": 334, "ascii_lowercas": [334, 361, 479], "abcdefghijklmnopqrstuvwxyz0123456789": 334, "digits_r": 334, "purg": 334, "endpo": 334, "ogr": 334, "doggi": 334, "og": [334, 377], "groupindex": 334, "groupn": 334, "physicist": 334, "reynold": 334, "a1b2c3": 334, "c3": [334, 409, 443, 480, 490], "1632": 334, "cba": 334, "remove_thi": 334, "toni": [334, 483], "tiremove_thisg": 334, "tiger": 334, "lastindex": 334, "lastgroup": 334, "displaymatch": 334, "poker": [334, 399], "9tjqk": 334, "akt5q": 334, "akt5": 334, "akt": 334, "727ak": 334, "717ak": 334, "717": 334, "718ak": 334, "354aa": 334, "5c": 334, "ee": [334, 360, 486], "nb": [334, 485], "nx": 334, "ross": [334, 484, 486, 490, 496], "mcfluff": 334, "834": 334, "345": [334, 481, 486, 490], "elm": 334, "ronald": [334, 482, 483, 484, 489, 491, 495, 496], "heathmor": 334, "892": 334, "3428": 334, "finlei": 334, "avenu": [334, 441, 479], "frank": 334, "burger": 334, "925": 334, "541": 334, "7625": 334, "662": 334, "dogwood": 334, "heather": 334, "albrecht": 334, "548": 334, "326": 334, "4584": 334, "919": 334, "park": 334, "telephon": 334, "hous": [334, 493], "inner_word": 334, "professor": [334, 359], "abdolmalek": 334, "poefsrosr": 334, "aealmlobdk": 334, "pslaee": 334, "reorpt": 334, "abnsec": 334, "plmrptoi": 334, "pofsros": 334, "aodlambelk": 334, "plase": 334, "reoprt": 334, "yuor": 334, "asnebc": 334, "potlmrpi": 334, "polic": 334, "02d": 334, "IF": [334, 441], "THEN": 334, "gosub": 334, "token_specif": 334, "tok_regex": 334, "line_start": 334, "inputrc": 335, "libedit": 335, "editlin": [335, 471], "editrc": 335, "ON": [335, 441], "rl_complet": 335, "parse_and_bind": [335, 338], "rl_parse_and_bind": 335, "read_init_fil": [335, 338], "rl_read_init_fil": 335, "get_line_buff": [335, 338], "rl_line_buff": 335, "insert_text": [335, 338], "rl_insert_text": 335, "rl_redisplai": 335, "read_history_fil": 335, "read_histori": 335, "write_history_fil": 335, "write_histori": 335, "append_history_fil": [335, 492], "nelement": 335, "append_histori": 335, "get_history_length": 335, "set_history_length": 335, "history_truncate_fil": 335, "clear_histori": 335, "get_current_history_length": [335, 480], "get_history_item": [335, 480], "history_get": 335, "remove_history_item": 335, "remove_histori": 335, "replace_history_item": 335, "replace_history_entri": 335, "add_histori": 335, "set_auto_histori": [335, 493], "set_startup_hook": 335, "rl_startup_hook": 335, "set_pre_input_hook": 335, "rl_pre_input_hook": 335, "set_complet": [335, 338], "entry_func": 335, "rl_completion_match": 335, "rl_attempted_completion_funct": 335, "get_complet": 335, "get_completion_typ": 335, "rl_completion_typ": 335, "get_begidx": 335, "get_endidx": 335, "libreadlin": 335, "set_completer_delim": 335, "get_completer_delim": 335, "rl_completer_word_break_charact": 335, "set_completion_display_matches_hook": 335, "rl_completion_display_matches_hook": 335, "longest_match_length": 335, "python_histori": [335, 349, 462], "histfil": 335, "unruli": 335, "h_len": 335, "prev_h_len": 335, "new_h_len": 335, "historyconsol": 335, "init_histori": 335, "save_histori": 335, "arepr": 336, "maxdict": 336, "maxlist": 336, "maxtupl": 336, "maxset": 336, "maxfrozenset": 336, "maxdequ": 336, "maxarrai": 336, "maxlong": 336, "maxstr": 336, "maxoth": 336, "repr1": 336, "repr_typ": 336, "subobj": 336, "myrepr": 336, "repr_textiowrapp": 336, "getrlimit": 337, "rlim_infin": 337, "rlimit_nofil": 337, "cap_sys_resourc": 337, "rlimit_cor": [337, 377], "rlimit_cpu": 337, "sigxcpu": 337, "rlimit_fs": 337, "rlimit_data": 337, "rlimit_stack": 337, "rlimit_rss": 337, "rlimit_nproc": 337, "rlimit_ofil": 337, "rlimit_memlock": 337, "rlimit_vmem": 337, "rlimit_a": 337, "rlimit_msgqueu": [337, 491], "rlimit_nic": [337, 491], "rlim_cur": 337, "rlimit_rtprio": [337, 491], "rlimit_rttim": [337, 491], "spend": [337, 477, 488], "rlimit_sigpend": [337, 491], "rlimit_sbs": [337, 491], "mbuf": 337, "rlimit_swap": [337, 491], "overcommit": 337, "sysctl": 337, "rlimit_npt": [337, 491], "rlimit_kqueu": 337, "rusage_": 337, "rusage_self": 337, "ru_utim": 337, "ru_stim": 337, "ru_maxrss": 337, "ru_ixrss": 337, "ru_idrss": 337, "unshar": 337, "ru_isrss": 337, "ru_minflt": 337, "ru_majflt": 337, "ru_nswap": 337, "ru_inblock": 337, "ru_oublock": 337, "ru_msgsnd": 337, "ru_msgrcv": 337, "ru_nsign": 337, "ru_nvcsw": 337, "voluntari": 337, "ru_nivcsw": 337, "involuntari": 337, "getpages": 337, "rusage_children": 337, "rusage_both": 337, "rusage_thread": 337, "mod_nam": 339, "init_glob": 339, "run_nam": 339, "alter_si": 339, "run_path": [339, 470, 484], "path_nam": 339, "snow": [339, 488, 490, 491, 492, 493, 494, 495], "timefunc": [340, 490], "delayfunc": 340, "print_tim": 340, "print_some_tim": 340, "enterab": [340, 490], "1_650_000_000": 340, "1652342830": 340, "3640375": 340, "3642538": 340, "3643398": 340, "1652342835": 340, "3694863": 340, "3696074": 340, "1652342840": 340, "369612": 340, "3697174": 340, "soonest": [340, 490], "randbelow": 341, "randbit": 341, "xebr": 341, "x17d": 341, "xae": 341, "xd4": 341, "xe3": [341, 483], "xb6": 341, "xe2": [341, 483], "xebp1": 341, "x8b": 341, "token_hex": 341, "f9bf78b9a18ce6d46a0cd2b0b86df9da": 341, "token_urlsaf": 341, "drmhze6epcv0fn_81bj": 341, "token_": 341, "xkcd": 341, "passphras": 341, "mktemp": [342, 375, 410], "devpol": [343, 344, 490, 491, 492], "epoll_create1": 343, "epoll_cloexec": 343, "kq_filter_read": 343, "kq_ev_add": 343, "fflag": 343, "udata": 343, "rlist": 343, "wlist": 343, "xlist": 343, "parameterless": [343, 455], "winsock": [343, 353], "pipe_buf": [343, 489], "eventmask": [343, 483], "pollin": 343, "pollpri": 343, "pollout": 343, "epollin": 343, "epollout": 343, "epollpri": 343, "urgent": 343, "epollerr": 343, "assoc": 343, "epollhup": 343, "epollet": 343, "epolloneshot": 343, "epollexclus": 343, "epollrdhup": 343, "epollrdnorm": 343, "epollrdband": 343, "epollwrnorm": 343, "epollwrband": 343, "epollmsg": 343, "fromfd": [343, 353], "maxev": 343, "scalabl": [343, 477], "pollerr": 343, "pollhup": 343, "hung": 343, "pollrdhup": 343, "pollnval": 343, "changelist": 343, "max_ev": 343, "eventlist": 343, "sektion": 343, "kq_filter_writ": 343, "kq_filter_aio": 343, "aio": 343, "kq_filter_vnod": 343, "kq_filter_proc": 343, "kq_filter_netdev": 343, "kq_filter_sign": 343, "kq_filter_tim": 343, "kq_ev_delet": 343, "kq_ev_en": 343, "permitscontrol": 343, "kq_ev_dis": 343, "disablesev": 343, "kq_ev_oneshot": 343, "kq_ev_clear": 343, "kq_ev_sysflag": 343, "kq_ev_flag1": 343, "kq_ev_eof": 343, "kq_ev_error": 343, "kq_note_lowat": 343, "kq_note_delet": 343, "kq_note_writ": 343, "kq_note_extend": 343, "kq_note_attrib": 343, "kq_note_link": 343, "kq_note_renam": 343, "kq_note_revok": 343, "revok": 343, "kq_note_exit": 343, "kq_note_fork": 343, "kq_note_exec": 343, "kq_note_pctrlmask": 343, "kq_note_pdatamask": 343, "kq_note_track": 343, "kq_note_child": 343, "note_track": 343, "kq_note_trackerr": 343, "kq_note_linkup": 343, "kq_note_linkdown": 343, "kq_note_linkinv": 343, "baseselector": 344, "epollselector": [344, 494], "defaultselector": [344, 348], "devpollselector": [344, 492, 494], "event_read": [344, 348], "event_writ": 344, "selectorkei": 344, "get_kei": 344, "get_map": 344, "sel": [344, 348], "shelf": [345, 360, 489, 491], "writeback": 345, "handier": 345, "keyencod": 345, "bsddbshelf": [345, 360], "set_loc": 345, "bsddb": [345, 480, 483, 484], "pybsddb": [345, 480, 483, 484, 485], "hashopen": 345, "btopen": 345, "rnopen": 345, "dbfilenameshelf": [345, 360], "klist": 345, "BUT": [345, 441], "minilanguag": 346, "split_command": 346, "boom": [346, 404, 405], "plug": 346, "remote_command": 346, "instream": 346, "punctuation_char": [346, 493], "wordchar": 346, "get_token": 346, "push_token": 346, "read_token": 346, "pushback": 346, "sourcehook": 346, "push_sourc": 346, "pop_sourc": 346, "newstream": 346, "newfil": 346, "lexer": 346, "error_lead": 346, "whitespace_split": 346, "escapedquot": 346, "donotsepar": 346, "fsrc": 347, "fdst": 347, "uncontrol": 347, "samefileerror": [347, 491], "ignore_pattern": [347, 483], "copy_funct": [347, 489, 492], "ignore_dangling_symlink": [347, 489], "dirs_exist_ok": [347, 495], "suscept": [347, 476], "avoids_symlink_attack": 347, "excinfo": 347, "mv": [347, 490], "disk_usag": [347, 490], "python33": 347, "srcname": 347, "33671": [347, 495], "userspac": [347, 490, 495], "outfd": [347, 495], "infd": [347, 495], "fcopyfil": 347, "_logpath": 347, "reattempt": 347, "remove_readonli": 347, "register_archive_format": [347, 489], "pax": [347, 373, 483, 495], "get_archive_format": [347, 489], "extra_arg": [347, 489], "unregister_archive_format": 347, "register_unpack_format": 347, "get_unpack_format": 347, "unregister_unpack_format": 347, "archive_nam": 347, "myarchiv": [347, 467, 489], "tzvf": 347, "drwx": 347, "609": 347, "authorized_kei": 347, "id_dsa": 347, "1675": 347, "id_rsa": 347, "37192": 347, "known_host": 347, "please_add": 347, "do_not_add": 347, "my_arch": 347, "air": 348, "sigmask": 348, "sig_block": 348, "sig_unblock": 348, "sig_setmask": 348, "getsign": 348, "pthread_sigmask": [348, 490], "sigpend": [348, 490], "sigwait": [348, 490], "ctrl_": 348, "sigprocmask": 348, "sigquit": [348, 364], "sigalrm": 348, "sigbreak": 348, "bu": [348, 420], "sigcld": 348, "sighup": 348, "hangup": 348, "death": [348, 490], "sigstkflt": 348, "coprocessor": 348, "sigusr1": 348, "sigusr2": 348, "nsig": 348, "valid_sign": 348, "itimer_r": 348, "itimer_virtu": 348, "sigvtalrm": 348, "itimer_prof": 348, "sigprof": 348, "itimererror": 348, "setitim": [348, 483], "getitim": [348, 483], "strsignal": 348, "sigwaitinfo": [348, 490, 492], "sigtimedwait": [348, 490, 492], "pidfd_send_sign": [348, 496], "siginfo": 348, "sigstop": 348, "warn_on_full_buff": [348, 494], "wakeup": [348, 490, 494], "siginterrupt": [348, 483, 490], "sigset": 348, "si_errno": 348, "si_band": 348, "ttys0": 348, "spamcontext": 348, "exc_val": [348, 360], "interrupt_read": 348, "interrupt_writ": 348, "subsubdirectori": 349, "bletch": 349, "enable_user_sit": 349, "__interactivehook__": [349, 368, 465, 470, 491], "getusersitepackag": [349, 453, 484, 489], "appdata": [349, 476, 483], "getuserbas": [349, 484, 489], "pythonuserbas": [349, 470, 483], "sitedir": 349, "known_path": 349, "getsitepackag": [349, 484, 489], "aiosmtpd": 350, "1870": [350, 490], "localaddr": 350, "remoteaddr": 350, "data_size_limit": 350, "33554432": 350, "enable_smtputf8": 350, "decode_data": [350, 492, 493], "relay": 350, "process_messag": [350, 492, 493], "mail_opt": [350, 351, 492], "8bitmim": [350, 351, 492], "6152": [350, 484, 492], "mailfrom": 350, "rcptto": 350, "_remoteaddr": 350, "rcpt_option": [350, 351], "rcpt": [350, 351], "channel_class": 350, "relai": [350, 413, 494], "smtp_server": 350, "received_lin": 350, "smtp_state": 350, "seen_greet": 350, "helo": [350, 351], "received_data": 350, "fqdn": [350, 351], "getfqdn": [350, 351, 353], "smtp_": 350, "ehlo": [350, 351, 490], "vrfy": [350, 351], "expn": 350, "esmtp": 351, "821": 351, "1869": 351, "local_hostnam": 351, "smtpconnecterror": 351, "smtp_ssl": [351, 483, 490, 496], "lmtp": [351, 483, 490, 496], "lmtp_port": 351, "smtpexcept": [351, 491], "smtpserverdisconnect": 351, "smtpresponseexcept": 351, "smtp_code": 351, "smtp_error": 351, "smtpsenderrefus": 351, "smtprecipientsrefus": 351, "smtpdataerror": 351, "smtpheloerror": 351, "smtpnotsupportederror": 351, "smtpauthenticationerror": 351, "docmd": 351, "helo_resp": 351, "has_extn": 351, "ehlo_resp": 351, "does_esmtp": 351, "esmtp_featur": 351, "ehlo_or_helo_if_need": 351, "foil": 351, "spammer": 351, "initial_response_ok": 351, "4954": 351, "auth_cram_md5": 351, "auth_plain": 351, "auth_login": 351, "from_addr": [351, 489], "to_addr": [351, 489], "dsn": 351, "smtpnotsupport": 351, "hcom": 352, "sndr": 352, "sndt": 352, "voc": 352, "8svx": 352, "sb": [352, 374], "ub": 352, "ul": [352, 426, 479], "sampling_r": 352, "bits_per_sampl": 352, "whathdr": [352, 492], "sndtool": 352, "lab": [352, 441, 455, 477, 479, 480], "waveform": [352, 416, 421], "transliter": 353, "dare": 353, "inaddr_ani": 353, "inaddr_broadcast": 353, "flowinfo": 353, "sin6_flowinfo": 353, "sin6_scope_id": 353, "sockaddr_in6": 353, "af_netlink": [353, 482], "tipc": [353, 483], "af_tipc": 353, "addr_typ": 353, "v2": [353, 363, 441, 482, 483], "tipc_addr_nameseq": 353, "tipc_addr_nam": 353, "tipc_addr_id": 353, "tipc_zone_scop": 353, "tipc_cluster_scop": 353, "tipc_node_scop": 353, "af_can": 353, "can0": 353, "can_isotp": 353, "rx_addr": 353, "tx_addr": 353, "can_j1939": [353, 496], "pgn": 353, "ecu": 353, "sysproto_control": 353, "pf_system": [353, 490], "af_bluetooth": 353, "btproto_l2cap": 353, "bdaddr": 353, "psm": 353, "bluetooth": 353, "btproto_rfcomm": 353, "btproto_hci": 353, "device_id": 353, "dragonflybsd": [353, 380], "btproto_sco": 353, "af_alg": [353, 493], "feat": 353, "aead": [353, 357], "skcipher": 353, "rng": 353, "drbg_nopr_ctr_aes256": 353, "af_vsock": [353, 494], "vsock": 353, "af_packet": 353, "ifnam": 353, "pkttype": 353, "hatyp": 353, "ethernet": 353, "packet_host": 353, "packet_broadcast": 353, "packet_multicast": 353, "packet_otherhost": 353, "promiscu": 353, "packet_outgo": 353, "arp": 353, "af_qipcrtr": 353, "qualcomm": 353, "ipproto_udplit": 353, "setsockopt": [353, 357, 484, 493], "udplite_send_cscov": 353, "udplite_recv_cscov": 353, "v6": 353, "nondeterminist": 353, "settimeout": [353, 357, 410, 480], "herror": 353, "h_errno": 353, "gethostbyname_ex": 353, "hstrerror": 353, "gaierror": 353, "gai_strerror": 353, "eai_": 353, "af_": [353, 491], "sock_": [353, 491], "addressfamili": 353, "socketkind": 353, "sock_raw": 353, "sock_rdm": 353, "sock_seqpacket": 353, "sock_cloexec": [353, 494], "sock_nonblock": [353, 494], "so_": 353, "somaxconn": [353, 492], "msg_": 353, "sol_": 353, "scm_": 353, "ipproto_": 353, "ipport_": 353, "inaddr_": 353, "ip_": 353, "ipv6_": 353, "ai_": 353, "ni_": 353, "tcp_": 353, "so_domain": [353, 493], "so_protocol": [353, 493], "so_peersec": [353, 493], "so_passsec": [353, 493], "tcp_user_timeout": [353, 493, 494], "tcp_congest": [353, 493, 494], "tcp_fastopen": 353, "tcp_keepcnt": 353, "tcp_notsent_lowat": [353, 494], "tcp_keepidl": 353, "tcp_keepintvl": 353, "ip_recvto": [353, 487], "tcp_keepal": 353, "tcp_connection_info": 353, "tcp_info": 353, "pf_can": [353, 490], "sol_can_": 353, "can_": 353, "can_bcm": [353, 491], "can_bcm_": 353, "bcm": 353, "can_bcm_can_fd_fram": 353, "can_raw_fd_fram": [353, 492], "can_raw": 353, "can_raw_join_filt": [353, 496], "15765": 353, "sae": 353, "j1939": 353, "pf_packet": 353, "packet_": 353, "af_rd": 353, "pf_rd": [353, 490], "sol_rd": 353, "rds_": 353, "sio_rcval": 353, "sio_keepalive_v": 353, "sio_loopback_fast_path": [353, 493], "rcvall_": 353, "wsaioctl": [353, 483], "tipc_": 353, "sol_alg": [353, 493], "alg_": [353, 493], "ioctl_vm_sockets_get_local_cid": 353, "vmaddr": 353, "so_vm": 353, "af_link": [353, 491], "has_ipv6": 353, "bdaddr_ani": 353, "bdaddr_loc": 353, "hci_filt": 353, "hci_time_stamp": 353, "hci_data_dir": 353, "scm_creds2": 353, "local_cr": 353, "local_creds_persist": 353, "so_passcr": 353, "so_incoming_cpu": 353, "overrul": 353, "ipproto_mptcp": [353, 487], "global_default": 353, "getdefaulttimeout": 353, "dualstack_ipv6": 353, "has_dualstack_ipv6": [353, 495], "fromshar": [353, 494], "sockettyp": 353, "ai_numerichost": 353, "canonnam": 353, "ai_canonnam": 353, "ipproto_tcp": 353, "2606": 353, "2800": 353, "220": [353, 357, 456], "248": 353, "1893": 353, "25c8": 353, "1946": 353, "93": [353, 495, 496], "184": 353, "216": [353, 461, 464], "aliaslist": 353, "ipaddrlist": 353, "getprotobynam": 353, "icmp": 353, "inet_aton": [353, 495, 496], "ip_str": 353, "quad": [353, 479], "in_addr": 353, "inet_ntoa": 353, "packed_ip": 353, "inet_ntop": [353, 491], "address_famili": [353, 354], "in6_addr": 353, "5aef": 353, "2b": [353, 493], "cmsg_len": 353, "ancillari": [353, 490], "recvmsg": [353, 490, 492], "3542": 353, "cmsg_space": 353, "if_nameindex": [353, 495], "fb605b73": 353, "aac2": 353, "49a6": 353, "9a2f": 353, "25416aea0573": 353, "ethernet_32770": 353, "vethernet": 353, "hyper": 353, "if_nametoindex": [353, 495], "if_nam": 353, "if_indextonam": [353, 495], "if_index": 353, "send_fd": [353, 496], "scm_right": 353, "recv_fd": [353, 496], "maxfd": 353, "optnam": [353, 493], "getblock": [353, 494], "gettimeout": [353, 357], "ancbufs": 353, "ancdata": 353, "msg_flag": 353, "cmsg_level": 353, "cmsg_type": 353, "cmsg_data": 353, "unconnect": [353, 483], "sol_socket": 353, "recvmsg_into": [353, 490], "scatter": [353, 479, 480, 484], "0123456789": [353, 360, 361], "b3": 353, "lamb": [353, 456], "sendmsg_afalg": [353, 493], "iv": 353, "assoclen": 353, "optlen": [353, 493], "optval": 353, "shut_rd": 353, "shut_wr": 353, "shut_rdwr": [353, 357], "50007": 353, "af": 353, "ipproto_ip": 353, "ip_hdrincl": 353, "rcvall_on": 353, "65565": 353, "rcvall_off": 353, "can_fram": 353, "can_frame_fmt": 353, "ib3x8": 353, "can_frame_s": 353, "build_can_fram": 353, "can_id": 353, "can_dlc": 353, "ljust": [353, 360, 461, 481, 490], "dissect_can_fram": 353, "vcan0": 353, "3bsd": 353, "stuart": 353, "sechrest": 353, "leffler": 353, "3493": 353, "bind_and_activ": [354, 435, 483], "server_bind": [354, 435, 483], "server_activ": [354, 435, 483], "baseserv": [354, 490], "unixstreamserv": 354, "unixdatagramserv": 354, "infrequ": 354, "forkingmixin": [354, 490, 494], "baserequesthandl": 354, "server_clos": [354, 422, 494], "abrupt": 354, "daemon_thread": 354, "autonom": [354, 441], "threadingudpserv": 354, "block_on_clos": [354, 494], "forkingtcpserv": 354, "forkingudpserv": 354, "datagramrequesthandl": 354, "deaf": [354, 489], "get_request": 354, "verify_request": 354, "handle_timeout": [354, 483, 484], "poll_interv": 354, "service_act": [354, 490], "request_queue_s": 354, "socket_typ": 354, "finish_request": 354, "mytcphandl": 354, "tcpclient": 354, "myudphandl": 354, "threadedtcprequesthandl": 354, "cur_thread": 354, "threadedtcpserv": 354, "server_thread": 354, "sp_namp": 355, "sp_pwdp": 355, "sp_lstchg": 355, "sp_min": 355, "sp_max": 355, "sp_warn": 355, "sp_inact": 355, "sp_expir": 355, "sp_flag": 355, "getspnam": [355, 493], "getspal": 355, "nonstandard": [356, 466, 471, 482], "postgresql": [356, 482], "gerhard": [356, 479, 482, 483, 484], "h\u00e4ring": [356, 479, 482, 483, 484], "249": [356, 482], "w3school": 356, "sqlite_mast": 356, "executemani": 356, "hollywood": 356, "bowl": 356, "1982": [356, 359, 381], "1983": [356, 359], "brian": [356, 449, 477, 480, 481, 483, 484, 489, 490, 491, 494], "1979": [356, 359], "new_con": 356, "new_cur": 356, "detect_typ": 356, "isolation_level": 356, "check_same_thread": 356, "cached_stat": 356, "operationalerror": 356, "register_convert": 356, "parse_decltyp": 356, "parse_colnam": 356, "programmingerror": [356, 488], "threadsafeti": [356, 488], "complete_stat": 356, "enable_callback_traceback": 356, "evil_trac": 356, "set_trace_callback": [356, 490], "register_adapt": 356, "sqlite_ok": 356, "sqlite_deni": 356, "sqlite_ignor": 356, "authorizer_callback": 356, "set_author": [356, 488], "apilevel": 356, "paramstyl": 356, "qmark": 356, "sqlite_vers": 356, "sqlite_version_info": 356, "sqlite_threadsaf": 356, "blobopen": [356, 488], "rowid": 356, "zeroblob": 356, "rollback": [356, 482, 483, 488], "executescript": 356, "sql_script": 356, "create_funct": 356, "notsupportederror": 356, "md5sum": 356, "acbd18db4cc2f85cedef654fccc4a4d8": 356, "create_aggreg": 356, "n_arg": 356, "aggregate_class": 356, "mysum": 356, "create_window_funct": [356, 488], "num_param": 356, "windowfunct": 356, "udfwinfunc": 356, "windowsumint": 356, "sumint": 356, "sum_i": 356, "create_col": [356, 488], "collate_revers": 356, "4th": 356, "5th": 356, "set_progress_handl": 356, "progress_handl": 356, "trace_callback": 356, "fulltext": [356, 489], "fts3": 356, "ingredi": 356, "broccoli": 356, "stew": 356, "pepper": 356, "chees": [356, 456, 469], "pumpkin": 356, "onion": 356, "garlic": 356, "celeri": 356, "flour": 356, "butter": 356, "iterdump": 356, "getlimit": [356, 488], "1000000000": 356, "sqlite_limit_sql_length": 356, "setlimit": [356, 488], "sqlite_limit_attach": 356, "databaseerror": 356, "in_transact": 356, "autocommit": 356, "uncommit": [356, 489], "row_factori": 356, "text_factori": 356, "total_chang": 356, "dml": 356, "row1": 356, "row2": 356, "fetchmani": 356, "arrays": 356, "setinputs": 356, "setoutputs": 356, "lastrowid": [356, 493], "rowcount": 356, "blob_col": 356, "246": [356, 483], "sqlite_errorcod": [356, 488], "sqlite_errornam": [356, 488], "interfaceerror": [356, 488], "dataerror": 356, "integrityerror": 356, "internalerror": 356, "fiddl": 356, "current_d": 356, "current_timestamp": 356, "first_appear": 356, "1957": 356, "__conform__": 356, "adapt_point": 356, "convert_point": 356, "adapt_date_iso": 356, "adapt_datetime_iso": 356, "adapt_datetime_epoch": 356, "convert_d": 356, "convert_datetim": 356, "convert_timestamp": 356, "1984": 356, "varchar": 356, "nosuchdb": 356, "mem1": 356, "con1": 356, "con2": 356, "6378": 356, "namedtuple_factori": 356, "czech": 356, "ddl": [356, 493], "tlsv1": [357, 491], "wrap_socket": [357, 483, 484, 487, 489, 494], "644": [357, 487], "sni": [357, 491, 494], "ssock": 357, "protocol_tls_cli": [357, 487], "cert": [357, 475, 484, 491], "load_verify_loc": [357, 410, 491], "cabundl": 357, "protocol_tls_serv": [357, 487], "certchain": 357, "8443": 357, "server_auth": [357, 491], "cafil": [357, 410, 484, 491], "capath": [357, 410, 491], "cadata": [357, 491], "op_no_sslv2": [357, 487, 489], "op_no_sslv3": [357, 487], "rc4": 357, "verify_mod": 357, "cert_requir": 357, "load_default_cert": [357, 491], "keylog_filenam": 357, "sslkeylogfil": 357, "ssl3": 357, "client_auth": [357, 491], "chacha20": [357, 493], "poly1305": [357, 493], "protocol_tl": [357, 487], "sslerror": [357, 489], "superimpos": 357, "x509": [357, 410], "certificate_verify_fail": 357, "sslzeroreturnerror": 357, "sslwantreaderror": [357, 492], "sslwantwriteerror": [357, 492], "sslsyscallerror": 357, "ssleoferror": 357, "sslcertverificationerror": [357, 494], "verify_cod": 357, "verify_messag": 357, "certificateerror": 357, "rand_byt": [357, 490], "prng": 357, "rand": 357, "rand_statu": 357, "rand_add": 357, "csprng": 357, "rand_pseudo_byt": [357, 487, 490], "is_cryptograph": 357, "rand_egd": [357, 487], "1750": 357, "match_hostnam": [357, 487, 489, 491, 492, 494], "2818": [357, 489], "5280": [357, 492], "6125": 357, "commonnam": 357, "pthon": 357, "kva": 357, "tda": 357, "subjectaltnam": 357, "cert_time_to_second": [357, 492], "cert_tim": 357, "notbefor": 357, "notaft": 357, "2018": [357, 488, 494], "1515144883": 357, "get_server_certif": [357, 487, 490], "ca_cert": 357, "protocol_sslv3": [357, 487], "der_cert_to_pem_cert": 357, "der_cert_byt": 357, "der": [357, 413, 483, 491], "pem_cert_to_der_cert": 357, "pem_cert_str": 357, "get_default_verify_path": [357, 491], "set_default_verify_path": [357, 491], "defaultverifypath": 357, "openssl_cafile_env": 357, "openssl_cafil": 357, "openssl_capath_env": 357, "openssl_capath": 357, "enum_certif": [357, 491], "cert_byt": 357, "encoding_typ": 357, "x509_asn": 357, "509": [357, 483, 491], "asn": 357, "pkcs_7_asn": 357, "oid": [357, 413, 417], "trustworthi": 357, "enum_crl": [357, 491], "crl": [357, 491], "cert_req": 357, "cert_non": 357, "do_handshake_on_connect": 357, "suppress_ragged_eof": 357, "set_ciph": 357, "cert_opt": 357, "verifymod": 357, "cert_": 357, "verify_default": [357, 491], "verify_flag": [357, 491], "revoc": [357, 491], "verify_crl_check_leaf": [357, 491], "issuer": 357, "verify_crl_check_chain": [357, 491], "verify_x509_strict": [357, 491], "verify_allow_proxy_cert": 357, "verify_x509_trusted_first": 357, "verify_x509_partial_chain": [357, 487], "verifyflag": 357, "verify_": 357, "protocol_sslv2": [357, 487], "ssl2": 357, "sslv2": [357, 489], "minimum_vers": [357, 487, 494], "maximum_vers": [357, 487, 494], "protocol_tlsv1": [357, 487], "protocol_tlsv1_1": [357, 487, 491], "protocol_tlsv1_2": [357, 487, 491], "op_al": 357, "ssl_op_al": 357, "sslv3": [357, 490, 492], "op_no_tlsv1": [357, 487], "op_no_tlsv1_1": [357, 487], "op_no_tlsv1_2": [357, 487], "op_no_tlsv1_3": [357, 487], "op_no_renegoti": 357, "renegoti": [357, 484], "hellorequest": 357, "clienthello": 357, "0h": 357, "op_cipher_server_prefer": [357, 490], "op_single_dh_us": 357, "dh": [357, 487], "secreci": [357, 487], "op_single_ecdh_us": 357, "ecdh": 357, "op_enable_middlebox_compat": 357, "op_no_compress": [357, 490], "op_": 357, "op_no_ticket": 357, "ticket": 357, "op_ignore_unexpected_eof": [357, 487], "has_alpn": [357, 492], "7301": [357, 484, 489, 492], "has_never_check_common_nam": 357, "hostname_checks_common_nam": [357, 494], "has_ecdh": 357, "ellipt": [357, 490], "diffi": [357, 490], "hellman": [357, 490], "6066": 357, "has_npn": 357, "set_npn_protocol": [357, 487, 490], "has_sslv2": 357, "has_sslv3": 357, "has_tlsv1": 357, "has_tlsv1_1": [357, 494], "has_tlsv1_2": 357, "has_tlsv1_3": 357, "channel_binding_typ": 357, "get_channel_bind": [357, 490], "openssl_vers": [357, 484, 489], "2k": 357, "openssl_version_info": [357, 484, 489], "openssl_version_numb": [357, 484, 489], "268443839": 357, "0x100020bf": 357, "alert_description_handshake_failur": 357, "alert_description_internal_error": 357, "alert_description_": 357, "5246": 357, "set_servername_callback": [357, 491], "alertdescript": 357, "sslerrornumb": 357, "ssl_error_": 357, "tlsversion": 357, "minimum_support": 357, "maximum_support": 357, "tlsv1_1": 357, "tlsv1_2": 357, "tlsv1_3": 357, "atop": [357, 482, 483], "diverg": [357, 479], "ssl_read_ex": 357, "ssl_write_ex": 357, "unencrypt": 357, "do_handshak": [357, 491, 492], "binary_form": 357, "3280": 357, "rdn": 357, "countrynam": 357, "organizationnam": 357, "startcom": 357, "organizationalunitnam": 357, "serialnumb": 357, "95f0": 357, "571208": 357, "sle257ohy9fvq07z": 357, "stateorprovincenam": 357, "california": [357, 441], "localitynam": 357, "san": [357, 411], "francisco": [357, 411], "frontier": 357, "eff": 357, "emailaddress": 357, "hostmast": 357, "x509v3": [357, 491], "crldistributionpoint": [357, 491], "caissuer": 357, "ocsp": [357, 491], "shared_ciph": [357, 492], "cb_type": 357, "5929": 357, "selected_alpn_protocol": [357, 492], "selected_npn_protocol": [357, 487], "npn": [357, 487], "verify_client_post_handshak": [357, 493, 494, 495], "pha": 357, "certificaterequest": 357, "pythn": [357, 494], "pyth\u00f6n": [357, 494], "sslsession": [357, 493], "session_reus": 357, "protocol_": 357, "sslv23": 357, "ecc": [357, 487], "224": [357, 482], "cert_store_stat": [357, 491], "x509_ca": 357, "get_ca_cert": [357, 491], "get_ciph": [357, 493], "aesgcm": 357, "ecdsa": [357, 489], "alg_bit": 357, "aes256": 357, "gcm": 357, "kx": 357, "50380848": 357, "kea": 357, "strength_bit": 357, "aes128": 357, "50380847": 357, "spdy": 357, "agre": [357, 363, 441], "sni_callback": 357, "openssl_no_tlsext": 357, "server_name_callback": 357, "load_dh_param": [357, 490], "dhfile": 357, "set_ecdh_curv": [357, 490], "curve_nam": 357, "prime256v1": 357, "vincent": [357, 488, 492, 493], "bernat": 357, "sslsocket_class": 357, "wrap_bio": [357, 492, 494], "sslobject_class": 357, "session_stat": 357, "ssl_sock": 357, "verisign": 357, "keylog": 357, "nss": 357, "wireshark": 357, "num_ticket": 357, "2197947391": 357, "op_no_ssl": 357, "op_no_tl": 357, "security_level": 357, "1422": 357, "agenc": [357, 441], "bui": [357, 482], "keyout": 357, "provinc": 357, "mystat": 357, "widgit": 357, "myserv": 357, "myorgan": 357, "digicert": 357, "cacert": 357, "digicertsha2extendedvalidationserverca": 357, "crl3": 357, "sha2": [357, 496], "g1": [357, 399], "crl4": 357, "01bb6f00122b177f36cab49cea8b6b26": 357, "businesscategori": 357, "311": 357, "delawar": 357, "3359300": 357, "streetaddress": 357, "postalcod": 357, "03894": 357, "4801": 357, "nh": 357, "wolfeboro": 357, "testpypi": 357, "pythonhost": 357, "linuxfr": 357, "nginx": 357, "sameorigin": 357, "45679": 357, "varnish": 357, "2188": 357, "lcy1134": 357, "lcy": 357, "63072000": 357, "includesubdomain": 357, "mycertfil": 357, "mykeyfil": 357, "bindsocket": 357, "myaddr": 357, "10023": 357, "newsocket": 357, "connstream": 357, "deal_with_cli": 357, "memorybio": [357, 492], "ticket_lifetime_hint": 357, "has_ticket": 357, "client_context": 357, "disjunct": [357, 446], "rekei": 357, "steve": [357, 478, 483, 492, 493, 494, 495, 496], "4086": 357, "schiller": 357, "dierk": 357, "eastlak": 357, "7525": 357, "dtl": 357, "s_ischr": 358, "s_isblk": 358, "s_isreg": 358, "s_isfifo": 358, "s_islnk": 358, "s_issock": 358, "s_isdoor": 358, "s_isport": 358, "s_iswht": 358, "whiteout": 358, "s_imod": 358, "s_ifmt": 358, "walktre": 358, "visitfil": 358, "rwxrwxrwx": [358, 490], "s_ifdoor": [358, 491], "s_ifport": [358, 491], "s_ifwht": [358, 491], "s_ifsock": 358, "s_iflnk": [358, 495], "s_ifdir": 358, "v7": [358, 373], "file_attribute_compress": 358, "file_attribute_devic": 358, "file_attribute_directori": 358, "file_attribute_encrypt": 358, "file_attribute_hidden": 358, "file_attribute_integrity_stream": 358, "file_attribute_norm": 358, "file_attribute_not_content_index": 358, "file_attribute_no_scrub_data": 358, "file_attribute_offlin": 358, "file_attribute_readonli": 358, "file_attribute_sparse_fil": 358, "file_attribute_system": 358, "file_attribute_temporari": 358, "file_attribute_virtu": 358, "io_reparse_tag_symlink": 358, "io_reparse_tag_mount_point": 358, "io_reparse_tag_appexeclink": 358, "competitor": 359, "statistician": 359, "minitab": 359, "matlab": 359, "input_data": 359, "median_low": 359, "median_high": 359, "median_group": 359, "multimod": [359, 495], "geometric_mean": [359, 495], "harmonic_mean": [359, 493], "harmon": 359, "50th": 359, "percentil": [359, 495], "pstdev": 359, "pvarianc": 359, "varianc": [359, 401, 466, 488, 491, 493, 495], "covari": [359, 401, 487], "pearson": [359, 487], "linear_regress": [359, 487], "slope": 359, "statisticserror": 359, "625": [359, 495], "5625": [359, 464], "outlier": 359, "tendenc": 359, "unbias": 359, "\u03bc": 359, "quizz": 359, "homework": 359, "midterm": 359, "92": [359, 495, 496], "83": [359, 397, 466, 491], "91": 359, "reciproc": 359, "travel": 359, "journei": 359, "frederick": 359, "gravett": 359, "wallnau": 359, "8th": 359, "ssmedian": 359, "gnumer": 359, "aabbbbccddddeeffffgg": 359, "986893273527251": 359, "dispers": 359, "815": 359, "\u03c3\u00b2": 359, "s\u00b2": 359, "freedom": [359, 428, 451], "xbar": 359, "0810874155219827": 359, "3720238095238095": [359, 466], "01875": 359, "108": [359, 397, 476], "bessel": 359, "decil": [359, 495], "0th": 359, "100th": 359, "empir": 359, "129": 359, "109": [359, 397, 476], "121": [359, 484], "107": [359, 476], "joint": [359, 441], "films_tot": 359, "from_sampl": [359, 495], "densiti": 359, "cdf": [359, 495], "inv_cdf": 359, "zscore": 359, "temperature_februari": 359, "celsiu": 359, "fahrenheit": [359, 495], "birth_weight": 359, "drug_effect": 359, "1060": [359, 495], "195": [359, 493], "1100": [359, 486], "1200": [359, 471], "928": 359, "1192": 359, "810": 359, "958": 359, "1011": [359, 361], "1109": 359, "1162": 359, "1224": 359, "1310": 359, "analyt": 359, "mont": 359, "carlo": [359, 488], "3652260728": 359, "4582495471": 359, "6582483453": 359, "4591308524824727": 359, "8035946855390597": 359, "175091447274739": 359, "750": 359, "attende": 359, "8402": [359, 491], "8675309": 359, "8398": 359, "bayesian": 359, "gender": 359, "train": 359, "height_mal": 359, "height_femal": 359, "weight_mal": 359, "170": [359, 399], "weight_femal": 359, "150": [359, 399, 403, 480, 484], "foot_size_mal": 359, "foot_size_femal": 359, "male": 359, "posterior": 359, "prior_mal": 359, "prior_femal": 359, "posterior_mal": 359, "posterior_femal": 359, "posteriori": 359, "unadorn": 360, "widen": 360, "ucd": [360, 402, 450, 490, 491], "derivednumerictyp": 360, "0b100101": [360, 484, 486], "lstrip": [360, 480], "100101": 360, "bit_count": [360, 487], "0b10011": 360, "x04": [360, 413, 479], "xff": [360, 363, 490], "xfc": 360, "xe8": 360, "x10": [360, 479], "64512": 360, "16711680": 360, "little_ord": 360, "is_integ": 360, "tohexstr": 360, "0x3": 360, "a7p10": 360, "3740": 360, "d380000000000p": 360, "hash_info": [360, 368, 443, 465, 489, 491], "invmod": 360, "hash_fract": 360, "coprim": 360, "hash_valu": 360, "fermat": 360, "hash_float": 360, "hash_complex": 360, "breadth": [360, 399, 467], "gg": 360, "haunt": 360, "economi": 360, "subrang": 360, "linspac": 360, "zoot": 360, "digraph": 360, "fillchar": 360, "expandtab": [360, 379], "t012": 360, "t0123": 360, "t01234": 360, "0123": 360, "01234": 360, "isdecim": [360, 361], "isnumer": 360, "007f": [360, 450], "0660": [360, 477], "superscript": 360, "kharosthi": 360, "numeric_typ": 360, "isidentifi": 360, "2155": 360, "vulgar": 360, "istitl": 360, "uncas": 360, "justifi": [360, 384, 391, 461, 483], "spaciou": 360, "cmowz": 360, "removeprefix": [360, 496], "testhook": 360, "basetestcas": 360, "removesuffix": [360, 496], "misctest": 360, "tmpdirmixin": 360, "rindex": [360, 484, 489, 490], "rjust": [360, 461, 481, 490], "rsplit": [360, 481, 484, 489], "ipz": 360, "mississ": 360, "x1c": 360, "x1d": 360, "x85": 360, "u2028": 360, "u2029": 360, "nde": 360, "rkl": 360, "kl": 360, "comment_str": 360, "swapcas": 360, "capword": [360, 361], "zfill": [360, 461, 480], "00042": 360, "0042": 360, "sprintf": [360, 477, 479], "parenthesis": 360, "somenam": 360, "1e50": 360, "ieee754": 360, "emphasis": 360, "usefulli": [360, 484], "2ef0": 360, "f1f2": 360, "xf0": 360, "xf1": 360, "xf2": 360, "f0f1f2": 360, "f0_f1f2": 360, "uuddlrlrab": 360, "55554444": 360, "4c524c52": 360, "4142": 360, "aeiou": 360, "shrt": 360, "fillbyt": 360, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": [360, 484], "abcabc1": 360, "abc1": 360, "abcabc": 360, "abcdefghijklmnopqrstuvwxyz": [360, 361, 484], "subview": 360, "abcefg": 360, "0x7f3ddc9f4350": 360, "bce": 360, "22222222": 360, "33333333": 360, "44444444": 360, "zbcefg": 360, "z123fg": 360, "rvalu": 360, "z1spam": 360, "ce": [360, 476, 477], "bepoint": 360, "616263": 360, "toreadonli": 360, "byte_length": 360, "new_items": 360, "1d": 360, "zyz": 360, "ayz": 360, "3d": [360, 461], "2d": [360, 461], "32000": 360, "32001": 360, "32002": 360, "c_contigu": 360, "f_contigu": 360, "sjoerd": [360, 461, 477, 483], "cardin": 360, "disjoint": 360, "issubset": [360, 480], "issuperset": [360, 480], "symmetric_differ": [360, 480], "intersection_upd": [360, 480, 483], "difference_upd": [360, 483, 496], "symmetric_difference_upd": [360, 480], "4098": [360, 457, 461], "4127": [360, 457, 461], "salad": 360, "juic": 360, "mappingproxi": 360, "synchronis": [360, 490], "neglig": [360, 441], "send_post_request": 360, "typevar": [360, 401, 488], "weakkeydictionari": [360, 417, 482], "weakmethod": [360, 417, 491], "weakset": [360, 417, 484, 488], "weakvaluedictionari": [360, 417, 467, 482], "paramspec": [360, 401, 487], "__unpacked__": 360, "typevartupl": [360, 401, 488], "union_object": 360, "whoami": 360, "_namedintconst": 360, "10735": [360, 487, 488, 494, 495, 496], "set_int_max_str_digit": [360, 368, 377], "4300": [360, 487, 488, 494, 495, 496], "5432": 360, "i_squar": 360, "7144": 360, "int_info": [360, 368, 465, 471, 486], "default_max_str_digit": [360, 368], "640": [360, 399], "str_digits_check_threshold": [360, 368], "578966293710682886880994035146873798396722250538762761564": 360, "9252925514383915483333812743580549779436104706260696366600": 360, "571186405732": 360, "pythonintmaxstrdigit": [360, 368, 470], "int_max_str_digit": [360, 368, 470], "get_int_max_str_digit": [360, 368], "upper_bound": [360, 445], "68000": 360, "lower_bound": [360, 445], "4004": 360, "current_limit": 360, "ascii_uppercas": [361, 479], "0123456789abcdefabcdef": 361, "octdigit": [361, 450], "01234567": 361, "formfe": [361, 379, 450], "vformat": 361, "repack": 361, "literal_text": 361, "get_field": 361, "used_kei": 361, "get_valu": [361, 404], "check_unused_arg": 361, "used_arg": 361, "format_field": 361, "convert_field": 361, "arg_nam": 361, "attribute_nam": 361, "element_index": 361, "index_str": 361, "thou": [361, 489], "shalt": [361, 489], "quest": [361, 457], "ton": 361, "grouping_opt": 361, "000000120": 361, "682": [361, 488], "insignific": 361, "significand": [361, 368], "abra": 361, "cad": 361, "24n": 361, "81w": 361, "coord": 361, "5j": [361, 464], "test1": [361, 442], "test2": [361, 442], "2a": 361, "101010": 361, "0o52": [361, 483], "0b101010": 361, "1234567890": [361, 483], "890": 361, "02x": 361, "c0a80001": 361, "dxob": 361, "1010": [361, 495], "flufl": 361, "noun": 361, "ific": 361, "safe_substitut": [361, 467, 481], "is_valid": [361, 488], "get_identifi": [361, 367, 488], "kung": 361, "pao": 361, "idpattern": 361, "_a": 361, "braceidpattern": 361, "unbrac": 361, "3454": [362, 480], "mkstringprep": [362, 480], "in_table_a1": 362, "tablea": 362, "in_table_b1": 362, "tableb": 362, "map_table_b2": 362, "map_table_b3": 362, "in_table_c11": 362, "tablec": 362, "in_table_c12": 362, "in_table_c11_c12": 362, "in_table_c21": 362, "in_table_c22": 362, "in_table_c21_c22": 362, "in_table_c3": 362, "in_table_c4": 362, "in_table_c5": 362, "in_table_c6": 362, "in_table_c7": 362, "in_table_c8": 362, "in_table_c9": 362, "in_table_d1": 362, "in_table_d2": 362, "iter_unpack": [363, 491], "1023": 363, "0x3ff": 363, "1700": 363, "10c": 363, "cccccccccc": 363, "0c": 363, "hhhh": [363, 477], "bhl": 363, "99999": 363, "x32": 363, "x12": [363, 413], "serialnum": 363, "gradelevel": 363, "10shhb": 363, "4658": 363, "ci": [363, 476, 494, 495], "0x12131415": 363, "x14": 363, "x13": 363, "llh0l": 363, "consect": 363, "lhl": 363, "llh": 363, "revisit": 363, "qh6xq": 363, "qqh": 363, "qqh6x": 363, "capture_output": [364, 494], "other_popen_kwarg": 364, "completedprocess": [364, 492], "timeoutexpir": 364, "calledprocesserror": [364, 484, 492], "crw": [364, 492], "systemroot": 364, "system32": [364, 476], "check_returncod": 364, "subprocesserror": 364, "symmetri": [364, 477], "check_cal": 364, "preexec_fn": [364, 481, 495], "startupinfo": [364, 481, 494], "restore_sign": 364, "start_new_sess": [364, 495], "pass_fd": [364, 495], "extra_group": 364, "pipes": 364, "process_group": 364, "lpapplicationnam": 364, "lpcommandlin": 364, "vike": 364, "unintent": 364, "seldom": 364, "handle_list": 364, "lpattributelist": [364, 494], "sigxfz": 364, "sigxfsz": 364, "create_new_consol": 364, "above_normal_priority_class": 364, "below_normal_priority_class": 364, "high_priority_class": 364, "idle_priority_class": 364, "normal_priority_class": 364, "realtime_priority_class": 364, "create_no_window": 364, "detached_process": 364, "create_default_error_mod": 364, "create_breakaway_from_job": 364, "ifconfig": 364, "qemu": [364, 495], "hadn": 364, "dwflag": 364, "hstdinput": 364, "hstdoutput": 364, "hstderror": 364, "wshowwindow": 364, "startf_usestdhandl": 364, "startf_useshowwindow": 364, "ncmdshow": [364, 436], "showwindow": 364, "sw_showdefault": 364, "sw_hide": 364, "startupinfoex": 364, "updateprocthreadattribut": 364, "error_invalid_paramet": 364, "std_input_handl": 364, "conin": 364, "std_output_handl": 364, "conout": 364, "std_error_handl": 364, "realtim": 364, "non_existent_fil": 364, "mycmd": 364, "myarg": 364, "dmesg": 364, "hda": 364, "retcod": 364, "child_stdin": 364, "child_stdout": 364, "child_stderr": 364, "child_stdout_and_stderr": 364, "popen4": 364, "somestr": 364, "capturestderr": 364, "getstatusoutput": [364, 491], "getoutput": 364, "_use_vfork": 364, "nnnnnn": 364, "_use_posix_spawn": 364, "knob": 364, "snd": 365, "audio_file_mag": 365, "audio_file_encoding_mulaw_8": 365, "audio_file_encoding_linear_8": 365, "audio_file_encoding_linear_16": 365, "audio_file_encoding_linear_24": 365, "audio_file_encoding_linear_32": 365, "audio_file_encoding_alaw_8": 365, "audio_file_encoding_float": 365, "audio_file_encoding_doubl": 365, "audio_file_encoding_adpcm_g721": 365, "audio_file_encoding_adpcm_g722": 365, "audio_file_encoding_adpcm_g723_3": 365, "audio_file_encoding_adpcm_g723_5": 365, "711": 365, "compile_typ": 367, "symbolt": [367, 496], "get_typ": [367, 410, 491], "get_lineno": 367, "is_optim": 367, "is_nest": 367, "has_children": 367, "get_children": [367, 391], "get_symbol": 367, "get_paramet": 367, "get_loc": 367, "get_glob": 367, "get_nonloc": 367, "get_fre": 367, "get_method": [367, 410, 490], "is_referenc": 367, "is_import": 367, "is_paramet": 367, "is_nonloc": 367, "is_declared_glob": [367, 484], "is_loc": 367, "is_annot": 367, "is_fre": 367, "is_assign": 367, "is_namespac": 367, "some_func": 367, "get_namespac": 367, "unobserv": 368, "__cantrace__": 368, "stdlib_module_nam": [368, 487], "call_trac": [368, 465], "_clear_type_cach": [368, 465], "_debugmallocstat": [368, 465], "dllhandl": 368, "_emscripten_info": 368, "emscripten_vers": 368, "v14": 368, "pycach": 368, "__breakpointhook__": [368, 465], "__displayhook__": [368, 465], "__excepthook__": [368, 380, 465, 487], "__unraisablehook__": [368, 465], "underdevelop": 368, "no_user_sit": [368, 489], "ignore_environ": [368, 489], "hash_random": 368, "division_warn": [368, 489, 490], "1999": [368, 381, 410, 441], "iec": 368, "dbl_epsilon": 368, "dig": 368, "dbl_dig": 368, "mant_dig": [368, 483], "dbl_mant_dig": 368, "dbl_max_exp": 368, "max_10_exp": 368, "dbl_max_10_exp": 368, "min_exp": 368, "dbl_min_exp": 368, "min_10_exp": 368, "dbl_min_10_exp": 368, "flt_radix": 368, "flt_round": 368, "14159265358979": 368, "15g": 368, "9876543211234567": 368, "16g": 368, "9876543211234568": 368, "float_repr_styl": [368, 465, 484], "getallocatedblock": [368, 465, 491], "getandroidapilevel": [368, 494], "getdefaultencod": [368, 465], "rtld_": 368, "_enablelegacywindowsfsencod": [368, 470, 493], "getswitchinterv": [368, 465, 496], "getprofil": [368, 380, 465, 483, 487], "gettrac": [368, 380, 465, 483, 487], "getwindowsvers": [368, 484, 493], "service_pack": [368, 484], "service_pack_minor": [368, 484], "service_pack_major": [368, 484], "suite_mask": [368, 484], "product_typ": [368, 484], "platform_vers": [368, 493], "ver_platform_win32_nt": 368, "ver_nt_workst": 368, "workstat": 368, "ver_nt_domain_control": 368, "ver_nt_serv": 368, "getversionex": 368, "osversioninfoex": 368, "get_asyncgen_hook": [368, 465], "asyncgen_hook": 368, "firstit": 368, "get_coroutine_origin_tracking_depth": [368, 465, 494], "0x010502f0": 368, "bits_per_digit": [368, 471, 484, 486], "sizeof_digit": [368, 484, 486], "immort": [368, 480, 495], "engag": 368, "maxunicod": [368, 465, 490], "0xffff": [368, 490], "freebsd8": 368, "linux3": [368, 490], "aix5": 368, "aix7": [368, 495], "coarser": 368, "profilefunc": 368, "timeslic": 368, "tracefunc": 368, "lnotab_not": [368, 493], "set_asyncgen_hook": [368, 445, 465], "thread_info": [368, 465, 490], "tracebacklimit": 368, "resurrect": [368, 377, 380, 443, 489, 496], "api_vers": [368, 465, 480], "releaselevel": [368, 484, 486], "winver": 368, "xa": 368, "2a3": 368, "citat": 368, "9899": 368, "jtc1": 368, "sc22": 368, "wg14": 368, "n1256": 368, "nuanc": 369, "landmark": [369, 476, 493], "majorvers": 369, "minorvers": 369, "python311": [369, 466, 467], "py_enable_shar": 370, "libdir": [370, 475], "posix_venv": [370, 488], "nt_venv": [370, 488], "platstdlib": [370, 489], "platinclud": [370, 489], "get_scheme_nam": 370, "get_default_schem": 370, "_get_default_schem": 370, "get_preferred_schem": [370, 488], "get_path": [370, 484, 489], "_get_preferred_schem": 370, "redistributor": [370, 484], "_install_schem": 370, "get_path_nam": 370, "get_python_vers": [370, 489], "intel64": 370, "em64t": 370, "ppc64": 370, "is_python_build": [370, 484], "parse_config_h": 370, "ac_apple_universal_build": 370, "aix_genuine_cplusplu": 370, "arflag": 370, "log_mask": 371, "pri": 371, "log_upto": 371, "log_pid": 371, "log_con": 371, "log_ndelai": 371, "log_odelai": 371, "log_nowait": 371, "log_perror": 371, "file_or_dir": 372, "filename_onli": 372, "nannynag": 372, "process_token": 372, "ustar": [373, 483], "longlink": 373, "10240": 373, "readerror": 373, "compressionerror": 373, "is_tarfil": 373, "tarerror": 373, "streamerror": 373, "extracterror": 373, "errorlevel": 373, "headererror": 373, "frombuf": 373, "filtererror": 373, "absolutepatherror": 373, "outsidedestinationerror": 373, "specialfileerror": [373, 484], "absolutelinkerror": 373, "linkoutsidedestinationerror": 373, "regtyp": 373, "aregtyp": 373, "lnktype": 373, "symtyp": 373, "chrtype": 373, "blktype": 373, "dirtyp": 373, "fifotyp": 373, "conttyp": 373, "gnutype_longnam": 373, "gnutype_longlink": 373, "gnutype_spars": 373, "ustar_format": 373, "gnu_format": 373, "pax_format": [373, 483], "default_format": [373, 493], "ignore_zero": 373, "pax_head": 373, "extractal": [373, 437, 482, 483, 492], "numeric_own": [373, 492], "set_attr": 373, "extractfil": 373, "extraction_filt": 373, "fully_trust": 373, "arcnam": [373, 437], "addfil": 373, "gettarinfo": 373, "fromtarfil": 373, "tobuf": 373, "linknam": 373, "gname": 373, "chksum": 373, "devmajor": 373, "devminor": 373, "offset_data": 373, "new_tarinfo": 373, "old_tarinfo": 373, "isreg": 373, "issym": 373, "islnk": 373, "ischr": 373, "isblk": 373, "isfifo": 373, "isdev": 373, "706": [373, 487, 488, 495, 496], "tar_filt": 373, "data_filt": 373, "fully_trusted_filt": 373, "crucial": [373, 447, 477], "my_tarfil": 373, "warn_the_us": 373, "statefulfilt": 373, "filter_func": 373, "file_count": 373, "brian_1979": [373, 437], "source1": [373, 437], "sourcen": [373, 437], "filternam": 373, "quux": 373, "bsdtar": 373, "libarch": 373, "unmaintain": [373, 390, 489, 491, 493], "ancient": [373, 482], "seventh": 373, "miscalcul": 373, "telopt_": 374, "iac": 374, "dont": 374, "wont": 374, "WILL": [374, 441], "subnegoti": 374, "dm": 374, "brk": 374, "ao": 374, "ayt": 374, "ec": 374, "ga": 374, "read_": 374, "tn": 374, "read_until": 374, "read_al": 374, "read_som": 374, "read_very_eag": 374, "eager": [374, 442, 469], "midst": 374, "read_eag": 374, "read_lazi": 374, "read_very_lazi": 374, "read_sb_data": 374, "subopt": 374, "get_socket": 374, "mt_interact": 374, "uncompil": 374, "set_option_negotiation_callback": 374, "temporaryfil": 375, "temporarydirectori": [375, 489], "spooledtemporaryfil": [375, 483, 488, 490], "max_siz": [375, 401], "spool": 375, "_file": 375, "ignore_cleanup_error": 375, "gettempprefix": 375, "gettempprefixb": 375, "tmpdir": 375, "searchabl": [375, 447], "gettempdir": 375, "tempdir": [375, 417], "gettempdirb": 375, "unsuspect": 375, "tmpdirnam": [375, 489], "beaten": 375, "punch": 375, "tmptjujjt": 375, "tcgetattr": 376, "iflag": 376, "oflag": 376, "lflag": 376, "ispe": 376, "ospe": 376, "vmin": 376, "vtime": 376, "tcsetattr": [376, 398], "tcsanow": 376, "tcsadrain": 376, "tcsaflush": [376, 398], "tcsendbreak": 376, "tcdrain": 376, "tcflush": 376, "tciflush": 376, "tcoflush": 376, "tcioflush": 376, "tcflow": 376, "tcooff": 376, "tcoon": 376, "tcioff": 376, "tcion": 376, "tcgetwins": 376, "ws_row": 376, "ws_col": 376, "tiocgwinsz": 376, "tiocgsiz": 376, "tcsetwins": 376, "winsiz": 376, "tiocswinsz": 376, "tiocssiz": 376, "test_": [377, 437], "pyunit": [377, 478], "mytestcase1": 377, "test_feature_on": 377, "test_feature_two": 377, "mytestcase2": 377, "whitebox": 377, "blackbox": 377, "improp": [377, 443], "crop": 377, "anomal": 377, "testfuncacceptssequencesmixin": 377, "mysuperwhammyfunct": 377, "test_func": 377, "acceptlist": 377, "acceptstr": 377, "accepttupl": 377, "beck": [377, 403, 478], "test_main": 377, "testload": [377, 403, 404, 484, 488, 492], "loadtestsfrommodul": [377, 403, 488, 492], "test_spam": 377, "uall": [377, 480], "largefil": 377, "testfail": 377, "resourcedeni": 377, "skiptest": [377, 403, 484, 491], "is_jython": 377, "is_android": 377, "unix_shel": 377, "loopback_timeout": 377, "internet_timeout": 377, "transient_internet": 377, "short_timeout": 377, "buildbot": [377, 403, 471], "long_timeout": 377, "pipe_max_s": 377, "sock_max_s": 377, "test_support_dir": 377, "test_home_dir": 377, "test_data_dir": 377, "max_py_ssize_t": 377, "max_memus": 377, "set_memlimit": 377, "real_max_memus": 377, "missing_c_docstr": 377, "with_doc_str": [377, 471], "have_docstr": 377, "test_http_url": 377, "always_eq": 377, "never_eq": 377, "busy_retri": 377, "sleeping_retri": 377, "init_delai": 377, "max_delai": 377, "backoff": 377, "is_resource_en": 377, "python_is_optim": 377, "o0": 377, "with_pymalloc": 377, "_testcapi": [377, 471], "sortdict": 377, "findfil": 377, "check_impl_detail": 377, "record_original_stdout": 377, "get_original_stdout": 377, "args_from_interpreter_flag": 377, "optim_args_from_interpreter_flag": 377, "captured_stdin": 377, "captured_stdout": 377, "captured_stderr": 377, "disable_faulthandl": 377, "gc_collect": 377, "disable_gc": 377, "swap_attr": 377, "new_val": 377, "swap_item": 377, "flush_std_stream": 377, "print_warn": 377, "wait_process": 377, "calcobjs": 377, "calcvobjs": 377, "checksizeof": 377, "anticipate_failur": 377, "system_must_validate_cert": 377, "run_with_local": 377, "catstr": 377, "run_with_tz": 377, "requires_freebsd_vers": 377, "min_vers": 377, "requires_linux_vers": 377, "requires_mac_vers": 377, "requires_ieee_754": 377, "requires_zlib": 377, "requires_gzip": 377, "requires_bz2": 377, "requires_lzma": 377, "requires_resourc": 377, "requires_docstr": 377, "cpython_onli": 377, "impl_detail": 377, "no_trac": 377, "refcount_test": 377, "bigmemtest": 377, "memus": 377, "bigmem": 377, "_4g": 377, "bigaddrspacetest": 377, "check_syntax_error": 377, "errtext": 377, "open_urlresourc": 377, "reap_children": 377, "hog": 377, "refleak": 377, "get_attribut": 377, "catch_unraisable_except": 377, "load_package_test": 377, "pkg_dir": 377, "standard_test": [377, 403], "detect_api_mismatch": 377, "ref_api": 377, "other_api": 377, "test_inst": 377, "object_to_patch": 377, "new_valu": 377, "run_in_subinterp": 377, "check_free_after_iter": 377, "missing_compiler_execut": 377, "cmd_name": 377, "check__all__": 377, "test_cas": [377, 403], "name_of_modul": 377, "not_export": 377, "_csv": 377, "misctestcas": 377, "test__all__": 377, "othertestcas": 377, "bar_const": 377, "foo_const": 377, "_bar": 377, "skip_if_broken_multiprocessing_synchron": 377, "check_disallow_instanti": 377, "adjust_int_max_str_digit": 377, "max_digit": 377, "suppresscrashreport": 377, "seterrormod": 377, "coredump": 377, "savesign": 377, "matcher": [377, 405], "match_valu": 377, "ipv6_en": 377, "find_unused_port": 377, "elicit": 377, "ephemer": [377, 417], "bind_port": 377, "s_server": 377, "so_exclusiveaddrus": 377, "bind_unix_socket": 377, "skip_unless_bind_unix_socket": 377, "resource_nam": 377, "interpreter_requires_environ": 377, "skipif": [377, 403], "assert_python": 377, "pythonusersit": 377, "run_python_until_end": 377, "env_var": 377, "__isol": 377, "__cleanenv": 377, "__cwd": 377, "assert_python_ok": 377, "assert_python_failur": 377, "spawn_python": 377, "kill_python": 377, "make_script": 377, "script_dir": 377, "script_basenam": 377, "omit_suffix": 377, "make_zip_script": 377, "zip_dir": 377, "zip_basenam": 377, "name_in_zip": 377, "make_pkg": 377, "init_sourc": 377, "make_zip_pkg": 377, "bytecodetestcas": 377, "get_disassembly_as_str": 377, "assertinbytecod": 377, "_unspecifi": 377, "assertnotinbytecod": 377, "reap_thread": 377, "threading_cleanup": 377, "original_valu": 377, "threading_setup": 377, "wait_threads_exit": 377, "catch_threading_except": 377, "fs_nonascii": 377, "testfn": 377, "testfn_nonascii": 377, "testfn_unencod": 377, "testfn_undecod": 377, "testfn_unicod": 377, "environmentvarguard": [377, 483], "fakepath": 377, "can_symlink": 377, "can_xattr": 377, "xattr": 377, "change_cwd": 377, "create_empty_fil": 377, "fd_count": 377, "fs_is_case_insensit": 377, "make_bad_fd": 377, "skip_unless_symlink": 377, "skip_unless_xattr": 377, "tempcwd": 377, "temp_dir": 377, "temp_umask": 377, "import_fresh_modul": 377, "reinsert": [377, 391, 484, 486], "py_warn": 377, "_warn": [377, 487], "c_warn": 377, "required_on": 377, "modules_setup": 377, "modules_cleanup": 377, "oldmodul": 377, "make_legacy_pyc": 377, "cleanimport": 377, "dirsonsyspath": 377, "ignore_warn": 377, "catch_warn": [377, 415, 483, 488], "simplefilt": [377, 415, 483, 484, 488], "warning_help": 377, "test_suppress_warn": 377, "check_no_resource_warn": 377, "check_syntax_warn": 377, "check_warn": [377, 483], "regexp": [377, 489], "warningcategori": 377, "warningrecord": 377, "hei": 377, "warningsrecord": 377, "textwrapp": [379, 480, 491], "initial_ind": 379, "subsequent_ind": 379, "expand_tab": 379, "replace_whitespac": 379, "fix_sentence_end": 379, "break_long_word": 379, "drop_whitespac": [379, 483], "break_on_hyphen": 379, "max_lin": [379, 491], "thello": 379, "nworld": 379, "imperfect": 379, "frankenstein": 379, "insec": 379, "camelcas": 380, "activecount": [380, 483, 487], "main_thread": [380, 491], "_threading_loc": 380, "threadgroup": 380, "setnam": [380, 487], "native_id": [380, 495], "isdaemon": [380, 483, 487], "setdaemon": [380, 483, 487], "an_item_is_avail": 380, "get_an_available_item": 380, "make_an_item_avail": 380, "notifyal": [380, 487], "dutch": [380, 450], "scientist": 380, "edsger": 380, "dijkstra": 380, "awoken": 380, "maxconnect": 380, "pool_sema": 380, "connectdb": 380, "isset": [380, 487], "accept_connect": 380, "process_server_connect": 380, "make_connect": [380, 434], "process_client_connect": 380, "awri": 380, "some_lock": 380, "1969": 381, "acronym": 381, "compromis": [381, 413, 439, 456], "wisdom": 381, "tm_gmtoff": [381, 493], "tm_zone": [381, 493], "tm": [381, 390], "1993": 381, "pthread_getcpuclockid": [381, 494], "clk_id": 381, "clock_getr": [381, 490], "clock_gettim": [381, 490, 496], "clock_gettime_n": [381, 494], "clock_settim": [381, 490], "clock_realtim": [381, 488], "clock_settime_n": [381, 494], "get_clock_info": [381, 490], "thread_tim": [381, 494, 496], "ntp": 381, "monotonic_n": [381, 494], "perf_counter_n": [381, 382, 494], "process_time_n": [381, 494], "suspens": [381, 443, 445], "clock_nanosleep": [381, 488], "nanosleep": [381, 488], "tm_year": [381, 479], "tm_mon": 381, "tm_mdai": 381, "tm_hour": 381, "tm_min": 381, "tm_sec": 381, "tm_wdai": 381, "tm_ydai": 381, "335": 381, "tm_dai": 381, "time_n": [381, 494], "thread_time_n": [381, 494], "clock_thread_cputime_id": [381, 496], "tzset": 381, "meridian": 381, "julian": [381, 491, 492], "05edt": 381, "m4": 381, "m10": 381, "aest": 381, "10aedt": 381, "tzfile": 381, "datafil": [381, 480], "australia": 381, "melbourn": 381, "egypt": 381, "eet": 381, "eest": 381, "clock_boottim": [381, 494], "clock_monoton": [381, 488, 494], "settimeofdai": 381, "clock_highr": 381, "nonadjust": 381, "clock_monotonic_raw": 381, "clock_process_cputime_id": 381, "clock_prof": [381, 494], "clock_tai": 381, "ptp": 381, "clock_uptim": [381, 494], "uptim": [381, 494], "clock_uptime_raw": [381, 495], "asleep": 381, "1123": [381, 486], "usec": [382, 492], "3018611848820001": 382, "2727368790656328": 382, "23702679807320237": 382, "19665591977536678": 382, "default_tim": 382, "autorang": [382, 493], "time_taken": 382, "wallclock": 382, "nsec": 382, "5000000": 382, "0877": 382, "41440500499993504": 382, "7246671520006203": 382, "3955516149999312": 382, "40183617287970225": 382, "37027556854118704": 382, "38344867356679524": 382, "3712595970846668": 382, "37866875250654886": 382, "9138244460009446": 382, "5829014980008651": 382, "04215312199994514": 382, "08588060699912603": 382, "stupid": 382, "chief": [383, 459], "virtu": [383, 436], "famou": 383, "vastli": 383, "woefulli": 384, "tkdoc": 384, "roseman": [384, 487, 496], "978": 384, "1999149567": 384, "alan": [384, 482, 483, 494], "moor": [384, 479, 480, 483, 491, 492, 494], "1788835886": 384, "lutz": 384, "0596158101": 384, "ousterhout": 384, "jone": [384, 480, 482, 491, 492], "0321336330": 384, "cocoa": [384, 474, 489], "gdi": 384, "screennam": [384, 390], "usetk": 384, "argv0": 384, "winfo_id": 384, "winfo_par": 384, "loadtk": 384, "frm": 384, "grid": [384, 389, 391], "lbl": 384, "btn": [384, 391, 399], "winfo_x": 384, "winfo_height": 384, "winfo_view": 384, "winfo": 384, "reenter": 384, "idiosyncrat": 384, "relief": [384, 391], "groov": 384, "placer": 384, "qualit": 384, "183": 384, "parcel": [384, 391], "ipadx": 384, "ipadi": 384, "padx": 384, "padi": 384, "textvari": [384, 391], "onvalu": 384, "offvalu": 384, "stringvar": [384, 391], "intvar": 384, "doublevar": 384, "booleanvar": 384, "entrythingi": 384, "print_cont": 384, "wm": 384, "_root": 384, "compass": 384, "sw": 384, "nw": 384, "gray25": 384, "gray50": 384, "hourglass": 384, "questhead": 384, "contrib": 384, "gumbi": 384, "print_it": 384, "rrggbb": 384, "rrrgggbbb": 384, "rrrrggggbbbb": 384, "160": [384, 397, 399, 441], "cursorfont": 384, "xc_": 384, "xc_hand2": 384, "hand2": 384, "179": 384, "centimetr": 384, "millimetr": 384, "5i": 384, "widthxheight": 384, "200x100": 384, "3i": 384, "2i": 384, "4c": 384, "43c": 384, "sunken": 384, "ridg": 384, "scrollcommand": [384, 391], "3tk": 384, "turn_r": 384, "activeforeground": 384, "send_ev": 384, "keysym": 384, "keysym_num": 384, "x_root": 384, "y_root": 384, "entryconfig": 384, "bitmapimag": 384, "photoimag": [384, 391, 495], "createfilehandl": 384, "deletefilehandl": 384, "maxbytecount": 384, "chooser": 385, "picker": 385, "askcolor": 385, "buttonpress": 386, "dnd_start": 386, "dnd_accept": 386, "old_target": 386, "dnd_leav": 386, "dnd_enter": 386, "dnd_commit": 386, "dnd_end": 386, "dndhandler": 386, "buttonreleas": 386, "on_mot": 386, "on_releas": 386, "slant": [387, 477], "emphasi": 387, "overstrik": 387, "strikeout": 387, "displayof": 387, "cget": [387, 391], "ascent": 387, "descent": 387, "linespac": 387, "nametofont": 387, "showinfo": 388, "showwarn": [388, 415, 483], "showerror": 388, "askquest": 388, "yesno": 388, "askokcancel": 388, "askretrycancel": 388, "askyesno": 388, "askyesnocancel": 388, "abortretryignor": 388, "okcancel": 388, "retrycancel": 388, "yesnocancel": 388, "vbar": [389, 392], "hlist": 390, "fileentri": 390, "panedwindow": [390, 391], "tixinspect": 390, "inspector": 390, "balloon": 390, "combo": [390, 391], "subwidget": 390, "labelentri": 390, "mega": 390, "labelfram": [390, 391], "optionmenu": 390, "popupmenu": 390, "tk_popup": 390, "stdbuttonbox": 390, "motif": 390, "dirlist": 390, "dirtre": 390, "dirselectdialog": 390, "dirselectbox": 390, "exfileselectbox": 390, "tixexfileselectdialog": 390, "fileselectbox": 390, "checklist": 390, "checkbutton": [390, 391], "tlist": 390, "listnotebook": 390, "tixnotebook": 390, "xpm": 390, "inputonli": 390, "tixcommand": 390, "tix_configur": 390, "cnf": [390, 475], "tix_cget": 390, "tix_getbitmap": 390, "tix_addbitmapdir": 390, "tix_getimag": 390, "tix_librari": 390, "tix_filedialog": 390, "dlgclass": 390, "fileselectdialog": 390, "monochrom": 390, "tix_option_get": 390, "tix_resetopt": 390, "newschem": 390, "newfontset": 390, "newscmprio": 390, "fontset": 390, "resetopt": 390, "tix_config": 390, "anti": [391, 399, 405], "menubutton": 391, "tile": [391, 399, 484], "monograph": 391, "bw": 391, "tlabel": 391, "ttkstyle": 391, "bindtag": 391, "viewabl": 391, "xscrollcommand": 391, "yscrollcommand": 391, "statespec": 391, "instat": 391, "inquir": [391, 492], "bbox": 391, "icursor": 391, "xview": 391, "exportselect": 391, "selection_get": 391, "postcommand": 391, "dropdown": 391, "comboboxselect": 391, "newindex": 391, "enable_travers": 391, "tab_id": 391, "notebooktabchang": 391, "unmanag": 391, "autoincr": 391, "recur": 391, "southeast": 391, "displaycolumn": 391, "yview": 391, "selectmod": 391, "treeviewselect": 391, "treeviewopen": 391, "treeviewclos": 391, "offscreen": 391, "set_children": 391, "newchildren": 391, "minwidth": 391, "imagenam": 391, "identify_row": 391, "identify_column": 391, "identify_region": 391, "identify_el": 391, "reattach": 391, "selection_set": [391, 495], "selection_add": 391, "selection_remov": 391, "selection_toggl": 391, "tag_bind": 391, "tag_configur": 391, "tag_ha": 391, "winfo_class": 391, "somewidget": 391, "query_opt": 391, "tbutton": 391, "colored_btn": 391, "layoutspec": 391, "tmenubutton": 391, "mbtn": 391, "element_cr": 391, "elementnam": 391, "etyp": [391, 396, 487], "imagespec": 391, "interior": [391, 399, 478, 479], "img1": 391, "img2": 391, "img3": 391, "themenam": 391, "element_nam": 391, "element_opt": 391, "theme_cr": 391, "theme_set": 391, "tcombobox": 391, "green2": 391, "green4": 391, "fieldbackground": 391, "green3": 391, "olivedrab1": 391, "olivedrab2": 391, "theme_nam": 391, "theme_us": 391, "themechang": 391, "caviti": 391, "whichsid": 391, "nswe": 391, "sublayout": 391, "tok_nam": 392, "istermin": 392, "isnontermin": 392, "iseof": 392, "endmark": [392, 393, 446], "lpar": [392, 393], "rpar": [392, 393], "lsqb": 392, "rsqb": 392, "amper": 392, "lbrace": 392, "rbrace": 392, "eqequ": 392, "notequ": 392, "lessequ": 392, "greaterequ": 392, "leftshift": 392, "rightshift": 392, "doublestar": 392, "plusequ": 392, "minequ": 392, "starequ": 392, "slashequ": 392, "percentequ": 392, "amperequ": 392, "vbarequ": 392, "circumflexequ": 392, "leftshiftequ": 392, "rightshiftequ": 392, "doublestarequ": 392, "doubleslash": 392, "doubleslashequ": 392, "atequ": 392, "rarrow": 392, "colonequ": 392, "soft_keyword": [392, 446], "errortoken": [392, 393], "n_token": 392, "nt_offset": 392, "exact_typ": 393, "srow": 393, "scol": 393, "erow": 393, "ecol": 393, "generate_token": [393, 485], "untoken": 393, "tokenerror": 393, "decistmt": 393, "3e": 393, "007": 393, "13th": 393, "21716034272e": 393, "217160342717258261933904529e": 393, "toknum": 393, "tokval": 393, "say_hello": 393, "tomli": 394, "kit": [394, 487], "tomldecodeerror": 394, "pyproject": 394, "toml_str": 394, "listfunc": 395, "coverdir": 395, "trackcal": 395, "countfunc": 395, "countcal": 395, "ignoremod": 395, "ignoredir": 395, "runfunc": [395, 495], "coverageresult": 395, "write_result": 395, "show_miss": 395, "tracer": [395, 399, 483], "print_last": 396, "extract_tb": 396, "extract_stack": 396, "format_list": 396, "extracted_list": 396, "format_except": [396, 487], "format_exc": 396, "format_tb": [396, 397], "format_stack": 396, "clear_fram": [396, 491], "walk_stack": [396, 492], "walk_tb": [396, 492], "lookup_lin": 396, "capture_loc": 396, "max_group_width": 396, "max_group_depth": 396, "from_except": 396, "frame_gen": 396, "from_list": 396, "format_frame_summari": [396, 488], "frame_summari": 396, "run_user_cod": 396, "envdir": 396, "bright_side_of_lif": 396, "formatted_lin": 396, "another_funct": 396, "lumberstack": 396, "an_error": 396, "take_snapshot": 397, "top_stat": 397, "716": 397, "4855": 397, "39328": 397, "284": 397, "521": 397, "3199": 397, "167": 397, "368": 397, "244": 397, "2315": 397, "381": 397, "185": [397, 486], "779": 397, "243": [397, 478], "133": 397, "347": [397, 482], "262": 397, "1446": 397, "1454": 397, "2131": 397, "148": 397, "344": 397, "snapshot1": 397, "snapshot2": 397, "compare_to": 397, "8173": 397, "4428": 397, "71332": 397, "39369": 397, "117": [397, 478], "940": 397, "8106": 397, "571": 397, "298": 397, "589": [397, 401, 495], "1005": 397, "166": 397, "7423": 397, "1526": 397, "1334": 397, "848": 397, "1465": 397, "784": 397, "491": 397, "71": 397, "969": 397, "870": 397, "1036": 397, "934": 397, "1068": 397, "619": 397, "1581": 397, "1614": 397, "938": 397, "1728": 397, "test_pickletool": 397, "run_doctest": 397, "1276": 397, "test_runn": 397, "976": 397, "display_failur": 397, "761": 397, "match_test": 397, "1563": 397, "main_in_temp_cwd": 397, "run_glob": 397, "display_top": 397, "key_typ": 397, "filter_trac": 397, "419": [397, 486], "_b85chars2": 397, "_b85char": 397, "306": 397, "_a85chars2": 397, "_a85char": 397, "class_definit": 397, "testmethod": 397, "_hexdig": 397, "_weakrefset": 397, "142": [397, 457, 461], "_b32tab2": 397, "_b32tab": 397, "6220": 397, "3602": 397, "5303": 397, "get_traced_memori": 397, "reset_peak": [397, 496], "large_sum": 397, "first_siz": 397, "first_peak": 397, "small_sum": 397, "second_s": 397, "second_peak": 397, "664": 397, "3592984": 397, "804": 397, "29704": 397, "optimis": [397, 443], "clear_trac": 397, "get_object_traceback": 397, "get_traceback_limit": 397, "meaningfulli": 397, "get_tracemalloc_memori": 397, "is_trac": 397, "total_nfram": 397, "filename_pattern": 397, "all_fram": 397, "traceback_limit": [397, 422], "old_snapshot": 397, "size_diff": 397, "count_diff": 397, "most_recent_first": [397, 494], "setraw": 398, "setcbreak": 398, "walli": 399, "feurzeig": 399, "seymour": 399, "papert": 399, "cynthia": 399, "solomon": 399, "intric": 399, "learner": 399, "classroom": 399, "clockwis": 399, "anew": [399, 447, 496], "clearscreen": 399, "fillcolor": 399, "begin_fil": 399, "end_fil": 399, "whom": [399, 441], "360": 399, "bgcolor": 399, "bk": 399, "setposit": 399, "seti": 399, "sethead": 399, "seth": 399, "clearstamp": 399, "xcor": 399, "ycor": 399, "pendown": 399, "pd": 399, "penup": 399, "pu": 399, "pensiz": 399, "isdown": 399, "pencolor": 399, "showturtl": 399, "hideturtl": 399, "isvis": 399, "resizemod": 399, "shapes": 399, "turtles": 399, "shearfactor": 399, "settiltangl": [399, 488], "tiltangl": [399, 488], "tilt": 399, "shapetransform": 399, "get_shapepoli": 399, "onclick": 399, "onreleas": 399, "ondrag": 399, "begin_poli": 399, "end_poli": 399, "get_poli": 399, "getturtl": 399, "getpen": 399, "getscreen": 399, "setundobuff": 399, "undobufferentri": 399, "bgpic": 399, "resetscreen": 399, "screensiz": 399, "setworldcoordin": 399, "onkei": 399, "onkeyreleas": 399, "onkeypress": 399, "onscreenclick": 399, "ontim": 399, "colormod": 399, "getcanva": 399, "getshap": 399, "register_shap": 399, "addshap": 399, "window_height": 399, "window_width": 399, "textinput": 399, "numinput": 399, "exitonclick": 399, "337": 399, "vec2d": 399, "to_angl": 399, "inscrib": 399, "polygon": 399, "semicircl": 399, "colorstr": 399, "diamet": 399, "canva": [399, 483, 495], "stamp_id": 399, "stampid": 399, "astamp": 399, "undobuff": 399, "speedstr": 399, "speedvalu": 399, "440": 399, "225": [399, 477], "27876": 399, "60254": 399, "fullcircl": 399, "grad": 399, "gon": 399, "gradian": 399, "5707963267948966": 399, "thick": 399, "turtleshap": 399, "pendict": 399, "nores": 399, "stretchfactor": 399, "penstat": 399, "33cc8c": 399, "brown": [399, 483], "5490196078431373": 399, "140": [399, 484], "32c18f": 399, "violet": 399, "colorstring1": 399, "colorstring2": 399, "g2": 399, "285078": 399, "a0c8f0": 399, "fillstat": 399, "arial": 399, "fontnam": 399, "fontsiz": 399, "fonttyp": 399, "shapenam": 399, "rmode": 399, "outlinewidth": 399, "stretch_wid": 399, "stretch_len": 399, "perpendicular": 399, "shear": 399, "t11": 399, "t12": 399, "t21": 399, "t22": 399, "myturtl": 399, "glow": 399, "unglow": 399, "handdraw": 399, "myfavouriteshap": 399, "mick": [399, 477, 480, 482], "pet": 399, "_screen": 399, "addcompon": 399, "poly1": 399, "poly2": 399, "shapelist": 399, "myshap": 399, "800080": 399, "picnam": 399, "nopic": 399, "backgroundimag": 399, "landscap": [399, 483], "canvwidth": 399, "canvheight": 399, "canvaswidth": 399, "canvasheight": 399, "1500": 399, "llx": 399, "lly": 399, "urx": 399, "distort": 399, "octagon": 399, "acceler": [399, 477, 478, 482, 485, 490, 491], "xdummi": 399, "ydummi": 399, "nim": 399, "minval": 399, "maxval": 399, "stake": 399, "cmode": 399, "turtlegraphicserror": 399, "scrolledcanva": 399, "thusli": 399, "480": 399, "turtlegraph": 399, "using_idl": 399, "_cfg": 399, "startx": 399, "leftright": 399, "starti": 399, "topbottom": 399, "200x200": 399, "titlebar": 399, "zoo": [399, 442], "rawpen": 399, "playground": 399, "type_": 399, "poli": [399, 477], "tooltip": 399, "backgroundcolor": 399, "write_docstringdict": 399, "turtle_docstringdict": 399, "turtle_docstringdict_german": 399, "glingl": 399, "aon": 399, "undobuffers": 399, "exampleturtl": 399, "examplescreen": 399, "docstringdict": 399, "turtle_docstringdict_italian": 399, "bytedesign": 399, "sourcecod": 399, "chao": 399, "verhulst": 399, "colormix": 399, "forest": 399, "fractalcurv": 399, "hilbert": 399, "koch": 399, "lindenmay": 399, "ethnomathemat": 399, "indian": 399, "kolam": 399, "minimal_hanoi": 399, "hanoi": 399, "disc": 399, "nimstick": 399, "minimalist": 399, "peac": 399, "penros": 399, "aperiod": 399, "kite": 399, "dart": 399, "planet_and_moon": 399, "rosett": 399, "round_danc": 399, "danc": [399, 457], "sorting_anim": 399, "two_canvas": 399, "canvas": 399, "yinyang": 399, "tdemo_nim": 399, "tdemo_round_d": 399, "new_class": [400, 490], "exec_bodi": 400, "prepare_class": [400, 490], "__prepare__": [400, 404, 443, 491, 493], "resolve_bas": [400, 443, 494], "__mro_entries__": [400, 443, 494], "listiter": 400, "lambdatyp": 400, "generatortyp": 400, "coroutinetyp": [400, 492], "asyncgeneratortyp": 400, "codetyp": [400, 495], "celltyp": 400, "builtinfunctiontyp": 400, "builtinmethodtyp": 400, "wrapperdescriptortyp": [400, 494], "methoddescriptortyp": [400, 494], "classmethoddescriptortyp": [400, 494], "t_origin": 400, "t_arg": 400, "getsetdescriptortyp": 400, "memberdescriptortyp": 400, "dynamicclassattribut": [400, 488, 491], "gen_func": 400, "typing_extens": 401, "cheat": 401, "standardis": 401, "544": [401, 495], "runtime_check": [401, 487, 495], "586": [401, 487, 495, 496], "591": [401, 495], "593": [401, 496], "typeguard": [401, 487], "notrequir": [401, 488], "literalstr": [401, 488], "dataclass_transform": [401, 488], "new_vector": 401, "connectionopt": 401, "broadcast_messag": 401, "some_id": [401, 493], "524313": [401, 493], "get_user_nam": 401, "user_id": 401, "user_a": 401, "42351": 401, "user_b": 401, "23413": 401, "54341": 401, "some_valu": 401, "adminuserid": 401, "prouserid": 401, "get_next_item": 401, "async_queri": 401, "on_success": 401, "on_error": 401, "on_upd": 401, "batch_proc": 401, "cb_result": 401, "good_cb": 401, "bad_cb": 401, "maxitem": 401, "paramspecvari": 401, "returntyp": 401, "arg1typ": 401, "arg2typ": 401, "notify_by_email": 401, "prouser": 401, "teamus": 401, "make_new_us": 401, "user_class": 401, "new_non_team_us": 401, "basicus": 401, "loggedvar": 401, "zero_all_var": 401, "contravari": 401, "weirdtrio": 401, "linkedlist": 401, "vec": [401, 457], "inproduct": 401, "type1": 401, "aesthet": 401, "legacy_pars": 401, "hash_a": 401, "hash_b": 401, "typesaf": 401, "unpython": 401, "bucket": [401, 443], "unconstrain": 401, "anystr": 401, "greet_bad": 401, "greet_prop": 401, "run_queri": [401, 488], "arbitrary_str": [401, 488], "literal_str": 401, "never_call_m": 401, "int_or_str": 401, "noreturn": 401, "reveal_typ": [401, 488], "return_self": 401, "subclassoffoo": 401, "returns_egg": 401, "boxofstr": 401, "make_box_of_str": 401, "with_lock": 401, "my_lock": 401, "sum_threadsaf": 401, "validate_simpl": 401, "open_help": 401, "starship": [401, 482, 493], "enterprise_d": 401, "fastconnector": 401, "__metadata__": 401, "no_type_check": [401, 488], "valuerang": 401, "ann1": 401, "include_extra": [401, 496], "is_str": 401, "is_str_list": 401, "typea": 401, "typeb": 401, "kt": 401, "lookup_nam": 401, "print_capit": 401, "stringsubclass": 401, "supportsab": 401, "__covariant__": 401, "__contravariant__": 401, "__bound__": 401, "__constraints__": 401, "move_first_element_to_last": 401, "get_shap": 401, "happili": 401, "array2": 401, "float_array_1d": 401, "int_array_2d": 401, "yup": 401, "add_log": 401, "add_two": 401, "paramspecarg": [401, 487], "paramspeckwarg": [401, 487], "get_origin": [401, 495], "_field_typ": [401, 495, 496], "first_us": 401, "__supertype__": 401, "genproto": 401, "poni": 401, "closabl": 401, "checkabl": 401, "__total__": 401, "__required_keys__": 401, "__optional_keys__": 401, "supportsbyt": [401, 488], "supportscomplex": [401, 488], "supportsfloat": 401, "supportsindex": [401, 495], "supportsround": 401, "assert_typ": [401, 488], "complex_funct": 401, "assert_nev": [401, 488], "eq_default": 401, "order_default": 401, "kw_only_default": 401, "field_specifi": 401, "create_model": [401, 488], "customermodel": [401, 488], "modelbas": 401, "modelmeta": 401, "__dataclass_transform__": 401, "meanwhil": 401, "get_overload": [401, 488], "clear_overload": [401, 488], "__final__": [401, 488], "no_type_check_decor": 401, "type_check_onli": 401, "fetch_respons": 401, "globaln": 401, "localn": 401, "unsubscript": 401, "get_arg": [401, 487, 488, 495, 496], "is_typeddict": [401, 487], "forwardref": 401, "expensive_mod": 401, "sometyp": [401, 492], "anothertyp": 401, "other_fun": 401, "count_word": 401, "keep_posit": 401, "abstractset": 401, "t_co": 401, "ct_co": 401, "add_unicode_checkmark": 401, "u2713": 401, "kt_co": 401, "vt_co": 401, "get_position_in_index": 401, "word_list": 401, "_vt_co": 401, "yieldtyp": 401, "sendtyp": 401, "echo_round": 401, "contravariantli": 401, "infinite_stream": 401, "covariantli": 401, "invariantli": 401, "38291": [401, 487], "undecid": 401, "91896": 401, "92332": [401, 488], "east_asian_width": 402, "unistr": [402, 477], "00c7": [402, 445], "cedilla": [402, 445], "0043": [402, 445], "0327": [402, 445], "2160": 402, "0049": 402, "kd": 402, "kc": 402, "unidata_vers": 402, "ucd_3_2_0": [402, 482], "solidu": 402, "etter": 402, "ppercas": 402, "u0660": [402, 477], "rabic": 402, "umber": 402, "namealias": [402, 450], "namedsequ": 402, "junit": [403, 478], "taxonomi": 403, "unittestgui": 403, "appveyor": 403, "teststringmethod": [403, 404], "test_upp": 403, "test_isupp": 403, "test_split": [403, 404], "crux": 403, "test_module1": 403, "test_module2": 403, "test_modul": [403, 405], "testclass": 403, "test_method": 403, "test_someth": [403, 404, 405, 494], "foo_test": [403, 494], "sometest": [403, 494], "bar_test": [403, 494], "test_foo": [403, 405, 494], "footest": [403, 494], "project_directori": 403, "_test": [403, 489], "proj": 403, "test_mypkg": 403, "functiontestcas": 403, "defaultwidgetsizetestcas": 403, "test_default_widget_s": 403, "widgettestcas": 403, "test_widget_res": 403, "texttestrunn": 403, "test_widget": 403, "testsometh": 403, "makesometh": 403, "makesomethingdb": 403, "deletesomethingdb": 403, "mytestcas": 403, "test_noth": 403, "test_format": 403, "skipunless": [403, 486], "test_windows_support": 403, "test_maybe_skip": 403, "external_resource_avail": 403, "005": 403, "myskippedtestcas": 403, "test_not_run": 403, "expectedfailuretestcas": 403, "test_fail": 403, "skipunlesshasattr": 403, "numberstest": [403, 491], "test_even": [403, 491], "defaulttestresult": 403, "asserti": [403, 405, 484], "assertisnot": [403, 484], "assertisnon": [403, 484, 486], "assertisnotnon": [403, 484, 486], "assertin": [403, 484], "assertnotin": [403, 484], "assertisinst": [403, 484], "assertnotisinst": [403, 484], "assertraisesregex": [403, 488, 490], "assertwarn": [403, 489, 490], "assertwarnsregex": [403, 489, 490], "addtypeequalityfunc": [403, 484], "assertmultilineequ": [403, 484], "assertlog": [403, 487, 491], "assertnolog": [403, 487], "the_except": 403, "error_cod": 403, "assertraisesregexp": [403, 484, 486, 488], "somewarn": 403, "legacy_funct": [403, 489], "frobnic": [403, 417], "assertgreat": [403, 484], "assertgreaterequ": [403, 484], "assertless": [403, 484], "assertlessequ": [403, 484], "assertregex": [403, 488, 489], "assertnotregex": [403, 488], "assertcountequ": [403, 489], "assertregexpmatch": [403, 484, 488, 489], "assertnotregexpmatch": [403, 484, 488], "assertsequenceequ": [403, 484, 486], "assertlistequ": [403, 484, 486], "asserttupleequ": [403, 484, 486], "assertsetequ": [403, 484, 486], "assertdictequ": [403, 484, 486], "seq_typ": 403, "assertxyi": 403, "maxdiff": [403, 489], "counttestcas": 403, "shortdescript": 403, "texttestresult": 403, "addcleanup": [403, 404, 405, 484, 495], "entercontext": [403, 488], "docleanup": [403, 484], "addclasscleanup": [403, 495], "enterclasscontext": [403, 488], "doclasscleanup": 403, "isolatedasynciotestcas": [403, 488, 495], "asyncsetup": [403, 495], "asyncteardown": [403, 495], "addasynccleanup": 403, "enterasynccontext": [403, 488], "_async_connect": 403, "asyncconnect": [403, 495], "test_respons": 403, "status_cod": [403, 495], "on_cleanup": 403, "testfunc": 403, "_removetestatindex": [403, 491], "defaulttestload": 403, "synthet": 403, "loadtestsfromtestcas": [403, 488], "testcaseclass": 403, "gettestcasenam": [403, 488], "unoffici": [403, 492], "use_load_test": [403, 492], "loadtestsfromnam": [403, 484], "sampletest": 403, "sampletestcas": 403, "test_on": [403, 405], "test_two": [403, 405], "test_thre": 403, "start_dir": 403, "top_level_dir": 403, "testmethodprefix": 403, "loadtestsfrom": 403, "sorttestmethodsus": 403, "suiteclass": [403, 484], "testnamepattern": 403, "starttest": 403, "stoptest": 403, "tb_local": 403, "wassuccess": 403, "starttestrun": [403, 484], "stoptestrun": [403, 484], "adderror": 403, "formatted_err": 403, "addfailur": 403, "addsuccess": 403, "addskip": 403, "addexpectedfailur": 403, "addunexpectedsuccess": 403, "addsubtest": 403, "_texttestresult": 403, "resultclass": 403, "wd": [403, 415, 482, 484, 491, 493], "_makeresult": 403, "defaulttest": [403, 491], "catchbreak": 403, "testprogram": [403, 488], "testcase1": 403, "testcase2": 403, "testcase3": 403, "test_class": 403, "this_dir": 403, "package_test": 403, "basetestsuit": 403, "_errorhold": 403, "_connect": [403, 434], "createexpensiveconnectionobject": 403, "createconnect": 403, "closeconnect": 403, "addmodulecleanup": [403, 495], "entermodulecontext": [403, 488], "domodulecleanup": 403, "installhandl": 403, "registerresult": 403, "removeresult": 403, "test_signal_handl": 403, "replai": 404, "productionclass": [404, 405], "assert_called_with": [404, 405], "classname2": [404, 405], "classname1": [404, 405], "mockclass1": [404, 405], "mockclass2": [404, 405], "mock_method": [404, 405], "assert_called_once_with": [404, 405], "newkei": [404, 405], "newvalu": [404, 405], "foobarbaz": 404, "wheeeeee": 404, "specc": [404, 405], "autospec": [404, 405], "mock_funct": 404, "fishi": 404, "noncallablemock": 404, "noncallablemagicmock": 404, "new_cal": 404, "spec_set": [404, 405], "assret": 404, "asert": 404, "aseert": 404, "assrt": 404, "configure_mock": [404, 405], "assert_cal": [404, 493], "assert_called_onc": [404, 493], "wow": 404, "assert_any_cal": 404, "assert_has_cal": [404, 405], "any_ord": [404, 405], "mock_cal": [404, 405], "assert_not_cal": [404, 492], "reset_mock": [404, 493], "mock_add_spec": 404, "attach_mock": [404, 405], "method_cal": [404, 405], "some_mock": 404, "_get_child_mock": [404, 405], "call_count": [404, 405], "call_arg": [404, 405], "w00t": 404, "call_args_list": [404, 405], "140161580456576": [404, 405], "propertymock": 404, "mock_foo": [404, 405], "mockiti": 404, "this_foo": 404, "asyncmock": [404, 405, 495], "async_func": 404, "asyncmockmixin": 404, "_mock_cal": 404, "exampleclass": 404, "sync_foo": 404, "async_foo": 404, "a_mock": 404, "assert_await": 404, "coroutine_mock": 404, "assert_awaited_onc": [404, 405], "assert_awaited_with": 404, "assert_awaited_once_with": 404, "assert_any_await": 404, "assert_has_await": 404, "await_args_list": 404, "assert_not_await": 404, "await_count": 404, "await_arg": 404, "bang": 404, "not_a_child": 404, "thing1": 404, "thing2": 404, "unpatch": [404, 437], "normal_argu": 404, "mock_class": 404, "mockclass": 404, "mock_th": 404, "mock_stdout": 404, "non_existing_attribut": 404, "honour": 404, "class_method": 404, "in_dict": 404, "testsampl": 404, "test_sampl": 404, "patched_foo": 404, "first_patch": 404, "second_patch": 404, "test_funct": 404, "mock_exit": 404, "new_mock": [404, 405], "mytest": [404, 405], "patcher1": 404, "patcher2": 404, "fiddlier": [404, 405], "bonu": [404, 478], "stopal": 404, "mock_ord": 404, "foo_on": 404, "foo_two": 404, "static_method": [404, 405], "mock1": 404, "mock2": 404, "foobl": [404, 405], "__getinitargs__": 404, "__getformat__": 404, "call_list": [404, 405], "kall": [404, 481], "abstracthttphandl": [404, 493], "_noncallablemock__get_return_valu": 404, "_noncallablemock__get_side_effect": 404, "_noncallablemock__return_value_doc": 404, "_noncallablemock__set_return_valu": 404, "_noncallablemock__set_side_effect": 404, "my_mock": 404, "irrespect": 404, "read_data": [404, 405, 461], "deplet": 404, "rewound": 404, "fiddli": 404, "bibbl": 404, "assret_called_once_with": 404, "dandi": 404, "assret_called_with": 404, "has_data": [404, 410, 491], "mock_request": 404, "thankfulli": 404, "somethingfortest": 404, "submock": 404, "attribute1": 404, "not_submock": 404, "sample_nam": 404, "new_attribut": 404, "attribute2": 404, "order_mock": 404, "order_mock_inst": 404, "mock_inst": 405, "some_method": [405, 434], "old_method": 405, "stronger": 405, "data_dict": 405, "file1": [405, 484], "file2": [405, 484], "open_side_effect": 405, "file3": 405, "file_handl": 405, "testabl": 405, "backendprovid": 405, "get_endpoint": 405, "create_cal": 405, "start_cal": 405, "mock_backend": 405, "mock_respons": 405, "mock_dat": 405, "mocksomeclass": 405, "not_a_test": 405, "whilst": 405, "nuisanc": 405, "grob": 405, "mock_frob": 405, "copy_call_arg": 405, "copyingmock": 405, "mock_bar": 405, "mock_spam": 405, "create_patch": 405, "my_dict": 405, "mymock": 405, "has_been_cal": 405, "adaptor": 405, "blip": 405, "expected_cal": 405, "fifti": [405, 441], "some_obj": 405, "match_foo": 405, "match_wrong": 405, "pyhamcrest": 405, "hamcrest": 405, "match_equ": 405, "contenttooshorterror": [408, 410], "urlretriev": [408, 410, 414], "gopher": 409, "hdl": [409, 441], "mailto": [409, 441], "prospero": 409, "rsync": 409, "rtsp": 409, "rtspu": 409, "sftp": 409, "shttp": 409, "snew": 409, "urlpars": [409, 414, 483, 484, 485, 489, 493], "urlstr": 409, "allow_frag": 409, "netloc": [409, 484, 489], "parseresult": [409, 484, 489], "1808": [409, 492], "7eguido": 409, "max_num_field": 409, "doseq": 409, "urlunpars": 409, "2396": [409, 484, 492, 494], "c0": 409, "urlunsplit": 409, "urljoin": [409, 492], "urldefrag": [409, 489], "defens": 409, "improperli": [409, 443, 477, 491], "splitresult": 409, "defragresult": [409, 489], "defragresultbyt": 409, "parseresultbyt": [409, 489], "splitresultbyt": 409, "unreserv": 409, "quote_from_byt": 409, "ni\u00f1o": 409, "20ni": 409, "b1o": 409, "quote_plu": [409, 489], "2fel": 409, "unquote_plu": 409, "unquote_to_byt": 409, "quote_via": [409, 492], "std66": 409, "2732": [409, 484, 489], "urn": [409, 413], "2368": 409, "1738": 409, "no_proxi": 410, "cadefault": 410, "addinfourl": 410, "fancyurlopen": 410, "_proxi": 410, "handler_ord": 410, "pathname2url": 410, "url2pathnam": 410, "spoof": 410, "firefox": [410, 418, 482], "gecko": 410, "20071127": 410, "camel": [410, 483, 489], "request_host": 410, "cern": 410, "ncsa": 410, "uiuc": 410, "is_authent": 410, "basicauth": 410, "passwd_mgr": 410, "update_authent": 410, "40x": 410, "unredirect": 410, "remove_head": [410, 491], "set_proxi": [410, 434, 491], "header_valu": 410, "get_host": [410, 491], "get_selector": [410, 491], "is_unverifi": [410, 491], "http_respons": 410, "http_error_404": 410, "_open": 410, "http_error_": 410, "_error": 410, "_request": 410, "_respons": 410, "default_open": 410, "unknown_open": 410, "add_par": 410, "adopt": [410, 447, 456, 478, 479, 480, 483, 496], "http_error_default": 410, "redirect_request": 410, "newurl": 410, "http_error_30": 410, "http_error_301": 410, "http_error_302": 410, "http_error_303": 410, "http_error_307": 410, "http_error_308": 410, "find_user_password": 410, "authuri": 410, "http_error_auth_req": 410, "authreq": 410, "http_error_401": 410, "http_error_407": 410, "http_open": 410, "https_open": 410, "file_open": 410, "data_open": 410, "2397": 410, "ftp_open": 410, "setmaxconn": 410, "https_respons": 410, "equiv": 410, "xhtm": 410, "ngot": 410, "auth_handl": 410, "pdq": 410, "mahler": 410, "8092": 410, "klem": 410, "kadidd": 410, "ehopp": 410, "proxy_handl": 410, "3128": 410, "proxy_auth_handl": 410, "addhead": 410, "musi": [410, 411], "requestb": 410, "xrbl82xr": 410, "reporthook": 410, "local_filenam": 410, "urlcleanup": 410, "open_unknown": 410, "30x": [410, 490], "maxtri": 410, "prompt_user_passwd": 410, "550": 410, "_urlopen": 410, "robotfilepars": [411, 493], "robotstxt": 411, "set_url": 411, "can_fetch": 411, "userag": 411, "spider": [411, 477], "crawl_delai": 411, "crawl": [411, 493], "request_r": 411, "requestr": 411, "site_map": 411, "sitemap": 411, "rp": 411, "rrate": 411, "lanc": [412, 441], "ellinghous": [412, 441], "jansen": [412, 441, 479, 480, 492], "in_fil": 412, "out_fil": [412, 428], "badli": [412, 491], "uuid1": [413, 482, 494], "uuid3": [413, 482], "uuid4": [413, 482], "uuid5": [413, 482], "is_saf": [413, 494], "safeuuid": 413, "bytes_l": 413, "time_low": 413, "time_mid": 413, "time_hi_vers": 413, "clock_seq_hi_vari": 413, "clock_seq_low": 413, "12345678": 413, "567812345678": 413, "12345678123456781234567812345678": 413, "x34": 413, "x56": [413, 477], "x78": 413, "0x12345678": 413, "0x1234": 413, "0x5678": 413, "0x12": 413, "0x34": 413, "0x567812345678": 413, "0x12345678123456781234567812345678": 413, "clock_seq": 413, "reserved_nc": 413, "rfc_4122": 413, "reserved_microsoft": 413, "reserved_futur": 413, "getnod": [413, 494], "administ": [413, 477, 483, 494], "namespace_dn": [413, 482], "namespace_url": 413, "namespace_oid": 413, "namespace_x500": 413, "nc": 413, "a8098c1a": [413, 482], "f86e": [413, 482], "11da": [413, 482], "bd1a": [413, 482], "00112444be1e": [413, 482], "6fa459ea": [413, 482], "ee8a": [413, 482], "3ca4": [413, 482], "894e": [413, 482], "db77e160355": [413, 482], "16fd2706": [413, 482], "8baf": [413, 482], "433b": [413, 482], "82eb": [413, 482], "8c7fada847da": [413, 482], "886313e1": [413, 482], "3b8a": [413, 482], "5372": [413, 482], "9b90": [413, 482], "0c9aee199e5d": [413, 482], "00010203": 413, "0405": 413, "0607": 413, "0809": 413, "0a0b0c0d0e0f": 413, "x05": 413, "x0e": 413, "x0f": 413, "movabl": 414, "copyabl": 414, "python35": [414, 468], "myenv": 414, "dep": 414, "env_dir": 414, "eagerli": [414, 494], "powershel": [414, 476, 495], "executionpolici": 414, "remotesign": 414, "currentus": 414, "zsh": 414, "csh": [414, 468, 491], "tcsh": [414, 481], "virtual_env": [414, 492], "system_site_packag": 414, "with_pip": [414, 491], "upgrade_dep": 414, "ensure_directori": 414, "create_configur": 414, "setup_python": 414, "setup_script": 414, "post_setup": 414, "holder": [414, 441, 456, 484], "__venv_dir__": 414, "env_nam": 414, "__venv_name__": [414, 496], "__venv_prompt__": [414, 496], "inc_path": 414, "lib_path": 414, "bin_path": 414, "bin_nam": 414, "__venv_bin_name__": 414, "env_ex": 414, "__venv_python__": 414, "env_exec_cmd": 414, "upgrade_depend": 414, "redirector": [414, 494], "extendedenvbuild": 414, "easy_instal": 414, "nodist": 414, "nopip": 414, "install_setuptool": 414, "install_pip": 414, "binpath": 414, "distpath": 414, "ez_setup": 414, "system_sit": 414, "use_symlink": 414, "warrant": [415, 485], "filterwarn": [415, 470, 478, 480], "resetwarn": [415, 489], "user_n": 415, "fxn": 415, "__warningregistry__": 415, "wave_format_pcm": 416, "wave_format_extens": 416, "subformat": 416, "__callback__": [417, 491], "callableproxytyp": 417, "getweakrefcount": 417, "getweakref": 417, "keyref": [417, 482], "valueref": [417, 482], "0x7fc859830220": 417, "referencetyp": 417, "do_something_us": 417, "extendedref": 417, "__counter": 417, "_id2obj_dict": 417, "id2obj": 417, "kenni": [417, 491], "newobj": 417, "_final": 417, "unloading_modul": 417, "autorais": [418, 482], "open_new": [418, 482], "open_new_tab": [418, 482], "galeon": 418, "epiphani": 418, "skipston": 418, "backgroundbrows": 418, "kfmclient": 418, "konqueror": [418, 482], "kfm": 418, "mosaic": 418, "genericbrows": 418, "elink": [418, 482], "w3m": 418, "windowsdefault": 418, "macosxosascript": 418, "safari": 418, "chrome": [418, 490], "chromium": [418, 490], "kde": 418, "kdedir": 418, "closekei": 420, "hkei": 420, "computernam": 420, "createkeyex": [420, 484], "key_writ": 420, "subkei": [420, 476], "deletekeyex": [420, 484], "key_wow64_64kei": 420, "wow64": 420, "setvalueex": 420, "reg_expand_sz": 420, "windir": 420, "flushkei": 420, "flusher": 420, "hkey_us": 420, "se_restore_privileg": 420, "regloadkei": 420, "key_read": 420, "openkeyex": 420, "1601": 420, "queryvalueex": 420, "sebackupprivileg": 420, "security_attribut": 420, "reg_sz": 420, "key_set_valu": 420, "hkey_classes_root": 420, "subordin": [420, 484], "hkey_performance_data": 420, "hkey_current_config": 420, "hkey_dyn_data": 420, "key_all_access": 420, "standard_rights_requir": 420, "key_query_valu": 420, "key_create_sub_kei": 420, "key_enumerate_sub_kei": 420, "key_notifi": 420, "key_create_link": 420, "standard_rights_writ": 420, "standard_rights_read": 420, "key_execut": 420, "key_wow64_32kei": 420, "reg_binari": 420, "reg_dword": 420, "reg_dword_little_endian": 420, "reg_dword_big_endian": 420, "reg_link": 420, "reg_multi_sz": 420, "reg_non": 420, "reg_qword": [420, 493], "reg_qword_little_endian": 420, "reg_resource_list": 420, "reg_full_resource_descriptor": 420, "reg_resource_requirements_list": 420, "speaker": 421, "hertz": 421, "playsound": [421, 493], "messagebeep": [421, 493], "mb_ok": 421, "mb_iconasterisk": 421, "mb_iconexclam": 421, "mb_iconhand": 421, "mb_iconquest": 421, "snd_filenam": 421, "snd_alia": 421, "snd_nodefault": 421, "systemasterisk": 421, "systemexclam": 421, "systemhand": 421, "systemquest": 421, "snd_loop": 421, "snd_async": 421, "snd_memori": 421, "snd_purg": 421, "snd_nostop": 421, "snd_nowait": 421, "systemdefault": 421, "wsgienviron": 422, "guess_schem": 422, "url_schem": 422, "fastcgi": 422, "request_uri": 422, "include_queri": 422, "application_uri": 422, "path_info": 422, "query_str": [422, 488], "shift_path_info": 422, "setup_testing_default": 422, "http_host": 422, "make_serv": [422, 482], "simple_app": 422, "start_respons": [422, 489], "ret": 422, "is_hop_by_hop": 422, "hop": 422, "filewrapp": [422, 488, 495], "filelik": 422, "wsgiserv": 422, "wsgirequesthandl": 422, "demo_app": 422, "set_app": 422, "get_app": 422, "get_environ": 422, "base_environ": 422, "get_stderr": 422, "middlewar": 422, "lint": 422, "nonconform": 422, "validator_app": 422, "cgihandl": 422, "basecgihandl": 422, "run_onc": 422, "iiscgihandl": 422, "allowpathinfo": 422, "metabas": 422, "allowpathinfoforscriptmap": 422, "path_transl": 422, "vhost": 422, "iis7": 422, "simplehandl": [422, 477], "scgi": 422, "get_stdin": 422, "add_cgi_var": 422, "_write": 422, "_flush": 422, "inputstream": 422, "errorstream": 422, "wsgi_multithread": 422, "wsgi_multiprocess": 422, "wsgi_run_onc": 422, "os_environ": 422, "server_softwar": 422, "origin_serv": 422, "get_schem": 422, "setup_environ": 422, "wsgi_file_wrapp": 422, "log_except": 422, "retarget": 422, "error_output": 422, "error_statu": 422, "error_head": 422, "error_bodi": 422, "spit": 422, "http_version": 422, "read_environ": [422, 489], "startrespons": 422, "wsgiapplic": 422, "hello_world_app": 422, "mime_typ": 422, "1014": 423, "microsystem": [423, 441], "1832": 423, "pack_typ": 423, "pack_uint": 423, "pack_int": 423, "pack_enum": 423, "pack_bool": 423, "pack_uhyp": 423, "pack_hyp": 423, "pack_float": 423, "pack_doubl": 423, "pack_fstr": 423, "pack_fopaqu": 423, "pack_str": 423, "pack_opaqu": 423, "pack_byt": 423, "pack_list": 423, "pack_item": 423, "pack_farrai": 423, "pack_arrai": 423, "get_posit": 423, "set_posit": 423, "unpack_typ": 423, "unpack_float": 423, "unpack_doubl": 423, "unpack_fstr": 423, "unpack_fopaqu": 423, "unpack_str": 423, "unpack_opaqu": 423, "unpack_byt": 423, "unpack_list": 423, "unpack_item": 423, "unpack_farrai": 423, "unpack_arrai": 423, "conversionerror": 423, "billion": 424, "laugh": [424, 490], "blowup": 424, "bomb": [424, 437], "relianc": 424, "expat_vers": 424, "parseerror": [424, 428, 484, 489], "unexpand": 424, "countermeasur": 424, "52425": 424, "luck": 425, "getdomimplement": [425, 426], "omg": [425, 426], "registerdomimplement": 425, "python_dom": 425, "hasfeatur": 425, "empty_namespac": 425, "namespaceuri": [425, 431], "xml_namespac": 425, "xmlns_namespac": 425, "xhtml_namespac": 425, "nodetyp": [425, 426], "createdocu": [425, 426], "qualifiednam": 425, "createdocumenttyp": 425, "element_nod": 425, "attribute_nod": 425, "text_nod": [425, 426], "cdata_section_nod": 425, "entity_nod": 425, "processing_instruction_nod": [425, 426], "comment_nod": 425, "document_nod": 425, "document_type_nod": 425, "notation_nod": 425, "parentnod": 425, "previouss": 425, "nextsibl": 425, "childnod": [425, 426, 477], "firstchild": 425, "lastchild": 425, "localnam": [425, 430, 431], "nodevalu": 425, "hasattribut": 425, "haschildnod": 425, "issamenod": 425, "uncontroversi": 425, "appendchild": [425, 426, 477], "newchild": 425, "insertbefor": [425, 477], "refchild": 425, "removechild": [425, 477], "oldchild": 425, "replacechild": 425, "clonenod": 425, "getelementsbytagnam": [425, 426, 477], "getelementsbytagnamen": 425, "internalsubset": 425, "documentel": [425, 426, 477], "createel": 425, "createelementn": 425, "createtextnod": [425, 426], "createcom": 425, "createprocessinginstruct": 425, "createattribut": 425, "setattributenod": 425, "createattributen": 425, "hasattributen": 425, "getattribut": [425, 427, 443], "getattributenod": 425, "getattributen": 425, "getattributenoden": 425, "removeattribut": 425, "notfounderr": 425, "removeattributenod": 425, "oldattr": 425, "removeattributen": 425, "setattribut": 425, "newattr": [425, 479], "inuseattributeerr": 425, "setattributenoden": 425, "setattributen": 425, "domexcept": [425, 426], "domstringsizeerr": 425, "hierarchyrequesterr": 425, "indexsizeerr": 425, "invalidaccesserr": 425, "invalidcharactererr": 425, "invalidmodificationerr": 425, "invalidstateerr": 425, "namespaceerr": 425, "removenameditem": 425, "notsupportederr": 425, "nodataallowederr": 425, "nomodificationallowederr": 425, "syntaxerr": 425, "wrongdocumenterr": 425, "domstring_size_err": 425, "hierarchy_request_err": 425, "index_size_err": 425, "inuse_attribute_err": 425, "invalid_access_err": 425, "invalid_character_err": 425, "invalid_modification_err": 425, "invalid_state_err": 425, "namespace_err": 425, "not_found_err": 425, "not_supported_err": 425, "no_data_allowed_err": 425, "no_modification_allowed_err": 425, "syntax_err": 425, "wrong_document_err": 425, "domstr": [425, 426], "somevalu": 425, "anothervalu": 425, "_get_somevalu": 425, "_get_anothervalu": 425, "_set_anothervalu": 425, "corba": 425, "profici": 426, "dom1": 426, "datasourc": 426, "dom2": 426, "dom3": 426, "myxml": 426, "filename_or_fil": 426, "grasp": 426, "impl": 426, "newdoc": 426, "some_tag": 426, "top_el": 426, "writexml": [426, 495], "addind": 426, "newl": 426, "subnod": 426, "prologu": 426, "toxml": [426, 427, 477, 480, 495], "toprettyxml": [426, 480, 495], "slideshow": 426, "handleslideshow": 426, "handleslideshowtitl": 426, "handletoc": 426, "handleslid": 426, "handleslidetitl": 426, "handlepoint": 426, "_get_foo": 426, "_set_foo": 426, "domtimestamp": 426, "entityrefer": 426, "make_pars": [427, 429, 431, 477], "feature_external_g": [427, 429, 430], "setfeatur": [427, 429, 431], "sales_item": 427, "expandnod": 427, "start_docu": 427, "end_docu": 427, "processing_instruct": 427, "ignorable_whitespac": 427, "documentfactori": 427, "sax2dom": 427, "stream_or_str": 427, "default_bufs": 427, "getev": 427, "celementtre": [428, 482, 489, 490], "fictiv": 428, "country_data": 428, "liechtenstein": 428, "gdppc": 428, "141100": 428, "austria": 428, "switzerland": 428, "singapor": 428, "59900": 428, "malaysia": 428, "panama": 428, "13600": 428, "costa": 428, "rica": 428, "colombia": 428, "getroot": [428, 482], "country_data_as_str": 428, "attrib": [428, 482], "read_ev": 428, "mytag": 428, "sometext": 428, "0x7fa66db2be58": 428, "iterpars": [428, 491], "new_rank": 428, "subel": [428, 489], "sometag": 428, "fiction": 428, "actor": [428, 456, 495], "lancelot": [428, 457], "archi": 428, "leach": 428, "sir": [428, 456, 486, 495], "gunther": 428, "clement": [428, 493], "xml_text": 428, "real_person": 428, "countrydata": 428, "dublin": 428, "purl": 428, "grandchildren": 428, "canonic": [428, 495], "xml_data": 428, "from_fil": [428, 437, 440, 493], "normalis": 428, "c14n_output": 428, "inputfil": 428, "with_com": 428, "strip_text": 428, "rewrite_prefix": 428, "qname_aware_tag": 428, "qname_aware_attr": 428, "exclude_attr": 428, "exclude_tag": 428, "fromstringlist": [428, 489], "isel": 428, "register_namespac": [428, 484, 489], "xml_declar": [428, 484], "default_namespac": [428, 484], "short_empty_el": [428, 432, 491], "tostringlist": [428, 489, 491], "xmlid": 428, "elementinclud": [428, 482], "xi": 428, "xpointer": 428, "para": 428, "default_load": 428, "base_url": 428, "max_depth": 428, "itertext": [428, 484, 489], "unprefix": 428, "findtext": 428, "iterfind": [428, 489], "makeel": 428, "convei": 428, "perceptu": 428, "reorder_attribut": 428, "_setroot": 428, "0xb77e6fac": 428, "0xb77ec26c": 428, "0xb77ec2ac": 428, "0xb77ec1cc": 428, "text_or_uri": 428, "element_factori": 428, "comment_factori": 428, "pi_factori": 428, "insert_com": 428, "insert_pi": 428, "pubid": 428, "start_n": [428, 495], "end_n": [428, 495], "c14nwritertarget": 428, "attrs_dict": 428, "maxdepth": 428, "examplexml": 428, "parser_list": 429, "create_pars": [429, 431], "filename_or_stream": 429, "saxparseexcept": [429, 430], "saxnotrecognizedexcept": [429, 431], "saxnotsupportedexcept": [429, 431], "focal": 429, "getexcept": 429, "feature_namespac": 430, "feature_namespace_prefix": 430, "feature_string_intern": 430, "feature_valid": 430, "feature_external_p": 430, "all_featur": 430, "property_lexical_handl": 430, "property_declaration_handl": 430, "sax2lib": 430, "declhandl": 430, "property_dom_nod": 430, "property_xml_str": 430, "all_properti": 430, "setdocumentloc": 430, "documenthandl": [430, 431], "startdocu": 430, "enddocu": 430, "unrecover": 430, "startprefixmap": 430, "endprefixmap": 430, "startel": [430, 431, 477], "endel": [430, 477], "startelementn": [430, 431], "endelementn": 430, "ignorablewhitespac": 430, "skippedent": 430, "notationdecl": 430, "unparsedentitydecl": 430, "resolveent": [430, 431], "fatalerror": 430, "startdtd": [430, 481], "public_id": 430, "system_id": [430, 431], "enddtd": 430, "startcdata": 430, "endcdata": 430, "attributesimpl": 431, "attributesnsimpl": 431, "getcontenthandl": 431, "setcontenthandl": [431, 477], "getdtdhandl": 431, "setdtdhandl": 431, "getentityresolv": 431, "setentityresolv": 431, "geterrorhandl": 431, "seterrorhandl": 431, "getfeatur": 431, "propertynam": 431, "formed": 431, "getcolumnnumb": 431, "getlinenumb": 431, "getpublicid": 431, "getsystemid": 431, "setpublicid": 431, "setsystemid": 431, "setencod": 431, "setbytestream": 431, "bytefil": 431, "getbytestream": 431, "setcharacterstream": 431, "charfil": 431, "getcharacterstream": 431, "getlength": 431, "gettyp": [431, 482], "getvaluebyqnam": 431, "getnamebyqnam": 431, "getqnamebynam": 431, "getqnam": 431, "amp": [432, 489], "quoteattr": 432, "xmlgener": 432, "xmlfilterbas": 432, "prepare_input_sourc": 432, "use_datetim": [434, 482], "use_builtin_typ": [434, 435, 496], "safetransport": 434, "ontosi": 434, "i4": 434, "i8": [434, 483], "biginteg": 434, "2147483648": 434, "2147483647": [434, 450, 482], "nil": [434, 480], "bigdecim": 434, "listmethod": [434, 435], "methodsignatur": [434, 435], "methodhelp": [434, 435], "register_funct": [434, 435, 494], "python_logo": 434, "fetched_python_logo": 434, "faultcod": 434, "faultstr": 434, "errmsg": 434, "boxcar": 434, "register_multicall_funct": [434, 435], "methodrespons": 434, "betti": 434, "userland": 434, "getstatenam": 434, "proxiedtransport": 434, "proxy_head": 434, "requesthandl": 435, "simplexmlrpcrequesthandl": [435, 481, 484], "logrequest": 435, "register_inst": 435, "allow_dotted_nam": 435, "_dispatch": 435, "intrud": 435, "register_introspection_funct": 435, "rpc_path": [435, 482], "rpc2": [435, 482], "adder_funct": 435, "exampleservic": 435, "getdata": 435, "currenttim": 435, "getcurrenttim": 435, "nkeyboard": 435, "request_text": 435, "docxmlrpcrequesthandl": 435, "set_server_titl": 435, "server_titl": 435, "set_server_nam": 435, "set_server_document": 435, "server_document": 435, "pyz": [436, 492], "mainfn": 436, "deflat": [436, 439], "create_arch": [436, 494], "get_interpret": 436, "old_arch": 436, "new_arch": 436, "pyzw": 436, "win32_lean_and_mean": 436, "wwinmain": 436, "hinstanc": 436, "hprevinst": 436, "lpwstr": 436, "lpcmdline": 436, "wmain": 436, "myargv": 436, "_alloca": 436, "__argc": 436, "__wargv": 436, "zastub": 436, "pkzip": [437, 438, 477], "zip64": [437, 482], "badzipfil": 437, "largezipfil": 437, "getinfo": 437, "infolist": 437, "is_zipfil": [437, 484], "zip_stor": 437, "zip_defl": [437, 467], "zip_bzip2": 437, "zip_lzma": 437, "phil": [437, 438, 483], "katz": [437, 438], "allowzip64": [437, 491], "strict_timestamp": 437, "metadata_encod": 437, "2107": 437, "myzip": 437, "namelist": 437, "force_zip64": 437, "zipextfil": [437, 489], "file_s": [437, 479], "appreci": [437, 441, 455], "printdir": 437, "setpassword": 437, "testzip": 437, "compress_typ": [437, 484], "writestr": [437, 484], "zinfo_or_arcnam": 437, "zinfo_or_directori": 437, "grandchild": 437, "zipp": 437, "writepi": [437, 491], "filterfunc": [437, 491], "zf": 437, "myprog": 437, "notest": 437, "testal": [437, 483], "bogu": [437, 484], "create_system": 437, "create_vers": 437, "extract_vers": 437, "flag_bit": 437, "internal_attr": 437, "external_attr": 437, "header_offset": 437, "compress_s": 437, "ahlstrom": [438, 477, 480], "zipimporterror": 438, "archivepath": 438, "8467": [438, 480], "jwzthread": [438, 480], "adler": [439, 441], "max_wbit": 439, "z_best_spe": 439, "z_best_compress": 439, "z_no_compress": 439, "z_default_compress": 439, "compressobj": 439, "memlevel": 439, "def_mem_level": 439, "z_default_strategi": 439, "zdict": 439, "z_filter": 439, "z_huffman_onli": 439, "z_rle": 439, "z_fix": 439, "def_buf_s": 439, "decompressobj": 439, "z_no_flush": 439, "z_partial_flush": 439, "z_sync_flush": 439, "z_full_flush": 439, "z_block": 439, "z_finish": 439, "unconsumed_tail": 439, "unconsum": 439, "zlib_vers": 439, "zlib_runtime_vers": [439, 490], "los_angel": [440, 496], "dt_add": 440, "dt_utc": 440, "zoneinfonotfounderror": 440, "tzpath": [440, 471], "reset_tzpath": 440, "pythontzpath": 440, "invalidtzpathwarn": 440, "fobj": [440, 453], "no_cach": 440, "only_kei": 440, "new_york": 440, "asia": 440, "tokyo": 440, "cldr": 440, "kwajalein": 440, "01t03": 440, "europe_berlin_pkl": 440, "berlin": 440, "europe_berlin_pkl_nc": 440, "available_timezon": 440, "posixrul": 440, "cautionari": [440, 481], "1990": [441, 483], "netherland": 441, "reston": 441, "virginia": 441, "pythonlab": [441, 477, 479], "intellectu": 441, "sponsor": 441, "opensourc": 441, "thru": 441, "license": 441, "herebi": 441, "nonexclus": 441, "royalti": 441, "herein": 441, "OF": [441, 446], "merchant": 441, "THAT": 441, "infring": 441, "consequenti": 441, "partnership": 441, "ventur": 441, "saratoga": 441, "santa": 441, "clara": 441, "95051": 441, "1895": 441, "preston": [441, 494], "20191": 441, "1013": 441, "feder": 441, "commonwealth": 441, "tortiou": 441, "_random": 441, "sci": 441, "hiroshima": 441, "mat": [441, 484], "mt": 441, "mt2002": 441, "emt19937ar": 441, "mt19937": 441, "takuji": 441, "makoto": 441, "init_genrand": 441, "init_by_arrai": 441, "init_kei": 441, "key_length": 441, "redistribut": 441, "exemplari": 441, "procur": 441, "tort": 441, "SUCH": 441, "emt": 441, "1996": 441, "rush": [441, 477], "timothi": 441, "mallei": [441, 480], "timo": 441, "alum": 441, "industri": 441, "whielacronx": 441, "mojam": 441, "montanaro": [441, 477, 480, 481, 482, 483], "bioreason": 441, "automatrix": 441, "cathedr": 441, "republ": 441, "laboratori": 441, "sublicens": 441, "furnish": 441, "noninfring": 441, "doug": 441, "marek": 441, "majkowski": 441, "dan": [441, 481, 482, 489, 490, 491, 492, 496], "popcount": 441, "majek": 441, "csiphash": 441, "supercop": 441, "crypto_auth": 441, "djb": 441, "little2": 441, "131002": 441, "siphash": [441, 491], "gai": [441, 484, 486], "20220517033456": 441, "netlib": 441, "lucent": 441, "BEING": 441, "ITS": 441, "reproduct": 441, "licensor": 441, "authorship": 441, "editori": [441, 477], "verbal": 441, "conspicu": 441, "perpetu": [441, 491], "irrevoc": 441, "patent": 441, "litig": 441, "counterclaim": 441, "lawsuit": 441, "alleg": 441, "contributori": 441, "addendum": 441, "constru": 441, "grossli": 441, "goodwil": 441, "stoppag": 441, "malfunct": 441, "indemn": 441, "oblig": [441, 477], "indemnifi": 441, "defend": 441, "clark": [441, 490], "loup": 441, "gailli": 441, "misrepres": 441, "plainli": 441, "jloup": 441, "madler": 441, "alumni": 441, "caltech": 441, "owen": 441, "_decim": [441, 471, 490], "stefan": [441, 484, 488, 490, 491, 492, 493, 494, 495, 496], "krah": [441, 484, 490, 493], "xmltestdata": 441, "c14n2": 441, "ercim": 441, "keio": 441, "beihang": 441, "g771": 441, "sox": 441, "revenu": 441, "2550": 441, "garcia": [441, 488], "94043": 441, "uvloop": [441, 492, 493], "magicstack": 441, "incarn": 442, "if_stmt": [442, 446], "while_stmt": [442, 446], "for_stmt": [442, 446], "try_stmt": [442, 446], "with_stmt": [442, 446], "match_stmt": [442, 446], "funcdef": 442, "async_with_stmt": 442, "async_for_stmt": 442, "async_funcdef": 442, "stmt_list": [442, 452], "compound_stmt": [442, 446, 452], "simple_stmt": [442, 446], "assignment_express": [442, 445, 446], "target_list": [442, 445, 451], "starred_list": [442, 445], "try1_stmt": 442, "try2_stmt": 442, "try3_stmt": 442, "with_stmt_cont": 442, "with_item": [442, 446], "hit_except": 442, "subject_expr": [442, 446], "case_block": [442, 446], "star_named_express": [442, 446], "named_express": [442, 446], "636": [442, 456, 487], "ebnf": [442, 446], "open_sequence_pattern": [442, 446], "as_pattern": [442, 446], "or_pattern": [442, 446], "literal_pattern": [442, 446], "capture_pattern": [442, 446], "wildcard_pattern": [442, 446], "value_pattern": [442, 446], "sequence_pattern": [442, 446], "mapping_pattern": [442, 446], "class_pattern": [442, 446], "closed_pattern": [442, 446], "signed_numb": [442, 446], "name_or_attr": [442, 446], "name1": [442, 482], "name2": [442, 482], "maybe_sequence_pattern": [442, 446], "maybe_star_pattern": [442, 446], "star_pattern": [442, 446], "p3": 442, "items_pattern": [442, 446], "key_value_pattern": [442, 446], "double_star_pattern": [442, 446], "pattern_argu": 442, "positional_pattern": [442, 446], "keyword_pattern": [442, 446], "parameter_list": [442, 445], "defparamet": 442, "parameter_list_no_posonli": 442, "parameter_list_stararg": 442, "614": [442, 496], "whats_on_the_telli": 442, "570": [442, 495], "3107": [442, 456, 485, 492, 494], "param1": 442, "param2": 442, "do_stuff": 442, "some_coroutin": 442, "suite2": 442, "aenter": 442, "aexit": 442, "neumann": 443, "illus": [443, 459, 489], "dwarf": 443, "affix": 443, "cell_cont": 443, "codeobject": [443, 488], "0x2000": 443, "0x10": 443, "0x1000": 443, "co_posit": [443, 488], "precari": 443, "parentclass": 443, "ocert": [443, 470], "asymmetri": 443, "verbosemodul": 443, "__objclass__": 443, "unlist": 443, "philosoph": 443, "australianphilosoph": 443, "bruce": 443, "mysubclass": 443, "__classcell__": [443, 493, 495], "3135": [443, 484, 485], "boundless": 443, "class_of_obj": 443, "breakfast": 443, "__rtruediv__": 443, "__rfloordiv__": [443, 487], "a_tupl": 443, "unbind": 444, "repair": [444, 476], "bnf": [445, 449, 478], "othernam": [445, 477], "enclosur": 445, "parenth_form": 445, "list_displai": 445, "dict_displai": 445, "set_displai": 445, "generator_express": 445, "yield_atom": 445, "__spam": [445, 455], "_ham__spam": 445, "stringliter": 445, "bytesliter": 445, "imagnumb": 445, "starred_express": [445, 446, 451], "unparenthes": [445, 487, 496], "comp_for": 445, "or_test": 445, "comp_it": 445, "comp_if": 445, "dict_item_list": 445, "dict_comprehens": 445, "dict_item": 445, "or_expr": [445, 450], "prevail": 445, "yield_express": [445, 450, 451], "expression_list": [445, 451, 452], "yield_from": [445, 488], "subiter": [445, 490], "attributeref": [445, 451], "slice_list": 445, "slice_item": 445, "proper_slic": 445, "positional_argu": 445, "starred_and_keyword": 445, "keywords_argu": 445, "positional_item": 445, "keyword_item": 445, "x1": [445, 456, 487], "x3": 445, "x4": 445, "ym": 445, "await_expr": 445, "u_expr": 445, "m_expr": 445, "a_expr": 445, "shift_expr": [445, 446], "and_expr": 445, "xor_expr": 445, "comp_oper": 445, "op1": 445, "op2": 445, "opn": 445, "reflex": 445, "and_test": 445, "not_test": 445, "conditional_express": [445, 450], "lambda_expr": 445, "starred_item": 445, "expr4": 445, "expr5": 445, "roundoff": 445, "0041": 445, "precompos": 445, "u00c7": 445, "u0043": 445, "u0327": 445, "_pypegen_pars": 446, "reserved_keyword": 446, "n_keyword_list": 446, "start_rul": 446, "file_rul": 446, "interactive_rul": 446, "eval_rul": 446, "py_func_type_input": 446, "func_type_rul": 446, "py_fstring_input": 446, "fstring_rul": 446, "grammat": 446, "invalid_": 446, "rule_nam": 446, "return_typ": 446, "e1": [446, 489], "e2": 446, "first_alt": 446, "second_alt": 446, "mod_ti": [446, 487], "_pypegen_make_modul": 446, "statement_newlin": 446, "_pyast_interact": 446, "_pyast_express": 446, "type_express": 446, "_pyast_functiontyp": 446, "fstring": 446, "expr_ti": 446, "star_express": 446, "asdl_stmt_seq": 446, "_pypegen_seq_flatten": 446, "_pypegen_singleton_seq": 446, "stmt_ty": 446, "_pyast_pass": 446, "_pypegen_interactive_exit": 446, "_pyast_expr": 446, "return_stmt": [446, 451], "import_stmt": [446, 451], "raise_stmt": [446, 451], "del_stmt": [446, 451], "yield_stmt": [446, 451], "assert_stmt": [446, 451], "_pyast_break": 446, "_pyast_continu": 446, "global_stmt": [446, 451], "nonlocal_stmt": [446, 451], "function_def": 446, "class_def": 446, "annotated_rh": 446, "yield_expr": 446, "check_vers": 446, "_pyast_annassign": 446, "_pypegen_set_expr_context": 446, "single_target": 446, "single_subscript_attribute_target": 446, "asdl_expr_seq": 446, "star_target": 446, "tc": 446, "_pyast_assign": 446, "new_type_com": 446, "_pyast_augassign": 446, "invalid_assign": 446, "augoper": 446, "_pypegen_augoper": 446, "_pyast_return": 446, "_pyast_rais": 446, "_pyast_glob": 446, "asdl_identifier_seq": 446, "_pypegen_map_names_to_id": 446, "_pyast_nonloc": 446, "del_target": 446, "_pyast_delet": 446, "invalid_del_stmt": 446, "_pyast_assert": 446, "dotted_as_nam": 446, "_pyast_import": 446, "dotted_nam": 446, "import_from_target": 446, "_pyast_importfrom": 446, "_pypegen_seq_count_dot": 446, "asdl_alias_seq": 446, "import_from_as_nam": 446, "alias_ti": 446, "_pypegen_alias_for_star": 446, "invalid_import_from_target": 446, "_pyast_alia": 446, "_pypegen_join_names_with_dot": 446, "invalid_block": 446, "class_def_raw": 446, "_pypegen_class_def_decor": 446, "invalid_class_def_raw": 446, "_pyast_classdef": 446, "function_def_raw": 446, "_pypegen_function_def_decor": 446, "invalid_def_raw": 446, "func_type_com": 446, "_pyast_functiondef": 446, "arguments_ti": 446, "_pypegen_empty_argu": 446, "_pyast_asyncfunctiondef": 446, "invalid_paramet": 446, "slash_no_default": 446, "asdl_arg_seq": 446, "param_no_default": 446, "param_with_default": 446, "star_etc": 446, "_pypegen_make_argu": 446, "slash_with_default": 446, "slashwithdefault": 446, "_pypegen_slash_with_default": 446, "staretc": 446, "invalid_star_etc": 446, "param_maybe_default": 446, "_pypegen_star_etc": 446, "param_no_default_star_annot": 446, "arg_ti": 446, "invalid_kwd": 446, "_pypegen_add_type_comment_to_arg": 446, "param_star_annot": 446, "namedefaultpair": 446, "_pypegen_name_default_pair": 446, "_pyast_arg": 446, "star_annot": 446, "invalid_default": 446, "invalid_if_stmt": 446, "elif_stmt": 446, "_pyast_if": 446, "else_block": 446, "invalid_elif_stmt": 446, "invalid_else_stmt": 446, "invalid_while_stmt": 446, "_pyast_whil": 446, "invalid_for_stmt": 446, "_pyast_for": 446, "_pyast_asyncfor": 446, "invalid_for_target": 446, "invalid_with_stmt_ind": 446, "asdl_withitem_seq": 446, "_pyast_with": 446, "_pyast_asyncwith": 446, "invalid_with_stmt": 446, "withitem_ti": 446, "_pyast_withitem": 446, "invalid_with_item": 446, "invalid_try_stmt": 446, "finally_block": 446, "_pyast_tri": 446, "asdl_excepthandler_seq": 446, "except_block": 446, "except_star_block": 446, "_pyast_trystar": 446, "excepthandler_ti": 446, "invalid_except_stmt_ind": 446, "_pyast_excepthandl": 446, "invalid_except_stmt": 446, "invalid_except_star_stmt_ind": 446, "invalid_finally_stmt": 446, "asdl_match_case_seq": 446, "_pyast_match": 446, "invalid_match_stmt": 446, "_pyast_tupl": 446, "_pypegen_seq_insert_in_front": 446, "match_case_ti": 446, "invalid_case_block": 446, "_pyast_match_cas": 446, "pattern_ti": 446, "asdl_pattern_seq": 446, "_pyast_matchsequ": 446, "pattern_capture_target": 446, "_pyast_matcha": 446, "invalid_as_pattern": 446, "asdl_seq_len": 446, "asdl_seq_get": 446, "_pyast_matchor": 446, "_pyast_matchvalu": 446, "complex_numb": 446, "_pyast_matchsingleton": 446, "literal_expr": 446, "_pyast_const": 446, "signed_real_numb": 446, "imaginary_numb": 446, "_pyast_binop": 446, "_pyast_unaryop": 446, "real_numb": 446, "_pypegen_ensure_r": 446, "_pypegen_ensure_imaginari": 446, "_pyast_attribut": 446, "asdl_seq": 446, "_pyast_matchstar": 446, "_pyast_matchmap": 446, "_pypegen_get_pattern_kei": 446, "_pypegen_get_pattern": 446, "keypatternpair": 446, "_pypegen_key_pattern_pair": 446, "_pyast_matchclass": 446, "invalid_class_pattern": 446, "invalid_express": 446, "invalid_legacy_express": 446, "_pyast_ifexp": 446, "lambdef": 446, "_pyast_yieldfrom": 446, "_pyast_yield": 446, "bitwise_or": 446, "_pyast_star": 446, "_pyast_namedexpr": 446, "invalid_named_express": 446, "_pyast_boolop": 446, "compare_op_bitwise_or_pair": 446, "_pyast_compar": 446, "asdl_int_seq": 446, "_pypegen_get_cmpop": 446, "_pypegen_get_expr": 446, "cmpopexprpair": 446, "eq_bitwise_or": 446, "noteq_bitwise_or": 446, "lte_bitwise_or": 446, "lt_bitwise_or": 446, "gte_bitwise_or": 446, "gt_bitwise_or": 446, "notin_bitwise_or": 446, "in_bitwise_or": 446, "isnot_bitwise_or": 446, "is_bitwise_or": 446, "_pypegen_cmpop_expr_pair": 446, "tok": 446, "_pypegen_check_barry_as_flufl": 446, "bitwise_xor": 446, "bitwise_and": 446, "await_primari": 446, "_pyast_await": 446, "_pyast_cal": 446, "_pyast_subscript": 446, "_pyast_slic": 446, "invalid_group": 446, "lambda_param": 446, "_pyast_lambda": 446, "invalid_lambda_paramet": 446, "lambda_paramet": 446, "lambda_slash_no_default": 446, "lambda_param_no_default": 446, "lambda_param_with_default": 446, "lambda_star_etc": 446, "lambda_slash_with_default": 446, "invalid_lambda_star_etc": 446, "lambda_param_maybe_default": 446, "lambda_kwd": 446, "invalid_lambda_kwd": 446, "_pypegen_concatenate_str": 446, "_pyast_list": 446, "_pyast_set": 446, "double_starred_kvpair": 446, "_pyast_dict": 446, "_pypegen_get_kei": 446, "_pypegen_get_valu": 446, "invalid_double_starred_kvpair": 446, "keyvaluepair": 446, "_pypegen_key_value_pair": 446, "kvpair": 446, "for_if_claus": 446, "asdl_comprehension_seq": 446, "comprehension_ti": 446, "_pyast_comprehens": 446, "_pyast_listcomp": 446, "invalid_comprehens": 446, "_pyast_setcomp": 446, "_pyast_generatorexp": 446, "_pyast_dictcomp": 446, "invalid_dict_comprehens": 446, "invalid_argu": 446, "_pypegen_collect_call_seq": 446, "_pypegen_dummy_nam": 446, "check_null_allow": 446, "_pypegen_seq_extract_starred_expr": 446, "asdl_keyword_seq": 446, "_pypegen_seq_delete_starred_expr": 446, "kwarg_or_star": 446, "kwarg_or_double_star": 446, "_pypegen_join_sequ": 446, "keywordorstar": 446, "invalid_kwarg": 446, "_pypegen_keyword_or_star": 446, "keyword_ti": 446, "_pyast_keyword": 446, "star_targets_list_seq": 446, "star_targets_tuple_seq": 446, "target_with_star_atom": 446, "t_primari": 446, "t_lookahead": 446, "star_atom": 446, "del_t_atom": 446, "_pypegen_seq_append_to_end": 446, "invalid_double_type_com": 446, "raise_syntax_error_known_loc": 446, "raise_syntax_error_known_rang": 446, "_pypegen_get_last_comprehension_item": 446, "pypegen_last_item": 446, "_pypegen_nonparen_genexp_in_cal": 446, "_pypegen_arguments_parsing_error": 446, "_without_invalid": 446, "expression_without_invalid": 446, "_pypegen_check_legacy_stmt": 446, "kf": 446, "dsfsdf": 446, "_pypegen_get_expr_nam": 446, "invalid_ann_assign_target": 446, "raise_syntax_error_invalid_target": 446, "raise_indentation_error": 446, "invalid_parameters_help": 446, "raise_syntax_error": 446, "invalid_lambda_parameters_help": 446, "for_target": 446, "raise_syntax_error_starting_from": 446, "invalid_class_argument_pattern": 446, "pypegen_first_item": 446, "invalid_kvpair": 446, "raise_error_known_loc": 446, "reinitialis": 447, "rerun": [447, 485], "mpf": 447, "_init_module_attr": 447, "atyp": 447, "subpackage1": 447, "modulex": 447, "modulei": 447, "subpackage2": 447, "modulez": 447, "modulea": 447, "lloyd": 449, "hugunin": 449, "backu": 449, "naur": 449, "lc_letter": 449, "vim": [450, 474, 491], "fileencod": 450, "bram": [450, 479], "moolenaar": 450, "xefxbbxbf": 450, "2100": 450, "maart": 450, "mei": 450, "juni": 450, "augustu": 450, "oktob": 450, "unwis": 450, "uax": 450, "3131": [450, 485], "xid_start": 450, "xid_continu": 450, "other_id_start": 450, "id_start": 450, "other_id_continu": 450, "id_continu": 450, "connector": 450, "proplist": 450, "derivedcoreproperti": 450, "breakag": [450, 477, 478, 480, 494], "stringprefix": 450, "shortstr": 450, "longstr": 450, "shortstringitem": 450, "longstringitem": 450, "shortstringchar": 450, "stringescapeseq": 450, "longstringchar": 450, "bytesprefix": 450, "shortbyt": 450, "longbyt": 450, "shortbytesitem": 450, "longbytesitem": 450, "shortbyteschar": 450, "bytesescapeseq": 450, "longbyteschar": 450, "ur": [450, 485], "reintroduc": [450, 487], "codebas": [450, 488, 491, 492], "0o377": [450, 488], "mistyp": 450, "literal_char": 450, "replacement_field": 450, "f_express": 450, "34567": [450, 493], "0x400": 450, "mill": 450, "decinteg": 450, "bininteg": 450, "octinteg": 450, "hexinteg": 450, "nonzerodigit": 450, "bindigit": 450, "0o177": 450, "0b100110111": 450, "79228162514264337593543950336": 450, "0xdeadbeef": 450, "100_000_000_000": 450, "0b_1110_0101": 450, "pointfloat": 450, "exponentfloat": 450, "077e010": 450, "77e10": 450, "14e": 450, "0e0": 450, "14_15_93": 450, "14j": 450, "10j": 450, "001j": 450, "1e100j": 450, "14_15_93j": 450, "expression_stmt": 451, "assignment_stmt": 451, "augmented_assignment_stmt": 451, "annotated_assignment_stmt": 451, "pass_stmt": 451, "break_stmt": 451, "continue_stmt": 451, "future_stmt": 451, "3132": [451, 485], "augtarget": 451, "augop": 451, "expression1": 451, "expression2": 451, "tracebackobj": 451, "relative_modul": 451, "fbb": 451, "subpkg2": 451, "subpkg1": 451, "3104": [451, 485], "qualif": [453, 470, 491], "pythonrc": 453, "startup_fil": 453, "photo": [454, 467], "awk": [454, 477], "reptil": 454, "invit": [454, 474, 491], "mundan": 454, "partak": 455, "neat": [455, 479], "the_answ": 455, "scope_test": 455, "do_loc": 455, "do_nonloc": 455, "do_glob": 455, "realpart": 455, "imagpart": 455, "canin": 455, "fido": 455, "buddi": 455, "mistaken": [455, 477, 489], "add_trick": 455, "priorit": 455, "warehous": [455, 489], "w2": 455, "headach": 455, "addtwic": 455, "legitim": 455, "worthi": 455, "derivedclassnam": 455, "baseclassnam": 455, "base3": 455, "bottommost": 455, "_spam": 455, "intraclass": 455, "items_list": 455, "__updat": 455, "mappingsubclass": 455, "_mapping__upd": 455, "_mappingsubclass__upd": 455, "pervad": 455, "str_iter": 455, "0x10c90e650": 455, "rev": 455, "0x00a1db50": 455, "golf": 455, "xvec": 455, "yvec": 455, "260": [455, 476, 484, 493], "unique_word": 455, "valedictorian": 455, "gpa": 455, "graduat": [455, 492, 495], "pun": 456, "defenestr": 456, "han": [456, 480, 487], "\u00e9l\u00e9onor": 456, "\u666f\u592a\u90ce": 456, "active_us": 456, "myemptyclass": 456, "initlog": 456, "rust": 456, "http_error": [456, 487], "teapot": [456, 487], "where_i": 456, "grass": [456, 487], "987": [456, 464, 465], "1597": 456, "10042ed0": 456, "fib2": [456, 465], "f100": 456, "ask_ok": 456, "vooooom": 456, "bereft": 456, "daisi": 456, "cheeseshop": 456, "sorri": 456, "limburg": 456, "runni": 456, "shopkeep": 456, "palin": 456, "shop": [456, 469], "pos1": 456, "pos2": 456, "pos_or_kwd": 456, "kwd1": 456, "kwd2": 456, "standard_arg": 456, "pos_only_arg": 456, "kwd_only_arg": 456, "combined_exampl": 456, "pos_onli": 456, "kwd_onli": 456, "write_multiple_item": 456, "scoop": [456, 485], "bleedin": 456, "demis": 456, "make_incrementor": 456, "uppercamelcas": 456, "lowercase_with_underscor": 456, "slightest": 456, "kiwi": 457, "tangerin": 457, "grape": 457, "7j": 457, "freshfruit": 457, "loganberri": 457, "passion": 457, "weapon": 457, "14159": [457, 459], "3x4": 457, "transposed_row": 457, "88888": 457, "basket": 457, "crabgrass": 457, "alacazam": [457, 481], "tel": 457, "sape": 457, "4139": 457, "brave": 457, "tic": 457, "tac": 457, "toe": 457, "raw_data": 457, "filtered_data": 457, "string3": 457, "trondheim": 457, "hammer": [457, 477], "non_nul": 457, "lesser": 457, "this_fail": 458, "hither": 458, "flew": 458, "bool_return": 458, "undertaken": 458, "0001100110011001100110011001100110011001100110011": 459, "3602879701896397": 459, "10000000000000001": 459, "12g": [459, 477], "beget": 459, "peril": 459, "unduli": 459, "casual": 459, "3537115888337719": 459, "1125899906842624": 459, "921f9f01b866ep": 459, "strive": [459, 484], "7205759403792794": 459, "17f": 459, "36028797018963968": 459, "referendum": 461, "yes_vot": 461, "42_572_654": 461, "no_vot": 461, "43_132_495": 461, "vote": [461, 477, 482, 489], "42572654": 461, "40000": 461, "dcab": 461, "7678": 461, "phone": [461, 467, 489], "10d": 461, "eel": 461, "hovercraft": 461, "roach": [461, 493, 495], "horribl": 461, "manfr": 461, "8637678": 461, "tidili": 461, "4d": 461, "729": 461, "00012": 461, "workfil": 461, "0123456789abcdef": 461, "6th": 461, "constantli": [461, 492], "korn": 462, "ipython": [462, 483, 487], "bpython": 462, "guru": 463, "entireti": 463, "the_world_is_flat": 463, "666666666666667": 464, "rabbit": 464, "thingi": 464, "glu": 464, "ium": 464, "unununium": 464, "tho": 464, "supercalifragilisticexpialidoci": [464, 467], "rgba": 464, "alph": 464, "correct_rgba": 464, "fibo": 465, "itemnam": 465, "utilis": 465, "uf": 465, "_framework": 465, "_git": 465, "_home": 465, "callstat": [465, 494, 496], "wavread": 465, "wavwrit": 465, "aiffread": 465, "aiffwrit": 465, "auread": 465, "auwrit": 465, "vocod": 465, "karaok": 465, "echofilt": 465, "atten": 465, "contrarili": 465, "subitem": 465, "subsubitem": 465, "specific_submodul": 465, "accesslog": 466, "installdir": [466, 471], "tea": 466, "70710678118654757": 466, "17970987693706186": 466, "6071428571428572": 466, "worldtimeapi": 466, "01t01": 466, "689215": 466, "soothsay": 466, "jcaesar": 466, "1964": 466, "14368": 466, "witch": 466, "wrist": 466, "226805979": 466, "57535828626024577": 466, "54962537085770791": 466, "effortless": 466, "teststatisticalfunct": 466, "test_averag": 466, "english_unit": 467, "conv": [467, 492], "villag": 467, "folk": 467, "nottingham": 467, "ditch": 467, "fund": [467, 477, 482, 488], "nottinghamfolk": 467, "unladen": [467, 489], "elect": [467, 489], "photofil": 467, "img_1074": 467, "img_1076": 467, "img_1077": 467, "batchrenam": 467, "seqnum": 467, "ashley_": 467, "ashley_0": 467, "ashley_1": 467, "ashley_2": 467, "iiihh": 467, "comp_siz": 467, "uncomp_s": 467, "filenames": 467, "extra_s": 467, "decoupl": [467, 488, 492, 494], "asynczip": 467, "4000": 467, "700": 467, "22222": 467, "26932": 467, "task3": 467, "task4": 467, "unsearch": 467, "starting_nod": 467, "breadth_first_search": 467, "gen_mov": 467, "is_goal": 467, "lua": 467, "financi": 467, "regulatori": 467, "cent": 467, "09999999999999995": 467, "142857142857142857142857142857142857": 467, "nova": 468, "136kb": 468, "whl": 468, "kenneth": 468, "reitz": 468, "kennethreitz": 468, "akuchl": 468, "reinforc": 469, "skim": 469, "sizabl": [469, 478, 479], "596": [469, 496], "00797": 469, "pyvideo": 469, "fourier": 469, "solver": 469, "clerk": 469, "bbdehiioqssuvvwx": 470, "0b2": 470, "0c076caaa8": 470, "20161005": 470, "wdefault": [470, 484, 489], "werror": [470, 471], "walwai": [470, 480], "wmodul": 470, "wonc": 470, "wignor": 470, "wi": 470, "frozen_modul": 470, "importlib_bootstrap": 470, "importlib_bootstrap_extern": 470, "showalloccount": [470, 493, 496], "oldpars": [470, 496], "selftest": 470, "4294967295": [470, 493], "encodingnam": 470, "pythonthreaddebug": [470, 471, 487, 488], "pythondumprefsfil": 470, "_sqlite": 471, "pylong_bits_in_digit": [471, 488], "dbmlibord": [471, 484], "py_coerce_c_local": 471, "_bundl": [471, 487], "pystat": 471, "py_stat": 471, "summarize_stat": 471, "preload": 471, "memf": 471, "noderawf": 471, "eprefix": 471, "profile_task": [471, 496], "clang": [471, 491, 493], "llvm": [471, 493], "profdata": 471, "interposit": [471, 487], "fno": [471, 487], "testtimeout": 471, "gold": 471, "thinlto": [471, 488], "gprof": [471, 481], "gettotalrefcount": 471, "_pyobject_assert": 471, "py_safe_downcast": 471, "valgrind": [471, 484, 489, 493], "addresssanit": 471, "asan": 471, "memorysanit": 471, "msan": 471, "undefinedbehaviorsanit": 471, "ubsan": 471, "libpythonmajor": [471, 487], "ffi": [471, 493], "mpdec": 471, "with_editlin": 471, "have_libreadlin": 471, "fnv": [471, 491], "siphash13": [471, 488], "universalsdk": [471, 482, 496], "sdkdir": 471, "arch": [471, 483], "universal2": [471, 474, 495, 496], "config_sit": 471, "aarch64": 471, "ac_cv_buggy_getaddrinfo": 471, "ac_cv_file__dev_ptmx": 471, "ac_cv_file__dev_ptc": 471, "makesetup": [471, 488], "buildbottest": 471, "distclean": 471, "py_build_core_builtin": 471, "_asyncio": 471, "py_build_core_modul": 471, "pyapi_data": [471, 480], "pyport": [471, 477], "py_exported_symbol": 471, "py_imported_symbol": 471, "configure_cppflag": 471, "cppflag": [471, 480], "basecppflag": 471, "py_cppflag": 471, "srcdir": [471, 489], "maincc": 471, "cflags_nodist": 471, "21121": 471, "harden": 471, "heighten": 471, "extra_cflag": 471, "configure_cflag": 471, "configure_cflags_nodist": 471, "basecflag": 471, "cflags_alias": 471, "ccshare": 471, "cflagsforshar": 471, "py_cflag": 471, "py_cflags_nodist": 471, "py_stdmodule_cflag": 471, "py_core_cflag": 471, "dpy_build_cor": 471, "py_builtin_module_cflag": 471, "dpy_build_core_builtin": 471, "_testemb": 471, "configure_ldflag": 471, "stomp": 471, "ldflags_nodist": 471, "35257": 471, "configure_ldflags_nodist": 471, "lib_dir": 471, "lrt": 471, "ldshare": 471, "py_ldflag": 471, "bldshare": 471, "py_core_ldflag": 471, "py_ldflags_nodist": 471, "savag": 474, "bobsavag": 474, "nano": 474, "barebon": 474, "textmat": [474, 491], "macrom": 474, "macvim": 474, "aquamac": 474, "qa1067": 474, "hashcollis": 474, "hkn": 474, "idle_intro": 474, "pyobjc": 474, "pysid": 474, "kivi": 474, "mobil": [474, 489], "toga": 474, "beewar": 474, "wxpython": 474, "briefcas": 474, "notar": 474, "pythonmac": 474, "macpython": [474, 479], "preinstal": 475, "maint": 475, "opensus": 475, "portal": 475, "fedoraproject": 475, "packaging_tutorial_gnu_hello": 475, "slackbook": 475, "slackwar": 475, "pkg_add": 475, "1p2": 475, "opencsw": 475, "python27": 475, "pki": 475, "install_sw": 475, "xzf": 475, "pushd": 475, "openssldir": 475, "j8": 475, "popd": 475, "longpathsen": 476, "currentcontrolset": 476, "installallus": 476, "targetdir": 476, "defaultalluserstargetdir": 476, "programfil": 476, "defaultjustformetargetdir": 476, "localappdata": 476, "defaultcustomtargetdir": 476, "associatefil": 476, "prependpath": [476, 488], "appendpath": [476, 488], "include_doc": 476, "include_debug": 476, "include_dev": 476, "include_ex": 476, "include_launch": 476, "installlauncherallus": 476, "include_lib": 476, "include_pip": 476, "include_symbol": 476, "include_tcltk": 476, "include_test": 476, "include_tool": 476, "launcheronli": 476, "simpleinstal": 476, "simpleinstalldescript": 476, "elev": 476, "unattend": 476, "pythonsoftwarefound": 476, "8_qbz5n2kfra8p0": 476, "localcach": 476, "windowsapp": 476, "package_nam": 476, "vf": 476, "systemx86": 476, "test_fil": 476, "hklm": 476, "msix": 476, "uwp": 476, "nugetclidl": 476, "excludevers": 476, "outputdirectori": 476, "pythonx86": 476, "msbuild": 476, "python37": 476, "ucrtbas": 476, "anaconda": 476, "panda": 476, "conda": 476, "canopi": 476, "winpython": 476, "prebuilt": 476, "my_python_lib": 476, "procthread": 476, "set_1": 476, "wsl": 476, "insenit": 476, "oneith": 476, "pylauncher_no_search_path": 476, "xpython": 476, "py_python": 476, "py_python3": 476, "pylauncher_debug": 476, "pylauncher_dryrun": 476, "pylauncher_allow_instal": 476, "pylauncher_always_instal": 476, "rc_bad_venv_cfg": 476, "rc_create_process": 476, "rc_instal": 476, "rc_internal_error": 476, "rc_no_commandlin": 476, "rc_no_python": 476, "rc_no_venv_cfg": 476, "hive": 476, "hkcu": 476, "apploc": 476, "mfc": 476, "golden": [476, 491], "ongo": [476, 494], "mosh": [477, 478, 479, 481], "zadka": [477, 478, 479, 481], "steadi": 477, "paid": 477, "contractu": 477, "6final": 477, "0beta1": 477, "fourfold": 477, "schneider": 477, "kamp": 477, "checkin": 477, "submitt": 477, "ka": [477, 478, 479, 482], "yee": [477, 478, 479, 482], "scraper": 477, "indiffer": 477, "him": 477, "lockstep": 477, "elementwis": [477, 478], "objectwis": 477, "536": 477, "countless": 477, "stormi": 477, "01ff": 477, "777": [477, 492], "setdefaultencod": 477, "unichr": [477, 479, 482], "encode_func": 477, "decode_func": 477, "stream_read": 477, "stream_writ": 477, "ustr": 477, "file_obj": [477, 480], "u2000ab": 477, "utf8_encod": 477, "utf8_decod": 477, "utf8_streamread": 477, "utf8_streamwrit": 477, "sre": [477, 479], "workhors": 477, "ew": [477, 490], "argu": [477, 479, 484], "endless": [477, 479, 482], "lengthier": [477, 478], "thoma": [477, 478, 481, 482, 483, 484, 487, 488, 491, 492, 493, 494], "wouter": [477, 478, 481, 482, 483, 484, 492, 495], "strop": 477, "hlinuxtnam": 477, "joke": 477, "jpython": 477, "realis": 477, "myself": 477, "tobi": 477, "kelsei": 477, "tiedemann": 477, "neil": [477, 478, 479, 480, 482, 484, 489, 492, 493, 494, 495], "schemenau": [477, 478, 479, 480, 482, 484, 489, 492, 495], "overrod": 477, "tismer": [477, 491], "rewrot": [477, 480], "jeremi": [477, 478, 479, 480, 481, 482, 483, 484], "hylton": [477, 478, 479, 480, 481, 482, 483, 484], "isomorph": 477, "trashcan": [477, 488, 496], "__cmp__": [477, 478, 480, 483, 484, 485], "itanium": [477, 492], "trent": [477, 480, 482, 491], "pythonc": 477, "dyld": 477, "wart": [477, 485], "291": 477, "1beta1": 477, "runawai": 477, "gpf": 477, "find_recursionlimit": 477, "listobject": 477, "no_strict_list_append": 477, "0alpha1": 477, "gvr": [477, 479, 480, 481, 484, 493], "reaction": [477, 478], "x123456": 477, "3l": 477, "abcabcabc": 477, "4l": 477, "18446744073709551616": [477, 484], "subtlest": 477, "longval": 477, "17g": [477, 486], "0999999999999996": 477, "fulton": [477, 481, 493], "extensionclass": 477, "myextensionclass": 477, "importdl": 477, "reorganis": 477, "dynload_": 477, "vladimir": [477, 478, 480, 487, 495], "marangozov": [477, 478, 480], "pymem": [477, 482], "objimpl": 477, "gusi": 477, "yakov": 477, "markovitch": 477, "charl": [477, 484, 490, 491, 492, 493, 494], "waldman": 477, "affair": 477, "arduou": 477, "ritual": 477, "wildli": 477, "shepherd": [477, 480], "module2": 477, "expat_extens": 477, "xml_n": 477, "xmltok": 477, "xmlpars": 477, "xmlrole": 477, "bdist_wininst": [477, 487, 495, 496], "xmllib": 477, "mullend": [477, 483], "tag1": 477, "perslist": 477, "persona": 477, "claudiu": [477, 491, 492], "denmark": 477, "son": 477, "nephew": 477, "20th": 477, "4dom": 477, "fourthought": 477, "xmlproc": 477, "lar": [477, 480, 481, 482, 483, 484, 489, 490], "garshol": 477, "sgmlop": 477, "gallew": 477, "httplib": [477, 480, 481, 483, 484, 485], "create_lin": 477, "create_polygon": 477, "oliv": 477, "andrich": 477, "cmpcach": 477, "macmillan": 477, "twin": 477, "sunaudiodev": [477, 483], "bosch": 477, "prescod": [477, 478, 479, 482], "fetchabl": 477, "browsercontrol": 477, "_winreg": [477, 483, 484, 485], "tutt": 477, "imputil": [477, 480, 484], "ihook": [477, 480, 483, 484], "vanilla": 477, "stdwin": 477, "packmail": 477, "whatsound": 477, "zmod": 477, "bolen": [477, 479], "gregg": 477, "hauser": 477, "detlef": [477, 480], "lannert": [477, 480], "aahz": [477, 481, 482], "maruch": 477, "tobia": 477, "polzin": 477, "russ": 477, "schmidt": 477, "clumsier": [478, 479], "list_attribut": [478, 479], "unknow": [478, 479], "compulsori": [478, 479, 480], "crunch": 478, "tp_richcmp": 478, "ascher": 478, "spare": 478, "toolbox": [478, 479, 480], "aycock": 478, "spark": 478, "135143996": 478, "py_tpflags_checktyp": 478, "middleton": 478, "vault": 478, "parnassu": 478, "retir": 478, "wayback": 478, "catalogu": 478, "sean": [478, 480, 481, 482, 484], "reifschneid": [478, 480, 481, 482, 484], "addict": 478, "purcel": 478, "gellekum": 478, "ninth": 478, "edward": [478, 479, 481, 482], "136": 478, "underestim": [478, 479, 480, 481, 482, 483], "afoul": [478, 480], "getc": 478, "jeff": [478, 480, 491, 493], "epler": 478, "preliminari": [478, 487, 494], "ben": [478, 482, 488, 492], "wolfson": 478, "vestigi": 478, "ancestri": 478, "shrunk": 478, "340k": 478, "majewski": 478, "jason": [478, 480, 483, 491, 495, 496], "tishler": [478, 480], "risco": [478, 485], "dietmar": 478, "schwertberg": 478, "unixwar": 478, "billi": 478, "alli": 478, "graem": 478, "goodger": [478, 479, 481], "grave": 478, "hudson": [478, 479, 480, 482], "irregular": 479, "dark": 479, "safeguard": 479, "esoter": [479, 482], "lockablefil": 479, "posixfil": [479, 483], "__methods__": [479, 485], "defstat": 479, "eiffel": 479, "postcondit": 479, "eiffelmethod": 479, "pre_f": 479, "post_f": 479, "zodb": 479, "get_par": 479, "__coerce__": [479, 484], "get_siz": 479, "set_siz": 479, "new_attr": 479, "corp": 479, "0x8116870": 479, "crew": [479, 480, 482], "0x8117f90": [479, 480], "www2": [479, 480], "arizona": [479, 480], "ipd266": [479, 480], "harbor": [479, 480], "magnu": [479, 480], "hetland": [479, 480], "1234567890123": 479, "1234567890123l": 479, "18446744073709551616l": 479, "herald": 479, "erupt": 479, "storm": 479, "acidli": 479, "sarcast": 479, "110000": 479, "261": 479, "x9c": 479, "xc9": 479, "xc1": 479, "nand": 479, "666": 479, "5r92": 479, "qe": 479, "ee8v4": 479, "v8": 479, "f5d": 479, "6yd86yt": 479, "f5r": 479, "f5r8f": 479, "s92p": 479, "86yd": 479, "5t": 479, "71i": 479, "5x": [479, 493, 494], "sheesh": 479, "furrfu": 479, "__unicode__": [479, 484], "headlin": 479, "oreillynet": 479, "meerkat": 479, "getchannel": 479, "freshmeat": 479, "4549": 479, "3dgamer": 479, "52719": 479, "xsl": 479, "html2fo": 479, "memberst_mtim": 479, "mathewson": 479, "ichiro": 479, "itojun": 479, "hagino": 479, "bigcharset": 479, "2487": 479, "pier": [479, 480], "lauder": [479, 480], "michel": [479, 480, 490, 491, 492, 493, 494, 495, 496], "pelleti": 479, "rfc2822": 479, "grunt": 479, "generator": 479, "itamar": 479, "shtull": 479, "traur": 479, "py_tpflags_gc": 479, "pyobject_gc_init": 479, "pyobject_gc_fini": 479, "pygc_head_s": 479, "pyobject_as_gc": 479, "pyobject_from_gc": 479, "untyp": 479, "vsprintf": 479, "overrun": [479, 484], "683": 479, "osa": 479, "quicktim": 479, "cleanfutur": 479, "gpled": 479, "ftpmirror": 479, "romberg": 479, "pyrange_new": [479, 482], "sneakili": 479, "rhythm": 479, "stephen": [479, 488], "hansen": [479, 496], "installermast": 479, "0a": 479, "stolk": 479, "bremmer": 479, "keith": 479, "brigg": 479, "carel": 479, "felling": 479, "mclai": 479, "donnel": 479, "joona": 479, "paalasma": 479, "jen": 479, "reinhardt": 479, "welbourn": 479, "polish": 480, "berkeleydb": [480, 483, 484], "immutableset": [480, 481], "union_upd": 480, "ungainli": 480, "martelli": [480, 483], "suzuki": 480, "hisao": 480, "nyman": 480, "inadequ": 480, "hodgson": 480, "irrit": 480, "__builtin__": [480, 485, 486], "walter": [480, 481, 482, 483, 495], "d\u00f6rwald": [480, 481, 482, 495], "quixot": 480, "richard": [480, 482, 483, 490, 491], "toss": 480, "sundri": 480, "kevin": [480, 481, 483, 484, 489], "alti": 480, "cole": [480, 481, 489], "mcnamara": [480, 482], "cliff": [480, 484], "cpickl": [480, 482, 484, 485], "fanciest": 480, "__safe_for_unpickling__": 480, "rip": 480, "dcba": 480, "innocu": 480, "welter": 480, "fakeseq": 480, "calc_item": 480, "underw": [480, 481, 482, 483], "dylan": 480, "simionato": 480, "029035": 480, "pedroni": [480, 482], "setcheckinterv": [480, 496], "getcheckinterv": [480, 496], "_socket": 480, "u4000": 480, "u4001abc": 480, "simon": 480, "brun": 480, "0045": 480, "goofi": 480, "0goofi": 480, "oren": [480, 490, 494], "tirosh": [480, 490], "christoph": [480, 492], "craig": 480, "set_lineno": 480, "idiosyncrasi": 480, "hotspot": 480, "pyston": [480, 481, 482, 485], "orendorff": [480, 483], "bsddb185": 480, "db2pickl": 480, "pickle2db": 480, "bsddb3": [480, 485], "sampmodul": 480, "samp": 480, "robert": [480, 482, 483, 484, 492, 494], "weber": [480, 492], "\u00e5strand": [480, 481], "xlinux": 480, "dad": 480, "priorityqu": 480, "connor": [480, 491, 493], "idlefork": 480, "tino": 480, "deg": 480, "loadavg": 480, "geert": [480, 492], "otkidach": 480, "stat_float_tim": [480, 482, 490, 494], "1034791200": 480, "6335014": 480, "fitzroi": 480, "dale": [480, 490], "sn": 480, "nos": 480, "3407": 480, "3805": 480, "1505": 480, "7023": 480, "2401": 480, "2267": 480, "9733": 480, "8083": 480, "9195": 480, "rexec": 480, "bastion": 480, "rotor": [480, 481], "gilfix": 480, "exc_clear": [480, 485], "gust\u00e4bel": [480, 481, 482, 483, 484, 489, 490], "whit": 480, "defi": 480, "auguri": 480, "sparrow": 480, "dummy_thread": [480, 494, 496], "timer1": 480, "timer2": 480, "laptop": 480, "36831796169281006": 480, "37441694736480713": 480, "35304892063140869": 480, "17574405670166016": 480, "18193507194519043": 480, "17565798759460449": 480, "031107": 480, "tcl_obj": 480, "wantobject": 480, "tkapp": 480, "dictmixin": 480, "seqdict": 480, "lookalik": 480, "keylist": [480, 481], "valuelist": 480, "quinlan": [480, 481, 484, 489], "3491": 480, "30t21": 480, "994956": 480, "827738": 480, "optik": [480, 481, 482], "0x400cad4c": 480, "0x400cad2c": 480, "iinput": 480, "llength": 480, "undistinguish": 480, "pymemcompat": 480, "libpython2": 480, "ondrej": 480, "palkovski": 480, "dl_export": 480, "dl_import": 480, "pyarg_noarg": 480, "pystring_new": 480, "test_bufio": 480, "emx": 480, "macintyr": [480, 482], "weaklink": [480, 495, 496], "atheo": 480, "hurd": 480, "openvm": 480, "mist": 480, "nifti": 480, "richi": 480, "hindl": 480, "0xffffffff": [480, 493], "0xffffffffl": 480, "get_distutil_opt": 480, "bauer": 480, "chermsid": 480, "fraser": 480, "kelli": [480, 490, 491], "gerber": 480, "chri": [480, 482, 483, 490, 492, 493], "lambert": [480, 491], "lalo": 480, "netzer": 480, "nowak": 480, "francesco": 480, "ricciardi": 480, "suzi": 480, "radic": 481, "481": 481, "arbcd": 481, "wxy": 481, "unif": 481, "8589934592": 481, "svensson": 481, "get_all_link": 481, "jiwon": [481, 490], "seo": [481, 490], "hye": [481, 482], "shik": [481, 482], "untrain": 481, "deco": 481, "0x402ef0d4": 481, "require_int": 481, "_deco": 481, "bend": 481, "func_nam": [481, 485], "smith": [481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "979728": 481, "russel": 481, "pythondecoratorlibrari": 481, "dpkg": 481, "deb": 481, "unawar": 481, "0001100110011": 481, "inaccuraci": [481, 484], "1000000000000001": [481, 486], "magnifi": 481, "dodg": 481, "12f": 481, "100000000000": 481, "7956": 481, "64739884393063583815028902": 481, "1275": 481, "9184": 481, "123456789012": 481, "351364": 481, "18288201344": 481, "18288201344j": 481, "1828820134592177245001": 481, "facundo": [481, 483], "batista": [481, 483], "lahei": 481, "speleotrov": 481, "cowlishaw": 481, "rexx": 481, "resolve_dotted_attribut": 481, "dima": 481, "dorfman": 481, "pyos_ascii_strtod": [481, 484, 486], "pyos_ascii_atof": [481, 484, 486], "pyos_ascii_formatd": 481, "buf_len": 481, "glib": 481, "kindli": [481, 483], "relicens": 481, "rei": 481, "carneiro": 481, "colormap": 481, "overflowwarn": 481, "method_descriptor": 481, "armin": [481, 482, 483, 484, 486, 489, 490, 491], "rigo": [481, 482, 483], "vasiliev": 481, "cjkcodec": 481, "prc": 481, "roc": 481, "roman8": 481, "iso_8859": 481, "pctp": 481, "belmont": [481, 487, 488], "j\u00f6rg": 481, "lehmann": 481, "gass": 481, "tenfold": 481, "eland": 481, "yve": [481, 488], "dionn": 481, "arnaud": [481, 490], "mazin": 481, "key_val": 481, "0x402c2080": 481, "0x402c2090": 481, "bookmark": 481, "j\u00fcrgen": 481, "erhard": 481, "cryptoapi": 481, "trevor": 481, "perrin": [481, 487], "beni": 481, "cherniavski": 481, "raynor": 481, "hector": 481, "urtubia": 481, "30000": 481, "sidestep": 481, "unlucki": 481, "elegantli": 481, "mpz": 481, "jar": 481, "loper": 481, "ambiti": 481, "objn": 481, "py_is_nan": 481, "tsc": 481, "pentium": 481, "misnam": [481, 489], "tracebackobject": 481, "pytracebackobject": 481, "dircach": [481, 483], "korai": 481, "dyck": 481, "hamish": 481, "lawson": 481, "sadruddin": 481, "rejeb": 481, "356": 482, "458": 482, "true_valu": 482, "false_valu": 482, "voter": 482, "true_v": 482, "false_v": 482, "rarer": 482, "pygtk": 482, "open_item": 482, "open_func": 482, "item_path": 482, "popup_menu": 482, "pypackag": 482, "numarrai": 482, "oldpackag": 482, "gpg": 482, "unclean": 482, "holger": 482, "krekel": 482, "tidier": 482, "pylib": 482, "pycheck": 482, "exception1": 482, "exception2": 482, "hackish": 482, "trivia": 482, "phillip": [482, 483, 486, 489, 493], "ebi": [482, 483, 486, 489], "288": 482, "20160321211320": 482, "sidh": 482, "000178": 482, "sugalski": 482, "db_connect": [482, 483], "databaseconnect": [482, 483], "flawlessli": [482, 483], "db_transact": [482, 483], "mgr1": [482, 483], "mgr2": [482, 483], "version2": 482, "whatsnew": 482, "lp64_wp": 482, "unreason": 482, "travi": [482, 483, 484], "oliph": [482, 483, 484], "zerodict": 482, "is_image_fil": 482, "lynn": 482, "bethard": [482, 484, 489, 492], "needforspe": 482, "sprint": [482, 483], "reykjavik": 482, "ewt": 482, "llc": 482, "ccp": 482, "mcintyr": [482, 483], "ippolito": [482, 483, 484, 486], "diederich": [482, 486], "immisch": 482, "nel": 482, "mezzo": 482, "cammin": 482, "nostra": 482, "vita": 482, "ritrovai": 482, "una": 482, "selva": 482, "oscura": 482, "che": 482, "diritta": 482, "smarrita": 482, "init_lett": 482, "hotshot": 482, "josh": [482, 483, 492, 493, 495, 496], "spoerri": 482, "bjorn": 482, "tilleniu": 482, "gregori": [482, 483, 484, 486, 487, 488, 491, 493, 494, 495], "schroeder": 482, "antti": 482, "louko": 482, "diego": [482, 495], "petten\u00f2": 482, "gr\u00e9goir": 482, "pybench": 482, "regsub": 482, "statcach": 482, "tzpars": 482, "whrandom": 482, "kiendl": 482, "biondi": 482, "netlink": 482, "linuxjourn": 482, "7356": 482, "group_mask": 482, "getfamili": 482, "getproto": 482, "ih3": 482, "187": 482, "blai": 482, "subvers": [482, 483, 484, 489, 494], "trunk": [482, 483], "45313": 482, "45315": 482, "45355": 482, "45356m": 482, "iterkeyref": 482, "itervalueref": 482, "oleg": 482, "broytmann": 482, "oussoren": [482, 483, 484, 489, 491, 495, 496], "atle": 482, "heller": [482, 483, 484], "dl": [482, 483], "strfry": 482, "71828": 482, "1783957616": 482, "20180410025338": 482, "theller": 482, "elementpath": [482, 494], "20201124024954": 482, "effbot": [482, 484], "textnod": 482, "rss10": 482, "svg": 482, "10px": 482, "320px": 482, "pysqlit": [482, 484, 489], "tran": 482, "qty": 482, "rhat": 482, "msoft": 482, "140000000000001": 482, "wsgi_app": 482, "20160331090247": 482, "supervis": 482, "for_loop": 482, "339": 482, "pyparser_astfromstr": [482, 487], "pyparser_astfromfil": [482, 487], "pyast_compil": [482, 487], "ehresman": 482, "kurt": 482, "kaiser": 482, "evan": [482, 496], "256k": 482, "py_loc": 482, "py_local_inlin": 482, "py_local_aggress": 482, "pyerr_warn": 482, "lll": 482, "2573": 482, "pymem_": 482, "_malloc": 482, "_free": 482, "ralf": [482, 483], "gross": 482, "kunstlev": 482, "iain": 482, "pryor": 482, "rovner": 482, "weikart": 482, "361": 483, "259": 483, "py3kwarn": 483, "py_py3kwarningflag": 483, "3100": 483, "committe": 483, "jira": 483, "launchpad": 483, "trac": 483, "upfront": 483, "stellenbosch": 483, "africa": 483, "ream": 483, "python26": 483, "39916800": 483, "51090942171709440000": 483, "8222838654177922817725562880000000": 483, "33452526613163807108170062053440751665152000000000": 483, "mgr": 483, "15511187532873822802242430164693032110632597200169861120000": 483, "jess": [483, 486, 492, 493, 494], "noller": [483, 486], "oudkerk": [483, 490, 491], "last_login": 483, "npython": 483, "61261m": 483, "5367": 483, "mp4": 483, "banquet": 483, "invoic": 483, "750000e": 483, "6564": 483, "talin": 483, "u751f": 483, "u3080": 483, "u304": 483, "u3000": 483, "u3054": 483, "u3081": 483, "u305f": 483, "u307": 483, "pystringobject": 483, "u21ef": 483, "u3244": 483, "x87": 483, "x89": 483, "u31ef": 483, "stutzbach": [483, 484, 489], "verdon": 483, "doerwald": 483, "lownd": 483, "pybuf_lock": 483, "carl": [483, 484, 489, 490, 495, 496], "bank": 483, "vagu": 483, "printabletyp": 483, "drawabl": 483, "draw_doubl": 483, "aranguren": 483, "0o21": 483, "0b101111": 483, "052": 483, "173": 483, "0b10101101": 483, "1101": 483, "0b1101": 483, "patrick": [483, 487], "maupin": 483, "undergo": 483, "yasskin": [483, 484, 489], "guil": 483, "r5r": 483, "66666666666666663": 483, "40000000000000002": 483, "7074029114692207l": 483, "2251799813685248l": 483, "6004799503160661l": 483, "18014398509481984l": 483, "andi": [483, 486], "chu": [483, 486], "1739468": [483, 486, 492], "2196": 483, "ud": 483, "1686487": 483, "amauri": [483, 484, 486, 489], "forgeot": [483, 484, 486, 489], "3473": 483, "2719": 483, "abc123": 483, "cdf246": 483, "1635": 483, "1640": 483, "3008": 483, "e000000000000p": 483, "5555555555555p": 483, "niceti": 483, "dickinson": [483, 484, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496], "2235": 483, "austin": 483, "1537": 483, "1473257": 483, "1444529": 483, "cplx": 483, "1491866": 483, "bengt": 483, "richter": 483, "1193128": 483, "1591665": 483, "im_self": 483, "1631171": 483, "jacob": [483, 488], "1700288": 483, "py_tpflags_have_version_tag": 483, "1878": 483, "pitrou": [483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496], "1819": 483, "jvm": 483, "josiah": [483, 490], "carlson": [483, 490], "1736190": 483, "jes\u00fa": [483, 484, 490, 493, 494], "cea": [483, 484, 490, 493, 494], "avi\u00f3n": [483, 484, 490, 493, 494], "jcea": [483, 484, 485], "programacion": [483, 485], "dbshelv": 483, "barn": [483, 494], "fiori": 483, "nubi": 483, "1817": 483, "600362": 483, "1381": 483, "var_typ": 483, "amplitud": 483, "dq": 483, "arvin": 483, "schnell": 483, "1638033": 483, "fabian": 483, "kreutz": 483, "insert_mod": 483, "1158": 483, "7182818": 483, "9999999895305022877376682436": 483, "1221598": 483, "1739906": 483, "1001604": 483, "iter1": 483, "iter2": 483, "getmoduleinfo": [483, 493], "getarg": 483, "izip_longest": 483, "2n": 483, "2138": 483, "brouwer": 483, "2819": 483, "711019": 483, "lenton": 483, "wine": 483, "petrosyan": 483, "inst_nam": 483, "_helper": 483, "levinson": 483, "1663329": 483, "horcicka": 483, "1181": 483, "1273829": 483, "1115886": 483, "barran": 483, "1339796": 483, "957650": 483, "1393667": 483, "1106316": 483, "exception_hierarchi": 483, "2439": 483, "achim": 483, "gaedk": 483, "1137": 483, "shawn": 483, "ligocki": 483, "1727780": 483, "wladmir": 483, "laan": 483, "1681432": 483, "hoyt": [483, 492], "schmitt": 483, "846388": 483, "3487": 483, "lorenz": 483, "2250": 483, "1861": 483, "pollobj": 483, "1657": 483, "ziad\u00e9": [483, 484, 489, 492], "2663": 483, "1583": 483, "guilherm": [483, 484, 486, 491, 493, 494], "polo": [483, 484, 486, 491, 493, 494], "2240": 483, "2033": 483, "leif": 483, "hedstrom": 483, "957003": 483, "3207": 483, "fenner": 483, "829951": 483, "alberto": [483, 490], "bertogli": 483, "1646": 483, "pomran": 483, "pedro": 483, "werneck": 483, "742598": 483, "1193577": 483, "remahl": 483, "1534": 483, "schuppeni": 483, "2898": 483, "1648": 483, "damien": [483, 491], "miller": [483, 491], "1537850": 483, "dustin": 483, "mitchel": [483, 488], "transientresourc": 483, "sf": 483, "3781": 483, "wrec": 483, "dwayn": 483, "bailei": 483, "1581073": 483, "2871": 483, "erik": [483, 488, 494], "demain": 483, "1533909": 483, "2906": 483, "gregor": 483, "lingl": 483, "1513695": 483, "ftpwrapper": 483, "3811": 483, "1599845": 483, "_send_traceback_head": 483, "1330538": 483, "riku": 483, "lindblad": 483, "2985": 483, "251": 483, "sysmodul": 483, "467924": 483, "horler": 483, "1775025": 483, "alexei": [483, 491, 492], "borzenkov": 483, "1734346": 483, "ronach": [483, 484, 486, 489, 490, 491], "abcdefghijklm": 483, "stararg": 483, "iterable1": 483, "__hex__": [483, 485], "__oct__": [483, 485], "in_json": 483, "simplejson": [483, 484], "data_struct": 483, "lastaccess": 483, "plist_str": 483, "writeplisttostr": 483, "new_struct": 483, "readplistfromstr": 483, "writeplist": [483, 491], "readplist": [483, 491, 494], "1649190": 483, "outset": 483, "1798": 483, "janssen": 483, "bgenloc": 483, "buildtool": 483, "bundlebuild": 483, "fpformat": 483, "gensuitemodul": 483, "imageop": 483, "imgfil": 483, "mhlib": 483, "mimetool": 483, "multifil": 483, "toaiff": 483, "gopherlib": [483, 485], "mimewrit": 483, "mimifi": 483, "rgbimg": 483, "trojan": [483, 484], "hors": [483, 484], "50003": 483, "duncan": 483, "grisbi": 483, "pyfile_incusecount": 483, "pyfile_decusecount": 483, "1675423": 483, "1629": 483, "1530959": 483, "free_list": 483, "numfre": 483, "_maxfreelist": 483, "patchcheck": 483, "nt4": 483, "sp4": 483, "1753245": 483, "flori": 483, "bruynoogh": 483, "2125": 483, "macf": 483, "macostool": 483, "1490190": 483, "_builtinsuit": 483, "aepack": 483, "aetool": 483, "aetyp": 483, "applesingl": 483, "appletrawmain": 483, "appletrunn": 483, "argvemul": 483, "audio_mac": 483, "autogil": 483, "carbon": [483, 489], "cfmfile": 483, "codewarrior": 483, "colorpick": 483, "easydialog": 483, "findertool": 483, "icglu": 483, "icopen": 483, "macerror": 483, "macresourc": 483, "miniaefram": 483, "nav": 483, "osaterminologi": 483, "pimp": 483, "pixmapwrapp": 483, "stdsuit": 483, "systemev": 483, "terminalcommand": 483, "cddb": 483, "cdplayer": 483, "fl": 483, "flp": 483, "fm": 483, "glw": 483, "gl": 483, "panelpars": 483, "readcd": 483, "sv": 483, "torgb": 483, "videoread": 483, "1683368": 483, "conversionsyntax": 483, "1706815": 483, "dict1": 483, "dict2": 483, "ralph": 483, "corderoi": 483, "lambach": 483, "michlmayr": 483, "warner": 483, "7319": 484, "reenabl": 484, "qwarn": 484, "744": 484, "073": 484, "709": 484, "616": [484, 496], "is_verbos": 484, "1mb": 484, "configdict": 484, "netlog": 484, "netlogg": 484, "vk": 484, "revamp": [484, 489], "vassalotti": [484, 486, 489, 491], "0x37f850": 484, "0x37f080": 484, "122": [484, 493], "mb": 484, "2335": 484, "aaa": 484, "aaaaa": 484, "2333": 484, "codereview": 484, "appspot": [484, 486, 489], "53094": [484, 486, 489], "icc": [484, 486], "suncc": 484, "7117": 484, "295147905179352891391": 484, "9514790517935283e": 484, "65535l": 484, "9514790517935289e": 484, "3166": 484, "1811": 484, "meador": [484, 490], "5211": 484, "5237": [484, 486], "1588": 484, "7988": 484, "3382": 484, "7994": [484, 491], "124": [484, 486, 489, 491], "johansson": [484, 486], "victor": [484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "stinner": [484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "3439": [484, 486], "7902": 484, "1583863": 484, "4759": 484, "5982": 484, "7604": 484, "belchenko": 484, "1616979": [484, 489], "8016": 484, "kaliszewski": 484, "4764": 484, "5677": 484, "lingard": 484, "7362": 484, "8268": 484, "7140": 484, "curtin": [484, 489, 490, 491, 494], "survivor": 484, "4074": 484, "4688": [484, 486], "long_info": 484, "4258": [484, 486, 495], "5260": 484, "5512": 484, "1087418": 484, "5176": 484, "4715": 484, "gawain": [484, 489], "bolton": [484, 489], "6713": [484, 489], "florent": [484, 489], "xicluna": [484, 489], "7462": [484, 489], "7622": [484, 489], "mcguir": [484, 486], "5084": [484, 486], "5670": 484, "maru": 484, "senthil": [484, 487, 489, 491, 492, 493, 494, 495, 496], "kumaran": [484, 487, 489, 491, 492, 493, 494, 495, 496], "5142": 484, "7703": 484, "2devel9": 484, "8156": 484, "hagen": 484, "f\u00fcrstenau": 484, "3860": 484, "1696199": [484, 486], "field1": 484, "field2": 484, "_2": [484, 486], "1818": [484, 486], "8729": 484, "kindahl": 484, "7005": 484, "3924": 484, "1515": 484, "4606": 484, "klose": [484, 490, 493], "8142": 484, "5788": 484, "4796": 484, "8257": [484, 489], "6595": 484, "jos\u00e9": 484, "conti": 484, "7633": 484, "6857": 484, "7279": 484, "anatoli": 484, "techtonik": 484, "7585": 484, "8688": 484, "lennart": 484, "regebro": 484, "7490": 484, "murrai": [484, 489, 491, 492, 493], "1368247": 484, "5812": 484, "8294": [484, 489], "oversight": [484, 490, 492, 494], "giampaolo": [484, 489, 490, 492, 494, 495], "rodola": [484, 489, 492, 494, 495], "2054": 484, "pablo": [484, 487, 488, 492, 494, 495, 496], "mouzo": 484, "6845": 484, "5479": 484, "nir": [484, 489, 490, 494], "7471": [484, 489], "jacqu": 484, "frechet": 484, "4272": 484, "tadek": 484, "pietraszek": 484, "2846": [484, 489], "chenet": [484, 489], "7418": [484, 489], "kristj\u00e1n": [484, 489, 491], "valur": [484, 489, 491], "j\u00f3nsson": [484, 489, 491], "4879": 484, "eldon": 484, "ziegler": 484, "derek": [484, 486], "morr": [484, 486], "1655": [484, 486], "_pyio": [484, 486], "4991": 484, "chambon": 484, "6939": 484, "5032": 484, "4816": 484, "4136": [484, 486], "5381": 484, "1607951": 484, "6896": 484, "nirina": 484, "raseliarison": 484, "3366": 484, "lekma": 484, "5585": 484, "cazabon": 484, "6963": 484, "1664": [484, 486], "6508": 484, "calderon": [484, 490], "7333": 484, "zsolt": 484, "cserna": 484, "7242": 484, "matt": [484, 491, 492], "giuca": 484, "5827": 484, "3426": 484, "laban": [484, 486], "4739": [484, 486], "6816": 484, "3002": 484, "francoi": 484, "natali": [484, 490, 491, 492], "8354": 484, "6693": [484, 489], "8104": 484, "nagl": 484, "disable_nagle_algorithm": 484, "6192": 484, "6267": 484, "7133": 484, "ssl_mode_auto_retri": 484, "8222": 484, "8322": [484, 489], "beda": 484, "kosata": 484, "8484": [484, 489], "8321": [484, 489], "bbhhiillqq": 484, "1523": 484, "8300": 484, "disk0s2": 484, "52g": 484, "49g": 484, "0g": 484, "1068268": 484, "8451": 484, "4285": [484, 486], "7766": 484, "unnot": 484, "7357": 484, "lesher": 484, "1674032": 484, "unihan": 484, "ander": [484, 487, 494], "chrigstr\u00f6m": 484, "1571184": 484, "8024": 484, "2987": [484, 489], "1080": 484, "200c": 484, "417a": 484, "ampersand": 484, "style1": 484, "muller": 484, "2746": 484, "encode_threshold": 484, "5511": 484, "kuba": 484, "wieczorek": 484, "4710": 484, "7610": [484, 489], "gabriel": [484, 488], "genellina": 484, "4756": 484, "6003": 484, "anydbm": [484, 485], "distutils2": 484, "tck": 484, "tcl8": 484, "tkcmd": 484, "ttk_intro": 484, "screenshot": 484, "2983": [484, 486], "franklin": 484, "walzer": [484, 489], "2618": 484, "unittest2": 484, "nose": 484, "6001": 484, "impati": 484, "dyer": 484, "8074": 484, "1034053": 484, "5663": 484, "4444": 484, "5679": 484, "2578": 484, "7031": 484, "8038": 484, "assertitemsequ": 484, "assertdictcontainssubset": [484, 486, 489], "roddi": 484, "6866": 484, "fern\u00e1ndez": 484, "3379": 484, "5728": 484, "awkwardli": 484, "20210619163128": 484, "shtml": 484, "getiter": [484, 489, 495, 496], "getchildren": [484, 489, 495, 496], "childless": 484, "20200703234532": 484, "6472": [484, 489], "8032": 484, "3632": 484, "4293": 484, "7033": [484, 489], "horsen": 484, "7528": 484, "7767": [484, 489], "5753": [484, 489], "py_isalnum": 484, "py_isalpha": 484, "py_isdigit": 484, "py_islow": 484, "py_isspac": 484, "py_isupp": 484, "py_isxdigit": 484, "py_toupp": 484, "5793": 484, "pyeval_callobject": [484, 489, 496], "8276": [484, 489], "pystring_fromformat": 484, "pystring_fromformatv": 484, "7228": 484, "1590864": 484, "_shutdown": 484, "1722344": 484, "t_string_inplac": 484, "3102": [484, 485], "arfrev": [484, 489], "freht": [484, 489], "taifersar": [484, 489], "arahesi": [484, 489], "7609": 484, "2422": [484, 489], "6491": 484, "x87_double_round": 484, "2937": 484, "ldcxxshare": 484, "1222585": 484, "clinton": 484, "roi": 484, "3585": 484, "6094": 484, "ucnhash_capi": [484, 487], "pycobject": [484, 486, 489], "vtabl": 484, "pycobject_asvoidptr": 484, "5630": [484, 486], "cournapeau": 484, "4365": 484, "7347": 484, "_beginthreadex": 484, "3582": 484, "miki": [484, 489], "tebeka": [484, 489], "1220212": 484, "hirokazu": [484, 490], "yamamoto": [484, 490, 494], "5913": 484, "4969": 484, "4865": 484, "28440": 484, "so_setfib": 484, "kyle": [484, 487, 493, 494, 495, 496], "vanderbeek": 484, "8235": 484, "iobench": 484, "ccbench": 484, "throughput": [484, 494], "5464": 484, "ziga": 484, "seilnacht": 484, "1180193": 484, "randse": 484, "7312": 484, "piotr": 484, "o\u017carowski": 484, "8233": 484, "1533": 484, "5920": 484, "6101": 484, "7853": 484, "leander": 484, "anand": [484, 489], "pillai": [484, 489], "7150": 484, "7348": 484, "5080": 484, "pythonshowrefcount": 484, "31733": 484, "count_alloc": [484, 493, 496], "pythonshowalloccount": 484, "31692": 484, "gaynor": [484, 487, 492], "21306": 484, "1g": 484, "zachari": [484, 491, 492, 494], "ware": [484, 491, 492, 494], "21462": 484, "21304": 484, "21671": 484, "0224": 484, "tls1": 484, "reid": [484, 489], "21308": 484, "21305": 484, "21307": 484, "stufft": [484, 491], "deili": [484, 489, 491, 495, 496], "pythonhttpsverifi": 484, "_https_verify_certif": 484, "autotool": [484, 492, 493], "pregener": [484, 492, 493], "23404": [484, 492, 493], "philip": [484, 489, 493], "jenvei": [484, 489], "ryan": [484, 490, 491, 493, 494], "lovett": 484, "hugh": 484, "secker": 484, "walker": 484, "cruft": 485, "wealth": 485, "softspac": 485, "retrain": 485, "corollari": 485, "incompar": 485, "0720": 485, "0o720": 485, "loudli": 485, "unixi": 485, "3138": 485, "some_sequ": 485, "274": 485, "vindic": 485, "3109": 485, "crutch": 485, "item1": 485, "item2": 485, "3113": 485, "b_c": 485, "3108": 485, "beo": 485, "instabl": 485, "disobei": 485, "copy_reg": 485, "markupbas": 485, "_markupbas": [485, 487], "dbhash": 485, "htmlentitydef": 485, "basehttpserv": 485, "cgihttpserv": 485, "simplehttpserv": 485, "jumpahead": 485, "tmpnam": 485, "tempnam": 485, "tmpfile": 485, "secondaryexcept": 485, "primary_except": 485, "__getslice__": 485, "__setslice__": 485, "__delslice__": 485, "3114": 485, "func_x": 485, "__x__": 485, "func_cod": 485, "func_default": 485, "func_dict": 485, "func_doc": 485, "func_glob": 485, "3111": 485, "tru64": 485, "3123": 485, "pynumber_coerc": 485, "pynumber_coerceex": 485, "pymember_get": 485, "pymember_set": 485, "nb_nonzero": 485, "with_cycle_gc": 485, "contort": 485, "8901234": 486, "12j": 486, "600000": 486, "120000j": 486, "underwai": 486, "camelot": 486, "5675": [486, 489], "mattia": [486, 489], "br\u00e4ndstr\u00f6m": [486, 489], "4707": 486, "199999999999ap": 486, "1580": 486, "namesak": 486, "lv": 486, "ov": 486, "oe": 486, "_0": 486, "query_field": 486, "userqueri": 486, "4384": 486, "vajda": 486, "4195": 486, "4201": 486, "5228": 486, "testgizmo": 486, "test_gizmo_on_window": 486, "test_gimzo_without_required_librari": 486, "builtout": 486, "test_division_by_zero": 486, "confound": 486, "remap": 486, "c__builtin__": 486, "nset": 486, "np0": 486, "lp1": 486, "nl1l": 486, "nal2l": 486, "nal3l": 486, "natp2": 486, "nrp3": 486, "6137": 486, "sunpro": 486, "4753": 486, "4868": 486, "roger": [486, 496], "serwi": 486, "5150": [486, 489], "lisandro": 486, "dalcrin": 486, "5175": 486, "pynumber_int": 486, "4910": 486, "5914": 486, "7182818284590451": 486, "718281828459045": 486, "galindo": [487, 488, 494, 495, 496], "salgado": [487, 488, 492, 495, 496], "635": 487, "12782": 487, "632": 487, "624": [487, 488], "ctxmanag": 487, "ctxmanager1": 487, "ctxmanager2": 487, "example1": 487, "example2": 487, "ctxmanager3": 487, "example3": 487, "lysandro": [487, 496], "nikola": [487, 496], "40334": [487, 496], "some_other_cod": 487, "eol": 487, "42864": 487, "batuhan": [487, 488, 495, 496], "taskaya": [487, 488, 495, 496], "40176": 487, "43914": 487, "rocket": 487, "event_horizon": 487, "42997": 487, "unparenthesis": 487, "43017": 487, "43822": 487, "build_dyson_spher": 487, "notenoughscienceerror": 487, "notenoughresourceserror": 487, "43149": 487, "43823": 487, "44305": 487, "43797": 487, "all_black_hol": 487, "revel": 487, "41064": 487, "lel": 487, "namedtoplo": 487, "38530": 487, "schwarzschild_black_hol": 487, "schwarschild_black_hol": 487, "pattern_1": 487, "action_1": 487, "pattern_2": 487, "action_2": 487, "pattern_3": 487, "action_3": 487, "action_wildcard": 487, "scala": 487, "elixir": 487, "imper": 487, "insur": 487, "test_vari": 487, "maggi": [487, 495], "moss": 487, "prado": 487, "41428": 487, "yurii": [487, 488, 496], "karaba": [487, 488, 496], "44490": 487, "jin": [487, 488, 493, 494, 495, 496], "41559": 487, "jell": [487, 488, 493, 494], "zijlstra": [487, 488, 493, 494], "43783": 487, "mendoza": [487, 488], "unannot": 487, "strcach": 487, "log_prefix": 487, "mikhail": 487, "golubev": 487, "41923": 487, "43766": 487, "traut": [487, 488], "nikla": [487, 488], "fieka": 487, "29882": 487, "sweenei": [487, 488, 496], "40890": 487, "37999": 487, "shkop": 487, "38302": 487, "shannon": [487, 488, 490, 494, 495, 496], "42990": 487, "joshua": [487, 492], "bronson": [487, 495], "pope": 487, "justin": [487, 490], "wang": [487, 494], "31861": 487, "43682": 487, "42737": 487, "43901": 487, "42725": 487, "effectless": 487, "43475": 487, "donghe": [487, 488, 495, 496], "45000": 487, "gr\u00f6nholm": [487, 488, 495], "41332": 487, "9694": 487, "lorentsen": [487, 494], "zackeri": [487, 488, 495, 496], "spytz": [487, 488, 495, 496], "31956": 487, "clearbreakpoint": 487, "irit": [487, 488], "katriel": [487, 488], "24160": 487, "4356": 487, "hai": [487, 488], "shi": [487, 488], "41842": 487, "42195": [487, 496], "joongi": 487, "kim": 487, "41229": 487, "gringauz": 487, "41543": 487, "kintscher": 487, "petter": [487, 495], "jansson": 487, "36982": 487, "39273": 487, "42269": 487, "43532": 487, "bdist_wheel": [487, 488, 495, 496], "42802": 487, "42133": 487, "normalize_encod": [487, 496], "39337": 487, "enum_nam": 487, "ethan": [487, 488, 490, 491, 492, 493, 494, 495, 496], "furman": [487, 490, 491, 492, 493, 494], "40066": 487, "41816": 487, "inada": [487, 488, 492, 493, 494, 495, 496], "naoki": [487, 488, 492, 493, 494, 495, 496], "43712": 487, "5758": 487, "44466": 487, "43439": 487, "38144": 487, "43669": 487, "38820": 487, "43880": 487, "40645": 487, "hilton": [487, 488, 496], "43008": [487, 496], "40468": [487, 496], "33962": [487, 496], "sidebar": 487, "tal": [487, 492, 493, 494, 495], "einat": [487, 492, 493, 494, 495], "37903": 487, "37892": 487, "44010": 487, "pyi": [487, 488, 496], "waygood": [487, 488, 496], "45447": [487, 488, 496], "95191": [487, 488], "pariti": 487, "relatedli": 487, "from_funct": [487, 488, 492], "43817": 487, "38200": 487, "rto": 487, "peix": 487, "xin": 487, "41440": 487, "eventfd2": 487, "41001": 487, "41625": 487, "43106": 487, "barnei": 487, "gale": 487, "43757": 487, "35498": 487, "yaroslav": 487, "pankovych": 487, "21041": 487, "39950": 487, "39906": 487, "28468": 487, "sblondon": 487, "42914": 487, "lewi": 487, "gaul": 487, "43080": 487, "schevchenko": 487, "38731": 487, "avir": 487, "srivastava": 487, "38307": 487, "34204": 487, "tymoteusz": 487, "wo\u0142od\u017ako": 487, "38490": 487, "42413": 487, "mptcp": 487, "rui": 487, "cunha": 487, "43571": 487, "ToS": 487, "dscp": 487, "ecn": 487, "sauthoff": 487, "44077": 487, "43794": 487, "43788": 487, "43791": 487, "43799": 487, "43920": 487, "43789": 487, "43811": 487, "hynek": [487, 490, 491], "schlawack": [487, 490, 491], "43998": 487, "31870": 487, "42333": 487, "l0x": 487, "40849": 487, "erlend": [487, 488], "aasland": [487, 488], "43762": 487, "23427": 487, "42955": 487, "43356": 487, "mario": [487, 494], "corchero": [487, 494], "42251": 487, "42308": 487, "bussonni": [487, 494, 495], "26389": 487, "beek": 487, "41810": 487, "42345": [487, 496], "41792": 487, "38908": 487, "sebastian": [487, 488], "rittau": [487, 488], "yan": 487, "choi": 487, "39385": 487, "goldschmidt": [487, 493, 494, 495, 496], "42967": [487, 493, 494, 495, 496], "_unsafe_url_bytes_to_remov": [487, 493, 494, 495, 496], "88048": [487, 493, 494, 496], "jonathan": [487, 490, 492, 495], "gossag": 487, "35018": 487, "42131": 487, "desmond": 487, "cheong": 487, "14678": 487, "41334": 487, "41006": 487, "41718": 487, "yuri": [487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "selivanov": [487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "42093": 487, "42927": 487, "micropython": 487, "38980": 487, "_compress": 487, "decompressread": 487, "09x": 487, "20x": 487, "32x": 487, "11x": 487, "18x": 487, "lin": [487, 488], "41486": 487, "42202": 487, "str1": 487, "str2": 487, "crochemor": 487, "41972": 487, "dino": [487, 493, 496], "viehland": [487, 493, 496], "43452": 487, "jeroen": [487, 493, 495, 496], "demey": [487, 493, 495, 496], "43575": 487, "43287": 487, "41922": 487, "41873": 487, "41870": 487, "43785": 487, "0in": 487, "1or": 487, "0if": 487, "1els": 487, "0x1for": 487, "43833": 487, "37319": 487, "26131": 487, "zimport": 487, "42134": 487, "43672": 487, "42135": 487, "set_package_wrapp": [487, 488], "set_loader_wrapp": [487, 488], "43720": 487, "42137": 487, "frozenload": [487, 488], "builtinload": [487, 488], "42136": 487, "optimizedunicod": [487, 488], "42264": 487, "enable_shared_cach": [487, 488], "24464": 487, "87889": 487, "41139": 487, "sslsslcontext": 487, "44584": 487, "41974": 487, "parserbas": 487, "berker": [487, 491, 492, 493, 494, 495], "peksag": [487, 491, 492, 493, 494, 495], "31844": 487, "_pyunicode_name_capi": 487, "42157": 487, "graminit": 487, "pyparser_simpleparsestringflag": [487, 496], "pyparser_simpleparsestringflagsfilenam": [487, 496], "pyparser_simpleparsefileflag": [487, 496], "pynode_compil": [487, 496], "42299": 487, "pymodule_getwarningsmodul": 487, "42599": 487, "37324": 487, "multifold": 487, "svetlov": [487, 488, 491, 494, 495, 496], "stanlei": [487, 493, 494, 495, 496], "42392": 487, "42639": 487, "42393": 487, "_node": 487, "io_modul": 487, "import_importmodul": 487, "source_bytes_object": 487, "source_buf": 487, "wordcod": [487, 493], "36020": 487, "sergei": [487, 488, 496], "fedoseev": [487, 496], "40744": 487, "40810": 487, "xavier": [487, 491, 493, 494], "gay": [487, 491, 493, 494], "petazzoni": 487, "27640": 487, "42856": 487, "43103": 487, "tcltk": [487, 488, 489, 496], "manoli": 487, "stamatogiannaki": 487, "42603": 487, "43466": 487, "petr": [487, 488, 492, 494, 495, 496], "viktorin": [487, 488, 492, 495, 496], "43795": 487, "40792": 487, "30155": 487, "matveev": [487, 495], "41756": 487, "41784": 487, "1635741": 487, "42262": 487, "42423": 487, "41832": 487, "41073": 487, "43277": 487, "36465": [487, 495], "43688": 487, "43753": 487, "43916": 487, "43908": [487, 488], "40943": 487, "new_refcnt": 487, "0x030900a4": [487, 488], "39573": [487, 488], "40839": 487, "36346": [487, 496], "42260": 487, "30459": 487, "odictobject": 487, "parser_interfac": 487, "picklebufobject": 487, "pyarena": 487, "pyfp": [487, 496], "pytim": 487, "sim": 487, "35134": [487, 488, 495], "py_frozenmain": 487, "26241": 487, "41692": 487, "py_unicode_str": 487, "41123": [487, 488], "py_unicode_strlen": [487, 490], "py_unicode_strcat": [487, 490], "py_unicode_strcpi": [487, 490], "py_unicode_strncpi": [487, 490], "py_unicode_strcmp": [487, 490], "py_unicode_strncmp": [487, 490], "py_unicode_strchr": [487, 490], "py_unicode_strrchr": [487, 490], "pyunicode_getmax": [487, 490], "41103": 487, "pylong_fromunicod": 487, "pyunicode_asunicodecopi": [487, 490], "_py_checkrecursionlimit": [487, 496], "recursion_limit": [487, 488], "41834": 487, "py_allow_recurs": 487, "py_end_allow_recurs": 487, "recursion_crit": 487, "41936": 487, "pyos_initinterrupt": 487, "41713": 487, "pyast_valid": 487, "43244": 487, "pyst_getscop": 487, "pysymtable_build": 487, "pysymtable_buildobject": 487, "pysymtable_fre": 487, "py_symtablestr": 487, "py_symtablestringobject": 487, "43868": 487, "winbas": 487, "_mod": 487, "pyast_compileex": 487, "pyast_compileobject": 487, "pyfuture_fromast": 487, "pyfuture_fromastobject": 487, "pyparser_astfromfileobject": 487, "pyparser_astfromfilenam": 487, "pyparser_astfromstringobject": 487, "pyarena_new": 487, "pyarena_fre": 487, "pyarena_malloc": 487, "pyarena_addpyobject": 487, "use_trac": [487, 488], "43760": [487, 488], "98966": 487, "25x": 488, "680": 488, "manhattan_dist": 488, "point_1": 488, "point_2": 488, "magic_arithmet": 488, "add_count": 488, "query_us": 488, "query_count": 488, "ammar": [488, 493, 494, 495], "askar": [488, 493, 494, 495], "43950": 488, "45292": 488, "45607": 488, "zac": 488, "hatfield": 488, "dodd": 488, "otherpython": 488, "tensorflow": 488, "rahtz": 488, "43224": 488, "pradeep": 488, "kumar": 488, "srinivasan": 488, "sile": 488, "panther": 488, "47087": 488, "mylock": 488, "myint": 488, "balf": 488, "46534": 488, "table_nam": 488, "47088": 488, "bleanei": 488, "91860": 488, "bont": 488, "46725": 488, "33346": 488, "12022": 488, "44471": 488, "70766": 488, "26579": 488, "57684": 488, "90153": 488, "broke": 488, "grainger": 488, "91181": 488, "24234": 488, "29410": 488, "45711": 488, "_pyerr_stackitem": 488, "bastian": 488, "neuburg": 488, "44934": 488, "46142": 488, "tane": 488, "hukkinen": 488, "40059": 488, "42012": 488, "90908": 488, "90927": 488, "91218": 488, "duprat": 488, "87518": 488, "34975": 488, "46805": 488, "filip": [488, 490, 491, 495], "la\u00edn": 488, "25625": 488, "44674": 488, "kabir": 488, "kwatra": 488, "91973": 488, "ganssl": [488, 494, 495, 496], "80010": 488, "aflag": 488, "kirpichev": 488, "44258": 488, "some_fract": 488, "44547": 488, "46014": 488, "libb2": 488, "47095": 488, "_sha3": 488, "tiny_sha3": 488, "47098": 488, "89313": 488, "weipeng": [488, 495], "hong": [488, 495], "30533": 488, "hakan": 488, "\u00e7elik": 488, "29418": 488, "88116": 488, "andrei": 488, "kulakovin": 488, "88024": 488, "kiril": 488, "pinchuk": 488, "88457": 488, "gideon": 488, "45917": 488, "ajith": 488, "ramachandran": 488, "44357": 488, "44339": 488, "46917": 488, "antoni": 488, "44019": 488, "44611": 488, "eisuk": 488, "kawasima": 488, "22276": 488, "33392": 488, "433030": 488, "46245": 488, "klausner": 488, "30512": 488, "29980": 488, "44491": 488, "44688": 488, "aviv": [488, 493, 495], "palivoda": [488, 493, 495], "shahaf": [488, 492], "16379": 488, "24139": 488, "45243": 488, "45613": 488, "45828": 488, "44092": 488, "41930": 488, "34916": 488, "24905": 488, "keho": 488, "90465": 488, "46328": 488, "miro": 488, "hron\u010dok": 488, "45413": 488, "carei": 488, "metcalf": 488, "70363": 488, "sem_clockwait": 488, "41710": 488, "sz\u0151ke": 488, "21302": 488, "45429": 488, "info_patchlevel": 488, "91827": 488, "44569": 488, "33809": 488, "90633": 488, "90572": 488, "90638": 488, "samodya": 488, "abeysiriwardan": 488, "89026": 488, "43923": 488, "shantanu": 488, "jain": 488, "91154": 488, "90500": 488, "89263": 488, "adrian": [488, 494], "badarasco": 488, "88970": 488, "91137": 488, "loosen": 488, "_type_check": 488, "beauregard": 488, "90802": 488, "rosenstein": 488, "85542": 488, "nikita": 488, "sobolev": 488, "90353": 488, "90711": 488, "90729": 488, "45190": 488, "45046": 488, "47074": 488, "turnbul": 488, "28080": 488, "ezeh": 488, "49083": 488, "miguel": 488, "brito": 488, "88261": 488, "28307": 488, "90564": 488, "behnel": [488, 491, 492, 494, 495], "68264": 488, "91165": 488, "272": 488, "46845": 488, "msoxzw": 488, "91487": 488, "37295": 488, "90415": 488, "44987": 488, "pyperform": 488, "aditya": 488, "sped": [488, 489, 492, 495, 496], "44590": 488, "7x": 488, "45256": 488, "outperform": 488, "superinstruct": 488, "brunthal": 488, "brandt": [488, 496], "bucher": [488, 496], "45947": 488, "45340": 488, "40116": 488, "40222": 488, "91404": 488, "2x": [488, 490, 493], "bloomberg": 488, "binary_": 488, "inplace_": 488, "call_function_kw": [488, 493], "call_method": [488, 494], "dup_top": 488, "dup_top_two": 488, "rot_two": 488, "rot_thre": 488, "rot_four": [488, 495], "rot_n": 488, "jump_if_not_exc_match": [488, 496], "jump_absolut": 488, "pop_jump_if_fals": [488, 489], "pop_jump_if_tru": 488, "pop_jump_backward_if_": 488, "pop_jump_forward_if_": 488, "not_non": 488, "setup_with": 488, "setup_async_with": 488, "89874": 488, "copy_dict_without_kei": 488, "gen_start": 488, "pop_block": 488, "setup_fin": 488, "19072": 488, "89519": 488, "81548": 488, "44977": 488, "47061": 488, "68966": 488, "hugo": [488, 491, 496], "kemenad": [488, 496], "47022": 488, "40360": [488, 496], "sre_compil": 488, "sre_const": [488, 492], "sre_pars": 488, "47152": 488, "safeconfigpars": [488, 489], "45173": 488, "legacyinterpol": 488, "46607": 488, "90817": 488, "91760": 488, "92728": 488, "45837": 488, "unplan": 488, "jingchen": 488, "90224": 488, "untest": 488, "42255": 488, "findtestcas": 488, "makesuit": 488, "5846": 488, "usageexit": 488, "dam\u00e1zio": 488, "67048": 488, "illia": 488, "volochii": 488, "43216": 488, "corowrapp": 488, "45129": 488, "binhex": [488, 496], "a2b_hqx": [488, 496], "b2a_hqx": [488, 496], "rlecode_hqx": [488, 496], "rldecode_hqx": 488, "45085": 488, "bdist_msi": [488, 496], "45124": 488, "45132": 488, "lgettext": [488, 495], "ldgettext": [488, 495], "lngettext": [488, 495], "ldngettext": [488, 495], "set_output_charset": [488, 495], "44235": 488, "formatargspec": [488, 492], "from_builtin": [488, 492], "45320": 488, "46483": 488, "mailmanproxi": [488, 496], "35800": [488, 496], "tkapptyp": [488, 496], "38371": [488, 496], "23882": 488, "__set_format__": 488, "__setformat__": 488, "46852": 488, "experimental_isolated_subinterpret": 488, "pynch": 488, "37330": 488, "93351": 488, "43234": 488, "46659": 488, "sriniva": [488, 494], "reddi": [488, 494], "thatiparthi": [488, 494], "\u0c36": 488, "\u0c30": 488, "\u0c28": 488, "\u0c35": 488, "\u0c38": 488, "\u0c21": 488, "\u0c24": 488, "\u0c1f": 488, "\u0c2a\u0c30": 488, "41137": 488, "40465": [488, 496], "47066": 488, "35859": 488, "tier": 488, "84461": 488, "90473": 488, "95085": 488, "c11": [488, 490], "46656": 488, "45440": 488, "46640": 488, "py_no_nan": 488, "46996": 488, "libnsl": 488, "libsqlite3": 488, "libcrypt": 488, "egeberg": 488, "45847": 488, "45747": 488, "45763": 488, "gilbert": 488, "45433": 488, "holman": 488, "44340": 488, "freelist": 488, "45522": 488, "45548": 488, "45570": 488, "45571": 488, "43974": 488, "tcltk_cflag": 488, "tcltk_lib": 488, "rhel": [488, 494], "ltk8": 488, "ltkstub8": 488, "ltcl8": 488, "rhel7": 488, "sizeof_void_p": 488, "45569": 488, "42035": 488, "tornetta": 488, "43931": 488, "45459": 488, "46613": 488, "46906": 488, "46343": 488, "89653": 488, "46608": 488, "exception_t": 488, "46841": 488, "92154": 488, "94936": 488, "py_trashcan_safe_begin": [488, 496], "py_trashcan_safe_end": [488, 496], "py_trashcan_begin": [488, 496], "py_trashcan_end": [488, 496], "mytype_dealloc": 488, "0x03080000": [488, 495], "cpy_trashcan_begin": 488, "cpy_trashcan_end": 488, "44263": 488, "new_typ": 488, "_py_set_typ": 488, "_py_set_s": 488, "0x030b0000": 488, "45434": 488, "cellobject": 488, "genobject": 488, "longintrepr": 488, "pyunicode_check_intern": 488, "46007": 488, "93937": 488, "f_blockstack": 488, "f_gen": 488, "f_iblock": 488, "f_stackdepth": 488, "f_state": 488, "f_frame": 488, "f_localsplu": 488, "localsplu": 488, "f_valuestack": 488, "pyframe_fasttolocalswitherror": 488, "pyframe_localstofast": 488, "0x030900b1": 488, "pythoncapi_compat": 488, "40429": 488, "recursion_depth": [488, 496], "recursion_remain": 488, "stackcheck_count": 488, "0x030b00a2": 488, "0x030a00a1": 488, "cframe": 488, "c_tracefunc": 488, "c_profilefunc": 488, "pythoncapi": 488, "_py_setprogramfullpath": 488, "88279": 488, "ob_shash": 488, "46864": 488, "pyunicode_is_compact": 488, "pyunicode_is_readi": 488, "pyunicode_wstr_length": [488, 496], "_pyunicode_asunicod": [488, 496], "pyframe_blocksetup": 488, "pyframe_blockpop": 488, "py_adjust_erange1": 488, "py_adjust_erange2": 488, "py_overflow": 488, "py_set_erange_if_overflow": 488, "py_set_errno_on_math_error": 488, "45412": 488, "py_unicode_copi": [488, 490, 496], "py_unicode_fil": [488, 490, 496], "pystrhex": 488, "py_force_doubl": 488, "py_is_infin": 488, "45474": 488, "pyheaptype_get_memb": 488, "40170": [488, 496], "have_py_set_53bit_precis": 488, "pyunicode_encod": [488, 490], "pyunicode_encodeascii": [488, 490], "pyunicode_encodelatin1": [488, 490], "pyunicode_encodeutf7": [488, 490], "pyunicode_encodeutf8": [488, 490], "pyunicode_encodeutf16": [488, 490], "pyunicode_encodeutf32": [488, 490], "pyunicode_encodeunicodeescap": [488, 490], "pyunicode_encoderawunicodeescap": [488, 490], "pyunicode_encodecharmap": [488, 490], "pyunicode_translatecharmap": [488, 490], "pyunicode_encodedecim": [488, 490], "pyunicode_transformdecimaltoascii": [488, 490], "44029": 488, "392": 489, "sneezi": 489, "sleepi": 489, "skycaptain": 489, "manage_cloud": 489, "helm": 489, "parser_l": 489, "missil": 489, "torpedo": 489, "parser_m": 489, "vessel": 489, "console_prior": 489, "commonplac": 489, "unladen10": 489, "py32": 489, "pyload": [489, 491], "pypycload": [489, 491], "pyshar": 489, "32m": 489, "33md": 489, "soabi": 489, "32mu": 489, "ext_suffix": [489, 491], "status": 489, "salient": 489, "pathwai": 489, "0o24": 489, "7094": 489, "shl": 489, "project_nam": 489, "lowercaseddict": 489, "lcd": 489, "placeholderdict": 489, "6081": 489, "marcin": 489, "wojdyr": 489, "1772833": 489, "9666": 489, "9337": 489, "abcdefgh": [489, 491], "9757": 489, "4617": 489, "8413": 489, "10093": 489, "477863": 489, "9213": 489, "2690": 489, "10889": 489, "10518": 489, "aggrav": 489, "9425": 489, "undergon": 489, "4661": 489, "10321": 489, "get_phone_numb": 489, "phonenumb": 489, "phonelist": 489, "user_request": 489, "4805": 489, "980": 489, "baker": 489, "498245": 489, "577479": 489, "10586": 489, "10593": 489, "terrenc": 489, "9567": 489, "3445": 489, "8814": 489, "prob_dist": 489, "renew": 489, "resequenc": 489, "simsalabim": 489, "get_vot": 489, "ballot": 489, "conduct_elect": 489, "all_polls_clos": 489, "lockbox": 489, "seal_ballot": 489, "deposit": 489, "8777": 489, "923754": 489, "accept2dyear": [489, 490], "guesswork": 489, "1289118": 489, "5094": 489, "6641": 489, "2706": 489, "1777412": 489, "8013": 489, "10827": 489, "013671875": 489, "013765762467652909": 489, "682689492137086": 489, "31731050786291404": 489, "gamma_funct": 489, "801": 489, "4551": 489, "950730698041": 489, "temperatur": 489, "from_fahrenheit": 489, "from_celsiu": 489, "urban": [489, 491], "5867": 489, "rec_len": 489, "loc_start": 489, "loc_len": 489, "change_loc": 489, "record_numb": 489, "byte_stream": 489, "g3805": 489, "storeroom": 489, "chassi": 489, "x7899": 489, "cog": 489, "l6988": 489, "sprocket": 489, "showroom": 489, "5506": 489, "9826": 489, "9840": 489, "susan": 489, "salesl": 489, "talbot": 489, "5975": 489, "abraham": 489, "1537721": 489, "duti": 489, "9110": 489, "8188": 489, "2305843009213693951": 489, "314159": 489, "1000003": 489, "8540": [489, 490], "log1": 489, "rodol\u00e0": [489, 490, 495], "4972": [489, 492], "8046": 489, "1286": 489, "8806": 489, "7461": 489, "10554": 489, "s\u00e9bastien": 489, "sabl\u00e9": 489, "9862": 489, "3488": 489, "9962": 489, "1675951": 489, "redact": 489, "general_quest": 489, "3514": 489, "prion": 489, "py_todo": 489, "1399": 489, "semaphore_not": 489, "md2": 489, "dsawithsha": 489, "mdc2": 489, "md4": 489, "ripemd160": 489, "dsa": 489, "dsaencrypt": 489, "0x101739a10": 489, "sehensw\u00fcrdigkeiten": 489, "sehensw": 489, "xc3": 489, "xbcrdigkeiten": 489, "in_transit": 489, "shashwat": 489, "8845": 489, "8524": 489, "9794": 489, "8850": 489, "1589": 489, "5639": 489, "4870": 489, "dysfunct": 489, "9360": 489, "vant": 489, "1926": 489, "9003": 489, "lorenzo": [489, 491], "catucci": [489, 491], "4471": 489, "10980": 489, "10620": 489, "my_proj_dir": 489, "9754": 489, "test_anagram": 489, "volumin": 489, "9424": 489, "misimpl": 489, "optic": 489, "9025": 489, "8807": 489, "6706": 489, "5178": 489, "rodolpho": 489, "eckhardt": 489, "10220": 489, "0x1022bd788": 489, "pydoc3": 489, "ron": 489, "newloc": 489, "nofre": 489, "_randbelow": 489, "binary_modulo": 489, "binary_multipli": 489, "binary_add": [489, 491], "binary_floor_divid": 489, "9147": 489, "rai": [489, 491], "9523": 489, "raymondhetting": 489, "os2": 489, "os2_hom": 489, "bindir": 489, "binlibdest": 489, "includepi": 489, "libdest": 489, "projectbas": 489, "py_version_nodot": 489, "py_version_short": 489, "antonio": 489, "cuni": 489, "ilya": [489, 494], "sandler": 489, "pluggabl": [489, 491, 493], "ambv": 489, "zope9": 489, "plone": 489, "zope9instal": 489, "zope9inst": 489, "beef": 489, "cafe": 489, "5417": 489, "aff": 489, "8fa3": 489, "telenovela": 489, "d\u00f3nde": 489, "est\u00e1": 489, "elisa": 489, "bfd": 489, "f3nde": 489, "mahn": 489, "5468": 489, "9873": 489, "steffen": 489, "daod": 489, "nurpmeso": 489, "9124": 489, "10199": 489, "7316": 489, "torsten": [489, 490], "landschoff": [489, 490], "850728": 489, "kleckner": 489, "8844": 489, "operation": 489, "6690": 489, "9410": 489, "3873": 489, "9915": 489, "7451": 489, "10314": 489, "10x": [489, 490, 491, 494], "15x": [489, 496], "3001": 489, "stringlib": 489, "differenc": 489, "andress": 489, "bennett": 489, "8685": 489, "1569291": 489, "3709": [489, 490], "schaaf": [489, 490], "10160": 489, "christo": 489, "georgiou": 489, "7113": 489, "kannada": 489, "0cf1": 489, "0cf2": 489, "tai": 489, "lue": 489, "19da": 489, "disqualifi": 489, "cheatsheet": 489, "jog": 489, "adjunct": 489, "9528": 489, "7962": 489, "aquatk": 489, "6075": 489, "changeset": [489, 491], "385": 489, "workflow": 489, "10679": 489, "bupjo": 489, "5127": 489, "9203": 489, "wctype": 489, "9210": 489, "9778": 489, "py_va_copi": 489, "va_copi": 489, "2443": 489, "8837": 489, "buildscript": 489, "8990": 489, "setfilesystemencod": 489, "6shhbbb": 489, "gif87a": 489, "10783": 489, "10711": 489, "10272": 489, "398": 490, "segreg": 490, "meyer": [490, 495, 496], "13411": 490, "10181": 490, "u0010ffff": 490, "udbff": 490, "udfff": 490, "13054": 490, "becker": 490, "3561": 490, "gather_t": 490, "acc": 490, "renaud": 490, "blanch": 490, "zbigniew": 490, "j\u0119drzejewski": 490, "szmek": 490, "_extra_attribut": 490, "0x7f46b9fe31e0": 490, "amend": 490, "2377": 490, "13959": 490, "14605": 490, "14646": 490, "growth": 490, "delin": 490, "12753": 490, "13201": 490, "petri": 490, "lehtinen": 490, "12170": 490, "12380": 490, "10516": 490, "11388": 490, "13748": 490, "gruszczy\u0144ski": [490, 491, 495], "13521": 490, "9260": 490, "4966": 490, "3144": 490, "nadeem": [490, 491], "vawda": [490, 491], "\u00f8yvind": 490, "karlsen": 490, "6715": 490, "darren": 490, "11610": 490, "10868": 490, "1172711": 490, "ywjj": 490, "catalin": 490, "iacob": 490, "13641": 490, "13637": 490, "5863": 490, "pbzip2": 490, "1625": 490, "13216": 490, "65001": 490, "cp_utf8": 490, "chcp": 490, "cjk": 490, "12016": 490, "u52ff": 490, "u65bd": 490, "u65bc": 490, "u4eba": 490, "u3002": 490, "npj": 490, "l6hk": 490, "12100": 490, "11089": 490, "11297": 490, "11085": 490, "13121": 490, "13585": 490, "10924": 490, "ncursesw": 490, "waddwstr": 490, "i\u00f1igo": 490, "serna": 490, "6755": 490, "15006": 490, "7652": 490, "100x": 490, "bytereef": 490, "mpdecim": 490, "quickstart": 490, "120x": 490, "telco": 490, "psycopg": 490, "12x": 490, "watchexp": 490, "465484": 490, "72000": 490, "89ric": 490, "pal": 490, "salli": 490, "bonzo": 490, "bonz": 490, "ought": 490, "8594": 490, "12139": 490, "11072": 490, "13227": 490, "15061": 490, "13295": 490, "kuhn": 490, "13464": 490, "htmlparseerror": 490, "15114": [490, 491, 492], "14538": 490, "13993": 490, "13960": 490, "13358": 490, "1745761": 490, "755670": 490, "13357": 490, "12629": 490, "1200313": 490, "670664": 490, "13273": 490, "12888": 490, "7311": 490, "11113": 490, "15156": 490, "sijin": 490, "joseph": [490, 493], "8808": 490, "13062": 490, "15153": 490, "townshend": 490, "12760": 490, "11888": 490, "12021": 490, "12328": 490, "4892": 490, "6064": 490, "12708": 490, "9795": 490, "lagerwal": 490, "10882": 490, "4761": 490, "10755": 490, "14626": 490, "supports_follows_symlink": 490, "10784": 490, "8828": 490, "14127": 490, "13609": 490, "12720": 490, "9344": 490, "dlfcn": [490, 493], "13226": 490, "14210": 490, "14166": 490, "3665": 490, "13449": 490, "8684": 490, "delayfunct": 490, "13245": 490, "6397": 490, "12442": 490, "sandro": 490, "tosi": 490, "12191": 490, "15238": 490, "12715": 490, "niehof": 490, "9993": 490, "4489": 490, "8407": 490, "elho": 490, "trevino": 490, "juhana": 490, "jauhiainen": 490, "orr\u00f9": [490, 491, 495, 496], "boswel": 490, "8739": 490, "paulo": 490, "scardin": 490, "11281": 490, "11289": 490, "kasun": 490, "herath": 490, "8809": 490, "watson": 490, "6560": 490, "heiko": 490, "wundram": 490, "socketcan": 490, "lwn": 490, "253425": 490, "fuch": [490, 495], "tiago": 490, "gon\u00e7alv": 490, "10141": 490, "reliable_datagram_socket": 490, "goderbau": 490, "13777": 490, "10866": 490, "warkentin": 490, "11109": 490, "11688": 490, "12049": 490, "11183": 490, "simpkin": 490, "12803": 490, "13626": 490, "13627": 490, "scram": 490, "jacek": [490, 493], "konieczni": 490, "12551": 490, "13634": 490, "colin": 490, "14204": 490, "14837": 490, "11811": 490, "13635": 490, "14807": 490, "3163": 490, "8513": 490, "5870": 490, "11223": 490, "5689": 490, "9957": 490, "13857": 490, "10968": 490, "clock_": 490, "10278": 490, "14386": 490, "14588": 490, "winston": 490, "ewert": 490, "10775": 490, "1673007": 490, "xdg": 490, "gvf": 490, "calmett": 490, "13620": 490, "14493": 490, "12646": 490, "12306": 490, "14624": 490, "14738": 490, "15026": 490, "osf": 490, "9856": 490, "11377": 490, "13374": 490, "13988": 490, "py_unicode_match": [490, 496], "pyunicode_encodembc": 490, "12326": 490, "13847": 490, "14180": 490, "longstand": 490, "1079": 490, "1690608": 490, "11291": 490, "assertsameel": 490, "_clamp": 490, "sslfakefil": 490, "13550": 490, "smalltabl": 490, "pymemoryviewobject": [490, 492], "memoryobject": [490, 492], "xxxmodul": 490, "14040": 490, "10998": 490, "11591": 490, "rdmurrai": 491, "bitdanc": 491, "16499": 491, "16475": 491, "3156": 491, "450": 491, "454": 491, "8713": 491, "18891": 491, "18214": 491, "unvers": 491, "pip3": 491, "hex_decod": 491, "bz2_encod": 491, "68656c6c6f": 491, "7475": 491, "17827": 491, "17828": 491, "19619": 491, "stone": 491, "berman": 491, "18111": 491, "18416": 491, "kang": 491, "hao": 491, "12892": 491, "bierenfeld": 491, "1097797": 491, "19668": 491, "15958": 491, "16772": 491, "17934": 491, "popa": [491, 492], "18690": 491, "19078": 491, "16148": 491, "declin": 491, "eli": [491, 493, 495], "benderski": 491, "aprano": [491, 493, 495], "16832": 491, "bruno": [491, 492], "dupui": 491, "16049": 491, "17818": 491, "storchacha": 491, "16486": 491, "8311": 491, "maystr": 491, "11175": 491, "12866": 491, "19641": 491, "16685": 491, "17839": 491, "a85": 491, "17618": 491, "16613": 491, "fcc": 491, "ntsc": 491, "lander": [491, 494], "14323": 491, "15806": 491, "piraeu": 491, "19266": 491, "inflex": [491, 492], "15805": 491, "19282": 491, "kluyver": [491, 492, 493], "11816": 491, "17916": 491, "19722": 491, "16522": 491, "11390": 491, "3158": 491, "18600": 491, "email6": 491, "levitt": 491, "18149": 491, "15442": 491, "horev": 491, "4331": 491, "kati": 491, "10042": 491, "thorn": 491, "12428": 491, "16351": 491, "18582": 491, "coomb": [491, 495, 496], "18532": 491, "jona": [491, 494], "borgstr\u00f6m": 491, "18240": 491, "17276": 491, "247": 491, "18775": 491, "2927": 491, "13633": 491, "karl": [491, 496], "cow": 491, "12921": 491, "malt": 491, "swart": 491, "17764": 491, "15627": 491, "18072": 491, "18193": 491, "18192": 491, "18194": 491, "18058": 491, "19152": 491, "18626": 491, "unravel": 491, "aaron": 491, "13266": 491, "18929": 491, "19030": 491, "broader": 491, "17481": 491, "17159": 491, "routeabl": 491, "17400": 491, "9556": 491, "ce46195b56a9": 491, "16110": 491, "15452": 491, "bump": 491, "19219": 491, "valeri": 491, "4885": 491, "18999": 491, "19946": 491, "16694": 491, "nelson": 491, "yogesh": 491, "chaudhari": 491, "17914": 491, "11939": 491, "9035": 491, "uapi": 491, "18673": 491, "16596": 491, "osborn": 491, "18764": 491, "14455": 491, "4473": 491, "19132": 491, "17150": 491, "19674": 491, "20710": 491, "barnett": 491, "16203": 491, "lope": 491, "tavar": 491, "13592": 491, "17087": 491, "16595": 491, "19324": 491, "19343": 491, "16488": 491, "18794": 491, "13896": 491, "atsuo": 491, "ishimoto": 491, "1492704": 491, "11959": 491, "2118": 491, "15359": 491, "7171": 491, "poq": 491, "13773": 491, "16692": 491, "19689": 491, "18138": 491, "18143": 491, "18147": 491, "christien": 491, "8813": 491, "19292": 491, "17134": 491, "8109": 491, "calissu": 491, "18379": 491, "_stat": 491, "11016": 491, "hiem": 491, "17804": 491, "zack": 491, "weinberg": 491, "16624": 491, "getstatu": 491, "10197": 491, "18901": 491, "18878": 491, "19261": 491, "13390": 491, "5845": 491, "13477": 491, "18585": 491, "18725": 491, "18882": 491, "1565525": 491, "mathia": 491, "panzenb\u00f6ck": 491, "16423": 491, "18978": 491, "kachayev": [491, 492], "16464": 491, "wozniak": 491, "17485": 491, "brecht": [491, 492, 493], "17272": 491, "15701": 491, "16997": 491, "jyrki": 491, "pulliainen": 491, "15132": 491, "zach": 491, "16935": 491, "melin": 491, "ramnani": 491, "16709": 491, "wardil": 491, "mcclure": 491, "11798": 491, "18937": 491, "17457": 491, "17015": 491, "toshio": 491, "kuratomi": 491, "17467": 491, "15417": 491, "19552": 491, "17487": 491, "17616": 491, "5202": 491, "14631": 491, "15528": 491, "17643": 491, "17741": 491, "ariel": 491, "poliak": 491, "14377": 491, "19274": 491, "william": 491, "mallard": 491, "17201": 491, "14621": 491, "dsl": 491, "17162": 491, "bastien": 491, "montagn": 491, "16129": 491, "1772673": 491, "ysj": 491, "7330": 491, "dhiru": 491, "kholia": 491, "18596": 491, "16632": 491, "18338": 491, "18920": 491, "18922": 491, "18569": 491, "gcov": 491, "lcov": 491, "v\u00e1clav": 491, "\u0161milauer": 491, "16421": 491, "17853": 491, "pyfailmalloc": 491, "18408": 491, "18520": 491, "18807": 491, "18818": 491, "heanei": [491, 492], "vajraski": [491, 492], "kok": [491, 492], "19201": 491, "19222": [491, 492], "19223": 491, "3x": 491, "14625": 491, "linear_prob": 491, "18771": 491, "19218": 491, "19209": 491, "19205": 491, "9548": 491, "16034": 491, "16674": 491, "15596": 491, "15758": 491, "bryant": 491, "18020": 491, "18756": 491, "endtim": 491, "readplistfrombyt": [491, 494], "writeplisttobyt": 491, "18823": 491, "19375": 491, "16135": 491, "e52df05b496a": 491, "14470": 491, "16136": 491, "shlib_suffix": 491, "16754": 491, "tick_count": 491, "19199": 491, "tara": 491, "lyapun": 491, "15641": 491, "type_int64": 491, "riti": 491, "15480": 491, "isbjunk": 491, "isbpopular": 491, "sm": 491, "13248": [491, 493], "_gestalt": 491, "_mac_ver_lookup": 491, "_mac_ver_gstalt": 491, "_bcd2str": 491, "18393": 491, "17323": 491, "17115": 491, "module_to_load": 491, "19413": 491, "18065": 491, "is_frozen": 491, "felt": [491, 495], "interstiti": 491, "17434": 491, "b32": 491, "18011": 491, "9177": 491, "14794": 491, "16290": 491, "16967": 491, "17094": 491, "20625": 491, "19555": 491, "15204": 491, "16333": 491, "20784": 491, "16742": 491, "f_tstate": 491, "14432": 491, "elvi": [492, 493, 494, 495, 496], "pranskevichu": [492, 493, 494, 495, 496], "478": 492, "441": 492, "arnon": 492, "yaari": 492, "9951": 492, "23632": 492, "benno": 492, "lesli": 492, "24450": 492, "19235": 492, "lc_type": 492, "19977": 492, "22638": 492, "22796": 492, "rudimentari": 492, "http_get": 492, "nathaniel": [492, 494], "landau": 492, "girdhar": [492, 493], "detract": 492, "500000": 492, "evid": 492, "lehtosalo": 492, "intermitt": 492, "conceal": 492, "unguard": 492, "pernici": 492, "angelico": [492, 493], "99998": 492, "00003": 492, "00001": 492, "barker": 492, "19676": 492, "22286": 492, "23681": 492, "22682": 492, "22681": 492, "24064": 492, "17636": 492, "23491": 492, "paugh": 492, "j3": [492, 494], "eriksson": 492, "14910": 492, "proactor": 492, "22560": 492, "21326": 492, "yann": [492, 493], "sionneau": [492, 493], "korenberg": [492, 493], "jiryu": [492, 493], "davi": [492, 493], "nikolau": 492, "rath": 492, "15955": 492, "20289": 492, "24270": 492, "17442": 492, "16991": 492, "19505": 492, "23704": 492, "abscissa": 492, "jevnik": [492, 495], "22189": 492, "devin": 492, "jeanpierr": 492, "23086": 492, "24018": 492, "24184": 492, "16104": 492, "19628": 492, "21338": 492, "11271": 492, "21527": 492, "18159": 492, "22389": 492, "23171": 492, "4254": 492, "18039": 492, "2052": 492, "17445": 492, "5309": 492, "16314": 492, "glenn": 492, "15916": 492, "milan": [492, 494], "oberkirch": [492, 494], "20098": 492, "abhilash": 492, "raj": 492, "21083": 492, "24211": 492, "claud": 492, "paroz": 492, "16324": 492, "21706": 492, "wei": 492, "wu": 492, "23566": 492, "14373": 492, "13968": 492, "55555": 492, "6666": 492, "13742": 492, "demian": [492, 493], "21793": 492, "panter": [492, 493], "3566": 492, "maciej": 492, "szulik": 492, "21800": 492, "vignali": 492, "20295": 492, "fabric": 492, "anech": 492, "20197": 492, "17621": 492, "21156": 492, "20383": 492, "20726": 492, "20334": 492, "24190": 492, "17373": 492, "20691": 492, "24017": 492, "24400": 492, "16808": 492, "20578": 492, "16531": 492, "leon": 492, "20480": 492, "21650": 492, "19361": 492, "17911": 492, "c\u00e9dric": [492, 495], "krier": [492, 495], "13918": 492, "20537": 492, "22788": 492, "23185": 492, "22486": [492, 496], "21565": 492, "rosenberg": [492, 496], "22955": 492, "21176": 492, "22524": 492, "21719": 492, "22181": 492, "22054": 492, "dower": [492, 493, 494, 495, 496], "23668": 492, "rafik": 492, "draoui": 492, "10395": 492, "19775": 492, "21539": 492, "19776": 492, "mayank": 492, "tripathi": 492, "19777": 492, "spam42": 492, "welborn": 492, "20218": 492, "23611": 492, "21804": 492, "aac": 492, "sre_match": 492, "9179": 492, "22437": 492, "1519638": 492, "22578": 492, "cauet": 492, "22940": 492, "18931": 492, "19840": 492, "5411": 492, "22018": 492, "21076": 492, "19662": 492, "21795": 492, "21725": 492, "14758": 492, "15014": 492, "gavin": 492, "chappel": 492, "16914": 492, "22027": 492, "18615": 492, "22043": 492, "17552": 492, "23853": 492, "21455": 492, "21965": 492, "suboptim": 492, "20188": 492, "20421": 492, "20951": 492, "akira": 492, "19940": 492, "23186": 492, "23239": 492, "10203": 492, "sinclair": 492, "jessica": 492, "mckellar": 492, "13583": 492, "23342": 492, "set_coroutine_wrapp": [492, 494, 495], "get_coroutine_wrapp": [492, 494, 495], "22696": 492, "23437": 492, "21717": 492, "vogt": 492, "23193": 492, "21549": 492, "gindi": 492, "18983": 492, "2527": 492, "_fix": 492, "20035": 492, "kazakov": 492, "22619": 492, "16662": 492, "19746": 492, "22936": 492, "kushal": [492, 493], "21238": 492, "21262": 492, "johann": 492, "baiter": 492, "20968": 492, "h\u00e5kan": 492, "l\u00f6vdahl": 492, "23581": 492, "23568": 492, "17660": 492, "matej": 492, "cepl": [492, 496], "19494": 492, "akshit": 492, "khurana": [492, 494], "samwys": 492, "13866": 492, "22366": 492, "22118": 492, "torr": 492, "navarret": 492, "silentghost": [492, 493], "5800": 492, "20627": 492, "22960": 492, "2175": 492, "10590": 492, "23252": 492, "23001": 492, "findfirstfil": 492, "findnextfil": 492, "23605": 492, "21233": 492, "albert": [492, 494], "marku": 492, "21486": 492, "21487": 492, "20826": 492, "23266": 492, "23133": 492, "15381": 492, "22003": 492, "20416": 492, "23344": 492, "15027": 492, "19380": 492, "23206": 492, "22540": 492, "22847": 492, "23488": 492, "23910": 492, "22464": 492, "23573": 492, "_py_char2wchar": 492, "_py_wchar2char": 492, "18395": 492, "18711": 492, "24268": 492, "amd": [492, 493], "gnu32": 492, "win_amd64": 492, "win_ia64": 492, "win_arm": 492, "_d": 492, "legalchar": 492, "23671": 492, "linux_distribut": 492, "1322": 492, "24248": 492, "20438": 492, "22407": 492, "23622": 492, "chaput": 492, "6623": 492, "23464": 492, "21205": 492, "htmlparsererror": 492, "21047": 492, "16518": 492, "22834": 492, "23014": 492, "22818": 492, "2211": 492, "nnnn": 492, "pot": 492, "24284": 492, "15582": 492, "7830": 492, "22453": 492, "20204": 492, "python36": 493, "gonzalez": [493, 494], "ivan": [493, 494, 495], "levkivskyi": [493, 494, 495], "lisa": [493, 495], "1_000_000_000_000_000": 493, "1000000000000000": 493, "0x_ff_ff_ff_ff": 493, "ffff_ffff": 493, "ticker": 493, "pluginbas": 493, "plugin1": 493, "plugin2": 493, "teichmann": 493, "intfield": 493, "int_field": 493, "some_fil": 493, "dusti": 493, "koo": 493, "zevenhoven": 493, "27350": 493, "0x7fbcd41666f8": 493, "forbiddenbyt": 493, "0x7fbcd41666fc": 493, "ouch": 493, "1233329": 493, "1a": 493, "test_byt": 493, "648": 493, "0x00007fbcdbd32700": 493, "test_hex": 493, "26516": 493, "26564": 493, "21590": 493, "nikhil": 493, "benesch": 493, "barnert": 493, "25958": 493, "emanuel": 493, "26823": 493, "15767": 493, "23722": [493, 495], "26492": 493, "26146": 493, "28613": 493, "27041": 493, "27040": 493, "28370": 493, "25593": 493, "26221": 493, "27392": 493, "27456": [493, 494], "28003": 493, "26081": 493, "28544": 493, "25357": 493, "628": 493, "23229": 493, "27598": 493, "25987": 493, "28720": 493, "17941": 493, "25628": 493, "26482": 493, "27664": 493, "25609": 493, "24773": 493, "ashlei": 493, "anderson": 493, "12006": 493, "alessandro": 493, "cucci": 493, "19475": 493, "27661": 493, "25928": 493, "anticip": 493, "27819": 493, "24277": 493, "27331": 493, "20476": 493, "27959": 493, "23591": 493, "23848": 493, "hackman": 493, "25788": 493, "26470": 493, "26798": 493, "16113": 493, "bertoni": 493, "joan": 493, "daemen": 493, "micha\u00ebl": 493, "peeter": 493, "gill": 493, "assch": 493, "ronni": 493, "keer": 493, "27928": 493, "rolf": 493, "krahl": 493, "12319": 493, "tkfont": 493, "swiegart": 493, "24225": 493, "autocomplet": [493, 494], "louie": [493, 494], "15786": [493, 494], "cheryl": [493, 494, 495], "sabella": [493, 494, 495], "1612262": [493, 494], "wohlgang": [493, 494], "27099": [493, 494], "13802": [493, 494], "31860": [493, 494], "maxlin": [493, 494], "33642": [493, 494], "33768": [493, 494], "33679": [493, 494], "dpi": [493, 494], "sharper": [493, 494], "33656": [493, 494], "1529353": [493, 494, 495], "19611": 493, "churn": 493, "27172": 493, "17909": 493, "marian": 493, "horban": 493, "24884": 493, "davin": [493, 495], "pott": [493, 495], "6766": 493, "25994": 493, "27186": 493, "24164": 493, "25382": 493, "8637": 493, "24879": 493, "18844": 493, "ython": 493, "433028": 493, "24454": 493, "xiang": [493, 494, 495], "zhang": [493, 494, 495], "27177": 493, "tyler": 493, "crompton": 493, "26870": 493, "25011": 493, "25209": 493, "1521950": 493, "wolfgang": 493, "langner": 493, "26587": 493, "lordthorsen": 493, "16864": 493, "stoke": 493, "26536": 493, "26907": 493, "27744": 493, "crypto": 493, "omar": [493, 494], "sandov": [493, 494], "26273": [493, 494], "26404": 493, "26721": 493, "27850": 493, "27766": 493, "28043": 493, "19500": 493, "warhawk": 493, "28025": 493, "28085": 493, "78851": [493, 494], "27181": [493, 495], "11734": 493, "26741": 493, "6135": 493, "27781": 493, "27932": 493, "st\u00e9phane": [493, 494], "wirtel": [493, 494], "25485": 493, "6422": 493, "23552": 493, "trace_add": 493, "trace_remov": 493, "trace_info": 493, "trace_vari": 493, "trace_vdelet": 493, "trace_vinfo": 493, "22115": 493, "26588": 493, "280": 493, "189": 493, "amit": 493, "saha": 493, "26323": 493, "21271": 493, "nikolai": 493, "bogoychev": 493, "16099": 493, "balcerzak": 493, "22829": 493, "26568": 493, "26567": 493, "rouault": 493, "23026": 493, "27982": 493, "26885": 493, "26039": 493, "26243": 493, "16764": 493, "demur": 493, "rume": 493, "26647": 493, "28050": 493, "24870": 493, "25227": 493, "25267": 493, "25301": 493, "25349": 493, "25399": 493, "25401": 493, "snider": 493, "26574": 493, "26249": 493, "27056": 493, "27574": 493, "25596": 493, "26032": 493, "25638": 493, "25873": 493, "25869": 493, "25971": 493, "py_long_long": 493, "17884": 493, "ndk": 493, "lollipop": 493, "26865": 493, "alecsandru": 493, "patrascu": 493, "26359": 493, "5319": 493, "26282": 493, "0b4": 493, "223967b49e49": 493, "27243": 493, "27364": 493, "25791": 493, "mariatta": 493, "25002": 493, "21708": 493, "extra_path": 493, "27919": 493, "26129": 493, "26754": 493, "22493": 493, "28022": 493, "25154": 493, "61441": [493, 494], "fullmodnam": 493, "find_lines_from_cod": 493, "find_lin": 493, "find_str": 493, "find_executable_lin": 493, "tk_menubar": 493, "tk_bindfortravers": 493, "cdrom": 493, "cdio": 493, "stropt": 493, "chronic": 493, "h2py": 493, "show_track_count": 493, "23034": 493, "balogh": 493, "2091": 493, "25768": 493, "20059": 493, "taddei": 493, "ko\u0142odziej": 493, "23883": 493, "18018": 493, "23430": 493, "26685": 493, "18726": 493, "holden": 493, "27842": 493, "25287": 493, "lita": 493, "cho": 493, "21815": 493, "jakub": 493, "stasiak": 493, "26335": 493, "ramchandra": 493, "17211": 493, "25953": 493, "25483": 493, "27078": 493, "27140": 493, "build_map_unpack_with_cal": 493, "build_tuple_unpack_with_cal": 493, "call_function_var": 493, "call_function_var_kw": 493, "make_closur": 493, "27095": 493, "27213": 493, "28257": 493, "store_annot": [493, 494], "27985": 493, "pyexc_recursionerrorinst": [493, 494], "22898": [493, 494], "30697": [493, 494], "31900": [493, 494], "33899": [493, 494, 495], "37228": [493, 494, 495, 496], "trust_server_pasv_ipv4_address": [493, 494, 495, 496], "87451": [493, 494, 495, 496], "advent": 494, "glare": 494, "advers": 494, "from_str": 494, "validate_b": 494, "brai": 494, "masayuki": 494, "ja": 494, "ko": 494, "julien": 494, "palard": 494, "12844": 494, "18896": 494, "xiao": 494, "28927": 494, "32677": 494, "29546": 494, "30024": 494, "28974": 494, "30579": 494, "33053": 494, "31415": 494, "32248": 494, "importlib_resourc": [494, 496], "14191": 494, "32314": [494, 495], "32436": 494, "32311": 494, "23749": 494, "31819": 494, "32250": 494, "32251": 494, "32269": 494, "32391": 494, "32410": 494, "32415": 494, "32418": 494, "32662": 494, "32741": 494, "quentin": 494, "dawan": 494, "31245": 494, "create_accepted_socket": 494, "aspinal": 494, "29970": 494, "marat": 494, "sharafutdinov": 494, "31943": 494, "32193": 494, "32356": 494, "32066": 494, "30508": 494, "33792": 494, "30103": 494, "oz": 494, "tiram": 494, "30095": 494, "32320": 494, "31650": 494, "21423": 494, "moreau": 494, "31540": 494, "bakker": 494, "10049": 494, "29679": 494, "30241": 494, "mohr": 494, "kulakov": 494, "29302": 494, "sanyam": 494, "21862": 494, "31664": 494, "31702": 494, "15873": 494, "5288": 494, "32630": 494, "11822": 494, "11913": 494, "31801": 494, "33217": 494, "32227": 494, "zekun": 494, "31558": 494, "32433": 494, "soffer": 494, "31945": 494, "pierr": [494, 495], "quentel": 494, "29654": 494, "28707": 494, "31639": 494, "5680": [494, 495], "37627": [494, 495], "saimadhav": [494, 495], "heblikar": [494, 495], "17535": [494, 495], "garvit": 494, "khatri": 494, "29851": 494, "30436": 494, "30526": 494, "15216": 494, "20825": 494, "30537": 494, "10379": 494, "30520": 494, "30522": 494, "31080": 494, "29962": 494, "nitish": 494, "chandra": 494, "22589": 494, "20486": 494, "30596": 494, "vitor": 494, "pereira": 494, "30794": 494, "18966": 494, "28682": 494, "25996": 494, "16500": 494, "31368": 494, "19930": 494, "32441": 494, "32659": 494, "ry": 494, "30897": 494, "31389": 494, "32206": 494, "bernhard": 494, "wiedemann": 494, "29708": 494, "feanil": 494, "patel": 494, "31128": 494, "14976": 494, "31690": 494, "25054": 494, "30215": 494, "30349": 494, "10076": 494, "30050": 494, "32373": 494, "32454": 494, "29728": 494, "cathi": 494, "averi": 494, "27584": 494, "28134": 494, "lele": 494, "gaifax": 494, "27645": 494, "31843": 494, "31399": 494, "libssl": 494, "libressl": 494, "32185": 494, "mandeep": 494, "singh": 494, "23033": 494, "blacklist": 494, "whitelist": 494, "31429": 494, "28414": 494, "32947": 494, "20995": 494, "29136": 494, "30622": 494, "33618": 494, "32951": 494, "32609": 494, "1198569": 494, "bo": [494, 495], "bayl": [494, 495], "32102": [494, 495], "clegg": 494, "31756": 494, "segev": 494, "19764": 494, "grace": 494, "25942": 494, "31353": 494, "28740": 494, "32591": 494, "32025": 494, "32585": 494, "32121": 494, "manuel": [494, 495], "krebber": 494, "29377": 494, "32265": 494, "32717": 494, "haag": 494, "32071": 494, "20804": 494, "30541": 494, "theun": 494, "ratnadeep": 494, "debnath": 494, "16285": 494, "22807": 494, "32107": 494, "20361": 494, "32043": 494, "32230": 494, "31975": 494, "31648": 494, "simplexmlrpcdispatch": 494, "7769": 494, "irmen": 494, "jong": 494, "31072": 494, "zhime": 494, "31638": 494, "21417": 494, "30693": 494, "25658": 494, "28411": 494, "victorin": 494, "23699": 494, "31338": 494, "30054": 494, "31574": 494, "28761": 494, "28769": 494, "milman": 494, "28280": 494, "27867": 494, "10381": 494, "30708": 494, "abid": 494, "29102": 494, "29240": 494, "28822": 494, "31370": 494, "27979": 494, "30450": 494, "29300": 494, "29507": 494, "29452": 494, "29286": 494, "29585": 494, "31333": 494, "26110": 494, "32296": 494, "32348": 494, "32355": 494, "32351": 494, "31970": 494, "32226": 494, "elliot": 494, "gorokhovski": 494, "28685": 494, "31179": 494, "32544": 494, "\u0454": 494, "24821": 494, "28638": 494, "32403": 494, "28564": 494, "30285": 494, "31671": 494, "30014": 494, "eugen": 494, "toder": 494, "29469": 494, "11549": 494, "70x": 494, "wielgosik": 494, "24700": 494, "26121": 494, "31344": 494, "32305": 494, "32303": 494, "32690": 494, "32304": 494, "10544": [494, 495], "28894": 494, "openfp": [494, 496], "31985": 494, "32253": 494, "25988": 494, "28847": 494, "28692": 494, "29576": 494, "chi": 494, "hsuan": 494, "yen": 494, "9850": 494, "_dummy_thread": [494, 496], "28332": 494, "28124": 494, "28799": 494, "nix": 494, "jessi": 494, "trusti": 494, "xenial": 494, "sle": 494, "sp3": 494, "splitunc": 494, "_internaldict": 494, "_overlap": 494, "install_misc": 494, "vander": 494, "weel": 494, "29218": 494, "fpectl": 494, "29137": 494, "30291": 494, "0p": 494, "30362": 494, "30406": 494, "32670": 494, "31709": 494, "32012": 494, "32023": 494, "31233": 494, "33540": 494, "31151": 494, "24744": 494, "29193": 494, "29192": 494, "21071": 494, "29979": 494, "30399": 494, "utkarsh": 494, "upadhyai": 494, "30302": 494, "32308": 494, "29995": 494, "32331": 494, "33169": 494, "32327": 494, "sottil": [494, 495, 496], "26510": 494, "31778": 494, "28292": 494, "32792": 494, "nemec": 494, "33097": 494, "tocknel": 494, "23835": 494, "32550": 494, "28137": 494, "latent": 494, "22257": 494, "25612": 494, "34247": 494, "affection": 495, "tusk": 495, "discount": 495, "clean_nam": 495, "allowed_nam": 495, "emili": 495, "morehous": 495, "35224": 495, "impair": 495, "36540": 495, "33499": 495, "21536": 495, "36722": 495, "36721": 495, "eric_idl": 495, "member_sinc": 495, "075": 495, "theta": 495, "36817": 495, "_pyruntimest": 495, "36763": 495, "36974": [495, 496], "36785": 495, "32489": 495, "33073": 495, "37819": 495, "20092": 495, "copyright_year_pattern": 495, "eunic": 495, "30688": 495, "r\u00e9mi": [495, 496], "lapeyr": [495, 496], "33462": 495, "34641": 495, "simpson": 495, "homer": 495, "marg": 495, "bart": 495, "cuthbert": 495, "jordan": 495, "32117": 495, "15248": 495, "32417": 495, "1054041": 495, "37032": 495, "137": 495, "diophantin": 495, "4258\ud835\udc65": 495, "147\ud835\udc66": 495, "369": 495, "36027": 495, "j\u00f6rn": 495, "heissler": 495, "glaser": 495, "olivi": 495, "grisel": 495, "35900": 495, "chardet": 495, "34632": 495, "33416": 495, "35766": 495, "37028": 495, "32528": 495, "34687": 495, "meili": 495, "29883": 495, "23057": 495, "36999": 495, "34270": 495, "twisteroid": 495, "ambassador": 495, "33530": 495, "34616": 495, "35864": 495, "sanderson": 495, "29235": 495, "selik": 495, "34003": 495, "31680": 495, "36085": 495, "36004": 495, "36772": 495, "21145": 495, "taskmanag": 495, "32380": 495, "36016": 495, "franz": 495, "glasner": 495, "2504": 495, "guo": 495, "teo": 495, "34898": 495, "6584": 495, "13153": 495, "4603": [495, 496], "johnni": [495, 496], "najera": [495, 496], "38944": [495, 496], "37765": [495, 496], "audioclip": 495, "bit_rat": 495, "kilohertz": 495, "36326": 495, "1015": 495, "1045": 495, "34659": 495, "31553": 495, "jupyt": 495, "33897": 495, "33089": 495, "35606": 495, "yash": 495, "aggarw": 495, "keller": 495, "37128": 495, "37178": 495, "35431": 495, "650320427": 495, "650320426": 495, "36887": 495, "33083": 495, "32941": 495, "35813": 495, "26836": 495, "37834": 495, "33721": 495, "36264": 495, "joannah": [495, 496], "nanjeky": [495, 496], "26978": 495, "jon": [495, 496], "janzen": [495, 496], "26707": 495, "30670": 495, "22640": 495, "20849": 495, "gerlach": 495, "30661": 495, "17561": 495, "37007": 495, "34670": 495, "35904": 495, "35892": 495, "equiprob": 495, "36546": 495, "36018": 495, "temperature_feb": 495, "356099432828281": 495, "3184678262814532": 495, "2039930378537762": 495, "el_ni\u00f1o": 495, "climat": 495, "830080526611674": 495, "294144947901014": 495, "672102882379219": 495, "000027119750287": 495, "647488369766392": 495, "36829": 495, "36268": 495, "1230540": 495, "tesler": 495, "36084": 495, "selection_from": 495, "selection_pres": 495, "selection_rang": 495, "selection_to": 495, "juliett": 495, "monsel": 495, "34829": 495, "moveto": 495, "23831": 495, "transparency_get": 495, "transparency_set": 495, "25451": 495, "35702": 495, "lat_long": 495, "grid_squar": 495, "xy_coordin": 495, "get_statu": 495, "1415926536": 495, "belang": 495, "euresti": 495, "32285": 495, "37966": 495, "26467": 495, "24412": 495, "strandmark": 495, "35047": 495, "32972": 495, "testrequest": 495, "test_get": 495, "32718": 495, "36669": 495, "17239": 495, "28238": 495, "13611": 495, "36676": 495, "36673": 495, "35153": 495, "35537": 495, "smb": 495, "33695": 495, "pygc_head": [495, 496], "33597": 495, "bolsterle": 495, "30977": 495, "35664": 495, "32492": 495, "33234": 495, "36012": 495, "23867": 495, "35582": 495, "36127": 495, "26219": 495, "36707": 495, "8m": 495, "37m": 495, "35081": 495, "pyobject_init_var": [495, 496], "35059": 495, "pybytearray_init": 495, "pybytearray_fini": 495, "35713": 495, "33818": 495, "dualiti": 495, "32430": 495, "36048": 495, "eddi": 495, "elizondo": 495, "35810": [495, 496], "37221": 495, "38234": 495, "37481": 495, "29209": 495, "34075": 495, "9372": 495, "36320": 495, "32892": 495, "36917": 495, "36921": 495, "34790": [495, 496], "33710": 495, "isal": [495, 496], "35283": 495, "sharedmemoryserv": 495, "36492": 495, "36952": 495, "35471": 495, "35345": 495, "36895": 495, "25427": 495, "36297": 495, "30262": 495, "36933": 495, "34850": 495, "35459": 495, "36793": 495, "aix3": 495, "36588": 495, "36475": 495, "37412": 495, "34651": 495, "37951": 495, "36348": 495, "31508": 495, "roja": 495, "34160": 495, "32749": 495, "pycore_pyst": 495, "35886": 495, "2122": 495, "33106": 495, "32751": [495, 496], "37027": 495, "kb2533623": 495, "pgen": 495, "36623": 495, "pyeval_reinitthread": 495, "36728": 495, "36381": 495, "foo_struct": [495, 496], "foo_new": 495, "33407": 495, "32388": 495, "pynode_addchild": 495, "pyparser_addtoken": 495, "libpython38": 495, "mingw": 495, "python38": 495, "gendef": 495, "37351": 495, "unrol": 495, "break_loop": 495, "continue_loop": 495, "setup_loop": 495, "setup_except": 495, "begin_fin": 495, "call_fin": 495, "pop_fin": 495, "end_fin": 495, "with_cleanup_start": 495, "17611": 495, "33041": 495, "var_access_benchmark": [495, 496], "35884": 495, "read_loc": [495, 496], "read_nonloc": [495, 496], "read_glob": [495, 496], "read_builtin": [495, 496], "read_classvar_from_class": [495, 496], "read_classvar_from_inst": [495, 496], "read_instancevar": [495, 496], "read_instancevar_slot": [495, 496], "read_namedtupl": [495, 496], "read_boundmethod": [495, 496], "write_loc": [495, 496], "write_nonloc": [495, 496], "write_glob": [495, 496], "write_classvar": [495, 496], "write_instancevar": [495, 496], "write_instancevar_slot": [495, 496], "read_list": [495, 496], "read_dequ": [495, 496], "read_strdict": [495, 496], "write_list": [495, 496], "write_dequ": [495, 496], "write_dict": [495, 496], "write_strdict": [495, 496], "list_append_pop": [495, 496], "deque_append_pop": [495, 496], "deque_append_popleft": [495, 496], "loop_overhead": [495, 496], "i7": [495, 496], "4960hq": [495, 496], "barkhau": 495, "83571": 495, "83743": 495, "lawrenc": [495, 496], "anna": [495, 496], "85272": 495, "fx": 495, "coudert": 495, "rykoff": 495, "b\u00e9langer": 495, "43882": 495, "36384": [495, 496], "achraf": 495, "merzouki": 495, "573": 496, "_abc": 496, "_bz2": 496, "_codec": 496, "_contextvar": 496, "_crypt": 496, "_functool": 496, "_json": 496, "multiphas": 496, "_hashlib": 496, "_posixsubprocess": 496, "36144": 496, "39939": 496, "greet_al": 496, "ta\u015fkaya": 496, "39481": 496, "pythonoldpars": 496, "ngalim": 496, "siregar": 496, "37444": 496, "20443": 496, "37388": 496, "28029": 496, "39702": 496, "40257": 496, "ag_run": 496, "30773": 496, "40824": 496, "41848": 496, "43755": 496, "17005": 496, "37995": 496, "38870": 496, "39638": 496, "34037": 496, "38692": 496, "32309": 496, "typererror": 496, "ido": 496, "37404": 496, "lum\u00edr": 496, "frenzi": 496, "balhar": 496, "40495": 496, "38112": 496, "39349": 496, "39812": 496, "39207": 496, "38312": 496, "24416": 496, "40698": 496, "38602": 496, "39259": 496, "38379": 496, "39322": 496, "xof": 496, "37630": 496, "40479": 496, "39509": 496, "rhode": 496, "39507": 496, "38615": 496, "40375": 496, "39336": 496, "39791": 496, "36350": 496, "39775": 496, "oleksandr": 496, "pavliuk": 496, "34788": 496, "39648": 496, "ananthakrishnan": 496, "39479": 496, "39288": 496, "39310": 496, "30966": 496, "38493": 496, "38713": 496, "39413": 496, "39395": 496, "40094": 496, "girt": 496, "folkmani": 496, "30618": 496, "hopper": 496, "lidral": 496, "porter": 496, "20523": 496, "bordum": 496, "37376": 496, "40286": 496, "38712": 496, "39329": 496, "tatschner": 496, "25780": 496, "40291": 496, "shinya": 496, "okano": 496, "28724": 496, "thread_cputim": 496, "40192": 496, "mat\u011bjek": 496, "mat\u011bj": 496, "charalampo": 496, "strataki": 496, "1294959": 496, "jendrik": 496, "seipp": 496, "13601": 496, "huon": 496, "40630": 496, "varoquaux": 496, "konstantin": 496, "kashin": 496, "39926": 496, "37663": 496, "eoln": 496, "mefistot": 496, "39011": 496, "32856": 496, "40010": 496, "closefrom": 496, "mast": 496, "conrad": 496, "kubilai": 496, "kocak": 496, "38061": 496, "87x": 496, "37986": 496, "37207": 496, "evgeni": 496, "kapun": 496, "8425": 496, "thrash": 496, "37257": 496, "39434": 496, "37348": 496, "39586": 496, "37315": 496, "35712": 496, "28286": 496, "splitlist": 496, "hexbin4": 496, "rledecode_hqx": 496, "39353": 496, "34822": 496, "augload": 496, "augstor": 496, "39639": 496, "39969": 496, "39988": 496, "39877": 496, "33262": 496, "colvin": 496, "xgtitl": 496, "39366": 496, "38916": 496, "call_profil": 496, "37414": 496, "37392": 496, "pyimport_cleanup": 496, "36710": 496, "37312": 496, "37320": 496, "37804": 496, "36543": 496, "36409": 496, "pygen_needsfin": 496, "15088": 496, "39351": 496, "39350": 496, "39357": 496, "39377": 496, "34793": 496, "39489": 496, "40182": 496, "has_exec": 496, "40208": 496, "40967": 496, "39239": 496, "39562": 496, "34538": 496, "37742": 496, "aiudi": 496, "34775": 496, "latex_latin1": 496, "jordon": 496, "xu": 496, "37751": 496, "foo_travers": 496, "29548": 496, "34880": 496, "39156": 496, "10945": 496, "isysroot": 496, "34956": 496, "33125": 496, "36044": 496, "37707": 496, "marcel": 496, "plch": 496, "38787": 496, "40421": 496, "39947": 496, "37194": 496, "38644": 496, "39542": 496, "40024": 496, "40241": 496, "_pyobject_functionstr": 496, "37645": 496, "37483": 496, "38500": 496, "39984": 496, "38650": 496, "pycore_gc": 496, "39882": 496, "37540": 496, "pyobject_new_var": 496, "pyobject_get_weakrefs_listptr": 496, "pyfpe_start_protect": 496, "pyfpe_end_protect": 496, "38835": 496, "37878": 496, "_pytracemalloc_newrefer": 496, "_py_getreftot": 496, "pytrash_unwind_level": 496, "py_trashcan_begin_condit": 496, "_pydebug_printtotalref": 496, "_py_printrefer": 496, "_py_printreferenceaddress": 496, "_py_tracemalloc_config": 496, "_py_addtoallobject": 496, "getfram": 496, "_pythreadstate_getfram": 496, "pythreadframegett": 496, "39946": 496, "37340": 496, "38896": 496, "40428": 496, "pyasyncgen_clearfreelist": 496, "pycontext_clearfreelist": 496, "pydict_clearfreelist": 496, "pyfloat_clearfreelist": 496, "pyframe_clearfreelist": 496, "pylist_clearfreelist": 496, "pymethod_clearfreelist": 496, "pycfunction_clearfreelist": 496, "pyset_clearfreelist": 496, "pytuple_clearfreelist": 496, "pyunicode_clearfreelist": 496, "_pyunicode_clearstaticstr": 496, "39465": 496, "_pybytes_insertthousandsgroupinglocal": 496, "_pybytes_insertthousandsgroup": 496, "_py_initializefromarg": 496, "_py_initializefromwidearg": 496, "_pyfloat_repr": 496, "_pyfloat_digit": 496, "_pyfloat_digitsinit": 496, "pyframe_extendstack": 496, "_pyaiterwrapper_typ": 496, "pynullimporter_typ": 496, "pycmpwrapper_typ": 496, "pysortwrapper_typ": 496, "pynoargsfunct": 496, "39372": 496, "41100": 496, "essai": 498, "nontrivi": 498}, "objects": {"": [[65, 0, 1, "c.CO_FUTURE_DIVISION", "CO_FUTURE_DIVISION"], [57, 1, 1, "c.METH_CLASS", "METH_CLASS"], [57, 1, 1, "c.METH_COEXIST", "METH_COEXIST"], [57, 1, 1, "c.METH_FASTCALL", "METH_FASTCALL"], [57, 1, 1, "c.METH_KEYWORDS", "METH_KEYWORDS"], [57, 1, 1, "c.METH_METHOD", "METH_METHOD"], [57, 1, 1, "c.METH_NOARGS", "METH_NOARGS"], [57, 1, 1, "c.METH_O", "METH_O"], [57, 1, 1, "c.METH_STATIC", "METH_STATIC"], [57, 1, 1, "c.METH_VARARGS", "METH_VARARGS"], [42, 1, 1, "c.PYMEM_DOMAIN_MEM", "PYMEM_DOMAIN_MEM"], [42, 1, 1, "c.PYMEM_DOMAIN_OBJ", "PYMEM_DOMAIN_OBJ"], [42, 1, 1, "c.PYMEM_DOMAIN_RAW", "PYMEM_DOMAIN_RAW"], [4, 1, 1, "c.PY_MAJOR_VERSION", "PY_MAJOR_VERSION"], [4, 1, 1, "c.PY_MICRO_VERSION", "PY_MICRO_VERSION"], [4, 1, 1, "c.PY_MINOR_VERSION", "PY_MINOR_VERSION"], [4, 1, 1, "c.PY_RELEASE_LEVEL", "PY_RELEASE_LEVEL"], [4, 1, 1, "c.PY_RELEASE_SERIAL", "PY_RELEASE_SERIAL"], [10, 1, 1, "c.PY_VECTORCALL_ARGUMENTS_OFFSET", "PY_VECTORCALL_ARGUMENTS_OFFSET"], [4, 1, 1, "c.PY_VERSION_HEX", "PY_VERSION_HEX"], [36, 2, 1, "c.PyAIter_Check", "PyAIter_Check"], [63, 4, 1, "c.PyASCIIObject", "PyASCIIObject"], [54, 2, 1, "c.PyAnySet_Check", "PyAnySet_Check"], [54, 2, 1, "c.PyAnySet_CheckExact", "PyAnySet_CheckExact"], [5, 2, 1, "c.PyArg_Parse", "PyArg_Parse"], [5, 2, 1, "c.PyArg_ParseTuple", "PyArg_ParseTuple"], [5, 2, 1, "c.PyArg_ParseTupleAndKeywords", "PyArg_ParseTupleAndKeywords"], [5, 2, 1, "c.PyArg_UnpackTuple", "PyArg_UnpackTuple"], [5, 2, 1, "c.PyArg_VaParse", "PyArg_VaParse"], [5, 2, 1, "c.PyArg_VaParseTupleAndKeywords", "PyArg_VaParseTupleAndKeywords"], [5, 2, 1, "c.PyArg_ValidateKeywordArguments", "PyArg_ValidateKeywordArguments"], [62, 4, 1, "c.PyAsyncMethods", "PyAsyncMethods"], [7, 1, 1, "c.PyBUF_ANY_CONTIGUOUS", "PyBUF_ANY_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_CONTIG", "PyBUF_CONTIG"], [7, 1, 1, "c.PyBUF_CONTIG_RO", "PyBUF_CONTIG_RO"], [7, 1, 1, "c.PyBUF_C_CONTIGUOUS", "PyBUF_C_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_FORMAT", "PyBUF_FORMAT"], [7, 1, 1, "c.PyBUF_FULL", "PyBUF_FULL"], [7, 1, 1, "c.PyBUF_FULL_RO", "PyBUF_FULL_RO"], [7, 1, 1, "c.PyBUF_F_CONTIGUOUS", "PyBUF_F_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_INDIRECT", "PyBUF_INDIRECT"], [7, 1, 1, "c.PyBUF_MAX_NDIM", "PyBUF_MAX_NDIM"], [7, 1, 1, "c.PyBUF_ND", "PyBUF_ND"], [43, 1, 1, "c.PyBUF_READ", "PyBUF_READ"], [7, 1, 1, "c.PyBUF_RECORDS", "PyBUF_RECORDS"], [7, 1, 1, "c.PyBUF_RECORDS_RO", "PyBUF_RECORDS_RO"], [7, 1, 1, "c.PyBUF_SIMPLE", "PyBUF_SIMPLE"], [7, 1, 1, "c.PyBUF_STRIDED", "PyBUF_STRIDED"], [7, 1, 1, "c.PyBUF_STRIDED_RO", "PyBUF_STRIDED_RO"], [7, 1, 1, "c.PyBUF_STRIDES", "PyBUF_STRIDES"], [7, 1, 1, "c.PyBUF_WRITABLE", "PyBUF_WRITABLE"], [43, 1, 1, "c.PyBUF_WRITE", "PyBUF_WRITE"], [6, 2, 1, "c.PyBool_Check", "PyBool_Check"], [6, 2, 1, "c.PyBool_FromLong", "PyBool_FromLong"], [6, 0, 1, "c.PyBool_Type", "PyBool_Type"], [62, 4, 1, "c.PyBufferProcs", "PyBufferProcs"], [7, 2, 1, "c.PyBuffer_FillContiguousStrides", "PyBuffer_FillContiguousStrides"], [7, 2, 1, "c.PyBuffer_FillInfo", "PyBuffer_FillInfo"], [7, 2, 1, "c.PyBuffer_FromContiguous", "PyBuffer_FromContiguous"], [7, 2, 1, "c.PyBuffer_GetPointer", "PyBuffer_GetPointer"], [7, 2, 1, "c.PyBuffer_IsContiguous", "PyBuffer_IsContiguous"], [7, 2, 1, "c.PyBuffer_Release", "PyBuffer_Release"], [7, 2, 1, "c.PyBuffer_SizeFromFormat", "PyBuffer_SizeFromFormat"], [7, 2, 1, "c.PyBuffer_ToContiguous", "PyBuffer_ToContiguous"], [8, 4, 1, "c.PyByteArrayObject", "PyByteArrayObject"], [8, 2, 1, "c.PyByteArray_AS_STRING", "PyByteArray_AS_STRING"], [8, 2, 1, "c.PyByteArray_AsString", "PyByteArray_AsString"], [8, 2, 1, "c.PyByteArray_Check", "PyByteArray_Check"], [8, 2, 1, "c.PyByteArray_CheckExact", "PyByteArray_CheckExact"], [8, 2, 1, "c.PyByteArray_Concat", "PyByteArray_Concat"], [8, 2, 1, "c.PyByteArray_FromObject", "PyByteArray_FromObject"], [8, 2, 1, "c.PyByteArray_FromStringAndSize", "PyByteArray_FromStringAndSize"], [8, 2, 1, "c.PyByteArray_GET_SIZE", "PyByteArray_GET_SIZE"], [8, 2, 1, "c.PyByteArray_Resize", "PyByteArray_Resize"], [8, 2, 1, "c.PyByteArray_Size", "PyByteArray_Size"], [8, 0, 1, "c.PyByteArray_Type", "PyByteArray_Type"], [9, 4, 1, "c.PyBytesObject", "PyBytesObject"], [9, 2, 1, "c.PyBytes_AS_STRING", "PyBytes_AS_STRING"], [9, 2, 1, "c.PyBytes_AsString", "PyBytes_AsString"], [9, 2, 1, "c.PyBytes_AsStringAndSize", "PyBytes_AsStringAndSize"], [9, 2, 1, "c.PyBytes_Check", "PyBytes_Check"], [9, 2, 1, "c.PyBytes_CheckExact", "PyBytes_CheckExact"], [9, 2, 1, "c.PyBytes_Concat", "PyBytes_Concat"], [9, 2, 1, "c.PyBytes_ConcatAndDel", "PyBytes_ConcatAndDel"], [9, 2, 1, "c.PyBytes_FromFormat", "PyBytes_FromFormat"], [9, 2, 1, "c.PyBytes_FromFormatV", "PyBytes_FromFormatV"], [9, 2, 1, "c.PyBytes_FromObject", "PyBytes_FromObject"], [9, 2, 1, "c.PyBytes_FromString", "PyBytes_FromString"], [9, 2, 1, "c.PyBytes_FromStringAndSize", "PyBytes_FromStringAndSize"], [9, 2, 1, "c.PyBytes_GET_SIZE", "PyBytes_GET_SIZE"], [9, 2, 1, "c.PyBytes_Size", "PyBytes_Size"], [9, 0, 1, "c.PyBytes_Type", "PyBytes_Type"], [57, 4, 1, "c.PyCFunction", "PyCFunction"], [57, 4, 1, "c.PyCFunctionWithKeywords", "PyCFunctionWithKeywords"], [57, 2, 1, "c.PyCFunction_New", "PyCFunction_New"], [57, 2, 1, "c.PyCFunction_NewEx", "PyCFunction_NewEx"], [57, 4, 1, "c.PyCMethod", "PyCMethod"], [57, 2, 1, "c.PyCMethod_New", "PyCMethod_New"], [37, 2, 1, "c.PyCallIter_Check", "PyCallIter_Check"], [37, 2, 1, "c.PyCallIter_New", "PyCallIter_New"], [37, 0, 1, "c.PyCallIter_Type", "PyCallIter_Type"], [10, 2, 1, "c.PyCallable_Check", "PyCallable_Check"], [11, 4, 1, "c.PyCapsule", "PyCapsule"], [11, 2, 1, "c.PyCapsule_CheckExact", "PyCapsule_CheckExact"], [11, 4, 1, "c.PyCapsule_Destructor", "PyCapsule_Destructor"], [11, 2, 1, "c.PyCapsule_GetContext", "PyCapsule_GetContext"], [11, 2, 1, "c.PyCapsule_GetDestructor", "PyCapsule_GetDestructor"], [11, 2, 1, "c.PyCapsule_GetName", "PyCapsule_GetName"], [11, 2, 1, "c.PyCapsule_GetPointer", "PyCapsule_GetPointer"], [11, 2, 1, "c.PyCapsule_Import", "PyCapsule_Import"], [11, 2, 1, "c.PyCapsule_IsValid", "PyCapsule_IsValid"], [11, 2, 1, "c.PyCapsule_New", "PyCapsule_New"], [11, 2, 1, "c.PyCapsule_SetContext", "PyCapsule_SetContext"], [11, 2, 1, "c.PyCapsule_SetDestructor", "PyCapsule_SetDestructor"], [11, 2, 1, "c.PyCapsule_SetName", "PyCapsule_SetName"], [11, 2, 1, "c.PyCapsule_SetPointer", "PyCapsule_SetPointer"], [12, 4, 1, "c.PyCellObject", "PyCellObject"], [12, 2, 1, "c.PyCell_Check", "PyCell_Check"], [12, 2, 1, "c.PyCell_GET", "PyCell_GET"], [12, 2, 1, "c.PyCell_Get", "PyCell_Get"], [12, 2, 1, "c.PyCell_New", "PyCell_New"], [12, 2, 1, "c.PyCell_SET", "PyCell_SET"], [12, 2, 1, "c.PyCell_Set", "PyCell_Set"], [12, 0, 1, "c.PyCell_Type", "PyCell_Type"], [13, 4, 1, "c.PyCodeObject", "PyCodeObject"], [13, 2, 1, "c.PyCode_Addr2Line", "PyCode_Addr2Line"], [13, 2, 1, "c.PyCode_Addr2Location", "PyCode_Addr2Location"], [13, 2, 1, "c.PyCode_Check", "PyCode_Check"], [13, 2, 1, "c.PyCode_GetCellvars", "PyCode_GetCellvars"], [13, 2, 1, "c.PyCode_GetCode", "PyCode_GetCode"], [13, 2, 1, "c.PyCode_GetFreevars", "PyCode_GetFreevars"], [13, 2, 1, "c.PyCode_GetNumFree", "PyCode_GetNumFree"], [13, 2, 1, "c.PyCode_GetVarnames", "PyCode_GetVarnames"], [13, 2, 1, "c.PyCode_New", "PyCode_New"], [13, 2, 1, "c.PyCode_NewEmpty", "PyCode_NewEmpty"], [13, 2, 1, "c.PyCode_NewWithPosOnlyArgs", "PyCode_NewWithPosOnlyArgs"], [13, 0, 1, "c.PyCode_Type", "PyCode_Type"], [14, 2, 1, "c.PyCodec_BackslashReplaceErrors", "PyCodec_BackslashReplaceErrors"], [14, 2, 1, "c.PyCodec_Decode", "PyCodec_Decode"], [14, 2, 1, "c.PyCodec_Decoder", "PyCodec_Decoder"], [14, 2, 1, "c.PyCodec_Encode", "PyCodec_Encode"], [14, 2, 1, "c.PyCodec_Encoder", "PyCodec_Encoder"], [14, 2, 1, "c.PyCodec_IgnoreErrors", "PyCodec_IgnoreErrors"], [14, 2, 1, "c.PyCodec_IncrementalDecoder", "PyCodec_IncrementalDecoder"], [14, 2, 1, "c.PyCodec_IncrementalEncoder", "PyCodec_IncrementalEncoder"], [14, 2, 1, "c.PyCodec_KnownEncoding", "PyCodec_KnownEncoding"], [14, 2, 1, "c.PyCodec_LookupError", "PyCodec_LookupError"], [14, 2, 1, "c.PyCodec_NameReplaceErrors", "PyCodec_NameReplaceErrors"], [14, 2, 1, "c.PyCodec_Register", "PyCodec_Register"], [14, 2, 1, "c.PyCodec_RegisterError", "PyCodec_RegisterError"], [14, 2, 1, "c.PyCodec_ReplaceErrors", "PyCodec_ReplaceErrors"], [14, 2, 1, "c.PyCodec_StreamReader", "PyCodec_StreamReader"], [14, 2, 1, "c.PyCodec_StreamWriter", "PyCodec_StreamWriter"], [14, 2, 1, "c.PyCodec_StrictErrors", "PyCodec_StrictErrors"], [14, 2, 1, "c.PyCodec_Unregister", "PyCodec_Unregister"], [14, 2, 1, "c.PyCodec_XMLCharRefReplaceErrors", "PyCodec_XMLCharRefReplaceErrors"], [63, 4, 1, "c.PyCompactUnicodeObject", "PyCompactUnicodeObject"], [65, 5, 1, "c.PyCompilerFlags", "PyCompilerFlags"], [15, 4, 1, "c.PyComplexObject", "PyComplexObject"], [15, 2, 1, "c.PyComplex_AsCComplex", "PyComplex_AsCComplex"], [15, 2, 1, "c.PyComplex_Check", "PyComplex_Check"], [15, 2, 1, "c.PyComplex_CheckExact", "PyComplex_CheckExact"], [15, 2, 1, "c.PyComplex_FromCComplex", "PyComplex_FromCComplex"], [15, 2, 1, "c.PyComplex_FromDoubles", "PyComplex_FromDoubles"], [15, 2, 1, "c.PyComplex_ImagAsDouble", "PyComplex_ImagAsDouble"], [15, 2, 1, "c.PyComplex_RealAsDouble", "PyComplex_RealAsDouble"], [15, 0, 1, "c.PyComplex_Type", "PyComplex_Type"], [34, 4, 1, "c.PyConfig", "PyConfig"], [34, 2, 1, "c.PyConfig_Clear", "PyConfig_Clear"], [34, 2, 1, "c.PyConfig_InitIsolatedConfig", "PyConfig_InitIsolatedConfig"], [34, 2, 1, "c.PyConfig_InitPythonConfig", "PyConfig_InitPythonConfig"], [34, 2, 1, "c.PyConfig_Read", "PyConfig_Read"], [34, 2, 1, "c.PyConfig_SetArgv", "PyConfig_SetArgv"], [34, 2, 1, "c.PyConfig_SetBytesArgv", "PyConfig_SetBytesArgv"], [34, 2, 1, "c.PyConfig_SetBytesString", "PyConfig_SetBytesString"], [34, 2, 1, "c.PyConfig_SetString", "PyConfig_SetString"], [34, 2, 1, "c.PyConfig_SetWideStringList", "PyConfig_SetWideStringList"], [17, 4, 1, "c.PyContext", "PyContext"], [17, 4, 1, "c.PyContextToken", "PyContextToken"], [17, 2, 1, "c.PyContextToken_CheckExact", "PyContextToken_CheckExact"], [17, 0, 1, "c.PyContextToken_Type", "PyContextToken_Type"], [17, 4, 1, "c.PyContextVar", "PyContextVar"], [17, 2, 1, "c.PyContextVar_CheckExact", "PyContextVar_CheckExact"], [17, 2, 1, "c.PyContextVar_Get", "PyContextVar_Get"], [17, 2, 1, "c.PyContextVar_New", "PyContextVar_New"], [17, 2, 1, "c.PyContextVar_Reset", "PyContextVar_Reset"], [17, 2, 1, "c.PyContextVar_Set", "PyContextVar_Set"], [17, 0, 1, "c.PyContextVar_Type", "PyContextVar_Type"], [17, 2, 1, "c.PyContext_CheckExact", "PyContext_CheckExact"], [17, 2, 1, "c.PyContext_Copy", "PyContext_Copy"], [17, 2, 1, "c.PyContext_CopyCurrent", "PyContext_CopyCurrent"], [17, 2, 1, "c.PyContext_Enter", "PyContext_Enter"], [17, 2, 1, "c.PyContext_Exit", "PyContext_Exit"], [17, 2, 1, "c.PyContext_New", "PyContext_New"], [17, 0, 1, "c.PyContext_Type", "PyContext_Type"], [19, 4, 1, "c.PyCoroObject", "PyCoroObject"], [19, 2, 1, "c.PyCoro_CheckExact", "PyCoro_CheckExact"], [19, 2, 1, "c.PyCoro_New", "PyCoro_New"], [19, 0, 1, "c.PyCoro_Type", "PyCoro_Type"], [20, 2, 1, "c.PyDateTime_Check", "PyDateTime_Check"], [20, 2, 1, "c.PyDateTime_CheckExact", "PyDateTime_CheckExact"], [20, 2, 1, "c.PyDateTime_DATE_GET_FOLD", "PyDateTime_DATE_GET_FOLD"], [20, 2, 1, "c.PyDateTime_DATE_GET_HOUR", "PyDateTime_DATE_GET_HOUR"], [20, 2, 1, "c.PyDateTime_DATE_GET_MICROSECOND", "PyDateTime_DATE_GET_MICROSECOND"], [20, 2, 1, "c.PyDateTime_DATE_GET_MINUTE", "PyDateTime_DATE_GET_MINUTE"], [20, 2, 1, "c.PyDateTime_DATE_GET_SECOND", "PyDateTime_DATE_GET_SECOND"], [20, 2, 1, "c.PyDateTime_DATE_GET_TZINFO", "PyDateTime_DATE_GET_TZINFO"], [20, 2, 1, "c.PyDateTime_DELTA_GET_DAYS", "PyDateTime_DELTA_GET_DAYS"], [20, 2, 1, "c.PyDateTime_DELTA_GET_MICROSECONDS", "PyDateTime_DELTA_GET_MICROSECONDS"], [20, 2, 1, "c.PyDateTime_DELTA_GET_SECONDS", "PyDateTime_DELTA_GET_SECONDS"], [20, 4, 1, "c.PyDateTime_Date", "PyDateTime_Date"], [20, 4, 1, "c.PyDateTime_DateTime", "PyDateTime_DateTime"], [20, 0, 1, "c.PyDateTime_DateTimeType", "PyDateTime_DateTimeType"], [20, 0, 1, "c.PyDateTime_DateType", "PyDateTime_DateType"], [20, 4, 1, "c.PyDateTime_Delta", "PyDateTime_Delta"], [20, 0, 1, "c.PyDateTime_DeltaType", "PyDateTime_DeltaType"], [20, 2, 1, "c.PyDateTime_FromDateAndTime", "PyDateTime_FromDateAndTime"], [20, 2, 1, "c.PyDateTime_FromDateAndTimeAndFold", "PyDateTime_FromDateAndTimeAndFold"], [20, 2, 1, "c.PyDateTime_FromTimestamp", "PyDateTime_FromTimestamp"], [20, 2, 1, "c.PyDateTime_GET_DAY", "PyDateTime_GET_DAY"], [20, 2, 1, "c.PyDateTime_GET_MONTH", "PyDateTime_GET_MONTH"], [20, 2, 1, "c.PyDateTime_GET_YEAR", "PyDateTime_GET_YEAR"], [20, 2, 1, "c.PyDateTime_TIME_GET_FOLD", "PyDateTime_TIME_GET_FOLD"], [20, 2, 1, "c.PyDateTime_TIME_GET_HOUR", "PyDateTime_TIME_GET_HOUR"], [20, 2, 1, "c.PyDateTime_TIME_GET_MICROSECOND", "PyDateTime_TIME_GET_MICROSECOND"], [20, 2, 1, "c.PyDateTime_TIME_GET_MINUTE", "PyDateTime_TIME_GET_MINUTE"], [20, 2, 1, "c.PyDateTime_TIME_GET_SECOND", "PyDateTime_TIME_GET_SECOND"], [20, 2, 1, "c.PyDateTime_TIME_GET_TZINFO", "PyDateTime_TIME_GET_TZINFO"], [20, 0, 1, "c.PyDateTime_TZInfoType", "PyDateTime_TZInfoType"], [20, 4, 1, "c.PyDateTime_Time", "PyDateTime_Time"], [20, 0, 1, "c.PyDateTime_TimeType", "PyDateTime_TimeType"], [20, 0, 1, "c.PyDateTime_TimeZone_UTC", "PyDateTime_TimeZone_UTC"], [20, 2, 1, "c.PyDate_Check", "PyDate_Check"], [20, 2, 1, "c.PyDate_CheckExact", "PyDate_CheckExact"], [20, 2, 1, "c.PyDate_FromDate", "PyDate_FromDate"], [20, 2, 1, "c.PyDate_FromTimestamp", "PyDate_FromTimestamp"], [20, 2, 1, "c.PyDelta_Check", "PyDelta_Check"], [20, 2, 1, "c.PyDelta_CheckExact", "PyDelta_CheckExact"], [20, 2, 1, "c.PyDelta_FromDSU", "PyDelta_FromDSU"], [21, 2, 1, "c.PyDescr_IsData", "PyDescr_IsData"], [21, 2, 1, "c.PyDescr_NewClassMethod", "PyDescr_NewClassMethod"], [21, 2, 1, "c.PyDescr_NewGetSet", "PyDescr_NewGetSet"], [21, 2, 1, "c.PyDescr_NewMember", "PyDescr_NewMember"], [21, 2, 1, "c.PyDescr_NewMethod", "PyDescr_NewMethod"], [21, 2, 1, "c.PyDescr_NewWrapper", "PyDescr_NewWrapper"], [22, 4, 1, "c.PyDictObject", "PyDictObject"], [22, 2, 1, "c.PyDictProxy_New", "PyDictProxy_New"], [22, 2, 1, "c.PyDict_Check", "PyDict_Check"], [22, 2, 1, "c.PyDict_CheckExact", "PyDict_CheckExact"], [22, 2, 1, "c.PyDict_Clear", "PyDict_Clear"], [22, 2, 1, "c.PyDict_Contains", "PyDict_Contains"], [22, 2, 1, "c.PyDict_Copy", "PyDict_Copy"], [22, 2, 1, "c.PyDict_DelItem", "PyDict_DelItem"], [22, 2, 1, "c.PyDict_DelItemString", "PyDict_DelItemString"], [22, 2, 1, "c.PyDict_GetItem", "PyDict_GetItem"], [22, 2, 1, "c.PyDict_GetItemString", "PyDict_GetItemString"], [22, 2, 1, "c.PyDict_GetItemWithError", "PyDict_GetItemWithError"], [22, 2, 1, "c.PyDict_Items", "PyDict_Items"], [22, 2, 1, "c.PyDict_Keys", "PyDict_Keys"], [22, 2, 1, "c.PyDict_Merge", "PyDict_Merge"], [22, 2, 1, "c.PyDict_MergeFromSeq2", "PyDict_MergeFromSeq2"], [22, 2, 1, "c.PyDict_New", "PyDict_New"], [22, 2, 1, "c.PyDict_Next", "PyDict_Next"], [22, 2, 1, "c.PyDict_SetDefault", "PyDict_SetDefault"], [22, 2, 1, "c.PyDict_SetItem", "PyDict_SetItem"], [22, 2, 1, "c.PyDict_SetItemString", "PyDict_SetItemString"], [22, 2, 1, "c.PyDict_Size", "PyDict_Size"], [22, 0, 1, "c.PyDict_Type", "PyDict_Type"], [22, 2, 1, "c.PyDict_Update", "PyDict_Update"], [22, 2, 1, "c.PyDict_Values", "PyDict_Values"], [35, 1, 1, "c.PyDoc_STR", "PyDoc_STR"], [35, 1, 1, "c.PyDoc_STRVAR", "PyDoc_STRVAR"], [23, 2, 1, "c.PyErr_BadArgument", "PyErr_BadArgument"], [23, 2, 1, "c.PyErr_BadInternalCall", "PyErr_BadInternalCall"], [23, 2, 1, "c.PyErr_CheckSignals", "PyErr_CheckSignals"], [23, 2, 1, "c.PyErr_Clear", "PyErr_Clear"], [23, 2, 1, "c.PyErr_ExceptionMatches", "PyErr_ExceptionMatches"], [23, 2, 1, "c.PyErr_Fetch", "PyErr_Fetch"], [23, 2, 1, "c.PyErr_Format", "PyErr_Format"], [23, 2, 1, "c.PyErr_FormatV", "PyErr_FormatV"], [23, 2, 1, "c.PyErr_GetExcInfo", "PyErr_GetExcInfo"], [23, 2, 1, "c.PyErr_GetHandledException", "PyErr_GetHandledException"], [23, 2, 1, "c.PyErr_GivenExceptionMatches", "PyErr_GivenExceptionMatches"], [23, 2, 1, "c.PyErr_NewException", "PyErr_NewException"], [23, 2, 1, "c.PyErr_NewExceptionWithDoc", "PyErr_NewExceptionWithDoc"], [23, 2, 1, "c.PyErr_NoMemory", "PyErr_NoMemory"], [23, 2, 1, "c.PyErr_NormalizeException", "PyErr_NormalizeException"], [23, 2, 1, "c.PyErr_Occurred", "PyErr_Occurred"], [23, 2, 1, "c.PyErr_Print", "PyErr_Print"], [23, 2, 1, "c.PyErr_PrintEx", "PyErr_PrintEx"], [23, 2, 1, "c.PyErr_ResourceWarning", "PyErr_ResourceWarning"], [23, 2, 1, "c.PyErr_Restore", "PyErr_Restore"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErr", "PyErr_SetExcFromWindowsErr"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "PyErr_SetExcFromWindowsErrWithFilename"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "PyErr_SetExcFromWindowsErrWithFilenameObject"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "PyErr_SetExcFromWindowsErrWithFilenameObjects"], [23, 2, 1, "c.PyErr_SetExcInfo", "PyErr_SetExcInfo"], [23, 2, 1, "c.PyErr_SetFromErrno", "PyErr_SetFromErrno"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilename", "PyErr_SetFromErrnoWithFilename"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "PyErr_SetFromErrnoWithFilenameObject"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "PyErr_SetFromErrnoWithFilenameObjects"], [23, 2, 1, "c.PyErr_SetFromWindowsErr", "PyErr_SetFromWindowsErr"], [23, 2, 1, "c.PyErr_SetFromWindowsErrWithFilename", "PyErr_SetFromWindowsErrWithFilename"], [23, 2, 1, "c.PyErr_SetHandledException", "PyErr_SetHandledException"], [23, 2, 1, "c.PyErr_SetImportError", "PyErr_SetImportError"], [23, 2, 1, "c.PyErr_SetImportErrorSubclass", "PyErr_SetImportErrorSubclass"], [23, 2, 1, "c.PyErr_SetInterrupt", "PyErr_SetInterrupt"], [23, 2, 1, "c.PyErr_SetInterruptEx", "PyErr_SetInterruptEx"], [23, 2, 1, "c.PyErr_SetNone", "PyErr_SetNone"], [23, 2, 1, "c.PyErr_SetObject", "PyErr_SetObject"], [23, 2, 1, "c.PyErr_SetString", "PyErr_SetString"], [23, 2, 1, "c.PyErr_SyntaxLocation", "PyErr_SyntaxLocation"], [23, 2, 1, "c.PyErr_SyntaxLocationEx", "PyErr_SyntaxLocationEx"], [23, 2, 1, "c.PyErr_SyntaxLocationObject", "PyErr_SyntaxLocationObject"], [23, 2, 1, "c.PyErr_WarnEx", "PyErr_WarnEx"], [23, 2, 1, "c.PyErr_WarnExplicit", "PyErr_WarnExplicit"], [23, 2, 1, "c.PyErr_WarnExplicitObject", "PyErr_WarnExplicitObject"], [23, 2, 1, "c.PyErr_WarnFormat", "PyErr_WarnFormat"], [23, 2, 1, "c.PyErr_WriteUnraisable", "PyErr_WriteUnraisable"], [33, 2, 1, "c.PyEval_AcquireLock", "PyEval_AcquireLock"], [33, 2, 1, "c.PyEval_AcquireThread", "PyEval_AcquireThread"], [65, 2, 1, "c.PyEval_EvalCode", "PyEval_EvalCode"], [65, 2, 1, "c.PyEval_EvalCodeEx", "PyEval_EvalCodeEx"], [65, 2, 1, "c.PyEval_EvalFrame", "PyEval_EvalFrame"], [65, 2, 1, "c.PyEval_EvalFrameEx", "PyEval_EvalFrameEx"], [52, 2, 1, "c.PyEval_GetBuiltins", "PyEval_GetBuiltins"], [52, 2, 1, "c.PyEval_GetFrame", "PyEval_GetFrame"], [52, 2, 1, "c.PyEval_GetFuncDesc", "PyEval_GetFuncDesc"], [52, 2, 1, "c.PyEval_GetFuncName", "PyEval_GetFuncName"], [52, 2, 1, "c.PyEval_GetGlobals", "PyEval_GetGlobals"], [52, 2, 1, "c.PyEval_GetLocals", "PyEval_GetLocals"], [33, 2, 1, "c.PyEval_InitThreads", "PyEval_InitThreads"], [65, 2, 1, "c.PyEval_MergeCompilerFlags", "PyEval_MergeCompilerFlags"], [33, 2, 1, "c.PyEval_ReleaseLock", "PyEval_ReleaseLock"], [33, 2, 1, "c.PyEval_ReleaseThread", "PyEval_ReleaseThread"], [33, 2, 1, "c.PyEval_RestoreThread", "PyEval_RestoreThread"], [33, 2, 1, "c.PyEval_SaveThread", "PyEval_SaveThread"], [33, 2, 1, "c.PyEval_SetProfile", "PyEval_SetProfile"], [33, 2, 1, "c.PyEval_SetTrace", "PyEval_SetTrace"], [33, 2, 1, "c.PyEval_ThreadsInitialized", "PyEval_ThreadsInitialized"], [23, 2, 1, "c.PyException_GetCause", "PyException_GetCause"], [23, 2, 1, "c.PyException_GetContext", "PyException_GetContext"], [23, 2, 1, "c.PyException_GetTraceback", "PyException_GetTraceback"], [23, 2, 1, "c.PyException_SetCause", "PyException_SetCause"], [23, 2, 1, "c.PyException_SetContext", "PyException_SetContext"], [23, 2, 1, "c.PyException_SetTraceback", "PyException_SetTraceback"], [24, 2, 1, "c.PyFile_FromFd", "PyFile_FromFd"], [24, 2, 1, "c.PyFile_GetLine", "PyFile_GetLine"], [24, 2, 1, "c.PyFile_SetOpenCodeHook", "PyFile_SetOpenCodeHook"], [24, 2, 1, "c.PyFile_WriteObject", "PyFile_WriteObject"], [24, 2, 1, "c.PyFile_WriteString", "PyFile_WriteString"], [25, 4, 1, "c.PyFloatObject", "PyFloatObject"], [25, 2, 1, "c.PyFloat_AS_DOUBLE", "PyFloat_AS_DOUBLE"], [25, 2, 1, "c.PyFloat_AsDouble", "PyFloat_AsDouble"], [25, 2, 1, "c.PyFloat_Check", "PyFloat_Check"], [25, 2, 1, "c.PyFloat_CheckExact", "PyFloat_CheckExact"], [25, 2, 1, "c.PyFloat_FromDouble", "PyFloat_FromDouble"], [25, 2, 1, "c.PyFloat_FromString", "PyFloat_FromString"], [25, 2, 1, "c.PyFloat_GetInfo", "PyFloat_GetInfo"], [25, 2, 1, "c.PyFloat_GetMax", "PyFloat_GetMax"], [25, 2, 1, "c.PyFloat_GetMin", "PyFloat_GetMin"], [25, 2, 1, "c.PyFloat_Pack2", "PyFloat_Pack2"], [25, 2, 1, "c.PyFloat_Pack4", "PyFloat_Pack4"], [25, 2, 1, "c.PyFloat_Pack8", "PyFloat_Pack8"], [25, 0, 1, "c.PyFloat_Type", "PyFloat_Type"], [25, 2, 1, "c.PyFloat_Unpack2", "PyFloat_Unpack2"], [25, 2, 1, "c.PyFloat_Unpack4", "PyFloat_Unpack4"], [25, 2, 1, "c.PyFloat_Unpack8", "PyFloat_Unpack8"], [26, 4, 1, "c.PyFrameObject", "PyFrameObject"], [26, 2, 1, "c.PyFrame_Check", "PyFrame_Check"], [26, 2, 1, "c.PyFrame_GetBack", "PyFrame_GetBack"], [26, 2, 1, "c.PyFrame_GetBuiltins", "PyFrame_GetBuiltins"], [26, 2, 1, "c.PyFrame_GetCode", "PyFrame_GetCode"], [26, 2, 1, "c.PyFrame_GetGenerator", "PyFrame_GetGenerator"], [26, 2, 1, "c.PyFrame_GetGlobals", "PyFrame_GetGlobals"], [26, 2, 1, "c.PyFrame_GetLasti", "PyFrame_GetLasti"], [26, 2, 1, "c.PyFrame_GetLineNumber", "PyFrame_GetLineNumber"], [26, 2, 1, "c.PyFrame_GetLocals", "PyFrame_GetLocals"], [26, 0, 1, "c.PyFrame_Type", "PyFrame_Type"], [54, 2, 1, "c.PyFrozenSet_Check", "PyFrozenSet_Check"], [54, 2, 1, "c.PyFrozenSet_CheckExact", "PyFrozenSet_CheckExact"], [54, 2, 1, "c.PyFrozenSet_New", "PyFrozenSet_New"], [54, 0, 1, "c.PyFrozenSet_Type", "PyFrozenSet_Type"], [27, 4, 1, "c.PyFunctionObject", "PyFunctionObject"], [27, 2, 1, "c.PyFunction_Check", "PyFunction_Check"], [27, 2, 1, "c.PyFunction_GetAnnotations", "PyFunction_GetAnnotations"], [27, 2, 1, "c.PyFunction_GetClosure", "PyFunction_GetClosure"], [27, 2, 1, "c.PyFunction_GetCode", "PyFunction_GetCode"], [27, 2, 1, "c.PyFunction_GetDefaults", "PyFunction_GetDefaults"], [27, 2, 1, "c.PyFunction_GetGlobals", "PyFunction_GetGlobals"], [27, 2, 1, "c.PyFunction_GetModule", "PyFunction_GetModule"], [27, 2, 1, "c.PyFunction_New", "PyFunction_New"], [27, 2, 1, "c.PyFunction_NewWithQualName", "PyFunction_NewWithQualName"], [27, 2, 1, "c.PyFunction_SetAnnotations", "PyFunction_SetAnnotations"], [27, 2, 1, "c.PyFunction_SetClosure", "PyFunction_SetClosure"], [27, 2, 1, "c.PyFunction_SetDefaults", "PyFunction_SetDefaults"], [27, 0, 1, "c.PyFunction_Type", "PyFunction_Type"], [28, 2, 1, "c.PyGC_Collect", "PyGC_Collect"], [28, 2, 1, "c.PyGC_Disable", "PyGC_Disable"], [28, 2, 1, "c.PyGC_Enable", "PyGC_Enable"], [28, 2, 1, "c.PyGC_IsEnabled", "PyGC_IsEnabled"], [33, 2, 1, "c.PyGILState_Check", "PyGILState_Check"], [33, 2, 1, "c.PyGILState_Ensure", "PyGILState_Ensure"], [33, 2, 1, "c.PyGILState_GetThisThreadState", "PyGILState_GetThisThreadState"], [33, 2, 1, "c.PyGILState_Release", "PyGILState_Release"], [29, 4, 1, "c.PyGenObject", "PyGenObject"], [29, 2, 1, "c.PyGen_Check", "PyGen_Check"], [29, 2, 1, "c.PyGen_CheckExact", "PyGen_CheckExact"], [29, 2, 1, "c.PyGen_New", "PyGen_New"], [29, 2, 1, "c.PyGen_NewWithQualName", "PyGen_NewWithQualName"], [29, 0, 1, "c.PyGen_Type", "PyGen_Type"], [57, 4, 1, "c.PyGetSetDef", "PyGetSetDef"], [30, 4, 1, "c.PyHash_FuncDef", "PyHash_FuncDef"], [30, 2, 1, "c.PyHash_GetFuncDef", "PyHash_GetFuncDef"], [31, 2, 1, "c.PyImport_AddModule", "PyImport_AddModule"], [31, 2, 1, "c.PyImport_AddModuleObject", "PyImport_AddModuleObject"], [31, 2, 1, "c.PyImport_AppendInittab", "PyImport_AppendInittab"], [31, 2, 1, "c.PyImport_ExecCodeModule", "PyImport_ExecCodeModule"], [31, 2, 1, "c.PyImport_ExecCodeModuleEx", "PyImport_ExecCodeModuleEx"], [31, 2, 1, "c.PyImport_ExecCodeModuleObject", "PyImport_ExecCodeModuleObject"], [31, 2, 1, "c.PyImport_ExecCodeModuleWithPathnames", "PyImport_ExecCodeModuleWithPathnames"], [31, 2, 1, "c.PyImport_ExtendInittab", "PyImport_ExtendInittab"], [31, 0, 1, "c.PyImport_FrozenModules", "PyImport_FrozenModules"], [31, 2, 1, "c.PyImport_GetImporter", "PyImport_GetImporter"], [31, 2, 1, "c.PyImport_GetMagicNumber", "PyImport_GetMagicNumber"], [31, 2, 1, "c.PyImport_GetMagicTag", "PyImport_GetMagicTag"], [31, 2, 1, "c.PyImport_GetModule", "PyImport_GetModule"], [31, 2, 1, "c.PyImport_GetModuleDict", "PyImport_GetModuleDict"], [31, 2, 1, "c.PyImport_Import", "PyImport_Import"], [31, 2, 1, "c.PyImport_ImportFrozenModule", "PyImport_ImportFrozenModule"], [31, 2, 1, "c.PyImport_ImportFrozenModuleObject", "PyImport_ImportFrozenModuleObject"], [31, 2, 1, "c.PyImport_ImportModule", "PyImport_ImportModule"], [31, 2, 1, "c.PyImport_ImportModuleEx", "PyImport_ImportModuleEx"], [31, 2, 1, "c.PyImport_ImportModuleLevel", "PyImport_ImportModuleLevel"], [31, 2, 1, "c.PyImport_ImportModuleLevelObject", "PyImport_ImportModuleLevelObject"], [31, 2, 1, "c.PyImport_ImportModuleNoBlock", "PyImport_ImportModuleNoBlock"], [31, 2, 1, "c.PyImport_ReloadModule", "PyImport_ReloadModule"], [47, 2, 1, "c.PyIndex_Check", "PyIndex_Check"], [83, 2, 1, "c.PyInit_modulename", "PyInit_modulename"], [44, 2, 1, "c.PyInstanceMethod_Check", "PyInstanceMethod_Check"], [44, 2, 1, "c.PyInstanceMethod_Function", "PyInstanceMethod_Function"], [44, 2, 1, "c.PyInstanceMethod_GET_FUNCTION", "PyInstanceMethod_GET_FUNCTION"], [44, 2, 1, "c.PyInstanceMethod_New", "PyInstanceMethod_New"], [44, 0, 1, "c.PyInstanceMethod_Type", "PyInstanceMethod_Type"], [33, 4, 1, "c.PyInterpreterState", "PyInterpreterState"], [33, 2, 1, "c.PyInterpreterState_Clear", "PyInterpreterState_Clear"], [33, 2, 1, "c.PyInterpreterState_Delete", "PyInterpreterState_Delete"], [33, 2, 1, "c.PyInterpreterState_Get", "PyInterpreterState_Get"], [33, 2, 1, "c.PyInterpreterState_GetDict", "PyInterpreterState_GetDict"], [33, 2, 1, "c.PyInterpreterState_GetID", "PyInterpreterState_GetID"], [33, 2, 1, "c.PyInterpreterState_Head", "PyInterpreterState_Head"], [33, 2, 1, "c.PyInterpreterState_Main", "PyInterpreterState_Main"], [33, 2, 1, "c.PyInterpreterState_New", "PyInterpreterState_New"], [33, 2, 1, "c.PyInterpreterState_Next", "PyInterpreterState_Next"], [33, 2, 1, "c.PyInterpreterState_ThreadHead", "PyInterpreterState_ThreadHead"], [36, 2, 1, "c.PyIter_Check", "PyIter_Check"], [36, 2, 1, "c.PyIter_Next", "PyIter_Next"], [36, 2, 1, "c.PyIter_Send", "PyIter_Send"], [38, 4, 1, "c.PyListObject", "PyListObject"], [38, 2, 1, "c.PyList_Append", "PyList_Append"], [38, 2, 1, "c.PyList_AsTuple", "PyList_AsTuple"], [38, 2, 1, "c.PyList_Check", "PyList_Check"], [38, 2, 1, "c.PyList_CheckExact", "PyList_CheckExact"], [38, 2, 1, "c.PyList_GET_ITEM", "PyList_GET_ITEM"], [38, 2, 1, "c.PyList_GET_SIZE", "PyList_GET_SIZE"], [38, 2, 1, "c.PyList_GetItem", "PyList_GetItem"], [38, 2, 1, "c.PyList_GetSlice", "PyList_GetSlice"], [38, 2, 1, "c.PyList_Insert", "PyList_Insert"], [38, 2, 1, "c.PyList_New", "PyList_New"], [38, 2, 1, "c.PyList_Reverse", "PyList_Reverse"], [38, 2, 1, "c.PyList_SET_ITEM", "PyList_SET_ITEM"], [38, 2, 1, "c.PyList_SetItem", "PyList_SetItem"], [38, 2, 1, "c.PyList_SetSlice", "PyList_SetSlice"], [38, 2, 1, "c.PyList_Size", "PyList_Size"], [38, 2, 1, "c.PyList_Sort", "PyList_Sort"], [38, 0, 1, "c.PyList_Type", "PyList_Type"], [39, 4, 1, "c.PyLongObject", "PyLongObject"], [39, 2, 1, "c.PyLong_AsDouble", "PyLong_AsDouble"], [39, 2, 1, "c.PyLong_AsLong", "PyLong_AsLong"], [39, 2, 1, "c.PyLong_AsLongAndOverflow", "PyLong_AsLongAndOverflow"], [39, 2, 1, "c.PyLong_AsLongLong", "PyLong_AsLongLong"], [39, 2, 1, "c.PyLong_AsLongLongAndOverflow", "PyLong_AsLongLongAndOverflow"], [39, 2, 1, "c.PyLong_AsSize_t", "PyLong_AsSize_t"], [39, 2, 1, "c.PyLong_AsSsize_t", "PyLong_AsSsize_t"], [39, 2, 1, "c.PyLong_AsUnsignedLong", "PyLong_AsUnsignedLong"], [39, 2, 1, "c.PyLong_AsUnsignedLongLong", "PyLong_AsUnsignedLongLong"], [39, 2, 1, "c.PyLong_AsUnsignedLongLongMask", "PyLong_AsUnsignedLongLongMask"], [39, 2, 1, "c.PyLong_AsUnsignedLongMask", "PyLong_AsUnsignedLongMask"], [39, 2, 1, "c.PyLong_AsVoidPtr", "PyLong_AsVoidPtr"], [39, 2, 1, "c.PyLong_Check", "PyLong_Check"], [39, 2, 1, "c.PyLong_CheckExact", "PyLong_CheckExact"], [39, 2, 1, "c.PyLong_FromDouble", "PyLong_FromDouble"], [39, 2, 1, "c.PyLong_FromLong", "PyLong_FromLong"], [39, 2, 1, "c.PyLong_FromLongLong", "PyLong_FromLongLong"], [39, 2, 1, "c.PyLong_FromSize_t", "PyLong_FromSize_t"], [39, 2, 1, "c.PyLong_FromSsize_t", "PyLong_FromSsize_t"], [39, 2, 1, "c.PyLong_FromString", "PyLong_FromString"], [39, 2, 1, "c.PyLong_FromUnicodeObject", "PyLong_FromUnicodeObject"], [39, 2, 1, "c.PyLong_FromUnsignedLong", "PyLong_FromUnsignedLong"], [39, 2, 1, "c.PyLong_FromUnsignedLongLong", "PyLong_FromUnsignedLongLong"], [39, 2, 1, "c.PyLong_FromVoidPtr", "PyLong_FromVoidPtr"], [39, 0, 1, "c.PyLong_Type", "PyLong_Type"], [35, 1, 1, "c.PyMODINIT_FUNC", "PyMODINIT_FUNC"], [62, 4, 1, "c.PyMappingMethods", "PyMappingMethods"], [40, 2, 1, "c.PyMapping_Check", "PyMapping_Check"], [40, 2, 1, "c.PyMapping_DelItem", "PyMapping_DelItem"], [40, 2, 1, "c.PyMapping_DelItemString", "PyMapping_DelItemString"], [40, 2, 1, "c.PyMapping_GetItemString", "PyMapping_GetItemString"], [40, 2, 1, "c.PyMapping_HasKey", "PyMapping_HasKey"], [40, 2, 1, "c.PyMapping_HasKeyString", "PyMapping_HasKeyString"], [40, 2, 1, "c.PyMapping_Items", "PyMapping_Items"], [40, 2, 1, "c.PyMapping_Keys", "PyMapping_Keys"], [40, 2, 1, "c.PyMapping_Length", "PyMapping_Length"], [40, 2, 1, "c.PyMapping_SetItemString", "PyMapping_SetItemString"], [40, 2, 1, "c.PyMapping_Size", "PyMapping_Size"], [40, 2, 1, "c.PyMapping_Values", "PyMapping_Values"], [41, 2, 1, "c.PyMarshal_ReadLastObjectFromFile", "PyMarshal_ReadLastObjectFromFile"], [41, 2, 1, "c.PyMarshal_ReadLongFromFile", "PyMarshal_ReadLongFromFile"], [41, 2, 1, "c.PyMarshal_ReadObjectFromFile", "PyMarshal_ReadObjectFromFile"], [41, 2, 1, "c.PyMarshal_ReadObjectFromString", "PyMarshal_ReadObjectFromString"], [41, 2, 1, "c.PyMarshal_ReadShortFromFile", "PyMarshal_ReadShortFromFile"], [41, 2, 1, "c.PyMarshal_WriteLongToFile", "PyMarshal_WriteLongToFile"], [41, 2, 1, "c.PyMarshal_WriteObjectToFile", "PyMarshal_WriteObjectToFile"], [41, 2, 1, "c.PyMarshal_WriteObjectToString", "PyMarshal_WriteObjectToString"], [42, 4, 1, "c.PyMemAllocatorDomain", "PyMemAllocatorDomain"], [42, 4, 1, "c.PyMemAllocatorEx", "PyMemAllocatorEx"], [42, 2, 1, "c.PyMem_Calloc", "PyMem_Calloc"], [42, 2, 1, "c.PyMem_Del", "PyMem_Del"], [42, 2, 1, "c.PyMem_Free", "PyMem_Free"], [42, 2, 1, "c.PyMem_GetAllocator", "PyMem_GetAllocator"], [42, 2, 1, "c.PyMem_Malloc", "PyMem_Malloc"], [42, 1, 1, "c.PyMem_New", "PyMem_New"], [42, 2, 1, "c.PyMem_RawCalloc", "PyMem_RawCalloc"], [42, 2, 1, "c.PyMem_RawFree", "PyMem_RawFree"], [42, 2, 1, "c.PyMem_RawMalloc", "PyMem_RawMalloc"], [42, 2, 1, "c.PyMem_RawRealloc", "PyMem_RawRealloc"], [42, 2, 1, "c.PyMem_Realloc", "PyMem_Realloc"], [42, 1, 1, "c.PyMem_Resize", "PyMem_Resize"], [42, 2, 1, "c.PyMem_SetAllocator", "PyMem_SetAllocator"], [42, 2, 1, "c.PyMem_SetupDebugHooks", "PyMem_SetupDebugHooks"], [57, 4, 1, "c.PyMemberDef", "PyMemberDef"], [57, 2, 1, "c.PyMember_GetOne", "PyMember_GetOne"], [57, 2, 1, "c.PyMember_SetOne", "PyMember_SetOne"], [43, 2, 1, "c.PyMemoryView_Check", "PyMemoryView_Check"], [43, 2, 1, "c.PyMemoryView_FromBuffer", "PyMemoryView_FromBuffer"], [43, 2, 1, "c.PyMemoryView_FromMemory", "PyMemoryView_FromMemory"], [43, 2, 1, "c.PyMemoryView_FromObject", "PyMemoryView_FromObject"], [43, 2, 1, "c.PyMemoryView_GET_BASE", "PyMemoryView_GET_BASE"], [43, 2, 1, "c.PyMemoryView_GET_BUFFER", "PyMemoryView_GET_BUFFER"], [43, 2, 1, "c.PyMemoryView_GetContiguous", "PyMemoryView_GetContiguous"], [57, 4, 1, "c.PyMethodDef", "PyMethodDef"], [44, 2, 1, "c.PyMethod_Check", "PyMethod_Check"], [44, 2, 1, "c.PyMethod_Function", "PyMethod_Function"], [44, 2, 1, "c.PyMethod_GET_FUNCTION", "PyMethod_GET_FUNCTION"], [44, 2, 1, "c.PyMethod_GET_SELF", "PyMethod_GET_SELF"], [44, 2, 1, "c.PyMethod_New", "PyMethod_New"], [44, 2, 1, "c.PyMethod_Self", "PyMethod_Self"], [44, 0, 1, "c.PyMethod_Type", "PyMethod_Type"], [45, 4, 1, "c.PyModuleDef", "PyModuleDef"], [45, 2, 1, "c.PyModuleDef_Init", "PyModuleDef_Init"], [45, 4, 1, "c.PyModuleDef_Slot", "PyModuleDef_Slot"], [45, 2, 1, "c.PyModule_AddFunctions", "PyModule_AddFunctions"], [45, 2, 1, "c.PyModule_AddIntConstant", "PyModule_AddIntConstant"], [45, 1, 1, "c.PyModule_AddIntMacro", "PyModule_AddIntMacro"], [45, 2, 1, "c.PyModule_AddObject", "PyModule_AddObject"], [45, 2, 1, "c.PyModule_AddObjectRef", "PyModule_AddObjectRef"], [45, 2, 1, "c.PyModule_AddStringConstant", "PyModule_AddStringConstant"], [45, 1, 1, "c.PyModule_AddStringMacro", "PyModule_AddStringMacro"], [45, 2, 1, "c.PyModule_AddType", "PyModule_AddType"], [45, 2, 1, "c.PyModule_Check", "PyModule_Check"], [45, 2, 1, "c.PyModule_CheckExact", "PyModule_CheckExact"], [45, 2, 1, "c.PyModule_Create", "PyModule_Create"], [45, 2, 1, "c.PyModule_Create2", "PyModule_Create2"], [45, 2, 1, "c.PyModule_ExecDef", "PyModule_ExecDef"], [45, 2, 1, "c.PyModule_FromDefAndSpec", "PyModule_FromDefAndSpec"], [45, 2, 1, "c.PyModule_FromDefAndSpec2", "PyModule_FromDefAndSpec2"], [45, 2, 1, "c.PyModule_GetDef", "PyModule_GetDef"], [45, 2, 1, "c.PyModule_GetDict", "PyModule_GetDict"], [45, 2, 1, "c.PyModule_GetFilename", "PyModule_GetFilename"], [45, 2, 1, "c.PyModule_GetFilenameObject", "PyModule_GetFilenameObject"], [45, 2, 1, "c.PyModule_GetName", "PyModule_GetName"], [45, 2, 1, "c.PyModule_GetNameObject", "PyModule_GetNameObject"], [45, 2, 1, "c.PyModule_GetState", "PyModule_GetState"], [45, 2, 1, "c.PyModule_New", "PyModule_New"], [45, 2, 1, "c.PyModule_NewObject", "PyModule_NewObject"], [45, 2, 1, "c.PyModule_SetDocString", "PyModule_SetDocString"], [45, 0, 1, "c.PyModule_Type", "PyModule_Type"], [62, 4, 1, "c.PyNumberMethods", "PyNumberMethods"], [47, 2, 1, "c.PyNumber_Absolute", "PyNumber_Absolute"], [47, 2, 1, "c.PyNumber_Add", "PyNumber_Add"], [47, 2, 1, "c.PyNumber_And", "PyNumber_And"], [47, 2, 1, "c.PyNumber_AsSsize_t", "PyNumber_AsSsize_t"], [47, 2, 1, "c.PyNumber_Check", "PyNumber_Check"], [47, 2, 1, "c.PyNumber_Divmod", "PyNumber_Divmod"], [47, 2, 1, "c.PyNumber_Float", "PyNumber_Float"], [47, 2, 1, "c.PyNumber_FloorDivide", "PyNumber_FloorDivide"], [47, 2, 1, "c.PyNumber_InPlaceAdd", "PyNumber_InPlaceAdd"], [47, 2, 1, "c.PyNumber_InPlaceAnd", "PyNumber_InPlaceAnd"], [47, 2, 1, "c.PyNumber_InPlaceFloorDivide", "PyNumber_InPlaceFloorDivide"], [47, 2, 1, "c.PyNumber_InPlaceLshift", "PyNumber_InPlaceLshift"], [47, 2, 1, "c.PyNumber_InPlaceMatrixMultiply", "PyNumber_InPlaceMatrixMultiply"], [47, 2, 1, "c.PyNumber_InPlaceMultiply", "PyNumber_InPlaceMultiply"], [47, 2, 1, "c.PyNumber_InPlaceOr", "PyNumber_InPlaceOr"], [47, 2, 1, "c.PyNumber_InPlacePower", "PyNumber_InPlacePower"], [47, 2, 1, "c.PyNumber_InPlaceRemainder", "PyNumber_InPlaceRemainder"], [47, 2, 1, "c.PyNumber_InPlaceRshift", "PyNumber_InPlaceRshift"], [47, 2, 1, "c.PyNumber_InPlaceSubtract", "PyNumber_InPlaceSubtract"], [47, 2, 1, "c.PyNumber_InPlaceTrueDivide", "PyNumber_InPlaceTrueDivide"], [47, 2, 1, "c.PyNumber_InPlaceXor", "PyNumber_InPlaceXor"], [47, 2, 1, "c.PyNumber_Index", "PyNumber_Index"], [47, 2, 1, "c.PyNumber_Invert", "PyNumber_Invert"], [47, 2, 1, "c.PyNumber_Long", "PyNumber_Long"], [47, 2, 1, "c.PyNumber_Lshift", "PyNumber_Lshift"], [47, 2, 1, "c.PyNumber_MatrixMultiply", "PyNumber_MatrixMultiply"], [47, 2, 1, "c.PyNumber_Multiply", "PyNumber_Multiply"], [47, 2, 1, "c.PyNumber_Negative", "PyNumber_Negative"], [47, 2, 1, "c.PyNumber_Or", "PyNumber_Or"], [47, 2, 1, "c.PyNumber_Positive", "PyNumber_Positive"], [47, 2, 1, "c.PyNumber_Power", "PyNumber_Power"], [47, 2, 1, "c.PyNumber_Remainder", "PyNumber_Remainder"], [47, 2, 1, "c.PyNumber_Rshift", "PyNumber_Rshift"], [47, 2, 1, "c.PyNumber_Subtract", "PyNumber_Subtract"], [47, 2, 1, "c.PyNumber_ToBase", "PyNumber_ToBase"], [47, 2, 1, "c.PyNumber_TrueDivide", "PyNumber_TrueDivide"], [47, 2, 1, "c.PyNumber_Xor", "PyNumber_Xor"], [58, 2, 1, "c.PyOS_AfterFork", "PyOS_AfterFork"], [58, 2, 1, "c.PyOS_AfterFork_Child", "PyOS_AfterFork_Child"], [58, 2, 1, "c.PyOS_AfterFork_Parent", "PyOS_AfterFork_Parent"], [58, 2, 1, "c.PyOS_BeforeFork", "PyOS_BeforeFork"], [58, 2, 1, "c.PyOS_CheckStack", "PyOS_CheckStack"], [58, 2, 1, "c.PyOS_FSPath", "PyOS_FSPath"], [65, 0, 1, "c.PyOS_InputHook", "PyOS_InputHook"], [65, 0, 1, "c.PyOS_ReadlineFunctionPointer", "PyOS_ReadlineFunctionPointer"], [18, 2, 1, "c.PyOS_double_to_string", "PyOS_double_to_string"], [58, 2, 1, "c.PyOS_getsig", "PyOS_getsig"], [58, 2, 1, "c.PyOS_setsig", "PyOS_setsig"], [58, 4, 1, "c.PyOS_sighandler_t", "PyOS_sighandler_t"], [18, 2, 1, "c.PyOS_snprintf", "PyOS_snprintf"], [18, 2, 1, "c.PyOS_stricmp", "PyOS_stricmp"], [18, 2, 1, "c.PyOS_string_to_double", "PyOS_string_to_double"], [18, 2, 1, "c.PyOS_strnicmp", "PyOS_strnicmp"], [18, 2, 1, "c.PyOS_strtol", "PyOS_strtol"], [18, 2, 1, "c.PyOS_strtoul", "PyOS_strtoul"], [18, 2, 1, "c.PyOS_vsnprintf", "PyOS_vsnprintf"], [57, 4, 1, "c.PyObject", "PyObject"], [42, 4, 1, "c.PyObjectArenaAllocator", "PyObjectArenaAllocator"], [49, 2, 1, "c.PyObject_ASCII", "PyObject_ASCII"], [48, 2, 1, "c.PyObject_AsCharBuffer", "PyObject_AsCharBuffer"], [24, 2, 1, "c.PyObject_AsFileDescriptor", "PyObject_AsFileDescriptor"], [48, 2, 1, "c.PyObject_AsReadBuffer", "PyObject_AsReadBuffer"], [48, 2, 1, "c.PyObject_AsWriteBuffer", "PyObject_AsWriteBuffer"], [49, 2, 1, "c.PyObject_Bytes", "PyObject_Bytes"], [10, 2, 1, "c.PyObject_Call", "PyObject_Call"], [10, 2, 1, "c.PyObject_CallFunction", "PyObject_CallFunction"], [10, 2, 1, "c.PyObject_CallFunctionObjArgs", "PyObject_CallFunctionObjArgs"], [10, 2, 1, "c.PyObject_CallMethod", "PyObject_CallMethod"], [10, 2, 1, "c.PyObject_CallMethodNoArgs", "PyObject_CallMethodNoArgs"], [10, 2, 1, "c.PyObject_CallMethodObjArgs", "PyObject_CallMethodObjArgs"], [10, 2, 1, "c.PyObject_CallMethodOneArg", "PyObject_CallMethodOneArg"], [10, 2, 1, "c.PyObject_CallNoArgs", "PyObject_CallNoArgs"], [10, 2, 1, "c.PyObject_CallObject", "PyObject_CallObject"], [10, 2, 1, "c.PyObject_CallOneArg", "PyObject_CallOneArg"], [42, 2, 1, "c.PyObject_Calloc", "PyObject_Calloc"], [7, 2, 1, "c.PyObject_CheckBuffer", "PyObject_CheckBuffer"], [48, 2, 1, "c.PyObject_CheckReadBuffer", "PyObject_CheckReadBuffer"], [66, 2, 1, "c.PyObject_ClearWeakRefs", "PyObject_ClearWeakRefs"], [7, 2, 1, "c.PyObject_CopyData", "PyObject_CopyData"], [3, 2, 1, "c.PyObject_Del", "PyObject_Del"], [49, 2, 1, "c.PyObject_DelAttr", "PyObject_DelAttr"], [49, 2, 1, "c.PyObject_DelAttrString", "PyObject_DelAttrString"], [49, 2, 1, "c.PyObject_DelItem", "PyObject_DelItem"], [49, 2, 1, "c.PyObject_Dir", "PyObject_Dir"], [49, 2, 1, "c.PyObject_Format", "PyObject_Format"], [42, 2, 1, "c.PyObject_Free", "PyObject_Free"], [28, 2, 1, "c.PyObject_GC_Del", "PyObject_GC_Del"], [28, 2, 1, "c.PyObject_GC_IsFinalized", "PyObject_GC_IsFinalized"], [28, 2, 1, "c.PyObject_GC_IsTracked", "PyObject_GC_IsTracked"], [28, 1, 1, "c.PyObject_GC_New", "PyObject_GC_New"], [28, 1, 1, "c.PyObject_GC_NewVar", "PyObject_GC_NewVar"], [28, 1, 1, "c.PyObject_GC_Resize", "PyObject_GC_Resize"], [28, 2, 1, "c.PyObject_GC_Track", "PyObject_GC_Track"], [28, 2, 1, "c.PyObject_GC_UnTrack", "PyObject_GC_UnTrack"], [49, 2, 1, "c.PyObject_GenericGetAttr", "PyObject_GenericGetAttr"], [49, 2, 1, "c.PyObject_GenericGetDict", "PyObject_GenericGetDict"], [49, 2, 1, "c.PyObject_GenericSetAttr", "PyObject_GenericSetAttr"], [49, 2, 1, "c.PyObject_GenericSetDict", "PyObject_GenericSetDict"], [49, 2, 1, "c.PyObject_GetAIter", "PyObject_GetAIter"], [42, 2, 1, "c.PyObject_GetArenaAllocator", "PyObject_GetArenaAllocator"], [49, 2, 1, "c.PyObject_GetAttr", "PyObject_GetAttr"], [49, 2, 1, "c.PyObject_GetAttrString", "PyObject_GetAttrString"], [7, 2, 1, "c.PyObject_GetBuffer", "PyObject_GetBuffer"], [49, 2, 1, "c.PyObject_GetItem", "PyObject_GetItem"], [49, 2, 1, "c.PyObject_GetIter", "PyObject_GetIter"], [57, 1, 1, "c.PyObject_HEAD", "PyObject_HEAD"], [57, 1, 1, "c.PyObject_HEAD_INIT", "PyObject_HEAD_INIT"], [49, 2, 1, "c.PyObject_HasAttr", "PyObject_HasAttr"], [49, 2, 1, "c.PyObject_HasAttrString", "PyObject_HasAttrString"], [49, 2, 1, "c.PyObject_Hash", "PyObject_Hash"], [49, 2, 1, "c.PyObject_HashNotImplemented", "PyObject_HashNotImplemented"], [28, 2, 1, "c.PyObject_IS_GC", "PyObject_IS_GC"], [3, 2, 1, "c.PyObject_Init", "PyObject_Init"], [3, 2, 1, "c.PyObject_InitVar", "PyObject_InitVar"], [49, 2, 1, "c.PyObject_IsInstance", "PyObject_IsInstance"], [49, 2, 1, "c.PyObject_IsSubclass", "PyObject_IsSubclass"], [49, 2, 1, "c.PyObject_IsTrue", "PyObject_IsTrue"], [49, 2, 1, "c.PyObject_Length", "PyObject_Length"], [49, 2, 1, "c.PyObject_LengthHint", "PyObject_LengthHint"], [42, 2, 1, "c.PyObject_Malloc", "PyObject_Malloc"], [3, 1, 1, "c.PyObject_New", "PyObject_New"], [3, 1, 1, "c.PyObject_NewVar", "PyObject_NewVar"], [49, 2, 1, "c.PyObject_Not", "PyObject_Not"], [49, 2, 1, "c.PyObject_Print", "PyObject_Print"], [42, 2, 1, "c.PyObject_Realloc", "PyObject_Realloc"], [49, 2, 1, "c.PyObject_Repr", "PyObject_Repr"], [49, 2, 1, "c.PyObject_RichCompare", "PyObject_RichCompare"], [49, 2, 1, "c.PyObject_RichCompareBool", "PyObject_RichCompareBool"], [42, 2, 1, "c.PyObject_SetArenaAllocator", "PyObject_SetArenaAllocator"], [49, 2, 1, "c.PyObject_SetAttr", "PyObject_SetAttr"], [49, 2, 1, "c.PyObject_SetAttrString", "PyObject_SetAttrString"], [49, 2, 1, "c.PyObject_SetItem", "PyObject_SetItem"], [49, 2, 1, "c.PyObject_Size", "PyObject_Size"], [49, 2, 1, "c.PyObject_Str", "PyObject_Str"], [49, 2, 1, "c.PyObject_Type", "PyObject_Type"], [49, 2, 1, "c.PyObject_TypeCheck", "PyObject_TypeCheck"], [57, 1, 1, "c.PyObject_VAR_HEAD", "PyObject_VAR_HEAD"], [10, 2, 1, "c.PyObject_Vectorcall", "PyObject_Vectorcall"], [10, 2, 1, "c.PyObject_VectorcallDict", "PyObject_VectorcallDict"], [10, 2, 1, "c.PyObject_VectorcallMethod", "PyObject_VectorcallMethod"], [34, 4, 1, "c.PyPreConfig", "PyPreConfig"], [34, 2, 1, "c.PyPreConfig_InitIsolatedConfig", "PyPreConfig_InitIsolatedConfig"], [34, 2, 1, "c.PyPreConfig_InitPythonConfig", "PyPreConfig_InitPythonConfig"], [21, 0, 1, "c.PyProperty_Type", "PyProperty_Type"], [65, 2, 1, "c.PyRun_AnyFile", "PyRun_AnyFile"], [65, 2, 1, "c.PyRun_AnyFileEx", "PyRun_AnyFileEx"], [65, 2, 1, "c.PyRun_AnyFileExFlags", "PyRun_AnyFileExFlags"], [65, 2, 1, "c.PyRun_AnyFileFlags", "PyRun_AnyFileFlags"], [65, 2, 1, "c.PyRun_File", "PyRun_File"], [65, 2, 1, "c.PyRun_FileEx", "PyRun_FileEx"], [65, 2, 1, "c.PyRun_FileExFlags", "PyRun_FileExFlags"], [65, 2, 1, "c.PyRun_FileFlags", "PyRun_FileFlags"], [65, 2, 1, "c.PyRun_InteractiveLoop", "PyRun_InteractiveLoop"], [65, 2, 1, "c.PyRun_InteractiveLoopFlags", "PyRun_InteractiveLoopFlags"], [65, 2, 1, "c.PyRun_InteractiveOne", "PyRun_InteractiveOne"], [65, 2, 1, "c.PyRun_InteractiveOneFlags", "PyRun_InteractiveOneFlags"], [65, 2, 1, "c.PyRun_SimpleFile", "PyRun_SimpleFile"], [65, 2, 1, "c.PyRun_SimpleFileEx", "PyRun_SimpleFileEx"], [65, 2, 1, "c.PyRun_SimpleFileExFlags", "PyRun_SimpleFileExFlags"], [65, 2, 1, "c.PyRun_SimpleString", "PyRun_SimpleString"], [65, 2, 1, "c.PyRun_SimpleStringFlags", "PyRun_SimpleStringFlags"], [65, 2, 1, "c.PyRun_String", "PyRun_String"], [65, 2, 1, "c.PyRun_StringFlags", "PyRun_StringFlags"], [36, 4, 1, "c.PySendResult", "PySendResult"], [37, 2, 1, "c.PySeqIter_Check", "PySeqIter_Check"], [37, 2, 1, "c.PySeqIter_New", "PySeqIter_New"], [37, 0, 1, "c.PySeqIter_Type", "PySeqIter_Type"], [62, 4, 1, "c.PySequenceMethods", "PySequenceMethods"], [53, 2, 1, "c.PySequence_Check", "PySequence_Check"], [53, 2, 1, "c.PySequence_Concat", "PySequence_Concat"], [53, 2, 1, "c.PySequence_Contains", "PySequence_Contains"], [53, 2, 1, "c.PySequence_Count", "PySequence_Count"], [53, 2, 1, "c.PySequence_DelItem", "PySequence_DelItem"], [53, 2, 1, "c.PySequence_DelSlice", "PySequence_DelSlice"], [53, 2, 1, "c.PySequence_Fast", "PySequence_Fast"], [53, 2, 1, "c.PySequence_Fast_GET_ITEM", "PySequence_Fast_GET_ITEM"], [53, 2, 1, "c.PySequence_Fast_GET_SIZE", "PySequence_Fast_GET_SIZE"], [53, 2, 1, "c.PySequence_Fast_ITEMS", "PySequence_Fast_ITEMS"], [53, 2, 1, "c.PySequence_GetItem", "PySequence_GetItem"], [53, 2, 1, "c.PySequence_GetSlice", "PySequence_GetSlice"], [53, 2, 1, "c.PySequence_ITEM", "PySequence_ITEM"], [53, 2, 1, "c.PySequence_InPlaceConcat", "PySequence_InPlaceConcat"], [53, 2, 1, "c.PySequence_InPlaceRepeat", "PySequence_InPlaceRepeat"], [53, 2, 1, "c.PySequence_Index", "PySequence_Index"], [53, 2, 1, "c.PySequence_Length", "PySequence_Length"], [53, 2, 1, "c.PySequence_List", "PySequence_List"], [53, 2, 1, "c.PySequence_Repeat", "PySequence_Repeat"], [53, 2, 1, "c.PySequence_SetItem", "PySequence_SetItem"], [53, 2, 1, "c.PySequence_SetSlice", "PySequence_SetSlice"], [53, 2, 1, "c.PySequence_Size", "PySequence_Size"], [53, 2, 1, "c.PySequence_Tuple", "PySequence_Tuple"], [54, 4, 1, "c.PySetObject", "PySetObject"], [54, 2, 1, "c.PySet_Add", "PySet_Add"], [54, 2, 1, "c.PySet_Check", "PySet_Check"], [54, 2, 1, "c.PySet_CheckExact", "PySet_CheckExact"], [54, 2, 1, "c.PySet_Clear", "PySet_Clear"], [54, 2, 1, "c.PySet_Contains", "PySet_Contains"], [54, 2, 1, "c.PySet_Discard", "PySet_Discard"], [54, 2, 1, "c.PySet_GET_SIZE", "PySet_GET_SIZE"], [54, 2, 1, "c.PySet_New", "PySet_New"], [54, 2, 1, "c.PySet_Pop", "PySet_Pop"], [54, 2, 1, "c.PySet_Size", "PySet_Size"], [54, 0, 1, "c.PySet_Type", "PySet_Type"], [23, 2, 1, "c.PySignal_SetWakeupFd", "PySignal_SetWakeupFd"], [55, 2, 1, "c.PySlice_AdjustIndices", "PySlice_AdjustIndices"], [55, 2, 1, "c.PySlice_Check", "PySlice_Check"], [55, 2, 1, "c.PySlice_GetIndices", "PySlice_GetIndices"], [55, 2, 1, "c.PySlice_GetIndicesEx", "PySlice_GetIndicesEx"], [55, 2, 1, "c.PySlice_New", "PySlice_New"], [55, 0, 1, "c.PySlice_Type", "PySlice_Type"], [55, 2, 1, "c.PySlice_Unpack", "PySlice_Unpack"], [45, 2, 1, "c.PyState_AddModule", "PyState_AddModule"], [45, 2, 1, "c.PyState_FindModule", "PyState_FindModule"], [45, 2, 1, "c.PyState_RemoveModule", "PyState_RemoveModule"], [34, 4, 1, "c.PyStatus", "PyStatus"], [34, 2, 1, "c.PyStatus_Error", "PyStatus_Error"], [34, 2, 1, "c.PyStatus_Exception", "PyStatus_Exception"], [34, 2, 1, "c.PyStatus_Exit", "PyStatus_Exit"], [34, 2, 1, "c.PyStatus_IsError", "PyStatus_IsError"], [34, 2, 1, "c.PyStatus_IsExit", "PyStatus_IsExit"], [34, 2, 1, "c.PyStatus_NoMemory", "PyStatus_NoMemory"], [34, 2, 1, "c.PyStatus_Ok", "PyStatus_Ok"], [59, 4, 1, "c.PyStructSequence_Desc", "PyStructSequence_Desc"], [59, 4, 1, "c.PyStructSequence_Field", "PyStructSequence_Field"], [59, 2, 1, "c.PyStructSequence_GET_ITEM", "PyStructSequence_GET_ITEM"], [59, 2, 1, "c.PyStructSequence_GetItem", "PyStructSequence_GetItem"], [59, 2, 1, "c.PyStructSequence_InitType", "PyStructSequence_InitType"], [59, 2, 1, "c.PyStructSequence_InitType2", "PyStructSequence_InitType2"], [59, 2, 1, "c.PyStructSequence_New", "PyStructSequence_New"], [59, 2, 1, "c.PyStructSequence_NewType", "PyStructSequence_NewType"], [59, 2, 1, "c.PyStructSequence_SET_ITEM", "PyStructSequence_SET_ITEM"], [59, 2, 1, "c.PyStructSequence_SetItem", "PyStructSequence_SetItem"], [59, 0, 1, "c.PyStructSequence_UnnamedField", "PyStructSequence_UnnamedField"], [58, 2, 1, "c.PySys_AddAuditHook", "PySys_AddAuditHook"], [58, 2, 1, "c.PySys_AddWarnOption", "PySys_AddWarnOption"], [58, 2, 1, "c.PySys_AddWarnOptionUnicode", "PySys_AddWarnOptionUnicode"], [58, 2, 1, "c.PySys_AddXOption", "PySys_AddXOption"], [58, 2, 1, "c.PySys_Audit", "PySys_Audit"], [58, 2, 1, "c.PySys_FormatStderr", "PySys_FormatStderr"], [58, 2, 1, "c.PySys_FormatStdout", "PySys_FormatStdout"], [58, 2, 1, "c.PySys_GetObject", "PySys_GetObject"], [58, 2, 1, "c.PySys_GetXOptions", "PySys_GetXOptions"], [58, 2, 1, "c.PySys_ResetWarnOptions", "PySys_ResetWarnOptions"], [33, 2, 1, "c.PySys_SetArgv", "PySys_SetArgv"], [33, 2, 1, "c.PySys_SetArgvEx", "PySys_SetArgvEx"], [58, 2, 1, "c.PySys_SetObject", "PySys_SetObject"], [58, 2, 1, "c.PySys_SetPath", "PySys_SetPath"], [58, 2, 1, "c.PySys_WriteStderr", "PySys_WriteStderr"], [58, 2, 1, "c.PySys_WriteStdout", "PySys_WriteStdout"], [20, 2, 1, "c.PyTZInfo_Check", "PyTZInfo_Check"], [20, 2, 1, "c.PyTZInfo_CheckExact", "PyTZInfo_CheckExact"], [33, 4, 1, "c.PyThreadState", "PyThreadState"], [33, 2, 1, "c.PyThreadState_Clear", "PyThreadState_Clear"], [33, 2, 1, "c.PyThreadState_Delete", "PyThreadState_Delete"], [33, 2, 1, "c.PyThreadState_DeleteCurrent", "PyThreadState_DeleteCurrent"], [33, 2, 1, "c.PyThreadState_EnterTracing", "PyThreadState_EnterTracing"], [33, 2, 1, "c.PyThreadState_Get", "PyThreadState_Get"], [33, 2, 1, "c.PyThreadState_GetDict", "PyThreadState_GetDict"], [33, 2, 1, "c.PyThreadState_GetFrame", "PyThreadState_GetFrame"], [33, 2, 1, "c.PyThreadState_GetID", "PyThreadState_GetID"], [33, 2, 1, "c.PyThreadState_GetInterpreter", "PyThreadState_GetInterpreter"], [33, 2, 1, "c.PyThreadState_LeaveTracing", "PyThreadState_LeaveTracing"], [33, 2, 1, "c.PyThreadState_New", "PyThreadState_New"], [33, 2, 1, "c.PyThreadState_Next", "PyThreadState_Next"], [33, 2, 1, "c.PyThreadState_SetAsyncExc", "PyThreadState_SetAsyncExc"], [33, 2, 1, "c.PyThreadState_Swap", "PyThreadState_Swap"], [33, 2, 1, "c.PyThread_ReInitTLS", "PyThread_ReInitTLS"], [33, 2, 1, "c.PyThread_create_key", "PyThread_create_key"], [33, 2, 1, "c.PyThread_delete_key", "PyThread_delete_key"], [33, 2, 1, "c.PyThread_delete_key_value", "PyThread_delete_key_value"], [33, 2, 1, "c.PyThread_get_key_value", "PyThread_get_key_value"], [33, 2, 1, "c.PyThread_set_key_value", "PyThread_set_key_value"], [33, 2, 1, "c.PyThread_tss_alloc", "PyThread_tss_alloc"], [33, 2, 1, "c.PyThread_tss_create", "PyThread_tss_create"], [33, 2, 1, "c.PyThread_tss_delete", "PyThread_tss_delete"], [33, 2, 1, "c.PyThread_tss_free", "PyThread_tss_free"], [33, 2, 1, "c.PyThread_tss_get", "PyThread_tss_get"], [33, 2, 1, "c.PyThread_tss_is_created", "PyThread_tss_is_created"], [33, 2, 1, "c.PyThread_tss_set", "PyThread_tss_set"], [20, 2, 1, "c.PyTimeZone_FromOffset", "PyTimeZone_FromOffset"], [20, 2, 1, "c.PyTimeZone_FromOffsetAndName", "PyTimeZone_FromOffsetAndName"], [20, 2, 1, "c.PyTime_Check", "PyTime_Check"], [20, 2, 1, "c.PyTime_CheckExact", "PyTime_CheckExact"], [20, 2, 1, "c.PyTime_FromTime", "PyTime_FromTime"], [20, 2, 1, "c.PyTime_FromTimeAndFold", "PyTime_FromTimeAndFold"], [42, 2, 1, "c.PyTraceMalloc_Track", "PyTraceMalloc_Track"], [42, 2, 1, "c.PyTraceMalloc_Untrack", "PyTraceMalloc_Untrack"], [33, 0, 1, "c.PyTrace_CALL", "PyTrace_CALL"], [33, 0, 1, "c.PyTrace_C_CALL", "PyTrace_C_CALL"], [33, 0, 1, "c.PyTrace_C_EXCEPTION", "PyTrace_C_EXCEPTION"], [33, 0, 1, "c.PyTrace_C_RETURN", "PyTrace_C_RETURN"], [33, 0, 1, "c.PyTrace_EXCEPTION", "PyTrace_EXCEPTION"], [33, 0, 1, "c.PyTrace_LINE", "PyTrace_LINE"], [33, 0, 1, "c.PyTrace_OPCODE", "PyTrace_OPCODE"], [33, 0, 1, "c.PyTrace_RETURN", "PyTrace_RETURN"], [59, 4, 1, "c.PyTupleObject", "PyTupleObject"], [59, 2, 1, "c.PyTuple_Check", "PyTuple_Check"], [59, 2, 1, "c.PyTuple_CheckExact", "PyTuple_CheckExact"], [59, 2, 1, "c.PyTuple_GET_ITEM", "PyTuple_GET_ITEM"], [59, 2, 1, "c.PyTuple_GET_SIZE", "PyTuple_GET_SIZE"], [59, 2, 1, "c.PyTuple_GetItem", "PyTuple_GetItem"], [59, 2, 1, "c.PyTuple_GetSlice", "PyTuple_GetSlice"], [59, 2, 1, "c.PyTuple_New", "PyTuple_New"], [59, 2, 1, "c.PyTuple_Pack", "PyTuple_Pack"], [59, 2, 1, "c.PyTuple_SET_ITEM", "PyTuple_SET_ITEM"], [59, 2, 1, "c.PyTuple_SetItem", "PyTuple_SetItem"], [59, 2, 1, "c.PyTuple_Size", "PyTuple_Size"], [59, 0, 1, "c.PyTuple_Type", "PyTuple_Type"], [60, 4, 1, "c.PyTypeObject", "PyTypeObject"], [60, 2, 1, "c.PyType_Check", "PyType_Check"], [60, 2, 1, "c.PyType_CheckExact", "PyType_CheckExact"], [60, 2, 1, "c.PyType_ClearCache", "PyType_ClearCache"], [60, 2, 1, "c.PyType_FromModuleAndSpec", "PyType_FromModuleAndSpec"], [60, 2, 1, "c.PyType_FromSpec", "PyType_FromSpec"], [60, 2, 1, "c.PyType_FromSpecWithBases", "PyType_FromSpecWithBases"], [60, 2, 1, "c.PyType_GenericAlloc", "PyType_GenericAlloc"], [60, 2, 1, "c.PyType_GenericNew", "PyType_GenericNew"], [60, 2, 1, "c.PyType_GetFlags", "PyType_GetFlags"], [60, 2, 1, "c.PyType_GetModule", "PyType_GetModule"], [60, 2, 1, "c.PyType_GetModuleByDef", "PyType_GetModuleByDef"], [60, 2, 1, "c.PyType_GetModuleState", "PyType_GetModuleState"], [60, 2, 1, "c.PyType_GetName", "PyType_GetName"], [60, 2, 1, "c.PyType_GetQualName", "PyType_GetQualName"], [60, 2, 1, "c.PyType_GetSlot", "PyType_GetSlot"], [60, 2, 1, "c.PyType_HasFeature", "PyType_HasFeature"], [60, 2, 1, "c.PyType_IS_GC", "PyType_IS_GC"], [60, 2, 1, "c.PyType_IsSubtype", "PyType_IsSubtype"], [60, 2, 1, "c.PyType_Modified", "PyType_Modified"], [60, 2, 1, "c.PyType_Ready", "PyType_Ready"], [60, 4, 1, "c.PyType_Slot", "PyType_Slot"], [60, 4, 1, "c.PyType_Spec", "PyType_Spec"], [60, 0, 1, "c.PyType_Type", "PyType_Type"], [23, 2, 1, "c.PyUnicodeDecodeError_Create", "PyUnicodeDecodeError_Create"], [23, 2, 1, "c.PyUnicodeDecodeError_GetEncoding", "PyUnicodeDecodeError_GetEncoding"], [23, 2, 1, "c.PyUnicodeDecodeError_GetEnd", "PyUnicodeDecodeError_GetEnd"], [23, 2, 1, "c.PyUnicodeDecodeError_GetObject", "PyUnicodeDecodeError_GetObject"], [23, 2, 1, "c.PyUnicodeDecodeError_GetReason", "PyUnicodeDecodeError_GetReason"], [23, 2, 1, "c.PyUnicodeDecodeError_GetStart", "PyUnicodeDecodeError_GetStart"], [23, 2, 1, "c.PyUnicodeDecodeError_SetEnd", "PyUnicodeDecodeError_SetEnd"], [23, 2, 1, "c.PyUnicodeDecodeError_SetReason", "PyUnicodeDecodeError_SetReason"], [23, 2, 1, "c.PyUnicodeDecodeError_SetStart", "PyUnicodeDecodeError_SetStart"], [23, 2, 1, "c.PyUnicodeEncodeError_GetEncoding", "PyUnicodeEncodeError_GetEncoding"], [23, 2, 1, "c.PyUnicodeEncodeError_GetEnd", "PyUnicodeEncodeError_GetEnd"], [23, 2, 1, "c.PyUnicodeEncodeError_GetObject", "PyUnicodeEncodeError_GetObject"], [23, 2, 1, "c.PyUnicodeEncodeError_GetReason", "PyUnicodeEncodeError_GetReason"], [23, 2, 1, "c.PyUnicodeEncodeError_GetStart", "PyUnicodeEncodeError_GetStart"], [23, 2, 1, "c.PyUnicodeEncodeError_SetEnd", "PyUnicodeEncodeError_SetEnd"], [23, 2, 1, "c.PyUnicodeEncodeError_SetReason", "PyUnicodeEncodeError_SetReason"], [23, 2, 1, "c.PyUnicodeEncodeError_SetStart", "PyUnicodeEncodeError_SetStart"], [63, 4, 1, "c.PyUnicodeObject", "PyUnicodeObject"], [23, 2, 1, "c.PyUnicodeTranslateError_GetEnd", "PyUnicodeTranslateError_GetEnd"], [23, 2, 1, "c.PyUnicodeTranslateError_GetObject", "PyUnicodeTranslateError_GetObject"], [23, 2, 1, "c.PyUnicodeTranslateError_GetReason", "PyUnicodeTranslateError_GetReason"], [23, 2, 1, "c.PyUnicodeTranslateError_GetStart", "PyUnicodeTranslateError_GetStart"], [23, 2, 1, "c.PyUnicodeTranslateError_SetEnd", "PyUnicodeTranslateError_SetEnd"], [23, 2, 1, "c.PyUnicodeTranslateError_SetReason", "PyUnicodeTranslateError_SetReason"], [23, 2, 1, "c.PyUnicodeTranslateError_SetStart", "PyUnicodeTranslateError_SetStart"], [63, 2, 1, "c.PyUnicode_1BYTE_DATA", "PyUnicode_1BYTE_DATA"], [63, 1, 1, "c.PyUnicode_1BYTE_KIND", "PyUnicode_1BYTE_KIND"], [63, 2, 1, "c.PyUnicode_2BYTE_DATA", "PyUnicode_2BYTE_DATA"], [63, 1, 1, "c.PyUnicode_2BYTE_KIND", "PyUnicode_2BYTE_KIND"], [63, 2, 1, "c.PyUnicode_4BYTE_DATA", "PyUnicode_4BYTE_DATA"], [63, 1, 1, "c.PyUnicode_4BYTE_KIND", "PyUnicode_4BYTE_KIND"], [63, 2, 1, "c.PyUnicode_AS_DATA", "PyUnicode_AS_DATA"], [63, 2, 1, "c.PyUnicode_AS_UNICODE", "PyUnicode_AS_UNICODE"], [63, 2, 1, "c.PyUnicode_AsASCIIString", "PyUnicode_AsASCIIString"], [63, 2, 1, "c.PyUnicode_AsCharmapString", "PyUnicode_AsCharmapString"], [63, 2, 1, "c.PyUnicode_AsEncodedString", "PyUnicode_AsEncodedString"], [63, 2, 1, "c.PyUnicode_AsLatin1String", "PyUnicode_AsLatin1String"], [63, 2, 1, "c.PyUnicode_AsMBCSString", "PyUnicode_AsMBCSString"], [63, 2, 1, "c.PyUnicode_AsRawUnicodeEscapeString", "PyUnicode_AsRawUnicodeEscapeString"], [63, 2, 1, "c.PyUnicode_AsUCS4", "PyUnicode_AsUCS4"], [63, 2, 1, "c.PyUnicode_AsUCS4Copy", "PyUnicode_AsUCS4Copy"], [63, 2, 1, "c.PyUnicode_AsUTF16String", "PyUnicode_AsUTF16String"], [63, 2, 1, "c.PyUnicode_AsUTF32String", "PyUnicode_AsUTF32String"], [63, 2, 1, "c.PyUnicode_AsUTF8", "PyUnicode_AsUTF8"], [63, 2, 1, "c.PyUnicode_AsUTF8AndSize", "PyUnicode_AsUTF8AndSize"], [63, 2, 1, "c.PyUnicode_AsUTF8String", "PyUnicode_AsUTF8String"], [63, 2, 1, "c.PyUnicode_AsUnicode", "PyUnicode_AsUnicode"], [63, 2, 1, "c.PyUnicode_AsUnicodeAndSize", "PyUnicode_AsUnicodeAndSize"], [63, 2, 1, "c.PyUnicode_AsUnicodeEscapeString", "PyUnicode_AsUnicodeEscapeString"], [63, 2, 1, "c.PyUnicode_AsWideChar", "PyUnicode_AsWideChar"], [63, 2, 1, "c.PyUnicode_AsWideCharString", "PyUnicode_AsWideCharString"], [63, 2, 1, "c.PyUnicode_Check", "PyUnicode_Check"], [63, 2, 1, "c.PyUnicode_CheckExact", "PyUnicode_CheckExact"], [63, 2, 1, "c.PyUnicode_Compare", "PyUnicode_Compare"], [63, 2, 1, "c.PyUnicode_CompareWithASCIIString", "PyUnicode_CompareWithASCIIString"], [63, 2, 1, "c.PyUnicode_Concat", "PyUnicode_Concat"], [63, 2, 1, "c.PyUnicode_Contains", "PyUnicode_Contains"], [63, 2, 1, "c.PyUnicode_CopyCharacters", "PyUnicode_CopyCharacters"], [63, 2, 1, "c.PyUnicode_Count", "PyUnicode_Count"], [63, 2, 1, "c.PyUnicode_DATA", "PyUnicode_DATA"], [63, 2, 1, "c.PyUnicode_Decode", "PyUnicode_Decode"], [63, 2, 1, "c.PyUnicode_DecodeASCII", "PyUnicode_DecodeASCII"], [63, 2, 1, "c.PyUnicode_DecodeCharmap", "PyUnicode_DecodeCharmap"], [63, 2, 1, "c.PyUnicode_DecodeFSDefault", "PyUnicode_DecodeFSDefault"], [63, 2, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "PyUnicode_DecodeFSDefaultAndSize"], [63, 2, 1, "c.PyUnicode_DecodeLatin1", "PyUnicode_DecodeLatin1"], [63, 2, 1, "c.PyUnicode_DecodeLocale", "PyUnicode_DecodeLocale"], [63, 2, 1, "c.PyUnicode_DecodeLocaleAndSize", "PyUnicode_DecodeLocaleAndSize"], [63, 2, 1, "c.PyUnicode_DecodeMBCS", "PyUnicode_DecodeMBCS"], [63, 2, 1, "c.PyUnicode_DecodeMBCSStateful", "PyUnicode_DecodeMBCSStateful"], [63, 2, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "PyUnicode_DecodeRawUnicodeEscape"], [63, 2, 1, "c.PyUnicode_DecodeUTF16", "PyUnicode_DecodeUTF16"], [63, 2, 1, "c.PyUnicode_DecodeUTF16Stateful", "PyUnicode_DecodeUTF16Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUTF32", "PyUnicode_DecodeUTF32"], [63, 2, 1, "c.PyUnicode_DecodeUTF32Stateful", "PyUnicode_DecodeUTF32Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUTF7", "PyUnicode_DecodeUTF7"], [63, 2, 1, "c.PyUnicode_DecodeUTF7Stateful", "PyUnicode_DecodeUTF7Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUTF8", "PyUnicode_DecodeUTF8"], [63, 2, 1, "c.PyUnicode_DecodeUTF8Stateful", "PyUnicode_DecodeUTF8Stateful"], [63, 2, 1, "c.PyUnicode_DecodeUnicodeEscape", "PyUnicode_DecodeUnicodeEscape"], [63, 2, 1, "c.PyUnicode_EncodeCodePage", "PyUnicode_EncodeCodePage"], [63, 2, 1, "c.PyUnicode_EncodeFSDefault", "PyUnicode_EncodeFSDefault"], [63, 2, 1, "c.PyUnicode_EncodeLocale", "PyUnicode_EncodeLocale"], [63, 2, 1, "c.PyUnicode_FSConverter", "PyUnicode_FSConverter"], [63, 2, 1, "c.PyUnicode_FSDecoder", "PyUnicode_FSDecoder"], [63, 2, 1, "c.PyUnicode_Fill", "PyUnicode_Fill"], [63, 2, 1, "c.PyUnicode_Find", "PyUnicode_Find"], [63, 2, 1, "c.PyUnicode_FindChar", "PyUnicode_FindChar"], [63, 2, 1, "c.PyUnicode_Format", "PyUnicode_Format"], [63, 2, 1, "c.PyUnicode_FromEncodedObject", "PyUnicode_FromEncodedObject"], [63, 2, 1, "c.PyUnicode_FromFormat", "PyUnicode_FromFormat"], [63, 2, 1, "c.PyUnicode_FromFormatV", "PyUnicode_FromFormatV"], [63, 2, 1, "c.PyUnicode_FromKindAndData", "PyUnicode_FromKindAndData"], [63, 2, 1, "c.PyUnicode_FromObject", "PyUnicode_FromObject"], [63, 2, 1, "c.PyUnicode_FromString", "PyUnicode_FromString"], [63, 2, 1, "c.PyUnicode_FromStringAndSize", "PyUnicode_FromStringAndSize"], [63, 2, 1, "c.PyUnicode_FromUnicode", "PyUnicode_FromUnicode"], [63, 2, 1, "c.PyUnicode_FromWideChar", "PyUnicode_FromWideChar"], [63, 2, 1, "c.PyUnicode_GET_DATA_SIZE", "PyUnicode_GET_DATA_SIZE"], [63, 2, 1, "c.PyUnicode_GET_LENGTH", "PyUnicode_GET_LENGTH"], [63, 2, 1, "c.PyUnicode_GET_SIZE", "PyUnicode_GET_SIZE"], [63, 2, 1, "c.PyUnicode_GetLength", "PyUnicode_GetLength"], [63, 2, 1, "c.PyUnicode_GetSize", "PyUnicode_GetSize"], [63, 2, 1, "c.PyUnicode_InternFromString", "PyUnicode_InternFromString"], [63, 2, 1, "c.PyUnicode_InternInPlace", "PyUnicode_InternInPlace"], [63, 2, 1, "c.PyUnicode_IsIdentifier", "PyUnicode_IsIdentifier"], [63, 2, 1, "c.PyUnicode_Join", "PyUnicode_Join"], [63, 2, 1, "c.PyUnicode_KIND", "PyUnicode_KIND"], [63, 2, 1, "c.PyUnicode_MAX_CHAR_VALUE", "PyUnicode_MAX_CHAR_VALUE"], [63, 2, 1, "c.PyUnicode_New", "PyUnicode_New"], [63, 2, 1, "c.PyUnicode_READ", "PyUnicode_READ"], [63, 2, 1, "c.PyUnicode_READY", "PyUnicode_READY"], [63, 2, 1, "c.PyUnicode_READ_CHAR", "PyUnicode_READ_CHAR"], [63, 2, 1, "c.PyUnicode_ReadChar", "PyUnicode_ReadChar"], [63, 2, 1, "c.PyUnicode_Replace", "PyUnicode_Replace"], [63, 2, 1, "c.PyUnicode_RichCompare", "PyUnicode_RichCompare"], [63, 2, 1, "c.PyUnicode_Split", "PyUnicode_Split"], [63, 2, 1, "c.PyUnicode_Splitlines", "PyUnicode_Splitlines"], [63, 2, 1, "c.PyUnicode_Substring", "PyUnicode_Substring"], [63, 2, 1, "c.PyUnicode_Tailmatch", "PyUnicode_Tailmatch"], [63, 2, 1, "c.PyUnicode_Translate", "PyUnicode_Translate"], [63, 0, 1, "c.PyUnicode_Type", "PyUnicode_Type"], [63, 1, 1, "c.PyUnicode_WCHAR_KIND", "PyUnicode_WCHAR_KIND"], [63, 2, 1, "c.PyUnicode_WRITE", "PyUnicode_WRITE"], [63, 2, 1, "c.PyUnicode_WriteChar", "PyUnicode_WriteChar"], [57, 4, 1, "c.PyVarObject", "PyVarObject"], [57, 1, 1, "c.PyVarObject_HEAD_INIT", "PyVarObject_HEAD_INIT"], [10, 2, 1, "c.PyVectorcall_Call", "PyVectorcall_Call"], [10, 2, 1, "c.PyVectorcall_Function", "PyVectorcall_Function"], [10, 2, 1, "c.PyVectorcall_NARGS", "PyVectorcall_NARGS"], [66, 2, 1, "c.PyWeakref_Check", "PyWeakref_Check"], [66, 2, 1, "c.PyWeakref_CheckProxy", "PyWeakref_CheckProxy"], [66, 2, 1, "c.PyWeakref_CheckRef", "PyWeakref_CheckRef"], [66, 2, 1, "c.PyWeakref_GET_OBJECT", "PyWeakref_GET_OBJECT"], [66, 2, 1, "c.PyWeakref_GetObject", "PyWeakref_GetObject"], [66, 2, 1, "c.PyWeakref_NewProxy", "PyWeakref_NewProxy"], [66, 2, 1, "c.PyWeakref_NewRef", "PyWeakref_NewRef"], [34, 4, 1, "c.PyWideStringList", "PyWideStringList"], [34, 2, 1, "c.PyWideStringList_Append", "PyWideStringList_Append"], [34, 2, 1, "c.PyWideStringList_Insert", "PyWideStringList_Insert"], [21, 2, 1, "c.PyWrapper_New", "PyWrapper_New"], [35, 1, 1, "c.Py_ABS", "Py_ABS"], [35, 1, 1, "c.Py_ALWAYS_INLINE", "Py_ALWAYS_INLINE"], [33, 2, 1, "c.Py_AddPendingCall", "Py_AddPendingCall"], [58, 2, 1, "c.Py_AtExit", "Py_AtExit"], [58, 4, 1, "c.Py_AuditHookFunction", "Py_AuditHookFunction"], [33, 1, 1, "c.Py_BEGIN_ALLOW_THREADS", "Py_BEGIN_ALLOW_THREADS"], [33, 1, 1, "c.Py_BLOCK_THREADS", "Py_BLOCK_THREADS"], [5, 2, 1, "c.Py_BuildValue", "Py_BuildValue"], [65, 2, 1, "c.Py_BytesMain", "Py_BytesMain"], [33, 0, 1, "c.Py_BytesWarningFlag", "Py_BytesWarningFlag"], [35, 1, 1, "c.Py_CHARMASK", "Py_CHARMASK"], [51, 2, 1, "c.Py_CLEAR", "Py_CLEAR"], [65, 2, 1, "c.Py_CompileString", "Py_CompileString"], [65, 2, 1, "c.Py_CompileStringExFlags", "Py_CompileStringExFlags"], [65, 2, 1, "c.Py_CompileStringFlags", "Py_CompileStringFlags"], [65, 2, 1, "c.Py_CompileStringObject", "Py_CompileStringObject"], [35, 1, 1, "c.Py_DEBUG", "Py_DEBUG"], [51, 2, 1, "c.Py_DECREF", "Py_DECREF"], [35, 1, 1, "c.Py_DEPRECATED", "Py_DEPRECATED"], [33, 0, 1, "c.Py_DebugFlag", "Py_DebugFlag"], [51, 2, 1, "c.Py_DecRef", "Py_DecRef"], [58, 2, 1, "c.Py_DecodeLocale", "Py_DecodeLocale"], [33, 0, 1, "c.Py_DontWriteBytecodeFlag", "Py_DontWriteBytecodeFlag"], [33, 1, 1, "c.Py_END_ALLOW_THREADS", "Py_END_ALLOW_THREADS"], [62, 1, 1, "c.Py_EQ", "Py_EQ"], [55, 0, 1, "c.Py_Ellipsis", "Py_Ellipsis"], [58, 2, 1, "c.Py_EncodeLocale", "Py_EncodeLocale"], [33, 2, 1, "c.Py_EndInterpreter", "Py_EndInterpreter"], [23, 2, 1, "c.Py_EnterRecursiveCall", "Py_EnterRecursiveCall"], [58, 2, 1, "c.Py_Exit", "Py_Exit"], [34, 2, 1, "c.Py_ExitStatusException", "Py_ExitStatusException"], [6, 0, 1, "c.Py_False", "Py_False"], [58, 2, 1, "c.Py_FatalError", "Py_FatalError"], [58, 2, 1, "c.Py_FdIsInteractive", "Py_FdIsInteractive"], [33, 2, 1, "c.Py_Finalize", "Py_Finalize"], [33, 2, 1, "c.Py_FinalizeEx", "Py_FinalizeEx"], [33, 0, 1, "c.Py_FrozenFlag", "Py_FrozenFlag"], [62, 1, 1, "c.Py_GE", "Py_GE"], [35, 1, 1, "c.Py_GETENV", "Py_GETENV"], [62, 1, 1, "c.Py_GT", "Py_GT"], [61, 2, 1, "c.Py_GenericAlias", "Py_GenericAlias"], [61, 0, 1, "c.Py_GenericAliasType", "Py_GenericAliasType"], [34, 2, 1, "c.Py_GetArgcArgv", "Py_GetArgcArgv"], [33, 2, 1, "c.Py_GetBuildInfo", "Py_GetBuildInfo"], [33, 2, 1, "c.Py_GetCompiler", "Py_GetCompiler"], [33, 2, 1, "c.Py_GetCopyright", "Py_GetCopyright"], [33, 2, 1, "c.Py_GetExecPrefix", "Py_GetExecPrefix"], [33, 2, 1, "c.Py_GetPath", "Py_GetPath"], [33, 2, 1, "c.Py_GetPlatform", "Py_GetPlatform"], [33, 2, 1, "c.Py_GetPrefix", "Py_GetPrefix"], [33, 2, 1, "c.Py_GetProgramFullPath", "Py_GetProgramFullPath"], [33, 2, 1, "c.Py_GetProgramName", "Py_GetProgramName"], [33, 2, 1, "c.Py_GetPythonHome", "Py_GetPythonHome"], [33, 2, 1, "c.Py_GetVersion", "Py_GetVersion"], [33, 0, 1, "c.Py_HashRandomizationFlag", "Py_HashRandomizationFlag"], [51, 2, 1, "c.Py_INCREF", "Py_INCREF"], [57, 2, 1, "c.Py_IS_TYPE", "Py_IS_TYPE"], [33, 0, 1, "c.Py_IgnoreEnvironmentFlag", "Py_IgnoreEnvironmentFlag"], [51, 2, 1, "c.Py_IncRef", "Py_IncRef"], [33, 2, 1, "c.Py_Initialize", "Py_Initialize"], [33, 2, 1, "c.Py_InitializeEx", "Py_InitializeEx"], [34, 2, 1, "c.Py_InitializeFromConfig", "Py_InitializeFromConfig"], [33, 0, 1, "c.Py_InspectFlag", "Py_InspectFlag"], [33, 0, 1, "c.Py_InteractiveFlag", "Py_InteractiveFlag"], [57, 2, 1, "c.Py_Is", "Py_Is"], [57, 2, 1, "c.Py_IsFalse", "Py_IsFalse"], [33, 2, 1, "c.Py_IsInitialized", "Py_IsInitialized"], [57, 2, 1, "c.Py_IsNone", "Py_IsNone"], [57, 2, 1, "c.Py_IsTrue", "Py_IsTrue"], [33, 0, 1, "c.Py_IsolatedFlag", "Py_IsolatedFlag"], [62, 1, 1, "c.Py_LE", "Py_LE"], [56, 1, 1, "c.Py_LIMITED_API", "Py_LIMITED_API"], [62, 1, 1, "c.Py_LT", "Py_LT"], [23, 2, 1, "c.Py_LeaveRecursiveCall", "Py_LeaveRecursiveCall"], [33, 0, 1, "c.Py_LegacyWindowsFSEncodingFlag", "Py_LegacyWindowsFSEncodingFlag"], [33, 0, 1, "c.Py_LegacyWindowsStdioFlag", "Py_LegacyWindowsStdioFlag"], [35, 1, 1, "c.Py_MAX", "Py_MAX"], [35, 1, 1, "c.Py_MEMBER_SIZE", "Py_MEMBER_SIZE"], [35, 1, 1, "c.Py_MIN", "Py_MIN"], [65, 2, 1, "c.Py_Main", "Py_Main"], [62, 1, 1, "c.Py_NE", "Py_NE"], [35, 1, 1, "c.Py_NO_INLINE", "Py_NO_INLINE"], [33, 2, 1, "c.Py_NewInterpreter", "Py_NewInterpreter"], [51, 2, 1, "c.Py_NewRef", "Py_NewRef"], [33, 0, 1, "c.Py_NoSiteFlag", "Py_NoSiteFlag"], [33, 0, 1, "c.Py_NoUserSiteDirectory", "Py_NoUserSiteDirectory"], [46, 0, 1, "c.Py_None", "Py_None"], [49, 0, 1, "c.Py_NotImplemented", "Py_NotImplemented"], [24, 4, 1, "c.Py_OpenCodeHookFunction", "Py_OpenCodeHookFunction"], [33, 0, 1, "c.Py_OptimizeFlag", "Py_OptimizeFlag"], [49, 1, 1, "c.Py_PRINT_RAW", "Py_PRINT_RAW"], [34, 2, 1, "c.Py_PreInitialize", "Py_PreInitialize"], [34, 2, 1, "c.Py_PreInitializeFromArgs", "Py_PreInitializeFromArgs"], [34, 2, 1, "c.Py_PreInitializeFromBytesArgs", "Py_PreInitializeFromBytesArgs"], [33, 0, 1, "c.Py_QuietFlag", "Py_QuietFlag"], [57, 2, 1, "c.Py_REFCNT", "Py_REFCNT"], [6, 1, 1, "c.Py_RETURN_FALSE", "Py_RETURN_FALSE"], [46, 1, 1, "c.Py_RETURN_NONE", "Py_RETURN_NONE"], [49, 1, 1, "c.Py_RETURN_NOTIMPLEMENTED", "Py_RETURN_NOTIMPLEMENTED"], [62, 1, 1, "c.Py_RETURN_RICHCOMPARE", "Py_RETURN_RICHCOMPARE"], [6, 1, 1, "c.Py_RETURN_TRUE", "Py_RETURN_TRUE"], [23, 2, 1, "c.Py_ReprEnter", "Py_ReprEnter"], [23, 2, 1, "c.Py_ReprLeave", "Py_ReprLeave"], [34, 2, 1, "c.Py_RunMain", "Py_RunMain"], [57, 2, 1, "c.Py_SET_REFCNT", "Py_SET_REFCNT"], [57, 2, 1, "c.Py_SET_SIZE", "Py_SET_SIZE"], [57, 2, 1, "c.Py_SET_TYPE", "Py_SET_TYPE"], [57, 2, 1, "c.Py_SIZE", "Py_SIZE"], [35, 1, 1, "c.Py_STRINGIFY", "Py_STRINGIFY"], [33, 2, 1, "c.Py_SetPath", "Py_SetPath"], [33, 2, 1, "c.Py_SetProgramName", "Py_SetProgramName"], [33, 2, 1, "c.Py_SetPythonHome", "Py_SetPythonHome"], [33, 2, 1, "c.Py_SetStandardStreamEncoding", "Py_SetStandardStreamEncoding"], [62, 1, 1, "c.Py_TPFLAGS_BASETYPE", "Py_TPFLAGS_BASETYPE"], [62, 1, 1, "c.Py_TPFLAGS_BASE_EXC_SUBCLASS", "Py_TPFLAGS_BASE_EXC_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_BYTES_SUBCLASS", "Py_TPFLAGS_BYTES_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_DEFAULT", "Py_TPFLAGS_DEFAULT"], [62, 1, 1, "c.Py_TPFLAGS_DICT_SUBCLASS", "Py_TPFLAGS_DICT_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_DISALLOW_INSTANTIATION", "Py_TPFLAGS_DISALLOW_INSTANTIATION"], [62, 1, 1, "c.Py_TPFLAGS_HAVE_FINALIZE", "Py_TPFLAGS_HAVE_FINALIZE"], [62, 1, 1, "c.Py_TPFLAGS_HAVE_GC", "Py_TPFLAGS_HAVE_GC"], [62, 1, 1, "c.Py_TPFLAGS_HAVE_VECTORCALL", "Py_TPFLAGS_HAVE_VECTORCALL"], [62, 1, 1, "c.Py_TPFLAGS_HEAPTYPE", "Py_TPFLAGS_HEAPTYPE"], [62, 1, 1, "c.Py_TPFLAGS_IMMUTABLETYPE", "Py_TPFLAGS_IMMUTABLETYPE"], [62, 1, 1, "c.Py_TPFLAGS_LIST_SUBCLASS", "Py_TPFLAGS_LIST_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_LONG_SUBCLASS", "Py_TPFLAGS_LONG_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_MAPPING", "Py_TPFLAGS_MAPPING"], [62, 1, 1, "c.Py_TPFLAGS_METHOD_DESCRIPTOR", "Py_TPFLAGS_METHOD_DESCRIPTOR"], [62, 1, 1, "c.Py_TPFLAGS_READY", "Py_TPFLAGS_READY"], [62, 1, 1, "c.Py_TPFLAGS_READYING", "Py_TPFLAGS_READYING"], [62, 1, 1, "c.Py_TPFLAGS_SEQUENCE", "Py_TPFLAGS_SEQUENCE"], [62, 1, 1, "c.Py_TPFLAGS_TUPLE_SUBCLASS", "Py_TPFLAGS_TUPLE_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_TYPE_SUBCLASS", "Py_TPFLAGS_TYPE_SUBCLASS"], [62, 1, 1, "c.Py_TPFLAGS_UNICODE_SUBCLASS", "Py_TPFLAGS_UNICODE_SUBCLASS"], [57, 2, 1, "c.Py_TYPE", "Py_TYPE"], [6, 0, 1, "c.Py_True", "Py_True"], [63, 4, 1, "c.Py_UCS1", "Py_UCS1"], [63, 4, 1, "c.Py_UCS2", "Py_UCS2"], [63, 4, 1, "c.Py_UCS4", "Py_UCS4"], [33, 1, 1, "c.Py_UNBLOCK_THREADS", "Py_UNBLOCK_THREADS"], [63, 4, 1, "c.Py_UNICODE", "Py_UNICODE"], [63, 2, 1, "c.Py_UNICODE_ISALNUM", "Py_UNICODE_ISALNUM"], [63, 2, 1, "c.Py_UNICODE_ISALPHA", "Py_UNICODE_ISALPHA"], [63, 2, 1, "c.Py_UNICODE_ISDECIMAL", "Py_UNICODE_ISDECIMAL"], [63, 2, 1, "c.Py_UNICODE_ISDIGIT", "Py_UNICODE_ISDIGIT"], [63, 2, 1, "c.Py_UNICODE_ISLINEBREAK", "Py_UNICODE_ISLINEBREAK"], [63, 2, 1, "c.Py_UNICODE_ISLOWER", "Py_UNICODE_ISLOWER"], [63, 2, 1, "c.Py_UNICODE_ISNUMERIC", "Py_UNICODE_ISNUMERIC"], [63, 2, 1, "c.Py_UNICODE_ISPRINTABLE", "Py_UNICODE_ISPRINTABLE"], [63, 2, 1, "c.Py_UNICODE_ISSPACE", "Py_UNICODE_ISSPACE"], [63, 2, 1, "c.Py_UNICODE_ISTITLE", "Py_UNICODE_ISTITLE"], [63, 2, 1, "c.Py_UNICODE_ISUPPER", "Py_UNICODE_ISUPPER"], [63, 1, 1, "c.Py_UNICODE_IS_HIGH_SURROGATE", "Py_UNICODE_IS_HIGH_SURROGATE"], [63, 1, 1, "c.Py_UNICODE_IS_LOW_SURROGATE", "Py_UNICODE_IS_LOW_SURROGATE"], [63, 1, 1, "c.Py_UNICODE_IS_SURROGATE", "Py_UNICODE_IS_SURROGATE"], [63, 1, 1, "c.Py_UNICODE_JOIN_SURROGATES", "Py_UNICODE_JOIN_SURROGATES"], [63, 2, 1, "c.Py_UNICODE_TODECIMAL", "Py_UNICODE_TODECIMAL"], [63, 2, 1, "c.Py_UNICODE_TODIGIT", "Py_UNICODE_TODIGIT"], [63, 2, 1, "c.Py_UNICODE_TOLOWER", "Py_UNICODE_TOLOWER"], [63, 2, 1, "c.Py_UNICODE_TONUMERIC", "Py_UNICODE_TONUMERIC"], [63, 2, 1, "c.Py_UNICODE_TOTITLE", "Py_UNICODE_TOTITLE"], [63, 2, 1, "c.Py_UNICODE_TOUPPER", "Py_UNICODE_TOUPPER"], [35, 1, 1, "c.Py_UNREACHABLE", "Py_UNREACHABLE"], [35, 1, 1, "c.Py_UNUSED", "Py_UNUSED"], [33, 0, 1, "c.Py_UnbufferedStdioFlag", "Py_UnbufferedStdioFlag"], [28, 2, 1, "c.Py_VISIT", "Py_VISIT"], [5, 2, 1, "c.Py_VaBuildValue", "Py_VaBuildValue"], [33, 0, 1, "c.Py_VerboseFlag", "Py_VerboseFlag"], [4, 0, 1, "c.Py_Version", "Py_Version"], [51, 2, 1, "c.Py_XDECREF", "Py_XDECREF"], [51, 2, 1, "c.Py_XINCREF", "Py_XINCREF"], [51, 2, 1, "c.Py_XNewRef", "Py_XNewRef"], [7, 4, 1, "c.Py_buffer", "Py_buffer"], [15, 4, 1, "c.Py_complex", "Py_complex"], [65, 0, 1, "c.Py_eval_input", "Py_eval_input"], [65, 0, 1, "c.Py_file_input", "Py_file_input"], [30, 4, 1, "c.Py_hash_t", "Py_hash_t"], [45, 1, 1, "c.Py_mod_create", "Py_mod_create"], [45, 1, 1, "c.Py_mod_exec", "Py_mod_exec"], [65, 0, 1, "c.Py_single_input", "Py_single_input"], [35, 4, 1, "c.Py_ssize_t", "Py_ssize_t"], [33, 4, 1, "c.Py_tracefunc", "Py_tracefunc"], [33, 1, 1, "c.Py_tss_NEEDS_INIT", "Py_tss_NEEDS_INIT"], [33, 4, 1, "c.Py_tss_t", "Py_tss_t"], [30, 4, 1, "c.Py_uhash_t", "Py_uhash_t"], [9, 2, 1, "c._PyBytes_Resize", "_PyBytes_Resize"], [57, 4, 1, "c._PyCFunctionFast", "_PyCFunctionFast"], [57, 4, 1, "c._PyCFunctionFastWithKeywords", "_PyCFunctionFastWithKeywords"], [33, 4, 1, "c._PyFrameEvalFunction", "_PyFrameEvalFunction"], [33, 2, 1, "c._PyInterpreterState_GetEvalFrameFunc", "_PyInterpreterState_GetEvalFrameFunc"], [33, 2, 1, "c._PyInterpreterState_SetEvalFrameFunc", "_PyInterpreterState_SetEvalFrameFunc"], [49, 2, 1, "c._PyObject_GetDictPtr", "_PyObject_GetDictPtr"], [3, 2, 1, "c._PyObject_New", "_PyObject_New"], [3, 2, 1, "c._PyObject_NewVar", "_PyObject_NewVar"], [59, 2, 1, "c._PyTuple_Resize", "_PyTuple_Resize"], [34, 2, 1, "c._Py_InitializeMain", "_Py_InitializeMain"], [3, 0, 1, "c._Py_NoneStruct", "_Py_NoneStruct"], [15, 2, 1, "c._Py_c_diff", "_Py_c_diff"], [15, 2, 1, "c._Py_c_neg", "_Py_c_neg"], [15, 2, 1, "c._Py_c_pow", "_Py_c_pow"], [15, 2, 1, "c._Py_c_prod", "_Py_c_prod"], [15, 2, 1, "c._Py_c_quot", "_Py_c_quot"], [15, 2, 1, "c._Py_c_sum", "_Py_c_sum"], [31, 5, 1, "c._frozen", "_frozen"], [31, 5, 1, "c._inittab", "_inittab"], [62, 4, 1, "c.allocfunc", "allocfunc"], [62, 4, 1, "c.binaryfunc", "binaryfunc"], [62, 4, 1, "c.descrgetfunc", "descrgetfunc"], [62, 4, 1, "c.descrsetfunc", "descrsetfunc"], [62, 4, 1, "c.destructor", "destructor"], [62, 4, 1, "c.freefunc", "freefunc"], [62, 4, 1, "c.getattrfunc", "getattrfunc"], [62, 4, 1, "c.getattrofunc", "getattrofunc"], [62, 4, 1, "c.getbufferproc", "getbufferproc"], [62, 4, 1, "c.getiterfunc", "getiterfunc"], [62, 4, 1, "c.hashfunc", "hashfunc"], [62, 4, 1, "c.initproc", "initproc"], [28, 4, 1, "c.inquiry", "inquiry"], [62, 4, 1, "c.iternextfunc", "iternextfunc"], [62, 4, 1, "c.lenfunc", "lenfunc"], [62, 4, 1, "c.newfunc", "newfunc"], [62, 4, 1, "c.objobjargproc", "objobjargproc"], [62, 4, 1, "c.objobjproc", "objobjproc"], [62, 4, 1, "c.releasebufferproc", "releasebufferproc"], [62, 4, 1, "c.reprfunc", "reprfunc"], [62, 4, 1, "c.richcmpfunc", "richcmpfunc"], [62, 4, 1, "c.sendfunc", "sendfunc"], [62, 4, 1, "c.setattrfunc", "setattrfunc"], [62, 4, 1, "c.setattrofunc", "setattrofunc"], [62, 4, 1, "c.ssizeargfunc", "ssizeargfunc"], [62, 4, 1, "c.ssizeobjargproc", "ssizeobjargproc"], [62, 4, 1, "c.ternaryfunc", "ternaryfunc"], [28, 4, 1, "c.traverseproc", "traverseproc"], [62, 4, 1, "c.unaryfunc", "unaryfunc"], [10, 4, 1, "c.vectorcallfunc", "vectorcallfunc"], [28, 4, 1, "c.visitproc", "visitproc"], [227, 6, 1, "", "ArithmeticError"], [227, 6, 1, "", "AssertionError"], [227, 6, 1, "", "AttributeError"], [227, 6, 1, "", "BaseException"], [227, 6, 1, "", "BaseExceptionGroup"], [227, 6, 1, "", "BlockingIOError"], [227, 6, 1, "", "BrokenPipeError"], [227, 6, 1, "", "BufferError"], [227, 6, 1, "", "BytesWarning"], [227, 6, 1, "", "ChildProcessError"], [227, 6, 1, "", "ConnectionAbortedError"], [227, 6, 1, "", "ConnectionError"], [227, 6, 1, "", "ConnectionRefusedError"], [227, 6, 1, "", "ConnectionResetError"], [227, 6, 1, "", "DeprecationWarning"], [227, 6, 1, "", "EOFError"], [181, 9, 1, "", "Ellipsis"], [227, 6, 1, "", "EncodingWarning"], [227, 6, 1, "", "EnvironmentError"], [227, 6, 1, "", "Exception"], [227, 6, 1, "", "ExceptionGroup"], [181, 9, 1, "", "False"], [227, 6, 1, "", "FileExistsError"], [227, 6, 1, "", "FileNotFoundError"], [227, 6, 1, "", "FloatingPointError"], [227, 6, 1, "", "FutureWarning"], [227, 6, 1, "", "GeneratorExit"], [227, 6, 1, "", "IOError"], [227, 6, 1, "", "ImportError"], [227, 6, 1, "", "ImportWarning"], [227, 6, 1, "", "IndentationError"], [227, 6, 1, "", "IndexError"], [227, 6, 1, "", "InterruptedError"], [227, 6, 1, "", "IsADirectoryError"], [227, 6, 1, "", "KeyError"], [227, 6, 1, "", "KeyboardInterrupt"], [227, 6, 1, "", "LookupError"], [227, 6, 1, "", "MemoryError"], [227, 6, 1, "", "ModuleNotFoundError"], [227, 6, 1, "", "NameError"], [181, 9, 1, "", "None"], [227, 6, 1, "", "NotADirectoryError"], [181, 9, 1, "", "NotImplemented"], [227, 6, 1, "", "NotImplementedError"], [227, 6, 1, "", "OSError"], [227, 6, 1, "", "OverflowError"], [227, 6, 1, "", "PendingDeprecationWarning"], [227, 6, 1, "", "PermissionError"], [227, 6, 1, "", "ProcessLookupError"], [227, 6, 1, "", "RecursionError"], [227, 6, 1, "", "ReferenceError"], [227, 6, 1, "", "ResourceWarning"], [227, 6, 1, "", "RuntimeError"], [227, 6, 1, "", "RuntimeWarning"], [227, 6, 1, "", "StopAsyncIteration"], [227, 6, 1, "", "StopIteration"], [227, 6, 1, "", "SyntaxError"], [227, 6, 1, "", "SyntaxWarning"], [227, 6, 1, "", "SystemError"], [227, 6, 1, "", "SystemExit"], [227, 6, 1, "", "TabError"], [227, 6, 1, "", "TimeoutError"], [181, 9, 1, "", "True"], [227, 6, 1, "", "TypeError"], [227, 6, 1, "", "UnboundLocalError"], [227, 6, 1, "", "UnicodeDecodeError"], [227, 6, 1, "", "UnicodeEncodeError"], [227, 6, 1, "", "UnicodeError"], [227, 6, 1, "", "UnicodeTranslateError"], [227, 6, 1, "", "UnicodeWarning"], [227, 6, 1, "", "UserWarning"], [227, 6, 1, "", "ValueError"], [227, 6, 1, "", "Warning"], [227, 6, 1, "", "WindowsError"], [227, 6, 1, "", "ZeroDivisionError"], [447, 7, 1, "cached__", "__cached__"], [181, 9, 1, "debug__", "__debug__"], [447, 7, 1, "file__", "__file__"], [124, 10, 0, "-", "__future__"], [239, 12, 1, "import__", "__import__"], [447, 7, 1, "loader__", "__loader__"], [125, 10, 0, "-", "__main__"], [447, 7, 1, "name__", "__name__"], [447, 7, 1, "package__", "__package__"], [447, 7, 1, "path__", "__path__"], [447, 7, 1, "spec__", "__spec__"], [126, 10, 0, "-", "_thread"], [384, 10, 0, "-", "_tkinter"], [127, 10, 0, "-", "abc"], [239, 12, 1, "", "abs"], [128, 10, 0, "-", "aifc"], [239, 12, 1, "", "aiter"], [239, 12, 1, "", "all"], [239, 12, 1, "", "anext"], [239, 12, 1, "", "any"], [131, 10, 0, "-", "argparse"], [132, 10, 0, "-", "array"], [239, 12, 1, "", "ascii"], [133, 10, 0, "-", "ast"], [134, 10, 0, "-", "asynchat"], [135, 10, 0, "-", "asyncio"], [152, 10, 0, "-", "asyncore"], [153, 10, 0, "-", "atexit"], [154, 10, 0, "-", "audioop"], [156, 10, 0, "-", "base64"], [157, 10, 0, "-", "bdb"], [239, 12, 1, "", "bin"], [159, 10, 0, "-", "binascii"], [160, 10, 0, "-", "bisect"], [239, 11, 1, "", "bool"], [239, 12, 1, "", "breakpoint"], [161, 10, 0, "-", "builtins"], [360, 11, 1, "", "bytearray"], [360, 11, 1, "", "bytes"], [162, 10, 0, "-", "bz2"], [323, 10, 0, "-", "cProfile"], [163, 10, 0, "-", "calendar"], [239, 12, 1, "", "callable"], [164, 10, 0, "-", "cgi"], [165, 10, 0, "-", "cgitb"], [239, 12, 1, "", "chr"], [166, 10, 0, "-", "chunk"], [239, 12, 1, "", "classmethod"], [167, 10, 0, "-", "cmath"], [168, 10, 0, "-", "cmd"], [170, 10, 0, "-", "code"], [171, 10, 0, "-", "codecs"], [172, 10, 0, "-", "codeop"], [173, 10, 0, "-", "collections"], [175, 10, 0, "-", "colorsys"], [239, 12, 1, "", "compile"], [176, 10, 0, "-", "compileall"], [239, 11, 1, "", "complex"], [180, 10, 0, "-", "configparser"], [182, 10, 0, "-", "contextlib"], [183, 10, 0, "-", "contextvars"], [184, 10, 0, "-", "copy"], [185, 10, 0, "-", "copyreg"], [181, 9, 1, "", "copyright"], [72, 12, 1, "", "create_shortcut"], [181, 9, 1, "", "credits"], [186, 10, 0, "-", "crypt"], [188, 10, 0, "-", "csv"], [189, 10, 0, "-", "ctypes"], [190, 10, 0, "-", "curses"], [194, 10, 0, "-", "dataclasses"], [196, 10, 0, "-", "datetime"], [197, 10, 0, "-", "dbm"], [199, 10, 0, "-", "decimal"], [239, 12, 1, "", "delattr"], [360, 11, 1, "", "dict"], [203, 10, 0, "-", "difflib"], [239, 12, 1, "", "dir"], [72, 12, 1, "", "directory_created"], [204, 10, 0, "-", "dis"], [206, 10, 0, "-", "distutils"], [239, 12, 1, "", "divmod"], [207, 10, 0, "-", "doctest"], [208, 10, 0, "-", "email"], [224, 10, 0, "-", "ensurepip"], [225, 10, 0, "-", "enum"], [239, 12, 1, "", "enumerate"], [226, 10, 0, "-", "errno"], [239, 12, 1, "", "eval"], [239, 12, 1, "", "exec"], [181, 9, 1, "", "exit"], [228, 10, 0, "-", "faulthandler"], [229, 10, 0, "-", "fcntl"], [72, 12, 1, "", "file_created"], [230, 10, 0, "-", "filecmp"], [232, 10, 0, "-", "fileinput"], [239, 12, 1, "", "filter"], [239, 11, 1, "", "float"], [234, 10, 0, "-", "fnmatch"], [239, 12, 1, "", "format"], [235, 10, 0, "-", "fractions"], [360, 11, 1, "", "frozenset"], [237, 10, 0, "-", "ftplib"], [240, 10, 0, "-", "functools"], [241, 10, 0, "-", "gc"], [72, 12, 1, "", "get_special_folder_path"], [239, 12, 1, "", "getattr"], [242, 10, 0, "-", "getopt"], [243, 10, 0, "-", "getpass"], [244, 10, 0, "-", "gettext"], [245, 10, 0, "-", "glob"], [239, 12, 1, "", "globals"], [246, 10, 0, "-", "graphlib"], [247, 10, 0, "-", "grp"], [248, 10, 0, "-", "gzip"], [239, 12, 1, "", "hasattr"], [239, 12, 1, "", "hash"], [249, 10, 0, "-", "hashlib"], [250, 10, 0, "-", "heapq"], [239, 12, 1, "", "help"], [239, 12, 1, "", "hex"], [251, 10, 0, "-", "hmac"], [252, 10, 0, "-", "html"], [255, 10, 0, "-", "http"], [239, 12, 1, "", "id"], [261, 10, 0, "-", "idlelib"], [262, 10, 0, "-", "imaplib"], [263, 10, 0, "-", "imghdr"], [264, 10, 0, "-", "imp"], [265, 10, 0, "-", "importlib"], [239, 12, 1, "", "input"], [270, 10, 0, "-", "inspect"], [239, 11, 1, "", "int"], [273, 10, 0, "-", "io"], [274, 10, 0, "-", "ipaddress"], [239, 12, 1, "", "isinstance"], [239, 12, 1, "", "issubclass"], [239, 12, 1, "", "iter"], [276, 10, 0, "-", "itertools"], [277, 10, 0, "-", "json"], [278, 10, 0, "-", "keyword"], [239, 12, 1, "", "len"], [123, 10, 0, "-", "lib2to3"], [181, 9, 1, "", "license"], [280, 10, 0, "-", "linecache"], [360, 11, 1, "", "list"], [281, 10, 0, "-", "locale"], [239, 12, 1, "", "locals"], [282, 10, 0, "-", "logging"], [285, 10, 0, "-", "lzma"], [286, 10, 0, "-", "mailbox"], [287, 10, 0, "-", "mailcap"], [239, 12, 1, "", "map"], [289, 10, 0, "-", "marshal"], [290, 10, 0, "-", "math"], [239, 12, 1, "", "max"], [360, 11, 1, "", "memoryview"], [291, 10, 0, "-", "mimetypes"], [239, 12, 1, "", "min"], [293, 10, 0, "-", "mmap"], [294, 10, 0, "-", "modulefinder"], [296, 10, 0, "-", "msilib"], [297, 10, 0, "-", "msvcrt"], [298, 10, 0, "-", "multiprocessing"], [301, 10, 0, "-", "netrc"], [239, 12, 1, "", "next"], [302, 10, 0, "-", "nis"], [303, 10, 0, "-", "nntplib"], [304, 10, 0, "-", "numbers"], [239, 11, 1, "", "object"], [239, 12, 1, "", "oct"], [239, 12, 1, "", "open"], [306, 10, 0, "-", "operator"], [307, 10, 0, "-", "optparse"], [239, 12, 1, "", "ord"], [308, 10, 0, "-", "os"], [310, 10, 0, "-", "ossaudiodev"], [311, 10, 0, "-", "pathlib"], [312, 10, 0, "-", "pdb"], [314, 10, 0, "-", "pickle"], [315, 10, 0, "-", "pickletools"], [316, 10, 0, "-", "pipes"], [317, 10, 0, "-", "pkgutil"], [318, 10, 0, "-", "platform"], [319, 10, 0, "-", "plistlib"], [320, 10, 0, "-", "poplib"], [321, 10, 0, "-", "posix"], [239, 12, 1, "", "pow"], [322, 10, 0, "-", "pprint"], [239, 12, 1, "", "print"], [323, 10, 0, "-", "profile"], [239, 11, 1, "", "property"], [323, 10, 0, "-", "pstats"], [324, 10, 0, "-", "pty"], [325, 10, 0, "-", "pwd"], [326, 10, 0, "-", "py_compile"], [327, 10, 0, "-", "pyclbr"], [328, 10, 0, "-", "pydoc"], [331, 10, 0, "-", "queue"], [181, 9, 1, "", "quit"], [332, 10, 0, "-", "quopri"], [333, 10, 0, "-", "random"], [360, 11, 1, "", "range"], [334, 10, 0, "-", "re"], [335, 10, 0, "-", "readline"], [239, 12, 1, "", "repr"], [336, 10, 0, "-", "reprlib"], [337, 10, 0, "-", "resource"], [239, 12, 1, "", "reversed"], [338, 10, 0, "-", "rlcompleter"], [239, 12, 1, "", "round"], [339, 10, 0, "-", "runpy"], [340, 10, 0, "-", "sched"], [341, 10, 0, "-", "secrets"], [343, 10, 0, "-", "select"], [344, 10, 0, "-", "selectors"], [360, 11, 1, "", "set"], [239, 12, 1, "", "setattr"], [345, 10, 0, "-", "shelve"], [346, 10, 0, "-", "shlex"], [347, 10, 0, "-", "shutil"], [348, 10, 0, "-", "signal"], [349, 10, 0, "-", "site"], [349, 10, 0, "-", "sitecustomize"], [239, 11, 1, "", "slice"], [350, 10, 0, "-", "smtpd"], [351, 10, 0, "-", "smtplib"], [352, 10, 0, "-", "sndhdr"], [353, 10, 0, "-", "socket"], [354, 10, 0, "-", "socketserver"], [239, 12, 1, "", "sorted"], [355, 10, 0, "-", "spwd"], [356, 10, 0, "-", "sqlite3"], [357, 10, 0, "-", "ssl"], [358, 10, 0, "-", "stat"], [239, 12, 1, "", "staticmethod"], [359, 10, 0, "-", "statistics"], [360, 11, 1, "", "str"], [361, 10, 0, "-", "string"], [362, 10, 0, "-", "stringprep"], [363, 10, 0, "-", "struct"], [364, 10, 0, "-", "subprocess"], [239, 12, 1, "", "sum"], [365, 10, 0, "-", "sunau"], [239, 11, 1, "", "super"], [367, 10, 0, "-", "symtable"], [368, 10, 0, "-", "sys"], [370, 10, 0, "-", "sysconfig"], [371, 10, 0, "-", "syslog"], [372, 10, 0, "-", "tabnanny"], [373, 10, 0, "-", "tarfile"], [374, 10, 0, "-", "telnetlib"], [375, 10, 0, "-", "tempfile"], [376, 10, 0, "-", "termios"], [377, 10, 0, "-", "test"], [379, 10, 0, "-", "textwrap"], [380, 10, 0, "-", "threading"], [381, 10, 0, "-", "time"], [382, 10, 0, "-", "timeit"], [384, 10, 0, "-", "tkinter"], [392, 10, 0, "-", "token"], [393, 10, 0, "-", "tokenize"], [394, 10, 0, "-", "tomllib"], [395, 10, 0, "-", "trace"], [396, 10, 0, "-", "traceback"], [397, 10, 0, "-", "tracemalloc"], [398, 10, 0, "-", "tty"], [360, 11, 1, "", "tuple"], [399, 10, 0, "-", "turtle"], [399, 10, 0, "-", "turtledemo"], [239, 11, 1, "", "type"], [400, 10, 0, "-", "types"], [401, 10, 0, "-", "typing"], [402, 10, 0, "-", "unicodedata"], [403, 10, 0, "-", "unittest"], [407, 10, 0, "-", "urllib"], [349, 10, 0, "-", "usercustomize"], [412, 10, 0, "-", "uu"], [413, 10, 0, "-", "uuid"], [239, 12, 1, "", "vars"], [414, 10, 0, "-", "venv"], [415, 10, 0, "-", "warnings"], [416, 10, 0, "-", "wave"], [417, 10, 0, "-", "weakref"], [418, 10, 0, "-", "webbrowser"], [420, 10, 0, "-", "winreg"], [421, 10, 0, "-", "winsound"], [422, 10, 0, "-", "wsgiref"], [423, 10, 0, "-", "xdrlib"], [424, 10, 0, "-", "xml"], [239, 12, 1, "", "zip"], [436, 10, 0, "-", "zipapp"], [437, 10, 0, "-", "zipfile"], [438, 10, 0, "-", "zipimport"], [439, 10, 0, "-", "zlib"], [440, 10, 0, "-", "zoneinfo"], [312, 13, 1, "pdbcommand-0", "!"], [471, 14, 1, "cmdoption-build", "--build"], [470, 14, 1, "cmdoption-check-hash-based-pycs", "--check-hash-based-pycs"], [471, 14, 1, "cmdoption-disable-ipv6", "--disable-ipv6"], [471, 14, 1, "cmdoption-disable-test-modules", "--disable-test-modules"], [471, 14, 1, "cmdoption-enable-big-digits", "--enable-big-digits"], [471, 14, 1, "cmdoption-enable-framework", "--enable-framework"], [471, 14, 1, "cmdoption-enable-loadable-sqlite-extensions", "--enable-loadable-sqlite-extensions"], [471, 14, 1, "cmdoption-enable-optimizations", "--enable-optimizations"], [471, 14, 1, "cmdoption-enable-profiling", "--enable-profiling"], [471, 14, 1, "cmdoption-enable-pystats", "--enable-pystats"], [471, 14, 1, "cmdoption-enable-shared", "--enable-shared"], [471, 14, 1, "cmdoption-enable-universalsdk", "--enable-universalsdk"], [471, 14, 1, "cmdoption-enable-wasm-dynamic-linking", "--enable-wasm-dynamic-linking"], [471, 14, 1, "cmdoption-enable-wasm-pthreads", "--enable-wasm-pthreads"], [471, 14, 1, "cmdoption-exec-prefix", "--exec-prefix"], [470, 14, 1, "cmdoption-help", "--help"], [470, 14, 1, "cmdoption-help-all", "--help-all"], [470, 14, 1, "cmdoption-help-env", "--help-env"], [470, 14, 1, "cmdoption-help-xoptions", "--help-xoptions"], [471, 14, 1, "cmdoption-host", "--host"], [471, 14, 1, "cmdoption-prefix", "--prefix"], [470, 14, 1, "cmdoption-version", "--version"], [471, 14, 1, "cmdoption-with-address-sanitizer", "--with-address-sanitizer"], [471, 14, 1, "cmdoption-with-assertions", "--with-assertions"], [471, 14, 1, "cmdoption-with-build-python", "--with-build-python"], [471, 14, 1, "cmdoption-with-builtin-hashlib-hashes", "--with-builtin-hashlib-hashes"], [471, 14, 1, "cmdoption-with-computed-gotos", "--with-computed-gotos"], [471, 14, 1, "cmdoption-with-cxx-main", "--with-cxx-main"], [471, 14, 1, "cmdoption-with-dbmliborder", "--with-dbmliborder"], [471, 14, 1, "cmdoption-with-dtrace", "--with-dtrace"], [471, 14, 1, "cmdoption-with-emscripten-target", "--with-emscripten-target"], [471, 14, 1, "cmdoption-with-ensurepip", "--with-ensurepip"], [471, 14, 1, "cmdoption-with-framework-name", "--with-framework-name"], [471, 14, 1, "cmdoption-with-hash-algorithm", "--with-hash-algorithm"], [471, 14, 1, "cmdoption-with-libc", "--with-libc"], [471, 14, 1, "cmdoption-with-libm", "--with-libm"], [471, 14, 1, "cmdoption-with-libs", "--with-libs"], [471, 14, 1, "cmdoption-with-lto", "--with-lto"], [471, 14, 1, "cmdoption-with-memory-sanitizer", "--with-memory-sanitizer"], [471, 14, 1, "cmdoption-with-openssl", "--with-openssl"], [471, 14, 1, "cmdoption-with-openssl-rpath", "--with-openssl-rpath"], [471, 14, 1, "cmdoption-with-pkg-config", "--with-pkg-config"], [471, 14, 1, "cmdoption-with-platlibdir", "--with-platlibdir"], [471, 14, 1, "cmdoption-with-pydebug", "--with-pydebug"], [471, 14, 1, "cmdoption-with-readline", "--with-readline"], [471, 14, 1, "cmdoption-with-ssl-default-suites", "--with-ssl-default-suites"], [471, 14, 1, "cmdoption-with-suffix", "--with-suffix"], [471, 14, 1, "cmdoption-with-system-expat", "--with-system-expat"], [471, 14, 1, "cmdoption-with-system-ffi", "--with-system-ffi"], [471, 14, 1, "cmdoption-with-system-libmpdec", "--with-system-libmpdec"], [471, 14, 1, "cmdoption-with-trace-refs", "--with-trace-refs"], [471, 14, 1, "cmdoption-with-tzpath", "--with-tzpath"], [471, 14, 1, "cmdoption-with-undefined-behavior-sanitizer", "--with-undefined-behavior-sanitizer"], [471, 14, 1, "cmdoption-with-universal-archs", "--with-universal-archs"], [471, 14, 1, "cmdoption-with-valgrind", "--with-valgrind"], [471, 14, 1, "cmdoption-with-wheel-pkg-dir", "--with-wheel-pkg-dir"], [471, 14, 1, "cmdoption-without-c-locale-coercion", "--without-c-locale-coercion"], [471, 14, 1, "cmdoption-without-decimal-contextvar", "--without-decimal-contextvar"], [471, 14, 1, "cmdoption-without-doc-strings", "--without-doc-strings"], [471, 14, 1, "cmdoption-without-pymalloc", "--without-pymalloc"], [471, 14, 1, "cmdoption-without-readline", "--without-readline"], [471, 14, 1, "cmdoption-without-static-libpython", "--without-static-libpython"], [470, 14, 1, "cmdoption-0", "-?"], [470, 14, 1, "cmdoption-B", "-B"], [470, 14, 1, "cmdoption-E", "-E"], [470, 14, 1, "cmdoption-I", "-I"], [470, 14, 1, "cmdoption-J", "-J"], [470, 14, 1, "cmdoption-O", "-O"], [470, 14, 1, "cmdoption-OO", "-OO"], [470, 14, 1, "cmdoption-P", "-P"], [470, 14, 1, "cmdoption-R", "-R"], [470, 14, 1, "cmdoption-S", "-S"], [470, 14, 1, "cmdoption-V", "-V"], [470, 14, 1, "cmdoption-W", "-W"], [470, 14, 1, "cmdoption-X", "-X"], [470, 14, 1, "cmdoption-b", "-b"], [470, 14, 1, "cmdoption-c", "-c"], [470, 14, 1, "cmdoption-d", "-d"], [470, 14, 1, "cmdoption-h", "-h"], [470, 14, 1, "cmdoption-i", "-i"], [470, 14, 1, "cmdoption-m", "-m"], [470, 14, 1, "cmdoption-q", "-q"], [470, 14, 1, "cmdoption-s", "-s"], [470, 14, 1, "cmdoption-u", "-u"], [470, 14, 1, "cmdoption-v", "-v"], [470, 14, 1, "cmdoption-x", "-x"], [204, 15, 1, "-", "ASYNC_GEN_WRAP"], [471, 16, 1, "-", "BASECFLAGS"], [471, 16, 1, "-", "BASECPPFLAGS"], [204, 15, 1, "-", "BEFORE_ASYNC_WITH"], [204, 15, 1, "-", "BEFORE_WITH"], [204, 15, 1, "-", "BINARY_OP"], [204, 15, 1, "-", "BINARY_SUBSCR"], [471, 16, 1, "-", "BLDSHARED"], [204, 15, 1, "-", "BUILD_CONST_KEY_MAP"], [204, 15, 1, "-", "BUILD_LIST"], [204, 15, 1, "-", "BUILD_MAP"], [204, 15, 1, "-", "BUILD_SET"], [204, 15, 1, "-", "BUILD_SLICE"], [204, 15, 1, "-", "BUILD_STRING"], [204, 15, 1, "-", "BUILD_TUPLE"], [204, 15, 1, "-", "CACHE"], [204, 15, 1, "-", "CALL"], [204, 15, 1, "-", "CALL_FUNCTION_EX"], [471, 16, 1, "-", "CC"], [471, 16, 1, "-", "CCSHARED"], [471, 16, 1, "-", "CFLAGS"], [471, 16, 1, "-", "CFLAGSFORSHARED"], [471, 16, 1, "-", "CFLAGS_ALIASING"], [471, 16, 1, "-", "CFLAGS_NODIST"], [204, 15, 1, "-", "CHECK_EG_MATCH"], [204, 15, 1, "-", "CHECK_EXC_MATCH"], [204, 15, 1, "-", "COMPARE_OP"], [471, 16, 1, "-", "CONFIGURE_CFLAGS"], [471, 16, 1, "-", "CONFIGURE_CFLAGS_NODIST"], [471, 16, 1, "-", "CONFIGURE_CPPFLAGS"], [471, 16, 1, "-", "CONFIGURE_LDFLAGS"], [471, 16, 1, "-", "CONFIGURE_LDFLAGS_NODIST"], [471, 14, 1, "cmdoption-arg-CONFIG_SITE", "CONFIG_SITE"], [204, 15, 1, "-", "CONTAINS_OP"], [204, 15, 1, "-", "COPY"], [204, 15, 1, "-", "COPY_FREE_VARS"], [471, 16, 1, "-", "CPPFLAGS"], [471, 16, 1, "-", "CXX"], [204, 15, 1, "-", "DELETE_ATTR"], [204, 15, 1, "-", "DELETE_DEREF"], [204, 15, 1, "-", "DELETE_FAST"], [204, 15, 1, "-", "DELETE_GLOBAL"], [204, 15, 1, "-", "DELETE_NAME"], [204, 15, 1, "-", "DELETE_SUBSCR"], [204, 15, 1, "-", "DICT_MERGE"], [204, 15, 1, "-", "DICT_UPDATE"], [204, 15, 1, "-", "END_ASYNC_FOR"], [204, 15, 1, "-", "EXTENDED_ARG"], [471, 16, 1, "-", "EXTRA_CFLAGS"], [204, 15, 1, "-", "FORMAT_VALUE"], [204, 15, 1, "-", "FOR_ITER"], [204, 15, 1, "-", "GET_AITER"], [204, 15, 1, "-", "GET_ANEXT"], [204, 15, 1, "-", "GET_AWAITABLE"], [204, 15, 1, "-", "GET_ITER"], [204, 15, 1, "-", "GET_LEN"], [204, 15, 1, "-", "GET_YIELD_FROM_ITER"], [204, 15, 1, "-", "HAVE_ARGUMENT"], [204, 15, 1, "-", "IMPORT_FROM"], [204, 15, 1, "-", "IMPORT_NAME"], [204, 15, 1, "-", "IMPORT_STAR"], [204, 15, 1, "-", "IS_OP"], [204, 15, 1, "-", "JUMP_BACKWARD"], [204, 15, 1, "-", "JUMP_BACKWARD_NO_INTERRUPT"], [204, 15, 1, "-", "JUMP_FORWARD"], [204, 15, 1, "-", "JUMP_IF_FALSE_OR_POP"], [204, 15, 1, "-", "JUMP_IF_TRUE_OR_POP"], [204, 15, 1, "-", "KW_NAMES"], [471, 16, 1, "-", "LDFLAGS"], [471, 16, 1, "-", "LDFLAGS_NODIST"], [471, 16, 1, "-", "LDSHARED"], [471, 16, 1, "-", "LIBS"], [471, 16, 1, "-", "LINKCC"], [204, 15, 1, "-", "LIST_APPEND"], [204, 15, 1, "-", "LIST_EXTEND"], [204, 15, 1, "-", "LIST_TO_TUPLE"], [204, 15, 1, "-", "LOAD_ASSERTION_ERROR"], [204, 15, 1, "-", "LOAD_ATTR"], [204, 15, 1, "-", "LOAD_BUILD_CLASS"], [204, 15, 1, "-", "LOAD_CLASSDEREF"], [204, 15, 1, "-", "LOAD_CLOSURE"], [204, 15, 1, "-", "LOAD_CONST"], [204, 15, 1, "-", "LOAD_DEREF"], [204, 15, 1, "-", "LOAD_FAST"], [204, 15, 1, "-", "LOAD_GLOBAL"], [204, 15, 1, "-", "LOAD_METHOD"], [204, 15, 1, "-", "LOAD_NAME"], [471, 16, 1, "-", "MAINCC"], [204, 15, 1, "-", "MAKE_CELL"], [204, 15, 1, "-", "MAKE_FUNCTION"], [204, 15, 1, "-", "MAP_ADD"], [204, 15, 1, "-", "MATCH_CLASS"], [204, 15, 1, "-", "MATCH_KEYS"], [204, 15, 1, "-", "MATCH_MAPPING"], [204, 15, 1, "-", "MATCH_SEQUENCE"], [204, 15, 1, "-", "NOP"], [471, 16, 1, "-", "OPT"], [204, 15, 1, "-", "POP_EXCEPT"], [204, 15, 1, "-", "POP_JUMP_BACKWARD_IF_FALSE"], [204, 15, 1, "-", "POP_JUMP_BACKWARD_IF_NONE"], [204, 15, 1, "-", "POP_JUMP_BACKWARD_IF_NOT_NONE"], [204, 15, 1, "-", "POP_JUMP_BACKWARD_IF_TRUE"], [204, 15, 1, "-", "POP_JUMP_FORWARD_IF_FALSE"], [204, 15, 1, "-", "POP_JUMP_FORWARD_IF_NONE"], [204, 15, 1, "-", "POP_JUMP_FORWARD_IF_NOT_NONE"], [204, 15, 1, "-", "POP_JUMP_FORWARD_IF_TRUE"], [204, 15, 1, "-", "POP_TOP"], [204, 15, 1, "-", "PRECALL"], [204, 15, 1, "-", "PREP_RERAISE_STAR"], [204, 15, 1, "-", "PRINT_EXPR"], [471, 16, 1, "-", "PROFILE_TASK"], [471, 16, 1, "-", "PURIFY"], [204, 15, 1, "-", "PUSH_EXC_INFO"], [204, 15, 1, "-", "PUSH_NULL"], [470, 16, 1, "-", "PYTHONASYNCIODEBUG"], [470, 16, 1, "-", "PYTHONBREAKPOINT"], [470, 16, 1, "-", "PYTHONCASEOK"], [470, 16, 1, "-", "PYTHONCOERCECLOCALE"], [470, 16, 1, "-", "PYTHONDEBUG"], [470, 16, 1, "-", "PYTHONDEVMODE"], [470, 16, 1, "-", "PYTHONDONTWRITEBYTECODE"], [470, 16, 1, "-", "PYTHONDUMPREFS"], [470, 16, 1, "envvar-PYTHONDUMPREFSFILE-FILENAME", "PYTHONDUMPREFSFILE=FILENAME"], [470, 16, 1, "-", "PYTHONEXECUTABLE"], [470, 16, 1, "-", "PYTHONFAULTHANDLER"], [470, 16, 1, "-", "PYTHONHASHSEED"], [470, 16, 1, "-", "PYTHONHOME"], [470, 16, 1, "-", "PYTHONINSPECT"], [470, 16, 1, "-", "PYTHONINTMAXSTRDIGITS"], [470, 16, 1, "-", "PYTHONIOENCODING"], [470, 16, 1, "-", "PYTHONLEGACYWINDOWSFSENCODING"], [470, 16, 1, "-", "PYTHONLEGACYWINDOWSSTDIO"], [470, 16, 1, "-", "PYTHONMALLOC"], [470, 16, 1, "-", "PYTHONMALLOCSTATS"], [470, 16, 1, "-", "PYTHONNODEBUGRANGES"], [470, 16, 1, "-", "PYTHONNOUSERSITE"], [470, 16, 1, "-", "PYTHONOPTIMIZE"], [470, 16, 1, "-", "PYTHONPATH"], [470, 16, 1, "-", "PYTHONPLATLIBDIR"], [470, 16, 1, "-", "PYTHONPROFILEIMPORTTIME"], [470, 16, 1, "-", "PYTHONPYCACHEPREFIX"], [470, 16, 1, "-", "PYTHONSAFEPATH"], [470, 16, 1, "-", "PYTHONSTARTUP"], [470, 16, 1, "-", "PYTHONTHREADDEBUG"], [470, 16, 1, "-", "PYTHONTRACEMALLOC"], [440, 16, 1, "-", "PYTHONTZPATH"], [470, 16, 1, "-", "PYTHONUNBUFFERED"], [470, 16, 1, "-", "PYTHONUSERBASE"], [470, 16, 1, "-", "PYTHONUTF8"], [470, 16, 1, "-", "PYTHONVERBOSE"], [470, 16, 1, "-", "PYTHONWARNDEFAULTENCODING"], [470, 16, 1, "-", "PYTHONWARNINGS"], [471, 16, 1, "-", "PY_BUILTIN_MODULE_CFLAGS"], [471, 16, 1, "-", "PY_CFLAGS"], [471, 16, 1, "-", "PY_CFLAGS_NODIST"], [471, 16, 1, "-", "PY_CORE_CFLAGS"], [471, 16, 1, "-", "PY_CORE_LDFLAGS"], [471, 16, 1, "-", "PY_CPPFLAGS"], [471, 16, 1, "-", "PY_LDFLAGS"], [471, 16, 1, "-", "PY_LDFLAGS_NODIST"], [471, 16, 1, "-", "PY_STDMODULE_CFLAGS"], [204, 15, 1, "-", "RAISE_VARARGS"], [204, 15, 1, "-", "RERAISE"], [204, 15, 1, "-", "RESUME"], [204, 15, 1, "-", "RETURN_GENERATOR"], [204, 15, 1, "-", "RETURN_VALUE"], [204, 15, 1, "-", "SEND"], [204, 15, 1, "-", "SETUP_ANNOTATIONS"], [204, 15, 1, "-", "SET_ADD"], [204, 15, 1, "-", "SET_UPDATE"], [204, 15, 1, "-", "STORE_ATTR"], [204, 15, 1, "-", "STORE_DEREF"], [204, 15, 1, "-", "STORE_FAST"], [204, 15, 1, "-", "STORE_GLOBAL"], [204, 15, 1, "-", "STORE_NAME"], [204, 15, 1, "-", "STORE_SUBSCR"], [204, 15, 1, "-", "SWAP"], [204, 15, 1, "-", "UNARY_INVERT"], [204, 15, 1, "-", "UNARY_NEGATIVE"], [204, 15, 1, "-", "UNARY_NOT"], [204, 15, 1, "-", "UNARY_POSITIVE"], [204, 15, 1, "-", "UNPACK_EX"], [204, 15, 1, "-", "UNPACK_SEQUENCE"], [204, 15, 1, "-", "WITH_EXCEPT_START"], [204, 15, 1, "-", "YIELD_VALUE"], [312, 13, 1, "-", "alias"], [123, 17, 1, "to3fixer-apply", "apply"], [312, 13, 1, "-", "args"], [123, 17, 1, "to3fixer-asserts", "asserts"], [123, 17, 1, "to3fixer-basestring", "basestring"], [312, 13, 1, "-", "break"], [123, 17, 1, "to3fixer-buffer", "buffer"], [312, 13, 1, "-", "clear"], [312, 13, 1, "-", "commands"], [312, 13, 1, "-", "condition"], [312, 13, 1, "-", "continue"], [312, 13, 1, "-", "debug"], [123, 17, 1, "to3fixer-dict", "dict"], [312, 13, 1, "-", "disable"], [312, 13, 1, "-", "display"], [312, 13, 1, "-", "down"], [312, 13, 1, "-", "enable"], [123, 17, 1, "to3fixer-except", "except"], [123, 17, 1, "to3fixer-exec", "exec"], [123, 17, 1, "to3fixer-execfile", "execfile"], [123, 17, 1, "to3fixer-exitfunc", "exitfunc"], [123, 17, 1, "to3fixer-filter", "filter"], [123, 17, 1, "to3fixer-funcattrs", "funcattrs"], [123, 17, 1, "to3fixer-future", "future"], [123, 17, 1, "to3fixer-getcwdu", "getcwdu"], [123, 17, 1, "to3fixer-has_key", "has_key"], [312, 13, 1, "-", "help"], [123, 17, 1, "to3fixer-idioms", "idioms"], [312, 13, 1, "-", "ignore"], [123, 17, 1, "to3fixer-import", "import"], [123, 17, 1, "to3fixer-imports", "imports"], [123, 17, 1, "to3fixer-imports2", "imports2"], [123, 17, 1, "to3fixer-input", "input"], [312, 13, 1, "-", "interact"], [123, 17, 1, "to3fixer-intern", "intern"], [123, 17, 1, "to3fixer-isinstance", "isinstance"], [123, 17, 1, "to3fixer-itertools", "itertools"], [123, 17, 1, "to3fixer-itertools_imports", "itertools_imports"], [312, 13, 1, "-", "jump"], [312, 13, 1, "-", "list"], [312, 13, 1, "-", "ll"], [123, 17, 1, "to3fixer-long", "long"], [123, 17, 1, "to3fixer-map", "map"], [123, 17, 1, "to3fixer-metaclass", "metaclass"], [123, 17, 1, "to3fixer-methodattrs", "methodattrs"], [123, 17, 1, "to3fixer-ne", "ne"], [123, 17, 1, "to3fixer-next", "next"], [312, 13, 1, "-", "next"], [123, 17, 1, "to3fixer-nonzero", "nonzero"], [123, 17, 1, "to3fixer-numliterals", "numliterals"], [123, 17, 1, "to3fixer-operator", "operator"], [312, 13, 1, "-", "p"], [123, 17, 1, "to3fixer-paren", "paren"], [312, 13, 1, "-", "pp"], [123, 17, 1, "to3fixer-print", "print"], [312, 13, 1, "-", "quit"], [123, 17, 1, "to3fixer-raise", "raise"], [123, 17, 1, "to3fixer-raw_input", "raw_input"], [123, 17, 1, "to3fixer-reduce", "reduce"], [123, 17, 1, "to3fixer-reload", "reload"], [123, 17, 1, "to3fixer-renames", "renames"], [123, 17, 1, "to3fixer-repr", "repr"], [312, 13, 1, "-", "restart"], [312, 13, 1, "-", "return"], [312, 13, 1, "-", "retval"], [312, 13, 1, "-", "run"], [123, 17, 1, "to3fixer-set_literal", "set_literal"], [312, 13, 1, "-", "source"], [123, 17, 1, "to3fixer-standarderror", "standarderror"], [312, 13, 1, "-", "step"], [123, 17, 1, "to3fixer-sys_exc", "sys_exc"], [312, 13, 1, "-", "tbreak"], [123, 17, 1, "to3fixer-throw", "throw"], [123, 17, 1, "to3fixer-tuple_params", "tuple_params"], [123, 17, 1, "to3fixer-types", "types"], [312, 13, 1, "-", "unalias"], [312, 13, 1, "-", "undisplay"], [123, 17, 1, "to3fixer-unicode", "unicode"], [312, 13, 1, "-", "until"], [312, 13, 1, "-", "up"], [123, 17, 1, "to3fixer-urllib", "urllib"], [312, 13, 1, "-", "whatis"], [312, 13, 1, "-", "where"], [123, 17, 1, "to3fixer-ws_comma", "ws_comma"], [123, 17, 1, "to3fixer-xrange", "xrange"], [123, 17, 1, "to3fixer-xreadlines", "xreadlines"], [123, 17, 1, "to3fixer-zip", "zip"]], "PyAIter_Check": [[36, 3, 1, "c.PyAIter_Check", "o"]], "PyAnySet_Check": [[54, 3, 1, "c.PyAnySet_Check", "p"]], "PyAnySet_CheckExact": [[54, 3, 1, "c.PyAnySet_CheckExact", "p"]], "PyArg_Parse": [[5, 3, 1, "c.PyArg_Parse", "args"], [5, 3, 1, "c.PyArg_Parse", "format"]], "PyArg_ParseTuple": [[5, 3, 1, "c.PyArg_ParseTuple", "args"], [5, 3, 1, "c.PyArg_ParseTuple", "format"]], "PyArg_ParseTupleAndKeywords": [[5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "args"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "format"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "keywords"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "kw"]], "PyArg_UnpackTuple": [[5, 3, 1, "c.PyArg_UnpackTuple", "args"], [5, 3, 1, "c.PyArg_UnpackTuple", "max"], [5, 3, 1, "c.PyArg_UnpackTuple", "min"], [5, 3, 1, "c.PyArg_UnpackTuple", "name"]], "PyArg_VaParse": [[5, 3, 1, "c.PyArg_VaParse", "args"], [5, 3, 1, "c.PyArg_VaParse", "format"], [5, 3, 1, "c.PyArg_VaParse", "vargs"]], "PyArg_VaParseTupleAndKeywords": [[5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "args"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "format"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "keywords"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "kw"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "vargs"]], "PyAsyncMethods": [[62, 0, 1, "c.PyAsyncMethods.am_aiter", "am_aiter"], [62, 0, 1, "c.PyAsyncMethods.am_anext", "am_anext"], [62, 0, 1, "c.PyAsyncMethods.am_await", "am_await"], [62, 0, 1, "c.PyAsyncMethods.am_send", "am_send"]], "PyBool_Check": [[6, 3, 1, "c.PyBool_Check", "o"]], "PyBool_FromLong": [[6, 3, 1, "c.PyBool_FromLong", "v"]], "PyBufferProcs": [[62, 0, 1, "c.PyBufferProcs.bf_getbuffer", "bf_getbuffer"], [62, 0, 1, "c.PyBufferProcs.bf_releasebuffer", "bf_releasebuffer"]], "PyBuffer_FillContiguousStrides": [[7, 3, 1, "c.PyBuffer_FillContiguousStrides", "itemsize"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "ndims"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "order"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "shape"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "strides"]], "PyBuffer_FillInfo": [[7, 3, 1, "c.PyBuffer_FillInfo", "buf"], [7, 3, 1, "c.PyBuffer_FillInfo", "exporter"], [7, 3, 1, "c.PyBuffer_FillInfo", "flags"], [7, 3, 1, "c.PyBuffer_FillInfo", "len"], [7, 3, 1, "c.PyBuffer_FillInfo", "readonly"], [7, 3, 1, "c.PyBuffer_FillInfo", "view"]], "PyBuffer_FromContiguous": [[7, 3, 1, "c.PyBuffer_FromContiguous", "buf"], [7, 3, 1, "c.PyBuffer_FromContiguous", "fort"], [7, 3, 1, "c.PyBuffer_FromContiguous", "len"], [7, 3, 1, "c.PyBuffer_FromContiguous", "view"]], "PyBuffer_GetPointer": [[7, 3, 1, "c.PyBuffer_GetPointer", "indices"], [7, 3, 1, "c.PyBuffer_GetPointer", "view"]], "PyBuffer_IsContiguous": [[7, 3, 1, "c.PyBuffer_IsContiguous", "order"], [7, 3, 1, "c.PyBuffer_IsContiguous", "view"]], "PyBuffer_Release": [[7, 3, 1, "c.PyBuffer_Release", "view"]], "PyBuffer_SizeFromFormat": [[7, 3, 1, "c.PyBuffer_SizeFromFormat", "format"]], "PyBuffer_ToContiguous": [[7, 3, 1, "c.PyBuffer_ToContiguous", "buf"], [7, 3, 1, "c.PyBuffer_ToContiguous", "len"], [7, 3, 1, "c.PyBuffer_ToContiguous", "order"], [7, 3, 1, "c.PyBuffer_ToContiguous", "src"]], "PyByteArray_AS_STRING": [[8, 3, 1, "c.PyByteArray_AS_STRING", "bytearray"]], "PyByteArray_AsString": [[8, 3, 1, "c.PyByteArray_AsString", "bytearray"]], "PyByteArray_Check": [[8, 3, 1, "c.PyByteArray_Check", "o"]], "PyByteArray_CheckExact": [[8, 3, 1, "c.PyByteArray_CheckExact", "o"]], "PyByteArray_Concat": [[8, 3, 1, "c.PyByteArray_Concat", "a"], [8, 3, 1, "c.PyByteArray_Concat", "b"]], "PyByteArray_FromObject": [[8, 3, 1, "c.PyByteArray_FromObject", "o"]], "PyByteArray_FromStringAndSize": [[8, 3, 1, "c.PyByteArray_FromStringAndSize", "len"], [8, 3, 1, "c.PyByteArray_FromStringAndSize", "string"]], "PyByteArray_GET_SIZE": [[8, 3, 1, "c.PyByteArray_GET_SIZE", "bytearray"]], "PyByteArray_Resize": [[8, 3, 1, "c.PyByteArray_Resize", "bytearray"], [8, 3, 1, "c.PyByteArray_Resize", "len"]], "PyByteArray_Size": [[8, 3, 1, "c.PyByteArray_Size", "bytearray"]], "PyBytes_AS_STRING": [[9, 3, 1, "c.PyBytes_AS_STRING", "string"]], "PyBytes_AsString": [[9, 3, 1, "c.PyBytes_AsString", "o"]], "PyBytes_AsStringAndSize": [[9, 3, 1, "c.PyBytes_AsStringAndSize", "buffer"], [9, 3, 1, "c.PyBytes_AsStringAndSize", "length"], [9, 3, 1, "c.PyBytes_AsStringAndSize", "obj"]], "PyBytes_Check": [[9, 3, 1, "c.PyBytes_Check", "o"]], "PyBytes_CheckExact": [[9, 3, 1, "c.PyBytes_CheckExact", "o"]], "PyBytes_Concat": [[9, 3, 1, "c.PyBytes_Concat", "bytes"], [9, 3, 1, "c.PyBytes_Concat", "newpart"]], "PyBytes_ConcatAndDel": [[9, 3, 1, "c.PyBytes_ConcatAndDel", "bytes"], [9, 3, 1, "c.PyBytes_ConcatAndDel", "newpart"]], "PyBytes_FromFormat": [[9, 3, 1, "c.PyBytes_FromFormat", "format"]], "PyBytes_FromFormatV": [[9, 3, 1, "c.PyBytes_FromFormatV", "format"], [9, 3, 1, "c.PyBytes_FromFormatV", "vargs"]], "PyBytes_FromObject": [[9, 3, 1, "c.PyBytes_FromObject", "o"]], "PyBytes_FromString": [[9, 3, 1, "c.PyBytes_FromString", "v"]], "PyBytes_FromStringAndSize": [[9, 3, 1, "c.PyBytes_FromStringAndSize", "len"], [9, 3, 1, "c.PyBytes_FromStringAndSize", "v"]], "PyBytes_GET_SIZE": [[9, 3, 1, "c.PyBytes_GET_SIZE", "o"]], "PyBytes_Size": [[9, 3, 1, "c.PyBytes_Size", "o"]], "PyCFunction_New": [[57, 3, 1, "c.PyCFunction_New", "ml"], [57, 3, 1, "c.PyCFunction_New", "self"]], "PyCFunction_NewEx": [[57, 3, 1, "c.PyCFunction_NewEx", "ml"], [57, 3, 1, "c.PyCFunction_NewEx", "module"], [57, 3, 1, "c.PyCFunction_NewEx", "self"]], "PyCMethod_New": [[57, 3, 1, "c.PyCMethod_New", "cls"], [57, 3, 1, "c.PyCMethod_New", "ml"], [57, 3, 1, "c.PyCMethod_New", "module"], [57, 3, 1, "c.PyCMethod_New", "self"]], "PyCallIter_Check": [[37, 3, 1, "c.PyCallIter_Check", "op"]], "PyCallIter_New": [[37, 3, 1, "c.PyCallIter_New", "callable"], [37, 3, 1, "c.PyCallIter_New", "sentinel"]], "PyCallable_Check": [[10, 3, 1, "c.PyCallable_Check", "o"]], "PyCapsule_CheckExact": [[11, 3, 1, "c.PyCapsule_CheckExact", "p"]], "PyCapsule_GetContext": [[11, 3, 1, "c.PyCapsule_GetContext", "capsule"]], "PyCapsule_GetDestructor": [[11, 3, 1, "c.PyCapsule_GetDestructor", "capsule"]], "PyCapsule_GetName": [[11, 3, 1, "c.PyCapsule_GetName", "capsule"]], "PyCapsule_GetPointer": [[11, 3, 1, "c.PyCapsule_GetPointer", "capsule"], [11, 3, 1, "c.PyCapsule_GetPointer", "name"]], "PyCapsule_Import": [[11, 3, 1, "c.PyCapsule_Import", "name"], [11, 3, 1, "c.PyCapsule_Import", "no_block"]], "PyCapsule_IsValid": [[11, 3, 1, "c.PyCapsule_IsValid", "capsule"], [11, 3, 1, "c.PyCapsule_IsValid", "name"]], "PyCapsule_New": [[11, 3, 1, "c.PyCapsule_New", "destructor"], [11, 3, 1, "c.PyCapsule_New", "name"], [11, 3, 1, "c.PyCapsule_New", "pointer"]], "PyCapsule_SetContext": [[11, 3, 1, "c.PyCapsule_SetContext", "capsule"], [11, 3, 1, "c.PyCapsule_SetContext", "context"]], "PyCapsule_SetDestructor": [[11, 3, 1, "c.PyCapsule_SetDestructor", "capsule"], [11, 3, 1, "c.PyCapsule_SetDestructor", "destructor"]], "PyCapsule_SetName": [[11, 3, 1, "c.PyCapsule_SetName", "capsule"], [11, 3, 1, "c.PyCapsule_SetName", "name"]], "PyCapsule_SetPointer": [[11, 3, 1, "c.PyCapsule_SetPointer", "capsule"], [11, 3, 1, "c.PyCapsule_SetPointer", "pointer"]], "PyCell_Check": [[12, 3, 1, "c.PyCell_Check", "ob"]], "PyCell_GET": [[12, 3, 1, "c.PyCell_GET", "cell"]], "PyCell_Get": [[12, 3, 1, "c.PyCell_Get", "cell"]], "PyCell_New": [[12, 3, 1, "c.PyCell_New", "ob"]], "PyCell_SET": [[12, 3, 1, "c.PyCell_SET", "cell"], [12, 3, 1, "c.PyCell_SET", "value"]], "PyCell_Set": [[12, 3, 1, "c.PyCell_Set", "cell"], [12, 3, 1, "c.PyCell_Set", "value"]], "PyCode_Addr2Line": [[13, 3, 1, "c.PyCode_Addr2Line", "byte_offset"], [13, 3, 1, "c.PyCode_Addr2Line", "co"]], "PyCode_Addr2Location": [[13, 3, 1, "c.PyCode_Addr2Location", "byte_offset"], [13, 3, 1, "c.PyCode_Addr2Location", "co"], [13, 3, 1, "c.PyCode_Addr2Location", "end_column"], [13, 3, 1, "c.PyCode_Addr2Location", "end_line"], [13, 3, 1, "c.PyCode_Addr2Location", "start_column"], [13, 3, 1, "c.PyCode_Addr2Location", "start_line"]], "PyCode_Check": [[13, 3, 1, "c.PyCode_Check", "co"]], "PyCode_GetCellvars": [[13, 3, 1, "c.PyCode_GetCellvars", "co"]], "PyCode_GetCode": [[13, 3, 1, "c.PyCode_GetCode", "co"]], "PyCode_GetFreevars": [[13, 3, 1, "c.PyCode_GetFreevars", "co"]], "PyCode_GetNumFree": [[13, 3, 1, "c.PyCode_GetNumFree", "co"]], "PyCode_GetVarnames": [[13, 3, 1, "c.PyCode_GetVarnames", "co"]], "PyCode_New": [[13, 3, 1, "c.PyCode_New", "argcount"], [13, 3, 1, "c.PyCode_New", "cellvars"], [13, 3, 1, "c.PyCode_New", "code"], [13, 3, 1, "c.PyCode_New", "consts"], [13, 3, 1, "c.PyCode_New", "exceptiontable"], [13, 3, 1, "c.PyCode_New", "filename"], [13, 3, 1, "c.PyCode_New", "firstlineno"], [13, 3, 1, "c.PyCode_New", "flags"], [13, 3, 1, "c.PyCode_New", "freevars"], [13, 3, 1, "c.PyCode_New", "kwonlyargcount"], [13, 3, 1, "c.PyCode_New", "linetable"], [13, 3, 1, "c.PyCode_New", "name"], [13, 3, 1, "c.PyCode_New", "names"], [13, 3, 1, "c.PyCode_New", "nlocals"], [13, 3, 1, "c.PyCode_New", "qualname"], [13, 3, 1, "c.PyCode_New", "stacksize"], [13, 3, 1, "c.PyCode_New", "varnames"]], "PyCode_NewEmpty": [[13, 3, 1, "c.PyCode_NewEmpty", "filename"], [13, 3, 1, "c.PyCode_NewEmpty", "firstlineno"], [13, 3, 1, "c.PyCode_NewEmpty", "funcname"]], "PyCode_NewWithPosOnlyArgs": [[13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "argcount"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "cellvars"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "code"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "consts"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "exceptiontable"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "filename"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "firstlineno"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "flags"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "freevars"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "kwonlyargcount"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "linetable"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "name"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "names"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "nlocals"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "posonlyargcount"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "qualname"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "stacksize"], [13, 3, 1, "c.PyCode_NewWithPosOnlyArgs", "varnames"]], "PyCodec_BackslashReplaceErrors": [[14, 3, 1, "c.PyCodec_BackslashReplaceErrors", "exc"]], "PyCodec_Decode": [[14, 3, 1, "c.PyCodec_Decode", "encoding"], [14, 3, 1, "c.PyCodec_Decode", "errors"], [14, 3, 1, "c.PyCodec_Decode", "object"]], "PyCodec_Decoder": [[14, 3, 1, "c.PyCodec_Decoder", "encoding"]], "PyCodec_Encode": [[14, 3, 1, "c.PyCodec_Encode", "encoding"], [14, 3, 1, "c.PyCodec_Encode", "errors"], [14, 3, 1, "c.PyCodec_Encode", "object"]], "PyCodec_Encoder": [[14, 3, 1, "c.PyCodec_Encoder", "encoding"]], "PyCodec_IgnoreErrors": [[14, 3, 1, "c.PyCodec_IgnoreErrors", "exc"]], "PyCodec_IncrementalDecoder": [[14, 3, 1, "c.PyCodec_IncrementalDecoder", "encoding"], [14, 3, 1, "c.PyCodec_IncrementalDecoder", "errors"]], "PyCodec_IncrementalEncoder": [[14, 3, 1, "c.PyCodec_IncrementalEncoder", "encoding"], [14, 3, 1, "c.PyCodec_IncrementalEncoder", "errors"]], "PyCodec_KnownEncoding": [[14, 3, 1, "c.PyCodec_KnownEncoding", "encoding"]], "PyCodec_LookupError": [[14, 3, 1, "c.PyCodec_LookupError", "name"]], "PyCodec_NameReplaceErrors": [[14, 3, 1, "c.PyCodec_NameReplaceErrors", "exc"]], "PyCodec_Register": [[14, 3, 1, "c.PyCodec_Register", "search_function"]], "PyCodec_RegisterError": [[14, 3, 1, "c.PyCodec_RegisterError", "error"], [14, 3, 1, "c.PyCodec_RegisterError", "name"]], "PyCodec_ReplaceErrors": [[14, 3, 1, "c.PyCodec_ReplaceErrors", "exc"]], "PyCodec_StreamReader": [[14, 3, 1, "c.PyCodec_StreamReader", "encoding"], [14, 3, 1, "c.PyCodec_StreamReader", "errors"], [14, 3, 1, "c.PyCodec_StreamReader", "stream"]], "PyCodec_StreamWriter": [[14, 3, 1, "c.PyCodec_StreamWriter", "encoding"], [14, 3, 1, "c.PyCodec_StreamWriter", "errors"], [14, 3, 1, "c.PyCodec_StreamWriter", "stream"]], "PyCodec_StrictErrors": [[14, 3, 1, "c.PyCodec_StrictErrors", "exc"]], "PyCodec_Unregister": [[14, 3, 1, "c.PyCodec_Unregister", "search_function"]], "PyCodec_XMLCharRefReplaceErrors": [[14, 3, 1, "c.PyCodec_XMLCharRefReplaceErrors", "exc"]], "PyCompilerFlags": [[65, 0, 1, "c.PyCompilerFlags.cf_feature_version", "cf_feature_version"], [65, 0, 1, "c.PyCompilerFlags.cf_flags", "cf_flags"]], "PyComplex_AsCComplex": [[15, 3, 1, "c.PyComplex_AsCComplex", "op"]], "PyComplex_Check": [[15, 3, 1, "c.PyComplex_Check", "p"]], "PyComplex_CheckExact": [[15, 3, 1, "c.PyComplex_CheckExact", "p"]], "PyComplex_FromCComplex": [[15, 3, 1, "c.PyComplex_FromCComplex", "v"]], "PyComplex_FromDoubles": [[15, 3, 1, "c.PyComplex_FromDoubles", "imag"], [15, 3, 1, "c.PyComplex_FromDoubles", "real"]], "PyComplex_ImagAsDouble": [[15, 3, 1, "c.PyComplex_ImagAsDouble", "op"]], "PyComplex_RealAsDouble": [[15, 3, 1, "c.PyComplex_RealAsDouble", "op"]], "PyConfig": [[34, 0, 1, "c.PyConfig.argv", "argv"], [34, 0, 1, "c.PyConfig.base_exec_prefix", "base_exec_prefix"], [34, 0, 1, "c.PyConfig.base_executable", "base_executable"], [34, 0, 1, "c.PyConfig.base_prefix", "base_prefix"], [34, 0, 1, "c.PyConfig.buffered_stdio", "buffered_stdio"], [34, 0, 1, "c.PyConfig.bytes_warning", "bytes_warning"], [34, 0, 1, "c.PyConfig.check_hash_pycs_mode", "check_hash_pycs_mode"], [34, 0, 1, "c.PyConfig.code_debug_ranges", "code_debug_ranges"], [34, 0, 1, "c.PyConfig.configure_c_stdio", "configure_c_stdio"], [34, 0, 1, "c.PyConfig.dev_mode", "dev_mode"], [34, 0, 1, "c.PyConfig.dump_refs", "dump_refs"], [34, 0, 1, "c.PyConfig.exec_prefix", "exec_prefix"], [34, 0, 1, "c.PyConfig.executable", "executable"], [34, 0, 1, "c.PyConfig.faulthandler", "faulthandler"], [34, 0, 1, "c.PyConfig.filesystem_encoding", "filesystem_encoding"], [34, 0, 1, "c.PyConfig.filesystem_errors", "filesystem_errors"], [34, 0, 1, "c.PyConfig.hash_seed", "hash_seed"], [34, 0, 1, "c.PyConfig.home", "home"], [34, 0, 1, "c.PyConfig.import_time", "import_time"], [34, 0, 1, "c.PyConfig.inspect", "inspect"], [34, 0, 1, "c.PyConfig.install_signal_handlers", "install_signal_handlers"], [34, 0, 1, "c.PyConfig.interactive", "interactive"], [34, 0, 1, "c.PyConfig.isolated", "isolated"], [34, 0, 1, "c.PyConfig.legacy_windows_stdio", "legacy_windows_stdio"], [34, 0, 1, "c.PyConfig.malloc_stats", "malloc_stats"], [34, 0, 1, "c.PyConfig.module_search_paths", "module_search_paths"], [34, 0, 1, "c.PyConfig.module_search_paths_set", "module_search_paths_set"], [34, 0, 1, "c.PyConfig.optimization_level", "optimization_level"], [34, 0, 1, "c.PyConfig.orig_argv", "orig_argv"], [34, 0, 1, "c.PyConfig.parse_argv", "parse_argv"], [34, 0, 1, "c.PyConfig.parser_debug", "parser_debug"], [34, 0, 1, "c.PyConfig.pathconfig_warnings", "pathconfig_warnings"], [34, 0, 1, "c.PyConfig.platlibdir", "platlibdir"], [34, 0, 1, "c.PyConfig.prefix", "prefix"], [34, 0, 1, "c.PyConfig.program_name", "program_name"], [34, 0, 1, "c.PyConfig.pycache_prefix", "pycache_prefix"], [34, 0, 1, "c.PyConfig.pythonpath_env", "pythonpath_env"], [34, 0, 1, "c.PyConfig.quiet", "quiet"], [34, 0, 1, "c.PyConfig.run_command", "run_command"], [34, 0, 1, "c.PyConfig.run_filename", "run_filename"], [34, 0, 1, "c.PyConfig.run_module", "run_module"], [34, 0, 1, "c.PyConfig.safe_path", "safe_path"], [34, 0, 1, "c.PyConfig.show_ref_count", "show_ref_count"], [34, 0, 1, "c.PyConfig.site_import", "site_import"], [34, 0, 1, "c.PyConfig.skip_source_first_line", "skip_source_first_line"], [34, 0, 1, "c.PyConfig.stdio_encoding", "stdio_encoding"], [34, 0, 1, "c.PyConfig.stdio_errors", "stdio_errors"], [34, 0, 1, "c.PyConfig.tracemalloc", "tracemalloc"], [34, 0, 1, "c.PyConfig.use_environment", "use_environment"], [34, 0, 1, "c.PyConfig.use_hash_seed", "use_hash_seed"], [34, 0, 1, "c.PyConfig.user_site_directory", "user_site_directory"], [34, 0, 1, "c.PyConfig.verbose", "verbose"], [34, 0, 1, "c.PyConfig.warn_default_encoding", "warn_default_encoding"], [34, 0, 1, "c.PyConfig.warnoptions", "warnoptions"], [34, 0, 1, "c.PyConfig.write_bytecode", "write_bytecode"], [34, 0, 1, "c.PyConfig.xoptions", "xoptions"]], "PyConfig_Clear": [[34, 3, 1, "c.PyConfig_Clear", "config"]], "PyConfig_InitIsolatedConfig": [[34, 3, 1, "c.PyConfig_InitIsolatedConfig", "config"]], "PyConfig_InitPythonConfig": [[34, 3, 1, "c.PyConfig_InitPythonConfig", "config"]], "PyConfig_Read": [[34, 3, 1, "c.PyConfig_Read", "config"]], "PyConfig_SetArgv": [[34, 3, 1, "c.PyConfig_SetArgv", "argc"], [34, 3, 1, "c.PyConfig_SetArgv", "argv"], [34, 3, 1, "c.PyConfig_SetArgv", "config"]], "PyConfig_SetBytesArgv": [[34, 3, 1, "c.PyConfig_SetBytesArgv", "argc"], [34, 3, 1, "c.PyConfig_SetBytesArgv", "argv"], [34, 3, 1, "c.PyConfig_SetBytesArgv", "config"]], "PyConfig_SetBytesString": [[34, 3, 1, "c.PyConfig_SetBytesString", "config"], [34, 3, 1, "c.PyConfig_SetBytesString", "config_str"], [34, 3, 1, "c.PyConfig_SetBytesString", "str"]], "PyConfig_SetString": [[34, 3, 1, "c.PyConfig_SetString", "config"], [34, 3, 1, "c.PyConfig_SetString", "config_str"], [34, 3, 1, "c.PyConfig_SetString", "str"]], "PyConfig_SetWideStringList": [[34, 3, 1, "c.PyConfig_SetWideStringList", "config"], [34, 3, 1, "c.PyConfig_SetWideStringList", "items"], [34, 3, 1, "c.PyConfig_SetWideStringList", "length"], [34, 3, 1, "c.PyConfig_SetWideStringList", "list"]], "PyContextToken_CheckExact": [[17, 3, 1, "c.PyContextToken_CheckExact", "o"]], "PyContextVar_CheckExact": [[17, 3, 1, "c.PyContextVar_CheckExact", "o"]], "PyContextVar_Get": [[17, 3, 1, "c.PyContextVar_Get", "default_value"], [17, 3, 1, "c.PyContextVar_Get", "value"], [17, 3, 1, "c.PyContextVar_Get", "var"]], "PyContextVar_New": [[17, 3, 1, "c.PyContextVar_New", "def"], [17, 3, 1, "c.PyContextVar_New", "name"]], "PyContextVar_Reset": [[17, 3, 1, "c.PyContextVar_Reset", "token"], [17, 3, 1, "c.PyContextVar_Reset", "var"]], "PyContextVar_Set": [[17, 3, 1, "c.PyContextVar_Set", "value"], [17, 3, 1, "c.PyContextVar_Set", "var"]], "PyContext_CheckExact": [[17, 3, 1, "c.PyContext_CheckExact", "o"]], "PyContext_Copy": [[17, 3, 1, "c.PyContext_Copy", "ctx"]], "PyContext_Enter": [[17, 3, 1, "c.PyContext_Enter", "ctx"]], "PyContext_Exit": [[17, 3, 1, "c.PyContext_Exit", "ctx"]], "PyCoro_CheckExact": [[19, 3, 1, "c.PyCoro_CheckExact", "ob"]], "PyCoro_New": [[19, 3, 1, "c.PyCoro_New", "frame"], [19, 3, 1, "c.PyCoro_New", "name"], [19, 3, 1, "c.PyCoro_New", "qualname"]], "PyDateTime_Check": [[20, 3, 1, "c.PyDateTime_Check", "ob"]], "PyDateTime_CheckExact": [[20, 3, 1, "c.PyDateTime_CheckExact", "ob"]], "PyDateTime_DATE_GET_FOLD": [[20, 3, 1, "c.PyDateTime_DATE_GET_FOLD", "o"]], "PyDateTime_DATE_GET_HOUR": [[20, 3, 1, "c.PyDateTime_DATE_GET_HOUR", "o"]], "PyDateTime_DATE_GET_MICROSECOND": [[20, 3, 1, "c.PyDateTime_DATE_GET_MICROSECOND", "o"]], "PyDateTime_DATE_GET_MINUTE": [[20, 3, 1, "c.PyDateTime_DATE_GET_MINUTE", "o"]], "PyDateTime_DATE_GET_SECOND": [[20, 3, 1, "c.PyDateTime_DATE_GET_SECOND", "o"]], "PyDateTime_DATE_GET_TZINFO": [[20, 3, 1, "c.PyDateTime_DATE_GET_TZINFO", "o"]], "PyDateTime_DELTA_GET_DAYS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_DAYS", "o"]], "PyDateTime_DELTA_GET_MICROSECONDS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_MICROSECONDS", "o"]], "PyDateTime_DELTA_GET_SECONDS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_SECONDS", "o"]], "PyDateTime_FromDateAndTime": [[20, 3, 1, "c.PyDateTime_FromDateAndTime", "day"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "hour"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "minute"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "month"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "second"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "usecond"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "year"]], "PyDateTime_FromDateAndTimeAndFold": [[20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "day"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "fold"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "hour"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "minute"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "month"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "second"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "usecond"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "year"]], "PyDateTime_FromTimestamp": [[20, 3, 1, "c.PyDateTime_FromTimestamp", "args"]], "PyDateTime_GET_DAY": [[20, 3, 1, "c.PyDateTime_GET_DAY", "o"]], "PyDateTime_GET_MONTH": [[20, 3, 1, "c.PyDateTime_GET_MONTH", "o"]], "PyDateTime_GET_YEAR": [[20, 3, 1, "c.PyDateTime_GET_YEAR", "o"]], "PyDateTime_TIME_GET_FOLD": [[20, 3, 1, "c.PyDateTime_TIME_GET_FOLD", "o"]], "PyDateTime_TIME_GET_HOUR": [[20, 3, 1, "c.PyDateTime_TIME_GET_HOUR", "o"]], "PyDateTime_TIME_GET_MICROSECOND": [[20, 3, 1, "c.PyDateTime_TIME_GET_MICROSECOND", "o"]], "PyDateTime_TIME_GET_MINUTE": [[20, 3, 1, "c.PyDateTime_TIME_GET_MINUTE", "o"]], "PyDateTime_TIME_GET_SECOND": [[20, 3, 1, "c.PyDateTime_TIME_GET_SECOND", "o"]], "PyDateTime_TIME_GET_TZINFO": [[20, 3, 1, "c.PyDateTime_TIME_GET_TZINFO", "o"]], "PyDate_Check": [[20, 3, 1, "c.PyDate_Check", "ob"]], "PyDate_CheckExact": [[20, 3, 1, "c.PyDate_CheckExact", "ob"]], "PyDate_FromDate": [[20, 3, 1, "c.PyDate_FromDate", "day"], [20, 3, 1, "c.PyDate_FromDate", "month"], [20, 3, 1, "c.PyDate_FromDate", "year"]], "PyDate_FromTimestamp": [[20, 3, 1, "c.PyDate_FromTimestamp", "args"]], "PyDelta_Check": [[20, 3, 1, "c.PyDelta_Check", "ob"]], "PyDelta_CheckExact": [[20, 3, 1, "c.PyDelta_CheckExact", "ob"]], "PyDelta_FromDSU": [[20, 3, 1, "c.PyDelta_FromDSU", "days"], [20, 3, 1, "c.PyDelta_FromDSU", "seconds"], [20, 3, 1, "c.PyDelta_FromDSU", "useconds"]], "PyDescr_IsData": [[21, 3, 1, "c.PyDescr_IsData", "descr"]], "PyDescr_NewClassMethod": [[21, 3, 1, "c.PyDescr_NewClassMethod", "method"], [21, 3, 1, "c.PyDescr_NewClassMethod", "type"]], "PyDescr_NewGetSet": [[21, 3, 1, "c.PyDescr_NewGetSet", "getset"], [21, 3, 1, "c.PyDescr_NewGetSet", "type"]], "PyDescr_NewMember": [[21, 3, 1, "c.PyDescr_NewMember", "meth"], [21, 3, 1, "c.PyDescr_NewMember", "type"]], "PyDescr_NewMethod": [[21, 3, 1, "c.PyDescr_NewMethod", "meth"], [21, 3, 1, "c.PyDescr_NewMethod", "type"]], "PyDescr_NewWrapper": [[21, 3, 1, "c.PyDescr_NewWrapper", "type"], [21, 3, 1, "c.PyDescr_NewWrapper", "wrapped"], [21, 3, 1, "c.PyDescr_NewWrapper", "wrapper"]], "PyDictProxy_New": [[22, 3, 1, "c.PyDictProxy_New", "mapping"]], "PyDict_Check": [[22, 3, 1, "c.PyDict_Check", "p"]], "PyDict_CheckExact": [[22, 3, 1, "c.PyDict_CheckExact", "p"]], "PyDict_Clear": [[22, 3, 1, "c.PyDict_Clear", "p"]], "PyDict_Contains": [[22, 3, 1, "c.PyDict_Contains", "key"], [22, 3, 1, "c.PyDict_Contains", "p"]], "PyDict_Copy": [[22, 3, 1, "c.PyDict_Copy", "p"]], "PyDict_DelItem": [[22, 3, 1, "c.PyDict_DelItem", "key"], [22, 3, 1, "c.PyDict_DelItem", "p"]], "PyDict_DelItemString": [[22, 3, 1, "c.PyDict_DelItemString", "key"], [22, 3, 1, "c.PyDict_DelItemString", "p"]], "PyDict_GetItem": [[22, 3, 1, "c.PyDict_GetItem", "key"], [22, 3, 1, "c.PyDict_GetItem", "p"]], "PyDict_GetItemString": [[22, 3, 1, "c.PyDict_GetItemString", "key"], [22, 3, 1, "c.PyDict_GetItemString", "p"]], "PyDict_GetItemWithError": [[22, 3, 1, "c.PyDict_GetItemWithError", "key"], [22, 3, 1, "c.PyDict_GetItemWithError", "p"]], "PyDict_Items": [[22, 3, 1, "c.PyDict_Items", "p"]], "PyDict_Keys": [[22, 3, 1, "c.PyDict_Keys", "p"]], "PyDict_Merge": [[22, 3, 1, "c.PyDict_Merge", "a"], [22, 3, 1, "c.PyDict_Merge", "b"], [22, 3, 1, "c.PyDict_Merge", "override"]], "PyDict_MergeFromSeq2": [[22, 3, 1, "c.PyDict_MergeFromSeq2", "a"], [22, 3, 1, "c.PyDict_MergeFromSeq2", "override"], [22, 3, 1, "c.PyDict_MergeFromSeq2", "seq2"]], "PyDict_Next": [[22, 3, 1, "c.PyDict_Next", "p"], [22, 3, 1, "c.PyDict_Next", "pkey"], [22, 3, 1, "c.PyDict_Next", "ppos"], [22, 3, 1, "c.PyDict_Next", "pvalue"]], "PyDict_SetDefault": [[22, 3, 1, "c.PyDict_SetDefault", "defaultobj"], [22, 3, 1, "c.PyDict_SetDefault", "key"], [22, 3, 1, "c.PyDict_SetDefault", "p"]], "PyDict_SetItem": [[22, 3, 1, "c.PyDict_SetItem", "key"], [22, 3, 1, "c.PyDict_SetItem", "p"], [22, 3, 1, "c.PyDict_SetItem", "val"]], "PyDict_SetItemString": [[22, 3, 1, "c.PyDict_SetItemString", "key"], [22, 3, 1, "c.PyDict_SetItemString", "p"], [22, 3, 1, "c.PyDict_SetItemString", "val"]], "PyDict_Size": [[22, 3, 1, "c.PyDict_Size", "p"]], "PyDict_Update": [[22, 3, 1, "c.PyDict_Update", "a"], [22, 3, 1, "c.PyDict_Update", "b"]], "PyDict_Values": [[22, 3, 1, "c.PyDict_Values", "p"]], "PyErr_ExceptionMatches": [[23, 3, 1, "c.PyErr_ExceptionMatches", "exc"]], "PyErr_Fetch": [[23, 3, 1, "c.PyErr_Fetch", "ptraceback"], [23, 3, 1, "c.PyErr_Fetch", "ptype"], [23, 3, 1, "c.PyErr_Fetch", "pvalue"]], "PyErr_Format": [[23, 3, 1, "c.PyErr_Format", "exception"], [23, 3, 1, "c.PyErr_Format", "format"]], "PyErr_FormatV": [[23, 3, 1, "c.PyErr_FormatV", "exception"], [23, 3, 1, "c.PyErr_FormatV", "format"], [23, 3, 1, "c.PyErr_FormatV", "vargs"]], "PyErr_GetExcInfo": [[23, 3, 1, "c.PyErr_GetExcInfo", "ptraceback"], [23, 3, 1, "c.PyErr_GetExcInfo", "ptype"], [23, 3, 1, "c.PyErr_GetExcInfo", "pvalue"]], "PyErr_GivenExceptionMatches": [[23, 3, 1, "c.PyErr_GivenExceptionMatches", "exc"], [23, 3, 1, "c.PyErr_GivenExceptionMatches", "given"]], "PyErr_NewException": [[23, 3, 1, "c.PyErr_NewException", "base"], [23, 3, 1, "c.PyErr_NewException", "dict"], [23, 3, 1, "c.PyErr_NewException", "name"]], "PyErr_NewExceptionWithDoc": [[23, 3, 1, "c.PyErr_NewExceptionWithDoc", "base"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "dict"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "doc"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "name"]], "PyErr_NormalizeException": [[23, 3, 1, "c.PyErr_NormalizeException", "exc"], [23, 3, 1, "c.PyErr_NormalizeException", "tb"], [23, 3, 1, "c.PyErr_NormalizeException", "val"]], "PyErr_PrintEx": [[23, 3, 1, "c.PyErr_PrintEx", "set_sys_last_vars"]], "PyErr_ResourceWarning": [[23, 3, 1, "c.PyErr_ResourceWarning", "format"], [23, 3, 1, "c.PyErr_ResourceWarning", "source"], [23, 3, 1, "c.PyErr_ResourceWarning", "stack_level"]], "PyErr_Restore": [[23, 3, 1, "c.PyErr_Restore", "traceback"], [23, 3, 1, "c.PyErr_Restore", "type"], [23, 3, 1, "c.PyErr_Restore", "value"]], "PyErr_SetExcFromWindowsErr": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErr", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErr", "type"]], "PyErr_SetExcFromWindowsErrWithFilename": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "type"]], "PyErr_SetExcFromWindowsErrWithFilenameObject": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "type"]], "PyErr_SetExcFromWindowsErrWithFilenameObjects": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "filename2"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "type"]], "PyErr_SetExcInfo": [[23, 3, 1, "c.PyErr_SetExcInfo", "traceback"], [23, 3, 1, "c.PyErr_SetExcInfo", "type"], [23, 3, 1, "c.PyErr_SetExcInfo", "value"]], "PyErr_SetFromErrno": [[23, 3, 1, "c.PyErr_SetFromErrno", "type"]], "PyErr_SetFromErrnoWithFilename": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilename", "type"]], "PyErr_SetFromErrnoWithFilenameObject": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "filenameObject"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "type"]], "PyErr_SetFromErrnoWithFilenameObjects": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "filenameObject"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "filenameObject2"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "type"]], "PyErr_SetFromWindowsErr": [[23, 3, 1, "c.PyErr_SetFromWindowsErr", "ierr"]], "PyErr_SetFromWindowsErrWithFilename": [[23, 3, 1, "c.PyErr_SetFromWindowsErrWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetFromWindowsErrWithFilename", "ierr"]], "PyErr_SetHandledException": [[23, 3, 1, "c.PyErr_SetHandledException", "exc"]], "PyErr_SetImportError": [[23, 3, 1, "c.PyErr_SetImportError", "msg"], [23, 3, 1, "c.PyErr_SetImportError", "name"], [23, 3, 1, "c.PyErr_SetImportError", "path"]], "PyErr_SetImportErrorSubclass": [[23, 3, 1, "c.PyErr_SetImportErrorSubclass", "exception"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "msg"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "name"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "path"]], "PyErr_SetInterruptEx": [[23, 3, 1, "c.PyErr_SetInterruptEx", "signum"]], "PyErr_SetNone": [[23, 3, 1, "c.PyErr_SetNone", "type"]], "PyErr_SetObject": [[23, 3, 1, "c.PyErr_SetObject", "type"], [23, 3, 1, "c.PyErr_SetObject", "value"]], "PyErr_SetString": [[23, 3, 1, "c.PyErr_SetString", "message"], [23, 3, 1, "c.PyErr_SetString", "type"]], "PyErr_SyntaxLocation": [[23, 3, 1, "c.PyErr_SyntaxLocation", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocation", "lineno"]], "PyErr_SyntaxLocationEx": [[23, 3, 1, "c.PyErr_SyntaxLocationEx", "col_offset"], [23, 3, 1, "c.PyErr_SyntaxLocationEx", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocationEx", "lineno"]], "PyErr_SyntaxLocationObject": [[23, 3, 1, "c.PyErr_SyntaxLocationObject", "col_offset"], [23, 3, 1, "c.PyErr_SyntaxLocationObject", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocationObject", "lineno"]], "PyErr_WarnEx": [[23, 3, 1, "c.PyErr_WarnEx", "category"], [23, 3, 1, "c.PyErr_WarnEx", "message"], [23, 3, 1, "c.PyErr_WarnEx", "stack_level"]], "PyErr_WarnExplicit": [[23, 3, 1, "c.PyErr_WarnExplicit", "category"], [23, 3, 1, "c.PyErr_WarnExplicit", "filename"], [23, 3, 1, "c.PyErr_WarnExplicit", "lineno"], [23, 3, 1, "c.PyErr_WarnExplicit", "message"], [23, 3, 1, "c.PyErr_WarnExplicit", "module"], [23, 3, 1, "c.PyErr_WarnExplicit", "registry"]], "PyErr_WarnExplicitObject": [[23, 3, 1, "c.PyErr_WarnExplicitObject", "category"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "filename"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "lineno"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "message"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "module"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "registry"]], "PyErr_WarnFormat": [[23, 3, 1, "c.PyErr_WarnFormat", "category"], [23, 3, 1, "c.PyErr_WarnFormat", "format"], [23, 3, 1, "c.PyErr_WarnFormat", "stack_level"]], "PyErr_WriteUnraisable": [[23, 3, 1, "c.PyErr_WriteUnraisable", "obj"]], "PyEval_AcquireThread": [[33, 3, 1, "c.PyEval_AcquireThread", "tstate"]], "PyEval_EvalCode": [[65, 3, 1, "c.PyEval_EvalCode", "co"], [65, 3, 1, "c.PyEval_EvalCode", "globals"], [65, 3, 1, "c.PyEval_EvalCode", "locals"]], "PyEval_EvalCodeEx": [[65, 3, 1, "c.PyEval_EvalCodeEx", "argcount"], [65, 3, 1, "c.PyEval_EvalCodeEx", "args"], [65, 3, 1, "c.PyEval_EvalCodeEx", "closure"], [65, 3, 1, "c.PyEval_EvalCodeEx", "co"], [65, 3, 1, "c.PyEval_EvalCodeEx", "defcount"], [65, 3, 1, "c.PyEval_EvalCodeEx", "defs"], [65, 3, 1, "c.PyEval_EvalCodeEx", "globals"], [65, 3, 1, "c.PyEval_EvalCodeEx", "kwcount"], [65, 3, 1, "c.PyEval_EvalCodeEx", "kwdefs"], [65, 3, 1, "c.PyEval_EvalCodeEx", "kws"], [65, 3, 1, "c.PyEval_EvalCodeEx", "locals"]], "PyEval_EvalFrame": [[65, 3, 1, "c.PyEval_EvalFrame", "f"]], "PyEval_EvalFrameEx": [[65, 3, 1, "c.PyEval_EvalFrameEx", "f"], [65, 3, 1, "c.PyEval_EvalFrameEx", "throwflag"]], "PyEval_GetFuncDesc": [[52, 3, 1, "c.PyEval_GetFuncDesc", "func"]], "PyEval_GetFuncName": [[52, 3, 1, "c.PyEval_GetFuncName", "func"]], "PyEval_MergeCompilerFlags": [[65, 3, 1, "c.PyEval_MergeCompilerFlags", "cf"]], "PyEval_ReleaseThread": [[33, 3, 1, "c.PyEval_ReleaseThread", "tstate"]], "PyEval_RestoreThread": [[33, 3, 1, "c.PyEval_RestoreThread", "tstate"]], "PyEval_SetProfile": [[33, 3, 1, "c.PyEval_SetProfile", "func"], [33, 3, 1, "c.PyEval_SetProfile", "obj"]], "PyEval_SetTrace": [[33, 3, 1, "c.PyEval_SetTrace", "func"], [33, 3, 1, "c.PyEval_SetTrace", "obj"]], "PyException_GetCause": [[23, 3, 1, "c.PyException_GetCause", "ex"]], "PyException_GetContext": [[23, 3, 1, "c.PyException_GetContext", "ex"]], "PyException_GetTraceback": [[23, 3, 1, "c.PyException_GetTraceback", "ex"]], "PyException_SetCause": [[23, 3, 1, "c.PyException_SetCause", "cause"], [23, 3, 1, "c.PyException_SetCause", "ex"]], "PyException_SetContext": [[23, 3, 1, "c.PyException_SetContext", "ctx"], [23, 3, 1, "c.PyException_SetContext", "ex"]], "PyException_SetTraceback": [[23, 3, 1, "c.PyException_SetTraceback", "ex"], [23, 3, 1, "c.PyException_SetTraceback", "tb"]], "PyFile_FromFd": [[24, 3, 1, "c.PyFile_FromFd", "buffering"], [24, 3, 1, "c.PyFile_FromFd", "closefd"], [24, 3, 1, "c.PyFile_FromFd", "encoding"], [24, 3, 1, "c.PyFile_FromFd", "errors"], [24, 3, 1, "c.PyFile_FromFd", "fd"], [24, 3, 1, "c.PyFile_FromFd", "mode"], [24, 3, 1, "c.PyFile_FromFd", "name"], [24, 3, 1, "c.PyFile_FromFd", "newline"]], "PyFile_GetLine": [[24, 3, 1, "c.PyFile_GetLine", "n"], [24, 3, 1, "c.PyFile_GetLine", "p"]], "PyFile_SetOpenCodeHook": [[24, 3, 1, "c.PyFile_SetOpenCodeHook", "handler"]], "PyFile_WriteObject": [[24, 3, 1, "c.PyFile_WriteObject", "flags"], [24, 3, 1, "c.PyFile_WriteObject", "obj"], [24, 3, 1, "c.PyFile_WriteObject", "p"]], "PyFile_WriteString": [[24, 3, 1, "c.PyFile_WriteString", "p"], [24, 3, 1, "c.PyFile_WriteString", "s"]], "PyFloat_AS_DOUBLE": [[25, 3, 1, "c.PyFloat_AS_DOUBLE", "pyfloat"]], "PyFloat_AsDouble": [[25, 3, 1, "c.PyFloat_AsDouble", "pyfloat"]], "PyFloat_Check": [[25, 3, 1, "c.PyFloat_Check", "p"]], "PyFloat_CheckExact": [[25, 3, 1, "c.PyFloat_CheckExact", "p"]], "PyFloat_FromDouble": [[25, 3, 1, "c.PyFloat_FromDouble", "v"]], "PyFloat_FromString": [[25, 3, 1, "c.PyFloat_FromString", "str"]], "PyFloat_Pack2": [[25, 3, 1, "c.PyFloat_Pack2", "le"], [25, 3, 1, "c.PyFloat_Pack2", "p"], [25, 3, 1, "c.PyFloat_Pack2", "x"]], "PyFloat_Pack4": [[25, 3, 1, "c.PyFloat_Pack4", "le"], [25, 3, 1, "c.PyFloat_Pack4", "p"], [25, 3, 1, "c.PyFloat_Pack4", "x"]], "PyFloat_Pack8": [[25, 3, 1, "c.PyFloat_Pack8", "le"], [25, 3, 1, "c.PyFloat_Pack8", "p"], [25, 3, 1, "c.PyFloat_Pack8", "x"]], "PyFloat_Unpack2": [[25, 3, 1, "c.PyFloat_Unpack2", "le"], [25, 3, 1, "c.PyFloat_Unpack2", "p"]], "PyFloat_Unpack4": [[25, 3, 1, "c.PyFloat_Unpack4", "le"], [25, 3, 1, "c.PyFloat_Unpack4", "p"]], "PyFloat_Unpack8": [[25, 3, 1, "c.PyFloat_Unpack8", "le"], [25, 3, 1, "c.PyFloat_Unpack8", "p"]], "PyFrame_Check": [[26, 3, 1, "c.PyFrame_Check", "obj"]], "PyFrame_GetBack": [[26, 3, 1, "c.PyFrame_GetBack", "frame"]], "PyFrame_GetBuiltins": [[26, 3, 1, "c.PyFrame_GetBuiltins", "frame"]], "PyFrame_GetCode": [[26, 3, 1, "c.PyFrame_GetCode", "frame"]], "PyFrame_GetGenerator": [[26, 3, 1, "c.PyFrame_GetGenerator", "frame"]], "PyFrame_GetGlobals": [[26, 3, 1, "c.PyFrame_GetGlobals", "frame"]], "PyFrame_GetLasti": [[26, 3, 1, "c.PyFrame_GetLasti", "frame"]], "PyFrame_GetLineNumber": [[26, 3, 1, "c.PyFrame_GetLineNumber", "frame"]], "PyFrame_GetLocals": [[26, 3, 1, "c.PyFrame_GetLocals", "frame"]], "PyFrozenSet_Check": [[54, 3, 1, "c.PyFrozenSet_Check", "p"]], "PyFrozenSet_CheckExact": [[54, 3, 1, "c.PyFrozenSet_CheckExact", "p"]], "PyFrozenSet_New": [[54, 3, 1, "c.PyFrozenSet_New", "iterable"]], "PyFunction_Check": [[27, 3, 1, "c.PyFunction_Check", "o"]], "PyFunction_GetAnnotations": [[27, 3, 1, "c.PyFunction_GetAnnotations", "op"]], "PyFunction_GetClosure": [[27, 3, 1, "c.PyFunction_GetClosure", "op"]], "PyFunction_GetCode": [[27, 3, 1, "c.PyFunction_GetCode", "op"]], "PyFunction_GetDefaults": [[27, 3, 1, "c.PyFunction_GetDefaults", "op"]], "PyFunction_GetGlobals": [[27, 3, 1, "c.PyFunction_GetGlobals", "op"]], "PyFunction_GetModule": [[27, 3, 1, "c.PyFunction_GetModule", "op"]], "PyFunction_New": [[27, 3, 1, "c.PyFunction_New", "code"], [27, 3, 1, "c.PyFunction_New", "globals"]], "PyFunction_NewWithQualName": [[27, 3, 1, "c.PyFunction_NewWithQualName", "code"], [27, 3, 1, "c.PyFunction_NewWithQualName", "globals"], [27, 3, 1, "c.PyFunction_NewWithQualName", "qualname"]], "PyFunction_SetAnnotations": [[27, 3, 1, "c.PyFunction_SetAnnotations", "annotations"], [27, 3, 1, "c.PyFunction_SetAnnotations", "op"]], "PyFunction_SetClosure": [[27, 3, 1, "c.PyFunction_SetClosure", "closure"], [27, 3, 1, "c.PyFunction_SetClosure", "op"]], "PyFunction_SetDefaults": [[27, 3, 1, "c.PyFunction_SetDefaults", "defaults"], [27, 3, 1, "c.PyFunction_SetDefaults", "op"]], "PyGen_Check": [[29, 3, 1, "c.PyGen_Check", "ob"]], "PyGen_CheckExact": [[29, 3, 1, "c.PyGen_CheckExact", "ob"]], "PyGen_New": [[29, 3, 1, "c.PyGen_New", "frame"]], "PyGen_NewWithQualName": [[29, 3, 1, "c.PyGen_NewWithQualName", "frame"], [29, 3, 1, "c.PyGen_NewWithQualName", "name"], [29, 3, 1, "c.PyGen_NewWithQualName", "qualname"]], "PyHash_FuncDef": [[30, 0, 1, "c.PyHash_FuncDef.hash_bits", "hash_bits"], [30, 0, 1, "c.PyHash_FuncDef.name", "name"], [30, 0, 1, "c.PyHash_FuncDef.seed_bits", "seed_bits"]], "PyImport_AddModule": [[31, 3, 1, "c.PyImport_AddModule", "name"]], "PyImport_AddModuleObject": [[31, 3, 1, "c.PyImport_AddModuleObject", "name"]], "PyImport_AppendInittab": [[31, 3, 1, "c.PyImport_AppendInittab", "initfunc"], [31, 3, 1, "c.PyImport_AppendInittab", "name"]], "PyImport_ExecCodeModule": [[31, 3, 1, "c.PyImport_ExecCodeModule", "co"], [31, 3, 1, "c.PyImport_ExecCodeModule", "name"]], "PyImport_ExecCodeModuleEx": [[31, 3, 1, "c.PyImport_ExecCodeModuleEx", "co"], [31, 3, 1, "c.PyImport_ExecCodeModuleEx", "name"], [31, 3, 1, "c.PyImport_ExecCodeModuleEx", "pathname"]], "PyImport_ExecCodeModuleObject": [[31, 3, 1, "c.PyImport_ExecCodeModuleObject", "co"], [31, 3, 1, "c.PyImport_ExecCodeModuleObject", "cpathname"], [31, 3, 1, "c.PyImport_ExecCodeModuleObject", "name"], [31, 3, 1, "c.PyImport_ExecCodeModuleObject", "pathname"]], "PyImport_ExecCodeModuleWithPathnames": [[31, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "co"], [31, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "cpathname"], [31, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "name"], [31, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "pathname"]], "PyImport_ExtendInittab": [[31, 3, 1, "c.PyImport_ExtendInittab", "newtab"]], "PyImport_GetImporter": [[31, 3, 1, "c.PyImport_GetImporter", "path"]], "PyImport_GetModule": [[31, 3, 1, "c.PyImport_GetModule", "name"]], "PyImport_Import": [[31, 3, 1, "c.PyImport_Import", "name"]], "PyImport_ImportFrozenModule": [[31, 3, 1, "c.PyImport_ImportFrozenModule", "name"]], "PyImport_ImportFrozenModuleObject": [[31, 3, 1, "c.PyImport_ImportFrozenModuleObject", "name"]], "PyImport_ImportModule": [[31, 3, 1, "c.PyImport_ImportModule", "name"]], "PyImport_ImportModuleEx": [[31, 3, 1, "c.PyImport_ImportModuleEx", "fromlist"], [31, 3, 1, "c.PyImport_ImportModuleEx", "globals"], [31, 3, 1, "c.PyImport_ImportModuleEx", "locals"], [31, 3, 1, "c.PyImport_ImportModuleEx", "name"]], "PyImport_ImportModuleLevel": [[31, 3, 1, "c.PyImport_ImportModuleLevel", "fromlist"], [31, 3, 1, "c.PyImport_ImportModuleLevel", "globals"], [31, 3, 1, "c.PyImport_ImportModuleLevel", "level"], [31, 3, 1, "c.PyImport_ImportModuleLevel", "locals"], [31, 3, 1, "c.PyImport_ImportModuleLevel", "name"]], "PyImport_ImportModuleLevelObject": [[31, 3, 1, "c.PyImport_ImportModuleLevelObject", "fromlist"], [31, 3, 1, "c.PyImport_ImportModuleLevelObject", "globals"], [31, 3, 1, "c.PyImport_ImportModuleLevelObject", "level"], [31, 3, 1, "c.PyImport_ImportModuleLevelObject", "locals"], [31, 3, 1, "c.PyImport_ImportModuleLevelObject", "name"]], "PyImport_ImportModuleNoBlock": [[31, 3, 1, "c.PyImport_ImportModuleNoBlock", "name"]], "PyImport_ReloadModule": [[31, 3, 1, "c.PyImport_ReloadModule", "m"]], "PyIndex_Check": [[47, 3, 1, "c.PyIndex_Check", "o"]], "PyInstanceMethod_Check": [[44, 3, 1, "c.PyInstanceMethod_Check", "o"]], "PyInstanceMethod_Function": [[44, 3, 1, "c.PyInstanceMethod_Function", "im"]], "PyInstanceMethod_GET_FUNCTION": [[44, 3, 1, "c.PyInstanceMethod_GET_FUNCTION", "im"]], "PyInstanceMethod_New": [[44, 3, 1, "c.PyInstanceMethod_New", "func"]], "PyInterpreterState_Clear": [[33, 3, 1, "c.PyInterpreterState_Clear", "interp"]], "PyInterpreterState_Delete": [[33, 3, 1, "c.PyInterpreterState_Delete", "interp"]], "PyInterpreterState_GetDict": [[33, 3, 1, "c.PyInterpreterState_GetDict", "interp"]], "PyInterpreterState_GetID": [[33, 3, 1, "c.PyInterpreterState_GetID", "interp"]], "PyInterpreterState_Next": [[33, 3, 1, "c.PyInterpreterState_Next", "interp"]], "PyInterpreterState_ThreadHead": [[33, 3, 1, "c.PyInterpreterState_ThreadHead", "interp"]], "PyIter_Check": [[36, 3, 1, "c.PyIter_Check", "o"]], "PyIter_Next": [[36, 3, 1, "c.PyIter_Next", "o"]], "PyIter_Send": [[36, 3, 1, "c.PyIter_Send", "arg"], [36, 3, 1, "c.PyIter_Send", "iter"], [36, 3, 1, "c.PyIter_Send", "presult"]], "PyList_Append": [[38, 3, 1, "c.PyList_Append", "item"], [38, 3, 1, "c.PyList_Append", "list"]], "PyList_AsTuple": [[38, 3, 1, "c.PyList_AsTuple", "list"]], "PyList_Check": [[38, 3, 1, "c.PyList_Check", "p"]], "PyList_CheckExact": [[38, 3, 1, "c.PyList_CheckExact", "p"]], "PyList_GET_ITEM": [[38, 3, 1, "c.PyList_GET_ITEM", "i"], [38, 3, 1, "c.PyList_GET_ITEM", "list"]], "PyList_GET_SIZE": [[38, 3, 1, "c.PyList_GET_SIZE", "list"]], "PyList_GetItem": [[38, 3, 1, "c.PyList_GetItem", "index"], [38, 3, 1, "c.PyList_GetItem", "list"]], "PyList_GetSlice": [[38, 3, 1, "c.PyList_GetSlice", "high"], [38, 3, 1, "c.PyList_GetSlice", "list"], [38, 3, 1, "c.PyList_GetSlice", "low"]], "PyList_Insert": [[38, 3, 1, "c.PyList_Insert", "index"], [38, 3, 1, "c.PyList_Insert", "item"], [38, 3, 1, "c.PyList_Insert", "list"]], "PyList_New": [[38, 3, 1, "c.PyList_New", "len"]], "PyList_Reverse": [[38, 3, 1, "c.PyList_Reverse", "list"]], "PyList_SET_ITEM": [[38, 3, 1, "c.PyList_SET_ITEM", "i"], [38, 3, 1, "c.PyList_SET_ITEM", "list"], [38, 3, 1, "c.PyList_SET_ITEM", "o"]], "PyList_SetItem": [[38, 3, 1, "c.PyList_SetItem", "index"], [38, 3, 1, "c.PyList_SetItem", "item"], [38, 3, 1, "c.PyList_SetItem", "list"]], "PyList_SetSlice": [[38, 3, 1, "c.PyList_SetSlice", "high"], [38, 3, 1, "c.PyList_SetSlice", "itemlist"], [38, 3, 1, "c.PyList_SetSlice", "list"], [38, 3, 1, "c.PyList_SetSlice", "low"]], "PyList_Size": [[38, 3, 1, "c.PyList_Size", "list"]], "PyList_Sort": [[38, 3, 1, "c.PyList_Sort", "list"]], "PyLong_AsDouble": [[39, 3, 1, "c.PyLong_AsDouble", "pylong"]], "PyLong_AsLong": [[39, 3, 1, "c.PyLong_AsLong", "obj"]], "PyLong_AsLongAndOverflow": [[39, 3, 1, "c.PyLong_AsLongAndOverflow", "obj"], [39, 3, 1, "c.PyLong_AsLongAndOverflow", "overflow"]], "PyLong_AsLongLong": [[39, 3, 1, "c.PyLong_AsLongLong", "obj"]], "PyLong_AsLongLongAndOverflow": [[39, 3, 1, "c.PyLong_AsLongLongAndOverflow", "obj"], [39, 3, 1, "c.PyLong_AsLongLongAndOverflow", "overflow"]], "PyLong_AsSize_t": [[39, 3, 1, "c.PyLong_AsSize_t", "pylong"]], "PyLong_AsSsize_t": [[39, 3, 1, "c.PyLong_AsSsize_t", "pylong"]], "PyLong_AsUnsignedLong": [[39, 3, 1, "c.PyLong_AsUnsignedLong", "pylong"]], "PyLong_AsUnsignedLongLong": [[39, 3, 1, "c.PyLong_AsUnsignedLongLong", "pylong"]], "PyLong_AsUnsignedLongLongMask": [[39, 3, 1, "c.PyLong_AsUnsignedLongLongMask", "obj"]], "PyLong_AsUnsignedLongMask": [[39, 3, 1, "c.PyLong_AsUnsignedLongMask", "obj"]], "PyLong_AsVoidPtr": [[39, 3, 1, "c.PyLong_AsVoidPtr", "pylong"]], "PyLong_Check": [[39, 3, 1, "c.PyLong_Check", "p"]], "PyLong_CheckExact": [[39, 3, 1, "c.PyLong_CheckExact", "p"]], "PyLong_FromDouble": [[39, 3, 1, "c.PyLong_FromDouble", "v"]], "PyLong_FromLong": [[39, 3, 1, "c.PyLong_FromLong", "v"]], "PyLong_FromLongLong": [[39, 3, 1, "c.PyLong_FromLongLong", "v"]], "PyLong_FromSize_t": [[39, 3, 1, "c.PyLong_FromSize_t", "v"]], "PyLong_FromSsize_t": [[39, 3, 1, "c.PyLong_FromSsize_t", "v"]], "PyLong_FromString": [[39, 3, 1, "c.PyLong_FromString", "base"], [39, 3, 1, "c.PyLong_FromString", "pend"], [39, 3, 1, "c.PyLong_FromString", "str"]], "PyLong_FromUnicodeObject": [[39, 3, 1, "c.PyLong_FromUnicodeObject", "base"], [39, 3, 1, "c.PyLong_FromUnicodeObject", "u"]], "PyLong_FromUnsignedLong": [[39, 3, 1, "c.PyLong_FromUnsignedLong", "v"]], "PyLong_FromUnsignedLongLong": [[39, 3, 1, "c.PyLong_FromUnsignedLongLong", "v"]], "PyLong_FromVoidPtr": [[39, 3, 1, "c.PyLong_FromVoidPtr", "p"]], "PyMappingMethods": [[62, 0, 1, "c.PyMappingMethods.mp_ass_subscript", "mp_ass_subscript"], [62, 0, 1, "c.PyMappingMethods.mp_length", "mp_length"], [62, 0, 1, "c.PyMappingMethods.mp_subscript", "mp_subscript"]], "PyMapping_Check": [[40, 3, 1, "c.PyMapping_Check", "o"]], "PyMapping_DelItem": [[40, 3, 1, "c.PyMapping_DelItem", "key"], [40, 3, 1, "c.PyMapping_DelItem", "o"]], "PyMapping_DelItemString": [[40, 3, 1, "c.PyMapping_DelItemString", "key"], [40, 3, 1, "c.PyMapping_DelItemString", "o"]], "PyMapping_GetItemString": [[40, 3, 1, "c.PyMapping_GetItemString", "key"], [40, 3, 1, "c.PyMapping_GetItemString", "o"]], "PyMapping_HasKey": [[40, 3, 1, "c.PyMapping_HasKey", "key"], [40, 3, 1, "c.PyMapping_HasKey", "o"]], "PyMapping_HasKeyString": [[40, 3, 1, "c.PyMapping_HasKeyString", "key"], [40, 3, 1, "c.PyMapping_HasKeyString", "o"]], "PyMapping_Items": [[40, 3, 1, "c.PyMapping_Items", "o"]], "PyMapping_Keys": [[40, 3, 1, "c.PyMapping_Keys", "o"]], "PyMapping_Length": [[40, 3, 1, "c.PyMapping_Length", "o"]], "PyMapping_SetItemString": [[40, 3, 1, "c.PyMapping_SetItemString", "key"], [40, 3, 1, "c.PyMapping_SetItemString", "o"], [40, 3, 1, "c.PyMapping_SetItemString", "v"]], "PyMapping_Size": [[40, 3, 1, "c.PyMapping_Size", "o"]], "PyMapping_Values": [[40, 3, 1, "c.PyMapping_Values", "o"]], "PyMarshal_ReadLastObjectFromFile": [[41, 3, 1, "c.PyMarshal_ReadLastObjectFromFile", "file"]], "PyMarshal_ReadLongFromFile": [[41, 3, 1, "c.PyMarshal_ReadLongFromFile", "file"]], "PyMarshal_ReadObjectFromFile": [[41, 3, 1, "c.PyMarshal_ReadObjectFromFile", "file"]], "PyMarshal_ReadObjectFromString": [[41, 3, 1, "c.PyMarshal_ReadObjectFromString", "data"], [41, 3, 1, "c.PyMarshal_ReadObjectFromString", "len"]], "PyMarshal_ReadShortFromFile": [[41, 3, 1, "c.PyMarshal_ReadShortFromFile", "file"]], "PyMarshal_WriteLongToFile": [[41, 3, 1, "c.PyMarshal_WriteLongToFile", "file"], [41, 3, 1, "c.PyMarshal_WriteLongToFile", "value"], [41, 3, 1, "c.PyMarshal_WriteLongToFile", "version"]], "PyMarshal_WriteObjectToFile": [[41, 3, 1, "c.PyMarshal_WriteObjectToFile", "file"], [41, 3, 1, "c.PyMarshal_WriteObjectToFile", "value"], [41, 3, 1, "c.PyMarshal_WriteObjectToFile", "version"]], "PyMarshal_WriteObjectToString": [[41, 3, 1, "c.PyMarshal_WriteObjectToString", "value"], [41, 3, 1, "c.PyMarshal_WriteObjectToString", "version"]], "PyMem_Calloc": [[42, 3, 1, "c.PyMem_Calloc", "elsize"], [42, 3, 1, "c.PyMem_Calloc", "nelem"]], "PyMem_Del": [[42, 3, 1, "c.PyMem_Del", "p"]], "PyMem_Free": [[42, 3, 1, "c.PyMem_Free", "p"]], "PyMem_GetAllocator": [[42, 3, 1, "c.PyMem_GetAllocator", "allocator"], [42, 3, 1, "c.PyMem_GetAllocator", "domain"]], "PyMem_Malloc": [[42, 3, 1, "c.PyMem_Malloc", "n"]], "PyMem_RawCalloc": [[42, 3, 1, "c.PyMem_RawCalloc", "elsize"], [42, 3, 1, "c.PyMem_RawCalloc", "nelem"]], "PyMem_RawFree": [[42, 3, 1, "c.PyMem_RawFree", "p"]], "PyMem_RawMalloc": [[42, 3, 1, "c.PyMem_RawMalloc", "n"]], "PyMem_RawRealloc": [[42, 3, 1, "c.PyMem_RawRealloc", "n"], [42, 3, 1, "c.PyMem_RawRealloc", "p"]], "PyMem_Realloc": [[42, 3, 1, "c.PyMem_Realloc", "n"], [42, 3, 1, "c.PyMem_Realloc", "p"]], "PyMem_SetAllocator": [[42, 3, 1, "c.PyMem_SetAllocator", "allocator"], [42, 3, 1, "c.PyMem_SetAllocator", "domain"]], "PyMember_GetOne": [[57, 3, 1, "c.PyMember_GetOne", "m"], [57, 3, 1, "c.PyMember_GetOne", "obj_addr"]], "PyMember_SetOne": [[57, 3, 1, "c.PyMember_SetOne", "m"], [57, 3, 1, "c.PyMember_SetOne", "o"], [57, 3, 1, "c.PyMember_SetOne", "obj_addr"]], "PyMemoryView_Check": [[43, 3, 1, "c.PyMemoryView_Check", "obj"]], "PyMemoryView_FromBuffer": [[43, 3, 1, "c.PyMemoryView_FromBuffer", "view"]], "PyMemoryView_FromMemory": [[43, 3, 1, "c.PyMemoryView_FromMemory", "flags"], [43, 3, 1, "c.PyMemoryView_FromMemory", "mem"], [43, 3, 1, "c.PyMemoryView_FromMemory", "size"]], "PyMemoryView_FromObject": [[43, 3, 1, "c.PyMemoryView_FromObject", "obj"]], "PyMemoryView_GET_BASE": [[43, 3, 1, "c.PyMemoryView_GET_BASE", "mview"]], "PyMemoryView_GET_BUFFER": [[43, 3, 1, "c.PyMemoryView_GET_BUFFER", "mview"]], "PyMemoryView_GetContiguous": [[43, 3, 1, "c.PyMemoryView_GetContiguous", "buffertype"], [43, 3, 1, "c.PyMemoryView_GetContiguous", "obj"], [43, 3, 1, "c.PyMemoryView_GetContiguous", "order"]], "PyMethodDef": [[57, 0, 1, "c.PyMethodDef.ml_doc", "ml_doc"], [57, 0, 1, "c.PyMethodDef.ml_flags", "ml_flags"], [57, 0, 1, "c.PyMethodDef.ml_meth", "ml_meth"], [57, 0, 1, "c.PyMethodDef.ml_name", "ml_name"]], "PyMethod_Check": [[44, 3, 1, "c.PyMethod_Check", "o"]], "PyMethod_Function": [[44, 3, 1, "c.PyMethod_Function", "meth"]], "PyMethod_GET_FUNCTION": [[44, 3, 1, "c.PyMethod_GET_FUNCTION", "meth"]], "PyMethod_GET_SELF": [[44, 3, 1, "c.PyMethod_GET_SELF", "meth"]], "PyMethod_New": [[44, 3, 1, "c.PyMethod_New", "func"], [44, 3, 1, "c.PyMethod_New", "self"]], "PyMethod_Self": [[44, 3, 1, "c.PyMethod_Self", "meth"]], "PyModuleDef": [[45, 0, 1, "c.PyModuleDef.m_base", "m_base"], [45, 0, 1, "c.PyModuleDef.m_clear", "m_clear"], [45, 0, 1, "c.PyModuleDef.m_doc", "m_doc"], [45, 0, 1, "c.PyModuleDef.m_free", "m_free"], [45, 0, 1, "c.PyModuleDef.m_methods", "m_methods"], [45, 0, 1, "c.PyModuleDef.m_name", "m_name"], [45, 0, 1, "c.PyModuleDef.m_size", "m_size"], [45, 0, 1, "c.PyModuleDef.m_slots", "m_slots"], [45, 0, 1, "c.PyModuleDef.m_traverse", "m_traverse"]], "PyModuleDef.m_slots": [[45, 0, 1, "c.PyModuleDef.m_slots.m_reload", "m_reload"]], "PyModuleDef_Init": [[45, 3, 1, "c.PyModuleDef_Init", "def"]], "PyModuleDef_Slot": [[45, 0, 1, "c.PyModuleDef_Slot.slot", "slot"], [45, 0, 1, "c.PyModuleDef_Slot.value", "value"]], "PyModule_AddFunctions": [[45, 3, 1, "c.PyModule_AddFunctions", "functions"], [45, 3, 1, "c.PyModule_AddFunctions", "module"]], "PyModule_AddIntConstant": [[45, 3, 1, "c.PyModule_AddIntConstant", "module"], [45, 3, 1, "c.PyModule_AddIntConstant", "name"], [45, 3, 1, "c.PyModule_AddIntConstant", "value"]], "PyModule_AddObject": [[45, 3, 1, "c.PyModule_AddObject", "module"], [45, 3, 1, "c.PyModule_AddObject", "name"], [45, 3, 1, "c.PyModule_AddObject", "value"]], "PyModule_AddObjectRef": [[45, 3, 1, "c.PyModule_AddObjectRef", "module"], [45, 3, 1, "c.PyModule_AddObjectRef", "name"], [45, 3, 1, "c.PyModule_AddObjectRef", "value"]], "PyModule_AddStringConstant": [[45, 3, 1, "c.PyModule_AddStringConstant", "module"], [45, 3, 1, "c.PyModule_AddStringConstant", "name"], [45, 3, 1, "c.PyModule_AddStringConstant", "value"]], "PyModule_AddType": [[45, 3, 1, "c.PyModule_AddType", "module"], [45, 3, 1, "c.PyModule_AddType", "type"]], "PyModule_Check": [[45, 3, 1, "c.PyModule_Check", "p"]], "PyModule_CheckExact": [[45, 3, 1, "c.PyModule_CheckExact", "p"]], "PyModule_Create": [[45, 3, 1, "c.PyModule_Create", "def"]], "PyModule_Create2": [[45, 3, 1, "c.PyModule_Create2", "def"], [45, 3, 1, "c.PyModule_Create2", "module_api_version"]], "PyModule_ExecDef": [[45, 3, 1, "c.PyModule_ExecDef", "def"], [45, 3, 1, "c.PyModule_ExecDef", "module"]], "PyModule_FromDefAndSpec": [[45, 3, 1, "c.PyModule_FromDefAndSpec", "def"], [45, 3, 1, "c.PyModule_FromDefAndSpec", "spec"]], "PyModule_FromDefAndSpec2": [[45, 3, 1, "c.PyModule_FromDefAndSpec2", "def"], [45, 3, 1, "c.PyModule_FromDefAndSpec2", "module_api_version"], [45, 3, 1, "c.PyModule_FromDefAndSpec2", "spec"]], "PyModule_GetDef": [[45, 3, 1, "c.PyModule_GetDef", "module"]], "PyModule_GetDict": [[45, 3, 1, "c.PyModule_GetDict", "module"]], "PyModule_GetFilename": [[45, 3, 1, "c.PyModule_GetFilename", "module"]], "PyModule_GetFilenameObject": [[45, 3, 1, "c.PyModule_GetFilenameObject", "module"]], "PyModule_GetName": [[45, 3, 1, "c.PyModule_GetName", "module"]], "PyModule_GetNameObject": [[45, 3, 1, "c.PyModule_GetNameObject", "module"]], "PyModule_GetState": [[45, 3, 1, "c.PyModule_GetState", "module"]], "PyModule_New": [[45, 3, 1, "c.PyModule_New", "name"]], "PyModule_NewObject": [[45, 3, 1, "c.PyModule_NewObject", "name"]], "PyModule_SetDocString": [[45, 3, 1, "c.PyModule_SetDocString", "docstring"], [45, 3, 1, "c.PyModule_SetDocString", "module"]], "PyNumberMethods": [[62, 0, 1, "c.PyNumberMethods.nb_absolute", "nb_absolute"], [62, 0, 1, "c.PyNumberMethods.nb_add", "nb_add"], [62, 0, 1, "c.PyNumberMethods.nb_and", "nb_and"], [62, 0, 1, "c.PyNumberMethods.nb_bool", "nb_bool"], [62, 0, 1, "c.PyNumberMethods.nb_divmod", "nb_divmod"], [62, 0, 1, "c.PyNumberMethods.nb_float", "nb_float"], [62, 0, 1, "c.PyNumberMethods.nb_floor_divide", "nb_floor_divide"], [62, 0, 1, "c.PyNumberMethods.nb_index", "nb_index"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_add", "nb_inplace_add"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_and", "nb_inplace_and"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_floor_divide", "nb_inplace_floor_divide"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_lshift", "nb_inplace_lshift"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_matrix_multiply", "nb_inplace_matrix_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_multiply", "nb_inplace_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_or", "nb_inplace_or"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_power", "nb_inplace_power"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_remainder", "nb_inplace_remainder"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_rshift", "nb_inplace_rshift"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_subtract", "nb_inplace_subtract"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_true_divide", "nb_inplace_true_divide"], [62, 0, 1, "c.PyNumberMethods.nb_inplace_xor", "nb_inplace_xor"], [62, 0, 1, "c.PyNumberMethods.nb_int", "nb_int"], [62, 0, 1, "c.PyNumberMethods.nb_invert", "nb_invert"], [62, 0, 1, "c.PyNumberMethods.nb_lshift", "nb_lshift"], [62, 0, 1, "c.PyNumberMethods.nb_matrix_multiply", "nb_matrix_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_multiply", "nb_multiply"], [62, 0, 1, "c.PyNumberMethods.nb_negative", "nb_negative"], [62, 0, 1, "c.PyNumberMethods.nb_or", "nb_or"], [62, 0, 1, "c.PyNumberMethods.nb_positive", "nb_positive"], [62, 0, 1, "c.PyNumberMethods.nb_power", "nb_power"], [62, 0, 1, "c.PyNumberMethods.nb_remainder", "nb_remainder"], [62, 0, 1, "c.PyNumberMethods.nb_reserved", "nb_reserved"], [62, 0, 1, "c.PyNumberMethods.nb_rshift", "nb_rshift"], [62, 0, 1, "c.PyNumberMethods.nb_subtract", "nb_subtract"], [62, 0, 1, "c.PyNumberMethods.nb_true_divide", "nb_true_divide"], [62, 0, 1, "c.PyNumberMethods.nb_xor", "nb_xor"]], "PyNumber_Absolute": [[47, 3, 1, "c.PyNumber_Absolute", "o"]], "PyNumber_Add": [[47, 3, 1, "c.PyNumber_Add", "o1"], [47, 3, 1, "c.PyNumber_Add", "o2"]], "PyNumber_And": [[47, 3, 1, "c.PyNumber_And", "o1"], [47, 3, 1, "c.PyNumber_And", "o2"]], "PyNumber_AsSsize_t": [[47, 3, 1, "c.PyNumber_AsSsize_t", "exc"], [47, 3, 1, "c.PyNumber_AsSsize_t", "o"]], "PyNumber_Check": [[47, 3, 1, "c.PyNumber_Check", "o"]], "PyNumber_Divmod": [[47, 3, 1, "c.PyNumber_Divmod", "o1"], [47, 3, 1, "c.PyNumber_Divmod", "o2"]], "PyNumber_Float": [[47, 3, 1, "c.PyNumber_Float", "o"]], "PyNumber_FloorDivide": [[47, 3, 1, "c.PyNumber_FloorDivide", "o1"], [47, 3, 1, "c.PyNumber_FloorDivide", "o2"]], "PyNumber_InPlaceAdd": [[47, 3, 1, "c.PyNumber_InPlaceAdd", "o1"], [47, 3, 1, "c.PyNumber_InPlaceAdd", "o2"]], "PyNumber_InPlaceAnd": [[47, 3, 1, "c.PyNumber_InPlaceAnd", "o1"], [47, 3, 1, "c.PyNumber_InPlaceAnd", "o2"]], "PyNumber_InPlaceFloorDivide": [[47, 3, 1, "c.PyNumber_InPlaceFloorDivide", "o1"], [47, 3, 1, "c.PyNumber_InPlaceFloorDivide", "o2"]], "PyNumber_InPlaceLshift": [[47, 3, 1, "c.PyNumber_InPlaceLshift", "o1"], [47, 3, 1, "c.PyNumber_InPlaceLshift", "o2"]], "PyNumber_InPlaceMatrixMultiply": [[47, 3, 1, "c.PyNumber_InPlaceMatrixMultiply", "o1"], [47, 3, 1, "c.PyNumber_InPlaceMatrixMultiply", "o2"]], "PyNumber_InPlaceMultiply": [[47, 3, 1, "c.PyNumber_InPlaceMultiply", "o1"], [47, 3, 1, "c.PyNumber_InPlaceMultiply", "o2"]], "PyNumber_InPlaceOr": [[47, 3, 1, "c.PyNumber_InPlaceOr", "o1"], [47, 3, 1, "c.PyNumber_InPlaceOr", "o2"]], "PyNumber_InPlacePower": [[47, 3, 1, "c.PyNumber_InPlacePower", "o1"], [47, 3, 1, "c.PyNumber_InPlacePower", "o2"], [47, 3, 1, "c.PyNumber_InPlacePower", "o3"]], "PyNumber_InPlaceRemainder": [[47, 3, 1, "c.PyNumber_InPlaceRemainder", "o1"], [47, 3, 1, "c.PyNumber_InPlaceRemainder", "o2"]], "PyNumber_InPlaceRshift": [[47, 3, 1, "c.PyNumber_InPlaceRshift", "o1"], [47, 3, 1, "c.PyNumber_InPlaceRshift", "o2"]], "PyNumber_InPlaceSubtract": [[47, 3, 1, "c.PyNumber_InPlaceSubtract", "o1"], [47, 3, 1, "c.PyNumber_InPlaceSubtract", "o2"]], "PyNumber_InPlaceTrueDivide": [[47, 3, 1, "c.PyNumber_InPlaceTrueDivide", "o1"], [47, 3, 1, "c.PyNumber_InPlaceTrueDivide", "o2"]], "PyNumber_InPlaceXor": [[47, 3, 1, "c.PyNumber_InPlaceXor", "o1"], [47, 3, 1, "c.PyNumber_InPlaceXor", "o2"]], "PyNumber_Index": [[47, 3, 1, "c.PyNumber_Index", "o"]], "PyNumber_Invert": [[47, 3, 1, "c.PyNumber_Invert", "o"]], "PyNumber_Long": [[47, 3, 1, "c.PyNumber_Long", "o"]], "PyNumber_Lshift": [[47, 3, 1, "c.PyNumber_Lshift", "o1"], [47, 3, 1, "c.PyNumber_Lshift", "o2"]], "PyNumber_MatrixMultiply": [[47, 3, 1, "c.PyNumber_MatrixMultiply", "o1"], [47, 3, 1, "c.PyNumber_MatrixMultiply", "o2"]], "PyNumber_Multiply": [[47, 3, 1, "c.PyNumber_Multiply", "o1"], [47, 3, 1, "c.PyNumber_Multiply", "o2"]], "PyNumber_Negative": [[47, 3, 1, "c.PyNumber_Negative", "o"]], "PyNumber_Or": [[47, 3, 1, "c.PyNumber_Or", "o1"], [47, 3, 1, "c.PyNumber_Or", "o2"]], "PyNumber_Positive": [[47, 3, 1, "c.PyNumber_Positive", "o"]], "PyNumber_Power": [[47, 3, 1, "c.PyNumber_Power", "o1"], [47, 3, 1, "c.PyNumber_Power", "o2"], [47, 3, 1, "c.PyNumber_Power", "o3"]], "PyNumber_Remainder": [[47, 3, 1, "c.PyNumber_Remainder", "o1"], [47, 3, 1, "c.PyNumber_Remainder", "o2"]], "PyNumber_Rshift": [[47, 3, 1, "c.PyNumber_Rshift", "o1"], [47, 3, 1, "c.PyNumber_Rshift", "o2"]], "PyNumber_Subtract": [[47, 3, 1, "c.PyNumber_Subtract", "o1"], [47, 3, 1, "c.PyNumber_Subtract", "o2"]], "PyNumber_ToBase": [[47, 3, 1, "c.PyNumber_ToBase", "base"], [47, 3, 1, "c.PyNumber_ToBase", "n"]], "PyNumber_TrueDivide": [[47, 3, 1, "c.PyNumber_TrueDivide", "o1"], [47, 3, 1, "c.PyNumber_TrueDivide", "o2"]], "PyNumber_Xor": [[47, 3, 1, "c.PyNumber_Xor", "o1"], [47, 3, 1, "c.PyNumber_Xor", "o2"]], "PyOS_FSPath": [[58, 3, 1, "c.PyOS_FSPath", "path"]], "PyOS_double_to_string": [[18, 3, 1, "c.PyOS_double_to_string", "flags"], [18, 3, 1, "c.PyOS_double_to_string", "format_code"], [18, 3, 1, "c.PyOS_double_to_string", "precision"], [18, 3, 1, "c.PyOS_double_to_string", "ptype"], [18, 3, 1, "c.PyOS_double_to_string", "val"]], "PyOS_getsig": [[58, 3, 1, "c.PyOS_getsig", "i"]], "PyOS_setsig": [[58, 3, 1, "c.PyOS_setsig", "h"], [58, 3, 1, "c.PyOS_setsig", "i"]], "PyOS_snprintf": [[18, 3, 1, "c.PyOS_snprintf", "format"], [18, 3, 1, "c.PyOS_snprintf", "size"], [18, 3, 1, "c.PyOS_snprintf", "str"]], "PyOS_stricmp": [[18, 3, 1, "c.PyOS_stricmp", "s1"], [18, 3, 1, "c.PyOS_stricmp", "s2"]], "PyOS_string_to_double": [[18, 3, 1, "c.PyOS_string_to_double", "endptr"], [18, 3, 1, "c.PyOS_string_to_double", "overflow_exception"], [18, 3, 1, "c.PyOS_string_to_double", "s"]], "PyOS_strnicmp": [[18, 3, 1, "c.PyOS_strnicmp", "s1"], [18, 3, 1, "c.PyOS_strnicmp", "s2"], [18, 3, 1, "c.PyOS_strnicmp", "size"]], "PyOS_strtol": [[18, 3, 1, "c.PyOS_strtol", "base"], [18, 3, 1, "c.PyOS_strtol", "ptr"], [18, 3, 1, "c.PyOS_strtol", "str"]], "PyOS_strtoul": [[18, 3, 1, "c.PyOS_strtoul", "base"], [18, 3, 1, "c.PyOS_strtoul", "ptr"], [18, 3, 1, "c.PyOS_strtoul", "str"]], "PyOS_vsnprintf": [[18, 3, 1, "c.PyOS_vsnprintf", "format"], [18, 3, 1, "c.PyOS_vsnprintf", "size"], [18, 3, 1, "c.PyOS_vsnprintf", "str"], [18, 3, 1, "c.PyOS_vsnprintf", "va"]], "PyObject": [[62, 0, 1, "c.PyObject._ob_next", "_ob_next"], [62, 0, 1, "c.PyObject._ob_prev", "_ob_prev"], [62, 0, 1, "c.PyObject.ob_refcnt", "ob_refcnt"], [62, 0, 1, "c.PyObject.ob_type", "ob_type"]], "PyObject_ASCII": [[49, 3, 1, "c.PyObject_ASCII", "o"]], "PyObject_AsCharBuffer": [[48, 3, 1, "c.PyObject_AsCharBuffer", "buffer"], [48, 3, 1, "c.PyObject_AsCharBuffer", "buffer_len"], [48, 3, 1, "c.PyObject_AsCharBuffer", "obj"]], "PyObject_AsFileDescriptor": [[24, 3, 1, "c.PyObject_AsFileDescriptor", "p"]], "PyObject_AsReadBuffer": [[48, 3, 1, "c.PyObject_AsReadBuffer", "buffer"], [48, 3, 1, "c.PyObject_AsReadBuffer", "buffer_len"], [48, 3, 1, "c.PyObject_AsReadBuffer", "obj"]], "PyObject_AsWriteBuffer": [[48, 3, 1, "c.PyObject_AsWriteBuffer", "buffer"], [48, 3, 1, "c.PyObject_AsWriteBuffer", "buffer_len"], [48, 3, 1, "c.PyObject_AsWriteBuffer", "obj"]], "PyObject_Bytes": [[49, 3, 1, "c.PyObject_Bytes", "o"]], "PyObject_Call": [[10, 3, 1, "c.PyObject_Call", "args"], [10, 3, 1, "c.PyObject_Call", "callable"], [10, 3, 1, "c.PyObject_Call", "kwargs"]], "PyObject_CallFunction": [[10, 3, 1, "c.PyObject_CallFunction", "callable"], [10, 3, 1, "c.PyObject_CallFunction", "format"]], "PyObject_CallFunctionObjArgs": [[10, 3, 1, "c.PyObject_CallFunctionObjArgs", "callable"]], "PyObject_CallMethod": [[10, 3, 1, "c.PyObject_CallMethod", "format"], [10, 3, 1, "c.PyObject_CallMethod", "name"], [10, 3, 1, "c.PyObject_CallMethod", "obj"]], "PyObject_CallMethodNoArgs": [[10, 3, 1, "c.PyObject_CallMethodNoArgs", "name"], [10, 3, 1, "c.PyObject_CallMethodNoArgs", "obj"]], "PyObject_CallMethodObjArgs": [[10, 3, 1, "c.PyObject_CallMethodObjArgs", "name"], [10, 3, 1, "c.PyObject_CallMethodObjArgs", "obj"]], "PyObject_CallMethodOneArg": [[10, 3, 1, "c.PyObject_CallMethodOneArg", "arg"], [10, 3, 1, "c.PyObject_CallMethodOneArg", "name"], [10, 3, 1, "c.PyObject_CallMethodOneArg", "obj"]], "PyObject_CallNoArgs": [[10, 3, 1, "c.PyObject_CallNoArgs", "callable"]], "PyObject_CallObject": [[10, 3, 1, "c.PyObject_CallObject", "args"], [10, 3, 1, "c.PyObject_CallObject", "callable"]], "PyObject_CallOneArg": [[10, 3, 1, "c.PyObject_CallOneArg", "arg"], [10, 3, 1, "c.PyObject_CallOneArg", "callable"]], "PyObject_Calloc": [[42, 3, 1, "c.PyObject_Calloc", "elsize"], [42, 3, 1, "c.PyObject_Calloc", "nelem"]], "PyObject_CheckBuffer": [[7, 3, 1, "c.PyObject_CheckBuffer", "obj"]], "PyObject_CheckReadBuffer": [[48, 3, 1, "c.PyObject_CheckReadBuffer", "o"]], "PyObject_ClearWeakRefs": [[66, 3, 1, "c.PyObject_ClearWeakRefs", "object"]], "PyObject_CopyData": [[7, 3, 1, "c.PyObject_CopyData", "dest"], [7, 3, 1, "c.PyObject_CopyData", "src"]], "PyObject_Del": [[3, 3, 1, "c.PyObject_Del", "op"]], "PyObject_DelAttr": [[49, 3, 1, "c.PyObject_DelAttr", "attr_name"], [49, 3, 1, "c.PyObject_DelAttr", "o"]], "PyObject_DelAttrString": [[49, 3, 1, "c.PyObject_DelAttrString", "attr_name"], [49, 3, 1, "c.PyObject_DelAttrString", "o"]], "PyObject_DelItem": [[49, 3, 1, "c.PyObject_DelItem", "key"], [49, 3, 1, "c.PyObject_DelItem", "o"]], "PyObject_Dir": [[49, 3, 1, "c.PyObject_Dir", "o"]], "PyObject_Format": [[49, 3, 1, "c.PyObject_Format", "format_spec"], [49, 3, 1, "c.PyObject_Format", "obj"]], "PyObject_Free": [[42, 3, 1, "c.PyObject_Free", "p"]], "PyObject_GC_Del": [[28, 3, 1, "c.PyObject_GC_Del", "op"]], "PyObject_GC_IsFinalized": [[28, 3, 1, "c.PyObject_GC_IsFinalized", "op"]], "PyObject_GC_IsTracked": [[28, 3, 1, "c.PyObject_GC_IsTracked", "op"]], "PyObject_GC_Track": [[28, 3, 1, "c.PyObject_GC_Track", "op"]], "PyObject_GC_UnTrack": [[28, 3, 1, "c.PyObject_GC_UnTrack", "op"]], "PyObject_GenericGetAttr": [[49, 3, 1, "c.PyObject_GenericGetAttr", "name"], [49, 3, 1, "c.PyObject_GenericGetAttr", "o"]], "PyObject_GenericGetDict": [[49, 3, 1, "c.PyObject_GenericGetDict", "context"], [49, 3, 1, "c.PyObject_GenericGetDict", "o"]], "PyObject_GenericSetAttr": [[49, 3, 1, "c.PyObject_GenericSetAttr", "name"], [49, 3, 1, "c.PyObject_GenericSetAttr", "o"], [49, 3, 1, "c.PyObject_GenericSetAttr", "value"]], "PyObject_GenericSetDict": [[49, 3, 1, "c.PyObject_GenericSetDict", "context"], [49, 3, 1, "c.PyObject_GenericSetDict", "o"], [49, 3, 1, "c.PyObject_GenericSetDict", "value"]], "PyObject_GetAIter": [[49, 3, 1, "c.PyObject_GetAIter", "o"]], "PyObject_GetArenaAllocator": [[42, 3, 1, "c.PyObject_GetArenaAllocator", "allocator"]], "PyObject_GetAttr": [[49, 3, 1, "c.PyObject_GetAttr", "attr_name"], [49, 3, 1, "c.PyObject_GetAttr", "o"]], "PyObject_GetAttrString": [[49, 3, 1, "c.PyObject_GetAttrString", "attr_name"], [49, 3, 1, "c.PyObject_GetAttrString", "o"]], "PyObject_GetBuffer": [[7, 3, 1, "c.PyObject_GetBuffer", "exporter"], [7, 3, 1, "c.PyObject_GetBuffer", "flags"], [7, 3, 1, "c.PyObject_GetBuffer", "view"]], "PyObject_GetItem": [[49, 3, 1, "c.PyObject_GetItem", "key"], [49, 3, 1, "c.PyObject_GetItem", "o"]], "PyObject_GetIter": [[49, 3, 1, "c.PyObject_GetIter", "o"]], "PyObject_HasAttr": [[49, 3, 1, "c.PyObject_HasAttr", "attr_name"], [49, 3, 1, "c.PyObject_HasAttr", "o"]], "PyObject_HasAttrString": [[49, 3, 1, "c.PyObject_HasAttrString", "attr_name"], [49, 3, 1, "c.PyObject_HasAttrString", "o"]], "PyObject_Hash": [[49, 3, 1, "c.PyObject_Hash", "o"]], "PyObject_HashNotImplemented": [[49, 3, 1, "c.PyObject_HashNotImplemented", "o"]], "PyObject_IS_GC": [[28, 3, 1, "c.PyObject_IS_GC", "obj"]], "PyObject_Init": [[3, 3, 1, "c.PyObject_Init", "op"], [3, 3, 1, "c.PyObject_Init", "type"]], "PyObject_InitVar": [[3, 3, 1, "c.PyObject_InitVar", "op"], [3, 3, 1, "c.PyObject_InitVar", "size"], [3, 3, 1, "c.PyObject_InitVar", "type"]], "PyObject_IsInstance": [[49, 3, 1, "c.PyObject_IsInstance", "cls"], [49, 3, 1, "c.PyObject_IsInstance", "inst"]], "PyObject_IsSubclass": [[49, 3, 1, "c.PyObject_IsSubclass", "cls"], [49, 3, 1, "c.PyObject_IsSubclass", "derived"]], "PyObject_IsTrue": [[49, 3, 1, "c.PyObject_IsTrue", "o"]], "PyObject_Length": [[49, 3, 1, "c.PyObject_Length", "o"]], "PyObject_LengthHint": [[49, 3, 1, "c.PyObject_LengthHint", "defaultvalue"], [49, 3, 1, "c.PyObject_LengthHint", "o"]], "PyObject_Malloc": [[42, 3, 1, "c.PyObject_Malloc", "n"]], "PyObject_Not": [[49, 3, 1, "c.PyObject_Not", "o"]], "PyObject_Print": [[49, 3, 1, "c.PyObject_Print", "flags"], [49, 3, 1, "c.PyObject_Print", "fp"], [49, 3, 1, "c.PyObject_Print", "o"]], "PyObject_Realloc": [[42, 3, 1, "c.PyObject_Realloc", "n"], [42, 3, 1, "c.PyObject_Realloc", "p"]], "PyObject_Repr": [[49, 3, 1, "c.PyObject_Repr", "o"]], "PyObject_RichCompare": [[49, 3, 1, "c.PyObject_RichCompare", "o1"], [49, 3, 1, "c.PyObject_RichCompare", "o2"], [49, 3, 1, "c.PyObject_RichCompare", "opid"]], "PyObject_RichCompareBool": [[49, 3, 1, "c.PyObject_RichCompareBool", "o1"], [49, 3, 1, "c.PyObject_RichCompareBool", "o2"], [49, 3, 1, "c.PyObject_RichCompareBool", "opid"]], "PyObject_SetArenaAllocator": [[42, 3, 1, "c.PyObject_SetArenaAllocator", "allocator"]], "PyObject_SetAttr": [[49, 3, 1, "c.PyObject_SetAttr", "attr_name"], [49, 3, 1, "c.PyObject_SetAttr", "o"], [49, 3, 1, "c.PyObject_SetAttr", "v"]], "PyObject_SetAttrString": [[49, 3, 1, "c.PyObject_SetAttrString", "attr_name"], [49, 3, 1, "c.PyObject_SetAttrString", "o"], [49, 3, 1, "c.PyObject_SetAttrString", "v"]], "PyObject_SetItem": [[49, 3, 1, "c.PyObject_SetItem", "key"], [49, 3, 1, "c.PyObject_SetItem", "o"], [49, 3, 1, "c.PyObject_SetItem", "v"]], "PyObject_Size": [[49, 3, 1, "c.PyObject_Size", "o"]], "PyObject_Str": [[49, 3, 1, "c.PyObject_Str", "o"]], "PyObject_Type": [[49, 3, 1, "c.PyObject_Type", "o"]], "PyObject_TypeCheck": [[49, 3, 1, "c.PyObject_TypeCheck", "o"], [49, 3, 1, "c.PyObject_TypeCheck", "type"]], "PyObject_Vectorcall": [[10, 3, 1, "c.PyObject_Vectorcall", "args"], [10, 3, 1, "c.PyObject_Vectorcall", "callable"], [10, 3, 1, "c.PyObject_Vectorcall", "kwnames"], [10, 3, 1, "c.PyObject_Vectorcall", "nargsf"]], "PyObject_VectorcallDict": [[10, 3, 1, "c.PyObject_VectorcallDict", "args"], [10, 3, 1, "c.PyObject_VectorcallDict", "callable"], [10, 3, 1, "c.PyObject_VectorcallDict", "kwdict"], [10, 3, 1, "c.PyObject_VectorcallDict", "nargsf"]], "PyObject_VectorcallMethod": [[10, 3, 1, "c.PyObject_VectorcallMethod", "args"], [10, 3, 1, "c.PyObject_VectorcallMethod", "kwnames"], [10, 3, 1, "c.PyObject_VectorcallMethod", "name"], [10, 3, 1, "c.PyObject_VectorcallMethod", "nargsf"]], "PyPreConfig": [[34, 0, 1, "c.PyPreConfig.allocator", "allocator"], [34, 0, 1, "c.PyPreConfig.coerce_c_locale", "coerce_c_locale"], [34, 0, 1, "c.PyPreConfig.coerce_c_locale_warn", "coerce_c_locale_warn"], [34, 0, 1, "c.PyPreConfig.configure_locale", "configure_locale"], [34, 0, 1, "c.PyPreConfig.dev_mode", "dev_mode"], [34, 0, 1, "c.PyPreConfig.isolated", "isolated"], [34, 0, 1, "c.PyPreConfig.legacy_windows_fs_encoding", "legacy_windows_fs_encoding"], [34, 0, 1, "c.PyPreConfig.parse_argv", "parse_argv"], [34, 0, 1, "c.PyPreConfig.use_environment", "use_environment"], [34, 0, 1, "c.PyPreConfig.utf8_mode", "utf8_mode"]], "PyPreConfig_InitIsolatedConfig": [[34, 3, 1, "c.PyPreConfig_InitIsolatedConfig", "preconfig"]], "PyPreConfig_InitPythonConfig": [[34, 3, 1, "c.PyPreConfig_InitPythonConfig", "preconfig"]], "PyRun_AnyFile": [[65, 3, 1, "c.PyRun_AnyFile", "filename"], [65, 3, 1, "c.PyRun_AnyFile", "fp"]], "PyRun_AnyFileEx": [[65, 3, 1, "c.PyRun_AnyFileEx", "closeit"], [65, 3, 1, "c.PyRun_AnyFileEx", "filename"], [65, 3, 1, "c.PyRun_AnyFileEx", "fp"]], "PyRun_AnyFileExFlags": [[65, 3, 1, "c.PyRun_AnyFileExFlags", "closeit"], [65, 3, 1, "c.PyRun_AnyFileExFlags", "filename"], [65, 3, 1, "c.PyRun_AnyFileExFlags", "flags"], [65, 3, 1, "c.PyRun_AnyFileExFlags", "fp"]], "PyRun_AnyFileFlags": [[65, 3, 1, "c.PyRun_AnyFileFlags", "filename"], [65, 3, 1, "c.PyRun_AnyFileFlags", "flags"], [65, 3, 1, "c.PyRun_AnyFileFlags", "fp"]], "PyRun_File": [[65, 3, 1, "c.PyRun_File", "filename"], [65, 3, 1, "c.PyRun_File", "fp"], [65, 3, 1, "c.PyRun_File", "globals"], [65, 3, 1, "c.PyRun_File", "locals"], [65, 3, 1, "c.PyRun_File", "start"]], "PyRun_FileEx": [[65, 3, 1, "c.PyRun_FileEx", "closeit"], [65, 3, 1, "c.PyRun_FileEx", "filename"], [65, 3, 1, "c.PyRun_FileEx", "fp"], [65, 3, 1, "c.PyRun_FileEx", "globals"], [65, 3, 1, "c.PyRun_FileEx", "locals"], [65, 3, 1, "c.PyRun_FileEx", "start"]], "PyRun_FileExFlags": [[65, 3, 1, "c.PyRun_FileExFlags", "closeit"], [65, 3, 1, "c.PyRun_FileExFlags", "filename"], [65, 3, 1, "c.PyRun_FileExFlags", "flags"], [65, 3, 1, "c.PyRun_FileExFlags", "fp"], [65, 3, 1, "c.PyRun_FileExFlags", "globals"], [65, 3, 1, "c.PyRun_FileExFlags", "locals"], [65, 3, 1, "c.PyRun_FileExFlags", "start"]], "PyRun_FileFlags": [[65, 3, 1, "c.PyRun_FileFlags", "filename"], [65, 3, 1, "c.PyRun_FileFlags", "flags"], [65, 3, 1, "c.PyRun_FileFlags", "fp"], [65, 3, 1, "c.PyRun_FileFlags", "globals"], [65, 3, 1, "c.PyRun_FileFlags", "locals"], [65, 3, 1, "c.PyRun_FileFlags", "start"]], "PyRun_InteractiveLoop": [[65, 3, 1, "c.PyRun_InteractiveLoop", "filename"], [65, 3, 1, "c.PyRun_InteractiveLoop", "fp"]], "PyRun_InteractiveLoopFlags": [[65, 3, 1, "c.PyRun_InteractiveLoopFlags", "filename"], [65, 3, 1, "c.PyRun_InteractiveLoopFlags", "flags"], [65, 3, 1, "c.PyRun_InteractiveLoopFlags", "fp"]], "PyRun_InteractiveOne": [[65, 3, 1, "c.PyRun_InteractiveOne", "filename"], [65, 3, 1, "c.PyRun_InteractiveOne", "fp"]], "PyRun_InteractiveOneFlags": [[65, 3, 1, "c.PyRun_InteractiveOneFlags", "filename"], [65, 3, 1, "c.PyRun_InteractiveOneFlags", "flags"], [65, 3, 1, "c.PyRun_InteractiveOneFlags", "fp"]], "PyRun_SimpleFile": [[65, 3, 1, "c.PyRun_SimpleFile", "filename"], [65, 3, 1, "c.PyRun_SimpleFile", "fp"]], "PyRun_SimpleFileEx": [[65, 3, 1, "c.PyRun_SimpleFileEx", "closeit"], [65, 3, 1, "c.PyRun_SimpleFileEx", "filename"], [65, 3, 1, "c.PyRun_SimpleFileEx", "fp"]], "PyRun_SimpleFileExFlags": [[65, 3, 1, "c.PyRun_SimpleFileExFlags", "closeit"], [65, 3, 1, "c.PyRun_SimpleFileExFlags", "filename"], [65, 3, 1, "c.PyRun_SimpleFileExFlags", "flags"], [65, 3, 1, "c.PyRun_SimpleFileExFlags", "fp"]], "PyRun_SimpleString": [[65, 3, 1, "c.PyRun_SimpleString", "command"]], "PyRun_SimpleStringFlags": [[65, 3, 1, "c.PyRun_SimpleStringFlags", "command"], [65, 3, 1, "c.PyRun_SimpleStringFlags", "flags"]], "PyRun_String": [[65, 3, 1, "c.PyRun_String", "globals"], [65, 3, 1, "c.PyRun_String", "locals"], [65, 3, 1, "c.PyRun_String", "start"], [65, 3, 1, "c.PyRun_String", "str"]], "PyRun_StringFlags": [[65, 3, 1, "c.PyRun_StringFlags", "flags"], [65, 3, 1, "c.PyRun_StringFlags", "globals"], [65, 3, 1, "c.PyRun_StringFlags", "locals"], [65, 3, 1, "c.PyRun_StringFlags", "start"], [65, 3, 1, "c.PyRun_StringFlags", "str"]], "PySeqIter_Check": [[37, 3, 1, "c.PySeqIter_Check", "op"]], "PySeqIter_New": [[37, 3, 1, "c.PySeqIter_New", "seq"]], "PySequenceMethods": [[62, 0, 1, "c.PySequenceMethods.sq_ass_item", "sq_ass_item"], [62, 0, 1, "c.PySequenceMethods.sq_concat", "sq_concat"], [62, 0, 1, "c.PySequenceMethods.sq_contains", "sq_contains"], [62, 0, 1, "c.PySequenceMethods.sq_inplace_concat", "sq_inplace_concat"], [62, 0, 1, "c.PySequenceMethods.sq_inplace_repeat", "sq_inplace_repeat"], [62, 0, 1, "c.PySequenceMethods.sq_item", "sq_item"], [62, 0, 1, "c.PySequenceMethods.sq_length", "sq_length"], [62, 0, 1, "c.PySequenceMethods.sq_repeat", "sq_repeat"]], "PySequence_Check": [[53, 3, 1, "c.PySequence_Check", "o"]], "PySequence_Concat": [[53, 3, 1, "c.PySequence_Concat", "o1"], [53, 3, 1, "c.PySequence_Concat", "o2"]], "PySequence_Contains": [[53, 3, 1, "c.PySequence_Contains", "o"], [53, 3, 1, "c.PySequence_Contains", "value"]], "PySequence_Count": [[53, 3, 1, "c.PySequence_Count", "o"], [53, 3, 1, "c.PySequence_Count", "value"]], "PySequence_DelItem": [[53, 3, 1, "c.PySequence_DelItem", "i"], [53, 3, 1, "c.PySequence_DelItem", "o"]], "PySequence_DelSlice": [[53, 3, 1, "c.PySequence_DelSlice", "i1"], [53, 3, 1, "c.PySequence_DelSlice", "i2"], [53, 3, 1, "c.PySequence_DelSlice", "o"]], "PySequence_Fast": [[53, 3, 1, "c.PySequence_Fast", "m"], [53, 3, 1, "c.PySequence_Fast", "o"]], "PySequence_Fast_GET_ITEM": [[53, 3, 1, "c.PySequence_Fast_GET_ITEM", "i"], [53, 3, 1, "c.PySequence_Fast_GET_ITEM", "o"]], "PySequence_Fast_GET_SIZE": [[53, 3, 1, "c.PySequence_Fast_GET_SIZE", "o"]], "PySequence_Fast_ITEMS": [[53, 3, 1, "c.PySequence_Fast_ITEMS", "o"]], "PySequence_GetItem": [[53, 3, 1, "c.PySequence_GetItem", "i"], [53, 3, 1, "c.PySequence_GetItem", "o"]], "PySequence_GetSlice": [[53, 3, 1, "c.PySequence_GetSlice", "i1"], [53, 3, 1, "c.PySequence_GetSlice", "i2"], [53, 3, 1, "c.PySequence_GetSlice", "o"]], "PySequence_ITEM": [[53, 3, 1, "c.PySequence_ITEM", "i"], [53, 3, 1, "c.PySequence_ITEM", "o"]], "PySequence_InPlaceConcat": [[53, 3, 1, "c.PySequence_InPlaceConcat", "o1"], [53, 3, 1, "c.PySequence_InPlaceConcat", "o2"]], "PySequence_InPlaceRepeat": [[53, 3, 1, "c.PySequence_InPlaceRepeat", "count"], [53, 3, 1, "c.PySequence_InPlaceRepeat", "o"]], "PySequence_Index": [[53, 3, 1, "c.PySequence_Index", "o"], [53, 3, 1, "c.PySequence_Index", "value"]], "PySequence_Length": [[53, 3, 1, "c.PySequence_Length", "o"]], "PySequence_List": [[53, 3, 1, "c.PySequence_List", "o"]], "PySequence_Repeat": [[53, 3, 1, "c.PySequence_Repeat", "count"], [53, 3, 1, "c.PySequence_Repeat", "o"]], "PySequence_SetItem": [[53, 3, 1, "c.PySequence_SetItem", "i"], [53, 3, 1, "c.PySequence_SetItem", "o"], [53, 3, 1, "c.PySequence_SetItem", "v"]], "PySequence_SetSlice": [[53, 3, 1, "c.PySequence_SetSlice", "i1"], [53, 3, 1, "c.PySequence_SetSlice", "i2"], [53, 3, 1, "c.PySequence_SetSlice", "o"], [53, 3, 1, "c.PySequence_SetSlice", "v"]], "PySequence_Size": [[53, 3, 1, "c.PySequence_Size", "o"]], "PySequence_Tuple": [[53, 3, 1, "c.PySequence_Tuple", "o"]], "PySet_Add": [[54, 3, 1, "c.PySet_Add", "key"], [54, 3, 1, "c.PySet_Add", "set"]], "PySet_Check": [[54, 3, 1, "c.PySet_Check", "p"]], "PySet_CheckExact": [[54, 3, 1, "c.PySet_CheckExact", "p"]], "PySet_Clear": [[54, 3, 1, "c.PySet_Clear", "set"]], "PySet_Contains": [[54, 3, 1, "c.PySet_Contains", "anyset"], [54, 3, 1, "c.PySet_Contains", "key"]], "PySet_Discard": [[54, 3, 1, "c.PySet_Discard", "key"], [54, 3, 1, "c.PySet_Discard", "set"]], "PySet_GET_SIZE": [[54, 3, 1, "c.PySet_GET_SIZE", "anyset"]], "PySet_New": [[54, 3, 1, "c.PySet_New", "iterable"]], "PySet_Pop": [[54, 3, 1, "c.PySet_Pop", "set"]], "PySet_Size": [[54, 3, 1, "c.PySet_Size", "anyset"]], "PySignal_SetWakeupFd": [[23, 3, 1, "c.PySignal_SetWakeupFd", "fd"]], "PySlice_AdjustIndices": [[55, 3, 1, "c.PySlice_AdjustIndices", "length"], [55, 3, 1, "c.PySlice_AdjustIndices", "start"], [55, 3, 1, "c.PySlice_AdjustIndices", "step"], [55, 3, 1, "c.PySlice_AdjustIndices", "stop"]], "PySlice_Check": [[55, 3, 1, "c.PySlice_Check", "ob"]], "PySlice_GetIndices": [[55, 3, 1, "c.PySlice_GetIndices", "length"], [55, 3, 1, "c.PySlice_GetIndices", "slice"], [55, 3, 1, "c.PySlice_GetIndices", "start"], [55, 3, 1, "c.PySlice_GetIndices", "step"], [55, 3, 1, "c.PySlice_GetIndices", "stop"]], "PySlice_GetIndicesEx": [[55, 3, 1, "c.PySlice_GetIndicesEx", "length"], [55, 3, 1, "c.PySlice_GetIndicesEx", "slice"], [55, 3, 1, "c.PySlice_GetIndicesEx", "slicelength"], [55, 3, 1, "c.PySlice_GetIndicesEx", "start"], [55, 3, 1, "c.PySlice_GetIndicesEx", "step"], [55, 3, 1, "c.PySlice_GetIndicesEx", "stop"]], "PySlice_New": [[55, 3, 1, "c.PySlice_New", "start"], [55, 3, 1, "c.PySlice_New", "step"], [55, 3, 1, "c.PySlice_New", "stop"]], "PySlice_Unpack": [[55, 3, 1, "c.PySlice_Unpack", "slice"], [55, 3, 1, "c.PySlice_Unpack", "start"], [55, 3, 1, "c.PySlice_Unpack", "step"], [55, 3, 1, "c.PySlice_Unpack", "stop"]], "PyState_AddModule": [[45, 3, 1, "c.PyState_AddModule", "def"], [45, 3, 1, "c.PyState_AddModule", "module"]], "PyState_FindModule": [[45, 3, 1, "c.PyState_FindModule", "def"]], "PyState_RemoveModule": [[45, 3, 1, "c.PyState_RemoveModule", "def"]], "PyStatus": [[34, 0, 1, "c.PyStatus.err_msg", "err_msg"], [34, 0, 1, "c.PyStatus.exitcode", "exitcode"], [34, 0, 1, "c.PyStatus.func", "func"]], "PyStatus_Error": [[34, 3, 1, "c.PyStatus_Error", "err_msg"]], "PyStatus_Exception": [[34, 3, 1, "c.PyStatus_Exception", "status"]], "PyStatus_Exit": [[34, 3, 1, "c.PyStatus_Exit", "exitcode"]], "PyStatus_IsError": [[34, 3, 1, "c.PyStatus_IsError", "status"]], "PyStatus_IsExit": [[34, 3, 1, "c.PyStatus_IsExit", "status"]], "PyStructSequence_Desc": [[59, 0, 1, "c.PyStructSequence_Desc.doc", "doc"], [59, 0, 1, "c.PyStructSequence_Desc.fields", "fields"], [59, 0, 1, "c.PyStructSequence_Desc.n_in_sequence", "n_in_sequence"], [59, 0, 1, "c.PyStructSequence_Desc.name", "name"]], "PyStructSequence_Field": [[59, 0, 1, "c.PyStructSequence_Field.doc", "doc"], [59, 0, 1, "c.PyStructSequence_Field.name", "name"]], "PyStructSequence_GET_ITEM": [[59, 3, 1, "c.PyStructSequence_GET_ITEM", "p"], [59, 3, 1, "c.PyStructSequence_GET_ITEM", "pos"]], "PyStructSequence_GetItem": [[59, 3, 1, "c.PyStructSequence_GetItem", "p"], [59, 3, 1, "c.PyStructSequence_GetItem", "pos"]], "PyStructSequence_InitType": [[59, 3, 1, "c.PyStructSequence_InitType", "desc"], [59, 3, 1, "c.PyStructSequence_InitType", "type"]], "PyStructSequence_InitType2": [[59, 3, 1, "c.PyStructSequence_InitType2", "desc"], [59, 3, 1, "c.PyStructSequence_InitType2", "type"]], "PyStructSequence_New": [[59, 3, 1, "c.PyStructSequence_New", "type"]], "PyStructSequence_NewType": [[59, 3, 1, "c.PyStructSequence_NewType", "desc"]], "PyStructSequence_SET_ITEM": [[59, 3, 1, "c.PyStructSequence_SET_ITEM", "o"], [59, 3, 1, "c.PyStructSequence_SET_ITEM", "p"], [59, 3, 1, "c.PyStructSequence_SET_ITEM", "pos"]], "PyStructSequence_SetItem": [[59, 3, 1, "c.PyStructSequence_SetItem", "o"], [59, 3, 1, "c.PyStructSequence_SetItem", "p"], [59, 3, 1, "c.PyStructSequence_SetItem", "pos"]], "PySys_AddAuditHook": [[58, 3, 1, "c.PySys_AddAuditHook", "hook"], [58, 3, 1, "c.PySys_AddAuditHook", "userData"]], "PySys_AddWarnOption": [[58, 3, 1, "c.PySys_AddWarnOption", "s"]], "PySys_AddWarnOptionUnicode": [[58, 3, 1, "c.PySys_AddWarnOptionUnicode", "unicode"]], "PySys_AddXOption": [[58, 3, 1, "c.PySys_AddXOption", "s"]], "PySys_Audit": [[58, 3, 1, "c.PySys_Audit", "event"], [58, 3, 1, "c.PySys_Audit", "format"]], "PySys_FormatStderr": [[58, 3, 1, "c.PySys_FormatStderr", "format"]], "PySys_FormatStdout": [[58, 3, 1, "c.PySys_FormatStdout", "format"]], "PySys_GetObject": [[58, 3, 1, "c.PySys_GetObject", "name"]], "PySys_SetArgv": [[33, 3, 1, "c.PySys_SetArgv", "argc"], [33, 3, 1, "c.PySys_SetArgv", "argv"]], "PySys_SetArgvEx": [[33, 3, 1, "c.PySys_SetArgvEx", "argc"], [33, 3, 1, "c.PySys_SetArgvEx", "argv"], [33, 3, 1, "c.PySys_SetArgvEx", "updatepath"]], "PySys_SetObject": [[58, 3, 1, "c.PySys_SetObject", "name"], [58, 3, 1, "c.PySys_SetObject", "v"]], "PySys_SetPath": [[58, 3, 1, "c.PySys_SetPath", "path"]], "PySys_WriteStderr": [[58, 3, 1, "c.PySys_WriteStderr", "format"]], "PySys_WriteStdout": [[58, 3, 1, "c.PySys_WriteStdout", "format"]], "PyTZInfo_Check": [[20, 3, 1, "c.PyTZInfo_Check", "ob"]], "PyTZInfo_CheckExact": [[20, 3, 1, "c.PyTZInfo_CheckExact", "ob"]], "PyThreadState": [[33, 0, 1, "c.PyThreadState.interp", "interp"]], "PyThreadState_Clear": [[33, 3, 1, "c.PyThreadState_Clear", "tstate"]], "PyThreadState_Delete": [[33, 3, 1, "c.PyThreadState_Delete", "tstate"]], "PyThreadState_EnterTracing": [[33, 3, 1, "c.PyThreadState_EnterTracing", "tstate"]], "PyThreadState_GetFrame": [[33, 3, 1, "c.PyThreadState_GetFrame", "tstate"]], "PyThreadState_GetID": [[33, 3, 1, "c.PyThreadState_GetID", "tstate"]], "PyThreadState_GetInterpreter": [[33, 3, 1, "c.PyThreadState_GetInterpreter", "tstate"]], "PyThreadState_LeaveTracing": [[33, 3, 1, "c.PyThreadState_LeaveTracing", "tstate"]], "PyThreadState_New": [[33, 3, 1, "c.PyThreadState_New", "interp"]], "PyThreadState_Next": [[33, 3, 1, "c.PyThreadState_Next", "tstate"]], "PyThreadState_SetAsyncExc": [[33, 3, 1, "c.PyThreadState_SetAsyncExc", "exc"], [33, 3, 1, "c.PyThreadState_SetAsyncExc", "id"]], "PyThreadState_Swap": [[33, 3, 1, "c.PyThreadState_Swap", "tstate"]], "PyThread_delete_key": [[33, 3, 1, "c.PyThread_delete_key", "key"]], "PyThread_delete_key_value": [[33, 3, 1, "c.PyThread_delete_key_value", "key"]], "PyThread_get_key_value": [[33, 3, 1, "c.PyThread_get_key_value", "key"]], "PyThread_set_key_value": [[33, 3, 1, "c.PyThread_set_key_value", "key"], [33, 3, 1, "c.PyThread_set_key_value", "value"]], "PyThread_tss_create": [[33, 3, 1, "c.PyThread_tss_create", "key"]], "PyThread_tss_delete": [[33, 3, 1, "c.PyThread_tss_delete", "key"]], "PyThread_tss_free": [[33, 3, 1, "c.PyThread_tss_free", "key"]], "PyThread_tss_get": [[33, 3, 1, "c.PyThread_tss_get", "key"]], "PyThread_tss_is_created": [[33, 3, 1, "c.PyThread_tss_is_created", "key"]], "PyThread_tss_set": [[33, 3, 1, "c.PyThread_tss_set", "key"], [33, 3, 1, "c.PyThread_tss_set", "value"]], "PyTimeZone_FromOffset": [[20, 3, 1, "c.PyTimeZone_FromOffset", "offset"]], "PyTimeZone_FromOffsetAndName": [[20, 3, 1, "c.PyTimeZone_FromOffsetAndName", "name"], [20, 3, 1, "c.PyTimeZone_FromOffsetAndName", "offset"]], "PyTime_Check": [[20, 3, 1, "c.PyTime_Check", "ob"]], "PyTime_CheckExact": [[20, 3, 1, "c.PyTime_CheckExact", "ob"]], "PyTime_FromTime": [[20, 3, 1, "c.PyTime_FromTime", "hour"], [20, 3, 1, "c.PyTime_FromTime", "minute"], [20, 3, 1, "c.PyTime_FromTime", "second"], [20, 3, 1, "c.PyTime_FromTime", "usecond"]], "PyTime_FromTimeAndFold": [[20, 3, 1, "c.PyTime_FromTimeAndFold", "fold"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "hour"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "minute"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "second"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "usecond"]], "PyTraceMalloc_Track": [[42, 3, 1, "c.PyTraceMalloc_Track", "domain"], [42, 3, 1, "c.PyTraceMalloc_Track", "ptr"], [42, 3, 1, "c.PyTraceMalloc_Track", "size"]], "PyTraceMalloc_Untrack": [[42, 3, 1, "c.PyTraceMalloc_Untrack", "domain"], [42, 3, 1, "c.PyTraceMalloc_Untrack", "ptr"]], "PyTuple_Check": [[59, 3, 1, "c.PyTuple_Check", "p"]], "PyTuple_CheckExact": [[59, 3, 1, "c.PyTuple_CheckExact", "p"]], "PyTuple_GET_ITEM": [[59, 3, 1, "c.PyTuple_GET_ITEM", "p"], [59, 3, 1, "c.PyTuple_GET_ITEM", "pos"]], "PyTuple_GET_SIZE": [[59, 3, 1, "c.PyTuple_GET_SIZE", "p"]], "PyTuple_GetItem": [[59, 3, 1, "c.PyTuple_GetItem", "p"], [59, 3, 1, "c.PyTuple_GetItem", "pos"]], "PyTuple_GetSlice": [[59, 3, 1, "c.PyTuple_GetSlice", "high"], [59, 3, 1, "c.PyTuple_GetSlice", "low"], [59, 3, 1, "c.PyTuple_GetSlice", "p"]], "PyTuple_New": [[59, 3, 1, "c.PyTuple_New", "len"]], "PyTuple_Pack": [[59, 3, 1, "c.PyTuple_Pack", "n"]], "PyTuple_SET_ITEM": [[59, 3, 1, "c.PyTuple_SET_ITEM", "o"], [59, 3, 1, "c.PyTuple_SET_ITEM", "p"], [59, 3, 1, "c.PyTuple_SET_ITEM", "pos"]], "PyTuple_SetItem": [[59, 3, 1, "c.PyTuple_SetItem", "o"], [59, 3, 1, "c.PyTuple_SetItem", "p"], [59, 3, 1, "c.PyTuple_SetItem", "pos"]], "PyTuple_Size": [[59, 3, 1, "c.PyTuple_Size", "p"]], "PyTypeObject": [[62, 0, 1, "c.PyTypeObject.tp_alloc", "tp_alloc"], [62, 0, 1, "c.PyTypeObject.tp_as_async", "tp_as_async"], [62, 0, 1, "c.PyTypeObject.tp_as_buffer", "tp_as_buffer"], [62, 0, 1, "c.PyTypeObject.tp_as_mapping", "tp_as_mapping"], [62, 0, 1, "c.PyTypeObject.tp_as_number", "tp_as_number"], [62, 0, 1, "c.PyTypeObject.tp_as_sequence", "tp_as_sequence"], [62, 0, 1, "c.PyTypeObject.tp_base", "tp_base"], [62, 0, 1, "c.PyTypeObject.tp_bases", "tp_bases"], [62, 0, 1, "c.PyTypeObject.tp_basicsize", "tp_basicsize"], [62, 0, 1, "c.PyTypeObject.tp_cache", "tp_cache"], [62, 0, 1, "c.PyTypeObject.tp_call", "tp_call"], [62, 0, 1, "c.PyTypeObject.tp_clear", "tp_clear"], [62, 0, 1, "c.PyTypeObject.tp_dealloc", "tp_dealloc"], [62, 0, 1, "c.PyTypeObject.tp_del", "tp_del"], [62, 0, 1, "c.PyTypeObject.tp_descr_get", "tp_descr_get"], [62, 0, 1, "c.PyTypeObject.tp_descr_set", "tp_descr_set"], [62, 0, 1, "c.PyTypeObject.tp_dict", "tp_dict"], [62, 0, 1, "c.PyTypeObject.tp_dictoffset", "tp_dictoffset"], [62, 0, 1, "c.PyTypeObject.tp_doc", "tp_doc"], [62, 0, 1, "c.PyTypeObject.tp_finalize", "tp_finalize"], [62, 0, 1, "c.PyTypeObject.tp_flags", "tp_flags"], [62, 0, 1, "c.PyTypeObject.tp_free", "tp_free"], [62, 0, 1, "c.PyTypeObject.tp_getattr", "tp_getattr"], [62, 0, 1, "c.PyTypeObject.tp_getattro", "tp_getattro"], [62, 0, 1, "c.PyTypeObject.tp_getset", "tp_getset"], [62, 0, 1, "c.PyTypeObject.tp_hash", "tp_hash"], [62, 0, 1, "c.PyTypeObject.tp_init", "tp_init"], [62, 0, 1, "c.PyTypeObject.tp_is_gc", "tp_is_gc"], [62, 0, 1, "c.PyTypeObject.tp_itemsize", "tp_itemsize"], [62, 0, 1, "c.PyTypeObject.tp_iter", "tp_iter"], [62, 0, 1, "c.PyTypeObject.tp_iternext", "tp_iternext"], [62, 0, 1, "c.PyTypeObject.tp_members", "tp_members"], [62, 0, 1, "c.PyTypeObject.tp_methods", "tp_methods"], [62, 0, 1, "c.PyTypeObject.tp_mro", "tp_mro"], [62, 0, 1, "c.PyTypeObject.tp_name", "tp_name"], [62, 0, 1, "c.PyTypeObject.tp_new", "tp_new"], [62, 0, 1, "c.PyTypeObject.tp_repr", "tp_repr"], [62, 0, 1, "c.PyTypeObject.tp_richcompare", "tp_richcompare"], [62, 0, 1, "c.PyTypeObject.tp_setattr", "tp_setattr"], [62, 0, 1, "c.PyTypeObject.tp_setattro", "tp_setattro"], [62, 0, 1, "c.PyTypeObject.tp_str", "tp_str"], [62, 0, 1, "c.PyTypeObject.tp_subclasses", "tp_subclasses"], [62, 0, 1, "c.PyTypeObject.tp_traverse", "tp_traverse"], [62, 0, 1, "c.PyTypeObject.tp_vectorcall", "tp_vectorcall"], [62, 0, 1, "c.PyTypeObject.tp_vectorcall_offset", "tp_vectorcall_offset"], [62, 0, 1, "c.PyTypeObject.tp_version_tag", "tp_version_tag"], [62, 0, 1, "c.PyTypeObject.tp_weaklist", "tp_weaklist"], [62, 0, 1, "c.PyTypeObject.tp_weaklistoffset", "tp_weaklistoffset"]], "PyType_Check": [[60, 3, 1, "c.PyType_Check", "o"]], "PyType_CheckExact": [[60, 3, 1, "c.PyType_CheckExact", "o"]], "PyType_FromModuleAndSpec": [[60, 3, 1, "c.PyType_FromModuleAndSpec", "bases"], [60, 3, 1, "c.PyType_FromModuleAndSpec", "module"], [60, 3, 1, "c.PyType_FromModuleAndSpec", "spec"]], "PyType_FromSpec": [[60, 3, 1, "c.PyType_FromSpec", "spec"]], "PyType_FromSpecWithBases": [[60, 3, 1, "c.PyType_FromSpecWithBases", "bases"], [60, 3, 1, "c.PyType_FromSpecWithBases", "spec"]], "PyType_GenericAlloc": [[60, 3, 1, "c.PyType_GenericAlloc", "nitems"], [60, 3, 1, "c.PyType_GenericAlloc", "type"]], "PyType_GenericNew": [[60, 3, 1, "c.PyType_GenericNew", "args"], [60, 3, 1, "c.PyType_GenericNew", "kwds"], [60, 3, 1, "c.PyType_GenericNew", "type"]], "PyType_GetFlags": [[60, 3, 1, "c.PyType_GetFlags", "type"]], "PyType_GetModule": [[60, 3, 1, "c.PyType_GetModule", "type"]], "PyType_GetModuleByDef": [[60, 3, 1, "c.PyType_GetModuleByDef", "def"], [60, 3, 1, "c.PyType_GetModuleByDef", "type"]], "PyType_GetModuleState": [[60, 3, 1, "c.PyType_GetModuleState", "type"]], "PyType_GetName": [[60, 3, 1, "c.PyType_GetName", "type"]], "PyType_GetQualName": [[60, 3, 1, "c.PyType_GetQualName", "type"]], "PyType_GetSlot": [[60, 3, 1, "c.PyType_GetSlot", "slot"], [60, 3, 1, "c.PyType_GetSlot", "type"]], "PyType_HasFeature": [[60, 3, 1, "c.PyType_HasFeature", "feature"], [60, 3, 1, "c.PyType_HasFeature", "o"]], "PyType_IS_GC": [[60, 3, 1, "c.PyType_IS_GC", "o"]], "PyType_IsSubtype": [[60, 3, 1, "c.PyType_IsSubtype", "a"], [60, 3, 1, "c.PyType_IsSubtype", "b"]], "PyType_Modified": [[60, 3, 1, "c.PyType_Modified", "type"]], "PyType_Ready": [[60, 3, 1, "c.PyType_Ready", "type"]], "PyType_Slot.PyType_Slot": [[60, 0, 1, "c.PyType_Slot.PyType_Slot.pfunc", "pfunc"], [60, 0, 1, "c.PyType_Slot.PyType_Slot.slot", "slot"]], "PyType_Spec.PyType_Spec": [[60, 0, 1, "c.PyType_Spec.PyType_Spec.basicsize", "basicsize"], [60, 0, 1, "c.PyType_Spec.PyType_Spec.flags", "flags"], [60, 0, 1, "c.PyType_Spec.PyType_Spec.itemsize", "itemsize"], [60, 0, 1, "c.PyType_Spec.PyType_Spec.name", "name"], [60, 0, 1, "c.PyType_Spec.PyType_Spec.slots", "slots"]], "PyUnicodeDecodeError_Create": [[23, 3, 1, "c.PyUnicodeDecodeError_Create", "encoding"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "length"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "object"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "reason"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "start"]], "PyUnicodeDecodeError_GetEncoding": [[23, 3, 1, "c.PyUnicodeDecodeError_GetEncoding", "exc"]], "PyUnicodeDecodeError_GetEnd": [[23, 3, 1, "c.PyUnicodeDecodeError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_GetEnd", "exc"]], "PyUnicodeDecodeError_GetObject": [[23, 3, 1, "c.PyUnicodeDecodeError_GetObject", "exc"]], "PyUnicodeDecodeError_GetReason": [[23, 3, 1, "c.PyUnicodeDecodeError_GetReason", "exc"]], "PyUnicodeDecodeError_GetStart": [[23, 3, 1, "c.PyUnicodeDecodeError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_GetStart", "start"]], "PyUnicodeDecodeError_SetEnd": [[23, 3, 1, "c.PyUnicodeDecodeError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_SetEnd", "exc"]], "PyUnicodeDecodeError_SetReason": [[23, 3, 1, "c.PyUnicodeDecodeError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_SetReason", "reason"]], "PyUnicodeDecodeError_SetStart": [[23, 3, 1, "c.PyUnicodeDecodeError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_SetStart", "start"]], "PyUnicodeEncodeError_GetEncoding": [[23, 3, 1, "c.PyUnicodeEncodeError_GetEncoding", "exc"]], "PyUnicodeEncodeError_GetEnd": [[23, 3, 1, "c.PyUnicodeEncodeError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeEncodeError_GetEnd", "exc"]], "PyUnicodeEncodeError_GetObject": [[23, 3, 1, "c.PyUnicodeEncodeError_GetObject", "exc"]], "PyUnicodeEncodeError_GetReason": [[23, 3, 1, "c.PyUnicodeEncodeError_GetReason", "exc"]], "PyUnicodeEncodeError_GetStart": [[23, 3, 1, "c.PyUnicodeEncodeError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_GetStart", "start"]], "PyUnicodeEncodeError_SetEnd": [[23, 3, 1, "c.PyUnicodeEncodeError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeEncodeError_SetEnd", "exc"]], "PyUnicodeEncodeError_SetReason": [[23, 3, 1, "c.PyUnicodeEncodeError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_SetReason", "reason"]], "PyUnicodeEncodeError_SetStart": [[23, 3, 1, "c.PyUnicodeEncodeError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_SetStart", "start"]], "PyUnicodeTranslateError_GetEnd": [[23, 3, 1, "c.PyUnicodeTranslateError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeTranslateError_GetEnd", "exc"]], "PyUnicodeTranslateError_GetObject": [[23, 3, 1, "c.PyUnicodeTranslateError_GetObject", "exc"]], "PyUnicodeTranslateError_GetReason": [[23, 3, 1, "c.PyUnicodeTranslateError_GetReason", "exc"]], "PyUnicodeTranslateError_GetStart": [[23, 3, 1, "c.PyUnicodeTranslateError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_GetStart", "start"]], "PyUnicodeTranslateError_SetEnd": [[23, 3, 1, "c.PyUnicodeTranslateError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeTranslateError_SetEnd", "exc"]], "PyUnicodeTranslateError_SetReason": [[23, 3, 1, "c.PyUnicodeTranslateError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_SetReason", "reason"]], "PyUnicodeTranslateError_SetStart": [[23, 3, 1, "c.PyUnicodeTranslateError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_SetStart", "start"]], "PyUnicode_1BYTE_DATA": [[63, 3, 1, "c.PyUnicode_1BYTE_DATA", "unicode"]], "PyUnicode_2BYTE_DATA": [[63, 3, 1, "c.PyUnicode_2BYTE_DATA", "unicode"]], "PyUnicode_4BYTE_DATA": [[63, 3, 1, "c.PyUnicode_4BYTE_DATA", "unicode"]], "PyUnicode_AS_DATA": [[63, 3, 1, "c.PyUnicode_AS_DATA", "unicode"]], "PyUnicode_AS_UNICODE": [[63, 3, 1, "c.PyUnicode_AS_UNICODE", "unicode"]], "PyUnicode_AsASCIIString": [[63, 3, 1, "c.PyUnicode_AsASCIIString", "unicode"]], "PyUnicode_AsCharmapString": [[63, 3, 1, "c.PyUnicode_AsCharmapString", "mapping"], [63, 3, 1, "c.PyUnicode_AsCharmapString", "unicode"]], "PyUnicode_AsEncodedString": [[63, 3, 1, "c.PyUnicode_AsEncodedString", "encoding"], [63, 3, 1, "c.PyUnicode_AsEncodedString", "errors"], [63, 3, 1, "c.PyUnicode_AsEncodedString", "unicode"]], "PyUnicode_AsLatin1String": [[63, 3, 1, "c.PyUnicode_AsLatin1String", "unicode"]], "PyUnicode_AsMBCSString": [[63, 3, 1, "c.PyUnicode_AsMBCSString", "unicode"]], "PyUnicode_AsRawUnicodeEscapeString": [[63, 3, 1, "c.PyUnicode_AsRawUnicodeEscapeString", "unicode"]], "PyUnicode_AsUCS4": [[63, 3, 1, "c.PyUnicode_AsUCS4", "buffer"], [63, 3, 1, "c.PyUnicode_AsUCS4", "buflen"], [63, 3, 1, "c.PyUnicode_AsUCS4", "copy_null"], [63, 3, 1, "c.PyUnicode_AsUCS4", "unicode"]], "PyUnicode_AsUCS4Copy": [[63, 3, 1, "c.PyUnicode_AsUCS4Copy", "unicode"]], "PyUnicode_AsUTF16String": [[63, 3, 1, "c.PyUnicode_AsUTF16String", "unicode"]], "PyUnicode_AsUTF32String": [[63, 3, 1, "c.PyUnicode_AsUTF32String", "unicode"]], "PyUnicode_AsUTF8": [[63, 3, 1, "c.PyUnicode_AsUTF8", "unicode"]], "PyUnicode_AsUTF8AndSize": [[63, 3, 1, "c.PyUnicode_AsUTF8AndSize", "size"], [63, 3, 1, "c.PyUnicode_AsUTF8AndSize", "unicode"]], "PyUnicode_AsUTF8String": [[63, 3, 1, "c.PyUnicode_AsUTF8String", "unicode"]], "PyUnicode_AsUnicode": [[63, 3, 1, "c.PyUnicode_AsUnicode", "unicode"]], "PyUnicode_AsUnicodeAndSize": [[63, 3, 1, "c.PyUnicode_AsUnicodeAndSize", "size"], [63, 3, 1, "c.PyUnicode_AsUnicodeAndSize", "unicode"]], "PyUnicode_AsUnicodeEscapeString": [[63, 3, 1, "c.PyUnicode_AsUnicodeEscapeString", "unicode"]], "PyUnicode_AsWideChar": [[63, 3, 1, "c.PyUnicode_AsWideChar", "size"], [63, 3, 1, "c.PyUnicode_AsWideChar", "unicode"], [63, 3, 1, "c.PyUnicode_AsWideChar", "wstr"]], "PyUnicode_AsWideCharString": [[63, 3, 1, "c.PyUnicode_AsWideCharString", "size"], [63, 3, 1, "c.PyUnicode_AsWideCharString", "unicode"]], "PyUnicode_Check": [[63, 3, 1, "c.PyUnicode_Check", "obj"]], "PyUnicode_CheckExact": [[63, 3, 1, "c.PyUnicode_CheckExact", "obj"]], "PyUnicode_Compare": [[63, 3, 1, "c.PyUnicode_Compare", "left"], [63, 3, 1, "c.PyUnicode_Compare", "right"]], "PyUnicode_CompareWithASCIIString": [[63, 3, 1, "c.PyUnicode_CompareWithASCIIString", "string"], [63, 3, 1, "c.PyUnicode_CompareWithASCIIString", "unicode"]], "PyUnicode_Concat": [[63, 3, 1, "c.PyUnicode_Concat", "left"], [63, 3, 1, "c.PyUnicode_Concat", "right"]], "PyUnicode_Contains": [[63, 3, 1, "c.PyUnicode_Contains", "substr"], [63, 3, 1, "c.PyUnicode_Contains", "unicode"]], "PyUnicode_CopyCharacters": [[63, 3, 1, "c.PyUnicode_CopyCharacters", "from"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "from_start"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "how_many"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "to"], [63, 3, 1, "c.PyUnicode_CopyCharacters", "to_start"]], "PyUnicode_Count": [[63, 3, 1, "c.PyUnicode_Count", "end"], [63, 3, 1, "c.PyUnicode_Count", "start"], [63, 3, 1, "c.PyUnicode_Count", "substr"], [63, 3, 1, "c.PyUnicode_Count", "unicode"]], "PyUnicode_DATA": [[63, 3, 1, "c.PyUnicode_DATA", "unicode"]], "PyUnicode_Decode": [[63, 3, 1, "c.PyUnicode_Decode", "encoding"], [63, 3, 1, "c.PyUnicode_Decode", "errors"], [63, 3, 1, "c.PyUnicode_Decode", "size"], [63, 3, 1, "c.PyUnicode_Decode", "str"]], "PyUnicode_DecodeASCII": [[63, 3, 1, "c.PyUnicode_DecodeASCII", "errors"], [63, 3, 1, "c.PyUnicode_DecodeASCII", "size"], [63, 3, 1, "c.PyUnicode_DecodeASCII", "str"]], "PyUnicode_DecodeCharmap": [[63, 3, 1, "c.PyUnicode_DecodeCharmap", "errors"], [63, 3, 1, "c.PyUnicode_DecodeCharmap", "length"], [63, 3, 1, "c.PyUnicode_DecodeCharmap", "mapping"], [63, 3, 1, "c.PyUnicode_DecodeCharmap", "str"]], "PyUnicode_DecodeFSDefault": [[63, 3, 1, "c.PyUnicode_DecodeFSDefault", "str"]], "PyUnicode_DecodeFSDefaultAndSize": [[63, 3, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "size"], [63, 3, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "str"]], "PyUnicode_DecodeLatin1": [[63, 3, 1, "c.PyUnicode_DecodeLatin1", "errors"], [63, 3, 1, "c.PyUnicode_DecodeLatin1", "size"], [63, 3, 1, "c.PyUnicode_DecodeLatin1", "str"]], "PyUnicode_DecodeLocale": [[63, 3, 1, "c.PyUnicode_DecodeLocale", "errors"], [63, 3, 1, "c.PyUnicode_DecodeLocale", "str"]], "PyUnicode_DecodeLocaleAndSize": [[63, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "errors"], [63, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "length"], [63, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "str"]], "PyUnicode_DecodeMBCS": [[63, 3, 1, "c.PyUnicode_DecodeMBCS", "errors"], [63, 3, 1, "c.PyUnicode_DecodeMBCS", "size"], [63, 3, 1, "c.PyUnicode_DecodeMBCS", "str"]], "PyUnicode_DecodeMBCSStateful": [[63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "str"]], "PyUnicode_DecodeRawUnicodeEscape": [[63, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "errors"], [63, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "size"], [63, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "str"]], "PyUnicode_DecodeUTF16": [[63, 3, 1, "c.PyUnicode_DecodeUTF16", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF16", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF16", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF16", "str"]], "PyUnicode_DecodeUTF16Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "str"]], "PyUnicode_DecodeUTF32": [[63, 3, 1, "c.PyUnicode_DecodeUTF32", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF32", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF32", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF32", "str"]], "PyUnicode_DecodeUTF32Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "byteorder"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "str"]], "PyUnicode_DecodeUTF7": [[63, 3, 1, "c.PyUnicode_DecodeUTF7", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF7", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF7", "str"]], "PyUnicode_DecodeUTF7Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "str"]], "PyUnicode_DecodeUTF8": [[63, 3, 1, "c.PyUnicode_DecodeUTF8", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF8", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF8", "str"]], "PyUnicode_DecodeUTF8Stateful": [[63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "consumed"], [63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "size"], [63, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "str"]], "PyUnicode_DecodeUnicodeEscape": [[63, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "errors"], [63, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "size"], [63, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "str"]], "PyUnicode_EncodeCodePage": [[63, 3, 1, "c.PyUnicode_EncodeCodePage", "code_page"], [63, 3, 1, "c.PyUnicode_EncodeCodePage", "errors"], [63, 3, 1, "c.PyUnicode_EncodeCodePage", "unicode"]], "PyUnicode_EncodeFSDefault": [[63, 3, 1, "c.PyUnicode_EncodeFSDefault", "unicode"]], "PyUnicode_EncodeLocale": [[63, 3, 1, "c.PyUnicode_EncodeLocale", "errors"], [63, 3, 1, "c.PyUnicode_EncodeLocale", "unicode"]], "PyUnicode_FSConverter": [[63, 3, 1, "c.PyUnicode_FSConverter", "obj"], [63, 3, 1, "c.PyUnicode_FSConverter", "result"]], "PyUnicode_FSDecoder": [[63, 3, 1, "c.PyUnicode_FSDecoder", "obj"], [63, 3, 1, "c.PyUnicode_FSDecoder", "result"]], "PyUnicode_Fill": [[63, 3, 1, "c.PyUnicode_Fill", "fill_char"], [63, 3, 1, "c.PyUnicode_Fill", "length"], [63, 3, 1, "c.PyUnicode_Fill", "start"], [63, 3, 1, "c.PyUnicode_Fill", "unicode"]], "PyUnicode_Find": [[63, 3, 1, "c.PyUnicode_Find", "direction"], [63, 3, 1, "c.PyUnicode_Find", "end"], [63, 3, 1, "c.PyUnicode_Find", "start"], [63, 3, 1, "c.PyUnicode_Find", "substr"], [63, 3, 1, "c.PyUnicode_Find", "unicode"]], "PyUnicode_FindChar": [[63, 3, 1, "c.PyUnicode_FindChar", "ch"], [63, 3, 1, "c.PyUnicode_FindChar", "direction"], [63, 3, 1, "c.PyUnicode_FindChar", "end"], [63, 3, 1, "c.PyUnicode_FindChar", "start"], [63, 3, 1, "c.PyUnicode_FindChar", "unicode"]], "PyUnicode_Format": [[63, 3, 1, "c.PyUnicode_Format", "args"], [63, 3, 1, "c.PyUnicode_Format", "format"]], "PyUnicode_FromEncodedObject": [[63, 3, 1, "c.PyUnicode_FromEncodedObject", "encoding"], [63, 3, 1, "c.PyUnicode_FromEncodedObject", "errors"], [63, 3, 1, "c.PyUnicode_FromEncodedObject", "obj"]], "PyUnicode_FromFormat": [[63, 3, 1, "c.PyUnicode_FromFormat", "format"]], "PyUnicode_FromFormatV": [[63, 3, 1, "c.PyUnicode_FromFormatV", "format"], [63, 3, 1, "c.PyUnicode_FromFormatV", "vargs"]], "PyUnicode_FromKindAndData": [[63, 3, 1, "c.PyUnicode_FromKindAndData", "buffer"], [63, 3, 1, "c.PyUnicode_FromKindAndData", "kind"], [63, 3, 1, "c.PyUnicode_FromKindAndData", "size"]], "PyUnicode_FromObject": [[63, 3, 1, "c.PyUnicode_FromObject", "obj"]], "PyUnicode_FromString": [[63, 3, 1, "c.PyUnicode_FromString", "str"]], "PyUnicode_FromStringAndSize": [[63, 3, 1, "c.PyUnicode_FromStringAndSize", "size"], [63, 3, 1, "c.PyUnicode_FromStringAndSize", "str"]], "PyUnicode_FromUnicode": [[63, 3, 1, "c.PyUnicode_FromUnicode", "size"], [63, 3, 1, "c.PyUnicode_FromUnicode", "u"]], "PyUnicode_FromWideChar": [[63, 3, 1, "c.PyUnicode_FromWideChar", "size"], [63, 3, 1, "c.PyUnicode_FromWideChar", "wstr"]], "PyUnicode_GET_DATA_SIZE": [[63, 3, 1, "c.PyUnicode_GET_DATA_SIZE", "unicode"]], "PyUnicode_GET_LENGTH": [[63, 3, 1, "c.PyUnicode_GET_LENGTH", "unicode"]], "PyUnicode_GET_SIZE": [[63, 3, 1, "c.PyUnicode_GET_SIZE", "unicode"]], "PyUnicode_GetLength": [[63, 3, 1, "c.PyUnicode_GetLength", "unicode"]], "PyUnicode_GetSize": [[63, 3, 1, "c.PyUnicode_GetSize", "unicode"]], "PyUnicode_InternFromString": [[63, 3, 1, "c.PyUnicode_InternFromString", "str"]], "PyUnicode_InternInPlace": [[63, 3, 1, "c.PyUnicode_InternInPlace", "p_unicode"]], "PyUnicode_IsIdentifier": [[63, 3, 1, "c.PyUnicode_IsIdentifier", "unicode"]], "PyUnicode_Join": [[63, 3, 1, "c.PyUnicode_Join", "separator"], [63, 3, 1, "c.PyUnicode_Join", "seq"]], "PyUnicode_KIND": [[63, 3, 1, "c.PyUnicode_KIND", "unicode"]], "PyUnicode_MAX_CHAR_VALUE": [[63, 3, 1, "c.PyUnicode_MAX_CHAR_VALUE", "unicode"]], "PyUnicode_New": [[63, 3, 1, "c.PyUnicode_New", "maxchar"], [63, 3, 1, "c.PyUnicode_New", "size"]], "PyUnicode_READ": [[63, 3, 1, "c.PyUnicode_READ", "data"], [63, 3, 1, "c.PyUnicode_READ", "index"], [63, 3, 1, "c.PyUnicode_READ", "kind"]], "PyUnicode_READY": [[63, 3, 1, "c.PyUnicode_READY", "unicode"]], "PyUnicode_READ_CHAR": [[63, 3, 1, "c.PyUnicode_READ_CHAR", "index"], [63, 3, 1, "c.PyUnicode_READ_CHAR", "unicode"]], "PyUnicode_ReadChar": [[63, 3, 1, "c.PyUnicode_ReadChar", "index"], [63, 3, 1, "c.PyUnicode_ReadChar", "unicode"]], "PyUnicode_Replace": [[63, 3, 1, "c.PyUnicode_Replace", "maxcount"], [63, 3, 1, "c.PyUnicode_Replace", "replstr"], [63, 3, 1, "c.PyUnicode_Replace", "substr"], [63, 3, 1, "c.PyUnicode_Replace", "unicode"]], "PyUnicode_RichCompare": [[63, 3, 1, "c.PyUnicode_RichCompare", "left"], [63, 3, 1, "c.PyUnicode_RichCompare", "op"], [63, 3, 1, "c.PyUnicode_RichCompare", "right"]], "PyUnicode_Split": [[63, 3, 1, "c.PyUnicode_Split", "maxsplit"], [63, 3, 1, "c.PyUnicode_Split", "sep"], [63, 3, 1, "c.PyUnicode_Split", "unicode"]], "PyUnicode_Splitlines": [[63, 3, 1, "c.PyUnicode_Splitlines", "keepends"], [63, 3, 1, "c.PyUnicode_Splitlines", "unicode"]], "PyUnicode_Substring": [[63, 3, 1, "c.PyUnicode_Substring", "end"], [63, 3, 1, "c.PyUnicode_Substring", "start"], [63, 3, 1, "c.PyUnicode_Substring", "unicode"]], "PyUnicode_Tailmatch": [[63, 3, 1, "c.PyUnicode_Tailmatch", "direction"], [63, 3, 1, "c.PyUnicode_Tailmatch", "end"], [63, 3, 1, "c.PyUnicode_Tailmatch", "start"], [63, 3, 1, "c.PyUnicode_Tailmatch", "substr"], [63, 3, 1, "c.PyUnicode_Tailmatch", "unicode"]], "PyUnicode_Translate": [[63, 3, 1, "c.PyUnicode_Translate", "errors"], [63, 3, 1, "c.PyUnicode_Translate", "table"], [63, 3, 1, "c.PyUnicode_Translate", "unicode"]], "PyUnicode_WRITE": [[63, 3, 1, "c.PyUnicode_WRITE", "data"], [63, 3, 1, "c.PyUnicode_WRITE", "index"], [63, 3, 1, "c.PyUnicode_WRITE", "kind"], [63, 3, 1, "c.PyUnicode_WRITE", "value"]], "PyUnicode_WriteChar": [[63, 3, 1, "c.PyUnicode_WriteChar", "character"], [63, 3, 1, "c.PyUnicode_WriteChar", "index"], [63, 3, 1, "c.PyUnicode_WriteChar", "unicode"]], "PyVarObject": [[62, 0, 1, "c.PyVarObject.ob_size", "ob_size"]], "PyVectorcall_Call": [[10, 3, 1, "c.PyVectorcall_Call", "callable"], [10, 3, 1, "c.PyVectorcall_Call", "dict"], [10, 3, 1, "c.PyVectorcall_Call", "tuple"]], "PyVectorcall_Function": [[10, 3, 1, "c.PyVectorcall_Function", "op"]], "PyVectorcall_NARGS": [[10, 3, 1, "c.PyVectorcall_NARGS", "nargsf"]], "PyWeakref_Check": [[66, 3, 1, "c.PyWeakref_Check", "ob"]], "PyWeakref_CheckProxy": [[66, 3, 1, "c.PyWeakref_CheckProxy", "ob"]], "PyWeakref_CheckRef": [[66, 3, 1, "c.PyWeakref_CheckRef", "ob"]], "PyWeakref_GET_OBJECT": [[66, 3, 1, "c.PyWeakref_GET_OBJECT", "ref"]], "PyWeakref_GetObject": [[66, 3, 1, "c.PyWeakref_GetObject", "ref"]], "PyWeakref_NewProxy": [[66, 3, 1, "c.PyWeakref_NewProxy", "callback"], [66, 3, 1, "c.PyWeakref_NewProxy", "ob"]], "PyWeakref_NewRef": [[66, 3, 1, "c.PyWeakref_NewRef", "callback"], [66, 3, 1, "c.PyWeakref_NewRef", "ob"]], "PyWideStringList": [[34, 0, 1, "c.PyWideStringList.items", "items"], [34, 0, 1, "c.PyWideStringList.length", "length"]], "PyWideStringList_Append": [[34, 3, 1, "c.PyWideStringList_Append", "item"], [34, 3, 1, "c.PyWideStringList_Append", "list"]], "PyWideStringList_Insert": [[34, 3, 1, "c.PyWideStringList_Insert", "index"], [34, 3, 1, "c.PyWideStringList_Insert", "item"], [34, 3, 1, "c.PyWideStringList_Insert", "list"]], "Py_AddPendingCall": [[33, 3, 1, "c.Py_AddPendingCall", "arg"], [33, 3, 1, "c.Py_AddPendingCall", "func"]], "Py_AtExit": [[58, 3, 1, "c.Py_AtExit", "func"]], "Py_BuildValue": [[5, 3, 1, "c.Py_BuildValue", "format"]], "Py_BytesMain": [[65, 3, 1, "c.Py_BytesMain", "argc"], [65, 3, 1, "c.Py_BytesMain", "argv"]], "Py_CLEAR": [[51, 3, 1, "c.Py_CLEAR", "o"]], "Py_CompileString": [[65, 3, 1, "c.Py_CompileString", "filename"], [65, 3, 1, "c.Py_CompileString", "start"], [65, 3, 1, "c.Py_CompileString", "str"]], "Py_CompileStringExFlags": [[65, 3, 1, "c.Py_CompileStringExFlags", "filename"], [65, 3, 1, "c.Py_CompileStringExFlags", "flags"], [65, 3, 1, "c.Py_CompileStringExFlags", "optimize"], [65, 3, 1, "c.Py_CompileStringExFlags", "start"], [65, 3, 1, "c.Py_CompileStringExFlags", "str"]], "Py_CompileStringFlags": [[65, 3, 1, "c.Py_CompileStringFlags", "filename"], [65, 3, 1, "c.Py_CompileStringFlags", "flags"], [65, 3, 1, "c.Py_CompileStringFlags", "start"], [65, 3, 1, "c.Py_CompileStringFlags", "str"]], "Py_CompileStringObject": [[65, 3, 1, "c.Py_CompileStringObject", "filename"], [65, 3, 1, "c.Py_CompileStringObject", "flags"], [65, 3, 1, "c.Py_CompileStringObject", "optimize"], [65, 3, 1, "c.Py_CompileStringObject", "start"], [65, 3, 1, "c.Py_CompileStringObject", "str"]], "Py_DECREF": [[51, 3, 1, "c.Py_DECREF", "o"]], "Py_DecRef": [[51, 3, 1, "c.Py_DecRef", "o"]], "Py_DecodeLocale": [[58, 3, 1, "c.Py_DecodeLocale", "arg"], [58, 3, 1, "c.Py_DecodeLocale", "size"]], "Py_EncodeLocale": [[58, 3, 1, "c.Py_EncodeLocale", "error_pos"], [58, 3, 1, "c.Py_EncodeLocale", "text"]], "Py_EndInterpreter": [[33, 3, 1, "c.Py_EndInterpreter", "tstate"]], "Py_EnterRecursiveCall": [[23, 3, 1, "c.Py_EnterRecursiveCall", "where"]], "Py_Exit": [[58, 3, 1, "c.Py_Exit", "status"]], "Py_ExitStatusException": [[34, 3, 1, "c.Py_ExitStatusException", "status"]], "Py_FatalError": [[58, 3, 1, "c.Py_FatalError", "message"]], "Py_FdIsInteractive": [[58, 3, 1, "c.Py_FdIsInteractive", "filename"], [58, 3, 1, "c.Py_FdIsInteractive", "fp"]], "Py_GenericAlias": [[61, 3, 1, "c.Py_GenericAlias", "args"], [61, 3, 1, "c.Py_GenericAlias", "origin"]], "Py_GetArgcArgv": [[34, 3, 1, "c.Py_GetArgcArgv", "argc"], [34, 3, 1, "c.Py_GetArgcArgv", "argv"]], "Py_INCREF": [[51, 3, 1, "c.Py_INCREF", "o"]], "Py_IS_TYPE": [[57, 3, 1, "c.Py_IS_TYPE", "o"], [57, 3, 1, "c.Py_IS_TYPE", "type"]], "Py_IncRef": [[51, 3, 1, "c.Py_IncRef", "o"]], "Py_InitializeEx": [[33, 3, 1, "c.Py_InitializeEx", "initsigs"]], "Py_InitializeFromConfig": [[34, 3, 1, "c.Py_InitializeFromConfig", "config"]], "Py_Is": [[57, 3, 1, "c.Py_Is", "x"], [57, 3, 1, "c.Py_Is", "y"]], "Py_IsFalse": [[57, 3, 1, "c.Py_IsFalse", "x"]], "Py_IsNone": [[57, 3, 1, "c.Py_IsNone", "x"]], "Py_IsTrue": [[57, 3, 1, "c.Py_IsTrue", "x"]], "Py_Main": [[65, 3, 1, "c.Py_Main", "argc"], [65, 3, 1, "c.Py_Main", "argv"]], "Py_NewRef": [[51, 3, 1, "c.Py_NewRef", "o"]], "Py_PreInitialize": [[34, 3, 1, "c.Py_PreInitialize", "preconfig"]], "Py_PreInitializeFromArgs": [[34, 3, 1, "c.Py_PreInitializeFromArgs", "argc"], [34, 3, 1, "c.Py_PreInitializeFromArgs", "argv"], [34, 3, 1, "c.Py_PreInitializeFromArgs", "preconfig"]], "Py_PreInitializeFromBytesArgs": [[34, 3, 1, "c.Py_PreInitializeFromBytesArgs", "argc"], [34, 3, 1, "c.Py_PreInitializeFromBytesArgs", "argv"], [34, 3, 1, "c.Py_PreInitializeFromBytesArgs", "preconfig"]], "Py_REFCNT": [[57, 3, 1, "c.Py_REFCNT", "o"]], "Py_ReprEnter": [[23, 3, 1, "c.Py_ReprEnter", "object"]], "Py_ReprLeave": [[23, 3, 1, "c.Py_ReprLeave", "object"]], "Py_SET_REFCNT": [[57, 3, 1, "c.Py_SET_REFCNT", "o"], [57, 3, 1, "c.Py_SET_REFCNT", "refcnt"]], "Py_SET_SIZE": [[57, 3, 1, "c.Py_SET_SIZE", "o"], [57, 3, 1, "c.Py_SET_SIZE", "size"]], "Py_SET_TYPE": [[57, 3, 1, "c.Py_SET_TYPE", "o"], [57, 3, 1, "c.Py_SET_TYPE", "type"]], "Py_SIZE": [[57, 3, 1, "c.Py_SIZE", "o"]], "Py_SetProgramName": [[33, 3, 1, "c.Py_SetProgramName", "name"]], "Py_SetPythonHome": [[33, 3, 1, "c.Py_SetPythonHome", "home"]], "Py_SetStandardStreamEncoding": [[33, 3, 1, "c.Py_SetStandardStreamEncoding", "encoding"], [33, 3, 1, "c.Py_SetStandardStreamEncoding", "errors"]], "Py_TYPE": [[57, 3, 1, "c.Py_TYPE", "o"]], "Py_UNICODE_ISALNUM": [[63, 3, 1, "c.Py_UNICODE_ISALNUM", "ch"]], "Py_UNICODE_ISALPHA": [[63, 3, 1, "c.Py_UNICODE_ISALPHA", "ch"]], "Py_UNICODE_ISDECIMAL": [[63, 3, 1, "c.Py_UNICODE_ISDECIMAL", "ch"]], "Py_UNICODE_ISDIGIT": [[63, 3, 1, "c.Py_UNICODE_ISDIGIT", "ch"]], "Py_UNICODE_ISLINEBREAK": [[63, 3, 1, "c.Py_UNICODE_ISLINEBREAK", "ch"]], "Py_UNICODE_ISLOWER": [[63, 3, 1, "c.Py_UNICODE_ISLOWER", "ch"]], "Py_UNICODE_ISNUMERIC": [[63, 3, 1, "c.Py_UNICODE_ISNUMERIC", "ch"]], "Py_UNICODE_ISPRINTABLE": [[63, 3, 1, "c.Py_UNICODE_ISPRINTABLE", "ch"]], "Py_UNICODE_ISSPACE": [[63, 3, 1, "c.Py_UNICODE_ISSPACE", "ch"]], "Py_UNICODE_ISTITLE": [[63, 3, 1, "c.Py_UNICODE_ISTITLE", "ch"]], "Py_UNICODE_ISUPPER": [[63, 3, 1, "c.Py_UNICODE_ISUPPER", "ch"]], "Py_UNICODE_TODECIMAL": [[63, 3, 1, "c.Py_UNICODE_TODECIMAL", "ch"]], "Py_UNICODE_TODIGIT": [[63, 3, 1, "c.Py_UNICODE_TODIGIT", "ch"]], "Py_UNICODE_TOLOWER": [[63, 3, 1, "c.Py_UNICODE_TOLOWER", "ch"]], "Py_UNICODE_TONUMERIC": [[63, 3, 1, "c.Py_UNICODE_TONUMERIC", "ch"]], "Py_UNICODE_TOTITLE": [[63, 3, 1, "c.Py_UNICODE_TOTITLE", "ch"]], "Py_UNICODE_TOUPPER": [[63, 3, 1, "c.Py_UNICODE_TOUPPER", "ch"]], "Py_VISIT": [[28, 3, 1, "c.Py_VISIT", "o"]], "Py_VaBuildValue": [[5, 3, 1, "c.Py_VaBuildValue", "format"], [5, 3, 1, "c.Py_VaBuildValue", "vargs"]], "Py_XDECREF": [[51, 3, 1, "c.Py_XDECREF", "o"]], "Py_XINCREF": [[51, 3, 1, "c.Py_XINCREF", "o"]], "Py_XNewRef": [[51, 3, 1, "c.Py_XNewRef", "o"]], "Py_buffer": [[7, 0, 1, "c.Py_buffer.buf", "buf"], [7, 0, 1, "c.Py_buffer.format", "format"], [7, 0, 1, "c.Py_buffer.internal", "internal"], [7, 0, 1, "c.Py_buffer.itemsize", "itemsize"], [7, 0, 1, "c.Py_buffer.len", "len"], [7, 0, 1, "c.Py_buffer.ndim", "ndim"], [7, 0, 1, "c.Py_buffer.obj", "obj"], [7, 0, 1, "c.Py_buffer.readonly", "readonly"], [7, 0, 1, "c.Py_buffer.shape", "shape"], [7, 0, 1, "c.Py_buffer.strides", "strides"], [7, 0, 1, "c.Py_buffer.suboffsets", "suboffsets"]], "Py_mod_create": [[45, 2, 1, "c.Py_mod_create.create_module", "create_module"]], "Py_mod_create.create_module": [[45, 3, 1, "c.Py_mod_create.create_module", "def"], [45, 3, 1, "c.Py_mod_create.create_module", "spec"]], "Py_mod_exec": [[45, 2, 1, "c.Py_mod_exec.exec_module", "exec_module"]], "Py_mod_exec.exec_module": [[45, 3, 1, "c.Py_mod_exec.exec_module", "module"]], "_PyBytes_Resize": [[9, 3, 1, "c._PyBytes_Resize", "bytes"], [9, 3, 1, "c._PyBytes_Resize", "newsize"]], "_PyInterpreterState_GetEvalFrameFunc": [[33, 3, 1, "c._PyInterpreterState_GetEvalFrameFunc", "interp"]], "_PyInterpreterState_SetEvalFrameFunc": [[33, 3, 1, "c._PyInterpreterState_SetEvalFrameFunc", "eval_frame"], [33, 3, 1, "c._PyInterpreterState_SetEvalFrameFunc", "interp"]], "_PyObject_GetDictPtr": [[49, 3, 1, "c._PyObject_GetDictPtr", "obj"]], "_PyObject_New": [[3, 3, 1, "c._PyObject_New", "type"]], "_PyObject_NewVar": [[3, 3, 1, "c._PyObject_NewVar", "size"], [3, 3, 1, "c._PyObject_NewVar", "type"]], "_PyTuple_Resize": [[59, 3, 1, "c._PyTuple_Resize", "newsize"], [59, 3, 1, "c._PyTuple_Resize", "p"]], "_Py_c_diff": [[15, 3, 1, "c._Py_c_diff", "left"], [15, 3, 1, "c._Py_c_diff", "right"]], "_Py_c_neg": [[15, 3, 1, "c._Py_c_neg", "num"]], "_Py_c_pow": [[15, 3, 1, "c._Py_c_pow", "exp"], [15, 3, 1, "c._Py_c_pow", "num"]], "_Py_c_prod": [[15, 3, 1, "c._Py_c_prod", "left"], [15, 3, 1, "c._Py_c_prod", "right"]], "_Py_c_quot": [[15, 3, 1, "c._Py_c_quot", "dividend"], [15, 3, 1, "c._Py_c_quot", "divisor"]], "_Py_c_sum": [[15, 3, 1, "c._Py_c_sum", "left"], [15, 3, 1, "c._Py_c_sum", "right"]], "_inittab": [[31, 0, 1, "c._inittab.initfunc", "initfunc"], [31, 0, 1, "c._inittab.name", "name"]], "BaseException": [[227, 7, 1, "", "__cause__"], [227, 7, 1, "", "__context__"], [227, 7, 1, "", "__notes__"], [227, 7, 1, "", "__suppress_context__"], [227, 7, 1, "", "__traceback__"], [227, 8, 1, "", "add_note"], [227, 7, 1, "", "args"], [227, 8, 1, "", "with_traceback"]], "BaseExceptionGroup": [[227, 8, 1, "", "derive"], [227, 7, 1, "", "exceptions"], [227, 7, 1, "", "message"], [227, 8, 1, "", "split"], [227, 8, 1, "", "subgroup"]], "BlockingIOError": [[227, 7, 1, "", "characters_written"]], "ImportError": [[227, 7, 1, "", "name"], [227, 7, 1, "", "path"]], "OSError": [[227, 7, 1, "", "errno"], [227, 7, 1, "", "filename"], [227, 7, 1, "", "filename2"], [227, 7, 1, "", "strerror"], [227, 7, 1, "", "winerror"]], "StopIteration": [[227, 7, 1, "", "value"]], "SyntaxError": [[227, 7, 1, "", "end_lineno"], [227, 7, 1, "", "end_offset"], [227, 7, 1, "", "filename"], [227, 7, 1, "", "lineno"], [227, 7, 1, "", "offset"], [227, 7, 1, "", "text"]], "SystemExit": [[227, 7, 1, "", "code"]], "UnicodeError": [[227, 7, 1, "", "encoding"], [227, 7, 1, "", "end"], [227, 7, 1, "", "object"], [227, 7, 1, "", "reason"], [227, 7, 1, "", "start"]], "__future__": [[124, 11, 1, "future__._Feature", "_Feature"]], "__future__._Feature": [[124, 7, 1, "future__._Feature.compiler_flag", "compiler_flag"], [124, 8, 1, "future__._Feature.getMandatoryRelease", "getMandatoryRelease"], [124, 8, 1, "future__._Feature.getOptionalRelease", "getOptionalRelease"]], "_thread": [[126, 9, 1, "thread.LockType", "LockType"], [126, 9, 1, "thread.TIMEOUT_MAX", "TIMEOUT_MAX"], [126, 12, 1, "thread.allocate_lock", "allocate_lock"], [126, 6, 1, "thread.error", "error"], [126, 12, 1, "thread.exit", "exit"], [126, 12, 1, "thread.get_ident", "get_ident"], [126, 12, 1, "thread.get_native_id", "get_native_id"], [126, 12, 1, "thread.interrupt_main", "interrupt_main"], [126, 12, 1, "thread.stack_size", "stack_size"], [126, 12, 1, "thread.start_new_thread", "start_new_thread"]], "_thread.lock": [[126, 8, 1, "thread.lock.acquire", "acquire"], [126, 8, 1, "thread.lock.locked", "locked"], [126, 8, 1, "thread.lock.release", "release"]], "_tkinter": [[384, 9, 1, "tkinter.EXCEPTION", "EXCEPTION"], [384, 9, 1, "tkinter.READABLE", "READABLE"], [384, 9, 1, "tkinter.WRITABLE", "WRITABLE"]], "_tkinter.Widget.tk": [[384, 8, 1, "tkinter.Widget.tk.createfilehandler", "createfilehandler"], [384, 8, 1, "tkinter.Widget.tk.deletefilehandler", "deletefilehandler"]], "abc": [[127, 11, 1, "", "ABC"], [127, 11, 1, "", "ABCMeta"], [127, 12, 1, "", "abstractclassmethod"], [127, 12, 1, "", "abstractmethod"], [127, 12, 1, "", "abstractproperty"], [127, 12, 1, "", "abstractstaticmethod"], [127, 12, 1, "", "get_cache_token"], [127, 12, 1, "", "update_abstractmethods"]], "abc.ABCMeta": [[127, 8, 1, "", "__subclasshook__"], [127, 8, 1, "", "register"]], "agen": [[445, 8, 1, "", "__anext__"], [445, 8, 1, "", "aclose"], [445, 8, 1, "", "asend"], [445, 8, 1, "", "athrow"]], "aifc.aifc": [[128, 8, 1, "", "aifc"], [128, 8, 1, "", "aiff"], [128, 8, 1, "", "close"], [128, 8, 1, "", "getcompname"], [128, 8, 1, "", "getcomptype"], [128, 8, 1, "", "getframerate"], [128, 8, 1, "", "getmark"], [128, 8, 1, "", "getmarkers"], [128, 8, 1, "", "getnchannels"], [128, 8, 1, "", "getnframes"], [128, 8, 1, "", "getparams"], [128, 8, 1, "", "getsampwidth"], [128, 8, 1, "", "readframes"], [128, 8, 1, "", "rewind"], [128, 8, 1, "", "setcomptype"], [128, 8, 1, "", "setframerate"], [128, 8, 1, "", "setmark"], [128, 8, 1, "", "setnchannels"], [128, 8, 1, "", "setnframes"], [128, 8, 1, "", "setparams"], [128, 8, 1, "", "setpos"], [128, 8, 1, "", "setsampwidth"], [128, 8, 1, "", "tell"], [128, 8, 1, "", "writeframes"], [128, 8, 1, "", "writeframesraw"]], "aifc": [[128, 12, 1, "", "open"]], "argparse": [[131, 11, 1, "", "Action"], [131, 11, 1, "", "ArgumentDefaultsHelpFormatter"], [131, 6, 1, "", "ArgumentError"], [131, 11, 1, "", "ArgumentParser"], [131, 6, 1, "", "ArgumentTypeError"], [131, 11, 1, "", "FileType"], [131, 11, 1, "", "MetavarTypeHelpFormatter"], [131, 11, 1, "", "Namespace"], [131, 11, 1, "", "RawDescriptionHelpFormatter"], [131, 11, 1, "", "RawTextHelpFormatter"]], "argparse.ArgumentParser": [[131, 8, 1, "", "add_argument"], [131, 8, 1, "", "add_argument_group"], [131, 8, 1, "", "add_mutually_exclusive_group"], [131, 8, 1, "", "add_subparsers"], [131, 8, 1, "", "convert_arg_line_to_args"], [131, 8, 1, "", "error"], [131, 8, 1, "", "exit"], [131, 8, 1, "", "format_help"], [131, 8, 1, "", "format_usage"], [131, 8, 1, "", "get_default"], [131, 8, 1, "", "parse_args"], [131, 8, 1, "", "parse_intermixed_args"], [131, 8, 1, "", "parse_known_args"], [131, 8, 1, "", "parse_known_intermixed_args"], [131, 8, 1, "", "print_help"], [131, 8, 1, "", "print_usage"], [131, 8, 1, "", "set_defaults"]], "array": [[132, 11, 1, "", "array"], [132, 9, 1, "", "typecodes"]], "array.array": [[132, 8, 1, "", "append"], [132, 8, 1, "", "buffer_info"], [132, 8, 1, "", "byteswap"], [132, 8, 1, "", "count"], [132, 8, 1, "", "extend"], [132, 8, 1, "", "frombytes"], [132, 8, 1, "", "fromfile"], [132, 8, 1, "", "fromlist"], [132, 8, 1, "", "fromunicode"], [132, 8, 1, "", "index"], [132, 8, 1, "", "insert"], [132, 7, 1, "", "itemsize"], [132, 8, 1, "", "pop"], [132, 8, 1, "", "remove"], [132, 8, 1, "", "reverse"], [132, 8, 1, "", "tobytes"], [132, 8, 1, "", "tofile"], [132, 8, 1, "", "tolist"], [132, 8, 1, "", "tounicode"], [132, 7, 1, "", "typecode"]], "ast": [[133, 11, 1, "", "AST"], [133, 11, 1, "", "Add"], [133, 11, 1, "", "And"], [133, 11, 1, "", "AnnAssign"], [133, 11, 1, "", "Assert"], [133, 11, 1, "", "Assign"], [133, 11, 1, "", "AsyncFor"], [133, 11, 1, "", "AsyncFunctionDef"], [133, 11, 1, "", "AsyncWith"], [133, 11, 1, "", "Attribute"], [133, 11, 1, "", "AugAssign"], [133, 11, 1, "", "Await"], [133, 11, 1, "", "BinOp"], [133, 11, 1, "", "BitAnd"], [133, 11, 1, "", "BitOr"], [133, 11, 1, "", "BitXor"], [133, 11, 1, "", "BoolOp"], [133, 11, 1, "", "Break"], [133, 11, 1, "", "Call"], [133, 11, 1, "", "ClassDef"], [133, 11, 1, "", "Compare"], [133, 11, 1, "", "Constant"], [133, 11, 1, "", "Continue"], [133, 11, 1, "", "Del"], [133, 11, 1, "", "Delete"], [133, 11, 1, "", "Dict"], [133, 11, 1, "", "DictComp"], [133, 11, 1, "", "Div"], [133, 11, 1, "", "Eq"], [133, 11, 1, "", "ExceptHandler"], [133, 11, 1, "", "Expr"], [133, 11, 1, "", "Expression"], [133, 11, 1, "", "FloorDiv"], [133, 11, 1, "", "For"], [133, 11, 1, "", "FormattedValue"], [133, 11, 1, "", "FunctionDef"], [133, 11, 1, "", "FunctionType"], [133, 11, 1, "", "GeneratorExp"], [133, 11, 1, "", "Global"], [133, 11, 1, "", "Gt"], [133, 11, 1, "", "GtE"], [133, 11, 1, "", "If"], [133, 11, 1, "", "IfExp"], [133, 11, 1, "", "Import"], [133, 11, 1, "", "ImportFrom"], [133, 11, 1, "", "In"], [133, 11, 1, "", "Interactive"], [133, 11, 1, "", "Invert"], [133, 11, 1, "", "Is"], [133, 11, 1, "", "IsNot"], [133, 11, 1, "", "JoinedStr"], [133, 11, 1, "", "LShift"], [133, 11, 1, "", "Lambda"], [133, 11, 1, "", "List"], [133, 11, 1, "", "ListComp"], [133, 11, 1, "", "Load"], [133, 11, 1, "", "Lt"], [133, 11, 1, "", "LtE"], [133, 11, 1, "", "MatMult"], [133, 11, 1, "", "Match"], [133, 11, 1, "", "MatchAs"], [133, 11, 1, "", "MatchClass"], [133, 11, 1, "", "MatchMapping"], [133, 11, 1, "", "MatchOr"], [133, 11, 1, "", "MatchSequence"], [133, 11, 1, "", "MatchSingleton"], [133, 11, 1, "", "MatchStar"], [133, 11, 1, "", "MatchValue"], [133, 11, 1, "", "Mod"], [133, 11, 1, "", "Module"], [133, 11, 1, "", "Mult"], [133, 11, 1, "", "Name"], [133, 11, 1, "", "NamedExpr"], [133, 11, 1, "", "NodeTransformer"], [133, 11, 1, "", "NodeVisitor"], [133, 11, 1, "", "Nonlocal"], [133, 11, 1, "", "Not"], [133, 11, 1, "", "NotEq"], [133, 11, 1, "", "NotIn"], [133, 11, 1, "", "Or"], [133, 11, 1, "", "Pass"], [133, 11, 1, "", "Pow"], [133, 9, 1, "", "PyCF_ALLOW_TOP_LEVEL_AWAIT"], [133, 9, 1, "", "PyCF_ONLY_AST"], [133, 9, 1, "", "PyCF_TYPE_COMMENTS"], [133, 11, 1, "", "RShift"], [133, 11, 1, "", "Raise"], [133, 11, 1, "", "Return"], [133, 11, 1, "", "Set"], [133, 11, 1, "", "SetComp"], [133, 11, 1, "", "Slice"], [133, 11, 1, "", "Starred"], [133, 11, 1, "", "Store"], [133, 11, 1, "", "Sub"], [133, 11, 1, "", "Subscript"], [133, 11, 1, "", "Try"], [133, 11, 1, "", "TryStar"], [133, 11, 1, "", "Tuple"], [133, 11, 1, "", "UAdd"], [133, 11, 1, "", "USub"], [133, 11, 1, "", "UnaryOp"], [133, 11, 1, "", "While"], [133, 11, 1, "", "With"], [133, 11, 1, "", "Yield"], [133, 11, 1, "", "YieldFrom"], [133, 11, 1, "", "alias"], [133, 11, 1, "", "arg"], [133, 11, 1, "", "arguments"], [133, 11, 1, "", "comprehension"], [133, 12, 1, "", "copy_location"], [133, 12, 1, "", "dump"], [133, 12, 1, "", "fix_missing_locations"], [133, 12, 1, "", "get_docstring"], [133, 12, 1, "", "get_source_segment"], [133, 12, 1, "", "increment_lineno"], [133, 12, 1, "", "iter_child_nodes"], [133, 12, 1, "", "iter_fields"], [133, 11, 1, "", "keyword"], [133, 12, 1, "", "literal_eval"], [133, 11, 1, "", "match_case"], [133, 12, 1, "", "parse"], [133, 12, 1, "", "unparse"], [133, 12, 1, "", "walk"], [133, 11, 1, "", "withitem"], [133, 14, 1, "cmdoption-ast-h", "--help"], [133, 14, 1, "cmdoption-ast-a", "--include-attributes"], [133, 14, 1, "cmdoption-ast-indent", "--indent"], [133, 14, 1, "cmdoption-ast-mode", "--mode"], [133, 14, 1, "cmdoption-ast-no-type-comments", "--no-type-comments"], [133, 14, 1, "cmdoption-ast-a", "-a"], [133, 14, 1, "cmdoption-ast-h", "-h"], [133, 14, 1, "cmdoption-ast-i", "-i"], [133, 14, 1, "cmdoption-ast-m", "-m"]], "ast.AST": [[133, 7, 1, "", "_fields"], [133, 7, 1, "", "col_offset"], [133, 7, 1, "", "end_col_offset"], [133, 7, 1, "", "end_lineno"], [133, 7, 1, "", "lineno"]], "ast.Assign": [[133, 7, 1, "", "type_comment"]], "ast.For": [[133, 7, 1, "", "type_comment"]], "ast.FunctionDef": [[133, 7, 1, "", "type_comment"]], "ast.NodeVisitor": [[133, 8, 1, "", "generic_visit"], [133, 8, 1, "", "visit"], [133, 8, 1, "", "visit_Constant"]], "ast.With": [[133, 7, 1, "", "type_comment"]], "ast.arg": [[133, 7, 1, "", "type_comment"]], "asynchat": [[134, 11, 1, "", "async_chat"]], "asynchat.async_chat": [[134, 9, 1, "", "ac_in_buffer_size"], [134, 9, 1, "", "ac_out_buffer_size"], [134, 8, 1, "", "close_when_done"], [134, 8, 1, "", "collect_incoming_data"], [134, 8, 1, "", "discard_buffers"], [134, 8, 1, "", "found_terminator"], [134, 8, 1, "", "get_terminator"], [134, 8, 1, "", "push"], [134, 8, 1, "", "push_with_producer"], [134, 8, 1, "", "set_terminator"]], "asyncio": [[151, 9, 1, "", "ALL_COMPLETED"], [144, 11, 1, "", "AbstractChildWatcher"], [138, 11, 1, "", "AbstractEventLoop"], [144, 11, 1, "", "AbstractEventLoopPolicy"], [150, 11, 1, "", "Barrier"], [145, 11, 1, "", "BaseProtocol"], [145, 11, 1, "", "BaseTransport"], [150, 11, 1, "", "BoundedSemaphore"], [150, 6, 1, "", "BrokenBarrierError"], [145, 11, 1, "", "BufferedProtocol"], [139, 6, 1, "", "CancelledError"], [150, 11, 1, "", "Condition"], [145, 11, 1, "", "DatagramProtocol"], [145, 11, 1, "", "DatagramTransport"], [144, 11, 1, "", "DefaultEventLoopPolicy"], [150, 11, 1, "", "Event"], [151, 9, 1, "", "FIRST_COMPLETED"], [151, 9, 1, "", "FIRST_EXCEPTION"], [144, 11, 1, "", "FastChildWatcher"], [141, 11, 1, "", "Future"], [138, 11, 1, "", "Handle"], [139, 6, 1, "", "IncompleteReadError"], [139, 6, 1, "", "InvalidStateError"], [146, 11, 1, "", "LifoQueue"], [139, 6, 1, "", "LimitOverrunError"], [150, 11, 1, "", "Lock"], [144, 11, 1, "", "MultiLoopChildWatcher"], [144, 11, 1, "", "PidfdChildWatcher"], [146, 11, 1, "", "PriorityQueue"], [138, 11, 1, "", "ProactorEventLoop"], [145, 11, 1, "", "Protocol"], [146, 11, 1, "", "Queue"], [146, 6, 1, "", "QueueEmpty"], [146, 6, 1, "", "QueueFull"], [145, 11, 1, "", "ReadTransport"], [147, 11, 1, "", "Runner"], [144, 11, 1, "", "SafeChildWatcher"], [138, 11, 1, "", "SelectorEventLoop"], [150, 11, 1, "", "Semaphore"], [139, 6, 1, "", "SendfileNotAvailableError"], [138, 11, 1, "", "Server"], [148, 11, 1, "", "StreamReader"], [148, 11, 1, "", "StreamWriter"], [145, 11, 1, "", "SubprocessProtocol"], [145, 11, 1, "", "SubprocessTransport"], [151, 11, 1, "", "Task"], [151, 11, 1, "", "TaskGroup"], [144, 11, 1, "", "ThreadedChildWatcher"], [151, 11, 1, "", "Timeout"], [139, 6, 1, "", "TimeoutError"], [138, 11, 1, "", "TimerHandle"], [145, 11, 1, "", "Transport"], [144, 11, 1, "", "WindowsProactorEventLoopPolicy"], [144, 11, 1, "", "WindowsSelectorEventLoopPolicy"], [145, 11, 1, "", "WriteTransport"], [140, 12, 1, "", "_enter_task"], [140, 12, 1, "", "_leave_task"], [140, 12, 1, "", "_register_task"], [140, 12, 1, "", "_unregister_task"], [151, 12, 1, "", "all_tasks"], [151, 12, 1, "", "as_completed"], [149, 12, 1, "", "create_subprocess_exec"], [149, 12, 1, "", "create_subprocess_shell"], [151, 12, 1, "", "create_task"], [151, 12, 1, "", "current_task"], [141, 12, 1, "", "ensure_future"], [151, 12, 1, "", "gather"], [144, 12, 1, "", "get_child_watcher"], [138, 12, 1, "", "get_event_loop"], [144, 12, 1, "", "get_event_loop_policy"], [138, 12, 1, "", "get_running_loop"], [151, 12, 1, "", "iscoroutine"], [141, 12, 1, "", "isfuture"], [138, 12, 1, "", "new_event_loop"], [148, 12, 1, "", "open_connection"], [148, 12, 1, "", "open_unix_connection"], [147, 12, 1, "", "run"], [151, 12, 1, "", "run_coroutine_threadsafe"], [144, 12, 1, "", "set_child_watcher"], [138, 12, 1, "", "set_event_loop"], [144, 12, 1, "", "set_event_loop_policy"], [151, 12, 1, "", "shield"], [151, 12, 1, "", "sleep"], [148, 12, 1, "", "start_server"], [148, 12, 1, "", "start_unix_server"], [151, 12, 1, "", "timeout"], [151, 12, 1, "", "timeout_at"], [151, 12, 1, "", "to_thread"], [151, 12, 1, "", "wait"], [151, 12, 1, "", "wait_for"], [141, 12, 1, "", "wrap_future"]], "asyncio.AbstractChildWatcher": [[144, 8, 1, "", "add_child_handler"], [144, 8, 1, "", "attach_loop"], [144, 8, 1, "", "close"], [144, 8, 1, "", "is_active"], [144, 8, 1, "", "remove_child_handler"]], "asyncio.AbstractEventLoopPolicy": [[144, 8, 1, "", "get_child_watcher"], [144, 8, 1, "", "get_event_loop"], [144, 8, 1, "", "new_event_loop"], [144, 8, 1, "", "set_child_watcher"], [144, 8, 1, "", "set_event_loop"]], "asyncio.Barrier": [[150, 8, 1, "", "abort"], [150, 7, 1, "", "broken"], [150, 7, 1, "", "n_waiting"], [150, 7, 1, "", "parties"], [150, 8, 1, "", "reset"], [150, 8, 1, "", "wait"]], "asyncio.BaseProtocol": [[145, 8, 1, "", "connection_lost"], [145, 8, 1, "", "connection_made"], [145, 8, 1, "", "pause_writing"], [145, 8, 1, "", "resume_writing"]], "asyncio.BaseTransport": [[145, 8, 1, "", "close"], [145, 8, 1, "", "get_extra_info"], [145, 8, 1, "", "get_protocol"], [145, 8, 1, "", "is_closing"], [145, 8, 1, "", "set_protocol"]], "asyncio.BufferedProtocol": [[145, 8, 1, "", "buffer_updated"], [145, 8, 1, "", "eof_received"], [145, 8, 1, "", "get_buffer"]], "asyncio.Condition": [[150, 8, 1, "", "acquire"], [150, 8, 1, "", "locked"], [150, 8, 1, "", "notify"], [150, 8, 1, "", "notify_all"], [150, 8, 1, "", "release"], [150, 8, 1, "", "wait"], [150, 8, 1, "", "wait_for"]], "asyncio.DatagramProtocol": [[145, 8, 1, "", "datagram_received"], [145, 8, 1, "", "error_received"]], "asyncio.DatagramTransport": [[145, 8, 1, "", "abort"], [145, 8, 1, "", "sendto"]], "asyncio.Event": [[150, 8, 1, "", "clear"], [150, 8, 1, "", "is_set"], [150, 8, 1, "", "set"], [150, 8, 1, "", "wait"]], "asyncio.Future": [[140, 8, 1, "", "__init__"], [141, 8, 1, "", "add_done_callback"], [141, 8, 1, "", "cancel"], [141, 8, 1, "", "cancelled"], [141, 8, 1, "", "done"], [141, 8, 1, "", "exception"], [141, 8, 1, "", "get_loop"], [141, 8, 1, "", "remove_done_callback"], [141, 8, 1, "", "result"], [141, 8, 1, "", "set_exception"], [141, 8, 1, "", "set_result"]], "asyncio.Handle": [[138, 8, 1, "", "cancel"], [138, 8, 1, "", "cancelled"]], "asyncio.IncompleteReadError": [[139, 7, 1, "", "expected"], [139, 7, 1, "", "partial"]], "asyncio.LimitOverrunError": [[139, 7, 1, "", "consumed"]], "asyncio.Lock": [[150, 8, 1, "", "acquire"], [150, 8, 1, "", "locked"], [150, 8, 1, "", "release"]], "asyncio.Protocol": [[145, 8, 1, "", "data_received"], [145, 8, 1, "", "eof_received"]], "asyncio.Queue": [[146, 8, 1, "", "empty"], [146, 8, 1, "", "full"], [146, 8, 1, "", "get"], [146, 8, 1, "", "get_nowait"], [146, 8, 1, "", "join"], [146, 7, 1, "", "maxsize"], [146, 8, 1, "", "put"], [146, 8, 1, "", "put_nowait"], [146, 8, 1, "", "qsize"], [146, 8, 1, "", "task_done"]], "asyncio.ReadTransport": [[145, 8, 1, "", "is_reading"], [145, 8, 1, "", "pause_reading"], [145, 8, 1, "", "resume_reading"]], "asyncio.Runner": [[147, 8, 1, "", "close"], [147, 8, 1, "", "get_loop"], [147, 8, 1, "", "run"]], "asyncio.Semaphore": [[150, 8, 1, "", "acquire"], [150, 8, 1, "", "locked"], [150, 8, 1, "", "release"]], "asyncio.Server": [[138, 8, 1, "", "close"], [138, 8, 1, "", "get_loop"], [138, 8, 1, "", "is_serving"], [138, 8, 1, "", "serve_forever"], [138, 7, 1, "", "sockets"], [138, 8, 1, "", "start_serving"], [138, 8, 1, "", "wait_closed"]], "asyncio.StreamReader": [[148, 8, 1, "", "at_eof"], [148, 8, 1, "", "feed_eof"], [148, 8, 1, "", "read"], [148, 8, 1, "", "readexactly"], [148, 8, 1, "", "readline"], [148, 8, 1, "", "readuntil"]], "asyncio.StreamWriter": [[148, 8, 1, "", "can_write_eof"], [148, 8, 1, "", "close"], [148, 8, 1, "", "drain"], [148, 8, 1, "", "get_extra_info"], [148, 8, 1, "", "is_closing"], [148, 8, 1, "", "start_tls"], [148, 7, 1, "", "transport"], [148, 8, 1, "", "wait_closed"], [148, 8, 1, "", "write"], [148, 8, 1, "", "write_eof"], [148, 8, 1, "", "writelines"]], "asyncio.SubprocessProtocol": [[145, 8, 1, "", "pipe_connection_lost"], [145, 8, 1, "", "pipe_data_received"], [145, 8, 1, "", "process_exited"]], "asyncio.SubprocessTransport": [[145, 8, 1, "", "close"], [145, 8, 1, "", "get_pid"], [145, 8, 1, "", "get_pipe_transport"], [145, 8, 1, "", "get_returncode"], [145, 8, 1, "", "kill"], [145, 8, 1, "", "send_signal"], [145, 8, 1, "", "terminate"]], "asyncio.Task": [[140, 8, 1, "", "__init__"], [151, 8, 1, "", "add_done_callback"], [151, 8, 1, "", "cancel"], [151, 8, 1, "", "cancelled"], [151, 8, 1, "", "cancelling"], [151, 8, 1, "", "done"], [151, 8, 1, "", "exception"], [151, 8, 1, "", "get_coro"], [151, 8, 1, "", "get_name"], [151, 8, 1, "", "get_stack"], [151, 8, 1, "", "print_stack"], [151, 8, 1, "", "remove_done_callback"], [151, 8, 1, "", "result"], [151, 8, 1, "", "set_name"], [151, 8, 1, "", "uncancel"]], "asyncio.TaskGroup": [[151, 8, 1, "", "create_task"]], "asyncio.Timeout": [[151, 8, 1, "", "expired"], [151, 8, 1, "", "reschedule"], [151, 8, 1, "", "when"]], "asyncio.TimerHandle": [[138, 8, 1, "", "when"]], "asyncio.WriteTransport": [[145, 8, 1, "", "abort"], [145, 8, 1, "", "can_write_eof"], [145, 8, 1, "", "get_write_buffer_limits"], [145, 8, 1, "", "get_write_buffer_size"], [145, 8, 1, "", "set_write_buffer_limits"], [145, 8, 1, "", "write"], [145, 8, 1, "", "write_eof"], [145, 8, 1, "", "writelines"]], "asyncio.loop": [[138, 8, 1, "", "add_reader"], [138, 8, 1, "", "add_signal_handler"], [138, 8, 1, "", "add_writer"], [138, 8, 1, "", "call_at"], [138, 8, 1, "", "call_exception_handler"], [138, 8, 1, "", "call_later"], [138, 8, 1, "", "call_soon"], [138, 8, 1, "", "call_soon_threadsafe"], [138, 8, 1, "", "close"], [138, 8, 1, "", "connect_accepted_socket"], [138, 8, 1, "", "connect_read_pipe"], [138, 8, 1, "", "connect_write_pipe"], [138, 8, 1, "", "create_connection"], [138, 8, 1, "", "create_datagram_endpoint"], [138, 8, 1, "", "create_future"], [138, 8, 1, "", "create_server"], [138, 8, 1, "", "create_task"], [138, 8, 1, "", "create_unix_connection"], [138, 8, 1, "", "create_unix_server"], [138, 8, 1, "", "default_exception_handler"], [138, 8, 1, "", "get_debug"], [138, 8, 1, "", "get_exception_handler"], [138, 8, 1, "", "get_task_factory"], [138, 8, 1, "", "getaddrinfo"], [138, 8, 1, "", "getnameinfo"], [138, 8, 1, "", "is_closed"], [138, 8, 1, "", "is_running"], [138, 8, 1, "", "remove_reader"], [138, 8, 1, "", "remove_signal_handler"], [138, 8, 1, "", "remove_writer"], [138, 8, 1, "", "run_forever"], [138, 8, 1, "", "run_in_executor"], [138, 8, 1, "", "run_until_complete"], [138, 8, 1, "", "sendfile"], [138, 8, 1, "", "set_debug"], [138, 8, 1, "", "set_default_executor"], [138, 8, 1, "", "set_exception_handler"], [138, 8, 1, "", "set_task_factory"], [138, 8, 1, "", "shutdown_asyncgens"], [138, 8, 1, "", "shutdown_default_executor"], [138, 7, 1, "", "slow_callback_duration"], [138, 8, 1, "", "sock_accept"], [138, 8, 1, "", "sock_connect"], [138, 8, 1, "", "sock_recv"], [138, 8, 1, "", "sock_recv_into"], [138, 8, 1, "", "sock_recvfrom"], [138, 8, 1, "", "sock_recvfrom_into"], [138, 8, 1, "", "sock_sendall"], [138, 8, 1, "", "sock_sendfile"], [138, 8, 1, "", "sock_sendto"], [138, 8, 1, "", "start_tls"], [138, 8, 1, "", "stop"], [138, 8, 1, "", "subprocess_exec"], [138, 8, 1, "", "subprocess_shell"], [138, 8, 1, "", "time"]], "asyncio.subprocess": [[149, 9, 1, "", "DEVNULL"], [149, 9, 1, "", "PIPE"], [149, 11, 1, "", "Process"], [149, 9, 1, "", "STDOUT"]], "asyncio.subprocess.Process": [[149, 8, 1, "", "communicate"], [149, 8, 1, "", "kill"], [149, 7, 1, "", "pid"], [149, 7, 1, "", "returncode"], [149, 8, 1, "", "send_signal"], [149, 7, 1, "", "stderr"], [149, 7, 1, "", "stdin"], [149, 7, 1, "", "stdout"], [149, 8, 1, "", "terminate"], [149, 8, 1, "", "wait"]], "asyncore": [[152, 11, 1, "", "dispatcher"], [152, 11, 1, "", "dispatcher_with_send"], [152, 11, 1, "", "file_dispatcher"], [152, 11, 1, "", "file_wrapper"], [152, 12, 1, "", "loop"]], "asyncore.dispatcher": [[152, 8, 1, "", "accept"], [152, 8, 1, "", "bind"], [152, 8, 1, "", "close"], [152, 8, 1, "", "connect"], [152, 8, 1, "", "create_socket"], [152, 8, 1, "", "handle_accept"], [152, 8, 1, "", "handle_accepted"], [152, 8, 1, "", "handle_close"], [152, 8, 1, "", "handle_connect"], [152, 8, 1, "", "handle_error"], [152, 8, 1, "", "handle_expt"], [152, 8, 1, "", "handle_read"], [152, 8, 1, "", "handle_write"], [152, 8, 1, "", "listen"], [152, 8, 1, "", "readable"], [152, 8, 1, "", "recv"], [152, 8, 1, "", "send"], [152, 8, 1, "", "writable"]], "atexit": [[153, 12, 1, "", "register"], [153, 12, 1, "", "unregister"]], "audioop": [[154, 12, 1, "", "add"], [154, 12, 1, "", "adpcm2lin"], [154, 12, 1, "", "alaw2lin"], [154, 12, 1, "", "avg"], [154, 12, 1, "", "avgpp"], [154, 12, 1, "", "bias"], [154, 12, 1, "", "byteswap"], [154, 12, 1, "", "cross"], [154, 6, 1, "", "error"], [154, 12, 1, "", "findfactor"], [154, 12, 1, "", "findfit"], [154, 12, 1, "", "findmax"], [154, 12, 1, "", "getsample"], [154, 12, 1, "", "lin2adpcm"], [154, 12, 1, "", "lin2alaw"], [154, 12, 1, "", "lin2lin"], [154, 12, 1, "", "lin2ulaw"], [154, 12, 1, "", "max"], [154, 12, 1, "", "maxpp"], [154, 12, 1, "", "minmax"], [154, 12, 1, "", "mul"], [154, 12, 1, "", "ratecv"], [154, 12, 1, "", "reverse"], [154, 12, 1, "", "rms"], [154, 12, 1, "", "tomono"], [154, 12, 1, "", "tostereo"], [154, 12, 1, "", "ulaw2lin"]], "base64": [[156, 12, 1, "", "a85decode"], [156, 12, 1, "", "a85encode"], [156, 12, 1, "", "b16decode"], [156, 12, 1, "", "b16encode"], [156, 12, 1, "", "b32decode"], [156, 12, 1, "", "b32encode"], [156, 12, 1, "", "b32hexdecode"], [156, 12, 1, "", "b32hexencode"], [156, 12, 1, "", "b64decode"], [156, 12, 1, "", "b64encode"], [156, 12, 1, "", "b85decode"], [156, 12, 1, "", "b85encode"], [156, 12, 1, "", "decode"], [156, 12, 1, "", "decodebytes"], [156, 12, 1, "", "encode"], [156, 12, 1, "", "encodebytes"], [156, 12, 1, "", "standard_b64decode"], [156, 12, 1, "", "standard_b64encode"], [156, 12, 1, "", "urlsafe_b64decode"], [156, 12, 1, "", "urlsafe_b64encode"]], "bdb": [[157, 11, 1, "", "Bdb"], [157, 6, 1, "", "BdbQuit"], [157, 11, 1, "", "Breakpoint"], [157, 12, 1, "", "checkfuncname"], [157, 12, 1, "", "effective"], [157, 12, 1, "", "set_trace"]], "bdb.Bdb": [[157, 8, 1, "", "break_anywhere"], [157, 8, 1, "", "break_here"], [157, 8, 1, "", "canonic"], [157, 8, 1, "", "clear_all_breaks"], [157, 8, 1, "", "clear_all_file_breaks"], [157, 8, 1, "", "clear_bpbynumber"], [157, 8, 1, "", "clear_break"], [157, 8, 1, "", "dispatch_call"], [157, 8, 1, "", "dispatch_exception"], [157, 8, 1, "", "dispatch_line"], [157, 8, 1, "", "dispatch_return"], [157, 8, 1, "", "do_clear"], [157, 8, 1, "", "format_stack_entry"], [157, 8, 1, "", "get_all_breaks"], [157, 8, 1, "", "get_bpbynumber"], [157, 8, 1, "", "get_break"], [157, 8, 1, "", "get_breaks"], [157, 8, 1, "", "get_file_breaks"], [157, 8, 1, "", "get_stack"], [157, 8, 1, "", "is_skipped_line"], [157, 8, 1, "", "reset"], [157, 8, 1, "", "run"], [157, 8, 1, "", "runcall"], [157, 8, 1, "", "runctx"], [157, 8, 1, "", "runeval"], [157, 8, 1, "", "set_break"], [157, 8, 1, "", "set_continue"], [157, 8, 1, "", "set_next"], [157, 8, 1, "", "set_quit"], [157, 8, 1, "", "set_return"], [157, 8, 1, "", "set_step"], [157, 8, 1, "", "set_trace"], [157, 8, 1, "", "set_until"], [157, 8, 1, "", "stop_here"], [157, 8, 1, "", "trace_dispatch"], [157, 8, 1, "", "user_call"], [157, 8, 1, "", "user_exception"], [157, 8, 1, "", "user_line"], [157, 8, 1, "", "user_return"]], "bdb.Breakpoint": [[157, 7, 1, "", "bpbynumber"], [157, 8, 1, "", "bpformat"], [157, 7, 1, "", "bplist"], [157, 8, 1, "", "bpprint"], [157, 7, 1, "", "cond"], [157, 8, 1, "", "deleteMe"], [157, 8, 1, "", "disable"], [157, 8, 1, "", "enable"], [157, 7, 1, "", "enabled"], [157, 7, 1, "", "file"], [157, 7, 1, "", "funcname"], [157, 7, 1, "", "hits"], [157, 7, 1, "", "ignore"], [157, 7, 1, "", "line"], [157, 7, 1, "", "temporary"]], "binascii": [[159, 6, 1, "", "Error"], [159, 6, 1, "", "Incomplete"], [159, 12, 1, "", "a2b_base64"], [159, 12, 1, "", "a2b_hex"], [159, 12, 1, "", "a2b_qp"], [159, 12, 1, "", "a2b_uu"], [159, 12, 1, "", "b2a_base64"], [159, 12, 1, "", "b2a_hex"], [159, 12, 1, "", "b2a_qp"], [159, 12, 1, "", "b2a_uu"], [159, 12, 1, "", "crc32"], [159, 12, 1, "", "crc_hqx"], [159, 12, 1, "", "hexlify"], [159, 12, 1, "", "unhexlify"]], "bisect": [[160, 12, 1, "", "bisect"], [160, 12, 1, "", "bisect_left"], [160, 12, 1, "", "bisect_right"], [160, 12, 1, "", "insort"], [160, 12, 1, "", "insort_left"], [160, 12, 1, "", "insort_right"]], "bytearray": [[360, 8, 1, "", "capitalize"], [360, 8, 1, "", "center"], [360, 8, 1, "", "count"], [360, 8, 1, "", "decode"], [360, 8, 1, "", "endswith"], [360, 8, 1, "", "expandtabs"], [360, 8, 1, "", "find"], [360, 8, 1, "", "fromhex"], [360, 8, 1, "", "hex"], [360, 8, 1, "", "index"], [360, 8, 1, "", "isalnum"], [360, 8, 1, "", "isalpha"], [360, 8, 1, "", "isascii"], [360, 8, 1, "", "isdigit"], [360, 8, 1, "", "islower"], [360, 8, 1, "", "isspace"], [360, 8, 1, "", "istitle"], [360, 8, 1, "", "isupper"], [360, 8, 1, "", "join"], [360, 8, 1, "", "ljust"], [360, 8, 1, "", "lower"], [360, 8, 1, "", "lstrip"], [360, 8, 1, "", "maketrans"], [360, 8, 1, "", "partition"], [360, 8, 1, "", "removeprefix"], [360, 8, 1, "", "removesuffix"], [360, 8, 1, "", "replace"], [360, 8, 1, "", "rfind"], [360, 8, 1, "", "rindex"], [360, 8, 1, "", "rjust"], [360, 8, 1, "", "rpartition"], [360, 8, 1, "", "rsplit"], [360, 8, 1, "", "rstrip"], [360, 8, 1, "", "split"], [360, 8, 1, "", "splitlines"], [360, 8, 1, "", "startswith"], [360, 8, 1, "", "strip"], [360, 8, 1, "", "swapcase"], [360, 8, 1, "", "title"], [360, 8, 1, "", "translate"], [360, 8, 1, "", "upper"], [360, 8, 1, "", "zfill"]], "bytes": [[360, 8, 1, "", "capitalize"], [360, 8, 1, "", "center"], [360, 8, 1, "", "count"], [360, 8, 1, "", "decode"], [360, 8, 1, "", "endswith"], [360, 8, 1, "", "expandtabs"], [360, 8, 1, "", "find"], [360, 8, 1, "", "fromhex"], [360, 8, 1, "", "hex"], [360, 8, 1, "", "index"], [360, 8, 1, "", "isalnum"], [360, 8, 1, "", "isalpha"], [360, 8, 1, "", "isascii"], [360, 8, 1, "", "isdigit"], [360, 8, 1, "", "islower"], [360, 8, 1, "", "isspace"], [360, 8, 1, "", "istitle"], [360, 8, 1, "", "isupper"], [360, 8, 1, "", "join"], [360, 8, 1, "", "ljust"], [360, 8, 1, "", "lower"], [360, 8, 1, "", "lstrip"], [360, 8, 1, "", "maketrans"], [360, 8, 1, "", "partition"], [360, 8, 1, "", "removeprefix"], [360, 8, 1, "", "removesuffix"], [360, 8, 1, "", "replace"], [360, 8, 1, "", "rfind"], [360, 8, 1, "", "rindex"], [360, 8, 1, "", "rjust"], [360, 8, 1, "", "rpartition"], [360, 8, 1, "", "rsplit"], [360, 8, 1, "", "rstrip"], [360, 8, 1, "", "split"], [360, 8, 1, "", "splitlines"], [360, 8, 1, "", "startswith"], [360, 8, 1, "", "strip"], [360, 8, 1, "", "swapcase"], [360, 8, 1, "", "title"], [360, 8, 1, "", "translate"], [360, 8, 1, "", "upper"], [360, 8, 1, "", "zfill"]], "bz2": [[162, 11, 1, "", "BZ2Compressor"], [162, 11, 1, "", "BZ2Decompressor"], [162, 11, 1, "", "BZ2File"], [162, 12, 1, "", "compress"], [162, 12, 1, "", "decompress"], [162, 12, 1, "", "open"]], "bz2.BZ2Compressor": [[162, 8, 1, "", "compress"], [162, 8, 1, "", "flush"]], "bz2.BZ2Decompressor": [[162, 8, 1, "", "decompress"], [162, 7, 1, "", "eof"], [162, 7, 1, "", "needs_input"], [162, 7, 1, "", "unused_data"]], "bz2.BZ2File": [[162, 8, 1, "", "fileno"], [162, 8, 1, "", "peek"], [162, 8, 1, "", "read1"], [162, 8, 1, "", "readable"], [162, 8, 1, "", "readinto"], [162, 8, 1, "", "seekable"], [162, 8, 1, "", "writable"]], "calendar": [[163, 11, 1, "", "Calendar"], [163, 9, 1, "", "FRIDAY"], [163, 11, 1, "", "HTMLCalendar"], [163, 6, 1, "", "IllegalMonthError"], [163, 6, 1, "", "IllegalWeekdayError"], [163, 11, 1, "", "LocaleHTMLCalendar"], [163, 11, 1, "", "LocaleTextCalendar"], [163, 9, 1, "", "MONDAY"], [163, 9, 1, "", "SATURDAY"], [163, 9, 1, "", "SUNDAY"], [163, 9, 1, "", "THURSDAY"], [163, 9, 1, "", "TUESDAY"], [163, 11, 1, "", "TextCalendar"], [163, 9, 1, "", "WEDNESDAY"], [163, 12, 1, "", "calendar"], [163, 9, 1, "", "day_abbr"], [163, 9, 1, "", "day_name"], [163, 12, 1, "", "firstweekday"], [163, 12, 1, "", "isleap"], [163, 12, 1, "", "leapdays"], [163, 12, 1, "", "month"], [163, 9, 1, "", "month_abbr"], [163, 9, 1, "", "month_name"], [163, 12, 1, "", "monthcalendar"], [163, 12, 1, "", "monthrange"], [163, 12, 1, "", "prcal"], [163, 12, 1, "", "prmonth"], [163, 12, 1, "", "setfirstweekday"], [163, 12, 1, "", "timegm"], [163, 12, 1, "", "weekday"], [163, 12, 1, "", "weekheader"], [163, 14, 1, "cmdoption-calendar-css", "--css"], [163, 14, 1, "cmdoption-calendar-encoding", "--encoding"], [163, 14, 1, "cmdoption-calendar-help", "--help"], [163, 14, 1, "cmdoption-calendar-lines", "--lines"], [163, 14, 1, "cmdoption-calendar-locale", "--locale"], [163, 14, 1, "cmdoption-calendar-months", "--months"], [163, 14, 1, "cmdoption-calendar-spacing", "--spacing"], [163, 14, 1, "cmdoption-calendar-type", "--type"], [163, 14, 1, "cmdoption-calendar-width", "--width"], [163, 14, 1, "cmdoption-calendar-locale", "-L"], [163, 14, 1, "cmdoption-calendar-css", "-c"], [163, 14, 1, "cmdoption-calendar-encoding", "-e"], [163, 14, 1, "cmdoption-calendar-help", "-h"], [163, 14, 1, "cmdoption-calendar-lines", "-l"], [163, 14, 1, "cmdoption-calendar-months", "-m"], [163, 14, 1, "cmdoption-calendar-spacing", "-s"], [163, 14, 1, "cmdoption-calendar-type", "-t"], [163, 14, 1, "cmdoption-calendar-width", "-w"], [163, 14, 1, "cmdoption-calendar-arg-month", "month"], [163, 14, 1, "cmdoption-calendar-arg-year", "year"]], "calendar.Calendar": [[163, 8, 1, "", "itermonthdates"], [163, 8, 1, "", "itermonthdays"], [163, 8, 1, "", "itermonthdays2"], [163, 8, 1, "", "itermonthdays3"], [163, 8, 1, "", "itermonthdays4"], [163, 8, 1, "", "iterweekdays"], [163, 8, 1, "", "monthdatescalendar"], [163, 8, 1, "", "monthdays2calendar"], [163, 8, 1, "", "monthdayscalendar"], [163, 8, 1, "", "yeardatescalendar"], [163, 8, 1, "", "yeardays2calendar"], [163, 8, 1, "", "yeardayscalendar"]], "calendar.HTMLCalendar": [[163, 7, 1, "", "cssclass_month"], [163, 7, 1, "", "cssclass_month_head"], [163, 7, 1, "", "cssclass_noday"], [163, 7, 1, "", "cssclass_year"], [163, 7, 1, "", "cssclass_year_head"], [163, 7, 1, "", "cssclasses"], [163, 7, 1, "", "cssclasses_weekday_head"], [163, 8, 1, "", "formatmonth"], [163, 8, 1, "", "formatmonthname"], [163, 8, 1, "", "formatyear"], [163, 8, 1, "", "formatyearpage"]], "calendar.IllegalMonthError": [[163, 7, 1, "", "month"]], "calendar.IllegalWeekdayError": [[163, 7, 1, "", "weekday"]], "calendar.TextCalendar": [[163, 8, 1, "", "formatmonth"], [163, 8, 1, "", "formatyear"], [163, 8, 1, "", "prmonth"], [163, 8, 1, "", "pryear"]], "cgi.FieldStorage": [[164, 8, 1, "", "getfirst"], [164, 8, 1, "", "getlist"]], "cgi": [[164, 12, 1, "", "parse"], [164, 12, 1, "", "parse_header"], [164, 12, 1, "", "parse_multipart"], [164, 12, 1, "", "print_directory"], [164, 12, 1, "", "print_environ"], [164, 12, 1, "", "print_environ_usage"], [164, 12, 1, "", "print_form"], [164, 12, 1, "", "test"]], "cgitb": [[165, 12, 1, "", "enable"], [165, 12, 1, "", "handler"], [165, 12, 1, "", "html"], [165, 12, 1, "", "text"]], "chunk": [[166, 11, 1, "", "Chunk"]], "chunk.Chunk": [[166, 8, 1, "", "close"], [166, 8, 1, "", "getname"], [166, 8, 1, "", "getsize"], [166, 8, 1, "", "isatty"], [166, 8, 1, "", "read"], [166, 8, 1, "", "seek"], [166, 8, 1, "", "skip"], [166, 8, 1, "", "tell"]], "class": [[360, 7, 1, "", "__bases__"], [443, 8, 1, "", "__instancecheck__"], [360, 7, 1, "", "__mro__"], [443, 8, 1, "", "__subclasscheck__"], [360, 8, 1, "", "__subclasses__"], [360, 8, 1, "", "mro"]], "cmath": [[167, 12, 1, "", "acos"], [167, 12, 1, "", "acosh"], [167, 12, 1, "", "asin"], [167, 12, 1, "", "asinh"], [167, 12, 1, "", "atan"], [167, 12, 1, "", "atanh"], [167, 12, 1, "", "cos"], [167, 12, 1, "", "cosh"], [167, 9, 1, "", "e"], [167, 12, 1, "", "exp"], [167, 9, 1, "", "inf"], [167, 9, 1, "", "infj"], [167, 12, 1, "", "isclose"], [167, 12, 1, "", "isfinite"], [167, 12, 1, "", "isinf"], [167, 12, 1, "", "isnan"], [167, 12, 1, "", "log"], [167, 12, 1, "", "log10"], [167, 9, 1, "", "nan"], [167, 9, 1, "", "nanj"], [167, 12, 1, "", "phase"], [167, 9, 1, "", "pi"], [167, 12, 1, "", "polar"], [167, 12, 1, "", "rect"], [167, 12, 1, "", "sin"], [167, 12, 1, "", "sinh"], [167, 12, 1, "", "sqrt"], [167, 12, 1, "", "tan"], [167, 12, 1, "", "tanh"], [167, 9, 1, "", "tau"]], "cmd": [[168, 11, 1, "", "Cmd"]], "cmd.Cmd": [[168, 8, 1, "", "cmdloop"], [168, 7, 1, "", "cmdqueue"], [168, 8, 1, "", "columnize"], [168, 8, 1, "", "completedefault"], [168, 8, 1, "", "default"], [168, 8, 1, "", "do_help"], [168, 7, 1, "", "doc_header"], [168, 8, 1, "", "emptyline"], [168, 7, 1, "", "identchars"], [168, 7, 1, "", "intro"], [168, 7, 1, "", "lastcmd"], [168, 7, 1, "", "misc_header"], [168, 8, 1, "", "onecmd"], [168, 8, 1, "", "postcmd"], [168, 8, 1, "", "postloop"], [168, 8, 1, "", "precmd"], [168, 8, 1, "", "preloop"], [168, 7, 1, "", "prompt"], [168, 7, 1, "", "ruler"], [168, 7, 1, "", "undoc_header"], [168, 7, 1, "", "use_rawinput"]], "code": [[170, 11, 1, "", "InteractiveConsole"], [170, 11, 1, "", "InteractiveInterpreter"], [170, 12, 1, "", "compile_command"], [170, 12, 1, "", "interact"]], "code.InteractiveConsole": [[170, 8, 1, "", "interact"], [170, 8, 1, "", "push"], [170, 8, 1, "", "raw_input"], [170, 8, 1, "", "resetbuffer"]], "code.InteractiveInterpreter": [[170, 8, 1, "", "runcode"], [170, 8, 1, "", "runsource"], [170, 8, 1, "", "showsyntaxerror"], [170, 8, 1, "", "showtraceback"], [170, 8, 1, "", "write"]], "codecs": [[171, 9, 1, "", "BOM"], [171, 9, 1, "", "BOM_BE"], [171, 9, 1, "", "BOM_LE"], [171, 9, 1, "", "BOM_UTF16"], [171, 9, 1, "", "BOM_UTF16_BE"], [171, 9, 1, "", "BOM_UTF16_LE"], [171, 9, 1, "", "BOM_UTF32"], [171, 9, 1, "", "BOM_UTF32_BE"], [171, 9, 1, "", "BOM_UTF32_LE"], [171, 9, 1, "", "BOM_UTF8"], [171, 11, 1, "", "Codec"], [171, 11, 1, "", "CodecInfo"], [171, 12, 1, "", "EncodedFile"], [171, 11, 1, "", "IncrementalDecoder"], [171, 11, 1, "", "IncrementalEncoder"], [171, 11, 1, "", "StreamReader"], [171, 11, 1, "", "StreamReaderWriter"], [171, 11, 1, "", "StreamRecoder"], [171, 11, 1, "", "StreamWriter"], [171, 12, 1, "", "backslashreplace_errors"], [171, 12, 1, "", "decode"], [171, 12, 1, "", "encode"], [171, 12, 1, "", "getdecoder"], [171, 12, 1, "", "getencoder"], [171, 12, 1, "", "getincrementaldecoder"], [171, 12, 1, "", "getincrementalencoder"], [171, 12, 1, "", "getreader"], [171, 12, 1, "", "getwriter"], [171, 12, 1, "", "ignore_errors"], [171, 12, 1, "", "iterdecode"], [171, 12, 1, "", "iterencode"], [171, 12, 1, "", "lookup"], [171, 12, 1, "", "lookup_error"], [171, 12, 1, "", "namereplace_errors"], [171, 12, 1, "", "open"], [171, 12, 1, "", "register"], [171, 12, 1, "", "register_error"], [171, 12, 1, "", "replace_errors"], [171, 12, 1, "", "strict_errors"], [171, 12, 1, "", "unregister"], [171, 12, 1, "", "xmlcharrefreplace_errors"]], "codecs.Codec": [[171, 8, 1, "", "decode"], [171, 8, 1, "", "encode"]], "codecs.CodecInfo": [[171, 7, 1, "", "decode"], [171, 7, 1, "", "encode"], [171, 7, 1, "", "incrementaldecoder"], [171, 7, 1, "", "incrementalencoder"], [171, 7, 1, "", "name"], [171, 7, 1, "", "streamreader"], [171, 7, 1, "", "streamwriter"]], "codecs.IncrementalDecoder": [[171, 8, 1, "", "decode"], [171, 8, 1, "", "getstate"], [171, 8, 1, "", "reset"], [171, 8, 1, "", "setstate"]], "codecs.IncrementalEncoder": [[171, 8, 1, "", "encode"], [171, 8, 1, "", "getstate"], [171, 8, 1, "", "reset"], [171, 8, 1, "", "setstate"]], "codecs.StreamReader": [[171, 8, 1, "", "read"], [171, 8, 1, "", "readline"], [171, 8, 1, "", "readlines"], [171, 8, 1, "", "reset"]], "codecs.StreamWriter": [[171, 8, 1, "", "reset"], [171, 8, 1, "", "write"], [171, 8, 1, "", "writelines"]], "codeobject": [[443, 7, 1, "", "co_argcount"], [443, 7, 1, "", "co_cellvars"], [443, 7, 1, "", "co_code"], [443, 7, 1, "", "co_consts"], [443, 7, 1, "", "co_filename"], [443, 7, 1, "", "co_firstlineno"], [443, 7, 1, "", "co_flags"], [443, 7, 1, "", "co_freevars"], [443, 7, 1, "", "co_kwonlyargcount"], [443, 8, 1, "", "co_lines"], [443, 7, 1, "", "co_lnotab"], [443, 7, 1, "", "co_name"], [443, 7, 1, "", "co_names"], [443, 7, 1, "", "co_nlocals"], [443, 8, 1, "", "co_positions"], [443, 7, 1, "", "co_posonlyargcount"], [443, 7, 1, "", "co_qualname"], [443, 7, 1, "", "co_stacksize"], [443, 7, 1, "", "co_varnames"], [443, 8, 1, "", "replace"]], "codeop": [[172, 11, 1, "", "CommandCompiler"], [172, 11, 1, "", "Compile"], [172, 12, 1, "", "compile_command"]], "collections": [[173, 11, 1, "", "ChainMap"], [173, 11, 1, "", "Counter"], [173, 11, 1, "", "OrderedDict"], [173, 11, 1, "", "UserDict"], [173, 11, 1, "", "UserList"], [173, 11, 1, "", "UserString"], [174, 10, 0, "-", "abc"], [173, 11, 1, "", "defaultdict"], [173, 11, 1, "", "deque"], [173, 12, 1, "", "namedtuple"]], "collections.ChainMap": [[173, 7, 1, "", "maps"], [173, 8, 1, "", "new_child"], [173, 7, 1, "", "parents"]], "collections.Counter": [[173, 8, 1, "", "elements"], [173, 8, 1, "", "fromkeys"], [173, 8, 1, "", "most_common"], [173, 8, 1, "", "subtract"], [173, 8, 1, "", "total"], [173, 8, 1, "", "update"]], "collections.OrderedDict": [[173, 8, 1, "", "move_to_end"], [173, 8, 1, "", "popitem"]], "collections.UserDict": [[173, 7, 1, "", "data"]], "collections.UserList": [[173, 7, 1, "", "data"]], "collections.UserString": [[173, 7, 1, "", "data"]], "collections.abc": [[174, 11, 1, "", "AsyncGenerator"], [174, 11, 1, "", "AsyncIterable"], [174, 11, 1, "", "AsyncIterator"], [174, 11, 1, "", "Awaitable"], [174, 11, 1, "", "ByteString"], [174, 11, 1, "", "Callable"], [174, 11, 1, "", "Collection"], [174, 11, 1, "", "Container"], [174, 11, 1, "", "Coroutine"], [174, 11, 1, "", "Generator"], [174, 11, 1, "", "Hashable"], [174, 11, 1, "", "ItemsView"], [174, 11, 1, "", "Iterable"], [174, 11, 1, "", "Iterator"], [174, 11, 1, "", "KeysView"], [174, 11, 1, "", "Mapping"], [174, 11, 1, "", "MappingView"], [174, 11, 1, "", "MutableMapping"], [174, 11, 1, "", "MutableSequence"], [174, 11, 1, "", "MutableSet"], [174, 11, 1, "", "Reversible"], [174, 11, 1, "", "Sequence"], [174, 11, 1, "", "Set"], [174, 11, 1, "", "Sized"], [174, 11, 1, "", "ValuesView"]], "collections.defaultdict": [[173, 8, 1, "", "__missing__"], [173, 7, 1, "", "default_factory"]], "collections.deque": [[173, 8, 1, "", "append"], [173, 8, 1, "", "appendleft"], [173, 8, 1, "", "clear"], [173, 8, 1, "", "copy"], [173, 8, 1, "", "count"], [173, 8, 1, "", "extend"], [173, 8, 1, "", "extendleft"], [173, 8, 1, "", "index"], [173, 8, 1, "", "insert"], [173, 7, 1, "", "maxlen"], [173, 8, 1, "", "pop"], [173, 8, 1, "", "popleft"], [173, 8, 1, "", "remove"], [173, 8, 1, "", "reverse"], [173, 8, 1, "", "rotate"]], "collections.somenamedtuple": [[173, 8, 1, "", "_asdict"], [173, 7, 1, "", "_field_defaults"], [173, 7, 1, "", "_fields"], [173, 8, 1, "", "_make"], [173, 8, 1, "", "_replace"]], "colorsys": [[175, 12, 1, "", "hls_to_rgb"], [175, 12, 1, "", "hsv_to_rgb"], [175, 12, 1, "", "rgb_to_hls"], [175, 12, 1, "", "rgb_to_hsv"], [175, 12, 1, "", "rgb_to_yiq"], [175, 12, 1, "", "yiq_to_rgb"]], "compileall": [[176, 12, 1, "", "compile_dir"], [176, 12, 1, "", "compile_file"], [176, 12, 1, "", "compile_path"], [176, 14, 1, "cmdoption-compileall-hardlink-dupes", "--hardlink-dupes"], [176, 14, 1, "cmdoption-compileall-invalidation-mode", "--invalidation-mode"], [176, 14, 1, "cmdoption-compileall-b", "-b"], [176, 14, 1, "cmdoption-compileall-d", "-d"], [176, 14, 1, "cmdoption-compileall-e", "-e"], [176, 14, 1, "cmdoption-compileall-f", "-f"], [176, 14, 1, "cmdoption-compileall-i", "-i"], [176, 14, 1, "cmdoption-compileall-j", "-j"], [176, 14, 1, "cmdoption-compileall-l", "-l"], [176, 14, 1, "cmdoption-compileall-o", "-o"], [176, 14, 1, "cmdoption-compileall-p", "-p"], [176, 14, 1, "cmdoption-compileall-q", "-q"], [176, 14, 1, "cmdoption-compileall-r", "-r"], [176, 14, 1, "cmdoption-compileall-s", "-s"], [176, 14, 1, "cmdoption-compileall-x", "-x"], [176, 14, 1, "cmdoption-compileall-arg-directory", "directory"], [176, 14, 1, "cmdoption-compileall-arg-file", "file"]], "concurrent": [[179, 10, 0, "-", "futures"]], "concurrent.futures": [[179, 9, 1, "", "ALL_COMPLETED"], [179, 6, 1, "", "BrokenExecutor"], [179, 6, 1, "", "CancelledError"], [179, 11, 1, "", "Executor"], [179, 9, 1, "", "FIRST_COMPLETED"], [179, 9, 1, "", "FIRST_EXCEPTION"], [179, 11, 1, "", "Future"], [179, 6, 1, "", "InvalidStateError"], [179, 11, 1, "", "ProcessPoolExecutor"], [179, 11, 1, "", "ThreadPoolExecutor"], [179, 6, 1, "", "TimeoutError"], [179, 12, 1, "", "as_completed"], [179, 12, 1, "", "wait"]], "concurrent.futures.Executor": [[179, 8, 1, "", "map"], [179, 8, 1, "", "shutdown"], [179, 8, 1, "", "submit"]], "concurrent.futures.Future": [[179, 8, 1, "", "add_done_callback"], [179, 8, 1, "", "cancel"], [179, 8, 1, "", "cancelled"], [179, 8, 1, "", "done"], [179, 8, 1, "", "exception"], [179, 8, 1, "", "result"], [179, 8, 1, "", "running"], [179, 8, 1, "", "set_exception"], [179, 8, 1, "", "set_result"], [179, 8, 1, "", "set_running_or_notify_cancel"]], "concurrent.futures.process": [[179, 6, 1, "", "BrokenProcessPool"]], "concurrent.futures.thread": [[179, 6, 1, "", "BrokenThreadPool"]], "configparser": [[180, 11, 1, "", "BasicInterpolation"], [180, 11, 1, "", "ConfigParser"], [180, 6, 1, "", "DuplicateOptionError"], [180, 6, 1, "", "DuplicateSectionError"], [180, 6, 1, "", "Error"], [180, 11, 1, "", "ExtendedInterpolation"], [180, 6, 1, "", "InterpolationDepthError"], [180, 6, 1, "", "InterpolationError"], [180, 6, 1, "", "InterpolationMissingOptionError"], [180, 6, 1, "", "InterpolationSyntaxError"], [180, 9, 1, "", "MAX_INTERPOLATION_DEPTH"], [180, 6, 1, "", "MissingSectionHeaderError"], [180, 6, 1, "", "NoOptionError"], [180, 6, 1, "", "NoSectionError"], [180, 6, 1, "", "ParsingError"], [180, 11, 1, "", "RawConfigParser"]], "configparser.ConfigParser": [[180, 7, 1, "", "BOOLEAN_STATES"], [180, 7, 1, "", "SECTCRE"], [180, 8, 1, "", "add_section"], [180, 8, 1, "", "defaults"], [180, 8, 1, "", "get"], [180, 8, 1, "", "getboolean"], [180, 8, 1, "", "getfloat"], [180, 8, 1, "", "getint"], [180, 8, 1, "", "has_option"], [180, 8, 1, "", "has_section"], [180, 8, 1, "", "items"], [180, 8, 1, "", "options"], [180, 8, 1, "", "optionxform"], [180, 8, 1, "", "read"], [180, 8, 1, "", "read_dict"], [180, 8, 1, "", "read_file"], [180, 8, 1, "", "read_string"], [180, 8, 1, "", "readfp"], [180, 8, 1, "", "remove_option"], [180, 8, 1, "", "remove_section"], [180, 8, 1, "", "sections"], [180, 8, 1, "", "set"], [180, 8, 1, "", "write"]], "configparser.RawConfigParser": [[180, 8, 1, "", "add_section"], [180, 8, 1, "", "set"]], "container": [[360, 8, 1, "", "__iter__"]], "contextlib": [[182, 11, 1, "", "AbstractAsyncContextManager"], [182, 11, 1, "", "AbstractContextManager"], [182, 11, 1, "", "AsyncContextDecorator"], [182, 11, 1, "", "AsyncExitStack"], [182, 11, 1, "", "ContextDecorator"], [182, 11, 1, "", "ExitStack"], [182, 12, 1, "", "aclosing"], [182, 12, 1, "", "asynccontextmanager"], [182, 12, 1, "", "chdir"], [182, 12, 1, "", "closing"], [182, 12, 1, "", "contextmanager"], [182, 12, 1, "", "nullcontext"], [182, 12, 1, "", "redirect_stderr"], [182, 12, 1, "", "redirect_stdout"], [182, 12, 1, "", "suppress"]], "contextlib.AsyncExitStack": [[182, 8, 1, "", "aclose"], [182, 8, 1, "", "enter_async_context"], [182, 8, 1, "", "push_async_callback"], [182, 8, 1, "", "push_async_exit"]], "contextlib.ExitStack": [[182, 8, 1, "", "callback"], [182, 8, 1, "", "close"], [182, 8, 1, "", "enter_context"], [182, 8, 1, "", "pop_all"], [182, 8, 1, "", "push"]], "contextmanager": [[360, 8, 1, "", "__enter__"], [360, 8, 1, "", "__exit__"]], "contextvars": [[183, 11, 1, "", "Context"], [183, 11, 1, "", "ContextVar"], [183, 11, 1, "", "Token"], [183, 12, 1, "", "copy_context"]], "contextvars.Context": [[183, 8, 1, "", "copy"], [183, 8, 1, "", "get"], [183, 8, 1, "", "items"], [183, 8, 1, "", "keys"], [183, 8, 1, "", "run"], [183, 8, 1, "", "values"]], "contextvars.ContextVar": [[183, 8, 1, "", "get"], [183, 7, 1, "", "name"], [183, 8, 1, "", "reset"], [183, 8, 1, "", "set"]], "contextvars.Token": [[183, 7, 1, "", "MISSING"], [183, 7, 1, "", "old_value"], [183, 7, 1, "", "var"]], "copy": [[184, 6, 1, "", "Error"], [184, 12, 1, "", "copy"], [184, 12, 1, "", "deepcopy"]], "copyreg": [[185, 12, 1, "", "constructor"], [185, 12, 1, "", "pickle"]], "coroutine": [[443, 8, 1, "", "close"], [443, 8, 1, "", "send"], [443, 8, 1, "", "throw"]], "crypt": [[186, 9, 1, "", "METHOD_BLOWFISH"], [186, 9, 1, "", "METHOD_CRYPT"], [186, 9, 1, "", "METHOD_MD5"], [186, 9, 1, "", "METHOD_SHA256"], [186, 9, 1, "", "METHOD_SHA512"], [186, 12, 1, "", "crypt"], [186, 7, 1, "", "methods"], [186, 12, 1, "", "mksalt"]], "csv": [[188, 11, 1, "", "Dialect"], [188, 11, 1, "", "DictReader"], [188, 11, 1, "", "DictWriter"], [188, 6, 1, "", "Error"], [188, 9, 1, "", "QUOTE_ALL"], [188, 9, 1, "", "QUOTE_MINIMAL"], [188, 9, 1, "", "QUOTE_NONE"], [188, 9, 1, "", "QUOTE_NONNUMERIC"], [188, 11, 1, "", "Sniffer"], [188, 11, 1, "", "excel"], [188, 11, 1, "", "excel_tab"], [188, 12, 1, "", "field_size_limit"], [188, 12, 1, "", "get_dialect"], [188, 12, 1, "", "list_dialects"], [188, 12, 1, "", "reader"], [188, 12, 1, "", "register_dialect"], [188, 11, 1, "", "unix_dialect"], [188, 12, 1, "", "unregister_dialect"], [188, 12, 1, "", "writer"]], "csv.Dialect": [[188, 7, 1, "", "delimiter"], [188, 7, 1, "", "doublequote"], [188, 7, 1, "", "escapechar"], [188, 7, 1, "", "lineterminator"], [188, 7, 1, "", "quotechar"], [188, 7, 1, "", "quoting"], [188, 7, 1, "", "skipinitialspace"], [188, 7, 1, "", "strict"]], "csv.DictReader": [[188, 7, 1, "", "fieldnames"]], "csv.DictWriter": [[188, 8, 1, "", "writeheader"]], "csv.Sniffer": [[188, 8, 1, "", "has_header"], [188, 8, 1, "", "sniff"]], "csv.csvreader": [[188, 8, 1, "", "__next__"], [188, 7, 1, "", "dialect"], [188, 7, 1, "", "line_num"]], "csv.csvwriter": [[188, 7, 1, "", "dialect"], [188, 8, 1, "", "writerow"], [188, 8, 1, "", "writerows"]], "ctypes": [[189, 6, 1, "", "ArgumentError"], [189, 11, 1, "", "Array"], [189, 11, 1, "", "BigEndianStructure"], [189, 11, 1, "", "BigEndianUnion"], [189, 11, 1, "", "CDLL"], [189, 12, 1, "", "CFUNCTYPE"], [189, 12, 1, "", "DllCanUnloadNow"], [189, 12, 1, "", "DllGetClassObject"], [189, 12, 1, "", "FormatError"], [189, 12, 1, "", "GetLastError"], [189, 11, 1, "", "HRESULT"], [189, 11, 1, "", "LibraryLoader"], [189, 11, 1, "", "LittleEndianStructure"], [189, 11, 1, "", "LittleEndianUnion"], [189, 11, 1, "", "OleDLL"], [189, 12, 1, "", "POINTER"], [189, 12, 1, "", "PYFUNCTYPE"], [189, 11, 1, "", "PyDLL"], [189, 11, 1, "", "Structure"], [189, 11, 1, "", "Union"], [189, 12, 1, "", "WINFUNCTYPE"], [189, 11, 1, "", "WinDLL"], [189, 12, 1, "", "WinError"], [189, 11, 1, "", "_CData"], [189, 11, 1, "", "_FuncPtr"], [189, 11, 1, "", "_Pointer"], [189, 11, 1, "", "_SimpleCData"], [189, 12, 1, "", "addressof"], [189, 12, 1, "", "alignment"], [189, 12, 1, "", "byref"], [189, 11, 1, "", "c_bool"], [189, 11, 1, "", "c_byte"], [189, 11, 1, "", "c_char"], [189, 11, 1, "", "c_char_p"], [189, 11, 1, "", "c_double"], [189, 11, 1, "", "c_float"], [189, 11, 1, "", "c_int"], [189, 11, 1, "", "c_int16"], [189, 11, 1, "", "c_int32"], [189, 11, 1, "", "c_int64"], [189, 11, 1, "", "c_int8"], [189, 11, 1, "", "c_long"], [189, 11, 1, "", "c_longdouble"], [189, 11, 1, "", "c_longlong"], [189, 11, 1, "", "c_short"], [189, 11, 1, "", "c_size_t"], [189, 11, 1, "", "c_ssize_t"], [189, 11, 1, "", "c_ubyte"], [189, 11, 1, "", "c_uint"], [189, 11, 1, "", "c_uint16"], [189, 11, 1, "", "c_uint32"], [189, 11, 1, "", "c_uint64"], [189, 11, 1, "", "c_uint8"], [189, 11, 1, "", "c_ulong"], [189, 11, 1, "", "c_ulonglong"], [189, 11, 1, "", "c_ushort"], [189, 11, 1, "", "c_void_p"], [189, 11, 1, "", "c_wchar"], [189, 11, 1, "", "c_wchar_p"], [189, 12, 1, "", "cast"], [189, 12, 1, "", "create_string_buffer"], [189, 12, 1, "", "create_unicode_buffer"], [189, 12, 1, "", "get_errno"], [189, 12, 1, "", "get_last_error"], [189, 12, 1, "", "memmove"], [189, 12, 1, "", "memset"], [189, 12, 1, "", "pointer"], [189, 11, 1, "", "py_object"], [189, 12, 1, "", "resize"], [189, 12, 1, "", "set_errno"], [189, 12, 1, "", "set_last_error"], [189, 12, 1, "", "sizeof"], [189, 12, 1, "", "string_at"], [189, 12, 1, "", "wstring_at"]], "ctypes.Array": [[189, 7, 1, "", "_length_"], [189, 7, 1, "", "_type_"]], "ctypes.LibraryLoader": [[189, 8, 1, "", "LoadLibrary"]], "ctypes.PyDLL": [[189, 7, 1, "", "_handle"], [189, 7, 1, "", "_name"]], "ctypes.Structure": [[189, 7, 1, "", "_anonymous_"], [189, 7, 1, "", "_fields_"], [189, 7, 1, "", "_pack_"]], "ctypes._CData": [[189, 7, 1, "", "_b_base_"], [189, 7, 1, "", "_b_needsfree_"], [189, 7, 1, "", "_objects"], [189, 8, 1, "", "from_address"], [189, 8, 1, "", "from_buffer"], [189, 8, 1, "", "from_buffer_copy"], [189, 8, 1, "", "from_param"], [189, 8, 1, "", "in_dll"]], "ctypes._FuncPtr": [[189, 7, 1, "", "argtypes"], [189, 7, 1, "", "errcheck"], [189, 7, 1, "", "restype"]], "ctypes._Pointer": [[189, 7, 1, "", "_type_"], [189, 7, 1, "", "contents"]], "ctypes._SimpleCData": [[189, 7, 1, "", "value"]], "ctypes.util": [[189, 12, 1, "", "find_library"], [189, 12, 1, "", "find_msvcrt"]], "curses": [[190, 9, 1, "", "ACS_BBSS"], [190, 9, 1, "", "ACS_BLOCK"], [190, 9, 1, "", "ACS_BOARD"], [190, 9, 1, "", "ACS_BSBS"], [190, 9, 1, "", "ACS_BSSB"], [190, 9, 1, "", "ACS_BSSS"], [190, 9, 1, "", "ACS_BTEE"], [190, 9, 1, "", "ACS_BULLET"], [190, 9, 1, "", "ACS_CKBOARD"], [190, 9, 1, "", "ACS_DARROW"], [190, 9, 1, "", "ACS_DEGREE"], [190, 9, 1, "", "ACS_DIAMOND"], [190, 9, 1, "", "ACS_GEQUAL"], [190, 9, 1, "", "ACS_HLINE"], [190, 9, 1, "", "ACS_LANTERN"], [190, 9, 1, "", "ACS_LARROW"], [190, 9, 1, "", "ACS_LEQUAL"], [190, 9, 1, "", "ACS_LLCORNER"], [190, 9, 1, "", "ACS_LRCORNER"], [190, 9, 1, "", "ACS_LTEE"], [190, 9, 1, "", "ACS_NEQUAL"], [190, 9, 1, "", "ACS_PI"], [190, 9, 1, "", "ACS_PLMINUS"], [190, 9, 1, "", "ACS_PLUS"], [190, 9, 1, "", "ACS_RARROW"], [190, 9, 1, "", "ACS_RTEE"], [190, 9, 1, "", "ACS_S1"], [190, 9, 1, "", "ACS_S3"], [190, 9, 1, "", "ACS_S7"], [190, 9, 1, "", "ACS_S9"], [190, 9, 1, "", "ACS_SBBS"], [190, 9, 1, "", "ACS_SBSB"], [190, 9, 1, "", "ACS_SBSS"], [190, 9, 1, "", "ACS_SSBB"], [190, 9, 1, "", "ACS_SSBS"], [190, 9, 1, "", "ACS_SSSB"], [190, 9, 1, "", "ACS_SSSS"], [190, 9, 1, "", "ACS_STERLING"], [190, 9, 1, "", "ACS_TTEE"], [190, 9, 1, "", "ACS_UARROW"], [190, 9, 1, "", "ACS_ULCORNER"], [190, 9, 1, "", "ACS_URCORNER"], [190, 9, 1, "", "ACS_VLINE"], [190, 9, 1, "", "A_ALTCHARSET"], [190, 9, 1, "", "A_ATTRIBUTES"], [190, 9, 1, "", "A_BLINK"], [190, 9, 1, "", "A_BOLD"], [190, 9, 1, "", "A_CHARTEXT"], [190, 9, 1, "", "A_COLOR"], [190, 9, 1, "", "A_DIM"], [190, 9, 1, "", "A_HORIZONTAL"], [190, 9, 1, "", "A_INVIS"], [190, 9, 1, "", "A_ITALIC"], [190, 9, 1, "", "A_LEFT"], [190, 9, 1, "", "A_LOW"], [190, 9, 1, "", "A_NORMAL"], [190, 9, 1, "", "A_PROTECT"], [190, 9, 1, "", "A_REVERSE"], [190, 9, 1, "", "A_RIGHT"], [190, 9, 1, "", "A_STANDOUT"], [190, 9, 1, "", "A_TOP"], [190, 9, 1, "", "A_UNDERLINE"], [190, 9, 1, "", "A_VERTICAL"], [190, 9, 1, "", "BUTTON_ALT"], [190, 9, 1, "", "BUTTON_CTRL"], [190, 9, 1, "", "BUTTON_SHIFT"], [190, 9, 1, "", "BUTTONn_CLICKED"], [190, 9, 1, "", "BUTTONn_DOUBLE_CLICKED"], [190, 9, 1, "", "BUTTONn_PRESSED"], [190, 9, 1, "", "BUTTONn_RELEASED"], [190, 9, 1, "", "BUTTONn_TRIPLE_CLICKED"], [190, 9, 1, "", "COLORS"], [190, 9, 1, "", "COLOR_BLACK"], [190, 9, 1, "", "COLOR_BLUE"], [190, 9, 1, "", "COLOR_CYAN"], [190, 9, 1, "", "COLOR_GREEN"], [190, 9, 1, "", "COLOR_MAGENTA"], [190, 9, 1, "", "COLOR_PAIRS"], [190, 9, 1, "", "COLOR_RED"], [190, 9, 1, "", "COLOR_WHITE"], [190, 9, 1, "", "COLOR_YELLOW"], [190, 9, 1, "", "COLS"], [190, 9, 1, "", "ERR"], [190, 9, 1, "", "KEY_A1"], [190, 9, 1, "", "KEY_A3"], [190, 9, 1, "", "KEY_B2"], [190, 9, 1, "", "KEY_BACKSPACE"], [190, 9, 1, "", "KEY_BEG"], [190, 9, 1, "", "KEY_BREAK"], [190, 9, 1, "", "KEY_BTAB"], [190, 9, 1, "", "KEY_C1"], [190, 9, 1, "", "KEY_C3"], [190, 9, 1, "", "KEY_CANCEL"], [190, 9, 1, "", "KEY_CATAB"], [190, 9, 1, "", "KEY_CLEAR"], [190, 9, 1, "", "KEY_CLOSE"], [190, 9, 1, "", "KEY_COMMAND"], [190, 9, 1, "", "KEY_COPY"], [190, 9, 1, "", "KEY_CREATE"], [190, 9, 1, "", "KEY_CTAB"], [190, 9, 1, "", "KEY_DC"], [190, 9, 1, "", "KEY_DL"], [190, 9, 1, "", "KEY_DOWN"], [190, 9, 1, "", "KEY_EIC"], [190, 9, 1, "", "KEY_END"], [190, 9, 1, "", "KEY_ENTER"], [190, 9, 1, "", "KEY_EOL"], [190, 9, 1, "", "KEY_EOS"], [190, 9, 1, "", "KEY_EXIT"], [190, 9, 1, "", "KEY_F0"], [190, 9, 1, "", "KEY_FIND"], [190, 9, 1, "", "KEY_Fn"], [190, 9, 1, "", "KEY_HELP"], [190, 9, 1, "", "KEY_HOME"], [190, 9, 1, "", "KEY_IC"], [190, 9, 1, "", "KEY_IL"], [190, 9, 1, "", "KEY_LEFT"], [190, 9, 1, "", "KEY_LL"], [190, 9, 1, "", "KEY_MARK"], [190, 9, 1, "", "KEY_MAX"], [190, 9, 1, "", "KEY_MESSAGE"], [190, 9, 1, "", "KEY_MIN"], [190, 9, 1, "", "KEY_MOUSE"], [190, 9, 1, "", "KEY_MOVE"], [190, 9, 1, "", "KEY_NEXT"], [190, 9, 1, "", "KEY_NPAGE"], [190, 9, 1, "", "KEY_OPEN"], [190, 9, 1, "", "KEY_OPTIONS"], [190, 9, 1, "", "KEY_PPAGE"], [190, 9, 1, "", "KEY_PREVIOUS"], [190, 9, 1, "", "KEY_PRINT"], [190, 9, 1, "", "KEY_REDO"], [190, 9, 1, "", "KEY_REFERENCE"], [190, 9, 1, "", "KEY_REFRESH"], [190, 9, 1, "", "KEY_REPLACE"], [190, 9, 1, "", "KEY_RESET"], [190, 9, 1, "", "KEY_RESIZE"], [190, 9, 1, "", "KEY_RESTART"], [190, 9, 1, "", "KEY_RESUME"], [190, 9, 1, "", "KEY_RIGHT"], [190, 9, 1, "", "KEY_SAVE"], [190, 9, 1, "", "KEY_SBEG"], [190, 9, 1, "", "KEY_SCANCEL"], [190, 9, 1, "", "KEY_SCOMMAND"], [190, 9, 1, "", "KEY_SCOPY"], [190, 9, 1, "", "KEY_SCREATE"], [190, 9, 1, "", "KEY_SDC"], [190, 9, 1, "", "KEY_SDL"], [190, 9, 1, "", "KEY_SELECT"], [190, 9, 1, "", "KEY_SEND"], [190, 9, 1, "", "KEY_SEOL"], [190, 9, 1, "", "KEY_SEXIT"], [190, 9, 1, "", "KEY_SF"], [190, 9, 1, "", "KEY_SFIND"], [190, 9, 1, "", "KEY_SHELP"], [190, 9, 1, "", "KEY_SHOME"], [190, 9, 1, "", "KEY_SIC"], [190, 9, 1, "", "KEY_SLEFT"], [190, 9, 1, "", "KEY_SMESSAGE"], [190, 9, 1, "", "KEY_SMOVE"], [190, 9, 1, "", "KEY_SNEXT"], [190, 9, 1, "", "KEY_SOPTIONS"], [190, 9, 1, "", "KEY_SPREVIOUS"], [190, 9, 1, "", "KEY_SPRINT"], [190, 9, 1, "", "KEY_SR"], [190, 9, 1, "", "KEY_SREDO"], [190, 9, 1, "", "KEY_SREPLACE"], [190, 9, 1, "", "KEY_SRESET"], [190, 9, 1, "", "KEY_SRIGHT"], [190, 9, 1, "", "KEY_SRSUME"], [190, 9, 1, "", "KEY_SSAVE"], [190, 9, 1, "", "KEY_SSUSPEND"], [190, 9, 1, "", "KEY_STAB"], [190, 9, 1, "", "KEY_SUNDO"], [190, 9, 1, "", "KEY_SUSPEND"], [190, 9, 1, "", "KEY_UNDO"], [190, 9, 1, "", "KEY_UP"], [190, 9, 1, "", "LINES"], [190, 9, 1, "", "OK"], [190, 9, 1, "", "__version__"], [191, 10, 0, "-", "ascii"], [190, 12, 1, "", "baudrate"], [190, 12, 1, "", "beep"], [190, 12, 1, "", "can_change_color"], [190, 12, 1, "", "cbreak"], [190, 12, 1, "", "color_content"], [190, 12, 1, "", "color_pair"], [190, 12, 1, "", "curs_set"], [190, 12, 1, "", "def_prog_mode"], [190, 12, 1, "", "def_shell_mode"], [190, 12, 1, "", "delay_output"], [190, 12, 1, "", "doupdate"], [190, 12, 1, "", "echo"], [190, 12, 1, "", "endwin"], [190, 12, 1, "", "erasechar"], [190, 6, 1, "", "error"], [190, 12, 1, "", "filter"], [190, 12, 1, "", "flash"], [190, 12, 1, "", "flushinp"], [190, 12, 1, "", "get_escdelay"], [190, 12, 1, "", "get_tabsize"], [190, 12, 1, "", "getmouse"], [190, 12, 1, "", "getsyx"], [190, 12, 1, "", "getwin"], [190, 12, 1, "", "halfdelay"], [190, 12, 1, "", "has_colors"], [190, 12, 1, "", "has_extended_color_support"], [190, 12, 1, "", "has_ic"], [190, 12, 1, "", "has_il"], [190, 12, 1, "", "has_key"], [190, 12, 1, "", "init_color"], [190, 12, 1, "", "init_pair"], [190, 12, 1, "", "initscr"], [190, 12, 1, "", "is_term_resized"], [190, 12, 1, "", "isendwin"], [190, 12, 1, "", "keyname"], [190, 12, 1, "", "killchar"], [190, 12, 1, "", "longname"], [190, 12, 1, "", "meta"], [190, 12, 1, "", "mouseinterval"], [190, 12, 1, "", "mousemask"], [190, 12, 1, "", "napms"], [190, 9, 1, "", "ncurses_version"], [190, 12, 1, "", "newpad"], [190, 12, 1, "", "newwin"], [190, 12, 1, "", "nl"], [190, 12, 1, "", "nocbreak"], [190, 12, 1, "", "noecho"], [190, 12, 1, "", "nonl"], [190, 12, 1, "", "noqiflush"], [190, 12, 1, "", "noraw"], [190, 12, 1, "", "pair_content"], [190, 12, 1, "", "pair_number"], [192, 10, 0, "-", "panel"], [190, 12, 1, "", "putp"], [190, 12, 1, "", "qiflush"], [190, 12, 1, "", "raw"], [190, 12, 1, "", "reset_prog_mode"], [190, 12, 1, "", "reset_shell_mode"], [190, 12, 1, "", "resetty"], [190, 12, 1, "", "resize_term"], [190, 12, 1, "", "resizeterm"], [190, 12, 1, "", "savetty"], [190, 12, 1, "", "set_escdelay"], [190, 12, 1, "", "set_tabsize"], [190, 12, 1, "", "setsyx"], [190, 12, 1, "", "setupterm"], [190, 12, 1, "", "start_color"], [190, 12, 1, "", "termattrs"], [190, 12, 1, "", "termname"], [190, 10, 0, "-", "textpad"], [190, 12, 1, "", "tigetflag"], [190, 12, 1, "", "tigetnum"], [190, 12, 1, "", "tigetstr"], [190, 12, 1, "", "tparm"], [190, 12, 1, "", "typeahead"], [190, 12, 1, "", "unctrl"], [190, 12, 1, "", "unget_wch"], [190, 12, 1, "", "ungetch"], [190, 12, 1, "", "ungetmouse"], [190, 12, 1, "", "update_lines_cols"], [190, 12, 1, "", "use_default_colors"], [190, 12, 1, "", "use_env"], [190, 9, 1, "", "version"], [190, 12, 1, "", "wrapper"]], "curses.ascii": [[191, 9, 1, "", "ACK"], [191, 9, 1, "", "BEL"], [191, 9, 1, "", "BS"], [191, 9, 1, "", "CAN"], [191, 9, 1, "", "CR"], [191, 9, 1, "", "DC1"], [191, 9, 1, "", "DC2"], [191, 9, 1, "", "DC3"], [191, 9, 1, "", "DC4"], [191, 9, 1, "", "DEL"], [191, 9, 1, "", "DLE"], [191, 9, 1, "", "EM"], [191, 9, 1, "", "ENQ"], [191, 9, 1, "", "EOT"], [191, 9, 1, "", "ESC"], [191, 9, 1, "", "ETB"], [191, 9, 1, "", "ETX"], [191, 9, 1, "", "FF"], [191, 9, 1, "", "FS"], [191, 9, 1, "", "GS"], [191, 9, 1, "", "HT"], [191, 9, 1, "", "LF"], [191, 9, 1, "", "NAK"], [191, 9, 1, "", "NL"], [191, 9, 1, "", "NUL"], [191, 9, 1, "", "RS"], [191, 9, 1, "", "SI"], [191, 9, 1, "", "SO"], [191, 9, 1, "", "SOH"], [191, 9, 1, "", "SP"], [191, 9, 1, "", "STX"], [191, 9, 1, "", "SUB"], [191, 9, 1, "", "SYN"], [191, 9, 1, "", "TAB"], [191, 9, 1, "", "US"], [191, 9, 1, "", "VT"], [191, 12, 1, "", "alt"], [191, 12, 1, "", "ascii"], [191, 9, 1, "", "controlnames"], [191, 12, 1, "", "ctrl"], [191, 12, 1, "", "isalnum"], [191, 12, 1, "", "isalpha"], [191, 12, 1, "", "isascii"], [191, 12, 1, "", "isblank"], [191, 12, 1, "", "iscntrl"], [191, 12, 1, "", "isctrl"], [191, 12, 1, "", "isdigit"], [191, 12, 1, "", "isgraph"], [191, 12, 1, "", "islower"], [191, 12, 1, "", "ismeta"], [191, 12, 1, "", "isprint"], [191, 12, 1, "", "ispunct"], [191, 12, 1, "", "isspace"], [191, 12, 1, "", "isupper"], [191, 12, 1, "", "isxdigit"], [191, 12, 1, "", "unctrl"]], "curses.panel.Panel": [[192, 8, 1, "", "above"], [192, 8, 1, "", "below"], [192, 8, 1, "", "bottom"], [192, 8, 1, "", "hidden"], [192, 8, 1, "", "hide"], [192, 8, 1, "", "move"], [192, 8, 1, "", "replace"], [192, 8, 1, "", "set_userptr"], [192, 8, 1, "", "show"], [192, 8, 1, "", "top"], [192, 8, 1, "", "userptr"], [192, 8, 1, "", "window"]], "curses.panel": [[192, 12, 1, "", "bottom_panel"], [192, 12, 1, "", "new_panel"], [192, 12, 1, "", "top_panel"], [192, 12, 1, "", "update_panels"]], "curses.textpad": [[190, 11, 1, "", "Textbox"], [190, 12, 1, "", "rectangle"]], "curses.textpad.Textbox": [[190, 8, 1, "", "do_command"], [190, 8, 1, "", "edit"], [190, 8, 1, "", "gather"], [190, 7, 1, "", "stripspaces"]], "curses.window": [[190, 8, 1, "", "addch"], [190, 8, 1, "", "addnstr"], [190, 8, 1, "", "addstr"], [190, 8, 1, "", "attroff"], [190, 8, 1, "", "attron"], [190, 8, 1, "", "attrset"], [190, 8, 1, "", "bkgd"], [190, 8, 1, "", "bkgdset"], [190, 8, 1, "", "border"], [190, 8, 1, "", "box"], [190, 8, 1, "", "chgat"], [190, 8, 1, "", "clear"], [190, 8, 1, "", "clearok"], [190, 8, 1, "", "clrtobot"], [190, 8, 1, "", "clrtoeol"], [190, 8, 1, "", "cursyncup"], [190, 8, 1, "", "delch"], [190, 8, 1, "", "deleteln"], [190, 8, 1, "", "derwin"], [190, 8, 1, "", "echochar"], [190, 8, 1, "", "enclose"], [190, 7, 1, "", "encoding"], [190, 8, 1, "", "erase"], [190, 8, 1, "", "get_wch"], [190, 8, 1, "", "getbegyx"], [190, 8, 1, "", "getbkgd"], [190, 8, 1, "", "getch"], [190, 8, 1, "", "getkey"], [190, 8, 1, "", "getmaxyx"], [190, 8, 1, "", "getparyx"], [190, 8, 1, "", "getstr"], [190, 8, 1, "", "getyx"], [190, 8, 1, "", "hline"], [190, 8, 1, "", "idcok"], [190, 8, 1, "", "idlok"], [190, 8, 1, "", "immedok"], [190, 8, 1, "", "inch"], [190, 8, 1, "", "insch"], [190, 8, 1, "", "insdelln"], [190, 8, 1, "", "insertln"], [190, 8, 1, "", "insnstr"], [190, 8, 1, "", "insstr"], [190, 8, 1, "", "instr"], [190, 8, 1, "", "is_linetouched"], [190, 8, 1, "", "is_wintouched"], [190, 8, 1, "", "keypad"], [190, 8, 1, "", "leaveok"], [190, 8, 1, "", "move"], [190, 8, 1, "", "mvderwin"], [190, 8, 1, "", "mvwin"], [190, 8, 1, "", "nodelay"], [190, 8, 1, "", "notimeout"], [190, 8, 1, "", "noutrefresh"], [190, 8, 1, "", "overlay"], [190, 8, 1, "", "overwrite"], [190, 8, 1, "", "putwin"], [190, 8, 1, "", "redrawln"], [190, 8, 1, "", "redrawwin"], [190, 8, 1, "", "refresh"], [190, 8, 1, "", "resize"], [190, 8, 1, "", "scroll"], [190, 8, 1, "", "scrollok"], [190, 8, 1, "", "setscrreg"], [190, 8, 1, "", "standend"], [190, 8, 1, "", "standout"], [190, 8, 1, "", "subpad"], [190, 8, 1, "", "subwin"], [190, 8, 1, "", "syncdown"], [190, 8, 1, "", "syncok"], [190, 8, 1, "", "syncup"], [190, 8, 1, "", "timeout"], [190, 8, 1, "", "touchline"], [190, 8, 1, "", "touchwin"], [190, 8, 1, "", "untouchwin"], [190, 8, 1, "", "vline"]], "dataclasses": [[194, 11, 1, "", "Field"], [194, 6, 1, "", "FrozenInstanceError"], [194, 9, 1, "", "KW_ONLY"], [194, 9, 1, "", "MISSING"], [194, 12, 1, "", "asdict"], [194, 12, 1, "", "astuple"], [194, 12, 1, "", "dataclass"], [194, 12, 1, "", "field"], [194, 12, 1, "", "fields"], [194, 12, 1, "", "is_dataclass"], [194, 12, 1, "", "make_dataclass"], [194, 12, 1, "", "replace"]], "datetime": [[196, 9, 1, "", "MAXYEAR"], [196, 9, 1, "", "MINYEAR"], [196, 7, 1, "", "UTC"], [196, 11, 1, "", "date"], [196, 11, 1, "", "datetime"], [196, 11, 1, "", "time"], [196, 11, 1, "", "timedelta"], [196, 11, 1, "", "timezone"], [196, 11, 1, "", "tzinfo"]], "datetime.date": [[196, 8, 1, "", "__format__"], [196, 8, 1, "", "__str__"], [196, 8, 1, "", "ctime"], [196, 7, 1, "", "day"], [196, 8, 1, "", "fromisocalendar"], [196, 8, 1, "", "fromisoformat"], [196, 8, 1, "", "fromordinal"], [196, 8, 1, "", "fromtimestamp"], [196, 8, 1, "", "isocalendar"], [196, 8, 1, "", "isoformat"], [196, 8, 1, "", "isoweekday"], [196, 7, 1, "", "max"], [196, 7, 1, "", "min"], [196, 7, 1, "", "month"], [196, 8, 1, "", "replace"], [196, 7, 1, "", "resolution"], [196, 8, 1, "", "strftime"], [196, 8, 1, "", "timetuple"], [196, 8, 1, "", "today"], [196, 8, 1, "", "toordinal"], [196, 8, 1, "", "weekday"], [196, 7, 1, "", "year"]], "datetime.datetime": [[196, 8, 1, "", "__format__"], [196, 8, 1, "", "__str__"], [196, 8, 1, "", "astimezone"], [196, 8, 1, "", "combine"], [196, 8, 1, "", "ctime"], [196, 8, 1, "", "date"], [196, 7, 1, "", "day"], [196, 8, 1, "", "dst"], [196, 7, 1, "", "fold"], [196, 8, 1, "", "fromisocalendar"], [196, 8, 1, "", "fromisoformat"], [196, 8, 1, "", "fromordinal"], [196, 8, 1, "", "fromtimestamp"], [196, 7, 1, "", "hour"], [196, 8, 1, "", "isocalendar"], [196, 8, 1, "", "isoformat"], [196, 8, 1, "", "isoweekday"], [196, 7, 1, "", "max"], [196, 7, 1, "", "microsecond"], [196, 7, 1, "", "min"], [196, 7, 1, "", "minute"], [196, 7, 1, "", "month"], [196, 8, 1, "", "now"], [196, 8, 1, "", "replace"], [196, 7, 1, "", "resolution"], [196, 7, 1, "", "second"], [196, 8, 1, "", "strftime"], [196, 8, 1, "", "strptime"], [196, 8, 1, "", "time"], [196, 8, 1, "", "timestamp"], [196, 8, 1, "", "timetuple"], [196, 8, 1, "", "timetz"], [196, 8, 1, "", "today"], [196, 8, 1, "", "toordinal"], [196, 7, 1, "", "tzinfo"], [196, 8, 1, "", "tzname"], [196, 8, 1, "", "utcfromtimestamp"], [196, 8, 1, "", "utcnow"], [196, 8, 1, "", "utcoffset"], [196, 8, 1, "", "utctimetuple"], [196, 8, 1, "", "weekday"], [196, 7, 1, "", "year"]], "datetime.time": [[196, 8, 1, "", "__format__"], [196, 8, 1, "", "__str__"], [196, 8, 1, "", "dst"], [196, 7, 1, "", "fold"], [196, 8, 1, "", "fromisoformat"], [196, 7, 1, "", "hour"], [196, 8, 1, "", "isoformat"], [196, 7, 1, "", "max"], [196, 7, 1, "", "microsecond"], [196, 7, 1, "", "min"], [196, 7, 1, "", "minute"], [196, 8, 1, "", "replace"], [196, 7, 1, "", "resolution"], [196, 7, 1, "", "second"], [196, 8, 1, "", "strftime"], [196, 7, 1, "", "tzinfo"], [196, 8, 1, "", "tzname"], [196, 8, 1, "", "utcoffset"]], "datetime.timedelta": [[196, 7, 1, "", "max"], [196, 7, 1, "", "min"], [196, 7, 1, "", "resolution"], [196, 8, 1, "", "total_seconds"]], "datetime.timezone": [[196, 8, 1, "", "dst"], [196, 8, 1, "", "fromutc"], [196, 8, 1, "", "tzname"], [196, 7, 1, "", "utc"], [196, 8, 1, "", "utcoffset"]], "datetime.tzinfo": [[196, 8, 1, "", "dst"], [196, 8, 1, "", "fromutc"], [196, 8, 1, "", "tzname"], [196, 8, 1, "", "utcoffset"]], "dbm": [[197, 10, 0, "-", "dumb"], [197, 6, 1, "", "error"], [197, 10, 0, "-", "gnu"], [197, 10, 0, "-", "ndbm"], [197, 12, 1, "", "open"], [197, 12, 1, "", "whichdb"]], "dbm.dumb.dumbdbm": [[197, 8, 1, "", "close"], [197, 8, 1, "", "sync"]], "dbm.dumb": [[197, 6, 1, "", "error"], [197, 12, 1, "", "open"]], "dbm.gnu": [[197, 6, 1, "", "error"], [197, 12, 1, "", "open"], [197, 9, 1, "", "open_flags"]], "dbm.gnu.gdbm": [[197, 8, 1, "", "close"], [197, 8, 1, "", "firstkey"], [197, 8, 1, "", "nextkey"], [197, 8, 1, "", "reorganize"], [197, 8, 1, "", "sync"]], "dbm.ndbm": [[197, 6, 1, "", "error"], [197, 9, 1, "", "library"], [197, 12, 1, "", "open"]], "dbm.ndbm.ndbm": [[197, 8, 1, "", "close"]], "decimal": [[199, 11, 1, "", "BasicContext"], [199, 11, 1, "", "Clamped"], [199, 11, 1, "", "Context"], [199, 11, 1, "", "Decimal"], [199, 11, 1, "", "DecimalException"], [199, 11, 1, "", "DefaultContext"], [199, 11, 1, "", "DivisionByZero"], [199, 11, 1, "", "ExtendedContext"], [199, 11, 1, "", "FloatOperation"], [199, 9, 1, "", "HAVE_CONTEXTVAR"], [199, 9, 1, "", "HAVE_THREADS"], [199, 11, 1, "", "Inexact"], [199, 11, 1, "", "InvalidOperation"], [199, 9, 1, "", "MAX_EMAX"], [199, 9, 1, "", "MAX_PREC"], [199, 9, 1, "", "MIN_EMIN"], [199, 9, 1, "", "MIN_ETINY"], [199, 11, 1, "", "Overflow"], [199, 9, 1, "", "ROUND_05UP"], [199, 9, 1, "", "ROUND_CEILING"], [199, 9, 1, "", "ROUND_DOWN"], [199, 9, 1, "", "ROUND_FLOOR"], [199, 9, 1, "", "ROUND_HALF_DOWN"], [199, 9, 1, "", "ROUND_HALF_EVEN"], [199, 9, 1, "", "ROUND_HALF_UP"], [199, 9, 1, "", "ROUND_UP"], [199, 11, 1, "", "Rounded"], [199, 11, 1, "", "Subnormal"], [199, 11, 1, "", "Underflow"], [199, 12, 1, "", "getcontext"], [199, 12, 1, "", "localcontext"], [199, 12, 1, "", "setcontext"]], "decimal.Context": [[199, 8, 1, "", "Etiny"], [199, 8, 1, "", "Etop"], [199, 8, 1, "", "abs"], [199, 8, 1, "", "add"], [199, 8, 1, "", "canonical"], [199, 8, 1, "", "clear_flags"], [199, 8, 1, "", "clear_traps"], [199, 8, 1, "", "compare"], [199, 8, 1, "", "compare_signal"], [199, 8, 1, "", "compare_total"], [199, 8, 1, "", "compare_total_mag"], [199, 8, 1, "", "copy"], [199, 8, 1, "", "copy_abs"], [199, 8, 1, "", "copy_decimal"], [199, 8, 1, "", "copy_negate"], [199, 8, 1, "", "copy_sign"], [199, 8, 1, "", "create_decimal"], [199, 8, 1, "", "create_decimal_from_float"], [199, 8, 1, "", "divide"], [199, 8, 1, "", "divide_int"], [199, 8, 1, "", "divmod"], [199, 8, 1, "", "exp"], [199, 8, 1, "", "fma"], [199, 8, 1, "", "is_canonical"], [199, 8, 1, "", "is_finite"], [199, 8, 1, "", "is_infinite"], [199, 8, 1, "", "is_nan"], [199, 8, 1, "", "is_normal"], [199, 8, 1, "", "is_qnan"], [199, 8, 1, "", "is_signed"], [199, 8, 1, "", "is_snan"], [199, 8, 1, "", "is_subnormal"], [199, 8, 1, "", "is_zero"], [199, 8, 1, "", "ln"], [199, 8, 1, "", "log10"], [199, 8, 1, "", "logb"], [199, 8, 1, "", "logical_and"], [199, 8, 1, "", "logical_invert"], [199, 8, 1, "", "logical_or"], [199, 8, 1, "", "logical_xor"], [199, 8, 1, "", "max"], [199, 8, 1, "", "max_mag"], [199, 8, 1, "", "min"], [199, 8, 1, "", "min_mag"], [199, 8, 1, "", "minus"], [199, 8, 1, "", "multiply"], [199, 8, 1, "", "next_minus"], [199, 8, 1, "", "next_plus"], [199, 8, 1, "", "next_toward"], [199, 8, 1, "", "normalize"], [199, 8, 1, "", "number_class"], [199, 8, 1, "", "plus"], [199, 8, 1, "", "power"], [199, 8, 1, "", "quantize"], [199, 8, 1, "", "radix"], [199, 8, 1, "", "remainder"], [199, 8, 1, "", "remainder_near"], [199, 8, 1, "", "rotate"], [199, 8, 1, "", "same_quantum"], [199, 8, 1, "", "scaleb"], [199, 8, 1, "", "shift"], [199, 8, 1, "", "sqrt"], [199, 8, 1, "", "subtract"], [199, 8, 1, "", "to_eng_string"], [199, 8, 1, "", "to_integral_exact"], [199, 8, 1, "", "to_sci_string"]], "decimal.Decimal": [[199, 8, 1, "", "adjusted"], [199, 8, 1, "", "as_integer_ratio"], [199, 8, 1, "", "as_tuple"], [199, 8, 1, "", "canonical"], [199, 8, 1, "", "compare"], [199, 8, 1, "", "compare_signal"], [199, 8, 1, "", "compare_total"], [199, 8, 1, "", "compare_total_mag"], [199, 8, 1, "", "conjugate"], [199, 8, 1, "", "copy_abs"], [199, 8, 1, "", "copy_negate"], [199, 8, 1, "", "copy_sign"], [199, 8, 1, "", "exp"], [199, 8, 1, "", "fma"], [199, 8, 1, "", "from_float"], [199, 8, 1, "", "is_canonical"], [199, 8, 1, "", "is_finite"], [199, 8, 1, "", "is_infinite"], [199, 8, 1, "", "is_nan"], [199, 8, 1, "", "is_normal"], [199, 8, 1, "", "is_qnan"], [199, 8, 1, "", "is_signed"], [199, 8, 1, "", "is_snan"], [199, 8, 1, "", "is_subnormal"], [199, 8, 1, "", "is_zero"], [199, 8, 1, "", "ln"], [199, 8, 1, "", "log10"], [199, 8, 1, "", "logb"], [199, 8, 1, "", "logical_and"], [199, 8, 1, "", "logical_invert"], [199, 8, 1, "", "logical_or"], [199, 8, 1, "", "logical_xor"], [199, 8, 1, "", "max"], [199, 8, 1, "", "max_mag"], [199, 8, 1, "", "min"], [199, 8, 1, "", "min_mag"], [199, 8, 1, "", "next_minus"], [199, 8, 1, "", "next_plus"], [199, 8, 1, "", "next_toward"], [199, 8, 1, "", "normalize"], [199, 8, 1, "", "number_class"], [199, 8, 1, "", "quantize"], [199, 8, 1, "", "radix"], [199, 8, 1, "", "remainder_near"], [199, 8, 1, "", "rotate"], [199, 8, 1, "", "same_quantum"], [199, 8, 1, "", "scaleb"], [199, 8, 1, "", "shift"], [199, 8, 1, "", "sqrt"], [199, 8, 1, "", "to_eng_string"], [199, 8, 1, "", "to_integral"], [199, 8, 1, "", "to_integral_exact"], [199, 8, 1, "", "to_integral_value"]], "definition": [[360, 7, 1, "", "__name__"], [360, 7, 1, "", "__qualname__"]], "dict": [[360, 8, 1, "", "clear"], [360, 8, 1, "", "copy"], [360, 8, 1, "", "fromkeys"], [360, 8, 1, "", "get"], [360, 8, 1, "", "items"], [360, 8, 1, "", "keys"], [360, 8, 1, "", "pop"], [360, 8, 1, "", "popitem"], [360, 8, 1, "", "setdefault"], [360, 8, 1, "", "update"], [360, 8, 1, "", "values"]], "difflib": [[203, 11, 1, "", "Differ"], [203, 11, 1, "", "HtmlDiff"], [203, 12, 1, "", "IS_CHARACTER_JUNK"], [203, 12, 1, "", "IS_LINE_JUNK"], [203, 11, 1, "", "SequenceMatcher"], [203, 12, 1, "", "context_diff"], [203, 12, 1, "", "diff_bytes"], [203, 12, 1, "", "get_close_matches"], [203, 12, 1, "", "ndiff"], [203, 12, 1, "", "restore"], [203, 12, 1, "", "unified_diff"]], "difflib.Differ": [[203, 8, 1, "", "compare"]], "difflib.HtmlDiff": [[203, 8, 1, "", "__init__"], [203, 8, 1, "", "make_file"], [203, 8, 1, "", "make_table"]], "difflib.SequenceMatcher": [[203, 8, 1, "", "find_longest_match"], [203, 8, 1, "", "get_grouped_opcodes"], [203, 8, 1, "", "get_matching_blocks"], [203, 8, 1, "", "get_opcodes"], [203, 8, 1, "", "quick_ratio"], [203, 8, 1, "", "ratio"], [203, 8, 1, "", "real_quick_ratio"], [203, 8, 1, "", "set_seq1"], [203, 8, 1, "", "set_seq2"], [203, 8, 1, "", "set_seqs"]], "dis": [[204, 11, 1, "", "Bytecode"], [204, 11, 1, "", "Instruction"], [204, 11, 1, "", "Positions"], [204, 9, 1, "", "cmp_op"], [204, 12, 1, "", "code_info"], [204, 12, 1, "", "dis"], [204, 12, 1, "", "disassemble"], [204, 12, 1, "", "disco"], [204, 12, 1, "", "distb"], [204, 12, 1, "", "findlabels"], [204, 12, 1, "", "findlinestarts"], [204, 12, 1, "", "get_instructions"], [204, 9, 1, "", "hascompare"], [204, 9, 1, "", "hasconst"], [204, 9, 1, "", "hasfree"], [204, 9, 1, "", "hasjabs"], [204, 9, 1, "", "hasjrel"], [204, 9, 1, "", "haslocal"], [204, 9, 1, "", "hasname"], [204, 9, 1, "", "opmap"], [204, 9, 1, "", "opname"], [204, 12, 1, "", "show_code"], [204, 12, 1, "", "stack_effect"], [204, 14, 1, "cmdoption-dis-h", "--help"], [204, 14, 1, "cmdoption-dis-C", "--show-caches"], [204, 14, 1, "cmdoption-dis-C", "-C"], [204, 14, 1, "cmdoption-dis-h", "-h"]], "dis.Bytecode": [[204, 9, 1, "", "codeobj"], [204, 8, 1, "", "dis"], [204, 9, 1, "", "first_line"], [204, 8, 1, "", "from_traceback"], [204, 8, 1, "", "info"]], "dis.Instruction": [[204, 9, 1, "", "arg"], [204, 9, 1, "", "argrepr"], [204, 9, 1, "", "argval"], [204, 9, 1, "", "is_jump_target"], [204, 9, 1, "", "offset"], [204, 9, 1, "", "opcode"], [204, 9, 1, "", "opname"], [204, 9, 1, "", "positions"], [204, 9, 1, "", "starts_line"]], "dis.Positions": [[204, 9, 1, "", "col_offset"], [204, 9, 1, "", "end_col_offset"], [204, 9, 1, "", "end_lineno"], [204, 9, 1, "", "lineno"]], "distutils": [[71, 10, 0, "-", "archive_util"], [71, 10, 0, "-", "bcppcompiler"], [71, 10, 0, "-", "ccompiler"], [71, 10, 0, "-", "cmd"], [71, 10, 0, "-", "command"], [71, 10, 0, "-", "core"], [71, 10, 0, "-", "cygwinccompiler"], [71, 10, 0, "-", "debug"], [71, 10, 0, "-", "dep_util"], [71, 10, 0, "-", "dir_util"], [71, 10, 0, "-", "dist"], [71, 10, 0, "-", "errors"], [71, 10, 0, "-", "extension"], [71, 10, 0, "-", "fancy_getopt"], [71, 10, 0, "-", "file_util"], [71, 10, 0, "-", "filelist"], [71, 10, 0, "-", "log"], [71, 10, 0, "-", "msvccompiler"], [71, 10, 0, "-", "spawn"], [71, 10, 0, "-", "sysconfig"], [71, 10, 0, "-", "text_file"], [71, 10, 0, "-", "unixccompiler"], [71, 10, 0, "-", "util"], [71, 10, 0, "-", "version"]], "distutils.archive_util": [[71, 12, 1, "", "make_archive"], [71, 12, 1, "", "make_tarball"], [71, 12, 1, "", "make_zipfile"]], "distutils.ccompiler": [[71, 11, 1, "", "CCompiler"], [71, 12, 1, "", "gen_lib_options"], [71, 12, 1, "", "gen_preprocess_options"], [71, 12, 1, "", "get_default_compiler"], [71, 12, 1, "", "new_compiler"], [71, 12, 1, "", "show_compilers"]], "distutils.ccompiler.CCompiler": [[71, 8, 1, "", "add_include_dir"], [71, 8, 1, "", "add_library"], [71, 8, 1, "", "add_library_dir"], [71, 8, 1, "", "add_link_object"], [71, 8, 1, "", "add_runtime_library_dir"], [71, 8, 1, "", "announce"], [71, 8, 1, "", "compile"], [71, 8, 1, "", "create_static_lib"], [71, 8, 1, "", "debug_print"], [71, 8, 1, "", "define_macro"], [71, 8, 1, "", "detect_language"], [71, 8, 1, "", "executable_filename"], [71, 8, 1, "", "execute"], [71, 8, 1, "", "find_library_file"], [71, 8, 1, "", "has_function"], [71, 8, 1, "", "library_dir_option"], [71, 8, 1, "", "library_filename"], [71, 8, 1, "", "library_option"], [71, 8, 1, "", "link"], [71, 8, 1, "", "link_executable"], [71, 8, 1, "", "link_shared_lib"], [71, 8, 1, "", "link_shared_object"], [71, 8, 1, "", "mkpath"], [71, 8, 1, "", "move_file"], [71, 8, 1, "", "object_filenames"], [71, 8, 1, "", "preprocess"], [71, 8, 1, "", "runtime_library_dir_option"], [71, 8, 1, "", "set_executables"], [71, 8, 1, "", "set_include_dirs"], [71, 8, 1, "", "set_libraries"], [71, 8, 1, "", "set_library_dirs"], [71, 8, 1, "", "set_link_objects"], [71, 8, 1, "", "set_runtime_library_dirs"], [71, 8, 1, "", "shared_object_filename"], [71, 8, 1, "", "spawn"], [71, 8, 1, "", "undefine_macro"], [71, 8, 1, "", "warn"]], "distutils.cmd": [[71, 11, 1, "", "Command"]], "distutils.cmd.Command": [[71, 8, 1, "", "finalize_options"], [71, 8, 1, "", "initialize_options"], [71, 8, 1, "", "run"], [71, 7, 1, "", "sub_commands"]], "distutils.command": [[71, 10, 0, "-", "bdist"], [71, 10, 0, "-", "bdist_dumb"], [71, 10, 0, "-", "bdist_packager"], [71, 10, 0, "-", "bdist_rpm"], [71, 10, 0, "-", "build"], [71, 10, 0, "-", "build_clib"], [71, 10, 0, "-", "build_ext"], [71, 10, 0, "-", "build_py"], [71, 10, 0, "-", "build_scripts"], [71, 10, 0, "-", "check"], [71, 10, 0, "-", "clean"], [71, 10, 0, "-", "config"], [71, 10, 0, "-", "install"], [71, 10, 0, "-", "install_data"], [71, 10, 0, "-", "install_headers"], [71, 10, 0, "-", "install_lib"], [71, 10, 0, "-", "install_scripts"], [71, 10, 0, "-", "register"], [71, 10, 0, "-", "sdist"]], "distutils.command.build_py": [[71, 11, 1, "", "build_py"], [71, 11, 1, "", "build_py_2to3"]], "distutils.core": [[71, 11, 1, "", "Command"], [71, 11, 1, "", "Distribution"], [71, 11, 1, "", "Extension"], [71, 12, 1, "", "run_setup"], [71, 12, 1, "", "setup"]], "distutils.dep_util": [[71, 12, 1, "", "newer"], [71, 12, 1, "", "newer_group"], [71, 12, 1, "", "newer_pairwise"]], "distutils.dir_util": [[71, 12, 1, "", "copy_tree"], [71, 12, 1, "", "create_tree"], [71, 12, 1, "", "mkpath"], [71, 12, 1, "", "remove_tree"]], "distutils.fancy_getopt": [[71, 11, 1, "", "FancyGetopt"], [71, 12, 1, "", "fancy_getopt"], [71, 12, 1, "", "wrap_text"]], "distutils.fancy_getopt.FancyGetopt": [[71, 8, 1, "", "generate_help"], [71, 8, 1, "", "get_option_order"], [71, 8, 1, "", "getopt"]], "distutils.file_util": [[71, 12, 1, "", "copy_file"], [71, 12, 1, "", "move_file"], [71, 12, 1, "", "write_file"]], "distutils.sysconfig": [[71, 9, 1, "", "EXEC_PREFIX"], [71, 9, 1, "", "PREFIX"], [71, 12, 1, "", "customize_compiler"], [71, 12, 1, "", "get_config_h_filename"], [71, 12, 1, "", "get_config_var"], [71, 12, 1, "", "get_config_vars"], [71, 12, 1, "", "get_makefile_filename"], [71, 12, 1, "", "get_python_inc"], [71, 12, 1, "", "get_python_lib"], [71, 12, 1, "", "set_python_build"]], "distutils.text_file": [[71, 11, 1, "", "TextFile"]], "distutils.text_file.TextFile": [[71, 8, 1, "", "close"], [71, 8, 1, "", "open"], [71, 8, 1, "", "readline"], [71, 8, 1, "", "readlines"], [71, 8, 1, "", "unreadline"], [71, 8, 1, "", "warn"]], "distutils.util": [[71, 12, 1, "", "byte_compile"], [71, 12, 1, "", "change_root"], [71, 12, 1, "", "check_environ"], [71, 12, 1, "", "convert_path"], [71, 12, 1, "", "execute"], [71, 12, 1, "", "get_platform"], [71, 12, 1, "", "rfc822_escape"], [71, 12, 1, "", "split_quoted"], [71, 12, 1, "", "strtobool"], [71, 12, 1, "", "subst_vars"]], "doctest": [[207, 9, 1, "", "COMPARISON_FLAGS"], [207, 9, 1, "", "DONT_ACCEPT_BLANKLINE"], [207, 9, 1, "", "DONT_ACCEPT_TRUE_FOR_1"], [207, 11, 1, "", "DebugRunner"], [207, 12, 1, "", "DocFileSuite"], [207, 11, 1, "", "DocTest"], [207, 6, 1, "", "DocTestFailure"], [207, 11, 1, "", "DocTestFinder"], [207, 11, 1, "", "DocTestParser"], [207, 11, 1, "", "DocTestRunner"], [207, 12, 1, "", "DocTestSuite"], [207, 9, 1, "", "ELLIPSIS"], [207, 11, 1, "", "Example"], [207, 9, 1, "", "FAIL_FAST"], [207, 9, 1, "", "IGNORE_EXCEPTION_DETAIL"], [207, 9, 1, "", "NORMALIZE_WHITESPACE"], [207, 11, 1, "", "OutputChecker"], [207, 9, 1, "", "REPORTING_FLAGS"], [207, 9, 1, "", "REPORT_CDIFF"], [207, 9, 1, "", "REPORT_NDIFF"], [207, 9, 1, "", "REPORT_ONLY_FIRST_FAILURE"], [207, 9, 1, "", "REPORT_UDIFF"], [207, 9, 1, "", "SKIP"], [207, 6, 1, "", "UnexpectedException"], [207, 12, 1, "", "debug"], [207, 12, 1, "", "debug_src"], [207, 6, 1, "", "failureException"], [207, 12, 1, "", "register_optionflag"], [207, 12, 1, "", "run_docstring_examples"], [207, 12, 1, "", "script_from_examples"], [207, 12, 1, "", "set_unittest_reportflags"], [207, 12, 1, "", "testfile"], [207, 12, 1, "", "testmod"], [207, 12, 1, "", "testsource"]], "doctest.DocTest": [[207, 7, 1, "", "docstring"], [207, 7, 1, "", "examples"], [207, 7, 1, "", "filename"], [207, 7, 1, "", "globs"], [207, 7, 1, "", "lineno"], [207, 7, 1, "", "name"]], "doctest.DocTestFailure": [[207, 7, 1, "", "example"], [207, 7, 1, "", "got"], [207, 7, 1, "", "test"]], "doctest.DocTestFinder": [[207, 8, 1, "", "find"]], "doctest.DocTestParser": [[207, 8, 1, "", "get_doctest"], [207, 8, 1, "", "get_examples"], [207, 8, 1, "", "parse"]], "doctest.DocTestRunner": [[207, 8, 1, "", "report_failure"], [207, 8, 1, "", "report_start"], [207, 8, 1, "", "report_success"], [207, 8, 1, "", "report_unexpected_exception"], [207, 8, 1, "", "run"], [207, 8, 1, "", "summarize"]], "doctest.Example": [[207, 7, 1, "", "exc_msg"], [207, 7, 1, "", "indent"], [207, 7, 1, "", "lineno"], [207, 7, 1, "", "options"], [207, 7, 1, "", "source"], [207, 7, 1, "", "want"]], "doctest.OutputChecker": [[207, 8, 1, "", "check_output"], [207, 8, 1, "", "output_difference"]], "doctest.UnexpectedException": [[207, 7, 1, "", "example"], [207, 7, 1, "", "exc_info"], [207, 7, 1, "", "test"]], "email": [[209, 10, 0, "-", "charset"], [211, 10, 0, "-", "contentmanager"], [212, 10, 0, "-", "encoders"], [213, 10, 0, "-", "errors"], [215, 10, 0, "-", "generator"], [216, 10, 0, "-", "header"], [217, 10, 0, "-", "headerregistry"], [218, 10, 0, "-", "iterators"], [219, 10, 0, "-", "message"], [221, 12, 1, "", "message_from_binary_file"], [221, 12, 1, "", "message_from_bytes"], [221, 12, 1, "", "message_from_file"], [221, 12, 1, "", "message_from_string"], [220, 10, 0, "-", "mime"], [221, 10, 0, "-", "parser"], [222, 10, 0, "-", "policy"], [223, 10, 0, "-", "utils"]], "email.charset": [[209, 11, 1, "", "Charset"], [209, 12, 1, "", "add_alias"], [209, 12, 1, "", "add_charset"], [209, 12, 1, "", "add_codec"]], "email.charset.Charset": [[209, 8, 1, "", "__eq__"], [209, 8, 1, "", "__ne__"], [209, 8, 1, "", "__str__"], [209, 8, 1, "", "body_encode"], [209, 7, 1, "", "body_encoding"], [209, 8, 1, "", "get_body_encoding"], [209, 8, 1, "", "get_output_charset"], [209, 8, 1, "", "header_encode"], [209, 8, 1, "", "header_encode_lines"], [209, 7, 1, "", "header_encoding"], [209, 7, 1, "", "input_charset"], [209, 7, 1, "", "input_codec"], [209, 7, 1, "", "output_charset"], [209, 7, 1, "", "output_codec"]], "email.contentmanager": [[211, 11, 1, "", "ContentManager"], [211, 8, 1, "", "get_content"], [211, 9, 1, "", "raw_data_manager"], [211, 8, 1, "", "set_content"]], "email.contentmanager.ContentManager": [[211, 8, 1, "", "add_get_handler"], [211, 8, 1, "", "add_set_handler"], [211, 8, 1, "", "get_content"], [211, 8, 1, "", "set_content"]], "email.encoders": [[212, 12, 1, "", "encode_7or8bit"], [212, 12, 1, "", "encode_base64"], [212, 12, 1, "", "encode_noop"], [212, 12, 1, "", "encode_quopri"]], "email.errors": [[213, 6, 1, "", "BoundaryError"], [213, 6, 1, "", "HeaderDefect"], [213, 6, 1, "", "HeaderParseError"], [213, 6, 1, "", "MessageDefect"], [213, 6, 1, "", "MessageError"], [213, 6, 1, "", "MessageParseError"], [213, 6, 1, "", "MultipartConversionError"]], "email.generator": [[215, 11, 1, "", "BytesGenerator"], [215, 11, 1, "", "DecodedGenerator"], [215, 11, 1, "", "Generator"]], "email.generator.BytesGenerator": [[215, 8, 1, "", "clone"], [215, 8, 1, "", "flatten"], [215, 8, 1, "", "write"]], "email.generator.Generator": [[215, 8, 1, "", "clone"], [215, 8, 1, "", "flatten"], [215, 8, 1, "", "write"]], "email.header": [[216, 11, 1, "", "Header"], [216, 12, 1, "", "decode_header"], [216, 12, 1, "", "make_header"]], "email.header.Header": [[216, 8, 1, "", "__eq__"], [216, 8, 1, "", "__ne__"], [216, 8, 1, "", "__str__"], [216, 8, 1, "", "append"], [216, 8, 1, "", "encode"]], "email.headerregistry": [[217, 11, 1, "", "Address"], [217, 11, 1, "", "AddressHeader"], [217, 11, 1, "", "BaseHeader"], [217, 11, 1, "", "ContentDispositionHeader"], [217, 11, 1, "", "ContentTransferEncoding"], [217, 11, 1, "", "ContentTypeHeader"], [217, 11, 1, "", "DateHeader"], [217, 11, 1, "", "Group"], [217, 11, 1, "", "HeaderRegistry"], [217, 11, 1, "", "MIMEVersionHeader"], [217, 11, 1, "", "ParameterizedMIMEHeader"], [217, 11, 1, "", "SingleAddressHeader"], [217, 11, 1, "", "UnstructuredHeader"]], "email.headerregistry.Address": [[217, 8, 1, "", "__str__"], [217, 7, 1, "", "addr_spec"], [217, 7, 1, "", "display_name"], [217, 7, 1, "", "domain"], [217, 7, 1, "", "username"]], "email.headerregistry.AddressHeader": [[217, 7, 1, "", "addresses"], [217, 7, 1, "", "groups"]], "email.headerregistry.BaseHeader": [[217, 7, 1, "", "defects"], [217, 8, 1, "", "fold"], [217, 7, 1, "", "max_count"], [217, 7, 1, "", "name"]], "email.headerregistry.ContentDispositionHeader": [[217, 7, 1, "", "content_disposition"]], "email.headerregistry.ContentTransferEncoding": [[217, 7, 1, "", "cte"]], "email.headerregistry.ContentTypeHeader": [[217, 7, 1, "", "content_type"], [217, 7, 1, "", "maintype"], [217, 7, 1, "", "subtype"]], "email.headerregistry.DateHeader": [[217, 7, 1, "", "datetime"]], "email.headerregistry.Group": [[217, 8, 1, "", "__str__"], [217, 7, 1, "", "addresses"], [217, 7, 1, "", "display_name"]], "email.headerregistry.HeaderRegistry": [[217, 8, 1, "", "__call__"], [217, 8, 1, "", "__getitem__"], [217, 8, 1, "", "map_to_type"]], "email.headerregistry.MIMEVersionHeader": [[217, 7, 1, "", "major"], [217, 7, 1, "", "minor"], [217, 7, 1, "", "version"]], "email.headerregistry.ParameterizedMIMEHeader": [[217, 7, 1, "", "params"]], "email.headerregistry.SingleAddressHeader": [[217, 7, 1, "", "address"]], "email.iterators": [[218, 12, 1, "", "_structure"], [218, 12, 1, "", "body_line_iterator"], [218, 12, 1, "", "typed_subpart_iterator"]], "email.message": [[219, 11, 1, "", "EmailMessage"], [219, 11, 1, "", "MIMEPart"], [210, 11, 1, "", "Message"]], "email.message.EmailMessage": [[219, 8, 1, "", "__bytes__"], [219, 8, 1, "", "__contains__"], [219, 8, 1, "", "__delitem__"], [219, 8, 1, "", "__getitem__"], [219, 8, 1, "", "__len__"], [219, 8, 1, "", "__setitem__"], [219, 8, 1, "", "__str__"], [219, 8, 1, "", "add_alternative"], [219, 8, 1, "", "add_attachment"], [219, 8, 1, "", "add_header"], [219, 8, 1, "", "add_related"], [219, 8, 1, "", "as_bytes"], [219, 8, 1, "", "as_string"], [219, 8, 1, "", "clear"], [219, 8, 1, "", "clear_content"], [219, 7, 1, "", "defects"], [219, 8, 1, "", "del_param"], [219, 7, 1, "", "epilogue"], [219, 8, 1, "", "get"], [219, 8, 1, "", "get_all"], [219, 8, 1, "", "get_body"], [219, 8, 1, "", "get_boundary"], [219, 8, 1, "", "get_charsets"], [219, 8, 1, "", "get_content"], [219, 8, 1, "", "get_content_charset"], [219, 8, 1, "", "get_content_disposition"], [219, 8, 1, "", "get_content_maintype"], [219, 8, 1, "", "get_content_subtype"], [219, 8, 1, "", "get_content_type"], [219, 8, 1, "", "get_default_type"], [219, 8, 1, "", "get_filename"], [219, 8, 1, "", "get_unixfrom"], [219, 8, 1, "", "is_attachment"], [219, 8, 1, "", "is_multipart"], [219, 8, 1, "", "items"], [219, 8, 1, "", "iter_attachments"], [219, 8, 1, "", "iter_parts"], [219, 8, 1, "", "keys"], [219, 8, 1, "", "make_alternative"], [219, 8, 1, "", "make_mixed"], [219, 8, 1, "", "make_related"], [219, 7, 1, "", "preamble"], [219, 8, 1, "", "replace_header"], [219, 8, 1, "", "set_boundary"], [219, 8, 1, "", "set_content"], [219, 8, 1, "", "set_default_type"], [219, 8, 1, "", "set_param"], [219, 8, 1, "", "set_unixfrom"], [219, 8, 1, "", "values"], [219, 8, 1, "", "walk"]], "email.message.Message": [[210, 8, 1, "", "__bytes__"], [210, 8, 1, "", "__contains__"], [210, 8, 1, "", "__delitem__"], [210, 8, 1, "", "__getitem__"], [210, 8, 1, "", "__len__"], [210, 8, 1, "", "__setitem__"], [210, 8, 1, "", "__str__"], [210, 8, 1, "", "add_header"], [210, 8, 1, "", "as_bytes"], [210, 8, 1, "", "as_string"], [210, 8, 1, "", "attach"], [210, 7, 1, "", "defects"], [210, 8, 1, "", "del_param"], [210, 7, 1, "", "epilogue"], [210, 8, 1, "", "get"], [210, 8, 1, "", "get_all"], [210, 8, 1, "", "get_boundary"], [210, 8, 1, "", "get_charset"], [210, 8, 1, "", "get_charsets"], [210, 8, 1, "", "get_content_charset"], [210, 8, 1, "", "get_content_disposition"], [210, 8, 1, "", "get_content_maintype"], [210, 8, 1, "", "get_content_subtype"], [210, 8, 1, "", "get_content_type"], [210, 8, 1, "", "get_default_type"], [210, 8, 1, "", "get_filename"], [210, 8, 1, "", "get_param"], [210, 8, 1, "", "get_params"], [210, 8, 1, "", "get_payload"], [210, 8, 1, "", "get_unixfrom"], [210, 8, 1, "", "is_multipart"], [210, 8, 1, "", "items"], [210, 8, 1, "", "keys"], [210, 7, 1, "", "preamble"], [210, 8, 1, "", "replace_header"], [210, 8, 1, "", "set_boundary"], [210, 8, 1, "", "set_charset"], [210, 8, 1, "", "set_default_type"], [210, 8, 1, "", "set_param"], [210, 8, 1, "", "set_payload"], [210, 8, 1, "", "set_type"], [210, 8, 1, "", "set_unixfrom"], [210, 8, 1, "", "values"], [210, 8, 1, "", "walk"]], "email.mime": [[220, 10, 0, "-", "application"], [220, 10, 0, "-", "audio"], [220, 10, 0, "-", "base"], [220, 10, 0, "-", "image"], [220, 10, 0, "-", "message"], [220, 10, 0, "-", "multipart"], [220, 10, 0, "-", "nonmultipart"], [220, 10, 0, "-", "text"]], "email.mime.application": [[220, 11, 1, "", "MIMEApplication"]], "email.mime.audio": [[220, 11, 1, "", "MIMEAudio"]], "email.mime.base": [[220, 11, 1, "", "MIMEBase"]], "email.mime.image": [[220, 11, 1, "", "MIMEImage"]], "email.mime.message": [[220, 11, 1, "", "MIMEMessage"]], "email.mime.multipart": [[220, 11, 1, "", "MIMEMultipart"]], "email.mime.nonmultipart": [[220, 11, 1, "", "MIMENonMultipart"]], "email.mime.text": [[220, 11, 1, "", "MIMEText"]], "email.parser": [[221, 11, 1, "", "BytesFeedParser"], [221, 11, 1, "", "BytesHeaderParser"], [221, 11, 1, "", "BytesParser"], [221, 11, 1, "", "FeedParser"], [221, 11, 1, "", "HeaderParser"], [221, 11, 1, "", "Parser"]], "email.parser.BytesFeedParser": [[221, 8, 1, "", "close"], [221, 8, 1, "", "feed"]], "email.parser.BytesParser": [[221, 8, 1, "", "parse"], [221, 8, 1, "", "parsebytes"]], "email.parser.Parser": [[221, 8, 1, "", "parse"], [221, 8, 1, "", "parsestr"]], "email.policy": [[222, 11, 1, "", "Compat32"], [222, 11, 1, "", "EmailPolicy"], [222, 9, 1, "", "HTTP"], [222, 11, 1, "", "Policy"], [222, 9, 1, "", "SMTP"], [222, 9, 1, "", "SMTPUTF8"], [222, 9, 1, "", "compat32"], [222, 9, 1, "", "default"], [222, 9, 1, "", "strict"]], "email.policy.Compat32": [[222, 8, 1, "", "fold"], [222, 8, 1, "", "fold_binary"], [222, 8, 1, "", "header_fetch_parse"], [222, 8, 1, "", "header_source_parse"], [222, 8, 1, "", "header_store_parse"], [222, 7, 1, "", "mangle_from_"]], "email.policy.EmailPolicy": [[222, 7, 1, "", "content_manager"], [222, 8, 1, "", "fold"], [222, 8, 1, "", "fold_binary"], [222, 7, 1, "", "header_factory"], [222, 8, 1, "", "header_fetch_parse"], [222, 8, 1, "", "header_max_count"], [222, 8, 1, "", "header_source_parse"], [222, 8, 1, "", "header_store_parse"], [222, 7, 1, "", "refold_source"], [222, 7, 1, "", "utf8"]], "email.policy.Policy": [[222, 8, 1, "", "clone"], [222, 7, 1, "", "cte_type"], [222, 8, 1, "", "fold"], [222, 8, 1, "", "fold_binary"], [222, 8, 1, "", "handle_defect"], [222, 8, 1, "", "header_fetch_parse"], [222, 8, 1, "", "header_max_count"], [222, 8, 1, "", "header_source_parse"], [222, 8, 1, "", "header_store_parse"], [222, 7, 1, "", "linesep"], [222, 7, 1, "", "mangle_from_"], [222, 7, 1, "", "max_line_length"], [222, 7, 1, "", "message_factory"], [222, 7, 1, "", "raise_on_defect"], [222, 8, 1, "", "register_defect"]], "email.utils": [[223, 12, 1, "", "collapse_rfc2231_value"], [223, 12, 1, "", "decode_params"], [223, 12, 1, "", "decode_rfc2231"], [223, 12, 1, "", "encode_rfc2231"], [223, 12, 1, "", "format_datetime"], [223, 12, 1, "", "formataddr"], [223, 12, 1, "", "formatdate"], [223, 12, 1, "", "getaddresses"], [223, 12, 1, "", "localtime"], [223, 12, 1, "", "make_msgid"], [223, 12, 1, "", "mktime_tz"], [223, 12, 1, "", "parseaddr"], [223, 12, 1, "", "parsedate"], [223, 12, 1, "", "parsedate_to_datetime"], [223, 12, 1, "", "parsedate_tz"], [223, 12, 1, "", "quote"], [223, 12, 1, "", "unquote"]], "encodings": [[171, 10, 0, "-", "idna"], [171, 10, 0, "-", "mbcs"], [171, 10, 0, "-", "utf_8_sig"]], "encodings.idna": [[171, 12, 1, "", "ToASCII"], [171, 12, 1, "", "ToUnicode"], [171, 12, 1, "", "nameprep"]], "ensurepip": [[224, 12, 1, "", "bootstrap"], [224, 12, 1, "", "version"]], "enum": [[225, 11, 1, "", "Enum"], [225, 11, 1, "", "EnumCheck"], [225, 11, 1, "", "EnumType"], [225, 11, 1, "", "Flag"], [225, 11, 1, "", "FlagBoundary"], [225, 11, 1, "", "IntEnum"], [225, 11, 1, "", "IntFlag"], [225, 11, 1, "", "ReprEnum"], [225, 11, 1, "", "StrEnum"], [225, 11, 1, "", "auto"], [225, 12, 1, "", "global_enum"], [225, 12, 1, "", "member"], [225, 12, 1, "", "nonmember"], [225, 12, 1, "", "property"], [225, 12, 1, "", "show_flag_values"], [225, 12, 1, "", "unique"], [225, 12, 1, "", "verify"]], "enum.Enum": [[225, 8, 1, "", "__dir__"], [225, 8, 1, "", "__format__"], [225, 8, 1, "", "__init_subclass__"], [225, 8, 1, "", "__repr__"], [225, 8, 1, "", "__str__"], [225, 8, 1, "", "_generate_next_value_"], [225, 7, 1, "", "_ignore_"], [225, 8, 1, "", "_missing_"], [225, 7, 1, "", "_name_"], [225, 7, 1, "", "_order_"], [225, 7, 1, "", "_value_"], [225, 7, 1, "", "name"], [225, 7, 1, "", "value"]], "enum.EnumCheck": [[225, 7, 1, "", "CONTINUOUS"], [225, 7, 1, "", "NAMED_FLAGS"], [225, 7, 1, "", "UNIQUE"]], "enum.EnumType": [[225, 8, 1, "", "__call__"], [225, 8, 1, "", "__contains__"], [225, 8, 1, "", "__dir__"], [225, 8, 1, "", "__getattr__"], [225, 8, 1, "", "__getitem__"], [225, 8, 1, "", "__iter__"], [225, 8, 1, "", "__len__"], [225, 8, 1, "", "__reversed__"]], "enum.Flag": [[225, 8, 1, "", "__and__"], [225, 8, 1, "", "__contains__"], [225, 8, 1, "", "__or__"], [225, 8, 1, "", "__xor__"], [225, 8, 1, "", "_numeric_repr_"]], "enum.FlagBoundary": [[225, 7, 1, "", "CONFORM"], [225, 7, 1, "", "EJECT"], [225, 7, 1, "", "KEEP"], [225, 7, 1, "", "STRICT"]], "errno": [[226, 9, 1, "", "E2BIG"], [226, 9, 1, "", "EACCES"], [226, 9, 1, "", "EADDRINUSE"], [226, 9, 1, "", "EADDRNOTAVAIL"], [226, 9, 1, "", "EADV"], [226, 9, 1, "", "EAFNOSUPPORT"], [226, 9, 1, "", "EAGAIN"], [226, 9, 1, "", "EALREADY"], [226, 9, 1, "", "EBADE"], [226, 9, 1, "", "EBADF"], [226, 9, 1, "", "EBADFD"], [226, 9, 1, "", "EBADMSG"], [226, 9, 1, "", "EBADR"], [226, 9, 1, "", "EBADRQC"], [226, 9, 1, "", "EBADSLT"], [226, 9, 1, "", "EBFONT"], [226, 9, 1, "", "EBUSY"], [226, 9, 1, "", "ECANCELED"], [226, 9, 1, "", "ECHILD"], [226, 9, 1, "", "ECHRNG"], [226, 9, 1, "", "ECOMM"], [226, 9, 1, "", "ECONNABORTED"], [226, 9, 1, "", "ECONNREFUSED"], [226, 9, 1, "", "ECONNRESET"], [226, 9, 1, "", "EDEADLK"], [226, 9, 1, "", "EDEADLOCK"], [226, 9, 1, "", "EDESTADDRREQ"], [226, 9, 1, "", "EDOM"], [226, 9, 1, "", "EDOTDOT"], [226, 9, 1, "", "EDQUOT"], [226, 9, 1, "", "EEXIST"], [226, 9, 1, "", "EFAULT"], [226, 9, 1, "", "EFBIG"], [226, 9, 1, "", "EHOSTDOWN"], [226, 9, 1, "", "EHOSTUNREACH"], [226, 9, 1, "", "EIDRM"], [226, 9, 1, "", "EILSEQ"], [226, 9, 1, "", "EINPROGRESS"], [226, 9, 1, "", "EINTR"], [226, 9, 1, "", "EINVAL"], [226, 9, 1, "", "EIO"], [226, 9, 1, "", "EISCONN"], [226, 9, 1, "", "EISDIR"], [226, 9, 1, "", "EISNAM"], [226, 9, 1, "", "EL2HLT"], [226, 9, 1, "", "EL2NSYNC"], [226, 9, 1, "", "EL3HLT"], [226, 9, 1, "", "EL3RST"], [226, 9, 1, "", "ELIBACC"], [226, 9, 1, "", "ELIBBAD"], [226, 9, 1, "", "ELIBEXEC"], [226, 9, 1, "", "ELIBMAX"], [226, 9, 1, "", "ELIBSCN"], [226, 9, 1, "", "ELNRNG"], [226, 9, 1, "", "ELOOP"], [226, 9, 1, "", "EMFILE"], [226, 9, 1, "", "EMLINK"], [226, 9, 1, "", "EMSGSIZE"], [226, 9, 1, "", "EMULTIHOP"], [226, 9, 1, "", "ENAMETOOLONG"], [226, 9, 1, "", "ENAVAIL"], [226, 9, 1, "", "ENETDOWN"], [226, 9, 1, "", "ENETRESET"], [226, 9, 1, "", "ENETUNREACH"], [226, 9, 1, "", "ENFILE"], [226, 9, 1, "", "ENOANO"], [226, 9, 1, "", "ENOBUFS"], [226, 9, 1, "", "ENOCSI"], [226, 9, 1, "", "ENODATA"], [226, 9, 1, "", "ENODEV"], [226, 9, 1, "", "ENOENT"], [226, 9, 1, "", "ENOEXEC"], [226, 9, 1, "", "ENOLCK"], [226, 9, 1, "", "ENOLINK"], [226, 9, 1, "", "ENOMEM"], [226, 9, 1, "", "ENOMSG"], [226, 9, 1, "", "ENONET"], [226, 9, 1, "", "ENOPKG"], [226, 9, 1, "", "ENOPROTOOPT"], [226, 9, 1, "", "ENOSPC"], [226, 9, 1, "", "ENOSR"], [226, 9, 1, "", "ENOSTR"], [226, 9, 1, "", "ENOSYS"], [226, 9, 1, "", "ENOTBLK"], [226, 9, 1, "", "ENOTCAPABLE"], [226, 9, 1, "", "ENOTCONN"], [226, 9, 1, "", "ENOTDIR"], [226, 9, 1, "", "ENOTEMPTY"], [226, 9, 1, "", "ENOTNAM"], [226, 9, 1, "", "ENOTRECOVERABLE"], [226, 9, 1, "", "ENOTSOCK"], [226, 9, 1, "", "ENOTSUP"], [226, 9, 1, "", "ENOTTY"], [226, 9, 1, "", "ENOTUNIQ"], [226, 9, 1, "", "ENXIO"], [226, 9, 1, "", "EOPNOTSUPP"], [226, 9, 1, "", "EOVERFLOW"], [226, 9, 1, "", "EOWNERDEAD"], [226, 9, 1, "", "EPERM"], [226, 9, 1, "", "EPFNOSUPPORT"], [226, 9, 1, "", "EPIPE"], [226, 9, 1, "", "EPROTO"], [226, 9, 1, "", "EPROTONOSUPPORT"], [226, 9, 1, "", "EPROTOTYPE"], [226, 9, 1, "", "EQFULL"], [226, 9, 1, "", "ERANGE"], [226, 9, 1, "", "EREMCHG"], [226, 9, 1, "", "EREMOTE"], [226, 9, 1, "", "EREMOTEIO"], [226, 9, 1, "", "ERESTART"], [226, 9, 1, "", "EROFS"], [226, 9, 1, "", "ESHUTDOWN"], [226, 9, 1, "", "ESOCKTNOSUPPORT"], [226, 9, 1, "", "ESPIPE"], [226, 9, 1, "", "ESRCH"], [226, 9, 1, "", "ESRMNT"], [226, 9, 1, "", "ESTALE"], [226, 9, 1, "", "ESTRPIPE"], [226, 9, 1, "", "ETIME"], [226, 9, 1, "", "ETIMEDOUT"], [226, 9, 1, "", "ETOOMANYREFS"], [226, 9, 1, "", "ETXTBSY"], [226, 9, 1, "", "EUCLEAN"], [226, 9, 1, "", "EUNATCH"], [226, 9, 1, "", "EUSERS"], [226, 9, 1, "", "EWOULDBLOCK"], [226, 9, 1, "", "EXDEV"], [226, 9, 1, "", "EXFULL"], [226, 9, 1, "", "errorcode"]], "faulthandler": [[228, 12, 1, "", "cancel_dump_traceback_later"], [228, 12, 1, "", "disable"], [228, 12, 1, "", "dump_traceback"], [228, 12, 1, "", "dump_traceback_later"], [228, 12, 1, "", "enable"], [228, 12, 1, "", "is_enabled"], [228, 12, 1, "", "register"], [228, 12, 1, "", "unregister"]], "fcntl": [[229, 9, 1, "", "LOCK_EX"], [229, 9, 1, "", "LOCK_NB"], [229, 9, 1, "", "LOCK_SH"], [229, 9, 1, "", "LOCK_UN"], [229, 12, 1, "", "fcntl"], [229, 12, 1, "", "flock"], [229, 12, 1, "", "ioctl"], [229, 12, 1, "", "lockf"]], "filecmp": [[230, 7, 1, "", "DEFAULT_IGNORES"], [230, 12, 1, "", "clear_cache"], [230, 12, 1, "", "cmp"], [230, 12, 1, "", "cmpfiles"], [230, 11, 1, "", "dircmp"]], "filecmp.dircmp": [[230, 7, 1, "", "common"], [230, 7, 1, "", "common_dirs"], [230, 7, 1, "", "common_files"], [230, 7, 1, "", "common_funny"], [230, 7, 1, "", "diff_files"], [230, 7, 1, "", "funny_files"], [230, 7, 1, "", "left"], [230, 7, 1, "", "left_list"], [230, 7, 1, "", "left_only"], [230, 8, 1, "", "report"], [230, 8, 1, "", "report_full_closure"], [230, 8, 1, "", "report_partial_closure"], [230, 7, 1, "", "right"], [230, 7, 1, "", "right_list"], [230, 7, 1, "", "right_only"], [230, 7, 1, "", "same_files"], [230, 7, 1, "", "subdirs"]], "fileinput": [[232, 11, 1, "", "FileInput"], [232, 12, 1, "", "close"], [232, 12, 1, "", "filelineno"], [232, 12, 1, "", "filename"], [232, 12, 1, "", "fileno"], [232, 12, 1, "", "hook_compressed"], [232, 12, 1, "", "hook_encoded"], [232, 12, 1, "", "input"], [232, 12, 1, "", "isfirstline"], [232, 12, 1, "", "isstdin"], [232, 12, 1, "", "lineno"], [232, 12, 1, "", "nextfile"]], "float": [[360, 8, 1, "", "as_integer_ratio"], [360, 8, 1, "", "fromhex"], [360, 8, 1, "", "hex"], [360, 8, 1, "", "is_integer"]], "fnmatch": [[234, 12, 1, "", "filter"], [234, 12, 1, "", "fnmatch"], [234, 12, 1, "", "fnmatchcase"], [234, 12, 1, "", "translate"]], "fractions": [[235, 11, 1, "", "Fraction"]], "fractions.Fraction": [[235, 8, 1, "", "__ceil__"], [235, 8, 1, "", "__floor__"], [235, 8, 1, "", "__round__"], [235, 8, 1, "", "as_integer_ratio"], [235, 7, 1, "", "denominator"], [235, 8, 1, "", "from_decimal"], [235, 8, 1, "", "from_float"], [235, 8, 1, "", "limit_denominator"], [235, 7, 1, "", "numerator"]], "frame": [[443, 8, 1, "", "clear"], [443, 7, 1, "", "f_back"], [443, 7, 1, "", "f_builtins"], [443, 7, 1, "", "f_code"], [443, 7, 1, "", "f_globals"], [443, 7, 1, "", "f_lasti"], [443, 7, 1, "", "f_lineno"], [443, 7, 1, "", "f_locals"], [443, 7, 1, "", "f_trace"], [443, 7, 1, "", "f_trace_lines"], [443, 7, 1, "", "f_trace_opcodes"]], "frozenset": [[360, 8, 1, "", "add"], [360, 8, 1, "", "clear"], [360, 8, 1, "", "copy"], [360, 8, 1, "", "difference"], [360, 8, 1, "", "difference_update"], [360, 8, 1, "", "discard"], [360, 8, 1, "", "intersection"], [360, 8, 1, "", "intersection_update"], [360, 8, 1, "", "isdisjoint"], [360, 8, 1, "", "issubset"], [360, 8, 1, "", "issuperset"], [360, 8, 1, "", "pop"], [360, 8, 1, "", "remove"], [360, 8, 1, "", "symmetric_difference"], [360, 8, 1, "", "symmetric_difference_update"], [360, 8, 1, "", "union"], [360, 8, 1, "", "update"]], "ftplib": [[237, 11, 1, "", "FTP"], [237, 11, 1, "", "FTP_TLS"], [237, 9, 1, "", "all_errors"], [237, 6, 1, "", "error_perm"], [237, 6, 1, "", "error_proto"], [237, 6, 1, "", "error_reply"], [237, 6, 1, "", "error_temp"]], "ftplib.FTP": [[237, 8, 1, "", "abort"], [237, 8, 1, "", "close"], [237, 8, 1, "", "connect"], [237, 8, 1, "", "cwd"], [237, 8, 1, "", "delete"], [237, 8, 1, "", "dir"], [237, 8, 1, "", "getwelcome"], [237, 8, 1, "", "login"], [237, 8, 1, "", "mkd"], [237, 8, 1, "", "mlsd"], [237, 8, 1, "", "nlst"], [237, 8, 1, "", "ntransfercmd"], [237, 8, 1, "", "pwd"], [237, 8, 1, "", "quit"], [237, 8, 1, "", "rename"], [237, 8, 1, "", "retrbinary"], [237, 8, 1, "", "retrlines"], [237, 8, 1, "", "rmd"], [237, 8, 1, "", "sendcmd"], [237, 8, 1, "", "set_debuglevel"], [237, 8, 1, "", "set_pasv"], [237, 8, 1, "", "size"], [237, 8, 1, "", "storbinary"], [237, 8, 1, "", "storlines"], [237, 8, 1, "", "transfercmd"], [237, 8, 1, "", "voidcmd"]], "ftplib.FTP_TLS": [[237, 8, 1, "", "auth"], [237, 8, 1, "", "ccc"], [237, 8, 1, "", "prot_c"], [237, 8, 1, "", "prot_p"], [237, 7, 1, "", "ssl_version"]], "function": [[443, 7, 1, "", "__annotations__"], [443, 7, 1, "", "__closure__"], [443, 7, 1, "", "__code__"], [443, 7, 1, "", "__defaults__"], [443, 7, 1, "", "__dict__"], [443, 7, 1, "", "__doc__"], [443, 7, 1, "", "__globals__"], [443, 7, 1, "", "__kwdefaults__"], [443, 7, 1, "", "__module__"], [443, 7, 1, "", "__name__"], [443, 7, 1, "", "__qualname__"]], "functools": [[240, 12, 1, "", "cache"], [240, 12, 1, "", "cached_property"], [240, 12, 1, "", "cmp_to_key"], [240, 12, 1, "", "lru_cache"], [240, 12, 1, "", "partial"], [240, 11, 1, "", "partialmethod"], [240, 12, 1, "", "reduce"], [240, 12, 1, "", "singledispatch"], [240, 11, 1, "", "singledispatchmethod"], [240, 12, 1, "", "total_ordering"], [240, 12, 1, "", "update_wrapper"], [240, 12, 1, "", "wraps"]], "functools.partial": [[240, 7, 1, "", "args"], [240, 7, 1, "", "func"], [240, 7, 1, "", "keywords"]], "gc": [[241, 9, 1, "", "DEBUG_COLLECTABLE"], [241, 9, 1, "", "DEBUG_LEAK"], [241, 9, 1, "", "DEBUG_SAVEALL"], [241, 9, 1, "", "DEBUG_STATS"], [241, 9, 1, "", "DEBUG_UNCOLLECTABLE"], [241, 9, 1, "", "callbacks"], [241, 12, 1, "", "collect"], [241, 12, 1, "", "disable"], [241, 12, 1, "", "enable"], [241, 12, 1, "", "freeze"], [241, 9, 1, "", "garbage"], [241, 12, 1, "", "get_count"], [241, 12, 1, "", "get_debug"], [241, 12, 1, "", "get_freeze_count"], [241, 12, 1, "", "get_objects"], [241, 12, 1, "", "get_referents"], [241, 12, 1, "", "get_referrers"], [241, 12, 1, "", "get_stats"], [241, 12, 1, "", "get_threshold"], [241, 12, 1, "", "is_finalized"], [241, 12, 1, "", "is_tracked"], [241, 12, 1, "", "isenabled"], [241, 12, 1, "", "set_debug"], [241, 12, 1, "", "set_threshold"], [241, 12, 1, "", "unfreeze"]], "generator": [[445, 8, 1, "", "__next__"], [445, 8, 1, "", "close"], [445, 8, 1, "", "send"], [445, 8, 1, "", "throw"]], "genericalias": [[360, 7, 1, "", "__args__"], [360, 7, 1, "", "__origin__"], [360, 7, 1, "", "__parameters__"], [360, 7, 1, "", "__unpacked__"]], "getopt": [[242, 6, 1, "", "GetoptError"], [242, 6, 1, "", "error"], [242, 12, 1, "", "getopt"], [242, 12, 1, "", "gnu_getopt"]], "getpass": [[243, 6, 1, "", "GetPassWarning"], [243, 12, 1, "", "getpass"], [243, 12, 1, "", "getuser"]], "gettext": [[244, 11, 1, "", "GNUTranslations"], [244, 11, 1, "", "NullTranslations"], [244, 12, 1, "", "bindtextdomain"], [244, 12, 1, "", "dgettext"], [244, 12, 1, "", "dngettext"], [244, 12, 1, "", "dnpgettext"], [244, 12, 1, "", "dpgettext"], [244, 12, 1, "", "find"], [244, 12, 1, "", "gettext"], [244, 12, 1, "", "install"], [244, 12, 1, "", "ngettext"], [244, 12, 1, "", "npgettext"], [244, 12, 1, "", "pgettext"], [244, 12, 1, "", "textdomain"], [244, 12, 1, "", "translation"]], "gettext.GNUTranslations": [[244, 8, 1, "", "gettext"], [244, 8, 1, "", "ngettext"], [244, 8, 1, "", "npgettext"], [244, 8, 1, "", "pgettext"]], "gettext.NullTranslations": [[244, 8, 1, "", "_parse"], [244, 8, 1, "", "add_fallback"], [244, 8, 1, "", "charset"], [244, 8, 1, "", "gettext"], [244, 8, 1, "", "info"], [244, 8, 1, "", "install"], [244, 8, 1, "", "ngettext"], [244, 8, 1, "", "npgettext"], [244, 8, 1, "", "pgettext"]], "glob": [[245, 12, 1, "", "escape"], [245, 12, 1, "", "glob"], [245, 12, 1, "", "iglob"]], "graphlib": [[246, 6, 1, "", "CycleError"], [246, 11, 1, "", "TopologicalSorter"]], "graphlib.TopologicalSorter": [[246, 8, 1, "", "add"], [246, 8, 1, "", "done"], [246, 8, 1, "", "get_ready"], [246, 8, 1, "", "is_active"], [246, 8, 1, "", "prepare"], [246, 8, 1, "", "static_order"]], "grp": [[247, 12, 1, "", "getgrall"], [247, 12, 1, "", "getgrgid"], [247, 12, 1, "", "getgrnam"]], "gzip": [[248, 6, 1, "", "BadGzipFile"], [248, 11, 1, "", "GzipFile"], [248, 12, 1, "", "compress"], [248, 12, 1, "", "decompress"], [248, 12, 1, "", "open"], [248, 14, 1, "cmdoption-gzip-best", "--best"], [248, 14, 1, "cmdoption-gzip-d", "--decompress"], [248, 14, 1, "cmdoption-gzip-fast", "--fast"], [248, 14, 1, "cmdoption-gzip-h", "--help"], [248, 14, 1, "cmdoption-gzip-d", "-d"], [248, 14, 1, "cmdoption-gzip-h", "-h"], [248, 14, 1, "cmdoption-gzip-arg-file", "file"]], "gzip.GzipFile": [[248, 7, 1, "", "mtime"], [248, 7, 1, "", "name"], [248, 8, 1, "", "peek"]], "hashlib": [[249, 9, 1, "", "algorithms_available"], [249, 9, 1, "", "algorithms_guaranteed"], [249, 12, 1, "", "blake2b"], [249, 12, 1, "", "blake2s"], [249, 12, 1, "", "file_digest"], [249, 12, 1, "", "md5"], [249, 12, 1, "", "new"], [249, 12, 1, "", "pbkdf2_hmac"], [249, 12, 1, "", "scrypt"], [249, 12, 1, "", "sha1"], [249, 12, 1, "", "sha224"], [249, 12, 1, "", "sha256"], [249, 12, 1, "", "sha384"], [249, 12, 1, "", "sha3_224"], [249, 12, 1, "", "sha3_256"], [249, 12, 1, "", "sha3_384"], [249, 12, 1, "", "sha3_512"], [249, 12, 1, "", "sha512"], [249, 12, 1, "", "shake_128"], [249, 12, 1, "", "shake_256"]], "hashlib.blake2b": [[249, 9, 1, "", "MAX_DIGEST_SIZE"], [249, 9, 1, "", "MAX_KEY_SIZE"], [249, 9, 1, "", "PERSON_SIZE"], [249, 9, 1, "", "SALT_SIZE"]], "hashlib.blake2s": [[249, 9, 1, "", "MAX_DIGEST_SIZE"], [249, 9, 1, "", "MAX_KEY_SIZE"], [249, 9, 1, "", "PERSON_SIZE"], [249, 9, 1, "", "SALT_SIZE"]], "hashlib.hash": [[249, 9, 1, "", "block_size"], [249, 8, 1, "", "copy"], [249, 8, 1, "", "digest"], [249, 9, 1, "", "digest_size"], [249, 8, 1, "", "hexdigest"], [249, 7, 1, "", "name"], [249, 8, 1, "", "update"]], "hashlib.shake": [[249, 8, 1, "", "digest"], [249, 8, 1, "", "hexdigest"]], "heapq": [[250, 12, 1, "", "heapify"], [250, 12, 1, "", "heappop"], [250, 12, 1, "", "heappush"], [250, 12, 1, "", "heappushpop"], [250, 12, 1, "", "heapreplace"], [250, 12, 1, "", "merge"], [250, 12, 1, "", "nlargest"], [250, 12, 1, "", "nsmallest"]], "hmac.HMAC": [[251, 7, 1, "", "block_size"], [251, 8, 1, "", "copy"], [251, 8, 1, "", "digest"], [251, 7, 1, "", "digest_size"], [251, 8, 1, "", "hexdigest"], [251, 7, 1, "", "name"], [251, 8, 1, "", "update"]], "hmac": [[251, 12, 1, "", "compare_digest"], [251, 12, 1, "", "digest"], [251, 12, 1, "", "new"]], "html": [[253, 10, 0, "-", "entities"], [252, 12, 1, "", "escape"], [254, 10, 0, "-", "parser"], [252, 12, 1, "", "unescape"]], "html.entities": [[253, 9, 1, "", "codepoint2name"], [253, 9, 1, "", "entitydefs"], [253, 9, 1, "", "html5"], [253, 9, 1, "", "name2codepoint"]], "html.parser": [[254, 11, 1, "", "HTMLParser"]], "html.parser.HTMLParser": [[254, 8, 1, "", "close"], [254, 8, 1, "", "feed"], [254, 8, 1, "", "get_starttag_text"], [254, 8, 1, "", "getpos"], [254, 8, 1, "", "handle_charref"], [254, 8, 1, "", "handle_comment"], [254, 8, 1, "", "handle_data"], [254, 8, 1, "", "handle_decl"], [254, 8, 1, "", "handle_endtag"], [254, 8, 1, "", "handle_entityref"], [254, 8, 1, "", "handle_pi"], [254, 8, 1, "", "handle_startendtag"], [254, 8, 1, "", "handle_starttag"], [254, 8, 1, "", "reset"], [254, 8, 1, "", "unknown_decl"]], "http": [[255, 11, 1, "", "HTTPMethod"], [255, 11, 1, "", "HTTPStatus"], [256, 10, 0, "-", "client"], [257, 10, 0, "-", "cookiejar"], [258, 10, 0, "-", "cookies"], [259, 10, 0, "-", "server"]], "http.client": [[256, 6, 1, "", "BadStatusLine"], [256, 6, 1, "", "CannotSendHeader"], [256, 6, 1, "", "CannotSendRequest"], [256, 11, 1, "", "HTTPConnection"], [256, 6, 1, "", "HTTPException"], [256, 11, 1, "", "HTTPMessage"], [256, 11, 1, "", "HTTPResponse"], [256, 11, 1, "", "HTTPSConnection"], [256, 9, 1, "", "HTTPS_PORT"], [256, 9, 1, "", "HTTP_PORT"], [256, 6, 1, "", "ImproperConnectionState"], [256, 6, 1, "", "IncompleteRead"], [256, 6, 1, "", "InvalidURL"], [256, 6, 1, "", "LineTooLong"], [256, 6, 1, "", "NotConnected"], [256, 6, 1, "", "RemoteDisconnected"], [256, 6, 1, "", "ResponseNotReady"], [256, 6, 1, "", "UnimplementedFileMode"], [256, 6, 1, "", "UnknownProtocol"], [256, 6, 1, "", "UnknownTransferEncoding"], [256, 12, 1, "", "parse_headers"], [256, 9, 1, "", "responses"]], "http.client.HTTPConnection": [[256, 7, 1, "", "blocksize"], [256, 8, 1, "", "close"], [256, 8, 1, "", "connect"], [256, 8, 1, "", "endheaders"], [256, 8, 1, "", "getresponse"], [256, 8, 1, "", "putheader"], [256, 8, 1, "", "putrequest"], [256, 8, 1, "", "request"], [256, 8, 1, "", "send"], [256, 8, 1, "", "set_debuglevel"], [256, 8, 1, "", "set_tunnel"]], "http.client.HTTPResponse": [[256, 7, 1, "", "closed"], [256, 7, 1, "", "debuglevel"], [256, 8, 1, "", "fileno"], [256, 8, 1, "", "getcode"], [256, 8, 1, "", "getheader"], [256, 8, 1, "", "getheaders"], [256, 8, 1, "", "geturl"], [256, 7, 1, "", "headers"], [256, 8, 1, "", "info"], [256, 7, 1, "", "msg"], [256, 8, 1, "", "read"], [256, 8, 1, "", "readinto"], [256, 7, 1, "", "reason"], [256, 7, 1, "", "status"], [256, 7, 1, "", "url"], [256, 7, 1, "", "version"]], "http.cookiejar": [[257, 11, 1, "", "Cookie"], [257, 11, 1, "", "CookieJar"], [257, 11, 1, "", "CookiePolicy"], [257, 11, 1, "", "DefaultCookiePolicy"], [257, 11, 1, "", "FileCookieJar"], [257, 11, 1, "", "LWPCookieJar"], [257, 6, 1, "", "LoadError"], [257, 11, 1, "", "MozillaCookieJar"]], "http.cookiejar.Cookie": [[257, 7, 1, "", "comment"], [257, 7, 1, "", "comment_url"], [257, 7, 1, "", "discard"], [257, 7, 1, "", "domain"], [257, 7, 1, "", "domain_initial_dot"], [257, 7, 1, "", "domain_specified"], [257, 7, 1, "", "expires"], [257, 8, 1, "", "get_nonstandard_attr"], [257, 8, 1, "", "has_nonstandard_attr"], [257, 8, 1, "", "is_expired"], [257, 7, 1, "", "name"], [257, 7, 1, "", "path"], [257, 7, 1, "", "port"], [257, 7, 1, "", "port_specified"], [257, 7, 1, "", "rfc2109"], [257, 7, 1, "", "secure"], [257, 8, 1, "", "set_nonstandard_attr"], [257, 7, 1, "", "value"], [257, 7, 1, "", "version"]], "http.cookiejar.CookieJar": [[257, 8, 1, "", "add_cookie_header"], [257, 8, 1, "", "clear"], [257, 8, 1, "", "clear_session_cookies"], [257, 8, 1, "", "extract_cookies"], [257, 8, 1, "", "make_cookies"], [257, 8, 1, "", "set_cookie"], [257, 8, 1, "", "set_cookie_if_ok"], [257, 8, 1, "", "set_policy"]], "http.cookiejar.CookiePolicy": [[257, 8, 1, "", "domain_return_ok"], [257, 7, 1, "", "hide_cookie2"], [257, 7, 1, "", "netscape"], [257, 8, 1, "", "path_return_ok"], [257, 8, 1, "", "return_ok"], [257, 7, 1, "", "rfc2965"], [257, 8, 1, "", "set_ok"]], "http.cookiejar.DefaultCookiePolicy": [[257, 7, 1, "", "DomainLiberal"], [257, 7, 1, "", "DomainRFC2965Match"], [257, 7, 1, "", "DomainStrict"], [257, 7, 1, "", "DomainStrictNoDots"], [257, 7, 1, "", "DomainStrictNonDomain"], [257, 8, 1, "", "allowed_domains"], [257, 8, 1, "", "blocked_domains"], [257, 8, 1, "", "is_blocked"], [257, 8, 1, "", "is_not_allowed"], [257, 7, 1, "", "rfc2109_as_netscape"], [257, 8, 1, "", "set_allowed_domains"], [257, 8, 1, "", "set_blocked_domains"], [257, 7, 1, "", "strict_domain"], [257, 7, 1, "", "strict_ns_domain"], [257, 7, 1, "", "strict_ns_set_initial_dollar"], [257, 7, 1, "", "strict_ns_set_path"], [257, 7, 1, "", "strict_ns_unverifiable"], [257, 7, 1, "", "strict_rfc2965_unverifiable"]], "http.cookiejar.FileCookieJar": [[257, 7, 1, "", "delayload"], [257, 7, 1, "", "filename"], [257, 8, 1, "", "load"], [257, 8, 1, "", "revert"], [257, 8, 1, "", "save"]], "http.cookies": [[258, 11, 1, "", "BaseCookie"], [258, 6, 1, "", "CookieError"], [258, 11, 1, "", "Morsel"], [258, 11, 1, "", "SimpleCookie"]], "http.cookies.BaseCookie": [[258, 8, 1, "", "js_output"], [258, 8, 1, "", "load"], [258, 8, 1, "", "output"], [258, 8, 1, "", "value_decode"], [258, 8, 1, "", "value_encode"]], "http.cookies.Morsel": [[258, 8, 1, "", "OutputString"], [258, 7, 1, "", "coded_value"], [258, 7, 1, "", "comment"], [258, 8, 1, "", "copy"], [258, 7, 1, "", "domain"], [258, 7, 1, "", "expires"], [258, 7, 1, "", "httponly"], [258, 8, 1, "", "isReservedKey"], [258, 8, 1, "", "js_output"], [258, 7, 1, "", "key"], [258, 8, 1, "", "output"], [258, 7, 1, "", "path"], [258, 7, 1, "", "samesite"], [258, 7, 1, "", "secure"], [258, 8, 1, "", "set"], [258, 8, 1, "", "setdefault"], [258, 8, 1, "", "update"], [258, 7, 1, "", "value"], [258, 7, 1, "", "version"]], "http.server": [[259, 11, 1, "", "BaseHTTPRequestHandler"], [259, 11, 1, "", "CGIHTTPRequestHandler"], [259, 11, 1, "", "HTTPServer"], [259, 11, 1, "", "SimpleHTTPRequestHandler"], [259, 11, 1, "", "ThreadingHTTPServer"]], "http.server.BaseHTTPRequestHandler": [[259, 7, 1, "", "MessageClass"], [259, 8, 1, "", "address_string"], [259, 7, 1, "", "client_address"], [259, 7, 1, "", "close_connection"], [259, 7, 1, "", "command"], [259, 8, 1, "", "date_time_string"], [259, 8, 1, "", "end_headers"], [259, 7, 1, "", "error_content_type"], [259, 7, 1, "", "error_message_format"], [259, 8, 1, "", "flush_headers"], [259, 8, 1, "", "handle"], [259, 8, 1, "", "handle_expect_100"], [259, 8, 1, "", "handle_one_request"], [259, 7, 1, "", "headers"], [259, 8, 1, "", "log_date_time_string"], [259, 8, 1, "", "log_error"], [259, 8, 1, "", "log_message"], [259, 8, 1, "", "log_request"], [259, 7, 1, "", "path"], [259, 7, 1, "", "protocol_version"], [259, 7, 1, "", "request_version"], [259, 7, 1, "", "requestline"], [259, 7, 1, "", "responses"], [259, 7, 1, "", "rfile"], [259, 8, 1, "", "send_error"], [259, 8, 1, "", "send_header"], [259, 8, 1, "", "send_response"], [259, 8, 1, "", "send_response_only"], [259, 7, 1, "", "server"], [259, 7, 1, "", "server_version"], [259, 7, 1, "", "sys_version"], [259, 8, 1, "", "version_string"], [259, 7, 1, "", "wfile"]], "http.server.CGIHTTPRequestHandler": [[259, 7, 1, "", "cgi_directories"], [259, 8, 1, "", "do_POST"]], "http.server.SimpleHTTPRequestHandler": [[259, 8, 1, "", "do_GET"], [259, 8, 1, "", "do_HEAD"], [259, 7, 1, "", "extensions_map"], [259, 7, 1, "", "server_version"]], "imaplib": [[262, 11, 1, "", "IMAP4"], [262, 11, 1, "", "IMAP4_SSL"], [262, 11, 1, "", "IMAP4_stream"], [262, 12, 1, "", "Int2AP"], [262, 12, 1, "", "Internaldate2tuple"], [262, 12, 1, "", "ParseFlags"], [262, 12, 1, "", "Time2Internaldate"]], "imaplib.IMAP4": [[262, 7, 1, "", "PROTOCOL_VERSION"], [262, 6, 1, "", "abort"], [262, 8, 1, "", "append"], [262, 8, 1, "", "authenticate"], [262, 8, 1, "", "check"], [262, 8, 1, "", "close"], [262, 8, 1, "", "copy"], [262, 8, 1, "", "create"], [262, 7, 1, "", "debug"], [262, 8, 1, "", "delete"], [262, 8, 1, "", "deleteacl"], [262, 8, 1, "", "enable"], [262, 6, 1, "", "error"], [262, 8, 1, "", "expunge"], [262, 8, 1, "", "fetch"], [262, 8, 1, "", "getacl"], [262, 8, 1, "", "getannotation"], [262, 8, 1, "", "getquota"], [262, 8, 1, "", "getquotaroot"], [262, 8, 1, "", "list"], [262, 8, 1, "", "login"], [262, 8, 1, "", "login_cram_md5"], [262, 8, 1, "", "logout"], [262, 8, 1, "", "lsub"], [262, 8, 1, "", "myrights"], [262, 8, 1, "", "namespace"], [262, 8, 1, "", "noop"], [262, 8, 1, "", "open"], [262, 8, 1, "", "partial"], [262, 8, 1, "", "proxyauth"], [262, 8, 1, "", "read"], [262, 8, 1, "", "readline"], [262, 6, 1, "", "readonly"], [262, 8, 1, "", "recent"], [262, 8, 1, "", "rename"], [262, 8, 1, "", "response"], [262, 8, 1, "", "search"], [262, 8, 1, "", "select"], [262, 8, 1, "", "send"], [262, 8, 1, "", "setacl"], [262, 8, 1, "", "setannotation"], [262, 8, 1, "", "setquota"], [262, 8, 1, "", "shutdown"], [262, 8, 1, "", "socket"], [262, 8, 1, "", "sort"], [262, 8, 1, "", "starttls"], [262, 8, 1, "", "status"], [262, 8, 1, "", "store"], [262, 8, 1, "", "subscribe"], [262, 8, 1, "", "thread"], [262, 8, 1, "", "uid"], [262, 8, 1, "", "unselect"], [262, 8, 1, "", "unsubscribe"], [262, 7, 1, "", "utf8_enabled"], [262, 8, 1, "", "xatom"]], "imghdr": [[263, 9, 1, "", "tests"], [263, 12, 1, "", "what"]], "imp": [[264, 9, 1, "", "C_BUILTIN"], [264, 9, 1, "", "C_EXTENSION"], [264, 11, 1, "", "NullImporter"], [264, 9, 1, "", "PKG_DIRECTORY"], [264, 9, 1, "", "PY_COMPILED"], [264, 9, 1, "", "PY_FROZEN"], [264, 9, 1, "", "PY_SOURCE"], [264, 12, 1, "", "acquire_lock"], [264, 12, 1, "", "cache_from_source"], [264, 12, 1, "", "find_module"], [264, 12, 1, "", "get_magic"], [264, 12, 1, "", "get_suffixes"], [264, 12, 1, "", "get_tag"], [264, 12, 1, "", "load_module"], [264, 12, 1, "", "lock_held"], [264, 12, 1, "", "new_module"], [264, 12, 1, "", "release_lock"], [264, 12, 1, "", "reload"], [264, 12, 1, "", "source_from_cache"]], "imp.NullImporter": [[264, 8, 1, "", "find_module"]], "importlib": [[265, 12, 1, "", "__import__"], [265, 10, 0, "-", "abc"], [265, 12, 1, "", "find_loader"], [265, 12, 1, "", "import_module"], [265, 12, 1, "", "invalidate_caches"], [265, 10, 0, "-", "machinery"], [266, 10, 0, "-", "metadata"], [265, 12, 1, "", "reload"], [267, 10, 0, "-", "resources"], [265, 10, 0, "-", "util"]], "importlib.abc": [[265, 11, 1, "", "ExecutionLoader"], [265, 11, 1, "", "FileLoader"], [265, 11, 1, "", "Finder"], [265, 11, 1, "", "InspectLoader"], [265, 11, 1, "", "Loader"], [265, 11, 1, "", "MetaPathFinder"], [265, 11, 1, "", "PathEntryFinder"], [265, 11, 1, "", "ResourceLoader"], [265, 11, 1, "", "SourceLoader"]], "importlib.abc.ExecutionLoader": [[265, 8, 1, "", "get_filename"]], "importlib.abc.FileLoader": [[265, 8, 1, "", "get_data"], [265, 8, 1, "", "get_filename"], [265, 8, 1, "", "load_module"], [265, 7, 1, "", "name"], [265, 7, 1, "", "path"]], "importlib.abc.Finder": [[265, 8, 1, "", "find_module"]], "importlib.abc.InspectLoader": [[265, 8, 1, "", "exec_module"], [265, 8, 1, "", "get_code"], [265, 8, 1, "", "get_source"], [265, 8, 1, "", "is_package"], [265, 8, 1, "", "load_module"], [265, 8, 1, "", "source_to_code"]], "importlib.abc.Loader": [[265, 8, 1, "", "create_module"], [265, 8, 1, "", "exec_module"], [265, 8, 1, "", "load_module"], [265, 8, 1, "", "module_repr"]], "importlib.abc.MetaPathFinder": [[265, 8, 1, "", "find_module"], [265, 8, 1, "", "find_spec"], [265, 8, 1, "", "invalidate_caches"]], "importlib.abc.PathEntryFinder": [[265, 8, 1, "", "find_loader"], [265, 8, 1, "", "find_module"], [265, 8, 1, "", "find_spec"], [265, 8, 1, "", "invalidate_caches"]], "importlib.abc.ResourceLoader": [[265, 8, 1, "", "get_data"]], "importlib.abc.SourceLoader": [[265, 8, 1, "", "exec_module"], [265, 8, 1, "", "get_code"], [265, 8, 1, "", "get_source"], [265, 8, 1, "", "is_package"], [265, 8, 1, "", "load_module"], [265, 8, 1, "", "path_mtime"], [265, 8, 1, "", "path_stats"], [265, 8, 1, "", "set_data"]], "importlib.machinery": [[265, 7, 1, "", "BYTECODE_SUFFIXES"], [265, 11, 1, "", "BuiltinImporter"], [265, 7, 1, "", "DEBUG_BYTECODE_SUFFIXES"], [265, 7, 1, "", "EXTENSION_SUFFIXES"], [265, 11, 1, "", "ExtensionFileLoader"], [265, 11, 1, "", "FileFinder"], [265, 11, 1, "", "FrozenImporter"], [265, 11, 1, "", "ModuleSpec"], [265, 11, 1, "", "NamespaceLoader"], [265, 7, 1, "", "OPTIMIZED_BYTECODE_SUFFIXES"], [265, 11, 1, "", "PathFinder"], [265, 7, 1, "", "SOURCE_SUFFIXES"], [265, 11, 1, "", "SourceFileLoader"], [265, 11, 1, "", "SourcelessFileLoader"], [265, 11, 1, "", "WindowsRegistryFinder"], [265, 12, 1, "", "all_suffixes"]], "importlib.machinery.ExtensionFileLoader": [[265, 8, 1, "", "create_module"], [265, 8, 1, "", "exec_module"], [265, 8, 1, "", "get_code"], [265, 8, 1, "", "get_filename"], [265, 8, 1, "", "get_source"], [265, 8, 1, "", "is_package"], [265, 7, 1, "", "name"], [265, 7, 1, "", "path"]], "importlib.machinery.FileFinder": [[265, 8, 1, "", "find_loader"], [265, 8, 1, "", "find_spec"], [265, 8, 1, "", "invalidate_caches"], [265, 7, 1, "", "path"], [265, 8, 1, "", "path_hook"]], "importlib.machinery.ModuleSpec": [[265, 7, 1, "", "cached"], [265, 7, 1, "", "has_location"], [265, 7, 1, "", "loader"], [265, 7, 1, "", "loader_state"], [265, 7, 1, "", "name"], [265, 7, 1, "", "origin"], [265, 7, 1, "", "parent"], [265, 7, 1, "", "submodule_search_locations"]], "importlib.machinery.PathFinder": [[265, 8, 1, "", "find_module"], [265, 8, 1, "", "find_spec"], [265, 8, 1, "", "invalidate_caches"]], "importlib.machinery.SourceFileLoader": [[265, 8, 1, "", "is_package"], [265, 8, 1, "", "load_module"], [265, 7, 1, "", "name"], [265, 7, 1, "", "path"], [265, 8, 1, "", "path_stats"], [265, 8, 1, "", "set_data"]], "importlib.machinery.SourcelessFileLoader": [[265, 8, 1, "", "get_code"], [265, 8, 1, "", "get_source"], [265, 8, 1, "", "is_package"], [265, 8, 1, "", "load_module"], [265, 7, 1, "", "name"], [265, 7, 1, "", "path"]], "importlib.resources": [[267, 11, 1, "", "Package"], [267, 9, 1, "", "Resource"], [268, 10, 0, "-", "abc"], [267, 12, 1, "", "as_file"], [267, 12, 1, "", "contents"], [267, 12, 1, "", "files"], [267, 12, 1, "", "is_resource"], [267, 12, 1, "", "open_binary"], [267, 12, 1, "", "open_text"], [267, 12, 1, "", "path"], [267, 12, 1, "", "read_binary"], [267, 12, 1, "", "read_text"]], "importlib.resources.abc": [[268, 11, 1, "", "ResourceReader"], [268, 11, 1, "", "Traversable"], [268, 11, 1, "", "TraversableResources"]], "importlib.resources.abc.ResourceReader": [[268, 8, 1, "", "contents"], [268, 8, 1, "", "is_resource"], [268, 8, 1, "", "open_resource"], [268, 8, 1, "", "resource_path"]], "importlib.resources.abc.Traversable": [[268, 8, 1, "", "__truediv__"], [268, 8, 1, "", "is_dir"], [268, 8, 1, "", "is_file"], [268, 8, 1, "", "iterdir"], [268, 8, 1, "", "joinpath"], [268, 7, 1, "", "name"], [268, 8, 1, "", "open"], [268, 8, 1, "", "read_bytes"], [268, 8, 1, "", "read_text"]], "importlib.resources.abc.TraversableResources": [[268, 8, 1, "", "files"]], "importlib.util": [[265, 11, 1, "", "LazyLoader"], [265, 7, 1, "", "MAGIC_NUMBER"], [265, 12, 1, "", "cache_from_source"], [265, 12, 1, "", "decode_source"], [265, 12, 1, "", "find_spec"], [265, 12, 1, "", "module_for_loader"], [265, 12, 1, "", "module_from_spec"], [265, 12, 1, "", "resolve_name"], [265, 12, 1, "", "set_loader"], [265, 12, 1, "", "set_package"], [265, 12, 1, "", "source_from_cache"], [265, 12, 1, "", "source_hash"], [265, 12, 1, "", "spec_from_file_location"], [265, 12, 1, "", "spec_from_loader"]], "importlib.util.LazyLoader": [[265, 8, 1, "", "factory"]], "inspect": [[270, 11, 1, "", "BoundArguments"], [270, 9, 1, "", "CO_ASYNC_GENERATOR"], [270, 9, 1, "", "CO_COROUTINE"], [270, 9, 1, "", "CO_GENERATOR"], [270, 9, 1, "", "CO_ITERABLE_COROUTINE"], [270, 9, 1, "", "CO_NESTED"], [270, 9, 1, "", "CO_NEWLOCALS"], [270, 9, 1, "", "CO_OPTIMIZED"], [270, 9, 1, "", "CO_VARARGS"], [270, 9, 1, "", "CO_VARKEYWORDS"], [270, 11, 1, "", "FrameInfo"], [270, 11, 1, "", "Parameter"], [270, 11, 1, "", "Signature"], [270, 11, 1, "", "Traceback"], [270, 12, 1, "", "cleandoc"], [270, 12, 1, "", "currentframe"], [270, 12, 1, "", "formatargvalues"], [270, 12, 1, "", "get_annotations"], [270, 12, 1, "", "getargvalues"], [270, 12, 1, "", "getattr_static"], [270, 12, 1, "", "getcallargs"], [270, 12, 1, "", "getclasstree"], [270, 12, 1, "", "getclosurevars"], [270, 12, 1, "", "getcomments"], [270, 12, 1, "", "getcoroutinelocals"], [270, 12, 1, "", "getcoroutinestate"], [270, 12, 1, "", "getdoc"], [270, 12, 1, "", "getfile"], [270, 12, 1, "", "getframeinfo"], [270, 12, 1, "", "getfullargspec"], [270, 12, 1, "", "getgeneratorlocals"], [270, 12, 1, "", "getgeneratorstate"], [270, 12, 1, "", "getinnerframes"], [270, 12, 1, "", "getmembers"], [270, 12, 1, "", "getmembers_static"], [270, 12, 1, "", "getmodule"], [270, 12, 1, "", "getmodulename"], [270, 12, 1, "", "getmro"], [270, 12, 1, "", "getouterframes"], [270, 12, 1, "", "getsource"], [270, 12, 1, "", "getsourcefile"], [270, 12, 1, "", "getsourcelines"], [270, 12, 1, "", "isabstract"], [270, 12, 1, "", "isasyncgen"], [270, 12, 1, "", "isasyncgenfunction"], [270, 12, 1, "", "isawaitable"], [270, 12, 1, "", "isbuiltin"], [270, 12, 1, "", "isclass"], [270, 12, 1, "", "iscode"], [270, 12, 1, "", "iscoroutine"], [270, 12, 1, "", "iscoroutinefunction"], [270, 12, 1, "", "isdatadescriptor"], [270, 12, 1, "", "isframe"], [270, 12, 1, "", "isfunction"], [270, 12, 1, "", "isgenerator"], [270, 12, 1, "", "isgeneratorfunction"], [270, 12, 1, "", "isgetsetdescriptor"], [270, 12, 1, "", "ismemberdescriptor"], [270, 12, 1, "", "ismethod"], [270, 12, 1, "", "ismethoddescriptor"], [270, 12, 1, "", "ismethodwrapper"], [270, 12, 1, "", "ismodule"], [270, 12, 1, "", "isroutine"], [270, 12, 1, "", "istraceback"], [270, 12, 1, "", "signature"], [270, 12, 1, "", "stack"], [270, 12, 1, "", "trace"], [270, 12, 1, "", "unwrap"], [270, 14, 1, "cmdoption-inspect-details", "--details"]], "inspect.BoundArguments": [[270, 8, 1, "", "apply_defaults"], [270, 7, 1, "", "args"], [270, 7, 1, "", "arguments"], [270, 7, 1, "", "kwargs"], [270, 7, 1, "", "signature"]], "inspect.FrameInfo": [[270, 7, 1, "", "code_context"], [270, 7, 1, "", "filename"], [270, 7, 1, "", "frame"], [270, 7, 1, "", "function"], [270, 7, 1, "", "index"], [270, 7, 1, "", "lineno"], [270, 7, 1, "", "positions"]], "inspect.Parameter": [[270, 7, 1, "", "annotation"], [270, 7, 1, "", "default"], [270, 7, 1, "", "empty"], [270, 7, 1, "", "kind"], [270, 7, 1, "", "name"], [270, 8, 1, "", "replace"]], "inspect.Parameter.kind": [[270, 7, 1, "", "description"]], "inspect.Signature": [[270, 8, 1, "", "bind"], [270, 8, 1, "", "bind_partial"], [270, 7, 1, "", "empty"], [270, 8, 1, "", "from_callable"], [270, 7, 1, "", "parameters"], [270, 8, 1, "", "replace"], [270, 7, 1, "", "return_annotation"]], "inspect.Traceback": [[270, 7, 1, "", "code_context"], [270, 7, 1, "", "filename"], [270, 7, 1, "", "function"], [270, 7, 1, "", "index"], [270, 7, 1, "", "lineno"], [270, 7, 1, "", "positions"]], "instance": [[360, 7, 1, "", "__class__"]], "int": [[360, 8, 1, "", "as_integer_ratio"], [360, 8, 1, "", "bit_count"], [360, 8, 1, "", "bit_length"], [360, 8, 1, "", "from_bytes"], [360, 8, 1, "", "to_bytes"]], "io": [[273, 6, 1, "", "BlockingIOError"], [273, 11, 1, "", "BufferedIOBase"], [273, 11, 1, "", "BufferedRWPair"], [273, 11, 1, "", "BufferedRandom"], [273, 11, 1, "", "BufferedReader"], [273, 11, 1, "", "BufferedWriter"], [273, 11, 1, "", "BytesIO"], [273, 9, 1, "", "DEFAULT_BUFFER_SIZE"], [273, 11, 1, "", "FileIO"], [273, 11, 1, "", "IOBase"], [273, 11, 1, "", "IncrementalNewlineDecoder"], [273, 11, 1, "", "RawIOBase"], [273, 11, 1, "", "StringIO"], [273, 11, 1, "", "TextIOBase"], [273, 11, 1, "", "TextIOWrapper"], [273, 6, 1, "", "UnsupportedOperation"], [273, 12, 1, "", "open"], [273, 12, 1, "", "open_code"], [273, 12, 1, "", "text_encoding"]], "io.BufferedIOBase": [[273, 8, 1, "", "detach"], [273, 7, 1, "", "raw"], [273, 8, 1, "", "read"], [273, 8, 1, "", "read1"], [273, 8, 1, "", "readinto"], [273, 8, 1, "", "readinto1"], [273, 8, 1, "", "write"]], "io.BufferedReader": [[273, 8, 1, "", "peek"], [273, 8, 1, "", "read"], [273, 8, 1, "", "read1"]], "io.BufferedWriter": [[273, 8, 1, "", "flush"], [273, 8, 1, "", "write"]], "io.BytesIO": [[273, 8, 1, "", "getbuffer"], [273, 8, 1, "", "getvalue"], [273, 8, 1, "", "read1"], [273, 8, 1, "", "readinto1"]], "io.FileIO": [[273, 7, 1, "", "mode"], [273, 7, 1, "", "name"]], "io.IOBase": [[273, 8, 1, "", "__del__"], [273, 8, 1, "", "close"], [273, 7, 1, "", "closed"], [273, 8, 1, "", "fileno"], [273, 8, 1, "", "flush"], [273, 8, 1, "", "isatty"], [273, 8, 1, "", "readable"], [273, 8, 1, "", "readline"], [273, 8, 1, "", "readlines"], [273, 8, 1, "", "seek"], [273, 8, 1, "", "seekable"], [273, 8, 1, "", "tell"], [273, 8, 1, "", "truncate"], [273, 8, 1, "", "writable"], [273, 8, 1, "", "writelines"]], "io.RawIOBase": [[273, 8, 1, "", "read"], [273, 8, 1, "", "readall"], [273, 8, 1, "", "readinto"], [273, 8, 1, "", "write"]], "io.StringIO": [[273, 8, 1, "", "getvalue"]], "io.TextIOBase": [[273, 7, 1, "", "buffer"], [273, 8, 1, "", "detach"], [273, 7, 1, "", "encoding"], [273, 7, 1, "", "errors"], [273, 7, 1, "", "newlines"], [273, 8, 1, "", "read"], [273, 8, 1, "", "readline"], [273, 8, 1, "", "seek"], [273, 8, 1, "", "tell"], [273, 8, 1, "", "write"]], "io.TextIOWrapper": [[273, 7, 1, "", "line_buffering"], [273, 8, 1, "", "reconfigure"], [273, 8, 1, "", "seek"], [273, 8, 1, "", "tell"], [273, 7, 1, "", "write_through"]], "ipaddress": [[274, 6, 1, "", "AddressValueError"], [274, 11, 1, "", "IPv4Address"], [274, 11, 1, "", "IPv4Interface"], [274, 11, 1, "", "IPv4Network"], [274, 11, 1, "", "IPv6Address"], [274, 11, 1, "", "IPv6Interface"], [274, 11, 1, "", "IPv6Network"], [274, 6, 1, "", "NetmaskValueError"], [274, 12, 1, "", "collapse_addresses"], [274, 12, 1, "", "get_mixed_type_key"], [274, 12, 1, "", "ip_address"], [274, 12, 1, "", "ip_interface"], [274, 12, 1, "", "ip_network"], [274, 12, 1, "", "summarize_address_range"], [274, 12, 1, "", "v4_int_to_packed"], [274, 12, 1, "", "v6_int_to_packed"]], "ipaddress.IPv4Address": [[274, 8, 1, "", "__format__"], [274, 7, 1, "", "compressed"], [274, 7, 1, "", "exploded"], [274, 7, 1, "", "is_global"], [274, 7, 1, "", "is_link_local"], [274, 7, 1, "", "is_loopback"], [274, 7, 1, "", "is_multicast"], [274, 7, 1, "", "is_private"], [274, 7, 1, "", "is_reserved"], [274, 7, 1, "", "is_unspecified"], [274, 7, 1, "", "max_prefixlen"], [274, 7, 1, "", "packed"], [274, 7, 1, "", "reverse_pointer"], [274, 7, 1, "", "version"]], "ipaddress.IPv4Interface": [[274, 7, 1, "", "ip"], [274, 7, 1, "", "network"], [274, 7, 1, "", "with_hostmask"], [274, 7, 1, "", "with_netmask"], [274, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv4Network": [[274, 8, 1, "", "address_exclude"], [274, 7, 1, "", "broadcast_address"], [274, 8, 1, "", "compare_networks"], [274, 7, 1, "", "compressed"], [274, 7, 1, "", "exploded"], [274, 7, 1, "", "hostmask"], [274, 8, 1, "", "hosts"], [274, 7, 1, "", "is_link_local"], [274, 7, 1, "", "is_loopback"], [274, 7, 1, "", "is_multicast"], [274, 7, 1, "", "is_private"], [274, 7, 1, "", "is_reserved"], [274, 7, 1, "", "is_unspecified"], [274, 7, 1, "", "max_prefixlen"], [274, 7, 1, "", "netmask"], [274, 7, 1, "", "network_address"], [274, 7, 1, "", "num_addresses"], [274, 8, 1, "", "overlaps"], [274, 7, 1, "", "prefixlen"], [274, 8, 1, "", "subnet_of"], [274, 8, 1, "", "subnets"], [274, 8, 1, "", "supernet"], [274, 8, 1, "", "supernet_of"], [274, 7, 1, "", "version"], [274, 7, 1, "", "with_hostmask"], [274, 7, 1, "", "with_netmask"], [274, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv6Address": [[274, 8, 1, "", "__format__"], [274, 7, 1, "", "compressed"], [274, 7, 1, "", "exploded"], [274, 7, 1, "", "ipv4_mapped"], [274, 7, 1, "", "is_global"], [274, 7, 1, "", "is_link_local"], [274, 7, 1, "", "is_loopback"], [274, 7, 1, "", "is_multicast"], [274, 7, 1, "", "is_private"], [274, 7, 1, "", "is_reserved"], [274, 7, 1, "", "is_site_local"], [274, 7, 1, "", "is_unspecified"], [274, 7, 1, "", "max_prefixlen"], [274, 7, 1, "", "packed"], [274, 7, 1, "", "reverse_pointer"], [274, 7, 1, "", "scope_id"], [274, 7, 1, "", "sixtofour"], [274, 7, 1, "", "teredo"], [274, 7, 1, "", "version"]], "ipaddress.IPv6Interface": [[274, 7, 1, "", "ip"], [274, 7, 1, "", "network"], [274, 7, 1, "", "with_hostmask"], [274, 7, 1, "", "with_netmask"], [274, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv6Network": [[274, 8, 1, "", "address_exclude"], [274, 7, 1, "", "broadcast_address"], [274, 8, 1, "", "compare_networks"], [274, 7, 1, "", "compressed"], [274, 7, 1, "", "exploded"], [274, 7, 1, "", "hostmask"], [274, 8, 1, "", "hosts"], [274, 7, 1, "", "is_link_local"], [274, 7, 1, "", "is_loopback"], [274, 7, 1, "", "is_multicast"], [274, 7, 1, "", "is_private"], [274, 7, 1, "", "is_reserved"], [274, 7, 1, "", "is_site_local"], [274, 7, 1, "", "is_unspecified"], [274, 7, 1, "", "max_prefixlen"], [274, 7, 1, "", "netmask"], [274, 7, 1, "", "network_address"], [274, 7, 1, "", "num_addresses"], [274, 8, 1, "", "overlaps"], [274, 7, 1, "", "prefixlen"], [274, 8, 1, "", "subnet_of"], [274, 8, 1, "", "subnets"], [274, 8, 1, "", "supernet"], [274, 8, 1, "", "supernet_of"], [274, 7, 1, "", "version"], [274, 7, 1, "", "with_hostmask"], [274, 7, 1, "", "with_netmask"], [274, 7, 1, "", "with_prefixlen"]], "iterator": [[360, 8, 1, "", "__iter__"], [360, 8, 1, "", "__next__"]], "itertools": [[276, 12, 1, "", "accumulate"], [276, 12, 1, "", "chain"], [276, 12, 1, "", "combinations"], [276, 12, 1, "", "combinations_with_replacement"], [276, 12, 1, "", "compress"], [276, 12, 1, "", "count"], [276, 12, 1, "", "cycle"], [276, 12, 1, "", "dropwhile"], [276, 12, 1, "", "filterfalse"], [276, 12, 1, "", "groupby"], [276, 12, 1, "", "islice"], [276, 12, 1, "", "pairwise"], [276, 12, 1, "", "permutations"], [276, 12, 1, "", "product"], [276, 12, 1, "", "repeat"], [276, 12, 1, "", "starmap"], [276, 12, 1, "", "takewhile"], [276, 12, 1, "", "tee"], [276, 12, 1, "", "zip_longest"]], "itertools.chain": [[276, 8, 1, "", "from_iterable"]], "json": [[277, 6, 1, "", "JSONDecodeError"], [277, 11, 1, "", "JSONDecoder"], [277, 11, 1, "", "JSONEncoder"], [277, 12, 1, "", "dump"], [277, 12, 1, "", "dumps"], [277, 12, 1, "", "load"], [277, 12, 1, "", "loads"], [277, 10, 0, "-", "tool"]], "json.JSONDecodeError": [[277, 7, 1, "", "colno"], [277, 7, 1, "", "doc"], [277, 7, 1, "", "lineno"], [277, 7, 1, "", "msg"], [277, 7, 1, "", "pos"]], "json.JSONDecoder": [[277, 8, 1, "", "decode"], [277, 8, 1, "", "raw_decode"]], "json.JSONEncoder": [[277, 8, 1, "", "default"], [277, 8, 1, "", "encode"], [277, 8, 1, "", "iterencode"]], "keyword": [[278, 12, 1, "", "iskeyword"], [278, 12, 1, "", "issoftkeyword"], [278, 9, 1, "", "kwlist"], [278, 9, 1, "", "softkwlist"]], "linecache": [[280, 12, 1, "", "checkcache"], [280, 12, 1, "", "clearcache"], [280, 12, 1, "", "getline"], [280, 12, 1, "", "lazycache"]], "list": [[360, 8, 1, "", "sort"]], "locale": [[281, 9, 1, "", "ABDAY_1"], [281, 9, 1, "", "ABDAY_2"], [281, 9, 1, "", "ABDAY_3"], [281, 9, 1, "", "ABDAY_4"], [281, 9, 1, "", "ABDAY_5"], [281, 9, 1, "", "ABDAY_6"], [281, 9, 1, "", "ABDAY_7"], [281, 9, 1, "", "ABMON_1"], [281, 9, 1, "", "ABMON_10"], [281, 9, 1, "", "ABMON_11"], [281, 9, 1, "", "ABMON_12"], [281, 9, 1, "", "ABMON_2"], [281, 9, 1, "", "ABMON_3"], [281, 9, 1, "", "ABMON_4"], [281, 9, 1, "", "ABMON_5"], [281, 9, 1, "", "ABMON_6"], [281, 9, 1, "", "ABMON_7"], [281, 9, 1, "", "ABMON_8"], [281, 9, 1, "", "ABMON_9"], [281, 9, 1, "", "ALT_DIGITS"], [281, 9, 1, "", "CHAR_MAX"], [281, 9, 1, "", "CODESET"], [281, 9, 1, "", "CRNCYSTR"], [281, 9, 1, "", "DAY_1"], [281, 9, 1, "", "DAY_2"], [281, 9, 1, "", "DAY_3"], [281, 9, 1, "", "DAY_4"], [281, 9, 1, "", "DAY_5"], [281, 9, 1, "", "DAY_6"], [281, 9, 1, "", "DAY_7"], [281, 9, 1, "", "D_FMT"], [281, 9, 1, "", "D_T_FMT"], [281, 9, 1, "", "ERA"], [281, 9, 1, "", "ERA_D_FMT"], [281, 9, 1, "", "ERA_D_T_FMT"], [281, 9, 1, "", "ERA_T_FMT"], [281, 6, 1, "", "Error"], [281, 9, 1, "", "LC_ALL"], [281, 9, 1, "", "LC_COLLATE"], [281, 9, 1, "", "LC_CTYPE"], [281, 9, 1, "", "LC_MESSAGES"], [281, 9, 1, "", "LC_MONETARY"], [281, 9, 1, "", "LC_NUMERIC"], [281, 9, 1, "", "LC_TIME"], [281, 9, 1, "", "MON_1"], [281, 9, 1, "", "MON_10"], [281, 9, 1, "", "MON_11"], [281, 9, 1, "", "MON_12"], [281, 9, 1, "", "MON_2"], [281, 9, 1, "", "MON_3"], [281, 9, 1, "", "MON_4"], [281, 9, 1, "", "MON_5"], [281, 9, 1, "", "MON_6"], [281, 9, 1, "", "MON_7"], [281, 9, 1, "", "MON_8"], [281, 9, 1, "", "MON_9"], [281, 9, 1, "", "NOEXPR"], [281, 9, 1, "", "RADIXCHAR"], [281, 9, 1, "", "THOUSEP"], [281, 9, 1, "", "T_FMT"], [281, 9, 1, "", "T_FMT_AMPM"], [281, 9, 1, "", "YESEXPR"], [281, 12, 1, "", "atof"], [281, 12, 1, "", "atoi"], [281, 12, 1, "", "bind_textdomain_codeset"], [281, 12, 1, "", "bindtextdomain"], [281, 12, 1, "", "currency"], [281, 12, 1, "", "dcgettext"], [281, 12, 1, "", "delocalize"], [281, 12, 1, "", "dgettext"], [281, 12, 1, "", "format"], [281, 12, 1, "", "format_string"], [281, 12, 1, "", "getdefaultlocale"], [281, 12, 1, "", "getencoding"], [281, 12, 1, "", "getlocale"], [281, 12, 1, "", "getpreferredencoding"], [281, 12, 1, "", "gettext"], [281, 12, 1, "", "localeconv"], [281, 12, 1, "", "localize"], [281, 12, 1, "", "nl_langinfo"], [281, 12, 1, "", "normalize"], [281, 12, 1, "", "resetlocale"], [281, 12, 1, "", "setlocale"], [281, 12, 1, "", "str"], [281, 12, 1, "", "strcoll"], [281, 12, 1, "", "strxfrm"], [281, 12, 1, "", "textdomain"]], "logging": [[282, 11, 1, "", "BufferingFormatter"], [282, 9, 1, "", "CRITICAL"], [282, 9, 1, "", "DEBUG"], [282, 9, 1, "", "ERROR"], [284, 11, 1, "", "FileHandler"], [282, 11, 1, "", "Filter"], [282, 11, 1, "", "Formatter"], [282, 11, 1, "", "Handler"], [282, 9, 1, "", "INFO"], [282, 11, 1, "", "LogRecord"], [282, 11, 1, "", "Logger"], [282, 11, 1, "", "LoggerAdapter"], [282, 9, 1, "", "NOTSET"], [284, 11, 1, "", "NullHandler"], [284, 11, 1, "", "StreamHandler"], [282, 9, 1, "", "WARNING"], [282, 12, 1, "", "addLevelName"], [282, 12, 1, "", "basicConfig"], [282, 12, 1, "", "captureWarnings"], [283, 10, 0, "-", "config"], [282, 12, 1, "", "critical"], [282, 12, 1, "", "debug"], [282, 12, 1, "", "disable"], [282, 12, 1, "", "error"], [282, 12, 1, "", "exception"], [282, 12, 1, "", "getLevelName"], [282, 12, 1, "", "getLevelNamesMapping"], [282, 12, 1, "", "getLogRecordFactory"], [282, 12, 1, "", "getLogger"], [282, 12, 1, "", "getLoggerClass"], [284, 10, 0, "-", "handlers"], [282, 12, 1, "", "info"], [282, 7, 1, "", "lastResort"], [282, 12, 1, "", "log"], [282, 12, 1, "", "makeLogRecord"], [282, 7, 1, "", "raiseExceptions"], [282, 12, 1, "", "setLogRecordFactory"], [282, 12, 1, "", "setLoggerClass"], [282, 12, 1, "", "shutdown"], [282, 12, 1, "", "warning"]], "logging.BufferingFormatter": [[282, 8, 1, "", "format"], [282, 8, 1, "", "formatFooter"], [282, 8, 1, "", "formatHeader"]], "logging.FileHandler": [[284, 8, 1, "", "close"], [284, 8, 1, "", "emit"]], "logging.Filter": [[282, 8, 1, "", "filter"]], "logging.Formatter": [[282, 8, 1, "", "format"], [282, 8, 1, "", "formatException"], [282, 8, 1, "", "formatStack"], [282, 8, 1, "", "formatTime"]], "logging.Handler": [[282, 8, 1, "", "__init__"], [282, 8, 1, "", "acquire"], [282, 8, 1, "", "addFilter"], [282, 8, 1, "", "close"], [282, 8, 1, "", "createLock"], [282, 8, 1, "", "emit"], [282, 8, 1, "", "filter"], [282, 8, 1, "", "flush"], [282, 8, 1, "", "format"], [282, 8, 1, "", "handle"], [282, 8, 1, "", "handleError"], [282, 8, 1, "", "release"], [282, 8, 1, "", "removeFilter"], [282, 8, 1, "", "setFormatter"], [282, 8, 1, "", "setLevel"]], "logging.LogRecord": [[282, 8, 1, "", "getMessage"]], "logging.Logger": [[282, 8, 1, "", "addFilter"], [282, 8, 1, "", "addHandler"], [282, 8, 1, "", "critical"], [282, 8, 1, "", "debug"], [282, 7, 1, "", "disabled"], [282, 8, 1, "", "error"], [282, 8, 1, "", "exception"], [282, 8, 1, "", "filter"], [282, 8, 1, "", "findCaller"], [282, 8, 1, "", "getChild"], [282, 8, 1, "", "getEffectiveLevel"], [282, 8, 1, "", "handle"], [282, 7, 1, "", "handlers"], [282, 8, 1, "", "hasHandlers"], [282, 8, 1, "", "info"], [282, 8, 1, "", "isEnabledFor"], [282, 7, 1, "", "level"], [282, 8, 1, "", "log"], [282, 8, 1, "", "makeRecord"], [282, 7, 1, "", "name"], [282, 7, 1, "", "parent"], [282, 7, 1, "", "propagate"], [282, 8, 1, "", "removeFilter"], [282, 8, 1, "", "removeHandler"], [282, 8, 1, "", "setLevel"], [282, 8, 1, "", "warning"]], "logging.LoggerAdapter": [[282, 7, 1, "", "_log"], [282, 7, 1, "", "manager"], [282, 8, 1, "", "process"]], "logging.NullHandler": [[284, 8, 1, "", "createLock"], [284, 8, 1, "", "emit"], [284, 8, 1, "", "handle"]], "logging.StreamHandler": [[284, 8, 1, "", "emit"], [284, 8, 1, "", "flush"], [284, 8, 1, "", "setStream"], [284, 7, 1, "", "terminator"]], "logging.config": [[283, 12, 1, "", "dictConfig"], [283, 12, 1, "", "fileConfig"], [283, 12, 1, "", "listen"], [283, 12, 1, "", "stopListening"]], "logging.handlers": [[284, 11, 1, "", "BaseRotatingHandler"], [284, 11, 1, "", "BufferingHandler"], [284, 11, 1, "", "DatagramHandler"], [284, 11, 1, "", "HTTPHandler"], [284, 11, 1, "", "MemoryHandler"], [284, 11, 1, "", "NTEventLogHandler"], [284, 11, 1, "", "QueueHandler"], [284, 11, 1, "", "QueueListener"], [284, 11, 1, "", "RotatingFileHandler"], [284, 11, 1, "", "SMTPHandler"], [284, 11, 1, "", "SocketHandler"], [284, 11, 1, "", "SysLogHandler"], [284, 11, 1, "", "TimedRotatingFileHandler"], [284, 11, 1, "", "WatchedFileHandler"]], "logging.handlers.BaseRotatingHandler": [[284, 7, 1, "", "namer"], [284, 8, 1, "", "rotate"], [284, 8, 1, "", "rotation_filename"], [284, 7, 1, "", "rotator"]], "logging.handlers.BufferingHandler": [[284, 8, 1, "", "emit"], [284, 8, 1, "", "flush"], [284, 8, 1, "", "shouldFlush"]], "logging.handlers.DatagramHandler": [[284, 8, 1, "", "emit"], [284, 8, 1, "", "makeSocket"], [284, 8, 1, "", "send"]], "logging.handlers.HTTPHandler": [[284, 8, 1, "", "emit"], [284, 8, 1, "", "mapLogRecord"]], "logging.handlers.MemoryHandler": [[284, 8, 1, "", "close"], [284, 8, 1, "", "flush"], [284, 8, 1, "", "setTarget"], [284, 8, 1, "", "shouldFlush"]], "logging.handlers.NTEventLogHandler": [[284, 8, 1, "", "close"], [284, 8, 1, "", "emit"], [284, 8, 1, "", "getEventCategory"], [284, 8, 1, "", "getEventType"], [284, 8, 1, "", "getMessageID"]], "logging.handlers.QueueHandler": [[284, 8, 1, "", "emit"], [284, 8, 1, "", "enqueue"], [284, 8, 1, "", "prepare"]], "logging.handlers.QueueListener": [[284, 8, 1, "", "dequeue"], [284, 8, 1, "", "enqueue_sentinel"], [284, 8, 1, "", "handle"], [284, 8, 1, "", "prepare"], [284, 8, 1, "", "start"], [284, 8, 1, "", "stop"]], "logging.handlers.RotatingFileHandler": [[284, 8, 1, "", "doRollover"], [284, 8, 1, "", "emit"]], "logging.handlers.SMTPHandler": [[284, 8, 1, "", "emit"], [284, 8, 1, "", "getSubject"]], "logging.handlers.SocketHandler": [[284, 8, 1, "", "close"], [284, 8, 1, "", "createSocket"], [284, 8, 1, "", "emit"], [284, 8, 1, "", "handleError"], [284, 8, 1, "", "makePickle"], [284, 8, 1, "", "makeSocket"], [284, 8, 1, "", "send"]], "logging.handlers.SysLogHandler": [[284, 8, 1, "", "close"], [284, 8, 1, "", "createSocket"], [284, 8, 1, "", "emit"], [284, 8, 1, "", "encodePriority"], [284, 8, 1, "", "mapPriority"]], "logging.handlers.TimedRotatingFileHandler": [[284, 8, 1, "", "doRollover"], [284, 8, 1, "", "emit"], [284, 8, 1, "", "getFilesToDelete"]], "logging.handlers.WatchedFileHandler": [[284, 8, 1, "", "emit"], [284, 8, 1, "", "reopenIfNeeded"]], "logging.logging.Formatter": [[113, 8, 1, "", "__init__"]], "lzma": [[285, 11, 1, "", "LZMACompressor"], [285, 11, 1, "", "LZMADecompressor"], [285, 6, 1, "", "LZMAError"], [285, 11, 1, "", "LZMAFile"], [285, 12, 1, "", "compress"], [285, 12, 1, "", "decompress"], [285, 12, 1, "", "is_check_supported"], [285, 12, 1, "", "open"]], "lzma.LZMACompressor": [[285, 8, 1, "", "compress"], [285, 8, 1, "", "flush"]], "lzma.LZMADecompressor": [[285, 7, 1, "", "check"], [285, 8, 1, "", "decompress"], [285, 7, 1, "", "eof"], [285, 7, 1, "", "needs_input"], [285, 7, 1, "", "unused_data"]], "lzma.LZMAFile": [[285, 8, 1, "", "peek"]], "mailbox": [[286, 11, 1, "", "Babyl"], [286, 11, 1, "", "BabylMessage"], [286, 6, 1, "", "Error"], [286, 6, 1, "", "ExternalClashError"], [286, 6, 1, "", "FormatError"], [286, 11, 1, "", "MH"], [286, 11, 1, "", "MHMessage"], [286, 11, 1, "", "MMDF"], [286, 11, 1, "", "MMDFMessage"], [286, 11, 1, "", "Mailbox"], [286, 11, 1, "", "Maildir"], [286, 11, 1, "", "MaildirMessage"], [286, 11, 1, "", "Message"], [286, 6, 1, "", "NoSuchMailboxError"], [286, 6, 1, "", "NotEmptyError"], [286, 11, 1, "", "mbox"], [286, 11, 1, "", "mboxMessage"]], "mailbox.Babyl": [[286, 8, 1, "", "get_file"], [286, 8, 1, "", "get_labels"], [286, 8, 1, "", "lock"], [286, 8, 1, "", "unlock"]], "mailbox.BabylMessage": [[286, 8, 1, "", "add_label"], [286, 8, 1, "", "get_labels"], [286, 8, 1, "", "get_visible"], [286, 8, 1, "", "remove_label"], [286, 8, 1, "", "set_labels"], [286, 8, 1, "", "set_visible"], [286, 8, 1, "", "update_visible"]], "mailbox.MH": [[286, 8, 1, "", "__delitem__"], [286, 8, 1, "", "add_folder"], [286, 8, 1, "", "close"], [286, 8, 1, "", "discard"], [286, 8, 1, "", "flush"], [286, 8, 1, "", "get_file"], [286, 8, 1, "", "get_folder"], [286, 8, 1, "", "get_sequences"], [286, 8, 1, "", "list_folders"], [286, 8, 1, "", "lock"], [286, 8, 1, "", "pack"], [286, 8, 1, "", "remove"], [286, 8, 1, "", "remove_folder"], [286, 8, 1, "", "set_sequences"], [286, 8, 1, "", "unlock"]], "mailbox.MHMessage": [[286, 8, 1, "", "add_sequence"], [286, 8, 1, "", "get_sequences"], [286, 8, 1, "", "remove_sequence"], [286, 8, 1, "", "set_sequences"]], "mailbox.MMDF": [[286, 8, 1, "", "get_file"], [286, 8, 1, "", "lock"], [286, 8, 1, "", "unlock"]], "mailbox.MMDFMessage": [[286, 8, 1, "", "add_flag"], [286, 8, 1, "", "get_flags"], [286, 8, 1, "", "get_from"], [286, 8, 1, "", "remove_flag"], [286, 8, 1, "", "set_flags"], [286, 8, 1, "", "set_from"]], "mailbox.Mailbox": [[286, 8, 1, "", "__contains__"], [286, 8, 1, "", "__delitem__"], [286, 8, 1, "", "__getitem__"], [286, 8, 1, "", "__iter__"], [286, 8, 1, "", "__len__"], [286, 8, 1, "", "__setitem__"], [286, 8, 1, "", "add"], [286, 8, 1, "", "clear"], [286, 8, 1, "", "close"], [286, 8, 1, "", "discard"], [286, 8, 1, "", "flush"], [286, 8, 1, "", "get"], [286, 8, 1, "", "get_bytes"], [286, 8, 1, "", "get_file"], [286, 8, 1, "", "get_message"], [286, 8, 1, "", "get_string"], [286, 8, 1, "", "items"], [286, 8, 1, "", "iteritems"], [286, 8, 1, "", "iterkeys"], [286, 8, 1, "", "itervalues"], [286, 8, 1, "", "keys"], [286, 8, 1, "", "lock"], [286, 8, 1, "", "pop"], [286, 8, 1, "", "popitem"], [286, 8, 1, "", "remove"], [286, 8, 1, "", "unlock"], [286, 8, 1, "", "update"], [286, 8, 1, "", "values"]], "mailbox.Maildir": [[286, 8, 1, "", "__setitem__"], [286, 8, 1, "", "add"], [286, 8, 1, "", "add_folder"], [286, 8, 1, "", "clean"], [286, 8, 1, "", "close"], [286, 7, 1, "", "colon"], [286, 8, 1, "", "flush"], [286, 8, 1, "", "get_file"], [286, 8, 1, "", "get_folder"], [286, 8, 1, "", "list_folders"], [286, 8, 1, "", "lock"], [286, 8, 1, "", "remove_folder"], [286, 8, 1, "", "unlock"], [286, 8, 1, "", "update"]], "mailbox.MaildirMessage": [[286, 8, 1, "", "add_flag"], [286, 8, 1, "", "get_date"], [286, 8, 1, "", "get_flags"], [286, 8, 1, "", "get_info"], [286, 8, 1, "", "get_subdir"], [286, 8, 1, "", "remove_flag"], [286, 8, 1, "", "set_date"], [286, 8, 1, "", "set_flags"], [286, 8, 1, "", "set_info"], [286, 8, 1, "", "set_subdir"]], "mailbox.mbox": [[286, 8, 1, "", "get_file"], [286, 8, 1, "", "lock"], [286, 8, 1, "", "unlock"]], "mailbox.mboxMessage": [[286, 8, 1, "", "add_flag"], [286, 8, 1, "", "get_flags"], [286, 8, 1, "", "get_from"], [286, 8, 1, "", "remove_flag"], [286, 8, 1, "", "set_flags"], [286, 8, 1, "", "set_from"]], "mailcap": [[287, 12, 1, "", "findmatch"], [287, 12, 1, "", "getcaps"]], "marshal": [[289, 12, 1, "", "dump"], [289, 12, 1, "", "dumps"], [289, 12, 1, "", "load"], [289, 12, 1, "", "loads"], [289, 9, 1, "", "version"]], "math": [[290, 12, 1, "", "acos"], [290, 12, 1, "", "acosh"], [290, 12, 1, "", "asin"], [290, 12, 1, "", "asinh"], [290, 12, 1, "", "atan"], [290, 12, 1, "", "atan2"], [290, 12, 1, "", "atanh"], [290, 12, 1, "", "cbrt"], [290, 12, 1, "", "ceil"], [290, 12, 1, "", "comb"], [290, 12, 1, "", "copysign"], [290, 12, 1, "", "cos"], [290, 12, 1, "", "cosh"], [290, 12, 1, "", "degrees"], [290, 12, 1, "", "dist"], [290, 9, 1, "", "e"], [290, 12, 1, "", "erf"], [290, 12, 1, "", "erfc"], [290, 12, 1, "", "exp"], [290, 12, 1, "", "exp2"], [290, 12, 1, "", "expm1"], [290, 12, 1, "", "fabs"], [290, 12, 1, "", "factorial"], [290, 12, 1, "", "floor"], [290, 12, 1, "", "fmod"], [290, 12, 1, "", "frexp"], [290, 12, 1, "", "fsum"], [290, 12, 1, "", "gamma"], [290, 12, 1, "", "gcd"], [290, 12, 1, "", "hypot"], [290, 9, 1, "", "inf"], [290, 12, 1, "", "isclose"], [290, 12, 1, "", "isfinite"], [290, 12, 1, "", "isinf"], [290, 12, 1, "", "isnan"], [290, 12, 1, "", "isqrt"], [290, 12, 1, "", "lcm"], [290, 12, 1, "", "ldexp"], [290, 12, 1, "", "lgamma"], [290, 12, 1, "", "log"], [290, 12, 1, "", "log10"], [290, 12, 1, "", "log1p"], [290, 12, 1, "", "log2"], [290, 12, 1, "", "modf"], [290, 9, 1, "", "nan"], [290, 12, 1, "", "nextafter"], [290, 12, 1, "", "perm"], [290, 9, 1, "", "pi"], [290, 12, 1, "", "pow"], [290, 12, 1, "", "prod"], [290, 12, 1, "", "radians"], [290, 12, 1, "", "remainder"], [290, 12, 1, "", "sin"], [290, 12, 1, "", "sinh"], [290, 12, 1, "", "sqrt"], [290, 12, 1, "", "tan"], [290, 12, 1, "", "tanh"], [290, 9, 1, "", "tau"], [290, 12, 1, "", "trunc"], [290, 12, 1, "", "ulp"]], "memoryview": [[360, 8, 1, "", "__eq__"], [360, 7, 1, "", "c_contiguous"], [360, 8, 1, "", "cast"], [360, 7, 1, "", "contiguous"], [360, 7, 1, "", "f_contiguous"], [360, 7, 1, "", "format"], [360, 8, 1, "", "hex"], [360, 7, 1, "", "itemsize"], [360, 7, 1, "", "nbytes"], [360, 7, 1, "", "ndim"], [360, 7, 1, "", "obj"], [360, 7, 1, "", "readonly"], [360, 8, 1, "", "release"], [360, 7, 1, "", "shape"], [360, 7, 1, "", "strides"], [360, 7, 1, "", "suboffsets"], [360, 8, 1, "", "tobytes"], [360, 8, 1, "", "tolist"], [360, 8, 1, "", "toreadonly"]], "method": [[443, 7, 1, "", "__doc__"], [443, 7, 1, "", "__func__"], [443, 7, 1, "", "__module__"], [443, 7, 1, "", "__name__"], [443, 7, 1, "", "__self__"]], "mimetypes": [[291, 11, 1, "", "MimeTypes"], [291, 12, 1, "", "add_type"], [291, 9, 1, "", "common_types"], [291, 9, 1, "", "encodings_map"], [291, 12, 1, "", "guess_all_extensions"], [291, 12, 1, "", "guess_extension"], [291, 12, 1, "", "guess_type"], [291, 12, 1, "", "init"], [291, 9, 1, "", "inited"], [291, 9, 1, "", "knownfiles"], [291, 12, 1, "", "read_mime_types"], [291, 9, 1, "", "suffix_map"], [291, 9, 1, "", "types_map"]], "mimetypes.MimeTypes": [[291, 7, 1, "", "encodings_map"], [291, 8, 1, "", "guess_all_extensions"], [291, 8, 1, "", "guess_extension"], [291, 8, 1, "", "guess_type"], [291, 8, 1, "", "read"], [291, 8, 1, "", "read_windows_registry"], [291, 8, 1, "", "readfp"], [291, 7, 1, "", "suffix_map"], [291, 7, 1, "", "types_map"], [291, 7, 1, "", "types_map_inv"]], "mmap": [[293, 9, 1, "", "MADV_AUTOSYNC"], [293, 9, 1, "", "MADV_CORE"], [293, 9, 1, "", "MADV_DODUMP"], [293, 9, 1, "", "MADV_DOFORK"], [293, 9, 1, "", "MADV_DONTDUMP"], [293, 9, 1, "", "MADV_DONTFORK"], [293, 9, 1, "", "MADV_DONTNEED"], [293, 9, 1, "", "MADV_FREE"], [293, 9, 1, "", "MADV_FREE_REUSABLE"], [293, 9, 1, "", "MADV_FREE_REUSE"], [293, 9, 1, "", "MADV_HUGEPAGE"], [293, 9, 1, "", "MADV_HWPOISON"], [293, 9, 1, "", "MADV_MERGEABLE"], [293, 9, 1, "", "MADV_NOCORE"], [293, 9, 1, "", "MADV_NOHUGEPAGE"], [293, 9, 1, "", "MADV_NORMAL"], [293, 9, 1, "", "MADV_NOSYNC"], [293, 9, 1, "", "MADV_PROTECT"], [293, 9, 1, "", "MADV_RANDOM"], [293, 9, 1, "", "MADV_REMOVE"], [293, 9, 1, "", "MADV_SEQUENTIAL"], [293, 9, 1, "", "MADV_SOFT_OFFLINE"], [293, 9, 1, "", "MADV_UNMERGEABLE"], [293, 9, 1, "", "MADV_WILLNEED"], [293, 9, 1, "", "MAP_ANON"], [293, 9, 1, "", "MAP_ANONYMOUS"], [293, 9, 1, "", "MAP_DENYWRITE"], [293, 9, 1, "", "MAP_EXECUTABLE"], [293, 9, 1, "", "MAP_POPULATE"], [293, 9, 1, "", "MAP_PRIVATE"], [293, 9, 1, "", "MAP_SHARED"], [293, 9, 1, "", "MAP_STACK"], [293, 11, 1, "", "mmap"]], "mmap.mmap": [[293, 8, 1, "", "close"], [293, 7, 1, "", "closed"], [293, 8, 1, "", "find"], [293, 8, 1, "", "flush"], [293, 8, 1, "", "madvise"], [293, 8, 1, "", "move"], [293, 8, 1, "", "read"], [293, 8, 1, "", "read_byte"], [293, 8, 1, "", "readline"], [293, 8, 1, "", "resize"], [293, 8, 1, "", "rfind"], [293, 8, 1, "", "seek"], [293, 8, 1, "", "size"], [293, 8, 1, "", "tell"], [293, 8, 1, "", "write"], [293, 8, 1, "", "write_byte"]], "modulefinder": [[294, 12, 1, "", "AddPackagePath"], [294, 11, 1, "", "ModuleFinder"], [294, 12, 1, "", "ReplacePackage"]], "modulefinder.ModuleFinder": [[294, 7, 1, "", "modules"], [294, 8, 1, "", "report"], [294, 8, 1, "", "run_script"]], "msilib": [[296, 11, 1, "", "Binary"], [296, 11, 1, "", "CAB"], [296, 11, 1, "", "Control"], [296, 12, 1, "", "CreateRecord"], [296, 11, 1, "", "Dialog"], [296, 11, 1, "", "Directory"], [296, 12, 1, "", "FCICreate"], [296, 11, 1, "", "Feature"], [296, 12, 1, "", "OpenDatabase"], [296, 11, 1, "", "RadioButtonGroup"], [296, 12, 1, "", "UuidCreate"], [296, 12, 1, "", "add_data"], [296, 12, 1, "", "add_stream"], [296, 12, 1, "", "add_tables"], [296, 12, 1, "", "gen_uuid"], [296, 12, 1, "", "init_database"], [296, 9, 1, "", "schema"], [296, 9, 1, "", "sequence"], [296, 9, 1, "", "text"]], "msilib.CAB": [[296, 8, 1, "", "append"], [296, 8, 1, "", "commit"]], "msilib.Control": [[296, 8, 1, "", "condition"], [296, 8, 1, "", "event"], [296, 8, 1, "", "mapping"]], "msilib.Database": [[296, 8, 1, "", "Close"], [296, 8, 1, "", "Commit"], [296, 8, 1, "", "GetSummaryInformation"], [296, 8, 1, "", "OpenView"]], "msilib.Dialog": [[296, 8, 1, "", "bitmap"], [296, 8, 1, "", "checkbox"], [296, 8, 1, "", "control"], [296, 8, 1, "", "line"], [296, 8, 1, "", "pushbutton"], [296, 8, 1, "", "radiogroup"], [296, 8, 1, "", "text"]], "msilib.Directory": [[296, 8, 1, "", "add_file"], [296, 8, 1, "", "glob"], [296, 8, 1, "", "remove_pyc"], [296, 8, 1, "", "start_component"]], "msilib.Feature": [[296, 8, 1, "", "set_current"]], "msilib.RadioButtonGroup": [[296, 8, 1, "", "add"]], "msilib.Record": [[296, 8, 1, "", "ClearData"], [296, 8, 1, "", "GetFieldCount"], [296, 8, 1, "", "GetInteger"], [296, 8, 1, "", "GetString"], [296, 8, 1, "", "SetInteger"], [296, 8, 1, "", "SetStream"], [296, 8, 1, "", "SetString"]], "msilib.SummaryInformation": [[296, 8, 1, "", "GetProperty"], [296, 8, 1, "", "GetPropertyCount"], [296, 8, 1, "", "Persist"], [296, 8, 1, "", "SetProperty"]], "msilib.View": [[296, 8, 1, "", "Close"], [296, 8, 1, "", "Execute"], [296, 8, 1, "", "Fetch"], [296, 8, 1, "", "GetColumnInfo"], [296, 8, 1, "", "Modify"]], "msvcrt": [[297, 9, 1, "", "CRT_ASSEMBLY_VERSION"], [297, 9, 1, "", "LIBRARIES_ASSEMBLY_NAME_PREFIX"], [297, 9, 1, "", "LK_LOCK"], [297, 9, 1, "", "LK_NBLCK"], [297, 9, 1, "", "LK_NBRLCK"], [297, 9, 1, "", "LK_RLCK"], [297, 9, 1, "", "LK_UNLCK"], [297, 9, 1, "", "VC_ASSEMBLY_PUBLICKEYTOKEN"], [297, 12, 1, "", "get_osfhandle"], [297, 12, 1, "", "getch"], [297, 12, 1, "", "getche"], [297, 12, 1, "", "getwch"], [297, 12, 1, "", "getwche"], [297, 12, 1, "", "heapmin"], [297, 12, 1, "", "kbhit"], [297, 12, 1, "", "locking"], [297, 12, 1, "", "open_osfhandle"], [297, 12, 1, "", "putch"], [297, 12, 1, "", "putwch"], [297, 12, 1, "", "setmode"], [297, 12, 1, "", "ungetch"], [297, 12, 1, "", "ungetwch"]], "multiprocessing": [[298, 12, 1, "", "Array"], [298, 6, 1, "", "AuthenticationError"], [298, 11, 1, "", "Barrier"], [298, 11, 1, "", "BoundedSemaphore"], [298, 6, 1, "", "BufferTooShort"], [298, 11, 1, "", "Condition"], [298, 11, 1, "", "Event"], [298, 11, 1, "", "JoinableQueue"], [298, 11, 1, "", "Lock"], [298, 12, 1, "", "Manager"], [298, 12, 1, "", "Pipe"], [298, 11, 1, "", "Process"], [298, 6, 1, "", "ProcessError"], [298, 11, 1, "", "Queue"], [298, 11, 1, "", "RLock"], [298, 11, 1, "", "Semaphore"], [298, 11, 1, "", "SimpleQueue"], [298, 6, 1, "", "TimeoutError"], [298, 12, 1, "", "Value"], [298, 12, 1, "", "active_children"], [298, 10, 0, "-", "connection"], [298, 12, 1, "", "cpu_count"], [298, 12, 1, "", "current_process"], [298, 10, 0, "-", "dummy"], [298, 12, 1, "", "freeze_support"], [298, 12, 1, "", "get_all_start_methods"], [298, 12, 1, "", "get_context"], [298, 12, 1, "", "get_logger"], [298, 12, 1, "", "get_start_method"], [298, 12, 1, "", "log_to_stderr"], [298, 10, 0, "-", "managers"], [298, 12, 1, "", "parent_process"], [298, 10, 0, "-", "pool"], [298, 12, 1, "", "set_executable"], [298, 12, 1, "", "set_start_method"], [299, 10, 0, "-", "shared_memory"], [298, 10, 0, "-", "sharedctypes"]], "multiprocessing.JoinableQueue": [[298, 8, 1, "", "join"], [298, 8, 1, "", "task_done"]], "multiprocessing.Lock": [[298, 8, 1, "", "acquire"], [298, 8, 1, "", "release"]], "multiprocessing.Process": [[298, 7, 1, "", "authkey"], [298, 8, 1, "", "close"], [298, 7, 1, "", "daemon"], [298, 7, 1, "", "exitcode"], [298, 8, 1, "", "is_alive"], [298, 8, 1, "", "join"], [298, 8, 1, "", "kill"], [298, 7, 1, "", "name"], [298, 7, 1, "", "pid"], [298, 8, 1, "", "run"], [298, 7, 1, "", "sentinel"], [298, 8, 1, "", "start"], [298, 8, 1, "", "terminate"]], "multiprocessing.Queue": [[298, 8, 1, "", "cancel_join_thread"], [298, 8, 1, "", "close"], [298, 8, 1, "", "empty"], [298, 8, 1, "", "full"], [298, 8, 1, "", "get"], [298, 8, 1, "", "get_nowait"], [298, 8, 1, "", "join_thread"], [298, 8, 1, "", "put"], [298, 8, 1, "", "put_nowait"], [298, 8, 1, "", "qsize"]], "multiprocessing.RLock": [[298, 8, 1, "", "acquire"], [298, 8, 1, "", "release"]], "multiprocessing.SimpleQueue": [[298, 8, 1, "", "close"], [298, 8, 1, "", "empty"], [298, 8, 1, "", "get"], [298, 8, 1, "", "put"]], "multiprocessing.connection": [[298, 12, 1, "", "Client"], [298, 11, 1, "", "Connection"], [298, 11, 1, "", "Listener"], [298, 12, 1, "", "answer_challenge"], [298, 12, 1, "", "deliver_challenge"], [298, 12, 1, "", "wait"]], "multiprocessing.connection.Connection": [[298, 8, 1, "", "close"], [298, 8, 1, "", "fileno"], [298, 8, 1, "", "poll"], [298, 8, 1, "", "recv"], [298, 8, 1, "", "recv_bytes"], [298, 8, 1, "", "recv_bytes_into"], [298, 8, 1, "", "send"], [298, 8, 1, "", "send_bytes"]], "multiprocessing.connection.Listener": [[298, 8, 1, "", "accept"], [298, 7, 1, "", "address"], [298, 8, 1, "", "close"], [298, 7, 1, "", "last_accepted"]], "multiprocessing.managers": [[298, 11, 1, "", "BaseManager"], [298, 11, 1, "", "BaseProxy"], [298, 11, 1, "", "Namespace"], [299, 11, 1, "", "SharedMemoryManager"], [298, 11, 1, "", "SyncManager"]], "multiprocessing.managers.BaseManager": [[298, 7, 1, "", "address"], [298, 8, 1, "", "connect"], [298, 8, 1, "", "get_server"], [298, 8, 1, "", "register"], [298, 8, 1, "", "shutdown"], [298, 8, 1, "", "start"]], "multiprocessing.managers.BaseProxy": [[298, 8, 1, "", "__repr__"], [298, 8, 1, "", "__str__"], [298, 8, 1, "", "_callmethod"], [298, 8, 1, "", "_getvalue"]], "multiprocessing.managers.SharedMemoryManager": [[299, 8, 1, "", "ShareableList"], [299, 8, 1, "", "SharedMemory"]], "multiprocessing.managers.SyncManager": [[298, 8, 1, "", "Array"], [298, 8, 1, "", "Barrier"], [298, 8, 1, "", "BoundedSemaphore"], [298, 8, 1, "", "Condition"], [298, 8, 1, "", "Event"], [298, 8, 1, "", "Lock"], [298, 8, 1, "", "Namespace"], [298, 8, 1, "", "Queue"], [298, 8, 1, "", "RLock"], [298, 8, 1, "", "Semaphore"], [298, 8, 1, "", "Value"], [298, 8, 1, "", "dict"], [298, 8, 1, "", "list"]], "multiprocessing.pool": [[298, 11, 1, "", "AsyncResult"], [298, 11, 1, "", "Pool"], [298, 11, 1, "", "ThreadPool"]], "multiprocessing.pool.AsyncResult": [[298, 8, 1, "", "get"], [298, 8, 1, "", "ready"], [298, 8, 1, "", "successful"], [298, 8, 1, "", "wait"]], "multiprocessing.pool.Pool": [[298, 8, 1, "", "apply"], [298, 8, 1, "", "apply_async"], [298, 8, 1, "", "close"], [298, 8, 1, "", "imap"], [298, 8, 1, "", "imap_unordered"], [298, 8, 1, "", "join"], [298, 8, 1, "", "map"], [298, 8, 1, "", "map_async"], [298, 8, 1, "", "starmap"], [298, 8, 1, "", "starmap_async"], [298, 8, 1, "", "terminate"]], "multiprocessing.shared_memory": [[299, 11, 1, "", "ShareableList"], [299, 11, 1, "", "SharedMemory"]], "multiprocessing.shared_memory.ShareableList": [[299, 8, 1, "", "count"], [299, 7, 1, "", "format"], [299, 8, 1, "", "index"], [299, 7, 1, "", "shm"]], "multiprocessing.shared_memory.SharedMemory": [[299, 7, 1, "", "buf"], [299, 8, 1, "", "close"], [299, 7, 1, "", "name"], [299, 7, 1, "", "size"], [299, 8, 1, "", "unlink"]], "multiprocessing.sharedctypes": [[298, 12, 1, "", "Array"], [298, 12, 1, "", "RawArray"], [298, 12, 1, "", "RawValue"], [298, 12, 1, "", "Value"], [298, 12, 1, "", "copy"], [298, 12, 1, "", "synchronized"]], "netrc": [[301, 6, 1, "", "NetrcParseError"], [301, 11, 1, "", "netrc"]], "netrc.NetrcParseError": [[301, 7, 1, "", "filename"], [301, 7, 1, "", "lineno"], [301, 7, 1, "", "msg"]], "netrc.netrc": [[301, 8, 1, "", "__repr__"], [301, 8, 1, "", "authenticators"], [301, 7, 1, "", "hosts"], [301, 7, 1, "", "macros"]], "nis": [[302, 12, 1, "", "cat"], [302, 6, 1, "", "error"], [302, 12, 1, "", "get_default_domain"], [302, 12, 1, "", "maps"], [302, 12, 1, "", "match"]], "nntplib": [[303, 11, 1, "", "NNTP"], [303, 6, 1, "", "NNTPDataError"], [303, 6, 1, "", "NNTPError"], [303, 6, 1, "", "NNTPPermanentError"], [303, 6, 1, "", "NNTPProtocolError"], [303, 6, 1, "", "NNTPReplyError"], [303, 6, 1, "", "NNTPTemporaryError"], [303, 11, 1, "", "NNTP_SSL"], [303, 12, 1, "", "decode_header"]], "nntplib.NNTP": [[303, 8, 1, "", "article"], [303, 8, 1, "", "body"], [303, 8, 1, "", "date"], [303, 8, 1, "", "description"], [303, 8, 1, "", "descriptions"], [303, 8, 1, "", "getcapabilities"], [303, 8, 1, "", "getwelcome"], [303, 8, 1, "", "group"], [303, 8, 1, "", "head"], [303, 8, 1, "", "help"], [303, 8, 1, "", "ihave"], [303, 8, 1, "", "last"], [303, 8, 1, "", "list"], [303, 8, 1, "", "login"], [303, 8, 1, "", "newgroups"], [303, 8, 1, "", "newnews"], [303, 8, 1, "", "next"], [303, 7, 1, "", "nntp_implementation"], [303, 7, 1, "", "nntp_version"], [303, 8, 1, "", "over"], [303, 8, 1, "", "post"], [303, 8, 1, "", "quit"], [303, 8, 1, "", "set_debuglevel"], [303, 8, 1, "", "slave"], [303, 8, 1, "", "starttls"], [303, 8, 1, "", "stat"], [303, 8, 1, "", "xhdr"], [303, 8, 1, "", "xover"]], "nntplib.NNTPError": [[303, 7, 1, "", "response"]], "numbers": [[304, 11, 1, "", "Complex"], [304, 11, 1, "", "Integral"], [304, 11, 1, "", "Number"], [304, 11, 1, "", "Rational"], [304, 11, 1, "", "Real"]], "numbers.Complex": [[304, 8, 1, "", "conjugate"], [304, 7, 1, "", "imag"], [304, 7, 1, "", "real"]], "numbers.Rational": [[304, 7, 1, "", "denominator"], [304, 7, 1, "", "numerator"]], "object": [[443, 8, 1, "", "__abs__"], [443, 8, 1, "", "__add__"], [443, 8, 1, "", "__aenter__"], [443, 8, 1, "", "__aexit__"], [443, 8, 1, "", "__aiter__"], [443, 8, 1, "", "__and__"], [443, 8, 1, "", "__anext__"], [443, 8, 1, "", "__await__"], [443, 8, 1, "", "__bool__"], [443, 8, 1, "", "__bytes__"], [443, 8, 1, "", "__call__"], [443, 8, 1, "", "__ceil__"], [443, 8, 1, "", "__class_getitem__"], [443, 8, 1, "", "__complex__"], [443, 8, 1, "", "__contains__"], [443, 8, 1, "", "__del__"], [443, 8, 1, "", "__delattr__"], [443, 8, 1, "", "__delete__"], [443, 8, 1, "", "__delitem__"], [360, 7, 1, "", "__dict__"], [443, 8, 1, "", "__dir__"], [443, 8, 1, "", "__divmod__"], [443, 8, 1, "", "__enter__"], [443, 8, 1, "", "__eq__"], [443, 8, 1, "", "__exit__"], [443, 8, 1, "", "__float__"], [443, 8, 1, "", "__floor__"], [443, 8, 1, "", "__floordiv__"], [443, 8, 1, "", "__format__"], [443, 8, 1, "", "__ge__"], [443, 8, 1, "", "__get__"], [443, 8, 1, "", "__getattr__"], [443, 8, 1, "", "__getattribute__"], [443, 8, 1, "", "__getitem__"], [314, 8, 1, "", "__getnewargs__"], [314, 8, 1, "", "__getnewargs_ex__"], [314, 8, 1, "", "__getstate__"], [443, 8, 1, "", "__gt__"], [443, 8, 1, "", "__hash__"], [443, 8, 1, "", "__iadd__"], [443, 8, 1, "", "__iand__"], [443, 8, 1, "", "__ifloordiv__"], [443, 8, 1, "", "__ilshift__"], [443, 8, 1, "", "__imatmul__"], [443, 8, 1, "", "__imod__"], [443, 8, 1, "", "__imul__"], [443, 8, 1, "", "__index__"], [443, 8, 1, "", "__init__"], [443, 8, 1, "", "__init_subclass__"], [443, 8, 1, "", "__int__"], [443, 8, 1, "", "__invert__"], [443, 8, 1, "", "__ior__"], [443, 8, 1, "", "__ipow__"], [443, 8, 1, "", "__irshift__"], [443, 8, 1, "", "__isub__"], [443, 8, 1, "", "__iter__"], [443, 8, 1, "", "__itruediv__"], [443, 8, 1, "", "__ixor__"], [443, 8, 1, "", "__le__"], [443, 8, 1, "", "__len__"], [443, 8, 1, "", "__length_hint__"], [443, 8, 1, "", "__lshift__"], [443, 8, 1, "", "__lt__"], [443, 9, 1, "", "__match_args__"], [443, 8, 1, "", "__matmul__"], [443, 8, 1, "", "__missing__"], [443, 8, 1, "", "__mod__"], [443, 8, 1, "", "__mro_entries__"], [443, 8, 1, "", "__mul__"], [443, 8, 1, "", "__ne__"], [443, 8, 1, "", "__neg__"], [443, 8, 1, "", "__new__"], [443, 7, 1, "", "__objclass__"], [443, 8, 1, "", "__or__"], [443, 8, 1, "", "__pos__"], [443, 8, 1, "", "__pow__"], [443, 8, 1, "", "__radd__"], [443, 8, 1, "", "__rand__"], [443, 8, 1, "", "__rdivmod__"], [314, 8, 1, "", "__reduce__"], [314, 8, 1, "", "__reduce_ex__"], [443, 8, 1, "", "__repr__"], [443, 8, 1, "", "__reversed__"], [443, 8, 1, "", "__rfloordiv__"], [443, 8, 1, "", "__rlshift__"], [443, 8, 1, "", "__rmatmul__"], [443, 8, 1, "", "__rmod__"], [443, 8, 1, "", "__rmul__"], [443, 8, 1, "", "__ror__"], [443, 8, 1, "", "__round__"], [443, 8, 1, "", "__rpow__"], [443, 8, 1, "", "__rrshift__"], [443, 8, 1, "", "__rshift__"], [443, 8, 1, "", "__rsub__"], [443, 8, 1, "", "__rtruediv__"], [443, 8, 1, "", "__rxor__"], [443, 8, 1, "", "__set__"], [443, 8, 1, "", "__set_name__"], [443, 8, 1, "", "__setattr__"], [443, 8, 1, "", "__setitem__"], [314, 8, 1, "", "__setstate__"], [443, 9, 1, "", "__slots__"], [443, 8, 1, "", "__str__"], [443, 8, 1, "", "__sub__"], [443, 8, 1, "", "__truediv__"], [443, 8, 1, "", "__trunc__"], [443, 8, 1, "", "__xor__"]], "operator": [[306, 12, 1, "", "__abs__"], [306, 12, 1, "", "__add__"], [306, 12, 1, "", "__and__"], [306, 12, 1, "", "__call__"], [306, 12, 1, "", "__concat__"], [306, 12, 1, "", "__contains__"], [306, 12, 1, "", "__delitem__"], [306, 12, 1, "", "__eq__"], [306, 12, 1, "", "__floordiv__"], [306, 12, 1, "", "__ge__"], [306, 12, 1, "", "__getitem__"], [306, 12, 1, "", "__gt__"], [306, 12, 1, "", "__iadd__"], [306, 12, 1, "", "__iand__"], [306, 12, 1, "", "__iconcat__"], [306, 12, 1, "", "__ifloordiv__"], [306, 12, 1, "", "__ilshift__"], [306, 12, 1, "", "__imatmul__"], [306, 12, 1, "", "__imod__"], [306, 12, 1, "", "__imul__"], [306, 12, 1, "", "__index__"], [306, 12, 1, "", "__inv__"], [306, 12, 1, "", "__invert__"], [306, 12, 1, "", "__ior__"], [306, 12, 1, "", "__ipow__"], [306, 12, 1, "", "__irshift__"], [306, 12, 1, "", "__isub__"], [306, 12, 1, "", "__itruediv__"], [306, 12, 1, "", "__ixor__"], [306, 12, 1, "", "__le__"], [306, 12, 1, "", "__lshift__"], [306, 12, 1, "", "__lt__"], [306, 12, 1, "", "__matmul__"], [306, 12, 1, "", "__mod__"], [306, 12, 1, "", "__mul__"], [306, 12, 1, "", "__ne__"], [306, 12, 1, "", "__neg__"], [306, 12, 1, "", "__not__"], [306, 12, 1, "", "__or__"], [306, 12, 1, "", "__pos__"], [306, 12, 1, "", "__pow__"], [306, 12, 1, "", "__rshift__"], [306, 12, 1, "", "__setitem__"], [306, 12, 1, "", "__sub__"], [306, 12, 1, "", "__truediv__"], [306, 12, 1, "", "__xor__"], [306, 12, 1, "", "abs"], [306, 12, 1, "", "add"], [306, 12, 1, "", "and_"], [306, 12, 1, "", "attrgetter"], [306, 12, 1, "", "call"], [306, 12, 1, "", "concat"], [306, 12, 1, "", "contains"], [306, 12, 1, "", "countOf"], [306, 12, 1, "", "delitem"], [306, 12, 1, "", "eq"], [306, 12, 1, "", "floordiv"], [306, 12, 1, "", "ge"], [306, 12, 1, "", "getitem"], [306, 12, 1, "", "gt"], [306, 12, 1, "", "iadd"], [306, 12, 1, "", "iand"], [306, 12, 1, "", "iconcat"], [306, 12, 1, "", "ifloordiv"], [306, 12, 1, "", "ilshift"], [306, 12, 1, "", "imatmul"], [306, 12, 1, "", "imod"], [306, 12, 1, "", "imul"], [306, 12, 1, "", "index"], [306, 12, 1, "", "indexOf"], [306, 12, 1, "", "inv"], [306, 12, 1, "", "invert"], [306, 12, 1, "", "ior"], [306, 12, 1, "", "ipow"], [306, 12, 1, "", "irshift"], [306, 12, 1, "", "is_"], [306, 12, 1, "", "is_not"], [306, 12, 1, "", "isub"], [306, 12, 1, "", "itemgetter"], [306, 12, 1, "", "itruediv"], [306, 12, 1, "", "ixor"], [306, 12, 1, "", "le"], [306, 12, 1, "", "length_hint"], [306, 12, 1, "", "lshift"], [306, 12, 1, "", "lt"], [306, 12, 1, "", "matmul"], [306, 12, 1, "", "methodcaller"], [306, 12, 1, "", "mod"], [306, 12, 1, "", "mul"], [306, 12, 1, "", "ne"], [306, 12, 1, "", "neg"], [306, 12, 1, "", "not_"], [306, 12, 1, "", "or_"], [306, 12, 1, "", "pos"], [306, 12, 1, "", "pow"], [306, 12, 1, "", "rshift"], [306, 12, 1, "", "setitem"], [306, 12, 1, "", "sub"], [306, 12, 1, "", "truediv"], [306, 12, 1, "", "truth"], [306, 12, 1, "", "xor"]], "optparse": [[307, 6, 1, "", "AmbiguousOptionError"], [307, 6, 1, "", "BadOptionError"], [307, 11, 1, "", "Option"], [307, 6, 1, "", "OptionConflictError"], [307, 6, 1, "", "OptionError"], [307, 11, 1, "", "OptionGroup"], [307, 11, 1, "", "OptionParser"], [307, 6, 1, "", "OptionValueError"], [307, 11, 1, "", "Values"]], "optparse.Option": [[307, 7, 1, "", "ACTIONS"], [307, 7, 1, "", "ALWAYS_TYPED_ACTIONS"], [307, 7, 1, "", "STORE_ACTIONS"], [307, 7, 1, "", "TYPED_ACTIONS"], [307, 7, 1, "", "TYPES"], [307, 7, 1, "", "TYPE_CHECKER"], [307, 7, 1, "", "action"], [307, 7, 1, "", "callback"], [307, 7, 1, "", "callback_args"], [307, 7, 1, "", "callback_kwargs"], [307, 7, 1, "", "choices"], [307, 7, 1, "", "const"], [307, 7, 1, "", "default"], [307, 7, 1, "", "dest"], [307, 7, 1, "", "help"], [307, 7, 1, "", "metavar"], [307, 7, 1, "", "nargs"], [307, 7, 1, "", "type"]], "optparse.OptionParser": [[307, 8, 1, "", "add_option"], [307, 8, 1, "", "disable_interspersed_args"], [307, 8, 1, "", "enable_interspersed_args"], [307, 8, 1, "", "get_option"], [307, 8, 1, "", "get_option_group"], [307, 8, 1, "", "get_usage"], [307, 8, 1, "", "get_version"], [307, 8, 1, "", "has_option"], [307, 8, 1, "", "parse_args"], [307, 8, 1, "", "print_usage"], [307, 8, 1, "", "print_version"], [307, 8, 1, "", "remove_option"], [307, 8, 1, "", "set_defaults"], [307, 8, 1, "", "set_usage"]], "os": [[308, 9, 1, "", "CLD_CONTINUED"], [308, 9, 1, "", "CLD_DUMPED"], [308, 9, 1, "", "CLD_EXITED"], [308, 9, 1, "", "CLD_KILLED"], [308, 9, 1, "", "CLD_STOPPED"], [308, 9, 1, "", "CLD_TRAPPED"], [308, 11, 1, "", "DirEntry"], [308, 9, 1, "", "EFD_CLOEXEC"], [308, 9, 1, "", "EFD_NONBLOCK"], [308, 9, 1, "", "EFD_SEMAPHORE"], [308, 9, 1, "", "EX_CANTCREAT"], [308, 9, 1, "", "EX_CONFIG"], [308, 9, 1, "", "EX_DATAERR"], [308, 9, 1, "", "EX_IOERR"], [308, 9, 1, "", "EX_NOHOST"], [308, 9, 1, "", "EX_NOINPUT"], [308, 9, 1, "", "EX_NOPERM"], [308, 9, 1, "", "EX_NOTFOUND"], [308, 9, 1, "", "EX_NOUSER"], [308, 9, 1, "", "EX_OK"], [308, 9, 1, "", "EX_OSERR"], [308, 9, 1, "", "EX_OSFILE"], [308, 9, 1, "", "EX_PROTOCOL"], [308, 9, 1, "", "EX_SOFTWARE"], [308, 9, 1, "", "EX_TEMPFAIL"], [308, 9, 1, "", "EX_UNAVAILABLE"], [308, 9, 1, "", "EX_USAGE"], [308, 9, 1, "", "F_LOCK"], [308, 9, 1, "", "F_OK"], [308, 9, 1, "", "F_TEST"], [308, 9, 1, "", "F_TLOCK"], [308, 9, 1, "", "F_ULOCK"], [308, 9, 1, "", "GRND_NONBLOCK"], [308, 9, 1, "", "GRND_RANDOM"], [308, 9, 1, "", "MFD_ALLOW_SEALING"], [308, 9, 1, "", "MFD_CLOEXEC"], [308, 9, 1, "", "MFD_HUGETLB"], [308, 9, 1, "", "MFD_HUGE_16GB"], [308, 9, 1, "", "MFD_HUGE_16MB"], [308, 9, 1, "", "MFD_HUGE_1GB"], [308, 9, 1, "", "MFD_HUGE_1MB"], [308, 9, 1, "", "MFD_HUGE_256MB"], [308, 9, 1, "", "MFD_HUGE_2GB"], [308, 9, 1, "", "MFD_HUGE_2MB"], [308, 9, 1, "", "MFD_HUGE_32MB"], [308, 9, 1, "", "MFD_HUGE_512KB"], [308, 9, 1, "", "MFD_HUGE_512MB"], [308, 9, 1, "", "MFD_HUGE_64KB"], [308, 9, 1, "", "MFD_HUGE_8MB"], [308, 9, 1, "", "MFD_HUGE_MASK"], [308, 9, 1, "", "MFD_HUGE_SHIFT"], [308, 9, 1, "", "O_APPEND"], [308, 9, 1, "", "O_ASYNC"], [308, 9, 1, "", "O_BINARY"], [308, 9, 1, "", "O_CLOEXEC"], [308, 9, 1, "", "O_CREAT"], [308, 9, 1, "", "O_DIRECT"], [308, 9, 1, "", "O_DIRECTORY"], [308, 9, 1, "", "O_DSYNC"], [308, 9, 1, "", "O_EVTONLY"], [308, 9, 1, "", "O_EXCL"], [308, 9, 1, "", "O_EXLOCK"], [308, 9, 1, "", "O_FSYNC"], [308, 9, 1, "", "O_NDELAY"], [308, 9, 1, "", "O_NOATIME"], [308, 9, 1, "", "O_NOCTTY"], [308, 9, 1, "", "O_NOFOLLOW"], [308, 9, 1, "", "O_NOFOLLOW_ANY"], [308, 9, 1, "", "O_NOINHERIT"], [308, 9, 1, "", "O_NONBLOCK"], [308, 9, 1, "", "O_PATH"], [308, 9, 1, "", "O_RANDOM"], [308, 9, 1, "", "O_RDONLY"], [308, 9, 1, "", "O_RDWR"], [308, 9, 1, "", "O_RSYNC"], [308, 9, 1, "", "O_SEQUENTIAL"], [308, 9, 1, "", "O_SHLOCK"], [308, 9, 1, "", "O_SHORT_LIVED"], [308, 9, 1, "", "O_SYMLINK"], [308, 9, 1, "", "O_SYNC"], [308, 9, 1, "", "O_TEMPORARY"], [308, 9, 1, "", "O_TEXT"], [308, 9, 1, "", "O_TMPFILE"], [308, 9, 1, "", "O_TRUNC"], [308, 9, 1, "", "O_WRONLY"], [308, 9, 1, "", "POSIX_FADV_DONTNEED"], [308, 9, 1, "", "POSIX_FADV_NOREUSE"], [308, 9, 1, "", "POSIX_FADV_NORMAL"], [308, 9, 1, "", "POSIX_FADV_RANDOM"], [308, 9, 1, "", "POSIX_FADV_SEQUENTIAL"], [308, 9, 1, "", "POSIX_FADV_WILLNEED"], [308, 9, 1, "", "POSIX_SPAWN_CLOSE"], [308, 9, 1, "", "POSIX_SPAWN_DUP2"], [308, 9, 1, "", "POSIX_SPAWN_OPEN"], [308, 9, 1, "", "PRIO_PGRP"], [308, 9, 1, "", "PRIO_PROCESS"], [308, 9, 1, "", "PRIO_USER"], [308, 9, 1, "", "P_ALL"], [308, 9, 1, "", "P_DETACH"], [308, 9, 1, "", "P_NOWAIT"], [308, 9, 1, "", "P_NOWAITO"], [308, 9, 1, "", "P_OVERLAY"], [308, 9, 1, "", "P_PGID"], [308, 9, 1, "", "P_PID"], [308, 9, 1, "", "P_PIDFD"], [308, 9, 1, "", "P_WAIT"], [308, 11, 1, "", "PathLike"], [308, 9, 1, "", "RTLD_DEEPBIND"], [308, 9, 1, "", "RTLD_GLOBAL"], [308, 9, 1, "", "RTLD_LAZY"], [308, 9, 1, "", "RTLD_LOCAL"], [308, 9, 1, "", "RTLD_NODELETE"], [308, 9, 1, "", "RTLD_NOLOAD"], [308, 9, 1, "", "RTLD_NOW"], [308, 9, 1, "", "RWF_APPEND"], [308, 9, 1, "", "RWF_DSYNC"], [308, 9, 1, "", "RWF_HIPRI"], [308, 9, 1, "", "RWF_NOWAIT"], [308, 9, 1, "", "RWF_SYNC"], [308, 9, 1, "", "R_OK"], [308, 9, 1, "", "SCHED_BATCH"], [308, 9, 1, "", "SCHED_FIFO"], [308, 9, 1, "", "SCHED_IDLE"], [308, 9, 1, "", "SCHED_OTHER"], [308, 9, 1, "", "SCHED_RESET_ON_FORK"], [308, 9, 1, "", "SCHED_RR"], [308, 9, 1, "", "SCHED_SPORADIC"], [308, 9, 1, "", "SEEK_CUR"], [308, 9, 1, "", "SEEK_DATA"], [308, 9, 1, "", "SEEK_END"], [308, 9, 1, "", "SEEK_HOLE"], [308, 9, 1, "", "SEEK_SET"], [308, 9, 1, "", "SF_MNOWAIT"], [308, 9, 1, "", "SF_NOCACHE"], [308, 9, 1, "", "SF_NODISKIO"], [308, 9, 1, "", "SF_SYNC"], [308, 9, 1, "", "SPLICE_F_MORE"], [308, 9, 1, "", "SPLICE_F_MOVE"], [308, 9, 1, "", "SPLICE_F_NONBLOCK"], [308, 9, 1, "", "WCONTINUED"], [308, 12, 1, "", "WCOREDUMP"], [308, 9, 1, "", "WEXITED"], [308, 12, 1, "", "WEXITSTATUS"], [308, 12, 1, "", "WIFCONTINUED"], [308, 12, 1, "", "WIFEXITED"], [308, 12, 1, "", "WIFSIGNALED"], [308, 12, 1, "", "WIFSTOPPED"], [308, 9, 1, "", "WNOHANG"], [308, 9, 1, "", "WNOWAIT"], [308, 9, 1, "", "WSTOPPED"], [308, 12, 1, "", "WSTOPSIG"], [308, 12, 1, "", "WTERMSIG"], [308, 9, 1, "", "WUNTRACED"], [308, 9, 1, "", "W_OK"], [308, 9, 1, "", "XATTR_CREATE"], [308, 9, 1, "", "XATTR_REPLACE"], [308, 9, 1, "", "XATTR_SIZE_MAX"], [308, 9, 1, "", "X_OK"], [308, 12, 1, "", "_exit"], [308, 12, 1, "", "abort"], [308, 12, 1, "", "access"], [308, 12, 1, "", "add_dll_directory"], [308, 9, 1, "", "altsep"], [308, 12, 1, "", "chdir"], [308, 12, 1, "", "chflags"], [308, 12, 1, "", "chmod"], [308, 12, 1, "", "chown"], [308, 12, 1, "", "chroot"], [308, 12, 1, "", "close"], [308, 12, 1, "", "closerange"], [308, 12, 1, "", "confstr"], [308, 9, 1, "", "confstr_names"], [308, 12, 1, "", "copy_file_range"], [308, 12, 1, "", "cpu_count"], [308, 12, 1, "", "ctermid"], [308, 9, 1, "", "curdir"], [308, 9, 1, "", "defpath"], [308, 12, 1, "", "device_encoding"], [308, 9, 1, "", "devnull"], [308, 12, 1, "", "dup"], [308, 12, 1, "", "dup2"], [308, 9, 1, "", "environ"], [308, 9, 1, "", "environb"], [308, 6, 1, "", "error"], [308, 12, 1, "", "eventfd"], [308, 12, 1, "", "eventfd_read"], [308, 12, 1, "", "eventfd_write"], [308, 12, 1, "", "execl"], [308, 12, 1, "", "execle"], [308, 12, 1, "", "execlp"], [308, 12, 1, "", "execlpe"], [308, 12, 1, "", "execv"], [308, 12, 1, "", "execve"], [308, 12, 1, "", "execvp"], [308, 12, 1, "", "execvpe"], [308, 9, 1, "", "extsep"], [308, 12, 1, "", "fchdir"], [308, 12, 1, "", "fchmod"], [308, 12, 1, "", "fchown"], [308, 12, 1, "", "fdatasync"], [308, 12, 1, "", "fdopen"], [308, 12, 1, "", "fork"], [308, 12, 1, "", "forkpty"], [308, 12, 1, "", "fpathconf"], [308, 12, 1, "", "fsdecode"], [308, 12, 1, "", "fsencode"], [308, 12, 1, "", "fspath"], [308, 12, 1, "", "fstat"], [308, 12, 1, "", "fstatvfs"], [308, 12, 1, "", "fsync"], [308, 12, 1, "", "ftruncate"], [308, 12, 1, "", "fwalk"], [308, 12, 1, "", "get_blocking"], [308, 12, 1, "", "get_exec_path"], [308, 12, 1, "", "get_handle_inheritable"], [308, 12, 1, "", "get_inheritable"], [308, 12, 1, "", "get_terminal_size"], [308, 12, 1, "", "getcwd"], [308, 12, 1, "", "getcwdb"], [308, 12, 1, "", "getegid"], [308, 12, 1, "", "getenv"], [308, 12, 1, "", "getenvb"], [308, 12, 1, "", "geteuid"], [308, 12, 1, "", "getgid"], [308, 12, 1, "", "getgrouplist"], [308, 12, 1, "", "getgroups"], [308, 12, 1, "", "getloadavg"], [308, 12, 1, "", "getlogin"], [308, 12, 1, "", "getpgid"], [308, 12, 1, "", "getpgrp"], [308, 12, 1, "", "getpid"], [308, 12, 1, "", "getppid"], [308, 12, 1, "", "getpriority"], [308, 12, 1, "", "getrandom"], [308, 12, 1, "", "getresgid"], [308, 12, 1, "", "getresuid"], [308, 12, 1, "", "getsid"], [308, 12, 1, "", "getuid"], [308, 12, 1, "", "getxattr"], [308, 12, 1, "", "initgroups"], [308, 12, 1, "", "isatty"], [308, 12, 1, "", "kill"], [308, 12, 1, "", "killpg"], [308, 12, 1, "", "lchflags"], [308, 12, 1, "", "lchmod"], [308, 12, 1, "", "lchown"], [308, 9, 1, "", "linesep"], [308, 12, 1, "", "link"], [308, 12, 1, "", "listdir"], [308, 12, 1, "", "listxattr"], [308, 12, 1, "", "lockf"], [308, 12, 1, "", "login_tty"], [308, 12, 1, "", "lseek"], [308, 12, 1, "", "lstat"], [308, 12, 1, "", "major"], [308, 12, 1, "", "makedev"], [308, 12, 1, "", "makedirs"], [308, 12, 1, "", "memfd_create"], [308, 12, 1, "", "minor"], [308, 12, 1, "", "mkdir"], [308, 12, 1, "", "mkfifo"], [308, 12, 1, "", "mknod"], [308, 9, 1, "", "name"], [308, 12, 1, "", "nice"], [308, 12, 1, "", "open"], [308, 12, 1, "", "openpty"], [308, 9, 1, "", "pardir"], [309, 10, 0, "-", "path"], [308, 12, 1, "", "pathconf"], [308, 9, 1, "", "pathconf_names"], [308, 9, 1, "", "pathsep"], [308, 12, 1, "", "pidfd_open"], [308, 12, 1, "", "pipe"], [308, 12, 1, "", "pipe2"], [308, 12, 1, "", "plock"], [308, 12, 1, "", "popen"], [308, 12, 1, "", "posix_fadvise"], [308, 12, 1, "", "posix_fallocate"], [308, 12, 1, "", "posix_spawn"], [308, 12, 1, "", "posix_spawnp"], [308, 12, 1, "", "pread"], [308, 12, 1, "", "preadv"], [308, 12, 1, "", "putenv"], [308, 12, 1, "", "pwrite"], [308, 12, 1, "", "pwritev"], [308, 12, 1, "", "read"], [308, 12, 1, "", "readlink"], [308, 12, 1, "", "readv"], [308, 12, 1, "", "register_at_fork"], [308, 12, 1, "", "remove"], [308, 12, 1, "", "removedirs"], [308, 12, 1, "", "removexattr"], [308, 12, 1, "", "rename"], [308, 12, 1, "", "renames"], [308, 12, 1, "", "replace"], [308, 12, 1, "", "rmdir"], [308, 12, 1, "", "scandir"], [308, 12, 1, "", "sched_get_priority_max"], [308, 12, 1, "", "sched_get_priority_min"], [308, 12, 1, "", "sched_getaffinity"], [308, 12, 1, "", "sched_getparam"], [308, 12, 1, "", "sched_getscheduler"], [308, 11, 1, "", "sched_param"], [308, 12, 1, "", "sched_rr_get_interval"], [308, 12, 1, "", "sched_setaffinity"], [308, 12, 1, "", "sched_setparam"], [308, 12, 1, "", "sched_setscheduler"], [308, 12, 1, "", "sched_yield"], [308, 12, 1, "", "sendfile"], [308, 9, 1, "", "sep"], [308, 12, 1, "", "set_blocking"], [308, 12, 1, "", "set_handle_inheritable"], [308, 12, 1, "", "set_inheritable"], [308, 12, 1, "", "setegid"], [308, 12, 1, "", "seteuid"], [308, 12, 1, "", "setgid"], [308, 12, 1, "", "setgroups"], [308, 12, 1, "", "setpgid"], [308, 12, 1, "", "setpgrp"], [308, 12, 1, "", "setpriority"], [308, 12, 1, "", "setregid"], [308, 12, 1, "", "setresgid"], [308, 12, 1, "", "setresuid"], [308, 12, 1, "", "setreuid"], [308, 12, 1, "", "setsid"], [308, 12, 1, "", "setuid"], [308, 12, 1, "", "setxattr"], [308, 12, 1, "", "spawnl"], [308, 12, 1, "", "spawnle"], [308, 12, 1, "", "spawnlp"], [308, 12, 1, "", "spawnlpe"], [308, 12, 1, "", "spawnv"], [308, 12, 1, "", "spawnve"], [308, 12, 1, "", "spawnvp"], [308, 12, 1, "", "spawnvpe"], [308, 12, 1, "", "splice"], [308, 12, 1, "", "startfile"], [308, 12, 1, "", "stat"], [308, 11, 1, "", "stat_result"], [308, 12, 1, "", "statvfs"], [308, 12, 1, "", "strerror"], [308, 9, 1, "", "supports_bytes_environ"], [308, 9, 1, "", "supports_dir_fd"], [308, 9, 1, "", "supports_effective_ids"], [308, 9, 1, "", "supports_fd"], [308, 9, 1, "", "supports_follow_symlinks"], [308, 12, 1, "", "symlink"], [308, 12, 1, "", "sync"], [308, 12, 1, "", "sysconf"], [308, 9, 1, "", "sysconf_names"], [308, 12, 1, "", "system"], [308, 12, 1, "", "tcgetpgrp"], [308, 12, 1, "", "tcsetpgrp"], [308, 11, 1, "", "terminal_size"], [308, 12, 1, "", "times"], [308, 12, 1, "", "truncate"], [308, 12, 1, "", "ttyname"], [308, 12, 1, "", "umask"], [308, 12, 1, "", "uname"], [308, 12, 1, "", "unlink"], [308, 12, 1, "", "unsetenv"], [308, 12, 1, "", "urandom"], [308, 12, 1, "", "utime"], [308, 12, 1, "", "wait"], [308, 12, 1, "", "wait3"], [308, 12, 1, "", "wait4"], [308, 12, 1, "", "waitid"], [308, 12, 1, "", "waitpid"], [308, 12, 1, "", "waitstatus_to_exitcode"], [308, 12, 1, "", "walk"], [308, 12, 1, "", "write"], [308, 12, 1, "", "writev"]], "os.DirEntry": [[308, 8, 1, "", "inode"], [308, 8, 1, "", "is_dir"], [308, 8, 1, "", "is_file"], [308, 8, 1, "", "is_symlink"], [308, 7, 1, "", "name"], [308, 7, 1, "", "path"], [308, 8, 1, "", "stat"]], "os.PathLike": [[308, 8, 1, "", "__fspath__"]], "os.path": [[309, 12, 1, "", "abspath"], [309, 12, 1, "", "basename"], [309, 12, 1, "", "commonpath"], [309, 12, 1, "", "commonprefix"], [309, 12, 1, "", "dirname"], [309, 12, 1, "", "exists"], [309, 12, 1, "", "expanduser"], [309, 12, 1, "", "expandvars"], [309, 12, 1, "", "getatime"], [309, 12, 1, "", "getctime"], [309, 12, 1, "", "getmtime"], [309, 12, 1, "", "getsize"], [309, 12, 1, "", "isabs"], [309, 12, 1, "", "isdir"], [309, 12, 1, "", "isfile"], [309, 12, 1, "", "islink"], [309, 12, 1, "", "ismount"], [309, 12, 1, "", "join"], [309, 12, 1, "", "lexists"], [309, 12, 1, "", "normcase"], [309, 12, 1, "", "normpath"], [309, 12, 1, "", "realpath"], [309, 12, 1, "", "relpath"], [309, 12, 1, "", "samefile"], [309, 12, 1, "", "sameopenfile"], [309, 12, 1, "", "samestat"], [309, 12, 1, "", "split"], [309, 12, 1, "", "splitdrive"], [309, 12, 1, "", "splitext"], [309, 9, 1, "", "supports_unicode_filenames"]], "os.scandir": [[308, 8, 1, "", "close"]], "os.sched_param": [[308, 7, 1, "", "sched_priority"]], "os.stat_result": [[308, 7, 1, "", "st_atime"], [308, 7, 1, "", "st_atime_ns"], [308, 7, 1, "", "st_birthtime"], [308, 7, 1, "", "st_blksize"], [308, 7, 1, "", "st_blocks"], [308, 7, 1, "", "st_creator"], [308, 7, 1, "", "st_ctime"], [308, 7, 1, "", "st_ctime_ns"], [308, 7, 1, "", "st_dev"], [308, 7, 1, "", "st_file_attributes"], [308, 7, 1, "", "st_flags"], [308, 7, 1, "", "st_fstype"], [308, 7, 1, "", "st_gen"], [308, 7, 1, "", "st_gid"], [308, 7, 1, "", "st_ino"], [308, 7, 1, "", "st_mode"], [308, 7, 1, "", "st_mtime"], [308, 7, 1, "", "st_mtime_ns"], [308, 7, 1, "", "st_nlink"], [308, 7, 1, "", "st_rdev"], [308, 7, 1, "", "st_reparse_tag"], [308, 7, 1, "", "st_rsize"], [308, 7, 1, "", "st_size"], [308, 7, 1, "", "st_type"], [308, 7, 1, "", "st_uid"]], "os.terminal_size": [[308, 7, 1, "", "columns"], [308, 7, 1, "", "lines"]], "ossaudiodev": [[310, 6, 1, "", "OSSAudioError"], [310, 12, 1, "", "open"], [310, 12, 1, "", "openmixer"]], "ossaudiodev.oss_audio_device": [[310, 8, 1, "", "bufsize"], [310, 8, 1, "", "channels"], [310, 8, 1, "", "close"], [310, 7, 1, "", "closed"], [310, 8, 1, "", "fileno"], [310, 8, 1, "", "getfmts"], [310, 7, 1, "", "mode"], [310, 7, 1, "", "name"], [310, 8, 1, "", "nonblock"], [310, 8, 1, "", "obufcount"], [310, 8, 1, "", "obuffree"], [310, 8, 1, "", "post"], [310, 8, 1, "", "read"], [310, 8, 1, "", "reset"], [310, 8, 1, "", "setfmt"], [310, 8, 1, "", "setparameters"], [310, 8, 1, "", "speed"], [310, 8, 1, "", "sync"], [310, 8, 1, "", "write"], [310, 8, 1, "", "writeall"]], "ossaudiodev.oss_mixer_device": [[310, 8, 1, "", "close"], [310, 8, 1, "", "controls"], [310, 8, 1, "", "fileno"], [310, 8, 1, "", "get"], [310, 8, 1, "", "get_recsrc"], [310, 8, 1, "", "reccontrols"], [310, 8, 1, "", "set"], [310, 8, 1, "", "set_recsrc"], [310, 8, 1, "", "stereocontrols"]], "pathlib": [[311, 11, 1, "", "Path"], [311, 11, 1, "", "PosixPath"], [311, 11, 1, "", "PurePath"], [311, 11, 1, "", "PurePosixPath"], [311, 11, 1, "", "PureWindowsPath"], [311, 11, 1, "", "WindowsPath"]], "pathlib.Path": [[311, 8, 1, "", "absolute"], [311, 8, 1, "", "chmod"], [311, 8, 1, "", "cwd"], [311, 8, 1, "", "exists"], [311, 8, 1, "", "expanduser"], [311, 8, 1, "", "glob"], [311, 8, 1, "", "group"], [311, 8, 1, "", "hardlink_to"], [311, 8, 1, "", "home"], [311, 8, 1, "", "is_block_device"], [311, 8, 1, "", "is_char_device"], [311, 8, 1, "", "is_dir"], [311, 8, 1, "", "is_fifo"], [311, 8, 1, "", "is_file"], [311, 8, 1, "", "is_mount"], [311, 8, 1, "", "is_socket"], [311, 8, 1, "", "is_symlink"], [311, 8, 1, "", "iterdir"], [311, 8, 1, "", "lchmod"], [311, 8, 1, "", "link_to"], [311, 8, 1, "", "lstat"], [311, 8, 1, "", "mkdir"], [311, 8, 1, "", "open"], [311, 8, 1, "", "owner"], [311, 8, 1, "", "read_bytes"], [311, 8, 1, "", "read_text"], [311, 8, 1, "", "readlink"], [311, 8, 1, "", "rename"], [311, 8, 1, "", "replace"], [311, 8, 1, "", "resolve"], [311, 8, 1, "", "rglob"], [311, 8, 1, "", "rmdir"], [311, 8, 1, "", "samefile"], [311, 8, 1, "", "stat"], [311, 8, 1, "", "symlink_to"], [311, 8, 1, "", "touch"], [311, 8, 1, "", "unlink"], [311, 8, 1, "", "write_bytes"], [311, 8, 1, "", "write_text"]], "pathlib.PurePath": [[311, 7, 1, "", "anchor"], [311, 8, 1, "", "as_posix"], [311, 8, 1, "", "as_uri"], [311, 7, 1, "", "drive"], [311, 8, 1, "", "is_absolute"], [311, 8, 1, "", "is_relative_to"], [311, 8, 1, "", "is_reserved"], [311, 8, 1, "", "joinpath"], [311, 8, 1, "", "match"], [311, 7, 1, "", "name"], [311, 7, 1, "", "parent"], [311, 7, 1, "", "parents"], [311, 7, 1, "", "parts"], [311, 8, 1, "", "relative_to"], [311, 7, 1, "", "root"], [311, 7, 1, "", "stem"], [311, 7, 1, "", "suffix"], [311, 7, 1, "", "suffixes"], [311, 8, 1, "", "with_name"], [311, 8, 1, "", "with_stem"], [311, 8, 1, "", "with_suffix"]], "pdb": [[312, 11, 1, "", "Pdb"], [312, 12, 1, "", "pm"], [312, 12, 1, "", "post_mortem"], [312, 12, 1, "", "run"], [312, 12, 1, "", "runcall"], [312, 12, 1, "", "runeval"], [312, 12, 1, "", "set_trace"]], "pdb.Pdb": [[312, 8, 1, "", "run"], [312, 8, 1, "", "runcall"], [312, 8, 1, "", "runeval"], [312, 8, 1, "", "set_trace"]], "pickle": [[314, 9, 1, "", "DEFAULT_PROTOCOL"], [314, 9, 1, "", "HIGHEST_PROTOCOL"], [314, 11, 1, "", "PickleBuffer"], [314, 6, 1, "", "PickleError"], [314, 11, 1, "", "Pickler"], [314, 6, 1, "", "PicklingError"], [314, 11, 1, "", "Unpickler"], [314, 6, 1, "", "UnpicklingError"], [314, 12, 1, "", "dump"], [314, 12, 1, "", "dumps"], [314, 12, 1, "", "load"], [314, 12, 1, "", "loads"]], "pickle.PickleBuffer": [[314, 8, 1, "", "raw"], [314, 8, 1, "", "release"]], "pickle.Pickler": [[314, 7, 1, "", "dispatch_table"], [314, 8, 1, "", "dump"], [314, 7, 1, "", "fast"], [314, 8, 1, "", "persistent_id"], [314, 8, 1, "", "reducer_override"]], "pickle.Unpickler": [[314, 8, 1, "", "find_class"], [314, 8, 1, "", "load"], [314, 8, 1, "", "persistent_load"]], "pickletools": [[315, 12, 1, "", "dis"], [315, 12, 1, "", "genops"], [315, 12, 1, "", "optimize"], [315, 14, 1, "cmdoption-pickletools-a", "--annotate"], [315, 14, 1, "cmdoption-pickletools-l", "--indentlevel"], [315, 14, 1, "cmdoption-pickletools-m", "--memo"], [315, 14, 1, "cmdoption-pickletools-o", "--output"], [315, 14, 1, "cmdoption-pickletools-p", "--preamble"], [315, 14, 1, "cmdoption-pickletools-a", "-a"], [315, 14, 1, "cmdoption-pickletools-l", "-l"], [315, 14, 1, "cmdoption-pickletools-m", "-m"], [315, 14, 1, "cmdoption-pickletools-o", "-o"], [315, 14, 1, "cmdoption-pickletools-p", "-p"]], "pipes": [[316, 11, 1, "", "Template"]], "pipes.Template": [[316, 8, 1, "", "append"], [316, 8, 1, "", "clone"], [316, 8, 1, "", "copy"], [316, 8, 1, "", "debug"], [316, 8, 1, "", "open"], [316, 8, 1, "", "prepend"], [316, 8, 1, "", "reset"]], "pkgutil": [[317, 11, 1, "", "ImpImporter"], [317, 11, 1, "", "ImpLoader"], [317, 11, 1, "", "ModuleInfo"], [317, 12, 1, "", "extend_path"], [317, 12, 1, "", "find_loader"], [317, 12, 1, "", "get_data"], [317, 12, 1, "", "get_importer"], [317, 12, 1, "", "get_loader"], [317, 12, 1, "", "iter_importers"], [317, 12, 1, "", "iter_modules"], [317, 12, 1, "", "resolve_name"], [317, 12, 1, "", "walk_packages"]], "platform": [[318, 12, 1, "", "architecture"], [318, 12, 1, "", "freedesktop_os_release"], [318, 12, 1, "", "java_ver"], [318, 12, 1, "", "libc_ver"], [318, 12, 1, "", "mac_ver"], [318, 12, 1, "", "machine"], [318, 12, 1, "", "node"], [318, 12, 1, "", "platform"], [318, 12, 1, "", "processor"], [318, 12, 1, "", "python_branch"], [318, 12, 1, "", "python_build"], [318, 12, 1, "", "python_compiler"], [318, 12, 1, "", "python_implementation"], [318, 12, 1, "", "python_revision"], [318, 12, 1, "", "python_version"], [318, 12, 1, "", "python_version_tuple"], [318, 12, 1, "", "release"], [318, 12, 1, "", "system"], [318, 12, 1, "", "system_alias"], [318, 12, 1, "", "uname"], [318, 12, 1, "", "version"], [318, 12, 1, "", "win32_edition"], [318, 12, 1, "", "win32_is_iot"], [318, 12, 1, "", "win32_ver"]], "plistlib": [[319, 9, 1, "", "FMT_BINARY"], [319, 9, 1, "", "FMT_XML"], [319, 11, 1, "", "UID"], [319, 12, 1, "", "dump"], [319, 12, 1, "", "dumps"], [319, 12, 1, "", "load"], [319, 12, 1, "", "loads"]], "poplib": [[320, 11, 1, "", "POP3"], [320, 11, 1, "", "POP3_SSL"], [320, 6, 1, "", "error_proto"]], "poplib.POP3": [[320, 8, 1, "", "apop"], [320, 8, 1, "", "capa"], [320, 8, 1, "", "dele"], [320, 8, 1, "", "getwelcome"], [320, 8, 1, "", "list"], [320, 8, 1, "", "noop"], [320, 8, 1, "", "pass_"], [320, 8, 1, "", "quit"], [320, 8, 1, "", "retr"], [320, 8, 1, "", "rpop"], [320, 8, 1, "", "rset"], [320, 8, 1, "", "set_debuglevel"], [320, 8, 1, "", "stat"], [320, 8, 1, "", "stls"], [320, 8, 1, "", "top"], [320, 8, 1, "", "uidl"], [320, 8, 1, "", "user"], [320, 8, 1, "", "utf8"]], "posix": [[321, 9, 1, "", "environ"]], "pprint": [[322, 11, 1, "", "PrettyPrinter"], [322, 12, 1, "", "isreadable"], [322, 12, 1, "", "isrecursive"], [322, 12, 1, "", "pformat"], [322, 12, 1, "", "pp"], [322, 12, 1, "", "pprint"], [322, 12, 1, "", "saferepr"]], "pprint.PrettyPrinter": [[322, 8, 1, "", "format"], [322, 8, 1, "", "isreadable"], [322, 8, 1, "", "isrecursive"], [322, 8, 1, "", "pformat"], [322, 8, 1, "", "pprint"]], "profile": [[323, 11, 1, "", "Profile"], [323, 12, 1, "", "run"], [323, 12, 1, "", "runctx"]], "profile.Profile": [[323, 8, 1, "", "create_stats"], [323, 8, 1, "", "disable"], [323, 8, 1, "", "dump_stats"], [323, 8, 1, "", "enable"], [323, 8, 1, "", "print_stats"], [323, 8, 1, "", "run"], [323, 8, 1, "", "runcall"], [323, 8, 1, "", "runctx"]], "property": [[239, 12, 1, "", "deleter"], [239, 12, 1, "", "getter"], [239, 12, 1, "", "setter"]], "pstats": [[323, 11, 1, "", "Stats"]], "pstats.Stats": [[323, 8, 1, "", "add"], [323, 8, 1, "", "dump_stats"], [323, 8, 1, "", "get_stats_profile"], [323, 8, 1, "", "print_callees"], [323, 8, 1, "", "print_callers"], [323, 8, 1, "", "print_stats"], [323, 8, 1, "", "reverse_order"], [323, 8, 1, "", "sort_stats"], [323, 8, 1, "", "strip_dirs"]], "pty": [[324, 12, 1, "", "fork"], [324, 12, 1, "", "openpty"], [324, 12, 1, "", "spawn"]], "pwd": [[325, 12, 1, "", "getpwall"], [325, 12, 1, "", "getpwnam"], [325, 12, 1, "", "getpwuid"]], "py_compile": [[326, 6, 1, "", "PyCompileError"], [326, 11, 1, "", "PycInvalidationMode"], [326, 12, 1, "", "compile"]], "py_compile.PycInvalidationMode": [[326, 7, 1, "", "CHECKED_HASH"], [326, 7, 1, "", "TIMESTAMP"], [326, 7, 1, "", "UNCHECKED_HASH"]], "pyclbr": [[327, 11, 1, "", "Class"], [327, 11, 1, "", "Function"], [327, 12, 1, "", "readmodule"], [327, 12, 1, "", "readmodule_ex"]], "pyclbr.Class": [[327, 7, 1, "", "children"], [327, 7, 1, "", "file"], [327, 7, 1, "", "lineno"], [327, 7, 1, "", "methods"], [327, 7, 1, "", "module"], [327, 7, 1, "", "name"], [327, 7, 1, "", "parent"], [327, 7, 1, "", "super"]], "pyclbr.Function": [[327, 7, 1, "", "children"], [327, 7, 1, "", "file"], [327, 7, 1, "", "is_async"], [327, 7, 1, "", "lineno"], [327, 7, 1, "", "module"], [327, 7, 1, "", "name"], [327, 7, 1, "", "parent"]], "queue": [[331, 6, 1, "", "Empty"], [331, 6, 1, "", "Full"], [331, 11, 1, "", "LifoQueue"], [331, 11, 1, "", "PriorityQueue"], [331, 11, 1, "", "Queue"], [331, 11, 1, "", "SimpleQueue"]], "queue.Queue": [[331, 8, 1, "", "empty"], [331, 8, 1, "", "full"], [331, 8, 1, "", "get"], [331, 8, 1, "", "get_nowait"], [331, 8, 1, "", "join"], [331, 8, 1, "", "put"], [331, 8, 1, "", "put_nowait"], [331, 8, 1, "", "qsize"], [331, 8, 1, "", "task_done"]], "queue.SimpleQueue": [[331, 8, 1, "", "empty"], [331, 8, 1, "", "get"], [331, 8, 1, "", "get_nowait"], [331, 8, 1, "", "put"], [331, 8, 1, "", "put_nowait"], [331, 8, 1, "", "qsize"]], "quopri": [[332, 12, 1, "", "decode"], [332, 12, 1, "", "decodestring"], [332, 12, 1, "", "encode"], [332, 12, 1, "", "encodestring"]], "random": [[333, 11, 1, "", "Random"], [333, 11, 1, "", "SystemRandom"], [333, 12, 1, "", "betavariate"], [333, 12, 1, "", "choice"], [333, 12, 1, "", "choices"], [333, 12, 1, "", "expovariate"], [333, 12, 1, "", "gammavariate"], [333, 12, 1, "", "gauss"], [333, 12, 1, "", "getrandbits"], [333, 12, 1, "", "getstate"], [333, 12, 1, "", "lognormvariate"], [333, 12, 1, "", "normalvariate"], [333, 12, 1, "", "paretovariate"], [333, 12, 1, "", "randbytes"], [333, 12, 1, "", "randint"], [333, 12, 1, "", "random"], [333, 12, 1, "", "randrange"], [333, 12, 1, "", "sample"], [333, 12, 1, "", "seed"], [333, 12, 1, "", "setstate"], [333, 12, 1, "", "shuffle"], [333, 12, 1, "", "triangular"], [333, 12, 1, "", "uniform"], [333, 12, 1, "", "vonmisesvariate"], [333, 12, 1, "", "weibullvariate"]], "random.Random": [[333, 8, 1, "", "getrandbits"], [333, 8, 1, "", "getstate"], [333, 8, 1, "", "random"], [333, 8, 1, "", "seed"], [333, 8, 1, "", "setstate"]], "range": [[360, 7, 1, "", "start"], [360, 7, 1, "", "step"], [360, 7, 1, "", "stop"]], "re": [[334, 9, 1, "", "A"], [334, 9, 1, "", "ASCII"], [334, 9, 1, "", "DEBUG"], [334, 9, 1, "", "DOTALL"], [334, 9, 1, "", "I"], [334, 9, 1, "", "IGNORECASE"], [334, 9, 1, "", "L"], [334, 9, 1, "", "LOCALE"], [334, 9, 1, "", "M"], [334, 9, 1, "", "MULTILINE"], [334, 11, 1, "", "Match"], [334, 9, 1, "", "NOFLAG"], [334, 11, 1, "", "Pattern"], [334, 11, 1, "", "RegexFlag"], [334, 9, 1, "", "S"], [334, 9, 1, "", "U"], [334, 9, 1, "", "UNICODE"], [334, 9, 1, "", "VERBOSE"], [334, 9, 1, "", "X"], [334, 12, 1, "", "compile"], [334, 6, 1, "", "error"], [334, 12, 1, "", "escape"], [334, 12, 1, "", "findall"], [334, 12, 1, "", "finditer"], [334, 12, 1, "", "fullmatch"], [334, 12, 1, "", "match"], [334, 12, 1, "", "purge"], [334, 12, 1, "", "search"], [334, 12, 1, "", "split"], [334, 12, 1, "", "sub"], [334, 12, 1, "", "subn"]], "re.Match": [[334, 8, 1, "", "__getitem__"], [334, 8, 1, "", "end"], [334, 7, 1, "", "endpos"], [334, 8, 1, "", "expand"], [334, 8, 1, "", "group"], [334, 8, 1, "", "groupdict"], [334, 8, 1, "", "groups"], [334, 7, 1, "", "lastgroup"], [334, 7, 1, "", "lastindex"], [334, 7, 1, "", "pos"], [334, 7, 1, "", "re"], [334, 8, 1, "", "span"], [334, 8, 1, "", "start"], [334, 7, 1, "", "string"]], "re.Pattern": [[334, 8, 1, "", "findall"], [334, 8, 1, "", "finditer"], [334, 7, 1, "", "flags"], [334, 8, 1, "", "fullmatch"], [334, 7, 1, "", "groupindex"], [334, 7, 1, "", "groups"], [334, 8, 1, "", "match"], [334, 7, 1, "", "pattern"], [334, 8, 1, "", "search"], [334, 8, 1, "", "split"], [334, 8, 1, "", "sub"], [334, 8, 1, "", "subn"]], "re.error": [[334, 7, 1, "", "colno"], [334, 7, 1, "", "lineno"], [334, 7, 1, "", "msg"], [334, 7, 1, "", "pattern"], [334, 7, 1, "", "pos"]], "readline": [[335, 12, 1, "", "add_history"], [335, 12, 1, "", "append_history_file"], [335, 12, 1, "", "clear_history"], [335, 12, 1, "", "get_begidx"], [335, 12, 1, "", "get_completer"], [335, 12, 1, "", "get_completer_delims"], [335, 12, 1, "", "get_completion_type"], [335, 12, 1, "", "get_current_history_length"], [335, 12, 1, "", "get_endidx"], [335, 12, 1, "", "get_history_item"], [335, 12, 1, "", "get_history_length"], [335, 12, 1, "", "get_line_buffer"], [335, 12, 1, "", "insert_text"], [335, 12, 1, "", "parse_and_bind"], [335, 12, 1, "", "read_history_file"], [335, 12, 1, "", "read_init_file"], [335, 12, 1, "", "redisplay"], [335, 12, 1, "", "remove_history_item"], [335, 12, 1, "", "replace_history_item"], [335, 12, 1, "", "set_auto_history"], [335, 12, 1, "", "set_completer"], [335, 12, 1, "", "set_completer_delims"], [335, 12, 1, "", "set_completion_display_matches_hook"], [335, 12, 1, "", "set_history_length"], [335, 12, 1, "", "set_pre_input_hook"], [335, 12, 1, "", "set_startup_hook"], [335, 12, 1, "", "write_history_file"]], "reprlib": [[336, 11, 1, "", "Repr"], [336, 9, 1, "", "aRepr"], [336, 12, 1, "", "recursive_repr"], [336, 12, 1, "", "repr"]], "reprlib.Repr": [[336, 7, 1, "", "fillvalue"], [336, 7, 1, "", "maxarray"], [336, 7, 1, "", "maxdeque"], [336, 7, 1, "", "maxdict"], [336, 7, 1, "", "maxfrozenset"], [336, 7, 1, "", "maxlevel"], [336, 7, 1, "", "maxlist"], [336, 7, 1, "", "maxlong"], [336, 7, 1, "", "maxother"], [336, 7, 1, "", "maxset"], [336, 7, 1, "", "maxstring"], [336, 7, 1, "", "maxtuple"], [336, 8, 1, "", "repr"], [336, 8, 1, "", "repr1"]], "resource": [[337, 9, 1, "", "RLIMIT_AS"], [337, 9, 1, "", "RLIMIT_CORE"], [337, 9, 1, "", "RLIMIT_CPU"], [337, 9, 1, "", "RLIMIT_DATA"], [337, 9, 1, "", "RLIMIT_FSIZE"], [337, 9, 1, "", "RLIMIT_KQUEUES"], [337, 9, 1, "", "RLIMIT_MEMLOCK"], [337, 9, 1, "", "RLIMIT_MSGQUEUE"], [337, 9, 1, "", "RLIMIT_NICE"], [337, 9, 1, "", "RLIMIT_NOFILE"], [337, 9, 1, "", "RLIMIT_NPROC"], [337, 9, 1, "", "RLIMIT_NPTS"], [337, 9, 1, "", "RLIMIT_OFILE"], [337, 9, 1, "", "RLIMIT_RSS"], [337, 9, 1, "", "RLIMIT_RTPRIO"], [337, 9, 1, "", "RLIMIT_RTTIME"], [337, 9, 1, "", "RLIMIT_SBSIZE"], [337, 9, 1, "", "RLIMIT_SIGPENDING"], [337, 9, 1, "", "RLIMIT_STACK"], [337, 9, 1, "", "RLIMIT_SWAP"], [337, 9, 1, "", "RLIMIT_VMEM"], [337, 9, 1, "", "RLIM_INFINITY"], [337, 9, 1, "", "RUSAGE_BOTH"], [337, 9, 1, "", "RUSAGE_CHILDREN"], [337, 9, 1, "", "RUSAGE_SELF"], [337, 9, 1, "", "RUSAGE_THREAD"], [337, 6, 1, "", "error"], [337, 12, 1, "", "getpagesize"], [337, 12, 1, "", "getrlimit"], [337, 12, 1, "", "getrusage"], [337, 12, 1, "", "prlimit"], [337, 12, 1, "", "setrlimit"]], "rlcompleter": [[338, 11, 1, "", "Completer"]], "rlcompleter.Completer": [[338, 8, 1, "", "complete"]], "runpy": [[339, 12, 1, "", "run_module"], [339, 12, 1, "", "run_path"]], "sched": [[340, 11, 1, "", "scheduler"]], "sched.scheduler": [[340, 8, 1, "", "cancel"], [340, 8, 1, "", "empty"], [340, 8, 1, "", "enter"], [340, 8, 1, "", "enterabs"], [340, 7, 1, "", "queue"], [340, 8, 1, "", "run"]], "secrets": [[341, 11, 1, "", "SystemRandom"], [341, 12, 1, "", "choice"], [341, 12, 1, "", "compare_digest"], [341, 12, 1, "", "randbelow"], [341, 12, 1, "", "randbits"], [341, 12, 1, "", "token_bytes"], [341, 12, 1, "", "token_hex"], [341, 12, 1, "", "token_urlsafe"]], "select": [[343, 7, 1, "", "PIPE_BUF"], [343, 12, 1, "", "devpoll"], [343, 12, 1, "", "epoll"], [343, 6, 1, "", "error"], [343, 12, 1, "", "kevent"], [343, 12, 1, "", "kqueue"], [343, 12, 1, "", "poll"], [343, 12, 1, "", "select"]], "select.devpoll": [[343, 8, 1, "", "close"], [343, 7, 1, "", "closed"], [343, 8, 1, "", "fileno"], [343, 8, 1, "", "modify"], [343, 8, 1, "", "poll"], [343, 8, 1, "", "register"], [343, 8, 1, "", "unregister"]], "select.epoll": [[343, 8, 1, "", "close"], [343, 7, 1, "", "closed"], [343, 8, 1, "", "fileno"], [343, 8, 1, "", "fromfd"], [343, 8, 1, "", "modify"], [343, 8, 1, "", "poll"], [343, 8, 1, "", "register"], [343, 8, 1, "", "unregister"]], "select.kevent": [[343, 7, 1, "", "data"], [343, 7, 1, "", "fflags"], [343, 7, 1, "", "filter"], [343, 7, 1, "", "flags"], [343, 7, 1, "", "ident"], [343, 7, 1, "", "udata"]], "select.kqueue": [[343, 8, 1, "", "close"], [343, 7, 1, "", "closed"], [343, 8, 1, "", "control"], [343, 8, 1, "", "fileno"], [343, 8, 1, "", "fromfd"]], "select.poll": [[343, 8, 1, "", "modify"], [343, 8, 1, "", "poll"], [343, 8, 1, "", "register"], [343, 8, 1, "", "unregister"]], "selectors": [[344, 11, 1, "", "BaseSelector"], [344, 11, 1, "", "DefaultSelector"], [344, 11, 1, "", "DevpollSelector"], [344, 9, 1, "", "EVENT_READ"], [344, 9, 1, "", "EVENT_WRITE"], [344, 11, 1, "", "EpollSelector"], [344, 11, 1, "", "KqueueSelector"], [344, 11, 1, "", "PollSelector"], [344, 11, 1, "", "SelectSelector"], [344, 11, 1, "", "SelectorKey"]], "selectors.BaseSelector": [[344, 8, 1, "", "close"], [344, 8, 1, "", "get_key"], [344, 8, 1, "", "get_map"], [344, 8, 1, "", "modify"], [344, 8, 1, "", "register"], [344, 8, 1, "", "select"], [344, 8, 1, "", "unregister"]], "selectors.DevpollSelector": [[344, 8, 1, "", "fileno"]], "selectors.EpollSelector": [[344, 8, 1, "", "fileno"]], "selectors.KqueueSelector": [[344, 8, 1, "", "fileno"]], "selectors.SelectorKey": [[344, 7, 1, "", "data"], [344, 7, 1, "", "events"], [344, 7, 1, "", "fd"], [344, 7, 1, "", "fileobj"]], "shelve": [[345, 11, 1, "", "BsdDbShelf"], [345, 11, 1, "", "DbfilenameShelf"], [345, 11, 1, "", "Shelf"], [345, 12, 1, "", "open"]], "shelve.Shelf": [[345, 8, 1, "", "close"], [345, 8, 1, "", "sync"]], "shlex": [[346, 12, 1, "", "join"], [346, 12, 1, "", "quote"], [346, 11, 1, "", "shlex"], [346, 12, 1, "", "split"]], "shlex.shlex": [[346, 7, 1, "", "commenters"], [346, 7, 1, "", "debug"], [346, 7, 1, "", "eof"], [346, 8, 1, "", "error_leader"], [346, 7, 1, "", "escape"], [346, 7, 1, "", "escapedquotes"], [346, 8, 1, "", "get_token"], [346, 7, 1, "", "infile"], [346, 7, 1, "", "instream"], [346, 7, 1, "", "lineno"], [346, 8, 1, "", "pop_source"], [346, 7, 1, "", "punctuation_chars"], [346, 8, 1, "", "push_source"], [346, 8, 1, "", "push_token"], [346, 7, 1, "", "quotes"], [346, 8, 1, "", "read_token"], [346, 7, 1, "", "source"], [346, 8, 1, "", "sourcehook"], [346, 7, 1, "", "token"], [346, 7, 1, "", "whitespace"], [346, 7, 1, "", "whitespace_split"], [346, 7, 1, "", "wordchars"]], "shutil": [[347, 6, 1, "", "Error"], [347, 6, 1, "", "SameFileError"], [347, 12, 1, "", "chown"], [347, 12, 1, "", "copy"], [347, 12, 1, "", "copy2"], [347, 12, 1, "", "copyfile"], [347, 12, 1, "", "copyfileobj"], [347, 12, 1, "", "copymode"], [347, 12, 1, "", "copystat"], [347, 12, 1, "", "copytree"], [347, 12, 1, "", "disk_usage"], [347, 12, 1, "", "get_archive_formats"], [347, 12, 1, "", "get_terminal_size"], [347, 12, 1, "", "get_unpack_formats"], [347, 12, 1, "", "ignore_patterns"], [347, 12, 1, "", "make_archive"], [347, 12, 1, "", "move"], [347, 12, 1, "", "register_archive_format"], [347, 12, 1, "", "register_unpack_format"], [347, 12, 1, "", "rmtree"], [347, 12, 1, "", "unpack_archive"], [347, 12, 1, "", "unregister_archive_format"], [347, 12, 1, "", "unregister_unpack_format"], [347, 12, 1, "", "which"]], "shutil.rmtree": [[347, 7, 1, "", "avoids_symlink_attacks"]], "signal": [[348, 9, 1, "", "CTRL_BREAK_EVENT"], [348, 9, 1, "", "CTRL_C_EVENT"], [348, 11, 1, "", "Handlers"], [348, 9, 1, "", "ITIMER_PROF"], [348, 9, 1, "", "ITIMER_REAL"], [348, 9, 1, "", "ITIMER_VIRTUAL"], [348, 6, 1, "", "ItimerError"], [348, 9, 1, "", "NSIG"], [348, 9, 1, "", "SIGABRT"], [348, 9, 1, "", "SIGALRM"], [348, 9, 1, "", "SIGBREAK"], [348, 9, 1, "", "SIGBUS"], [348, 9, 1, "", "SIGCHLD"], [348, 9, 1, "", "SIGCLD"], [348, 9, 1, "", "SIGCONT"], [348, 9, 1, "", "SIGFPE"], [348, 9, 1, "", "SIGHUP"], [348, 9, 1, "", "SIGILL"], [348, 9, 1, "", "SIGINT"], [348, 9, 1, "", "SIGKILL"], [348, 9, 1, "", "SIGPIPE"], [348, 9, 1, "", "SIGSEGV"], [348, 9, 1, "", "SIGSTKFLT"], [348, 9, 1, "", "SIGTERM"], [348, 9, 1, "", "SIGUSR1"], [348, 9, 1, "", "SIGUSR2"], [348, 9, 1, "", "SIGWINCH"], [348, 9, 1, "", "SIG_BLOCK"], [348, 9, 1, "", "SIG_DFL"], [348, 9, 1, "", "SIG_IGN"], [348, 9, 1, "", "SIG_SETMASK"], [348, 9, 1, "", "SIG_UNBLOCK"], [348, 11, 1, "", "Sigmasks"], [348, 11, 1, "", "Signals"], [348, 12, 1, "", "alarm"], [348, 12, 1, "", "getitimer"], [348, 12, 1, "", "getsignal"], [348, 12, 1, "", "pause"], [348, 12, 1, "", "pidfd_send_signal"], [348, 12, 1, "", "pthread_kill"], [348, 12, 1, "", "pthread_sigmask"], [348, 12, 1, "", "raise_signal"], [348, 12, 1, "", "set_wakeup_fd"], [348, 12, 1, "", "setitimer"], [348, 12, 1, "", "siginterrupt"], [348, 12, 1, "", "signal"], [348, 12, 1, "", "sigpending"], [348, 12, 1, "", "sigtimedwait"], [348, 12, 1, "", "sigwait"], [348, 12, 1, "", "sigwaitinfo"], [348, 12, 1, "", "strsignal"], [348, 12, 1, "", "valid_signals"]], "site": [[349, 9, 1, "", "ENABLE_USER_SITE"], [349, 9, 1, "", "PREFIXES"], [349, 9, 1, "", "USER_BASE"], [349, 9, 1, "", "USER_SITE"], [349, 12, 1, "", "addsitedir"], [349, 12, 1, "", "getsitepackages"], [349, 12, 1, "", "getuserbase"], [349, 12, 1, "", "getusersitepackages"], [349, 12, 1, "", "main"], [349, 14, 1, "cmdoption-site-user-base", "--user-base"], [349, 14, 1, "cmdoption-site-user-site", "--user-site"]], "slice": [[443, 8, 1, "", "indices"], [239, 7, 1, "", "start"], [239, 7, 1, "", "step"], [239, 7, 1, "", "stop"]], "smtpd": [[350, 11, 1, "", "DebuggingServer"], [350, 11, 1, "", "PureProxy"], [350, 11, 1, "", "SMTPChannel"], [350, 11, 1, "", "SMTPServer"]], "smtpd.SMTPChannel": [[350, 7, 1, "", "addr"], [350, 7, 1, "", "conn"], [350, 7, 1, "", "fqdn"], [350, 7, 1, "", "mailfrom"], [350, 7, 1, "", "peer"], [350, 7, 1, "", "rcpttos"], [350, 7, 1, "", "received_data"], [350, 7, 1, "", "received_lines"], [350, 7, 1, "", "seen_greeting"], [350, 7, 1, "", "smtp_server"], [350, 7, 1, "", "smtp_state"]], "smtpd.SMTPServer": [[350, 7, 1, "", "channel_class"], [350, 8, 1, "", "process_message"]], "smtplib": [[351, 11, 1, "", "LMTP"], [351, 11, 1, "", "SMTP"], [351, 6, 1, "", "SMTPAuthenticationError"], [351, 6, 1, "", "SMTPConnectError"], [351, 6, 1, "", "SMTPDataError"], [351, 6, 1, "", "SMTPException"], [351, 6, 1, "", "SMTPHeloError"], [351, 6, 1, "", "SMTPNotSupportedError"], [351, 6, 1, "", "SMTPRecipientsRefused"], [351, 6, 1, "", "SMTPResponseException"], [351, 6, 1, "", "SMTPSenderRefused"], [351, 6, 1, "", "SMTPServerDisconnected"], [351, 11, 1, "", "SMTP_SSL"]], "smtplib.SMTP": [[351, 8, 1, "", "auth"], [351, 8, 1, "", "connect"], [351, 8, 1, "", "docmd"], [351, 8, 1, "", "ehlo"], [351, 8, 1, "", "ehlo_or_helo_if_needed"], [351, 8, 1, "", "has_extn"], [351, 8, 1, "", "helo"], [351, 8, 1, "", "login"], [351, 8, 1, "", "quit"], [351, 8, 1, "", "send_message"], [351, 8, 1, "", "sendmail"], [351, 8, 1, "", "set_debuglevel"], [351, 8, 1, "", "starttls"], [351, 8, 1, "", "verify"]], "sndhdr": [[352, 9, 1, "", "tests"], [352, 12, 1, "", "what"], [352, 12, 1, "", "whathdr"]], "socket": [[353, 9, 1, "", "AF_ALG"], [353, 9, 1, "", "AF_CAN"], [353, 9, 1, "", "AF_INET"], [353, 9, 1, "", "AF_INET6"], [353, 9, 1, "", "AF_LINK"], [353, 9, 1, "", "AF_PACKET"], [353, 9, 1, "", "AF_QIPCRTR"], [353, 9, 1, "", "AF_RDS"], [353, 9, 1, "", "AF_UNIX"], [353, 9, 1, "", "AF_UNSPEC"], [353, 9, 1, "", "AF_VSOCK"], [353, 9, 1, "", "BDADDR_ANY"], [353, 9, 1, "", "BDADDR_LOCAL"], [353, 9, 1, "", "CAN_BCM"], [353, 9, 1, "", "CAN_ISOTP"], [353, 9, 1, "", "CAN_J1939"], [353, 9, 1, "", "CAN_RAW_FD_FRAMES"], [353, 9, 1, "", "CAN_RAW_JOIN_FILTERS"], [353, 12, 1, "", "CMSG_LEN"], [353, 12, 1, "", "CMSG_SPACE"], [353, 9, 1, "", "HCI_DATA_DIR"], [353, 9, 1, "", "HCI_FILTER"], [353, 9, 1, "", "HCI_TIME_STAMP"], [353, 9, 1, "", "IOCTL_VM_SOCKETS_GET_LOCAL_CID"], [353, 9, 1, "", "LOCAL_CREDS"], [353, 9, 1, "", "LOCAL_CREDS_PERSISTENT"], [353, 9, 1, "", "PF_CAN"], [353, 9, 1, "", "PF_PACKET"], [353, 9, 1, "", "PF_RDS"], [353, 9, 1, "", "SCM_CREDS2"], [353, 9, 1, "", "SIO_KEEPALIVE_VALS"], [353, 9, 1, "", "SIO_LOOPBACK_FAST_PATH"], [353, 9, 1, "", "SIO_RCVALL"], [353, 9, 1, "", "SOCK_CLOEXEC"], [353, 9, 1, "", "SOCK_DGRAM"], [353, 9, 1, "", "SOCK_NONBLOCK"], [353, 9, 1, "", "SOCK_RAW"], [353, 9, 1, "", "SOCK_RDM"], [353, 9, 1, "", "SOCK_SEQPACKET"], [353, 9, 1, "", "SOCK_STREAM"], [353, 9, 1, "", "SOL_ALG"], [353, 9, 1, "", "SOL_RDS"], [353, 9, 1, "", "SOMAXCONN"], [353, 9, 1, "", "SO_INCOMING_CPU"], [353, 9, 1, "", "SocketType"], [353, 12, 1, "", "close"], [353, 12, 1, "", "create_connection"], [353, 12, 1, "", "create_server"], [353, 6, 1, "", "error"], [353, 12, 1, "", "fromfd"], [353, 12, 1, "", "fromshare"], [353, 6, 1, "", "gaierror"], [353, 12, 1, "", "getaddrinfo"], [353, 12, 1, "", "getdefaulttimeout"], [353, 12, 1, "", "getfqdn"], [353, 12, 1, "", "gethostbyaddr"], [353, 12, 1, "", "gethostbyname"], [353, 12, 1, "", "gethostbyname_ex"], [353, 12, 1, "", "gethostname"], [353, 12, 1, "", "getnameinfo"], [353, 12, 1, "", "getprotobyname"], [353, 12, 1, "", "getservbyname"], [353, 12, 1, "", "getservbyport"], [353, 12, 1, "", "has_dualstack_ipv6"], [353, 9, 1, "", "has_ipv6"], [353, 6, 1, "", "herror"], [353, 12, 1, "", "htonl"], [353, 12, 1, "", "htons"], [353, 12, 1, "", "if_indextoname"], [353, 12, 1, "", "if_nameindex"], [353, 12, 1, "", "if_nametoindex"], [353, 12, 1, "", "inet_aton"], [353, 12, 1, "", "inet_ntoa"], [353, 12, 1, "", "inet_ntop"], [353, 12, 1, "", "inet_pton"], [353, 12, 1, "", "ntohl"], [353, 12, 1, "", "ntohs"], [353, 12, 1, "", "recv_fds"], [353, 12, 1, "", "send_fds"], [353, 12, 1, "", "setdefaulttimeout"], [353, 12, 1, "", "sethostname"], [353, 11, 1, "", "socket"], [353, 12, 1, "", "socketpair"], [353, 6, 1, "", "timeout"]], "socket.socket": [[353, 8, 1, "", "accept"], [353, 8, 1, "", "bind"], [353, 8, 1, "", "close"], [353, 8, 1, "", "connect"], [353, 8, 1, "", "connect_ex"], [353, 8, 1, "", "detach"], [353, 8, 1, "", "dup"], [353, 7, 1, "", "family"], [353, 8, 1, "", "fileno"], [353, 8, 1, "", "get_inheritable"], [353, 8, 1, "", "getblocking"], [353, 8, 1, "", "getpeername"], [353, 8, 1, "", "getsockname"], [353, 8, 1, "", "getsockopt"], [353, 8, 1, "", "gettimeout"], [353, 8, 1, "", "ioctl"], [353, 8, 1, "", "listen"], [353, 8, 1, "", "makefile"], [353, 7, 1, "", "proto"], [353, 8, 1, "", "recv"], [353, 8, 1, "", "recv_into"], [353, 8, 1, "", "recvfrom"], [353, 8, 1, "", "recvfrom_into"], [353, 8, 1, "", "recvmsg"], [353, 8, 1, "", "recvmsg_into"], [353, 8, 1, "", "send"], [353, 8, 1, "", "sendall"], [353, 8, 1, "", "sendfile"], [353, 8, 1, "", "sendmsg"], [353, 8, 1, "", "sendmsg_afalg"], [353, 8, 1, "", "sendto"], [353, 8, 1, "", "set_inheritable"], [353, 8, 1, "", "setblocking"], [353, 8, 1, "", "setsockopt"], [353, 8, 1, "", "settimeout"], [353, 8, 1, "", "share"], [353, 8, 1, "", "shutdown"], [353, 7, 1, "", "type"]], "socketserver": [[354, 11, 1, "", "BaseRequestHandler"], [354, 11, 1, "", "BaseServer"], [354, 11, 1, "", "DatagramRequestHandler"], [354, 11, 1, "", "ForkingMixIn"], [354, 11, 1, "", "ForkingTCPServer"], [354, 11, 1, "", "ForkingUDPServer"], [354, 11, 1, "", "StreamRequestHandler"], [354, 11, 1, "", "TCPServer"], [354, 11, 1, "", "ThreadingMixIn"], [354, 11, 1, "", "ThreadingTCPServer"], [354, 11, 1, "", "ThreadingUDPServer"], [354, 11, 1, "", "UDPServer"], [354, 11, 1, "", "UnixDatagramServer"], [354, 11, 1, "", "UnixStreamServer"]], "socketserver.BaseRequestHandler": [[354, 7, 1, "", "client_address"], [354, 8, 1, "", "finish"], [354, 8, 1, "", "handle"], [354, 7, 1, "", "request"], [354, 7, 1, "", "server"], [354, 8, 1, "", "setup"]], "socketserver.BaseServer": [[354, 7, 1, "", "RequestHandlerClass"], [354, 7, 1, "", "address_family"], [354, 7, 1, "", "allow_reuse_address"], [354, 8, 1, "", "fileno"], [354, 8, 1, "", "finish_request"], [354, 8, 1, "", "get_request"], [354, 8, 1, "", "handle_error"], [354, 8, 1, "", "handle_request"], [354, 8, 1, "", "handle_timeout"], [354, 8, 1, "", "process_request"], [354, 7, 1, "", "request_queue_size"], [354, 8, 1, "", "serve_forever"], [354, 8, 1, "", "server_activate"], [354, 7, 1, "", "server_address"], [354, 8, 1, "", "server_bind"], [354, 8, 1, "", "server_close"], [354, 8, 1, "", "service_actions"], [354, 8, 1, "", "shutdown"], [354, 7, 1, "", "socket"], [354, 7, 1, "", "socket_type"], [354, 7, 1, "", "timeout"], [354, 8, 1, "", "verify_request"]], "socketserver.DatagramRequestHandler": [[354, 7, 1, "", "rfile"], [354, 7, 1, "", "wfile"]], "socketserver.ThreadingMixIn": [[354, 7, 1, "", "block_on_close"], [354, 7, 1, "", "daemon_threads"]], "spwd": [[355, 12, 1, "", "getspall"], [355, 12, 1, "", "getspnam"]], "sqlite3": [[356, 11, 1, "", "Blob"], [356, 11, 1, "", "Connection"], [356, 11, 1, "", "Cursor"], [356, 6, 1, "", "DataError"], [356, 6, 1, "", "DatabaseError"], [356, 6, 1, "", "Error"], [356, 6, 1, "", "IntegrityError"], [356, 6, 1, "", "InterfaceError"], [356, 6, 1, "", "InternalError"], [356, 6, 1, "", "NotSupportedError"], [356, 6, 1, "", "OperationalError"], [356, 9, 1, "", "PARSE_COLNAMES"], [356, 9, 1, "", "PARSE_DECLTYPES"], [356, 11, 1, "", "PrepareProtocol"], [356, 6, 1, "", "ProgrammingError"], [356, 11, 1, "", "Row"], [356, 9, 1, "", "SQLITE_DENY"], [356, 9, 1, "", "SQLITE_IGNORE"], [356, 9, 1, "", "SQLITE_OK"], [356, 6, 1, "", "Warning"], [356, 9, 1, "", "apilevel"], [356, 12, 1, "", "complete_statement"], [356, 12, 1, "", "connect"], [356, 12, 1, "", "enable_callback_tracebacks"], [356, 9, 1, "", "paramstyle"], [356, 12, 1, "", "register_adapter"], [356, 12, 1, "", "register_converter"], [356, 9, 1, "", "sqlite_version"], [356, 9, 1, "", "sqlite_version_info"], [356, 9, 1, "", "threadsafety"], [356, 9, 1, "", "version"], [356, 9, 1, "", "version_info"]], "sqlite3.Blob": [[356, 8, 1, "", "close"], [356, 8, 1, "", "read"], [356, 8, 1, "", "seek"], [356, 8, 1, "", "tell"], [356, 8, 1, "", "write"]], "sqlite3.Connection": [[356, 8, 1, "", "backup"], [356, 8, 1, "", "blobopen"], [356, 8, 1, "", "close"], [356, 8, 1, "", "commit"], [356, 8, 1, "", "create_aggregate"], [356, 8, 1, "", "create_collation"], [356, 8, 1, "", "create_function"], [356, 8, 1, "", "create_window_function"], [356, 8, 1, "", "cursor"], [356, 8, 1, "", "deserialize"], [356, 8, 1, "", "enable_load_extension"], [356, 8, 1, "", "execute"], [356, 8, 1, "", "executemany"], [356, 8, 1, "", "executescript"], [356, 8, 1, "", "getlimit"], [356, 7, 1, "", "in_transaction"], [356, 8, 1, "", "interrupt"], [356, 7, 1, "", "isolation_level"], [356, 8, 1, "", "iterdump"], [356, 8, 1, "", "load_extension"], [356, 8, 1, "", "rollback"], [356, 7, 1, "", "row_factory"], [356, 8, 1, "", "serialize"], [356, 8, 1, "", "set_authorizer"], [356, 8, 1, "", "set_progress_handler"], [356, 8, 1, "", "set_trace_callback"], [356, 8, 1, "", "setlimit"], [356, 7, 1, "", "text_factory"], [356, 7, 1, "", "total_changes"]], "sqlite3.Cursor": [[356, 7, 1, "", "arraysize"], [356, 8, 1, "", "close"], [356, 7, 1, "", "connection"], [356, 7, 1, "", "description"], [356, 8, 1, "", "execute"], [356, 8, 1, "", "executemany"], [356, 8, 1, "", "executescript"], [356, 8, 1, "", "fetchall"], [356, 8, 1, "", "fetchmany"], [356, 8, 1, "", "fetchone"], [356, 7, 1, "", "lastrowid"], [356, 7, 1, "", "row_factory"], [356, 7, 1, "", "rowcount"], [356, 8, 1, "", "setinputsizes"], [356, 8, 1, "", "setoutputsize"]], "sqlite3.Error": [[356, 7, 1, "", "sqlite_errorcode"], [356, 7, 1, "", "sqlite_errorname"]], "sqlite3.Row": [[356, 8, 1, "", "keys"]], "ssl": [[357, 9, 1, "", "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"], [357, 9, 1, "", "ALERT_DESCRIPTION_INTERNAL_ERROR"], [357, 11, 1, "", "AlertDescription"], [357, 9, 1, "", "CERT_NONE"], [357, 9, 1, "", "CERT_OPTIONAL"], [357, 9, 1, "", "CERT_REQUIRED"], [357, 9, 1, "", "CHANNEL_BINDING_TYPES"], [357, 6, 1, "", "CertificateError"], [357, 12, 1, "", "DER_cert_to_PEM_cert"], [357, 9, 1, "", "HAS_ALPN"], [357, 9, 1, "", "HAS_ECDH"], [357, 9, 1, "", "HAS_NEVER_CHECK_COMMON_NAME"], [357, 9, 1, "", "HAS_NPN"], [357, 9, 1, "", "HAS_SNI"], [357, 9, 1, "", "HAS_SSLv2"], [357, 9, 1, "", "HAS_SSLv3"], [357, 9, 1, "", "HAS_TLSv1"], [357, 9, 1, "", "HAS_TLSv1_1"], [357, 9, 1, "", "HAS_TLSv1_2"], [357, 9, 1, "", "HAS_TLSv1_3"], [357, 11, 1, "", "MemoryBIO"], [357, 9, 1, "", "OPENSSL_VERSION"], [357, 9, 1, "", "OPENSSL_VERSION_INFO"], [357, 9, 1, "", "OPENSSL_VERSION_NUMBER"], [357, 9, 1, "", "OP_ALL"], [357, 9, 1, "", "OP_CIPHER_SERVER_PREFERENCE"], [357, 9, 1, "", "OP_ENABLE_MIDDLEBOX_COMPAT"], [357, 9, 1, "", "OP_IGNORE_UNEXPECTED_EOF"], [357, 9, 1, "", "OP_NO_COMPRESSION"], [357, 9, 1, "", "OP_NO_RENEGOTIATION"], [357, 9, 1, "", "OP_NO_SSLv2"], [357, 9, 1, "", "OP_NO_SSLv3"], [357, 9, 1, "", "OP_NO_TICKET"], [357, 9, 1, "", "OP_NO_TLSv1"], [357, 9, 1, "", "OP_NO_TLSv1_1"], [357, 9, 1, "", "OP_NO_TLSv1_2"], [357, 9, 1, "", "OP_NO_TLSv1_3"], [357, 9, 1, "", "OP_SINGLE_DH_USE"], [357, 9, 1, "", "OP_SINGLE_ECDH_USE"], [357, 11, 1, "", "Options"], [357, 12, 1, "", "PEM_cert_to_DER_cert"], [357, 9, 1, "", "PROTOCOL_SSLv2"], [357, 9, 1, "", "PROTOCOL_SSLv23"], [357, 9, 1, "", "PROTOCOL_SSLv3"], [357, 9, 1, "", "PROTOCOL_TLS"], [357, 9, 1, "", "PROTOCOL_TLS_CLIENT"], [357, 9, 1, "", "PROTOCOL_TLS_SERVER"], [357, 9, 1, "", "PROTOCOL_TLSv1"], [357, 9, 1, "", "PROTOCOL_TLSv1_1"], [357, 9, 1, "", "PROTOCOL_TLSv1_2"], [357, 12, 1, "", "RAND_add"], [357, 12, 1, "", "RAND_bytes"], [357, 12, 1, "", "RAND_pseudo_bytes"], [357, 12, 1, "", "RAND_status"], [357, 6, 1, "", "SSLCertVerificationError"], [357, 11, 1, "", "SSLContext"], [357, 6, 1, "", "SSLEOFError"], [357, 6, 1, "", "SSLError"], [357, 11, 1, "", "SSLErrorNumber"], [357, 11, 1, "", "SSLObject"], [357, 11, 1, "", "SSLSession"], [357, 11, 1, "", "SSLSocket"], [357, 6, 1, "", "SSLSyscallError"], [357, 6, 1, "", "SSLWantReadError"], [357, 6, 1, "", "SSLWantWriteError"], [357, 6, 1, "", "SSLZeroReturnError"], [357, 11, 1, "", "TLSVersion"], [357, 9, 1, "", "VERIFY_ALLOW_PROXY_CERTS"], [357, 9, 1, "", "VERIFY_CRL_CHECK_CHAIN"], [357, 9, 1, "", "VERIFY_CRL_CHECK_LEAF"], [357, 9, 1, "", "VERIFY_DEFAULT"], [357, 9, 1, "", "VERIFY_X509_PARTIAL_CHAIN"], [357, 9, 1, "", "VERIFY_X509_STRICT"], [357, 9, 1, "", "VERIFY_X509_TRUSTED_FIRST"], [357, 11, 1, "", "VerifyFlags"], [357, 11, 1, "", "VerifyMode"], [357, 12, 1, "", "cert_time_to_seconds"], [357, 12, 1, "", "create_default_context"], [357, 12, 1, "", "enum_certificates"], [357, 12, 1, "", "enum_crls"], [357, 12, 1, "", "get_default_verify_paths"], [357, 12, 1, "", "get_server_certificate"], [357, 12, 1, "", "match_hostname"], [357, 12, 1, "", "wrap_socket"]], "ssl.MemoryBIO": [[357, 7, 1, "", "eof"], [357, 7, 1, "", "pending"], [357, 8, 1, "", "read"], [357, 8, 1, "", "write"], [357, 8, 1, "", "write_eof"]], "ssl.Purpose": [[357, 9, 1, "", "CLIENT_AUTH"], [357, 9, 1, "", "SERVER_AUTH"]], "ssl.SSLCertVerificationError": [[357, 7, 1, "", "verify_code"], [357, 7, 1, "", "verify_message"]], "ssl.SSLContext": [[357, 8, 1, "", "cert_store_stats"], [357, 7, 1, "", "check_hostname"], [357, 8, 1, "", "get_ca_certs"], [357, 8, 1, "", "get_ciphers"], [357, 7, 1, "", "hostname_checks_common_name"], [357, 7, 1, "", "keylog_filename"], [357, 8, 1, "", "load_cert_chain"], [357, 8, 1, "", "load_default_certs"], [357, 8, 1, "", "load_dh_params"], [357, 8, 1, "", "load_verify_locations"], [357, 7, 1, "", "maximum_version"], [357, 7, 1, "", "minimum_version"], [357, 7, 1, "", "num_tickets"], [357, 7, 1, "", "options"], [357, 7, 1, "", "post_handshake_auth"], [357, 7, 1, "", "protocol"], [357, 7, 1, "", "security_level"], [357, 8, 1, "", "session_stats"], [357, 8, 1, "", "set_alpn_protocols"], [357, 8, 1, "", "set_ciphers"], [357, 8, 1, "", "set_default_verify_paths"], [357, 8, 1, "", "set_ecdh_curve"], [357, 8, 1, "", "set_npn_protocols"], [357, 7, 1, "", "set_servername_callback"], [357, 7, 1, "", "sni_callback"], [357, 7, 1, "", "sslobject_class"], [357, 7, 1, "", "sslsocket_class"], [357, 7, 1, "", "verify_flags"], [357, 7, 1, "", "verify_mode"], [357, 8, 1, "", "wrap_bio"], [357, 8, 1, "", "wrap_socket"]], "ssl.SSLError": [[357, 7, 1, "", "library"], [357, 7, 1, "", "reason"]], "ssl.SSLSession": [[357, 7, 1, "", "has_ticket"], [357, 7, 1, "", "id"], [357, 7, 1, "", "ticket_lifetime_hint"], [357, 7, 1, "", "time"], [357, 7, 1, "", "timeout"]], "ssl.SSLSocket": [[357, 8, 1, "", "cipher"], [357, 8, 1, "", "compression"], [357, 7, 1, "", "context"], [357, 8, 1, "", "do_handshake"], [357, 8, 1, "", "get_channel_binding"], [357, 8, 1, "", "getpeercert"], [357, 8, 1, "", "pending"], [357, 8, 1, "", "read"], [357, 8, 1, "", "selected_alpn_protocol"], [357, 8, 1, "", "selected_npn_protocol"], [357, 7, 1, "", "server_hostname"], [357, 7, 1, "", "server_side"], [357, 7, 1, "", "session"], [357, 7, 1, "", "session_reused"], [357, 8, 1, "", "shared_ciphers"], [357, 8, 1, "", "unwrap"], [357, 8, 1, "", "verify_client_post_handshake"], [357, 8, 1, "", "version"], [357, 8, 1, "", "write"]], "ssl.TLSVersion": [[357, 7, 1, "", "MAXIMUM_SUPPORTED"], [357, 7, 1, "", "MINIMUM_SUPPORTED"], [357, 7, 1, "", "SSLv3"], [357, 7, 1, "", "TLSv1"], [357, 7, 1, "", "TLSv1_1"], [357, 7, 1, "", "TLSv1_2"], [357, 7, 1, "", "TLSv1_3"]], "stat": [[358, 9, 1, "", "FILE_ATTRIBUTE_ARCHIVE"], [358, 9, 1, "", "FILE_ATTRIBUTE_COMPRESSED"], [358, 9, 1, "", "FILE_ATTRIBUTE_DEVICE"], [358, 9, 1, "", "FILE_ATTRIBUTE_DIRECTORY"], [358, 9, 1, "", "FILE_ATTRIBUTE_ENCRYPTED"], [358, 9, 1, "", "FILE_ATTRIBUTE_HIDDEN"], [358, 9, 1, "", "FILE_ATTRIBUTE_INTEGRITY_STREAM"], [358, 9, 1, "", "FILE_ATTRIBUTE_NORMAL"], [358, 9, 1, "", "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"], [358, 9, 1, "", "FILE_ATTRIBUTE_NO_SCRUB_DATA"], [358, 9, 1, "", "FILE_ATTRIBUTE_OFFLINE"], [358, 9, 1, "", "FILE_ATTRIBUTE_READONLY"], [358, 9, 1, "", "FILE_ATTRIBUTE_REPARSE_POINT"], [358, 9, 1, "", "FILE_ATTRIBUTE_SPARSE_FILE"], [358, 9, 1, "", "FILE_ATTRIBUTE_SYSTEM"], [358, 9, 1, "", "FILE_ATTRIBUTE_TEMPORARY"], [358, 9, 1, "", "FILE_ATTRIBUTE_VIRTUAL"], [358, 9, 1, "", "IO_REPARSE_TAG_APPEXECLINK"], [358, 9, 1, "", "IO_REPARSE_TAG_MOUNT_POINT"], [358, 9, 1, "", "IO_REPARSE_TAG_SYMLINK"], [358, 9, 1, "", "SF_APPEND"], [358, 9, 1, "", "SF_ARCHIVED"], [358, 9, 1, "", "SF_IMMUTABLE"], [358, 9, 1, "", "SF_NOUNLINK"], [358, 9, 1, "", "SF_SNAPSHOT"], [358, 9, 1, "", "ST_ATIME"], [358, 9, 1, "", "ST_CTIME"], [358, 9, 1, "", "ST_DEV"], [358, 9, 1, "", "ST_GID"], [358, 9, 1, "", "ST_INO"], [358, 9, 1, "", "ST_MODE"], [358, 9, 1, "", "ST_MTIME"], [358, 9, 1, "", "ST_NLINK"], [358, 9, 1, "", "ST_SIZE"], [358, 9, 1, "", "ST_UID"], [358, 9, 1, "", "S_ENFMT"], [358, 9, 1, "", "S_IEXEC"], [358, 9, 1, "", "S_IFBLK"], [358, 9, 1, "", "S_IFCHR"], [358, 9, 1, "", "S_IFDIR"], [358, 9, 1, "", "S_IFDOOR"], [358, 9, 1, "", "S_IFIFO"], [358, 9, 1, "", "S_IFLNK"], [358, 12, 1, "", "S_IFMT"], [358, 9, 1, "", "S_IFPORT"], [358, 9, 1, "", "S_IFREG"], [358, 9, 1, "", "S_IFSOCK"], [358, 9, 1, "", "S_IFWHT"], [358, 12, 1, "", "S_IMODE"], [358, 9, 1, "", "S_IREAD"], [358, 9, 1, "", "S_IRGRP"], [358, 9, 1, "", "S_IROTH"], [358, 9, 1, "", "S_IRUSR"], [358, 9, 1, "", "S_IRWXG"], [358, 9, 1, "", "S_IRWXO"], [358, 9, 1, "", "S_IRWXU"], [358, 12, 1, "", "S_ISBLK"], [358, 12, 1, "", "S_ISCHR"], [358, 12, 1, "", "S_ISDIR"], [358, 12, 1, "", "S_ISDOOR"], [358, 12, 1, "", "S_ISFIFO"], [358, 9, 1, "", "S_ISGID"], [358, 12, 1, "", "S_ISLNK"], [358, 12, 1, "", "S_ISPORT"], [358, 12, 1, "", "S_ISREG"], [358, 12, 1, "", "S_ISSOCK"], [358, 9, 1, "", "S_ISUID"], [358, 9, 1, "", "S_ISVTX"], [358, 12, 1, "", "S_ISWHT"], [358, 9, 1, "", "S_IWGRP"], [358, 9, 1, "", "S_IWOTH"], [358, 9, 1, "", "S_IWRITE"], [358, 9, 1, "", "S_IWUSR"], [358, 9, 1, "", "S_IXGRP"], [358, 9, 1, "", "S_IXOTH"], [358, 9, 1, "", "S_IXUSR"], [358, 9, 1, "", "UF_APPEND"], [358, 9, 1, "", "UF_COMPRESSED"], [358, 9, 1, "", "UF_HIDDEN"], [358, 9, 1, "", "UF_IMMUTABLE"], [358, 9, 1, "", "UF_NODUMP"], [358, 9, 1, "", "UF_NOUNLINK"], [358, 9, 1, "", "UF_OPAQUE"], [358, 12, 1, "", "filemode"]], "statistics": [[359, 11, 1, "", "NormalDist"], [359, 6, 1, "", "StatisticsError"], [359, 12, 1, "", "correlation"], [359, 12, 1, "", "covariance"], [359, 12, 1, "", "fmean"], [359, 12, 1, "", "geometric_mean"], [359, 12, 1, "", "harmonic_mean"], [359, 12, 1, "", "linear_regression"], [359, 12, 1, "", "mean"], [359, 12, 1, "", "median"], [359, 12, 1, "", "median_grouped"], [359, 12, 1, "", "median_high"], [359, 12, 1, "", "median_low"], [359, 12, 1, "", "mode"], [359, 12, 1, "", "multimode"], [359, 12, 1, "", "pstdev"], [359, 12, 1, "", "pvariance"], [359, 12, 1, "", "quantiles"], [359, 12, 1, "", "stdev"], [359, 12, 1, "", "variance"]], "statistics.NormalDist": [[359, 8, 1, "", "cdf"], [359, 8, 1, "", "from_samples"], [359, 8, 1, "", "inv_cdf"], [359, 7, 1, "", "mean"], [359, 7, 1, "", "median"], [359, 7, 1, "", "mode"], [359, 8, 1, "", "overlap"], [359, 8, 1, "", "pdf"], [359, 8, 1, "", "quantiles"], [359, 8, 1, "", "samples"], [359, 7, 1, "", "stdev"], [359, 7, 1, "", "variance"], [359, 8, 1, "", "zscore"]], "str": [[360, 8, 1, "", "capitalize"], [360, 8, 1, "", "casefold"], [360, 8, 1, "", "center"], [360, 8, 1, "", "count"], [360, 8, 1, "", "encode"], [360, 8, 1, "", "endswith"], [360, 8, 1, "", "expandtabs"], [360, 8, 1, "", "find"], [360, 8, 1, "", "format"], [360, 8, 1, "", "format_map"], [360, 8, 1, "", "index"], [360, 8, 1, "", "isalnum"], [360, 8, 1, "", "isalpha"], [360, 8, 1, "", "isascii"], [360, 8, 1, "", "isdecimal"], [360, 8, 1, "", "isdigit"], [360, 8, 1, "", "isidentifier"], [360, 8, 1, "", "islower"], [360, 8, 1, "", "isnumeric"], [360, 8, 1, "", "isprintable"], [360, 8, 1, "", "isspace"], [360, 8, 1, "", "istitle"], [360, 8, 1, "", "isupper"], [360, 8, 1, "", "join"], [360, 8, 1, "", "ljust"], [360, 8, 1, "", "lower"], [360, 8, 1, "", "lstrip"], [360, 8, 1, "", "maketrans"], [360, 8, 1, "", "partition"], [360, 8, 1, "", "removeprefix"], [360, 8, 1, "", "removesuffix"], [360, 8, 1, "", "replace"], [360, 8, 1, "", "rfind"], [360, 8, 1, "", "rindex"], [360, 8, 1, "", "rjust"], [360, 8, 1, "", "rpartition"], [360, 8, 1, "", "rsplit"], [360, 8, 1, "", "rstrip"], [360, 8, 1, "", "split"], [360, 8, 1, "", "splitlines"], [360, 8, 1, "", "startswith"], [360, 8, 1, "", "strip"], [360, 8, 1, "", "swapcase"], [360, 8, 1, "", "title"], [360, 8, 1, "", "translate"], [360, 8, 1, "", "upper"], [360, 8, 1, "", "zfill"]], "string": [[361, 11, 1, "", "Formatter"], [361, 11, 1, "", "Template"], [361, 9, 1, "", "ascii_letters"], [361, 9, 1, "", "ascii_lowercase"], [361, 9, 1, "", "ascii_uppercase"], [361, 12, 1, "", "capwords"], [361, 9, 1, "", "digits"], [361, 9, 1, "", "hexdigits"], [361, 9, 1, "", "octdigits"], [361, 9, 1, "", "printable"], [361, 9, 1, "", "punctuation"], [361, 9, 1, "", "whitespace"]], "string.Formatter": [[361, 8, 1, "", "check_unused_args"], [361, 8, 1, "", "convert_field"], [361, 8, 1, "", "format"], [361, 8, 1, "", "format_field"], [361, 8, 1, "", "get_field"], [361, 8, 1, "", "get_value"], [361, 8, 1, "", "parse"], [361, 8, 1, "", "vformat"]], "string.Template": [[361, 8, 1, "", "get_identifiers"], [361, 8, 1, "", "is_valid"], [361, 8, 1, "", "safe_substitute"], [361, 8, 1, "", "substitute"], [361, 7, 1, "", "template"]], "stringprep": [[362, 12, 1, "", "in_table_a1"], [362, 12, 1, "", "in_table_b1"], [362, 12, 1, "", "in_table_c11"], [362, 12, 1, "", "in_table_c11_c12"], [362, 12, 1, "", "in_table_c12"], [362, 12, 1, "", "in_table_c21"], [362, 12, 1, "", "in_table_c21_c22"], [362, 12, 1, "", "in_table_c22"], [362, 12, 1, "", "in_table_c3"], [362, 12, 1, "", "in_table_c4"], [362, 12, 1, "", "in_table_c5"], [362, 12, 1, "", "in_table_c6"], [362, 12, 1, "", "in_table_c7"], [362, 12, 1, "", "in_table_c8"], [362, 12, 1, "", "in_table_c9"], [362, 12, 1, "", "in_table_d1"], [362, 12, 1, "", "in_table_d2"], [362, 12, 1, "", "map_table_b2"], [362, 12, 1, "", "map_table_b3"]], "struct": [[363, 11, 1, "", "Struct"], [363, 12, 1, "", "calcsize"], [363, 6, 1, "", "error"], [363, 12, 1, "", "iter_unpack"], [363, 12, 1, "", "pack"], [363, 12, 1, "", "pack_into"], [363, 12, 1, "", "unpack"], [363, 12, 1, "", "unpack_from"]], "struct.Struct": [[363, 7, 1, "", "format"], [363, 8, 1, "", "iter_unpack"], [363, 8, 1, "", "pack"], [363, 8, 1, "", "pack_into"], [363, 7, 1, "", "size"], [363, 8, 1, "", "unpack"], [363, 8, 1, "", "unpack_from"]], "subprocess": [[364, 9, 1, "", "ABOVE_NORMAL_PRIORITY_CLASS"], [364, 9, 1, "", "BELOW_NORMAL_PRIORITY_CLASS"], [364, 9, 1, "", "CREATE_BREAKAWAY_FROM_JOB"], [364, 9, 1, "", "CREATE_DEFAULT_ERROR_MODE"], [364, 9, 1, "", "CREATE_NEW_CONSOLE"], [364, 9, 1, "", "CREATE_NEW_PROCESS_GROUP"], [364, 9, 1, "", "CREATE_NO_WINDOW"], [364, 6, 1, "", "CalledProcessError"], [364, 11, 1, "", "CompletedProcess"], [364, 9, 1, "", "DETACHED_PROCESS"], [364, 9, 1, "", "DEVNULL"], [364, 9, 1, "", "HIGH_PRIORITY_CLASS"], [364, 9, 1, "", "IDLE_PRIORITY_CLASS"], [364, 9, 1, "", "NORMAL_PRIORITY_CLASS"], [364, 9, 1, "", "PIPE"], [364, 11, 1, "", "Popen"], [364, 9, 1, "", "REALTIME_PRIORITY_CLASS"], [364, 9, 1, "", "STARTF_USESHOWWINDOW"], [364, 9, 1, "", "STARTF_USESTDHANDLES"], [364, 11, 1, "", "STARTUPINFO"], [364, 9, 1, "", "STDOUT"], [364, 9, 1, "", "STD_ERROR_HANDLE"], [364, 9, 1, "", "STD_INPUT_HANDLE"], [364, 9, 1, "", "STD_OUTPUT_HANDLE"], [364, 9, 1, "", "SW_HIDE"], [364, 6, 1, "", "SubprocessError"], [364, 6, 1, "", "TimeoutExpired"], [364, 12, 1, "", "call"], [364, 12, 1, "", "check_call"], [364, 12, 1, "", "check_output"], [364, 12, 1, "", "getoutput"], [364, 12, 1, "", "getstatusoutput"], [364, 12, 1, "", "run"]], "subprocess.CalledProcessError": [[364, 7, 1, "", "cmd"], [364, 7, 1, "", "output"], [364, 7, 1, "", "returncode"], [364, 7, 1, "", "stderr"], [364, 7, 1, "", "stdout"]], "subprocess.CompletedProcess": [[364, 7, 1, "", "args"], [364, 8, 1, "", "check_returncode"], [364, 7, 1, "", "returncode"], [364, 7, 1, "", "stderr"], [364, 7, 1, "", "stdout"]], "subprocess.Popen": [[364, 7, 1, "", "args"], [364, 8, 1, "", "communicate"], [364, 8, 1, "", "kill"], [364, 7, 1, "", "pid"], [364, 8, 1, "", "poll"], [364, 7, 1, "", "returncode"], [364, 8, 1, "", "send_signal"], [364, 7, 1, "", "stderr"], [364, 7, 1, "", "stdin"], [364, 7, 1, "", "stdout"], [364, 8, 1, "", "terminate"], [364, 8, 1, "", "wait"]], "subprocess.STARTUPINFO": [[364, 7, 1, "", "dwFlags"], [364, 7, 1, "", "hStdError"], [364, 7, 1, "", "hStdInput"], [364, 7, 1, "", "hStdOutput"], [364, 7, 1, "", "lpAttributeList"], [364, 7, 1, "", "wShowWindow"]], "subprocess.TimeoutExpired": [[364, 7, 1, "", "cmd"], [364, 7, 1, "", "output"], [364, 7, 1, "", "stderr"], [364, 7, 1, "", "stdout"], [364, 7, 1, "", "timeout"]], "sunau": [[365, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G721"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G722"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G723_3"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_ADPCM_G723_5"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_ALAW_8"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_DOUBLE"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_FLOAT"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_16"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_24"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_32"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_LINEAR_8"], [365, 9, 1, "", "AUDIO_FILE_ENCODING_MULAW_8"], [365, 9, 1, "", "AUDIO_FILE_MAGIC"], [365, 6, 1, "", "Error"], [365, 12, 1, "", "open"]], "sunau.AU_read": [[365, 8, 1, "", "close"], [365, 8, 1, "", "getcompname"], [365, 8, 1, "", "getcomptype"], [365, 8, 1, "", "getframerate"], [365, 8, 1, "", "getmark"], [365, 8, 1, "", "getmarkers"], [365, 8, 1, "", "getnchannels"], [365, 8, 1, "", "getnframes"], [365, 8, 1, "", "getparams"], [365, 8, 1, "", "getsampwidth"], [365, 8, 1, "", "readframes"], [365, 8, 1, "", "rewind"], [365, 8, 1, "", "setpos"], [365, 8, 1, "", "tell"]], "sunau.AU_write": [[365, 8, 1, "", "close"], [365, 8, 1, "", "setcomptype"], [365, 8, 1, "", "setframerate"], [365, 8, 1, "", "setnchannels"], [365, 8, 1, "", "setnframes"], [365, 8, 1, "", "setparams"], [365, 8, 1, "", "setsampwidth"], [365, 8, 1, "", "tell"], [365, 8, 1, "", "writeframes"], [365, 8, 1, "", "writeframesraw"]], "symtable": [[367, 11, 1, "", "Class"], [367, 11, 1, "", "Function"], [367, 11, 1, "", "Symbol"], [367, 11, 1, "", "SymbolTable"], [367, 12, 1, "", "symtable"]], "symtable.Class": [[367, 8, 1, "", "get_methods"]], "symtable.Function": [[367, 8, 1, "", "get_frees"], [367, 8, 1, "", "get_globals"], [367, 8, 1, "", "get_locals"], [367, 8, 1, "", "get_nonlocals"], [367, 8, 1, "", "get_parameters"]], "symtable.Symbol": [[367, 8, 1, "", "get_name"], [367, 8, 1, "", "get_namespace"], [367, 8, 1, "", "get_namespaces"], [367, 8, 1, "", "is_annotated"], [367, 8, 1, "", "is_assigned"], [367, 8, 1, "", "is_declared_global"], [367, 8, 1, "", "is_free"], [367, 8, 1, "", "is_global"], [367, 8, 1, "", "is_imported"], [367, 8, 1, "", "is_local"], [367, 8, 1, "", "is_namespace"], [367, 8, 1, "", "is_nonlocal"], [367, 8, 1, "", "is_parameter"], [367, 8, 1, "", "is_referenced"]], "symtable.SymbolTable": [[367, 8, 1, "", "get_children"], [367, 8, 1, "", "get_id"], [367, 8, 1, "", "get_identifiers"], [367, 8, 1, "", "get_lineno"], [367, 8, 1, "", "get_name"], [367, 8, 1, "", "get_symbols"], [367, 8, 1, "", "get_type"], [367, 8, 1, "", "has_children"], [367, 8, 1, "", "is_nested"], [367, 8, 1, "", "is_optimized"], [367, 8, 1, "", "lookup"]], "sys": [[368, 9, 1, "", "__breakpointhook__"], [368, 9, 1, "", "__displayhook__"], [368, 9, 1, "", "__excepthook__"], [368, 9, 1, "", "__interactivehook__"], [368, 9, 1, "", "__stderr__"], [368, 9, 1, "", "__stdin__"], [368, 9, 1, "", "__stdout__"], [368, 9, 1, "", "__unraisablehook__"], [368, 12, 1, "", "_clear_type_cache"], [368, 12, 1, "", "_current_exceptions"], [368, 12, 1, "", "_current_frames"], [368, 12, 1, "", "_debugmallocstats"], [368, 9, 1, "", "_emscripten_info"], [368, 12, 1, "", "_enablelegacywindowsfsencoding"], [368, 12, 1, "", "_getframe"], [368, 9, 1, "", "_xoptions"], [368, 9, 1, "", "abiflags"], [368, 12, 1, "", "addaudithook"], [368, 9, 1, "", "api_version"], [368, 9, 1, "", "argv"], [368, 12, 1, "", "audit"], [368, 9, 1, "", "base_exec_prefix"], [368, 9, 1, "", "base_prefix"], [368, 12, 1, "", "breakpointhook"], [368, 9, 1, "", "builtin_module_names"], [368, 9, 1, "", "byteorder"], [368, 12, 1, "", "call_tracing"], [368, 9, 1, "", "copyright"], [368, 12, 1, "", "displayhook"], [368, 9, 1, "", "dllhandle"], [368, 9, 1, "", "dont_write_bytecode"], [368, 12, 1, "", "exc_info"], [368, 12, 1, "", "excepthook"], [368, 12, 1, "", "exception"], [368, 9, 1, "", "exec_prefix"], [368, 9, 1, "", "executable"], [368, 12, 1, "", "exit"], [368, 9, 1, "", "flags"], [368, 9, 1, "", "float_info"], [368, 9, 1, "", "float_repr_style"], [368, 12, 1, "", "get_asyncgen_hooks"], [368, 12, 1, "", "get_coroutine_origin_tracking_depth"], [368, 12, 1, "", "get_int_max_str_digits"], [368, 12, 1, "", "getallocatedblocks"], [368, 12, 1, "", "getandroidapilevel"], [368, 12, 1, "", "getdefaultencoding"], [368, 12, 1, "", "getdlopenflags"], [368, 12, 1, "", "getfilesystemencodeerrors"], [368, 12, 1, "", "getfilesystemencoding"], [368, 12, 1, "", "getprofile"], [368, 12, 1, "", "getrecursionlimit"], [368, 12, 1, "", "getrefcount"], [368, 12, 1, "", "getsizeof"], [368, 12, 1, "", "getswitchinterval"], [368, 12, 1, "", "gettrace"], [368, 12, 1, "", "getwindowsversion"], [368, 9, 1, "", "hash_info"], [368, 9, 1, "", "hexversion"], [368, 9, 1, "", "implementation"], [368, 9, 1, "", "int_info"], [368, 12, 1, "", "intern"], [368, 12, 1, "", "is_finalizing"], [368, 9, 1, "", "last_traceback"], [368, 9, 1, "", "last_type"], [368, 9, 1, "", "last_value"], [368, 9, 1, "", "maxsize"], [368, 9, 1, "", "maxunicode"], [368, 9, 1, "", "meta_path"], [368, 9, 1, "", "modules"], [368, 9, 1, "", "orig_argv"], [368, 9, 1, "", "path"], [368, 9, 1, "", "path_hooks"], [368, 9, 1, "", "path_importer_cache"], [368, 9, 1, "", "platform"], [368, 9, 1, "", "platlibdir"], [368, 9, 1, "", "prefix"], [368, 9, 1, "", "ps1"], [368, 9, 1, "", "ps2"], [368, 9, 1, "", "pycache_prefix"], [368, 12, 1, "", "set_asyncgen_hooks"], [368, 12, 1, "", "set_coroutine_origin_tracking_depth"], [368, 12, 1, "", "set_int_max_str_digits"], [368, 12, 1, "", "setdlopenflags"], [368, 12, 1, "", "setprofile"], [368, 12, 1, "", "setrecursionlimit"], [368, 12, 1, "", "setswitchinterval"], [368, 12, 1, "", "settrace"], [368, 9, 1, "", "stderr"], [368, 9, 1, "", "stdin"], [368, 9, 1, "", "stdlib_module_names"], [368, 9, 1, "", "stdout"], [368, 9, 1, "", "thread_info"], [368, 9, 1, "", "tracebacklimit"], [368, 12, 1, "", "unraisablehook"], [368, 9, 1, "", "version"], [368, 9, 1, "", "version_info"], [368, 9, 1, "", "warnoptions"], [368, 9, 1, "", "winver"]], "sys._emscripten_info": [[368, 7, 1, "", "emscripten_version"], [368, 7, 1, "", "pthreads"], [368, 7, 1, "", "runtime"], [368, 7, 1, "", "shared_memory"]], "sys.flags": [[368, 7, 1, "", "bytes_warning"], [368, 7, 1, "", "debug"], [368, 7, 1, "", "dev_mode"], [368, 7, 1, "", "dont_write_bytecode"], [368, 7, 1, "", "hash_randomization"], [368, 7, 1, "", "ignore_environment"], [368, 7, 1, "", "inspect"], [368, 7, 1, "", "int_max_str_digits"], [368, 7, 1, "", "interactive"], [368, 7, 1, "", "isolated"], [368, 7, 1, "", "no_site"], [368, 7, 1, "", "no_user_site"], [368, 7, 1, "", "optimize"], [368, 7, 1, "", "quiet"], [368, 7, 1, "", "safe_path"], [368, 7, 1, "", "utf8_mode"], [368, 7, 1, "", "verbose"], [368, 7, 1, "", "warn_default_encoding"]], "sys.float_info": [[368, 7, 1, "", "dig"], [368, 7, 1, "", "epsilon"], [368, 7, 1, "", "mant_dig"], [368, 7, 1, "", "max"], [368, 7, 1, "", "max_10_exp"], [368, 7, 1, "", "max_exp"], [368, 7, 1, "", "min"], [368, 7, 1, "", "min_10_exp"], [368, 7, 1, "", "min_exp"], [368, 7, 1, "", "radix"], [368, 7, 1, "", "rounds"]], "sys.hash_info": [[368, 7, 1, "", "algorithm"], [368, 7, 1, "", "hash_bits"], [368, 7, 1, "", "imag"], [368, 7, 1, "", "inf"], [368, 7, 1, "", "modulus"], [368, 7, 1, "", "nan"], [368, 7, 1, "", "seed_bits"], [368, 7, 1, "", "width"]], "sys.int_info": [[368, 7, 1, "", "bits_per_digit"], [368, 7, 1, "", "default_max_str_digits"], [368, 7, 1, "", "sizeof_digit"], [368, 7, 1, "", "str_digits_check_threshold"]], "sys.thread_info": [[368, 7, 1, "", "lock"], [368, 7, 1, "", "name"], [368, 7, 1, "", "version"]], "sysconfig": [[370, 12, 1, "", "_get_preferred_schemes"], [370, 12, 1, "", "get_config_h_filename"], [370, 12, 1, "", "get_config_var"], [370, 12, 1, "", "get_config_vars"], [370, 12, 1, "", "get_default_scheme"], [370, 12, 1, "", "get_makefile_filename"], [370, 12, 1, "", "get_path"], [370, 12, 1, "", "get_path_names"], [370, 12, 1, "", "get_paths"], [370, 12, 1, "", "get_platform"], [370, 12, 1, "", "get_preferred_scheme"], [370, 12, 1, "", "get_python_version"], [370, 12, 1, "", "get_scheme_names"], [370, 12, 1, "", "is_python_build"], [370, 12, 1, "", "parse_config_h"]], "syslog": [[371, 12, 1, "", "closelog"], [371, 12, 1, "", "openlog"], [371, 12, 1, "", "setlogmask"], [371, 12, 1, "", "syslog"]], "tabnanny": [[372, 6, 1, "", "NannyNag"], [372, 12, 1, "", "check"], [372, 9, 1, "", "filename_only"], [372, 12, 1, "", "process_tokens"], [372, 9, 1, "", "verbose"]], "tarfile": [[373, 9, 1, "", "AREGTYPE"], [373, 6, 1, "", "AbsoluteLinkError"], [373, 6, 1, "", "AbsolutePathError"], [373, 9, 1, "", "BLKTYPE"], [373, 9, 1, "", "CHRTYPE"], [373, 9, 1, "", "CONTTYPE"], [373, 6, 1, "", "CompressionError"], [373, 9, 1, "", "DEFAULT_FORMAT"], [373, 9, 1, "", "DIRTYPE"], [373, 9, 1, "", "ENCODING"], [373, 6, 1, "", "ExtractError"], [373, 9, 1, "", "FIFOTYPE"], [373, 6, 1, "", "FilterError"], [373, 9, 1, "", "GNUTYPE_LONGLINK"], [373, 9, 1, "", "GNUTYPE_LONGNAME"], [373, 9, 1, "", "GNUTYPE_SPARSE"], [373, 9, 1, "", "GNU_FORMAT"], [373, 6, 1, "", "HeaderError"], [373, 9, 1, "", "LNKTYPE"], [373, 6, 1, "", "LinkOutsideDestinationError"], [373, 6, 1, "", "OutsideDestinationError"], [373, 9, 1, "", "PAX_FORMAT"], [373, 9, 1, "", "REGTYPE"], [373, 6, 1, "", "ReadError"], [373, 9, 1, "", "SYMTYPE"], [373, 6, 1, "", "SpecialFileError"], [373, 6, 1, "", "StreamError"], [373, 6, 1, "", "TarError"], [373, 11, 1, "", "TarFile"], [373, 11, 1, "", "TarInfo"], [373, 9, 1, "", "USTAR_FORMAT"], [373, 12, 1, "", "data_filter"], [373, 12, 1, "", "fully_trusted_filter"], [373, 12, 1, "", "is_tarfile"], [373, 12, 1, "", "open"], [373, 12, 1, "", "tar_filter"], [373, 14, 1, "cmdoption-tarfile-create", "--create"], [373, 14, 1, "cmdoption-tarfile-extract", "--extract"], [373, 14, 1, "cmdoption-tarfile-filter", "--filter"], [373, 14, 1, "cmdoption-tarfile-list", "--list"], [373, 14, 1, "cmdoption-tarfile-test", "--test"], [373, 14, 1, "cmdoption-tarfile-v", "--verbose"], [373, 14, 1, "cmdoption-tarfile-c", "-c"], [373, 14, 1, "cmdoption-tarfile-e", "-e"], [373, 14, 1, "cmdoption-tarfile-l", "-l"], [373, 14, 1, "cmdoption-tarfile-t", "-t"], [373, 14, 1, "cmdoption-tarfile-v", "-v"]], "tarfile.FilterError": [[373, 7, 1, "", "tarinfo"]], "tarfile.TarFile": [[373, 8, 1, "", "add"], [373, 8, 1, "", "addfile"], [373, 8, 1, "", "close"], [373, 7, 1, "", "errorlevel"], [373, 8, 1, "", "extract"], [373, 8, 1, "", "extractall"], [373, 8, 1, "", "extractfile"], [373, 7, 1, "", "extraction_filter"], [373, 8, 1, "", "getmember"], [373, 8, 1, "", "getmembers"], [373, 8, 1, "", "getnames"], [373, 8, 1, "", "gettarinfo"], [373, 8, 1, "", "list"], [373, 8, 1, "", "next"], [373, 8, 1, "", "open"], [373, 7, 1, "", "pax_headers"]], "tarfile.TarInfo": [[373, 7, 1, "", "chksum"], [373, 7, 1, "", "devmajor"], [373, 7, 1, "", "devminor"], [373, 8, 1, "", "frombuf"], [373, 8, 1, "", "fromtarfile"], [373, 7, 1, "", "gid"], [373, 7, 1, "", "gname"], [373, 8, 1, "", "isblk"], [373, 8, 1, "", "ischr"], [373, 8, 1, "", "isdev"], [373, 8, 1, "", "isdir"], [373, 8, 1, "", "isfifo"], [373, 8, 1, "", "isfile"], [373, 8, 1, "", "islnk"], [373, 8, 1, "", "isreg"], [373, 8, 1, "", "issym"], [373, 7, 1, "", "linkname"], [373, 7, 1, "", "mode"], [373, 7, 1, "", "mtime"], [373, 7, 1, "", "name"], [373, 7, 1, "", "offset"], [373, 7, 1, "", "offset_data"], [373, 7, 1, "", "pax_headers"], [373, 8, 1, "", "replace"], [373, 7, 1, "", "size"], [373, 7, 1, "", "sparse"], [373, 8, 1, "", "tobuf"], [373, 7, 1, "", "type"], [373, 7, 1, "", "uid"], [373, 7, 1, "", "uname"]], "telnetlib": [[374, 11, 1, "", "Telnet"]], "telnetlib.Telnet": [[374, 8, 1, "", "close"], [374, 8, 1, "", "expect"], [374, 8, 1, "", "fileno"], [374, 8, 1, "", "get_socket"], [374, 8, 1, "", "interact"], [374, 8, 1, "", "msg"], [374, 8, 1, "", "mt_interact"], [374, 8, 1, "", "open"], [374, 8, 1, "", "read_all"], [374, 8, 1, "", "read_eager"], [374, 8, 1, "", "read_lazy"], [374, 8, 1, "", "read_sb_data"], [374, 8, 1, "", "read_some"], [374, 8, 1, "", "read_until"], [374, 8, 1, "", "read_very_eager"], [374, 8, 1, "", "read_very_lazy"], [374, 8, 1, "", "set_debuglevel"], [374, 8, 1, "", "set_option_negotiation_callback"], [374, 8, 1, "", "write"]], "tempfile": [[375, 12, 1, "", "NamedTemporaryFile"], [375, 11, 1, "", "SpooledTemporaryFile"], [375, 11, 1, "", "TemporaryDirectory"], [375, 12, 1, "", "TemporaryFile"], [375, 12, 1, "", "gettempdir"], [375, 12, 1, "", "gettempdirb"], [375, 12, 1, "", "gettempprefix"], [375, 12, 1, "", "gettempprefixb"], [375, 12, 1, "", "mkdtemp"], [375, 12, 1, "", "mkstemp"], [375, 12, 1, "", "mktemp"], [375, 9, 1, "", "tempdir"]], "tempfile.SpooledTemporaryFile": [[375, 8, 1, "", "rollover"]], "tempfile.TemporaryDirectory": [[375, 8, 1, "", "cleanup"], [375, 7, 1, "", "name"]], "termios": [[376, 9, 1, "", "TCSADRAIN"], [376, 9, 1, "", "TCSAFLUSH"], [376, 9, 1, "", "TCSANOW"], [376, 12, 1, "", "tcdrain"], [376, 12, 1, "", "tcflow"], [376, 12, 1, "", "tcflush"], [376, 12, 1, "", "tcgetattr"], [376, 12, 1, "", "tcgetwinsize"], [376, 12, 1, "", "tcsendbreak"], [376, 12, 1, "", "tcsetattr"], [376, 12, 1, "", "tcsetwinsize"]], "test": [[377, 10, 0, "-", "regrtest"], [377, 10, 0, "-", "support"]], "test.support": [[377, 9, 1, "", "ALWAYS_EQ"], [377, 9, 1, "", "HAVE_DOCSTRINGS"], [377, 9, 1, "", "INTERNET_TIMEOUT"], [377, 9, 1, "", "LARGEST"], [377, 9, 1, "", "LONG_TIMEOUT"], [377, 9, 1, "", "LOOPBACK_TIMEOUT"], [377, 9, 1, "", "MAX_Py_ssize_t"], [377, 9, 1, "", "MISSING_C_DOCSTRINGS"], [377, 11, 1, "", "Matcher"], [377, 9, 1, "", "NEVER_EQ"], [377, 9, 1, "", "PGO"], [377, 9, 1, "", "PIPE_MAX_SIZE"], [377, 6, 1, "", "ResourceDenied"], [377, 9, 1, "", "SHORT_TIMEOUT"], [377, 9, 1, "", "SMALLEST"], [377, 9, 1, "", "SOCK_MAX_SIZE"], [377, 11, 1, "", "SaveSignals"], [377, 11, 1, "", "SuppressCrashReport"], [377, 9, 1, "", "TEST_DATA_DIR"], [377, 9, 1, "", "TEST_HOME_DIR"], [377, 9, 1, "", "TEST_HTTP_URL"], [377, 9, 1, "", "TEST_SUPPORT_DIR"], [377, 6, 1, "", "TestFailed"], [377, 12, 1, "", "adjust_int_max_str_digits"], [377, 12, 1, "", "anticipate_failure"], [377, 12, 1, "", "args_from_interpreter_flags"], [377, 12, 1, "", "bigaddrspacetest"], [377, 12, 1, "", "bigmemtest"], [377, 12, 1, "", "busy_retry"], [377, 10, 0, "-", "bytecode_helper"], [377, 12, 1, "", "calcobjsize"], [377, 12, 1, "", "calcvobjsize"], [377, 12, 1, "", "captured_stderr"], [377, 12, 1, "", "captured_stdin"], [377, 12, 1, "", "captured_stdout"], [377, 12, 1, "", "catch_unraisable_exception"], [377, 12, 1, "", "check__all__"], [377, 12, 1, "", "check_disallow_instantiation"], [377, 12, 1, "", "check_free_after_iterating"], [377, 12, 1, "", "check_impl_detail"], [377, 12, 1, "", "check_syntax_error"], [377, 12, 1, "", "checksizeof"], [377, 12, 1, "", "cpython_only"], [377, 12, 1, "", "detect_api_mismatch"], [377, 12, 1, "", "disable_faulthandler"], [377, 12, 1, "", "disable_gc"], [377, 12, 1, "", "findfile"], [377, 12, 1, "", "flush_std_streams"], [377, 12, 1, "", "gc_collect"], [377, 12, 1, "", "get_attribute"], [377, 12, 1, "", "get_original_stdout"], [377, 12, 1, "", "impl_detail"], [377, 10, 0, "-", "import_helper"], [377, 9, 1, "", "is_android"], [377, 9, 1, "", "is_jython"], [377, 12, 1, "", "is_resource_enabled"], [377, 12, 1, "", "load_package_tests"], [377, 9, 1, "", "max_memuse"], [377, 12, 1, "", "missing_compiler_executable"], [377, 12, 1, "", "no_tracing"], [377, 12, 1, "", "open_urlresource"], [377, 12, 1, "", "optim_args_from_interpreter_flags"], [377, 10, 0, "-", "os_helper"], [377, 12, 1, "", "patch"], [377, 12, 1, "", "print_warning"], [377, 12, 1, "", "python_is_optimized"], [377, 9, 1, "", "real_max_memuse"], [377, 12, 1, "", "reap_children"], [377, 12, 1, "", "record_original_stdout"], [377, 12, 1, "", "refcount_test"], [377, 12, 1, "", "requires"], [377, 12, 1, "", "requires_IEEE_754"], [377, 12, 1, "", "requires_bz2"], [377, 12, 1, "", "requires_docstrings"], [377, 12, 1, "", "requires_freebsd_version"], [377, 12, 1, "", "requires_gzip"], [377, 12, 1, "", "requires_linux_version"], [377, 12, 1, "", "requires_lzma"], [377, 12, 1, "", "requires_mac_version"], [377, 12, 1, "", "requires_resource"], [377, 12, 1, "", "requires_zlib"], [377, 12, 1, "", "run_in_subinterp"], [377, 12, 1, "", "run_with_locale"], [377, 12, 1, "", "run_with_tz"], [377, 10, 0, "-", "script_helper"], [377, 12, 1, "", "set_memlimit"], [377, 12, 1, "", "setswitchinterval"], [377, 12, 1, "", "skip_if_broken_multiprocessing_synchronize"], [377, 12, 1, "", "sleeping_retry"], [377, 10, 0, "-", "socket_helper"], [377, 12, 1, "", "sortdict"], [377, 12, 1, "", "swap_attr"], [377, 12, 1, "", "swap_item"], [377, 12, 1, "", "system_must_validate_cert"], [377, 10, 0, "-", "threading_helper"], [377, 9, 1, "", "unix_shell"], [377, 9, 1, "", "verbose"], [377, 12, 1, "", "wait_process"], [377, 10, 0, "-", "warnings_helper"], [377, 12, 1, "", "with_pymalloc"]], "test.support.Matcher": [[377, 8, 1, "", "match_value"], [377, 8, 1, "", "matches"]], "test.support.SaveSignals": [[377, 8, 1, "", "restore"], [377, 8, 1, "", "save"]], "test.support.bytecode_helper": [[377, 11, 1, "", "BytecodeTestCase"]], "test.support.bytecode_helper.BytecodeTestCase": [[377, 8, 1, "", "assertInBytecode"], [377, 8, 1, "", "assertNotInBytecode"], [377, 8, 1, "", "get_disassembly_as_string"]], "test.support.import_helper": [[377, 11, 1, "", "CleanImport"], [377, 11, 1, "", "DirsOnSysPath"], [377, 12, 1, "", "forget"], [377, 12, 1, "", "import_fresh_module"], [377, 12, 1, "", "import_module"], [377, 12, 1, "", "make_legacy_pyc"], [377, 12, 1, "", "modules_cleanup"], [377, 12, 1, "", "modules_setup"], [377, 12, 1, "", "unload"]], "test.support.os_helper": [[377, 11, 1, "", "EnvironmentVarGuard"], [377, 9, 1, "", "FS_NONASCII"], [377, 11, 1, "", "FakePath"], [377, 9, 1, "", "SAVEDCWD"], [377, 9, 1, "", "TESTFN"], [377, 9, 1, "", "TESTFN_NONASCII"], [377, 9, 1, "", "TESTFN_UNDECODABLE"], [377, 9, 1, "", "TESTFN_UNENCODABLE"], [377, 9, 1, "", "TESTFN_UNICODE"], [377, 12, 1, "", "can_symlink"], [377, 12, 1, "", "can_xattr"], [377, 12, 1, "", "change_cwd"], [377, 12, 1, "", "create_empty_file"], [377, 12, 1, "", "fd_count"], [377, 12, 1, "", "fs_is_case_insensitive"], [377, 12, 1, "", "make_bad_fd"], [377, 12, 1, "", "rmdir"], [377, 12, 1, "", "rmtree"], [377, 12, 1, "", "skip_unless_symlink"], [377, 12, 1, "", "skip_unless_xattr"], [377, 12, 1, "", "temp_cwd"], [377, 12, 1, "", "temp_dir"], [377, 12, 1, "", "temp_umask"], [377, 12, 1, "", "unlink"]], "test.support.os_helper.EnvironmentVarGuard": [[377, 8, 1, "", "set"], [377, 8, 1, "", "unset"]], "test.support.script_helper": [[377, 12, 1, "", "assert_python_failure"], [377, 12, 1, "", "assert_python_ok"], [377, 12, 1, "", "interpreter_requires_environment"], [377, 12, 1, "", "kill_python"], [377, 12, 1, "", "make_pkg"], [377, 12, 1, "", "make_script"], [377, 12, 1, "", "make_zip_pkg"], [377, 12, 1, "", "make_zip_script"], [377, 12, 1, "", "run_python_until_end"], [377, 12, 1, "", "spawn_python"]], "test.support.socket_helper": [[377, 9, 1, "", "IPV6_ENABLED"], [377, 12, 1, "", "bind_port"], [377, 12, 1, "", "bind_unix_socket"], [377, 12, 1, "", "find_unused_port"], [377, 12, 1, "", "skip_unless_bind_unix_socket"], [377, 12, 1, "", "transient_internet"]], "test.support.threading_helper": [[377, 12, 1, "", "catch_threading_exception"], [377, 12, 1, "", "join_thread"], [377, 12, 1, "", "reap_threads"], [377, 12, 1, "", "start_threads"], [377, 12, 1, "", "threading_cleanup"], [377, 12, 1, "", "threading_setup"], [377, 12, 1, "", "wait_threads_exit"]], "test.support.warnings_helper": [[377, 11, 1, "", "WarningsRecorder"], [377, 12, 1, "", "check_no_resource_warning"], [377, 12, 1, "", "check_syntax_warning"], [377, 12, 1, "", "check_warnings"], [377, 12, 1, "", "ignore_warnings"]], "textwrap": [[379, 11, 1, "", "TextWrapper"], [379, 12, 1, "", "dedent"], [379, 12, 1, "", "fill"], [379, 12, 1, "", "indent"], [379, 12, 1, "", "shorten"], [379, 12, 1, "", "wrap"]], "textwrap.TextWrapper": [[379, 7, 1, "", "break_long_words"], [379, 7, 1, "", "break_on_hyphens"], [379, 7, 1, "", "drop_whitespace"], [379, 7, 1, "", "expand_tabs"], [379, 8, 1, "", "fill"], [379, 7, 1, "", "fix_sentence_endings"], [379, 7, 1, "", "initial_indent"], [379, 7, 1, "", "max_lines"], [379, 7, 1, "", "placeholder"], [379, 7, 1, "", "replace_whitespace"], [379, 7, 1, "", "subsequent_indent"], [379, 7, 1, "", "tabsize"], [379, 7, 1, "", "width"], [379, 8, 1, "", "wrap"]], "threading": [[380, 11, 1, "", "Barrier"], [380, 11, 1, "", "BoundedSemaphore"], [380, 6, 1, "", "BrokenBarrierError"], [380, 11, 1, "", "Condition"], [380, 11, 1, "", "Event"], [380, 11, 1, "", "Lock"], [380, 11, 1, "", "RLock"], [380, 11, 1, "", "Semaphore"], [380, 9, 1, "", "TIMEOUT_MAX"], [380, 11, 1, "", "Thread"], [380, 11, 1, "", "Timer"], [380, 9, 1, "", "__excepthook__"], [380, 12, 1, "", "active_count"], [380, 12, 1, "", "current_thread"], [380, 12, 1, "", "enumerate"], [380, 12, 1, "", "excepthook"], [380, 12, 1, "", "get_ident"], [380, 12, 1, "", "get_native_id"], [380, 12, 1, "", "getprofile"], [380, 12, 1, "", "gettrace"], [380, 11, 1, "", "local"], [380, 12, 1, "", "main_thread"], [380, 12, 1, "", "setprofile"], [380, 12, 1, "", "settrace"], [380, 12, 1, "", "stack_size"]], "threading.Barrier": [[380, 8, 1, "", "abort"], [380, 7, 1, "", "broken"], [380, 7, 1, "", "n_waiting"], [380, 7, 1, "", "parties"], [380, 8, 1, "", "reset"], [380, 8, 1, "", "wait"]], "threading.Condition": [[380, 8, 1, "", "acquire"], [380, 8, 1, "", "notify"], [380, 8, 1, "", "notify_all"], [380, 8, 1, "", "release"], [380, 8, 1, "", "wait"], [380, 8, 1, "", "wait_for"]], "threading.Event": [[380, 8, 1, "", "clear"], [380, 8, 1, "", "is_set"], [380, 8, 1, "", "set"], [380, 8, 1, "", "wait"]], "threading.Lock": [[380, 8, 1, "", "acquire"], [380, 8, 1, "", "locked"], [380, 8, 1, "", "release"]], "threading.RLock": [[380, 8, 1, "", "acquire"], [380, 8, 1, "", "release"]], "threading.Semaphore": [[380, 8, 1, "", "acquire"], [380, 8, 1, "", "release"]], "threading.Thread": [[380, 7, 1, "", "daemon"], [380, 8, 1, "", "getName"], [380, 7, 1, "", "ident"], [380, 8, 1, "", "isDaemon"], [380, 8, 1, "", "is_alive"], [380, 8, 1, "", "join"], [380, 7, 1, "", "name"], [380, 7, 1, "", "native_id"], [380, 8, 1, "", "run"], [380, 8, 1, "", "setDaemon"], [380, 8, 1, "", "setName"], [380, 8, 1, "", "start"]], "threading.Timer": [[380, 8, 1, "", "cancel"]], "time": [[381, 9, 1, "", "CLOCK_BOOTTIME"], [381, 9, 1, "", "CLOCK_HIGHRES"], [381, 9, 1, "", "CLOCK_MONOTONIC"], [381, 9, 1, "", "CLOCK_MONOTONIC_RAW"], [381, 9, 1, "", "CLOCK_PROCESS_CPUTIME_ID"], [381, 9, 1, "", "CLOCK_PROF"], [381, 9, 1, "", "CLOCK_REALTIME"], [381, 9, 1, "", "CLOCK_TAI"], [381, 9, 1, "", "CLOCK_THREAD_CPUTIME_ID"], [381, 9, 1, "", "CLOCK_UPTIME"], [381, 9, 1, "", "CLOCK_UPTIME_RAW"], [381, 9, 1, "", "altzone"], [381, 12, 1, "", "asctime"], [381, 12, 1, "", "clock_getres"], [381, 12, 1, "", "clock_gettime"], [381, 12, 1, "", "clock_gettime_ns"], [381, 12, 1, "", "clock_settime"], [381, 12, 1, "", "clock_settime_ns"], [381, 12, 1, "", "ctime"], [381, 9, 1, "", "daylight"], [381, 12, 1, "", "get_clock_info"], [381, 12, 1, "", "gmtime"], [381, 12, 1, "", "localtime"], [381, 12, 1, "", "mktime"], [381, 12, 1, "", "monotonic"], [381, 12, 1, "", "monotonic_ns"], [381, 12, 1, "", "perf_counter"], [381, 12, 1, "", "perf_counter_ns"], [381, 12, 1, "", "process_time"], [381, 12, 1, "", "process_time_ns"], [381, 12, 1, "", "pthread_getcpuclockid"], [381, 12, 1, "", "sleep"], [381, 12, 1, "", "strftime"], [381, 12, 1, "", "strptime"], [381, 11, 1, "", "struct_time"], [381, 12, 1, "", "thread_time"], [381, 12, 1, "", "thread_time_ns"], [381, 12, 1, "", "time"], [381, 12, 1, "", "time_ns"], [381, 9, 1, "", "timezone"], [381, 9, 1, "", "tzname"], [381, 12, 1, "", "tzset"]], "time.struct_time": [[381, 7, 1, "", "tm_day"], [381, 7, 1, "", "tm_gmtoff"], [381, 7, 1, "", "tm_hour"], [381, 7, 1, "", "tm_isdst"], [381, 7, 1, "", "tm_min"], [381, 7, 1, "", "tm_mon"], [381, 7, 1, "", "tm_sec"], [381, 7, 1, "", "tm_wday"], [381, 7, 1, "", "tm_yday"], [381, 7, 1, "", "tm_year"], [381, 7, 1, "", "tm_zone"]], "timeit": [[382, 11, 1, "", "Timer"], [382, 12, 1, "", "default_timer"], [382, 12, 1, "", "repeat"], [382, 12, 1, "", "timeit"], [382, 14, 1, "cmdoption-timeit-h", "--help"], [382, 14, 1, "cmdoption-timeit-n", "--number"], [382, 14, 1, "cmdoption-timeit-p", "--process"], [382, 14, 1, "cmdoption-timeit-r", "--repeat"], [382, 14, 1, "cmdoption-timeit-s", "--setup"], [382, 14, 1, "cmdoption-timeit-u", "--unit"], [382, 14, 1, "cmdoption-timeit-v", "--verbose"], [382, 14, 1, "cmdoption-timeit-h", "-h"], [382, 14, 1, "cmdoption-timeit-n", "-n"], [382, 14, 1, "cmdoption-timeit-p", "-p"], [382, 14, 1, "cmdoption-timeit-r", "-r"], [382, 14, 1, "cmdoption-timeit-s", "-s"], [382, 14, 1, "cmdoption-timeit-u", "-u"], [382, 14, 1, "cmdoption-timeit-v", "-v"]], "timeit.Timer": [[382, 8, 1, "", "autorange"], [382, 8, 1, "", "print_exc"], [382, 8, 1, "", "repeat"], [382, 8, 1, "", "timeit"]], "tkinter": [[384, 12, 1, "", "Tcl"], [384, 11, 1, "", "Tk"], [385, 10, 0, "-", "colorchooser"], [202, 10, 0, "-", "commondialog"], [386, 10, 0, "-", "dnd"], [202, 10, 0, "-", "filedialog"], [387, 10, 0, "-", "font"], [388, 10, 0, "-", "messagebox"], [389, 10, 0, "-", "scrolledtext"], [202, 10, 0, "-", "simpledialog"], [390, 10, 0, "-", "tix"], [391, 10, 0, "-", "ttk"]], "tkinter.Tk": [[384, 7, 1, "", "children"], [384, 7, 1, "", "master"], [384, 7, 1, "", "tk"]], "tkinter.colorchooser": [[385, 11, 1, "", "Chooser"], [385, 12, 1, "", "askcolor"]], "tkinter.commondialog": [[202, 11, 1, "", "Dialog"]], "tkinter.commondialog.Dialog": [[202, 8, 1, "", "show"]], "tkinter.dnd": [[386, 11, 1, "", "DndHandler"], [386, 12, 1, "", "dnd_start"]], "tkinter.dnd.DndHandler": [[386, 8, 1, "", "cancel"], [386, 8, 1, "", "finish"], [386, 8, 1, "", "on_motion"], [386, 8, 1, "", "on_release"]], "tkinter.filedialog": [[202, 11, 1, "", "Directory"], [202, 11, 1, "", "FileDialog"], [202, 11, 1, "", "LoadFileDialog"], [202, 11, 1, "", "Open"], [202, 11, 1, "", "SaveAs"], [202, 11, 1, "", "SaveFileDialog"], [202, 12, 1, "", "askdirectory"], [202, 12, 1, "", "askopenfile"], [202, 12, 1, "", "askopenfilename"], [202, 12, 1, "", "askopenfilenames"], [202, 12, 1, "", "askopenfiles"], [202, 12, 1, "", "asksaveasfile"], [202, 12, 1, "", "asksaveasfilename"]], "tkinter.filedialog.FileDialog": [[202, 8, 1, "", "cancel_command"], [202, 8, 1, "", "dirs_double_event"], [202, 8, 1, "", "dirs_select_event"], [202, 8, 1, "", "files_double_event"], [202, 8, 1, "", "files_select_event"], [202, 8, 1, "", "filter_command"], [202, 8, 1, "", "get_filter"], [202, 8, 1, "", "get_selection"], [202, 8, 1, "", "go"], [202, 8, 1, "", "ok_event"], [202, 8, 1, "", "quit"], [202, 8, 1, "", "set_filter"], [202, 8, 1, "", "set_selection"]], "tkinter.filedialog.LoadFileDialog": [[202, 8, 1, "", "ok_command"]], "tkinter.filedialog.SaveFileDialog": [[202, 8, 1, "", "ok_command"]], "tkinter.font": [[387, 9, 1, "", "BOLD"], [387, 11, 1, "", "Font"], [387, 9, 1, "", "ITALIC"], [387, 9, 1, "", "NORMAL"], [387, 9, 1, "", "ROMAN"], [387, 12, 1, "", "families"], [387, 12, 1, "", "names"], [387, 12, 1, "", "nametofont"]], "tkinter.font.Font": [[387, 8, 1, "", "actual"], [387, 8, 1, "", "cget"], [387, 8, 1, "", "config"], [387, 8, 1, "", "copy"], [387, 8, 1, "", "measure"], [387, 8, 1, "", "metrics"]], "tkinter.messagebox": [[388, 9, 1, "", "ABORT"], [388, 9, 1, "", "ABORTRETRYIGNORE"], [388, 9, 1, "", "CANCEL"], [388, 9, 1, "", "ERROR"], [388, 9, 1, "", "IGNORE"], [388, 9, 1, "", "INFO"], [388, 11, 1, "", "Message"], [388, 9, 1, "", "NO"], [388, 9, 1, "", "OK"], [388, 9, 1, "", "OKCANCEL"], [388, 9, 1, "", "QUESTION"], [388, 9, 1, "", "RETRY"], [388, 9, 1, "", "RETRYCANCEL"], [388, 9, 1, "", "WARNING"], [388, 9, 1, "", "YES"], [388, 9, 1, "", "YESNO"], [388, 9, 1, "", "YESNOCANCEL"], [388, 12, 1, "", "askokcancel"], [388, 12, 1, "", "askquestion"], [388, 12, 1, "", "askretrycancel"], [388, 12, 1, "", "askyesno"], [388, 12, 1, "", "askyesnocancel"], [388, 12, 1, "", "showerror"], [388, 12, 1, "", "showinfo"], [388, 12, 1, "", "showwarning"]], "tkinter.messagebox.Message": [[388, 8, 1, "", "show"]], "tkinter.scrolledtext": [[389, 11, 1, "", "ScrolledText"]], "tkinter.scrolledtext.ScrolledText": [[389, 7, 1, "", "frame"], [389, 7, 1, "", "vbar"]], "tkinter.simpledialog": [[202, 11, 1, "", "Dialog"], [202, 12, 1, "", "askfloat"], [202, 12, 1, "", "askinteger"], [202, 12, 1, "", "askstring"]], "tkinter.simpledialog.Dialog": [[202, 8, 1, "", "body"], [202, 8, 1, "", "buttonbox"]], "tkinter.tix": [[390, 11, 1, "", "Balloon"], [390, 11, 1, "", "ButtonBox"], [390, 11, 1, "", "CheckList"], [390, 11, 1, "", "ComboBox"], [390, 11, 1, "", "Control"], [390, 11, 1, "", "DirList"], [390, 11, 1, "", "DirSelectBox"], [390, 11, 1, "", "DirSelectDialog"], [390, 11, 1, "", "DirTree"], [390, 11, 1, "", "ExFileSelectBox"], [390, 11, 1, "", "FileEntry"], [390, 11, 1, "", "FileSelectBox"], [390, 11, 1, "", "Form"], [390, 11, 1, "", "HList"], [390, 11, 1, "", "InputOnly"], [390, 11, 1, "", "LabelEntry"], [390, 11, 1, "", "LabelFrame"], [390, 11, 1, "", "ListNoteBook"], [390, 11, 1, "", "Meter"], [390, 11, 1, "", "NoteBook"], [390, 11, 1, "", "OptionMenu"], [390, 11, 1, "", "PanedWindow"], [390, 11, 1, "", "PopupMenu"], [390, 11, 1, "", "Select"], [390, 11, 1, "", "StdButtonBox"], [390, 11, 1, "", "TList"], [390, 11, 1, "", "Tk"], [390, 11, 1, "", "Tree"], [390, 11, 1, "", "tixCommand"]], "tkinter.tix.tixCommand": [[390, 8, 1, "", "tix_addbitmapdir"], [390, 8, 1, "", "tix_cget"], [390, 8, 1, "", "tix_configure"], [390, 8, 1, "", "tix_filedialog"], [390, 8, 1, "", "tix_getbitmap"], [390, 8, 1, "", "tix_getimage"], [390, 8, 1, "", "tix_option_get"], [390, 8, 1, "", "tix_resetoptions"]], "tkinter.ttk": [[391, 11, 1, "", "Combobox"], [391, 11, 1, "", "Notebook"], [391, 11, 1, "", "Progressbar"], [391, 11, 1, "", "Spinbox"], [391, 11, 1, "", "Style"], [391, 11, 1, "", "Treeview"], [391, 11, 1, "", "Widget"]], "tkinter.ttk.Combobox": [[391, 8, 1, "", "current"], [391, 8, 1, "", "get"], [391, 8, 1, "", "set"]], "tkinter.ttk.Notebook": [[391, 8, 1, "", "add"], [391, 8, 1, "", "enable_traversal"], [391, 8, 1, "", "forget"], [391, 8, 1, "", "hide"], [391, 8, 1, "", "identify"], [391, 8, 1, "", "index"], [391, 8, 1, "", "insert"], [391, 8, 1, "", "select"], [391, 8, 1, "", "tab"], [391, 8, 1, "", "tabs"]], "tkinter.ttk.Progressbar": [[391, 8, 1, "", "start"], [391, 8, 1, "", "step"], [391, 8, 1, "", "stop"]], "tkinter.ttk.Spinbox": [[391, 8, 1, "", "get"], [391, 8, 1, "", "set"]], "tkinter.ttk.Style": [[391, 8, 1, "", "configure"], [391, 8, 1, "", "element_create"], [391, 8, 1, "", "element_names"], [391, 8, 1, "", "element_options"], [391, 8, 1, "", "layout"], [391, 8, 1, "", "lookup"], [391, 8, 1, "", "map"], [391, 8, 1, "", "theme_create"], [391, 8, 1, "", "theme_names"], [391, 8, 1, "", "theme_settings"], [391, 8, 1, "", "theme_use"]], "tkinter.ttk.Treeview": [[391, 8, 1, "", "bbox"], [391, 8, 1, "", "column"], [391, 8, 1, "", "delete"], [391, 8, 1, "", "detach"], [391, 8, 1, "", "exists"], [391, 8, 1, "", "focus"], [391, 8, 1, "", "get_children"], [391, 8, 1, "", "heading"], [391, 8, 1, "", "identify"], [391, 8, 1, "", "identify_column"], [391, 8, 1, "", "identify_element"], [391, 8, 1, "", "identify_region"], [391, 8, 1, "", "identify_row"], [391, 8, 1, "", "index"], [391, 8, 1, "", "insert"], [391, 8, 1, "", "item"], [391, 8, 1, "", "move"], [391, 8, 1, "", "next"], [391, 8, 1, "", "parent"], [391, 8, 1, "", "prev"], [391, 8, 1, "", "reattach"], [391, 8, 1, "", "see"], [391, 8, 1, "", "selection"], [391, 8, 1, "", "selection_add"], [391, 8, 1, "", "selection_remove"], [391, 8, 1, "", "selection_set"], [391, 8, 1, "", "selection_toggle"], [391, 8, 1, "", "set"], [391, 8, 1, "", "set_children"], [391, 8, 1, "", "tag_bind"], [391, 8, 1, "", "tag_configure"], [391, 8, 1, "", "tag_has"], [391, 8, 1, "", "xview"], [391, 8, 1, "", "yview"]], "tkinter.ttk.Widget": [[391, 8, 1, "", "identify"], [391, 8, 1, "", "instate"], [391, 8, 1, "", "state"]], "token": [[392, 9, 1, "", "AMPER"], [392, 9, 1, "", "AMPEREQUAL"], [392, 9, 1, "", "ASYNC"], [392, 9, 1, "", "AT"], [392, 9, 1, "", "ATEQUAL"], [392, 9, 1, "", "AWAIT"], [392, 9, 1, "", "CIRCUMFLEX"], [392, 9, 1, "", "CIRCUMFLEXEQUAL"], [392, 9, 1, "", "COLON"], [392, 9, 1, "", "COLONEQUAL"], [392, 9, 1, "", "COMMA"], [392, 9, 1, "", "COMMENT"], [392, 9, 1, "", "DEDENT"], [392, 9, 1, "", "DOT"], [392, 9, 1, "", "DOUBLESLASH"], [392, 9, 1, "", "DOUBLESLASHEQUAL"], [392, 9, 1, "", "DOUBLESTAR"], [392, 9, 1, "", "DOUBLESTAREQUAL"], [392, 9, 1, "", "ELLIPSIS"], [392, 9, 1, "", "ENCODING"], [392, 9, 1, "", "ENDMARKER"], [392, 9, 1, "", "EQEQUAL"], [392, 9, 1, "", "EQUAL"], [392, 9, 1, "", "ERRORTOKEN"], [392, 9, 1, "", "GREATER"], [392, 9, 1, "", "GREATEREQUAL"], [392, 9, 1, "", "INDENT"], [392, 12, 1, "", "ISEOF"], [392, 12, 1, "", "ISNONTERMINAL"], [392, 12, 1, "", "ISTERMINAL"], [392, 9, 1, "", "LBRACE"], [392, 9, 1, "", "LEFTSHIFT"], [392, 9, 1, "", "LEFTSHIFTEQUAL"], [392, 9, 1, "", "LESS"], [392, 9, 1, "", "LESSEQUAL"], [392, 9, 1, "", "LPAR"], [392, 9, 1, "", "LSQB"], [392, 9, 1, "", "MINEQUAL"], [392, 9, 1, "", "MINUS"], [392, 9, 1, "", "NAME"], [392, 9, 1, "", "NEWLINE"], [392, 9, 1, "", "NL"], [392, 9, 1, "", "NOTEQUAL"], [392, 9, 1, "", "NT_OFFSET"], [392, 9, 1, "", "NUMBER"], [392, 9, 1, "", "N_TOKENS"], [392, 9, 1, "", "OP"], [392, 9, 1, "", "PERCENT"], [392, 9, 1, "", "PERCENTEQUAL"], [392, 9, 1, "", "PLUS"], [392, 9, 1, "", "PLUSEQUAL"], [392, 9, 1, "", "RARROW"], [392, 9, 1, "", "RBRACE"], [392, 9, 1, "", "RIGHTSHIFT"], [392, 9, 1, "", "RIGHTSHIFTEQUAL"], [392, 9, 1, "", "RPAR"], [392, 9, 1, "", "RSQB"], [392, 9, 1, "", "SEMI"], [392, 9, 1, "", "SLASH"], [392, 9, 1, "", "SLASHEQUAL"], [392, 9, 1, "", "SOFT_KEYWORD"], [392, 9, 1, "", "STAR"], [392, 9, 1, "", "STAREQUAL"], [392, 9, 1, "", "STRING"], [392, 9, 1, "", "TILDE"], [392, 9, 1, "", "TYPE_COMMENT"], [392, 9, 1, "", "TYPE_IGNORE"], [392, 9, 1, "", "VBAR"], [392, 9, 1, "", "VBAREQUAL"], [392, 9, 1, "", "tok_name"]], "tokenize": [[393, 6, 1, "", "TokenError"], [393, 12, 1, "", "detect_encoding"], [393, 12, 1, "", "generate_tokens"], [393, 12, 1, "", "open"], [393, 12, 1, "", "tokenize"], [393, 12, 1, "", "untokenize"], [393, 14, 1, "cmdoption-tokenize-e", "--exact"], [393, 14, 1, "cmdoption-tokenize-h", "--help"], [393, 14, 1, "cmdoption-tokenize-e", "-e"], [393, 14, 1, "cmdoption-tokenize-h", "-h"]], "tomllib": [[394, 6, 1, "", "TOMLDecodeError"], [394, 12, 1, "", "load"], [394, 12, 1, "", "loads"]], "trace": [[395, 11, 1, "", "CoverageResults"], [395, 11, 1, "", "Trace"], [395, 14, 1, "cmdoption-trace-c", "--count"], [395, 14, 1, "cmdoption-trace-C", "--coverdir"], [395, 14, 1, "cmdoption-trace-f", "--file"], [395, 14, 1, "cmdoption-trace-help", "--help"], [395, 14, 1, "cmdoption-trace-ignore-dir", "--ignore-dir"], [395, 14, 1, "cmdoption-trace-ignore-module", "--ignore-module"], [395, 14, 1, "cmdoption-trace-l", "--listfuncs"], [395, 14, 1, "cmdoption-trace-m", "--missing"], [395, 14, 1, "cmdoption-trace-R", "--no-report"], [395, 14, 1, "cmdoption-trace-r", "--report"], [395, 14, 1, "cmdoption-trace-s", "--summary"], [395, 14, 1, "cmdoption-trace-g", "--timing"], [395, 14, 1, "cmdoption-trace-t", "--trace"], [395, 14, 1, "cmdoption-trace-T", "--trackcalls"], [395, 14, 1, "cmdoption-trace-version", "--version"], [395, 14, 1, "cmdoption-trace-C", "-C"], [395, 14, 1, "cmdoption-trace-R", "-R"], [395, 14, 1, "cmdoption-trace-T", "-T"], [395, 14, 1, "cmdoption-trace-c", "-c"], [395, 14, 1, "cmdoption-trace-f", "-f"], [395, 14, 1, "cmdoption-trace-g", "-g"], [395, 14, 1, "cmdoption-trace-l", "-l"], [395, 14, 1, "cmdoption-trace-m", "-m"], [395, 14, 1, "cmdoption-trace-r", "-r"], [395, 14, 1, "cmdoption-trace-s", "-s"], [395, 14, 1, "cmdoption-trace-t", "-t"]], "trace.CoverageResults": [[395, 8, 1, "", "update"], [395, 8, 1, "", "write_results"]], "trace.Trace": [[395, 8, 1, "", "results"], [395, 8, 1, "", "run"], [395, 8, 1, "", "runctx"], [395, 8, 1, "", "runfunc"]], "traceback": [[396, 11, 1, "", "FrameSummary"], [396, 11, 1, "", "StackSummary"], [396, 11, 1, "", "TracebackException"], [396, 12, 1, "", "clear_frames"], [396, 12, 1, "", "extract_stack"], [396, 12, 1, "", "extract_tb"], [396, 12, 1, "", "format_exc"], [396, 12, 1, "", "format_exception"], [396, 12, 1, "", "format_exception_only"], [396, 12, 1, "", "format_list"], [396, 12, 1, "", "format_stack"], [396, 12, 1, "", "format_tb"], [396, 12, 1, "", "print_exc"], [396, 12, 1, "", "print_exception"], [396, 12, 1, "", "print_last"], [396, 12, 1, "", "print_stack"], [396, 12, 1, "", "print_tb"], [443, 7, 1, "", "tb_frame"], [443, 7, 1, "", "tb_lasti"], [443, 7, 1, "", "tb_lineno"], [443, 7, 1, "", "tb_next"], [396, 12, 1, "", "walk_stack"], [396, 12, 1, "", "walk_tb"]], "traceback.FrameSummary": [[396, 7, 1, "", "filename"], [396, 7, 1, "", "line"], [396, 7, 1, "", "lineno"], [396, 7, 1, "", "name"]], "traceback.StackSummary": [[396, 8, 1, "", "extract"], [396, 8, 1, "", "format"], [396, 8, 1, "", "format_frame_summary"], [396, 8, 1, "", "from_list"]], "traceback.TracebackException": [[396, 7, 1, "", "__cause__"], [396, 7, 1, "", "__context__"], [396, 7, 1, "", "__notes__"], [396, 7, 1, "", "__suppress_context__"], [396, 7, 1, "", "end_lineno"], [396, 7, 1, "", "end_offset"], [396, 7, 1, "", "exc_type"], [396, 7, 1, "", "exceptions"], [396, 7, 1, "", "filename"], [396, 8, 1, "", "format"], [396, 8, 1, "", "format_exception_only"], [396, 8, 1, "", "from_exception"], [396, 7, 1, "", "lineno"], [396, 7, 1, "", "msg"], [396, 7, 1, "", "offset"], [396, 8, 1, "", "print"], [396, 7, 1, "", "stack"], [396, 7, 1, "", "text"]], "tracemalloc": [[397, 11, 1, "", "DomainFilter"], [397, 11, 1, "", "Filter"], [397, 11, 1, "", "Frame"], [397, 11, 1, "", "Snapshot"], [397, 11, 1, "", "Statistic"], [397, 11, 1, "", "StatisticDiff"], [397, 11, 1, "", "Trace"], [397, 11, 1, "", "Traceback"], [397, 12, 1, "", "clear_traces"], [397, 12, 1, "", "get_object_traceback"], [397, 12, 1, "", "get_traceback_limit"], [397, 12, 1, "", "get_traced_memory"], [397, 12, 1, "", "get_tracemalloc_memory"], [397, 12, 1, "", "is_tracing"], [397, 12, 1, "", "reset_peak"], [397, 12, 1, "", "start"], [397, 12, 1, "", "stop"], [397, 12, 1, "", "take_snapshot"]], "tracemalloc.DomainFilter": [[397, 7, 1, "", "domain"], [397, 7, 1, "", "inclusive"]], "tracemalloc.Filter": [[397, 7, 1, "", "all_frames"], [397, 7, 1, "", "domain"], [397, 7, 1, "", "filename_pattern"], [397, 7, 1, "", "inclusive"], [397, 7, 1, "", "lineno"]], "tracemalloc.Frame": [[397, 7, 1, "", "filename"], [397, 7, 1, "", "lineno"]], "tracemalloc.Snapshot": [[397, 8, 1, "", "compare_to"], [397, 8, 1, "", "dump"], [397, 8, 1, "", "filter_traces"], [397, 8, 1, "", "load"], [397, 8, 1, "", "statistics"], [397, 7, 1, "", "traceback_limit"], [397, 7, 1, "", "traces"]], "tracemalloc.Statistic": [[397, 7, 1, "", "count"], [397, 7, 1, "", "size"], [397, 7, 1, "", "traceback"]], "tracemalloc.StatisticDiff": [[397, 7, 1, "", "count"], [397, 7, 1, "", "count_diff"], [397, 7, 1, "", "size"], [397, 7, 1, "", "size_diff"], [397, 7, 1, "", "traceback"]], "tracemalloc.Trace": [[397, 7, 1, "", "domain"], [397, 7, 1, "", "size"], [397, 7, 1, "", "traceback"]], "tracemalloc.Traceback": [[397, 8, 1, "", "format"], [397, 7, 1, "", "total_nframe"]], "tty": [[398, 12, 1, "", "setcbreak"], [398, 12, 1, "", "setraw"]], "turtle": [[399, 11, 1, "", "RawPen"], [399, 11, 1, "", "RawTurtle"], [399, 11, 1, "", "Screen"], [399, 11, 1, "", "ScrolledCanvas"], [399, 11, 1, "", "Shape"], [399, 11, 1, "", "Turtle"], [399, 11, 1, "", "TurtleScreen"], [399, 11, 1, "", "Vec2D"], [399, 12, 1, "", "addshape"], [399, 12, 1, "", "back"], [399, 12, 1, "", "backward"], [399, 12, 1, "", "begin_fill"], [399, 12, 1, "", "begin_poly"], [399, 12, 1, "", "bgcolor"], [399, 12, 1, "", "bgpic"], [399, 12, 1, "", "bk"], [399, 12, 1, "", "bye"], [399, 12, 1, "", "circle"], [399, 12, 1, "", "clear"], [399, 12, 1, "", "clearscreen"], [399, 12, 1, "", "clearstamp"], [399, 12, 1, "", "clearstamps"], [399, 12, 1, "", "clone"], [399, 12, 1, "", "color"], [399, 12, 1, "", "colormode"], [399, 12, 1, "", "degrees"], [399, 12, 1, "", "delay"], [399, 12, 1, "", "distance"], [399, 12, 1, "", "done"], [399, 12, 1, "", "dot"], [399, 12, 1, "", "down"], [399, 12, 1, "", "end_fill"], [399, 12, 1, "", "end_poly"], [399, 12, 1, "", "exitonclick"], [399, 12, 1, "", "fd"], [399, 12, 1, "", "fillcolor"], [399, 12, 1, "", "filling"], [399, 12, 1, "", "forward"], [399, 12, 1, "", "get_poly"], [399, 12, 1, "", "get_shapepoly"], [399, 12, 1, "", "getcanvas"], [399, 12, 1, "", "getpen"], [399, 12, 1, "", "getscreen"], [399, 12, 1, "", "getshapes"], [399, 12, 1, "", "getturtle"], [399, 12, 1, "", "goto"], [399, 12, 1, "", "heading"], [399, 12, 1, "", "hideturtle"], [399, 12, 1, "", "home"], [399, 12, 1, "", "ht"], [399, 12, 1, "", "isdown"], [399, 12, 1, "", "isvisible"], [399, 12, 1, "", "left"], [399, 12, 1, "", "listen"], [399, 12, 1, "", "lt"], [399, 12, 1, "", "mainloop"], [399, 12, 1, "", "mode"], [399, 12, 1, "", "numinput"], [399, 12, 1, "", "onclick"], [399, 12, 1, "", "ondrag"], [399, 12, 1, "", "onkey"], [399, 12, 1, "", "onkeypress"], [399, 12, 1, "", "onkeyrelease"], [399, 12, 1, "", "onrelease"], [399, 12, 1, "", "onscreenclick"], [399, 12, 1, "", "ontimer"], [399, 12, 1, "", "pd"], [399, 12, 1, "", "pen"], [399, 12, 1, "", "pencolor"], [399, 12, 1, "", "pendown"], [399, 12, 1, "", "pensize"], [399, 12, 1, "", "penup"], [399, 12, 1, "", "pos"], [399, 12, 1, "", "position"], [399, 12, 1, "", "pu"], [399, 12, 1, "", "radians"], [399, 12, 1, "", "register_shape"], [399, 12, 1, "", "reset"], [399, 12, 1, "", "resetscreen"], [399, 12, 1, "", "resizemode"], [399, 12, 1, "", "right"], [399, 12, 1, "", "rt"], [399, 12, 1, "", "screensize"], [399, 12, 1, "", "seth"], [399, 12, 1, "", "setheading"], [399, 12, 1, "", "setpos"], [399, 12, 1, "", "setposition"], [399, 12, 1, "", "settiltangle"], [399, 12, 1, "", "setundobuffer"], [399, 12, 1, "", "setup"], [399, 12, 1, "", "setworldcoordinates"], [399, 12, 1, "", "setx"], [399, 12, 1, "", "sety"], [399, 12, 1, "", "shape"], [399, 12, 1, "", "shapesize"], [399, 12, 1, "", "shapetransform"], [399, 12, 1, "", "shearfactor"], [399, 12, 1, "", "showturtle"], [399, 12, 1, "", "speed"], [399, 12, 1, "", "st"], [399, 12, 1, "", "stamp"], [399, 12, 1, "", "textinput"], [399, 12, 1, "", "tilt"], [399, 12, 1, "", "tiltangle"], [399, 12, 1, "", "title"], [399, 12, 1, "", "towards"], [399, 12, 1, "", "tracer"], [399, 12, 1, "", "turtles"], [399, 12, 1, "", "turtlesize"], [399, 12, 1, "", "undo"], [399, 12, 1, "", "undobufferentries"], [399, 12, 1, "", "up"], [399, 12, 1, "", "update"], [399, 12, 1, "", "width"], [399, 12, 1, "", "window_height"], [399, 12, 1, "", "window_width"], [399, 12, 1, "", "write"], [399, 12, 1, "", "write_docstringdict"], [399, 12, 1, "", "xcor"], [399, 12, 1, "", "ycor"]], "turtle.Shape": [[399, 8, 1, "", "addcomponent"]], "types": [[400, 9, 1, "", "AsyncGeneratorType"], [400, 9, 1, "", "BuiltinFunctionType"], [400, 9, 1, "", "BuiltinMethodType"], [400, 9, 1, "", "CellType"], [400, 9, 1, "", "ClassMethodDescriptorType"], [400, 11, 1, "", "CodeType"], [400, 9, 1, "", "CoroutineType"], [400, 12, 1, "", "DynamicClassAttribute"], [400, 9, 1, "", "EllipsisType"], [400, 9, 1, "", "FrameType"], [400, 9, 1, "", "FunctionType"], [400, 9, 1, "", "GeneratorType"], [400, 11, 1, "", "GenericAlias"], [400, 9, 1, "", "GetSetDescriptorType"], [400, 9, 1, "", "LambdaType"], [400, 11, 1, "", "MappingProxyType"], [400, 9, 1, "", "MemberDescriptorType"], [400, 9, 1, "", "MethodDescriptorType"], [400, 9, 1, "", "MethodType"], [400, 9, 1, "", "MethodWrapperType"], [400, 11, 1, "", "ModuleType"], [400, 9, 1, "", "NoneType"], [400, 9, 1, "", "NotImplementedType"], [400, 11, 1, "", "SimpleNamespace"], [400, 11, 1, "", "TracebackType"], [400, 11, 1, "", "UnionType"], [400, 9, 1, "", "WrapperDescriptorType"], [400, 12, 1, "", "coroutine"], [400, 12, 1, "", "new_class"], [400, 12, 1, "", "prepare_class"], [400, 12, 1, "", "resolve_bases"]], "types.MappingProxyType": [[400, 8, 1, "", "copy"], [400, 8, 1, "", "get"], [400, 8, 1, "", "items"], [400, 8, 1, "", "keys"], [400, 8, 1, "", "values"]], "types.ModuleType": [[400, 7, 1, "", "__doc__"], [400, 7, 1, "", "__loader__"], [400, 7, 1, "", "__name__"], [400, 7, 1, "", "__package__"], [400, 7, 1, "", "__spec__"]], "typing": [[401, 11, 1, "", "AbstractSet"], [401, 9, 1, "", "Annotated"], [401, 9, 1, "", "Any"], [401, 9, 1, "", "AnyStr"], [401, 11, 1, "", "AsyncContextManager"], [401, 11, 1, "", "AsyncGenerator"], [401, 11, 1, "", "AsyncIterable"], [401, 11, 1, "", "AsyncIterator"], [401, 11, 1, "", "Awaitable"], [401, 11, 1, "", "BinaryIO"], [401, 11, 1, "", "ByteString"], [401, 9, 1, "", "Callable"], [401, 11, 1, "", "ChainMap"], [401, 9, 1, "", "ClassVar"], [401, 11, 1, "", "Collection"], [401, 9, 1, "", "Concatenate"], [401, 11, 1, "", "Container"], [401, 11, 1, "", "ContextManager"], [401, 11, 1, "", "Coroutine"], [401, 11, 1, "", "Counter"], [401, 11, 1, "", "DefaultDict"], [401, 11, 1, "", "Deque"], [401, 11, 1, "", "Dict"], [401, 9, 1, "", "Final"], [401, 11, 1, "", "ForwardRef"], [401, 11, 1, "", "FrozenSet"], [401, 11, 1, "", "Generator"], [401, 11, 1, "", "Generic"], [401, 11, 1, "", "Hashable"], [401, 11, 1, "", "IO"], [401, 11, 1, "", "ItemsView"], [401, 11, 1, "", "Iterable"], [401, 11, 1, "", "Iterator"], [401, 11, 1, "", "KeysView"], [401, 11, 1, "", "List"], [401, 9, 1, "", "Literal"], [401, 9, 1, "", "LiteralString"], [401, 11, 1, "", "Mapping"], [401, 11, 1, "", "MappingView"], [401, 11, 1, "", "Match"], [401, 11, 1, "", "MutableMapping"], [401, 11, 1, "", "MutableSequence"], [401, 11, 1, "", "MutableSet"], [401, 11, 1, "", "NamedTuple"], [401, 9, 1, "", "Never"], [401, 11, 1, "", "NewType"], [401, 9, 1, "", "NoReturn"], [401, 9, 1, "", "NotRequired"], [401, 9, 1, "", "Optional"], [401, 11, 1, "", "OrderedDict"], [401, 11, 1, "", "ParamSpec"], [401, 9, 1, "", "ParamSpecArgs"], [401, 9, 1, "", "ParamSpecKwargs"], [401, 11, 1, "", "Pattern"], [401, 11, 1, "", "Protocol"], [401, 9, 1, "", "Required"], [401, 11, 1, "", "Reversible"], [401, 9, 1, "", "Self"], [401, 11, 1, "", "Sequence"], [401, 11, 1, "", "Set"], [401, 11, 1, "", "Sized"], [401, 11, 1, "", "SupportsAbs"], [401, 11, 1, "", "SupportsBytes"], [401, 11, 1, "", "SupportsComplex"], [401, 11, 1, "", "SupportsFloat"], [401, 11, 1, "", "SupportsIndex"], [401, 11, 1, "", "SupportsInt"], [401, 11, 1, "", "SupportsRound"], [401, 9, 1, "", "TYPE_CHECKING"], [401, 11, 1, "", "Text"], [401, 11, 1, "", "TextIO"], [401, 9, 1, "", "Tuple"], [401, 11, 1, "", "Type"], [401, 9, 1, "", "TypeAlias"], [401, 9, 1, "", "TypeGuard"], [401, 11, 1, "", "TypeVar"], [401, 11, 1, "", "TypeVarTuple"], [401, 11, 1, "", "TypedDict"], [401, 9, 1, "", "Union"], [401, 9, 1, "", "Unpack"], [401, 11, 1, "", "ValuesView"], [401, 12, 1, "", "assert_never"], [401, 12, 1, "", "assert_type"], [401, 12, 1, "", "cast"], [401, 12, 1, "", "clear_overloads"], [401, 12, 1, "", "dataclass_transform"], [401, 12, 1, "", "final"], [401, 12, 1, "", "get_args"], [401, 12, 1, "", "get_origin"], [401, 12, 1, "", "get_overloads"], [401, 12, 1, "", "get_type_hints"], [401, 12, 1, "", "is_typeddict"], [401, 12, 1, "", "no_type_check"], [401, 12, 1, "", "no_type_check_decorator"], [401, 12, 1, "", "overload"], [401, 12, 1, "", "reveal_type"], [401, 12, 1, "", "runtime_checkable"], [401, 12, 1, "", "type_check_only"]], "typing.NewType": [[401, 7, 1, "", "__module__"], [401, 7, 1, "", "__name__"], [401, 7, 1, "", "__supertype__"]], "typing.ParamSpec": [[401, 7, 1, "", "__name__"], [401, 7, 1, "", "args"], [401, 7, 1, "", "kwargs"]], "typing.TypeVar": [[401, 7, 1, "", "__bound__"], [401, 7, 1, "", "__constraints__"], [401, 7, 1, "", "__contravariant__"], [401, 7, 1, "", "__covariant__"], [401, 7, 1, "", "__name__"]], "typing.TypeVarTuple": [[401, 7, 1, "", "__name__"]], "typing.TypedDict": [[401, 7, 1, "", "__optional_keys__"], [401, 7, 1, "", "__required_keys__"], [401, 7, 1, "", "__total__"]], "unicodedata": [[402, 12, 1, "", "bidirectional"], [402, 12, 1, "", "category"], [402, 12, 1, "", "combining"], [402, 12, 1, "", "decimal"], [402, 12, 1, "", "decomposition"], [402, 12, 1, "", "digit"], [402, 12, 1, "", "east_asian_width"], [402, 12, 1, "", "is_normalized"], [402, 12, 1, "", "lookup"], [402, 12, 1, "", "mirrored"], [402, 12, 1, "", "name"], [402, 12, 1, "", "normalize"], [402, 12, 1, "", "numeric"], [402, 9, 1, "", "ucd_3_2_0"], [402, 9, 1, "", "unidata_version"]], "unittest": [[403, 11, 1, "", "FunctionTestCase"], [403, 11, 1, "", "IsolatedAsyncioTestCase"], [403, 6, 1, "", "SkipTest"], [403, 11, 1, "", "TestCase"], [403, 11, 1, "", "TestLoader"], [403, 11, 1, "", "TestResult"], [403, 11, 1, "", "TestSuite"], [403, 11, 1, "", "TextTestResult"], [403, 11, 1, "", "TextTestRunner"], [403, 12, 1, "", "addModuleCleanup"], [403, 9, 1, "", "defaultTestLoader"], [403, 12, 1, "", "doModuleCleanups"], [403, 8, 1, "", "enterModuleContext"], [403, 12, 1, "", "expectedFailure"], [403, 12, 1, "", "installHandler"], [403, 12, 1, "", "main"], [404, 10, 0, "-", "mock"], [403, 12, 1, "", "registerResult"], [403, 12, 1, "", "removeHandler"], [403, 12, 1, "", "removeResult"], [403, 12, 1, "", "skip"], [403, 12, 1, "", "skipIf"], [403, 12, 1, "", "skipUnless"], [403, 14, 1, "cmdoption-unittest-b", "--buffer"], [403, 14, 1, "cmdoption-unittest-c", "--catch"], [403, 14, 1, "cmdoption-unittest-f", "--failfast"], [403, 14, 1, "cmdoption-unittest-locals", "--locals"], [403, 14, 1, "cmdoption-unittest-b", "-b"], [403, 14, 1, "cmdoption-unittest-c", "-c"], [403, 14, 1, "cmdoption-unittest-f", "-f"], [403, 14, 1, "cmdoption-unittest-k", "-k"]], "unittest.IsolatedAsyncioTestCase": [[403, 8, 1, "", "addAsyncCleanup"], [403, 8, 1, "", "asyncSetUp"], [403, 8, 1, "", "asyncTearDown"], [403, 8, 1, "", "enterAsyncContext"], [403, 8, 1, "", "run"]], "unittest.TestCase": [[403, 8, 1, "", "addClassCleanup"], [403, 8, 1, "", "addCleanup"], [403, 8, 1, "", "addTypeEqualityFunc"], [403, 8, 1, "", "assertAlmostEqual"], [403, 8, 1, "", "assertCountEqual"], [403, 8, 1, "", "assertDictEqual"], [403, 8, 1, "", "assertEqual"], [403, 8, 1, "", "assertFalse"], [403, 8, 1, "", "assertGreater"], [403, 8, 1, "", "assertGreaterEqual"], [403, 8, 1, "", "assertIn"], [403, 8, 1, "", "assertIs"], [403, 8, 1, "", "assertIsInstance"], [403, 8, 1, "", "assertIsNone"], [403, 8, 1, "", "assertIsNot"], [403, 8, 1, "", "assertIsNotNone"], [403, 8, 1, "", "assertLess"], [403, 8, 1, "", "assertLessEqual"], [403, 8, 1, "", "assertListEqual"], [403, 8, 1, "", "assertLogs"], [403, 8, 1, "", "assertMultiLineEqual"], [403, 8, 1, "", "assertNoLogs"], [403, 8, 1, "", "assertNotAlmostEqual"], [403, 8, 1, "", "assertNotEqual"], [403, 8, 1, "", "assertNotIn"], [403, 8, 1, "", "assertNotIsInstance"], [403, 8, 1, "", "assertNotRegex"], [403, 8, 1, "", "assertRaises"], [403, 8, 1, "", "assertRaisesRegex"], [403, 8, 1, "", "assertRegex"], [403, 8, 1, "", "assertSequenceEqual"], [403, 8, 1, "", "assertSetEqual"], [403, 8, 1, "", "assertTrue"], [403, 8, 1, "", "assertTupleEqual"], [403, 8, 1, "", "assertWarns"], [403, 8, 1, "", "assertWarnsRegex"], [403, 8, 1, "", "countTestCases"], [403, 8, 1, "", "debug"], [403, 8, 1, "", "defaultTestResult"], [403, 8, 1, "", "doClassCleanups"], [403, 8, 1, "", "doCleanups"], [403, 8, 1, "", "enterClassContext"], [403, 8, 1, "", "enterContext"], [403, 8, 1, "", "fail"], [403, 7, 1, "", "failureException"], [403, 8, 1, "", "id"], [403, 7, 1, "", "longMessage"], [403, 7, 1, "", "maxDiff"], [403, 7, 1, "", "output"], [403, 7, 1, "", "records"], [403, 8, 1, "", "run"], [403, 8, 1, "", "setUp"], [403, 8, 1, "", "setUpClass"], [403, 8, 1, "", "shortDescription"], [403, 8, 1, "", "skipTest"], [403, 8, 1, "", "subTest"], [403, 8, 1, "", "tearDown"], [403, 8, 1, "", "tearDownClass"]], "unittest.TestLoader": [[403, 8, 1, "", "discover"], [403, 7, 1, "", "errors"], [403, 8, 1, "", "getTestCaseNames"], [403, 8, 1, "", "loadTestsFromModule"], [403, 8, 1, "", "loadTestsFromName"], [403, 8, 1, "", "loadTestsFromNames"], [403, 8, 1, "", "loadTestsFromTestCase"], [403, 7, 1, "", "sortTestMethodsUsing"], [403, 7, 1, "", "suiteClass"], [403, 7, 1, "", "testMethodPrefix"], [403, 7, 1, "", "testNamePatterns"]], "unittest.TestResult": [[403, 8, 1, "", "addError"], [403, 8, 1, "", "addExpectedFailure"], [403, 8, 1, "", "addFailure"], [403, 8, 1, "", "addSkip"], [403, 8, 1, "", "addSubTest"], [403, 8, 1, "", "addSuccess"], [403, 8, 1, "", "addUnexpectedSuccess"], [403, 7, 1, "", "buffer"], [403, 7, 1, "", "errors"], [403, 7, 1, "", "expectedFailures"], [403, 7, 1, "", "failfast"], [403, 7, 1, "", "failures"], [403, 7, 1, "", "shouldStop"], [403, 7, 1, "", "skipped"], [403, 8, 1, "", "startTest"], [403, 8, 1, "", "startTestRun"], [403, 8, 1, "", "stop"], [403, 8, 1, "", "stopTest"], [403, 8, 1, "", "stopTestRun"], [403, 7, 1, "", "tb_locals"], [403, 7, 1, "", "testsRun"], [403, 7, 1, "", "unexpectedSuccesses"], [403, 8, 1, "", "wasSuccessful"]], "unittest.TestSuite": [[403, 8, 1, "", "__iter__"], [403, 8, 1, "", "addTest"], [403, 8, 1, "", "addTests"], [403, 8, 1, "", "countTestCases"], [403, 8, 1, "", "debug"], [403, 8, 1, "", "run"]], "unittest.TextTestRunner": [[403, 8, 1, "", "_makeResult"], [403, 8, 1, "", "run"]], "unittest.mock": [[404, 9, 1, "", "ANY"], [404, 11, 1, "", "AsyncMock"], [404, 9, 1, "", "DEFAULT"], [404, 9, 1, "", "FILTER_DIR"], [404, 11, 1, "", "MagicMock"], [404, 11, 1, "", "Mock"], [404, 11, 1, "", "NonCallableMagicMock"], [404, 11, 1, "", "NonCallableMock"], [404, 11, 1, "", "PropertyMock"], [404, 12, 1, "", "call"], [404, 12, 1, "", "create_autospec"], [404, 12, 1, "", "mock_open"], [404, 12, 1, "", "patch"], [404, 12, 1, "", "seal"], [404, 9, 1, "", "sentinel"]], "unittest.mock.AsyncMock": [[404, 8, 1, "", "assert_any_await"], [404, 8, 1, "", "assert_awaited"], [404, 8, 1, "", "assert_awaited_once"], [404, 8, 1, "", "assert_awaited_once_with"], [404, 8, 1, "", "assert_awaited_with"], [404, 8, 1, "", "assert_has_awaits"], [404, 8, 1, "", "assert_not_awaited"], [404, 7, 1, "", "await_args"], [404, 7, 1, "", "await_args_list"], [404, 7, 1, "", "await_count"], [404, 8, 1, "", "reset_mock"]], "unittest.mock.Mock": [[404, 7, 1, "", "__class__"], [404, 8, 1, "", "__dir__"], [404, 8, 1, "", "_get_child_mock"], [404, 8, 1, "", "assert_any_call"], [404, 8, 1, "", "assert_called"], [404, 8, 1, "", "assert_called_once"], [404, 8, 1, "", "assert_called_once_with"], [404, 8, 1, "", "assert_called_with"], [404, 8, 1, "", "assert_has_calls"], [404, 8, 1, "", "assert_not_called"], [404, 8, 1, "", "attach_mock"], [404, 7, 1, "", "call_args"], [404, 7, 1, "", "call_args_list"], [404, 7, 1, "", "call_count"], [404, 7, 1, "", "called"], [404, 8, 1, "", "configure_mock"], [404, 7, 1, "", "method_calls"], [404, 8, 1, "", "mock_add_spec"], [404, 7, 1, "", "mock_calls"], [404, 8, 1, "", "reset_mock"], [404, 7, 1, "", "return_value"], [404, 7, 1, "", "side_effect"]], "unittest.mock.call": [[404, 8, 1, "", "call_list"]], "unittest.mock.patch": [[404, 12, 1, "", "dict"], [404, 12, 1, "", "multiple"], [404, 12, 1, "", "object"], [404, 12, 1, "", "stopall"]], "urllib": [[408, 10, 0, "-", "error"], [409, 10, 0, "-", "parse"], [410, 10, 0, "-", "request"], [410, 10, 0, "-", "response"], [411, 10, 0, "-", "robotparser"]], "urllib.error": [[408, 6, 1, "", "ContentTooShortError"], [408, 6, 1, "", "HTTPError"], [408, 6, 1, "", "URLError"]], "urllib.error.ContentTooShortError": [[408, 7, 1, "", "content"]], "urllib.error.HTTPError": [[408, 7, 1, "", "code"], [408, 7, 1, "", "headers"], [408, 7, 1, "", "reason"]], "urllib.error.URLError": [[408, 7, 1, "", "reason"]], "urllib.parse": [[409, 11, 1, "", "DefragResult"], [409, 11, 1, "", "DefragResultBytes"], [409, 11, 1, "", "ParseResult"], [409, 11, 1, "", "ParseResultBytes"], [409, 11, 1, "", "SplitResult"], [409, 11, 1, "", "SplitResultBytes"], [409, 12, 1, "", "parse_qs"], [409, 12, 1, "", "parse_qsl"], [409, 12, 1, "", "quote"], [409, 12, 1, "", "quote_from_bytes"], [409, 12, 1, "", "quote_plus"], [409, 12, 1, "", "unquote"], [409, 12, 1, "", "unquote_plus"], [409, 12, 1, "", "unquote_to_bytes"], [409, 12, 1, "", "unwrap"], [409, 12, 1, "", "urldefrag"], [409, 12, 1, "", "urlencode"], [409, 12, 1, "", "urljoin"], [409, 12, 1, "", "urlparse"], [409, 12, 1, "", "urlsplit"], [409, 12, 1, "", "urlunparse"], [409, 12, 1, "", "urlunsplit"]], "urllib.parse.urllib.parse.SplitResult": [[409, 8, 1, "", "geturl"]], "urllib.request": [[410, 11, 1, "", "AbstractBasicAuthHandler"], [410, 11, 1, "", "AbstractDigestAuthHandler"], [410, 11, 1, "", "BaseHandler"], [410, 11, 1, "", "CacheFTPHandler"], [410, 11, 1, "", "DataHandler"], [410, 11, 1, "", "FTPHandler"], [410, 11, 1, "", "FancyURLopener"], [410, 11, 1, "", "FileHandler"], [410, 11, 1, "", "HTTPBasicAuthHandler"], [410, 11, 1, "", "HTTPCookieProcessor"], [410, 11, 1, "", "HTTPDefaultErrorHandler"], [410, 11, 1, "", "HTTPDigestAuthHandler"], [410, 11, 1, "", "HTTPErrorProcessor"], [410, 11, 1, "", "HTTPHandler"], [410, 11, 1, "", "HTTPPasswordMgr"], [410, 11, 1, "", "HTTPPasswordMgrWithDefaultRealm"], [410, 11, 1, "", "HTTPPasswordMgrWithPriorAuth"], [410, 11, 1, "", "HTTPRedirectHandler"], [410, 11, 1, "", "HTTPSHandler"], [410, 11, 1, "", "OpenerDirector"], [410, 11, 1, "", "ProxyBasicAuthHandler"], [410, 11, 1, "", "ProxyDigestAuthHandler"], [410, 11, 1, "", "ProxyHandler"], [410, 11, 1, "", "Request"], [410, 11, 1, "", "URLopener"], [410, 11, 1, "", "UnknownHandler"], [410, 12, 1, "", "build_opener"], [410, 12, 1, "", "getproxies"], [410, 12, 1, "", "install_opener"], [410, 12, 1, "", "pathname2url"], [410, 12, 1, "", "url2pathname"], [410, 12, 1, "", "urlcleanup"], [410, 12, 1, "", "urlopen"], [410, 12, 1, "", "urlretrieve"]], "urllib.request.AbstractBasicAuthHandler": [[410, 8, 1, "", "http_error_auth_reqed"]], "urllib.request.AbstractDigestAuthHandler": [[410, 8, 1, "", "http_error_auth_reqed"]], "urllib.request.BaseHandler": [[410, 8, 1, "", "add_parent"], [410, 8, 1, "", "close"], [410, 8, 1, "", "default_open"], [410, 8, 1, "", "http_error_default"], [410, 7, 1, "", "parent"], [410, 8, 1, "", "unknown_open"]], "urllib.request.CacheFTPHandler": [[410, 8, 1, "", "setMaxConns"], [410, 8, 1, "", "setTimeout"]], "urllib.request.DataHandler": [[410, 8, 1, "", "data_open"]], "urllib.request.FTPHandler": [[410, 8, 1, "", "ftp_open"]], "urllib.request.FancyURLopener": [[410, 8, 1, "", "prompt_user_passwd"]], "urllib.request.FileHandler": [[410, 8, 1, "", "file_open"]], "urllib.request.HTTPBasicAuthHandler": [[410, 8, 1, "", "http_error_401"]], "urllib.request.HTTPCookieProcessor": [[410, 7, 1, "", "cookiejar"]], "urllib.request.HTTPDigestAuthHandler": [[410, 8, 1, "", "http_error_401"]], "urllib.request.HTTPErrorProcessor": [[410, 8, 1, "", "http_response"], [410, 8, 1, "", "https_response"]], "urllib.request.HTTPHandler": [[410, 8, 1, "", "http_open"]], "urllib.request.HTTPPasswordMgr": [[410, 8, 1, "", "add_password"], [410, 8, 1, "", "find_user_password"]], "urllib.request.HTTPPasswordMgrWithPriorAuth": [[410, 8, 1, "", "add_password"], [410, 8, 1, "", "find_user_password"], [410, 8, 1, "", "is_authenticated"], [410, 8, 1, "", "update_authenticated"]], "urllib.request.HTTPRedirectHandler": [[410, 8, 1, "", "http_error_301"], [410, 8, 1, "", "http_error_302"], [410, 8, 1, "", "http_error_303"], [410, 8, 1, "", "http_error_307"], [410, 8, 1, "", "http_error_308"], [410, 8, 1, "", "redirect_request"]], "urllib.request.HTTPSHandler": [[410, 8, 1, "", "https_open"]], "urllib.request.OpenerDirector": [[410, 8, 1, "", "add_handler"], [410, 8, 1, "", "error"], [410, 8, 1, "", "open"]], "urllib.request.ProxyBasicAuthHandler": [[410, 8, 1, "", "http_error_407"]], "urllib.request.ProxyDigestAuthHandler": [[410, 8, 1, "", "http_error_407"]], "urllib.request.Request": [[410, 8, 1, "", "add_header"], [410, 8, 1, "", "add_unredirected_header"], [410, 7, 1, "", "data"], [410, 7, 1, "", "full_url"], [410, 8, 1, "", "get_full_url"], [410, 8, 1, "", "get_header"], [410, 8, 1, "", "get_method"], [410, 8, 1, "", "has_header"], [410, 8, 1, "", "header_items"], [410, 7, 1, "", "host"], [410, 7, 1, "", "method"], [410, 7, 1, "", "origin_req_host"], [410, 8, 1, "", "remove_header"], [410, 7, 1, "", "selector"], [410, 8, 1, "", "set_proxy"], [410, 7, 1, "", "type"], [410, 7, 1, "", "unverifiable"]], "urllib.request.URLopener": [[410, 8, 1, "", "open"], [410, 8, 1, "", "open_unknown"], [410, 8, 1, "", "retrieve"], [410, 7, 1, "", "version"]], "urllib.request.UnknownHandler": [[410, 8, 1, "", "unknown_open"]], "urllib.response": [[410, 11, 1, "", "addinfourl"]], "urllib.response.addinfourl": [[410, 7, 1, "", "code"], [410, 8, 1, "", "getcode"], [410, 8, 1, "", "geturl"], [410, 7, 1, "", "headers"], [410, 8, 1, "", "info"], [410, 7, 1, "", "status"], [410, 7, 1, "", "url"]], "urllib.robotparser": [[411, 11, 1, "", "RobotFileParser"]], "urllib.robotparser.RobotFileParser": [[411, 8, 1, "", "can_fetch"], [411, 8, 1, "", "crawl_delay"], [411, 8, 1, "", "modified"], [411, 8, 1, "", "mtime"], [411, 8, 1, "", "parse"], [411, 8, 1, "", "read"], [411, 8, 1, "", "request_rate"], [411, 8, 1, "", "set_url"], [411, 8, 1, "", "site_maps"]], "uu": [[412, 6, 1, "", "Error"], [412, 12, 1, "", "decode"], [412, 12, 1, "", "encode"]], "uuid": [[413, 9, 1, "", "NAMESPACE_DNS"], [413, 9, 1, "", "NAMESPACE_OID"], [413, 9, 1, "", "NAMESPACE_URL"], [413, 9, 1, "", "NAMESPACE_X500"], [413, 9, 1, "", "RESERVED_FUTURE"], [413, 9, 1, "", "RESERVED_MICROSOFT"], [413, 9, 1, "", "RESERVED_NCS"], [413, 9, 1, "", "RFC_4122"], [413, 11, 1, "", "SafeUUID"], [413, 11, 1, "", "UUID"], [413, 12, 1, "", "getnode"], [413, 12, 1, "", "uuid1"], [413, 12, 1, "", "uuid3"], [413, 12, 1, "", "uuid4"], [413, 12, 1, "", "uuid5"]], "uuid.SafeUUID": [[413, 7, 1, "", "safe"], [413, 7, 1, "", "unknown"], [413, 7, 1, "", "unsafe"]], "uuid.UUID": [[413, 7, 1, "", "bytes"], [413, 7, 1, "", "bytes_le"], [413, 7, 1, "", "clock_seq"], [413, 7, 1, "", "clock_seq_hi_variant"], [413, 7, 1, "", "clock_seq_low"], [413, 7, 1, "", "fields"], [413, 7, 1, "", "hex"], [413, 7, 1, "", "int"], [413, 7, 1, "", "is_safe"], [413, 7, 1, "", "node"], [413, 7, 1, "", "time"], [413, 7, 1, "", "time_hi_version"], [413, 7, 1, "", "time_low"], [413, 7, 1, "", "time_mid"], [413, 7, 1, "", "urn"], [413, 7, 1, "", "variant"], [413, 7, 1, "", "version"]], "venv": [[414, 11, 1, "", "EnvBuilder"], [414, 12, 1, "", "create"]], "venv.EnvBuilder": [[414, 8, 1, "", "create"], [414, 8, 1, "", "create_configuration"], [414, 8, 1, "", "ensure_directories"], [414, 8, 1, "", "install_scripts"], [414, 8, 1, "", "post_setup"], [414, 8, 1, "", "setup_python"], [414, 8, 1, "", "setup_scripts"], [414, 8, 1, "", "upgrade_dependencies"]], "warnings": [[415, 11, 1, "", "catch_warnings"], [415, 12, 1, "", "filterwarnings"], [415, 12, 1, "", "formatwarning"], [415, 12, 1, "", "resetwarnings"], [415, 12, 1, "", "showwarning"], [415, 12, 1, "", "simplefilter"], [415, 12, 1, "", "warn"], [415, 12, 1, "", "warn_explicit"]], "wave": [[416, 6, 1, "", "Error"], [416, 11, 1, "", "Wave_read"], [416, 11, 1, "", "Wave_write"], [416, 12, 1, "", "open"]], "wave.Wave_read": [[416, 8, 1, "", "close"], [416, 8, 1, "", "getcompname"], [416, 8, 1, "", "getcomptype"], [416, 8, 1, "", "getframerate"], [416, 8, 1, "", "getmark"], [416, 8, 1, "", "getmarkers"], [416, 8, 1, "", "getnchannels"], [416, 8, 1, "", "getnframes"], [416, 8, 1, "", "getparams"], [416, 8, 1, "", "getsampwidth"], [416, 8, 1, "", "readframes"], [416, 8, 1, "", "rewind"], [416, 8, 1, "", "setpos"], [416, 8, 1, "", "tell"]], "wave.Wave_write": [[416, 8, 1, "", "close"], [416, 8, 1, "", "setcomptype"], [416, 8, 1, "", "setframerate"], [416, 8, 1, "", "setnchannels"], [416, 8, 1, "", "setnframes"], [416, 8, 1, "", "setparams"], [416, 8, 1, "", "setsampwidth"], [416, 8, 1, "", "tell"], [416, 8, 1, "", "writeframes"], [416, 8, 1, "", "writeframesraw"]], "weakref": [[417, 9, 1, "", "CallableProxyType"], [417, 9, 1, "", "ProxyType"], [417, 9, 1, "", "ProxyTypes"], [417, 9, 1, "", "ReferenceType"], [417, 11, 1, "", "WeakKeyDictionary"], [417, 11, 1, "", "WeakMethod"], [417, 11, 1, "", "WeakSet"], [417, 11, 1, "", "WeakValueDictionary"], [417, 11, 1, "", "finalize"], [417, 12, 1, "", "getweakrefcount"], [417, 12, 1, "", "getweakrefs"], [417, 12, 1, "", "proxy"], [417, 11, 1, "", "ref"]], "weakref.WeakKeyDictionary": [[417, 8, 1, "", "keyrefs"]], "weakref.WeakValueDictionary": [[417, 8, 1, "", "valuerefs"]], "weakref.finalize": [[417, 8, 1, "", "__call__"], [417, 7, 1, "", "alive"], [417, 7, 1, "", "atexit"], [417, 8, 1, "", "detach"], [417, 8, 1, "", "peek"]], "weakref.ref": [[417, 7, 1, "", "__callback__"]], "webbrowser": [[418, 6, 1, "", "Error"], [418, 12, 1, "", "get"], [418, 7, 1, "", "name"], [418, 12, 1, "", "open"], [418, 12, 1, "", "open_new"], [418, 12, 1, "", "open_new_tab"], [418, 12, 1, "", "register"]], "webbrowser.controller": [[418, 8, 1, "", "open"], [418, 8, 1, "", "open_new"], [418, 8, 1, "", "open_new_tab"]], "winreg": [[420, 12, 1, "", "CloseKey"], [420, 12, 1, "", "ConnectRegistry"], [420, 12, 1, "", "CreateKey"], [420, 12, 1, "", "CreateKeyEx"], [420, 12, 1, "", "DeleteKey"], [420, 12, 1, "", "DeleteKeyEx"], [420, 12, 1, "", "DeleteValue"], [420, 12, 1, "", "DisableReflectionKey"], [420, 12, 1, "", "EnableReflectionKey"], [420, 12, 1, "", "EnumKey"], [420, 12, 1, "", "EnumValue"], [420, 12, 1, "", "ExpandEnvironmentStrings"], [420, 12, 1, "", "FlushKey"], [420, 9, 1, "", "HKEY_CLASSES_ROOT"], [420, 9, 1, "", "HKEY_CURRENT_CONFIG"], [420, 9, 1, "", "HKEY_CURRENT_USER"], [420, 9, 1, "", "HKEY_DYN_DATA"], [420, 9, 1, "", "HKEY_LOCAL_MACHINE"], [420, 9, 1, "", "HKEY_PERFORMANCE_DATA"], [420, 9, 1, "", "HKEY_USERS"], [420, 9, 1, "", "KEY_ALL_ACCESS"], [420, 9, 1, "", "KEY_CREATE_LINK"], [420, 9, 1, "", "KEY_CREATE_SUB_KEY"], [420, 9, 1, "", "KEY_ENUMERATE_SUB_KEYS"], [420, 9, 1, "", "KEY_EXECUTE"], [420, 9, 1, "", "KEY_NOTIFY"], [420, 9, 1, "", "KEY_QUERY_VALUE"], [420, 9, 1, "", "KEY_READ"], [420, 9, 1, "", "KEY_SET_VALUE"], [420, 9, 1, "", "KEY_WOW64_32KEY"], [420, 9, 1, "", "KEY_WOW64_64KEY"], [420, 9, 1, "", "KEY_WRITE"], [420, 12, 1, "", "LoadKey"], [420, 12, 1, "", "OpenKey"], [420, 12, 1, "", "OpenKeyEx"], [420, 12, 1, "", "QueryInfoKey"], [420, 12, 1, "", "QueryReflectionKey"], [420, 12, 1, "", "QueryValue"], [420, 12, 1, "", "QueryValueEx"], [420, 9, 1, "", "REG_BINARY"], [420, 9, 1, "", "REG_DWORD"], [420, 9, 1, "", "REG_DWORD_BIG_ENDIAN"], [420, 9, 1, "", "REG_DWORD_LITTLE_ENDIAN"], [420, 9, 1, "", "REG_EXPAND_SZ"], [420, 9, 1, "", "REG_FULL_RESOURCE_DESCRIPTOR"], [420, 9, 1, "", "REG_LINK"], [420, 9, 1, "", "REG_MULTI_SZ"], [420, 9, 1, "", "REG_NONE"], [420, 9, 1, "", "REG_QWORD"], [420, 9, 1, "", "REG_QWORD_LITTLE_ENDIAN"], [420, 9, 1, "", "REG_RESOURCE_LIST"], [420, 9, 1, "", "REG_RESOURCE_REQUIREMENTS_LIST"], [420, 9, 1, "", "REG_SZ"], [420, 12, 1, "", "SaveKey"], [420, 12, 1, "", "SetValue"], [420, 12, 1, "", "SetValueEx"]], "winreg.PyHKEY": [[420, 8, 1, "", "Close"], [420, 8, 1, "", "Detach"], [420, 8, 1, "", "__enter__"], [420, 8, 1, "", "__exit__"]], "winsound": [[421, 12, 1, "", "Beep"], [421, 9, 1, "", "MB_ICONASTERISK"], [421, 9, 1, "", "MB_ICONEXCLAMATION"], [421, 9, 1, "", "MB_ICONHAND"], [421, 9, 1, "", "MB_ICONQUESTION"], [421, 9, 1, "", "MB_OK"], [421, 12, 1, "", "MessageBeep"], [421, 12, 1, "", "PlaySound"], [421, 9, 1, "", "SND_ALIAS"], [421, 9, 1, "", "SND_ASYNC"], [421, 9, 1, "", "SND_FILENAME"], [421, 9, 1, "", "SND_LOOP"], [421, 9, 1, "", "SND_MEMORY"], [421, 9, 1, "", "SND_NODEFAULT"], [421, 9, 1, "", "SND_NOSTOP"], [421, 9, 1, "", "SND_NOWAIT"], [421, 9, 1, "", "SND_PURGE"]], "wsgiref": [[422, 10, 0, "-", "handlers"], [422, 10, 0, "-", "headers"], [422, 10, 0, "-", "simple_server"], [422, 10, 0, "-", "types"], [422, 10, 0, "-", "util"], [422, 10, 0, "-", "validate"]], "wsgiref.handlers": [[422, 11, 1, "", "BaseCGIHandler"], [422, 11, 1, "", "BaseHandler"], [422, 11, 1, "", "CGIHandler"], [422, 11, 1, "", "IISCGIHandler"], [422, 11, 1, "", "SimpleHandler"], [422, 12, 1, "", "read_environ"]], "wsgiref.handlers.BaseHandler": [[422, 8, 1, "", "_flush"], [422, 8, 1, "", "_write"], [422, 8, 1, "", "add_cgi_vars"], [422, 7, 1, "", "error_body"], [422, 7, 1, "", "error_headers"], [422, 8, 1, "", "error_output"], [422, 7, 1, "", "error_status"], [422, 8, 1, "", "get_scheme"], [422, 8, 1, "", "get_stderr"], [422, 8, 1, "", "get_stdin"], [422, 7, 1, "", "http_version"], [422, 8, 1, "", "log_exception"], [422, 7, 1, "", "origin_server"], [422, 7, 1, "", "os_environ"], [422, 8, 1, "", "run"], [422, 8, 1, "", "sendfile"], [422, 7, 1, "", "server_software"], [422, 8, 1, "", "setup_environ"], [422, 7, 1, "", "traceback_limit"], [422, 7, 1, "", "wsgi_file_wrapper"], [422, 7, 1, "", "wsgi_multiprocess"], [422, 7, 1, "", "wsgi_multithread"], [422, 7, 1, "", "wsgi_run_once"]], "wsgiref.headers": [[422, 11, 1, "", "Headers"]], "wsgiref.headers.Headers": [[422, 8, 1, "", "add_header"], [422, 8, 1, "", "get_all"]], "wsgiref.simple_server": [[422, 11, 1, "", "WSGIRequestHandler"], [422, 11, 1, "", "WSGIServer"], [422, 12, 1, "", "demo_app"], [422, 12, 1, "", "make_server"]], "wsgiref.simple_server.WSGIRequestHandler": [[422, 8, 1, "", "get_environ"], [422, 8, 1, "", "get_stderr"], [422, 8, 1, "", "handle"]], "wsgiref.simple_server.WSGIServer": [[422, 8, 1, "", "get_app"], [422, 8, 1, "", "set_app"]], "wsgiref.types": [[422, 11, 1, "", "ErrorStream"], [422, 11, 1, "", "FileWrapper"], [422, 11, 1, "", "InputStream"], [422, 11, 1, "", "StartResponse"], [422, 9, 1, "", "WSGIApplication"], [422, 9, 1, "", "WSGIEnvironment"]], "wsgiref.util": [[422, 11, 1, "", "FileWrapper"], [422, 12, 1, "", "application_uri"], [422, 12, 1, "", "guess_scheme"], [422, 12, 1, "", "is_hop_by_hop"], [422, 12, 1, "", "request_uri"], [422, 12, 1, "", "setup_testing_defaults"], [422, 12, 1, "", "shift_path_info"]], "wsgiref.validate": [[422, 12, 1, "", "validator"]], "xdrlib": [[423, 6, 1, "", "ConversionError"], [423, 6, 1, "", "Error"], [423, 11, 1, "", "Packer"], [423, 11, 1, "", "Unpacker"]], "xdrlib.Packer": [[423, 8, 1, "", "get_buffer"], [423, 8, 1, "", "pack_array"], [423, 8, 1, "", "pack_bytes"], [423, 8, 1, "", "pack_double"], [423, 8, 1, "", "pack_farray"], [423, 8, 1, "", "pack_float"], [423, 8, 1, "", "pack_fopaque"], [423, 8, 1, "", "pack_fstring"], [423, 8, 1, "", "pack_list"], [423, 8, 1, "", "pack_opaque"], [423, 8, 1, "", "pack_string"], [423, 8, 1, "", "reset"]], "xdrlib.Unpacker": [[423, 8, 1, "", "done"], [423, 8, 1, "", "get_buffer"], [423, 8, 1, "", "get_position"], [423, 8, 1, "", "reset"], [423, 8, 1, "", "set_position"], [423, 8, 1, "", "unpack_array"], [423, 8, 1, "", "unpack_bytes"], [423, 8, 1, "", "unpack_double"], [423, 8, 1, "", "unpack_farray"], [423, 8, 1, "", "unpack_float"], [423, 8, 1, "", "unpack_fopaque"], [423, 8, 1, "", "unpack_fstring"], [423, 8, 1, "", "unpack_list"], [423, 8, 1, "", "unpack_opaque"], [423, 8, 1, "", "unpack_string"]], "xml": [[425, 10, 0, "-", "dom"], [429, 10, 0, "-", "sax"]], "xml.dom.Attr": [[425, 7, 1, "", "localName"], [425, 7, 1, "", "name"], [425, 7, 1, "", "prefix"], [425, 7, 1, "", "value"]], "xml.dom.Comment": [[425, 7, 1, "", "data"]], "xml.dom": [[425, 6, 1, "", "DOMException"], [425, 6, 1, "", "DomstringSizeErr"], [425, 9, 1, "", "EMPTY_NAMESPACE"], [425, 6, 1, "", "HierarchyRequestErr"], [425, 6, 1, "", "IndexSizeErr"], [425, 6, 1, "", "InuseAttributeErr"], [425, 6, 1, "", "InvalidAccessErr"], [425, 6, 1, "", "InvalidCharacterErr"], [425, 6, 1, "", "InvalidModificationErr"], [425, 6, 1, "", "InvalidStateErr"], [425, 6, 1, "", "NamespaceErr"], [425, 6, 1, "", "NoDataAllowedErr"], [425, 6, 1, "", "NoModificationAllowedErr"], [425, 6, 1, "", "NotFoundErr"], [425, 6, 1, "", "NotSupportedErr"], [425, 6, 1, "", "SyntaxErr"], [425, 6, 1, "", "WrongDocumentErr"], [425, 9, 1, "", "XHTML_NAMESPACE"], [425, 9, 1, "", "XMLNS_NAMESPACE"], [425, 9, 1, "", "XML_NAMESPACE"], [425, 12, 1, "", "getDOMImplementation"], [426, 10, 0, "-", "minidom"], [427, 10, 0, "-", "pulldom"], [425, 12, 1, "", "registerDOMImplementation"]], "xml.dom.DOMImplementation": [[425, 8, 1, "", "createDocument"], [425, 8, 1, "", "createDocumentType"], [425, 8, 1, "", "hasFeature"]], "xml.dom.Document": [[425, 8, 1, "", "createAttribute"], [425, 8, 1, "", "createAttributeNS"], [425, 8, 1, "", "createComment"], [425, 8, 1, "", "createElement"], [425, 8, 1, "", "createElementNS"], [425, 8, 1, "", "createProcessingInstruction"], [425, 8, 1, "", "createTextNode"], [425, 7, 1, "", "documentElement"], [425, 8, 1, "", "getElementsByTagName"], [425, 8, 1, "", "getElementsByTagNameNS"]], "xml.dom.DocumentType": [[425, 7, 1, "", "entities"], [425, 7, 1, "", "internalSubset"], [425, 7, 1, "", "name"], [425, 7, 1, "", "notations"], [425, 7, 1, "", "publicId"], [425, 7, 1, "", "systemId"]], "xml.dom.Element": [[425, 8, 1, "", "getAttribute"], [425, 8, 1, "", "getAttributeNS"], [425, 8, 1, "", "getAttributeNode"], [425, 8, 1, "", "getAttributeNodeNS"], [425, 8, 1, "", "getElementsByTagName"], [425, 8, 1, "", "getElementsByTagNameNS"], [425, 8, 1, "", "hasAttribute"], [425, 8, 1, "", "hasAttributeNS"], [425, 8, 1, "", "removeAttribute"], [425, 8, 1, "", "removeAttributeNS"], [425, 8, 1, "", "removeAttributeNode"], [425, 8, 1, "", "setAttribute"], [425, 8, 1, "", "setAttributeNS"], [425, 8, 1, "", "setAttributeNode"], [425, 8, 1, "", "setAttributeNodeNS"], [425, 7, 1, "", "tagName"]], "xml.dom.NamedNodeMap": [[425, 8, 1, "", "item"], [425, 7, 1, "", "length"]], "xml.dom.Node": [[425, 8, 1, "", "appendChild"], [425, 7, 1, "", "attributes"], [425, 7, 1, "", "childNodes"], [425, 8, 1, "", "cloneNode"], [425, 7, 1, "", "firstChild"], [425, 8, 1, "", "hasAttributes"], [425, 8, 1, "", "hasChildNodes"], [425, 8, 1, "", "insertBefore"], [425, 8, 1, "", "isSameNode"], [425, 7, 1, "", "lastChild"], [425, 7, 1, "", "localName"], [425, 7, 1, "", "namespaceURI"], [425, 7, 1, "", "nextSibling"], [425, 7, 1, "", "nodeName"], [425, 7, 1, "", "nodeType"], [425, 7, 1, "", "nodeValue"], [425, 8, 1, "", "normalize"], [425, 7, 1, "", "parentNode"], [425, 7, 1, "", "prefix"], [425, 7, 1, "", "previousSibling"], [425, 8, 1, "", "removeChild"], [425, 8, 1, "", "replaceChild"]], "xml.dom.NodeList": [[425, 8, 1, "", "item"], [425, 7, 1, "", "length"]], "xml.dom.ProcessingInstruction": [[425, 7, 1, "", "data"], [425, 7, 1, "", "target"]], "xml.dom.Text": [[425, 7, 1, "", "data"]], "xml.dom.minidom.Node": [[426, 8, 1, "", "toprettyxml"], [426, 8, 1, "", "toxml"], [426, 8, 1, "", "unlink"], [426, 8, 1, "", "writexml"]], "xml.dom.minidom": [[426, 12, 1, "", "parse"], [426, 12, 1, "", "parseString"]], "xml.dom.pulldom": [[427, 11, 1, "", "DOMEventStream"], [427, 11, 1, "", "PullDom"], [427, 11, 1, "", "SAX2DOM"], [427, 9, 1, "", "default_bufsize"], [427, 12, 1, "", "parse"], [427, 12, 1, "", "parseString"]], "xml.dom.pulldom.DOMEventStream": [[427, 8, 1, "", "expandNode"], [427, 8, 1, "", "getEvent"], [427, 8, 1, "", "reset"]], "xml.etree": [[428, 10, 0, "-", "ElementInclude"], [428, 10, 0, "-", "ElementTree"]], "xml.etree.ElementInclude": [[428, 12, 1, "", "default_loader"], [428, 12, 1, "", "include"]], "xml.etree.ElementTree": [[428, 11, 1, "", "C14NWriterTarget"], [428, 12, 1, "", "Comment"], [428, 11, 1, "", "Element"], [428, 11, 1, "", "ElementTree"], [428, 11, 1, "", "ParseError"], [428, 12, 1, "", "ProcessingInstruction"], [428, 11, 1, "", "QName"], [428, 12, 1, "", "SubElement"], [428, 11, 1, "", "TreeBuilder"], [428, 12, 1, "", "XML"], [428, 12, 1, "", "XMLID"], [428, 11, 1, "", "XMLParser"], [428, 11, 1, "", "XMLPullParser"], [428, 12, 1, "", "canonicalize"], [428, 12, 1, "", "dump"], [428, 12, 1, "", "fromstring"], [428, 12, 1, "", "fromstringlist"], [428, 12, 1, "", "indent"], [428, 12, 1, "", "iselement"], [428, 12, 1, "", "iterparse"], [428, 12, 1, "", "parse"], [428, 12, 1, "", "register_namespace"], [428, 12, 1, "", "tostring"], [428, 12, 1, "", "tostringlist"]], "xml.etree.ElementTree.Element": [[428, 8, 1, "", "append"], [428, 7, 1, "", "attrib"], [428, 8, 1, "", "clear"], [428, 8, 1, "", "extend"], [428, 8, 1, "", "find"], [428, 8, 1, "", "findall"], [428, 8, 1, "", "findtext"], [428, 8, 1, "", "get"], [428, 8, 1, "", "insert"], [428, 8, 1, "", "items"], [428, 8, 1, "", "iter"], [428, 8, 1, "", "iterfind"], [428, 8, 1, "", "itertext"], [428, 8, 1, "", "keys"], [428, 8, 1, "", "makeelement"], [428, 8, 1, "", "remove"], [428, 8, 1, "", "set"], [428, 7, 1, "", "tag"], [428, 7, 1, "", "tail"], [428, 7, 1, "", "text"]], "xml.etree.ElementTree.ElementTree": [[428, 8, 1, "", "_setroot"], [428, 8, 1, "", "find"], [428, 8, 1, "", "findall"], [428, 8, 1, "", "findtext"], [428, 8, 1, "", "getroot"], [428, 8, 1, "", "iter"], [428, 8, 1, "", "iterfind"], [428, 8, 1, "", "parse"], [428, 8, 1, "", "write"]], "xml.etree.ElementTree.ParseError": [[428, 7, 1, "", "code"], [428, 7, 1, "", "position"]], "xml.etree.ElementTree.TreeBuilder": [[428, 8, 1, "", "close"], [428, 8, 1, "", "comment"], [428, 8, 1, "", "data"], [428, 8, 1, "", "doctype"], [428, 8, 1, "", "end"], [428, 8, 1, "", "end_ns"], [428, 8, 1, "", "pi"], [428, 8, 1, "", "start"], [428, 8, 1, "", "start_ns"]], "xml.etree.ElementTree.XMLParser": [[428, 8, 1, "", "close"], [428, 8, 1, "", "feed"], [428, 8, 1, "", "flush"]], "xml.etree.ElementTree.XMLPullParser": [[428, 8, 1, "", "close"], [428, 8, 1, "", "feed"], [428, 8, 1, "", "flush"], [428, 8, 1, "", "read_events"]], "xml.parsers": [[329, 10, 0, "-", "expat"]], "xml.parsers.expat": [[329, 12, 1, "", "ErrorString"], [329, 6, 1, "", "ExpatError"], [329, 12, 1, "", "ParserCreate"], [329, 9, 1, "", "XMLParserType"], [329, 6, 1, "", "error"], [329, 10, 0, "-", "errors"], [329, 10, 0, "-", "model"]], "xml.parsers.expat.ExpatError": [[329, 7, 1, "", "code"], [329, 7, 1, "", "lineno"], [329, 7, 1, "", "offset"]], "xml.parsers.expat.errors": [[329, 9, 1, "", "XML_ERROR_ABORTED"], [329, 9, 1, "", "XML_ERROR_AMPLIFICATION_LIMIT_BREACH"], [329, 9, 1, "", "XML_ERROR_ASYNC_ENTITY"], [329, 9, 1, "", "XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF"], [329, 9, 1, "", "XML_ERROR_BAD_CHAR_REF"], [329, 9, 1, "", "XML_ERROR_BINARY_ENTITY_REF"], [329, 9, 1, "", "XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING"], [329, 9, 1, "", "XML_ERROR_DUPLICATE_ATTRIBUTE"], [329, 9, 1, "", "XML_ERROR_ENTITY_DECLARED_IN_PE"], [329, 9, 1, "", "XML_ERROR_EXTERNAL_ENTITY_HANDLING"], [329, 9, 1, "", "XML_ERROR_FEATURE_REQUIRES_XML_DTD"], [329, 9, 1, "", "XML_ERROR_FINISHED"], [329, 9, 1, "", "XML_ERROR_INCOMPLETE_PE"], [329, 9, 1, "", "XML_ERROR_INCORRECT_ENCODING"], [329, 9, 1, "", "XML_ERROR_INVALID_ARGUMENT"], [329, 9, 1, "", "XML_ERROR_INVALID_TOKEN"], [329, 9, 1, "", "XML_ERROR_JUNK_AFTER_DOC_ELEMENT"], [329, 9, 1, "", "XML_ERROR_MISPLACED_XML_PI"], [329, 9, 1, "", "XML_ERROR_NOT_STANDALONE"], [329, 9, 1, "", "XML_ERROR_NOT_SUSPENDED"], [329, 9, 1, "", "XML_ERROR_NO_BUFFER"], [329, 9, 1, "", "XML_ERROR_NO_ELEMENTS"], [329, 9, 1, "", "XML_ERROR_NO_MEMORY"], [329, 9, 1, "", "XML_ERROR_PARAM_ENTITY_REF"], [329, 9, 1, "", "XML_ERROR_PARTIAL_CHAR"], [329, 9, 1, "", "XML_ERROR_PUBLICID"], [329, 9, 1, "", "XML_ERROR_RECURSIVE_ENTITY_REF"], [329, 9, 1, "", "XML_ERROR_RESERVED_NAMESPACE_URI"], [329, 9, 1, "", "XML_ERROR_RESERVED_PREFIX_XML"], [329, 9, 1, "", "XML_ERROR_RESERVED_PREFIX_XMLNS"], [329, 9, 1, "", "XML_ERROR_SUSPENDED"], [329, 9, 1, "", "XML_ERROR_SUSPEND_PE"], [329, 9, 1, "", "XML_ERROR_SYNTAX"], [329, 9, 1, "", "XML_ERROR_TAG_MISMATCH"], [329, 9, 1, "", "XML_ERROR_TEXT_DECL"], [329, 9, 1, "", "XML_ERROR_UNBOUND_PREFIX"], [329, 9, 1, "", "XML_ERROR_UNCLOSED_CDATA_SECTION"], [329, 9, 1, "", "XML_ERROR_UNCLOSED_TOKEN"], [329, 9, 1, "", "XML_ERROR_UNDECLARING_PREFIX"], [329, 9, 1, "", "XML_ERROR_UNDEFINED_ENTITY"], [329, 9, 1, "", "XML_ERROR_UNEXPECTED_STATE"], [329, 9, 1, "", "XML_ERROR_UNKNOWN_ENCODING"], [329, 9, 1, "", "XML_ERROR_XML_DECL"], [329, 9, 1, "", "codes"], [329, 9, 1, "", "messages"]], "xml.parsers.expat.xmlparser": [[329, 8, 1, "", "AttlistDeclHandler"], [329, 8, 1, "", "CharacterDataHandler"], [329, 8, 1, "", "CommentHandler"], [329, 7, 1, "", "CurrentByteIndex"], [329, 7, 1, "", "CurrentColumnNumber"], [329, 7, 1, "", "CurrentLineNumber"], [329, 8, 1, "", "DefaultHandler"], [329, 8, 1, "", "DefaultHandlerExpand"], [329, 8, 1, "", "ElementDeclHandler"], [329, 8, 1, "", "EndCdataSectionHandler"], [329, 8, 1, "", "EndDoctypeDeclHandler"], [329, 8, 1, "", "EndElementHandler"], [329, 8, 1, "", "EndNamespaceDeclHandler"], [329, 8, 1, "", "EntityDeclHandler"], [329, 7, 1, "", "ErrorByteIndex"], [329, 7, 1, "", "ErrorCode"], [329, 7, 1, "", "ErrorColumnNumber"], [329, 7, 1, "", "ErrorLineNumber"], [329, 8, 1, "", "ExternalEntityParserCreate"], [329, 8, 1, "", "ExternalEntityRefHandler"], [329, 8, 1, "", "GetBase"], [329, 8, 1, "", "GetInputContext"], [329, 8, 1, "", "GetReparseDeferralEnabled"], [329, 8, 1, "", "NotStandaloneHandler"], [329, 8, 1, "", "NotationDeclHandler"], [329, 8, 1, "", "Parse"], [329, 8, 1, "", "ParseFile"], [329, 8, 1, "", "ProcessingInstructionHandler"], [329, 8, 1, "", "SetBase"], [329, 8, 1, "", "SetParamEntityParsing"], [329, 8, 1, "", "SetReparseDeferralEnabled"], [329, 8, 1, "", "StartCdataSectionHandler"], [329, 8, 1, "", "StartDoctypeDeclHandler"], [329, 8, 1, "", "StartElementHandler"], [329, 8, 1, "", "StartNamespaceDeclHandler"], [329, 8, 1, "", "UnparsedEntityDeclHandler"], [329, 8, 1, "", "UseForeignDTD"], [329, 8, 1, "", "XmlDeclHandler"], [329, 7, 1, "", "buffer_size"], [329, 7, 1, "", "buffer_text"], [329, 7, 1, "", "buffer_used"], [329, 7, 1, "", "ordered_attributes"], [329, 7, 1, "", "specified_attributes"]], "xml.sax": [[429, 6, 1, "", "SAXException"], [429, 6, 1, "", "SAXNotRecognizedException"], [429, 6, 1, "", "SAXNotSupportedException"], [429, 6, 1, "", "SAXParseException"], [430, 10, 0, "-", "handler"], [429, 12, 1, "", "make_parser"], [429, 12, 1, "", "parse"], [429, 12, 1, "", "parseString"], [432, 10, 0, "-", "saxutils"], [431, 10, 0, "-", "xmlreader"]], "xml.sax.SAXException": [[429, 8, 1, "", "getException"], [429, 8, 1, "", "getMessage"]], "xml.sax.handler": [[430, 11, 1, "", "ContentHandler"], [430, 11, 1, "", "DTDHandler"], [430, 11, 1, "", "EntityResolver"], [430, 11, 1, "", "ErrorHandler"], [430, 11, 1, "", "LexicalHandler"], [430, 9, 1, "", "all_features"], [430, 9, 1, "", "all_properties"], [430, 9, 1, "", "feature_external_ges"], [430, 9, 1, "", "feature_external_pes"], [430, 9, 1, "", "feature_namespace_prefixes"], [430, 9, 1, "", "feature_namespaces"], [430, 9, 1, "", "feature_string_interning"], [430, 9, 1, "", "feature_validation"], [430, 9, 1, "", "property_declaration_handler"], [430, 9, 1, "", "property_dom_node"], [430, 9, 1, "", "property_lexical_handler"], [430, 9, 1, "", "property_xml_string"]], "xml.sax.handler.ContentHandler": [[430, 8, 1, "", "characters"], [430, 8, 1, "", "endDocument"], [430, 8, 1, "", "endElement"], [430, 8, 1, "", "endElementNS"], [430, 8, 1, "", "endPrefixMapping"], [430, 8, 1, "", "ignorableWhitespace"], [430, 8, 1, "", "processingInstruction"], [430, 8, 1, "", "setDocumentLocator"], [430, 8, 1, "", "skippedEntity"], [430, 8, 1, "", "startDocument"], [430, 8, 1, "", "startElement"], [430, 8, 1, "", "startElementNS"], [430, 8, 1, "", "startPrefixMapping"]], "xml.sax.handler.DTDHandler": [[430, 8, 1, "", "notationDecl"], [430, 8, 1, "", "unparsedEntityDecl"]], "xml.sax.handler.EntityResolver": [[430, 8, 1, "", "resolveEntity"]], "xml.sax.handler.ErrorHandler": [[430, 8, 1, "", "error"], [430, 8, 1, "", "fatalError"], [430, 8, 1, "", "warning"]], "xml.sax.handler.LexicalHandler": [[430, 8, 1, "", "comment"], [430, 8, 1, "", "endCDATA"], [430, 8, 1, "", "endDTD"], [430, 8, 1, "", "startCDATA"], [430, 8, 1, "", "startDTD"]], "xml.sax.saxutils": [[432, 11, 1, "", "XMLFilterBase"], [432, 11, 1, "", "XMLGenerator"], [432, 12, 1, "", "escape"], [432, 12, 1, "", "prepare_input_source"], [432, 12, 1, "", "quoteattr"], [432, 12, 1, "", "unescape"]], "xml.sax.xmlreader.Attributes": [[431, 8, 1, "", "getLength"], [431, 8, 1, "", "getNames"], [431, 8, 1, "", "getType"], [431, 8, 1, "", "getValue"]], "xml.sax.xmlreader": [[431, 11, 1, "", "AttributesImpl"], [431, 11, 1, "", "AttributesNSImpl"], [431, 11, 1, "", "IncrementalParser"], [431, 11, 1, "", "InputSource"], [431, 11, 1, "", "Locator"], [431, 11, 1, "", "XMLReader"]], "xml.sax.xmlreader.AttributesNS": [[431, 8, 1, "", "getNameByQName"], [431, 8, 1, "", "getQNameByName"], [431, 8, 1, "", "getQNames"], [431, 8, 1, "", "getValueByQName"]], "xml.sax.xmlreader.IncrementalParser": [[431, 8, 1, "", "close"], [431, 8, 1, "", "feed"], [431, 8, 1, "", "reset"]], "xml.sax.xmlreader.InputSource": [[431, 8, 1, "", "getByteStream"], [431, 8, 1, "", "getCharacterStream"], [431, 8, 1, "", "getEncoding"], [431, 8, 1, "", "getPublicId"], [431, 8, 1, "", "getSystemId"], [431, 8, 1, "", "setByteStream"], [431, 8, 1, "", "setCharacterStream"], [431, 8, 1, "", "setEncoding"], [431, 8, 1, "", "setPublicId"], [431, 8, 1, "", "setSystemId"]], "xml.sax.xmlreader.Locator": [[431, 8, 1, "", "getColumnNumber"], [431, 8, 1, "", "getLineNumber"], [431, 8, 1, "", "getPublicId"], [431, 8, 1, "", "getSystemId"]], "xml.sax.xmlreader.XMLReader": [[431, 8, 1, "", "getContentHandler"], [431, 8, 1, "", "getDTDHandler"], [431, 8, 1, "", "getEntityResolver"], [431, 8, 1, "", "getErrorHandler"], [431, 8, 1, "", "getFeature"], [431, 8, 1, "", "getProperty"], [431, 8, 1, "", "parse"], [431, 8, 1, "", "setContentHandler"], [431, 8, 1, "", "setDTDHandler"], [431, 8, 1, "", "setEntityResolver"], [431, 8, 1, "", "setErrorHandler"], [431, 8, 1, "", "setFeature"], [431, 8, 1, "", "setLocale"], [431, 8, 1, "", "setProperty"]], "xmlrpc": [[434, 10, 0, "-", "client"], [435, 10, 0, "-", "server"]], "xmlrpc.client": [[434, 11, 1, "", "Binary"], [434, 11, 1, "", "DateTime"], [434, 11, 1, "", "Fault"], [434, 11, 1, "", "MultiCall"], [434, 11, 1, "", "ProtocolError"], [434, 11, 1, "", "ServerProxy"], [434, 12, 1, "", "dumps"], [434, 12, 1, "", "loads"]], "xmlrpc.client.Binary": [[434, 7, 1, "", "data"], [434, 8, 1, "", "decode"], [434, 8, 1, "", "encode"]], "xmlrpc.client.DateTime": [[434, 8, 1, "", "decode"], [434, 8, 1, "", "encode"]], "xmlrpc.client.Fault": [[434, 7, 1, "", "faultCode"], [434, 7, 1, "", "faultString"]], "xmlrpc.client.ProtocolError": [[434, 7, 1, "", "errcode"], [434, 7, 1, "", "errmsg"], [434, 7, 1, "", "headers"], [434, 7, 1, "", "url"]], "xmlrpc.client.ServerProxy.system": [[434, 8, 1, "", "listMethods"], [434, 8, 1, "", "methodHelp"], [434, 8, 1, "", "methodSignature"]], "xmlrpc.server": [[435, 11, 1, "", "CGIXMLRPCRequestHandler"], [435, 11, 1, "", "DocCGIXMLRPCRequestHandler"], [435, 11, 1, "", "DocXMLRPCRequestHandler"], [435, 11, 1, "", "DocXMLRPCServer"], [435, 11, 1, "", "SimpleXMLRPCRequestHandler"], [435, 11, 1, "", "SimpleXMLRPCServer"]], "xmlrpc.server.CGIXMLRPCRequestHandler": [[435, 8, 1, "", "handle_request"], [435, 8, 1, "", "register_function"], [435, 8, 1, "", "register_instance"], [435, 8, 1, "", "register_introspection_functions"], [435, 8, 1, "", "register_multicall_functions"]], "xmlrpc.server.DocCGIXMLRPCRequestHandler": [[435, 8, 1, "", "set_server_documentation"], [435, 8, 1, "", "set_server_name"], [435, 8, 1, "", "set_server_title"]], "xmlrpc.server.DocXMLRPCServer": [[435, 8, 1, "", "set_server_documentation"], [435, 8, 1, "", "set_server_name"], [435, 8, 1, "", "set_server_title"]], "xmlrpc.server.SimpleXMLRPCRequestHandler": [[435, 7, 1, "", "rpc_paths"]], "xmlrpc.server.SimpleXMLRPCServer": [[435, 8, 1, "", "register_function"], [435, 8, 1, "", "register_instance"], [435, 8, 1, "", "register_introspection_functions"], [435, 8, 1, "", "register_multicall_functions"]], "zipapp": [[436, 12, 1, "", "create_archive"], [436, 12, 1, "", "get_interpreter"], [436, 14, 1, "cmdoption-zipapp-c", "--compress"], [436, 14, 1, "cmdoption-zipapp-h", "--help"], [436, 14, 1, "cmdoption-zipapp-info", "--info"], [436, 14, 1, "cmdoption-zipapp-m", "--main"], [436, 14, 1, "cmdoption-zipapp-o", "--output"], [436, 14, 1, "cmdoption-zipapp-p", "--python"], [436, 14, 1, "cmdoption-zipapp-c", "-c"], [436, 14, 1, "cmdoption-zipapp-h", "-h"], [436, 14, 1, "cmdoption-zipapp-m", "-m"], [436, 14, 1, "cmdoption-zipapp-o", "-o"], [436, 14, 1, "cmdoption-zipapp-p", "-p"]], "zipfile": [[437, 6, 1, "", "BadZipFile"], [437, 6, 1, "", "BadZipfile"], [437, 6, 1, "", "LargeZipFile"], [437, 11, 1, "", "Path"], [437, 11, 1, "", "PyZipFile"], [437, 9, 1, "", "ZIP_BZIP2"], [437, 9, 1, "", "ZIP_DEFLATED"], [437, 9, 1, "", "ZIP_LZMA"], [437, 9, 1, "", "ZIP_STORED"], [437, 11, 1, "", "ZipFile"], [437, 11, 1, "", "ZipInfo"], [437, 12, 1, "", "is_zipfile"], [437, 14, 1, "cmdoption-zipfile-create", "--create"], [437, 14, 1, "cmdoption-zipfile-extract", "--extract"], [437, 14, 1, "cmdoption-zipfile-list", "--list"], [437, 14, 1, "cmdoption-zipfile-metadata-encoding", "--metadata-encoding"], [437, 14, 1, "cmdoption-zipfile-test", "--test"], [437, 14, 1, "cmdoption-zipfile-c", "-c"], [437, 14, 1, "cmdoption-zipfile-e", "-e"], [437, 14, 1, "cmdoption-zipfile-l", "-l"], [437, 14, 1, "cmdoption-zipfile-t", "-t"]], "zipfile.Path": [[437, 8, 1, "", "exists"], [437, 8, 1, "", "is_dir"], [437, 8, 1, "", "is_file"], [437, 8, 1, "", "iterdir"], [437, 8, 1, "", "joinpath"], [437, 7, 1, "", "name"], [437, 8, 1, "", "open"], [437, 8, 1, "", "read_bytes"], [437, 8, 1, "", "read_text"], [437, 9, 1, "", "stem"], [437, 9, 1, "", "suffix"], [437, 9, 1, "", "suffixes"]], "zipfile.PyZipFile": [[437, 8, 1, "", "writepy"]], "zipfile.ZipFile": [[437, 8, 1, "", "close"], [437, 7, 1, "", "comment"], [437, 7, 1, "", "debug"], [437, 8, 1, "", "extract"], [437, 8, 1, "", "extractall"], [437, 7, 1, "", "filename"], [437, 8, 1, "", "getinfo"], [437, 8, 1, "", "infolist"], [437, 8, 1, "", "mkdir"], [437, 8, 1, "", "namelist"], [437, 8, 1, "", "open"], [437, 8, 1, "", "printdir"], [437, 8, 1, "", "read"], [437, 8, 1, "", "setpassword"], [437, 8, 1, "", "testzip"], [437, 8, 1, "", "write"], [437, 8, 1, "", "writestr"]], "zipfile.ZipInfo": [[437, 7, 1, "", "CRC"], [437, 7, 1, "", "comment"], [437, 7, 1, "", "compress_size"], [437, 7, 1, "", "compress_type"], [437, 7, 1, "", "create_system"], [437, 7, 1, "", "create_version"], [437, 7, 1, "", "date_time"], [437, 7, 1, "", "external_attr"], [437, 7, 1, "", "extra"], [437, 7, 1, "", "extract_version"], [437, 7, 1, "", "file_size"], [437, 7, 1, "", "filename"], [437, 7, 1, "", "flag_bits"], [437, 8, 1, "", "from_file"], [437, 7, 1, "", "header_offset"], [437, 7, 1, "", "internal_attr"], [437, 8, 1, "", "is_dir"], [437, 7, 1, "", "reserved"], [437, 7, 1, "", "volume"]], "zipimport": [[438, 6, 1, "", "ZipImportError"], [438, 11, 1, "", "zipimporter"]], "zipimport.zipimporter": [[438, 7, 1, "", "archive"], [438, 8, 1, "", "create_module"], [438, 8, 1, "", "exec_module"], [438, 8, 1, "", "find_loader"], [438, 8, 1, "", "find_module"], [438, 8, 1, "", "find_spec"], [438, 8, 1, "", "get_code"], [438, 8, 1, "", "get_data"], [438, 8, 1, "", "get_filename"], [438, 8, 1, "", "get_source"], [438, 8, 1, "", "invalidate_caches"], [438, 8, 1, "", "is_package"], [438, 8, 1, "", "load_module"], [438, 7, 1, "", "prefix"]], "zlib.Compress": [[439, 8, 1, "", "compress"], [439, 8, 1, "", "copy"], [439, 8, 1, "", "flush"]], "zlib.Decompress": [[439, 8, 1, "", "copy"], [439, 8, 1, "", "decompress"], [439, 7, 1, "", "eof"], [439, 8, 1, "", "flush"], [439, 7, 1, "", "unconsumed_tail"], [439, 7, 1, "", "unused_data"]], "zlib": [[439, 9, 1, "", "ZLIB_RUNTIME_VERSION"], [439, 9, 1, "", "ZLIB_VERSION"], [439, 12, 1, "", "adler32"], [439, 12, 1, "", "compress"], [439, 12, 1, "", "compressobj"], [439, 12, 1, "", "crc32"], [439, 12, 1, "", "decompress"], [439, 12, 1, "", "decompressobj"], [439, 6, 1, "", "error"]], "zoneinfo": [[440, 6, 1, "", "InvalidTZPathWarning"], [440, 9, 1, "", "TZPATH"], [440, 11, 1, "", "ZoneInfo"], [440, 6, 1, "", "ZoneInfoNotFoundError"], [440, 12, 1, "", "available_timezones"], [440, 12, 1, "", "reset_tzpath"]], "zoneinfo.ZoneInfo": [[440, 8, 1, "", "clear_cache"], [440, 8, 1, "", "from_file"], [440, 7, 1, "", "key"], [440, 8, 1, "", "no_cache"]], "json.tool": [[277, 14, 1, "cmdoption-json.tool-indent", "--compact"], [277, 14, 1, "cmdoption-json.tool-h", "--help"], [277, 14, 1, "cmdoption-json.tool-indent", "--indent"], [277, 14, 1, "cmdoption-json.tool-json-lines", "--json-lines"], [277, 14, 1, "cmdoption-json.tool-no-ensure-ascii", "--no-ensure-ascii"], [277, 14, 1, "cmdoption-json.tool-indent", "--no-indent"], [277, 14, 1, "cmdoption-json.tool-sort-keys", "--sort-keys"], [277, 14, 1, "cmdoption-json.tool-indent", "--tab"], [277, 14, 1, "cmdoption-json.tool-h", "-h"], [277, 14, 1, "cmdoption-json.tool-arg-infile", "infile"], [277, 14, 1, "cmdoption-json.tool-arg-outfile", "outfile"]], "python--m-py_compile": [[326, 14, 1, "cmdoption-python-m-py_compile", "-"], [326, 14, 1, "cmdoption-python-m-py_compile-q", "--quiet"], [326, 14, 1, "cmdoption-python-m-py_compile-q", "-q"], [326, 14, 1, "cmdoption-python-m-py_compile-arg-file", "&lt;file&gt;"]], "unittest-discover": [[403, 14, 1, "cmdoption-unittest-discover-p", "--pattern"], [403, 14, 1, "cmdoption-unittest-discover-s", "--start-directory"], [403, 14, 1, "cmdoption-unittest-discover-t", "--top-level-directory"], [403, 14, 1, "cmdoption-unittest-discover-v", "--verbose"], [403, 14, 1, "cmdoption-unittest-discover-p", "-p"], [403, 14, 1, "cmdoption-unittest-discover-s", "-s"], [403, 14, 1, "cmdoption-unittest-discover-t", "-t"], [403, 14, 1, "cmdoption-unittest-discover-v", "-v"]]}, "objtypes": {"0": "c:member", "1": "c:macro", "2": "c:function", "3": "c:functionParam", "4": "c:type", "5": "c:struct", "6": "py:exception", "7": "py:attribute", "8": "py:method", "9": "py:data", "10": "py:module", "11": "py:class", "12": "py:function", "13": "std:pdbcommand", "14": "std:cmdoption", "15": "std:opcode", "16": "std:envvar", "17": "std:2to3fixer"}, "objnames": {"0": ["c", "member", "C member"], "1": ["c", "macro", "C macro"], "2": ["c", "function", "C function"], "3": ["c", "functionParam", "C function parameter"], "4": ["c", "type", "C type"], "5": ["c", "struct", "C struct"], "6": ["py", "exception", "Python exception"], "7": ["py", "attribute", "Python attribute"], "8": ["py", "method", "Python method"], "9": ["py", "data", "Python data"], "10": ["py", "module", "Python module"], "11": ["py", "class", "Python class"], "12": ["py", "function", "Python function"], "13": ["std", "pdbcommand", "pdbcommand"], "14": ["std", "cmdoption", "program option"], "15": ["std", "opcode", "opcode"], "16": ["std", "envvar", "environment variable"], "17": ["std", "2to3fixer", "2to3fixer"]}, "titleterms": {"about": [0, 33, 92, 97, 164, 207, 455, 477, 488], "document": [0, 1, 67, 92, 96, 107, 215, 328, 425, 428, 435, 441, 456, 483, 484, 489, 490, 491, 494, 495], "contributor": 0, "python": [0, 1, 15, 32, 33, 34, 35, 42, 67, 69, 71, 75, 77, 78, 79, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 107, 108, 109, 112, 115, 119, 121, 122, 123, 125, 171, 172, 176, 189, 193, 201, 204, 206, 207, 228, 269, 278, 279, 281, 282, 289, 308, 312, 314, 323, 326, 327, 330, 339, 345, 348, 356, 369, 370, 373, 377, 382, 384, 392, 393, 395, 399, 436, 441, 448, 452, 453, 455, 460, 463, 464, 465, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "deal": [1, 114], "bug": [1, 33, 92, 97, 391], "us": [1, 35, 89, 90, 91, 92, 96, 97, 106, 108, 111, 113, 114, 116, 117, 120, 121, 123, 148, 164, 176, 182, 210, 249, 285, 294, 297, 298, 311, 323, 329, 341, 356, 364, 370, 377, 380, 390, 391, 392, 399, 403, 405, 410, 440, 441, 443, 457, 463, 464, 470, 474, 475, 476, 482, 483, 488, 490, 495], "issu": [1, 23, 112, 122, 228, 373, 459, 476, 483], "tracker": [1, 483], "get": [1, 90, 92, 93, 96, 97, 101, 111, 144, 148, 397, 399, 405, 474, 475, 476], "start": [1, 98, 104, 180, 199, 298, 399, 404, 405, 476], "contribut": 1, "yourself": 1, "abstract": [2, 71, 87, 100, 104, 105, 112, 116, 117, 127, 133, 174, 265, 268, 304, 483], "object": [2, 3, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 35, 37, 38, 39, 42, 43, 44, 45, 46, 49, 50, 54, 55, 57, 59, 60, 61, 62, 63, 66, 87, 91, 96, 97, 100, 105, 106, 111, 112, 113, 114, 131, 138, 141, 144, 151, 161, 168, 170, 171, 173, 179, 180, 188, 190, 192, 196, 199, 203, 207, 217, 220, 222, 237, 240, 249, 256, 257, 258, 262, 270, 274, 277, 282, 283, 286, 289, 291, 296, 298, 301, 303, 308, 310, 311, 314, 316, 320, 322, 327, 329, 331, 334, 336, 340, 343, 345, 346, 350, 351, 353, 354, 356, 357, 359, 360, 364, 365, 373, 374, 380, 396, 399, 401, 404, 405, 410, 413, 416, 417, 418, 420, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 443, 455, 461, 480, 481, 483, 484, 488, 490, 491], "layer": [2, 16, 65, 120, 492], "alloc": [3, 33, 42, 60, 87, 397, 480, 491], "heap": [3, 60, 62, 112, 250], "api": [4, 5, 8, 10, 14, 30, 32, 33, 34, 42, 56, 63, 71, 85, 98, 106, 108, 126, 135, 136, 138, 142, 180, 207, 210, 221, 224, 244, 266, 314, 356, 360, 364, 397, 414, 425, 428, 436, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "abi": [4, 56, 487, 489, 495], "version": [4, 71, 77, 92, 100, 111, 121, 122, 266, 307, 357, 373, 415, 475, 476, 489], "pars": [5, 131, 221, 307, 319, 329, 346, 392, 394, 409, 428, 484, 487, 489, 494, 495, 496], "argument": [5, 97, 101, 102, 131, 189, 307, 308, 364, 405, 443, 456, 463, 466, 476, 491, 493], "build": [5, 35, 71, 83, 85, 89, 108, 121, 206, 401, 427, 428, 471, 475, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "valu": [5, 85, 91, 96, 97, 106, 107, 131, 132, 180, 189, 194, 199, 277, 307, 333, 356, 360, 405, 420, 442, 443, 445, 456], "string": [5, 18, 63, 90, 96, 97, 106, 116, 119, 274, 307, 334, 360, 361, 362, 363, 364, 440, 450, 456, 461, 466, 477, 480, 481, 483, 485, 488, 490, 493, 494, 495, 496], "buffer": [5, 7, 48, 62, 114, 145, 273, 314, 335, 483, 490, 495], "number": [5, 15, 47, 62, 71, 92, 96, 97, 120, 167, 182, 235, 277, 290, 304, 308, 333, 341, 443, 464, 483, 487], "other": [5, 16, 71, 80, 88, 90, 91, 96, 97, 106, 111, 114, 131, 151, 274, 297, 307, 314, 341, 353, 360, 370, 401, 450, 457, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "function": [5, 7, 8, 14, 16, 25, 27, 45, 57, 58, 63, 71, 85, 90, 91, 97, 105, 106, 107, 112, 116, 118, 131, 133, 141, 163, 164, 167, 173, 176, 179, 182, 185, 186, 189, 190, 192, 194, 204, 238, 239, 240, 246, 265, 266, 267, 270, 274, 276, 282, 283, 290, 297, 303, 306, 314, 322, 327, 333, 334, 338, 341, 353, 356, 357, 359, 360, 361, 363, 364, 368, 370, 375, 381, 397, 398, 399, 400, 401, 403, 405, 415, 420, 428, 434, 440, 441, 442, 443, 445, 456, 465, 477, 478, 481, 482, 483, 485, 488, 490, 492, 493, 494], "boolean": [6, 106, 307, 360, 445, 480], "protocol": [7, 10, 36, 40, 47, 48, 49, 53, 87, 105, 112, 142, 145, 180, 237, 256, 262, 271, 303, 320, 351, 357, 401, 403, 447, 483, 490, 492, 493, 495], "structur": [7, 15, 57, 62, 114, 180, 189, 246, 288, 401, 409, 444, 450, 457, 461, 487], "request": [7, 354, 408, 410, 493], "type": [7, 8, 35, 57, 60, 61, 62, 63, 76, 87, 88, 90, 106, 107, 112, 119, 131, 189, 194, 195, 196, 225, 263, 270, 291, 304, 307, 314, 352, 356, 360, 384, 390, 400, 401, 420, 422, 425, 443, 457, 479, 480, 481, 482, 483, 487, 488, 490, 491, 492, 493, 494, 495, 496], "independ": [7, 481], "field": [7, 173, 189, 194, 401, 487], "readonli": 7, "format": [7, 18, 113, 114, 188, 196, 231, 261, 283, 286, 298, 314, 360, 361, 363, 373, 436, 461, 467, 483, 484, 485, 486, 492, 493], "shape": [7, 399], "stride": 7, "suboffset": 7, "contigu": 7, "compound": [7, 399, 442], "complex": [7, 15, 118, 167, 360, 405, 443, 487], "arrai": [7, 8, 97, 132, 160, 189, 277, 487, 490, 493], "numpi": 7, "style": [7, 71, 97, 114, 242, 245, 360, 376, 391, 456, 482], "pil": 7, "relat": [7, 81, 120, 163, 265, 359, 447, 475, 479, 487, 488], "byte": [8, 9, 119, 176, 189, 333, 341, 360, 363, 409, 450, 483, 492], "check": [8, 71, 75, 97, 98, 186, 207, 265, 307, 334, 405, 422, 443, 496], "macro": [8, 35, 57], "direct": [8, 207, 299, 401, 478], "call": [10, 85, 90, 91, 92, 97, 107, 189, 229, 307, 321, 404, 405, 441, 445, 488, 492, 495], "The": [10, 42, 46, 65, 71, 72, 79, 85, 88, 100, 101, 104, 107, 116, 119, 120, 131, 178, 229, 230, 244, 247, 265, 269, 270, 298, 304, 307, 312, 321, 323, 325, 355, 360, 369, 384, 399, 401, 404, 415, 424, 425, 428, 431, 436, 440, 442, 443, 445, 447, 448, 451, 453, 456, 457, 460, 461, 463, 465, 474, 476, 479, 480, 481, 482, 483, 484, 489], "tp_call": 10, "vectorcal": [10, 495], "recurs": [10, 23], "control": [10, 23, 28, 58, 88, 97, 133, 356, 376, 398, 399, 415, 418, 456, 466], "support": [10, 14, 28, 33, 41, 45, 50, 63, 87, 88, 90, 106, 107, 114, 119, 140, 143, 162, 164, 168, 180, 182, 183, 185, 225, 244, 248, 252, 271, 293, 321, 327, 357, 373, 377, 386, 401, 404, 427, 428, 429, 440, 477, 480, 483, 491, 492, 493, 494, 495, 496], "capsul": [11, 484], "cell": [12, 190], "code": [13, 33, 35, 90, 97, 115, 119, 120, 123, 125, 131, 137, 138, 170, 172, 196, 255, 261, 265, 270, 360, 382, 403, 415, 441, 443, 456, 463, 476, 480, 488, 489, 490, 491, 492, 496], "codec": [14, 63, 171, 480, 487, 489, 490, 491], "registri": [14, 171, 420, 476], "lookup": [14, 45, 105, 443], "unicod": [14, 23, 63, 119, 171, 373, 402, 477, 479, 480, 485, 489, 490], "encod": [14, 63, 119, 156, 171, 212, 273, 277, 332, 356, 409, 412, 423, 450, 463, 480, 487, 493], "error": [14, 23, 71, 85, 97, 98, 120, 138, 171, 199, 201, 213, 296, 307, 329, 373, 408, 453, 458, 459, 466, 480, 487, 488], "handler": [14, 96, 113, 114, 120, 134, 138, 152, 153, 171, 228, 282, 283, 284, 348, 354, 384, 422, 430], "c": [15, 32, 42, 45, 56, 71, 83, 84, 85, 89, 90, 91, 96, 97, 108, 121, 242, 471, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "concret": [16, 227, 311, 401], "fundament": [16, 189], "numer": [16, 96, 132, 304, 305, 360, 443, 450, 493], "sequenc": [16, 53, 59, 62, 97, 333, 360, 364, 442, 443, 450, 457], "contain": [16, 90, 131, 173, 174, 274, 401, 443], "context": [17, 114, 147, 182, 183, 199, 207, 227, 261, 298, 356, 357, 360, 405, 415, 443, 481, 482, 483, 487, 490], "variabl": [17, 33, 97, 113, 133, 182, 183, 189, 194, 237, 249, 307, 308, 370, 375, 384, 455, 470, 476, 484, 487, 493], "convers": [18, 112, 167, 175, 189, 274, 290, 360, 381, 394, 445, 481], "coroutin": [19, 137, 151, 270, 400, 442, 443, 492], "datetim": [20, 196, 434, 488, 489, 490, 493, 494, 495, 496], "descriptor": [21, 105, 138, 194, 201, 228, 308, 404, 443, 479, 491, 493], "dictionari": [22, 90, 114, 283, 360, 405, 443, 445, 457, 484, 486, 489, 490, 496], "except": [23, 35, 71, 85, 90, 97, 113, 114, 120, 131, 136, 137, 139, 146, 179, 180, 182, 207, 213, 227, 246, 274, 277, 286, 298, 307, 329, 334, 348, 353, 356, 357, 359, 363, 364, 405, 408, 423, 425, 428, 440, 442, 444, 458, 482, 483, 484, 485, 488, 490], "handl": [23, 93, 114, 120, 138, 147, 190, 208, 257, 287, 300, 307, 314, 356, 357, 403, 407, 420, 453, 458, 480, 483, 484, 491, 492], "print": [23, 91, 108, 131, 307, 396, 483, 485], "clear": 23, "rais": [23, 97, 113, 307, 405, 408, 451, 458], "warn": [23, 207, 227, 282, 377, 415, 440, 478, 484, 488, 493, 494], "queri": [23, 307, 308, 347, 356], "indic": 23, "signal": [23, 96, 138, 199, 228, 348, 403, 490, 492, 494, 496], "class": [23, 71, 90, 91, 97, 105, 106, 112, 114, 127, 131, 133, 170, 171, 174, 179, 194, 213, 227, 230, 244, 265, 268, 270, 273, 296, 298, 304, 314, 323, 327, 331, 344, 360, 363, 399, 400, 401, 403, 404, 405, 408, 410, 422, 430, 440, 442, 443, 450, 455, 479, 482, 483, 487, 488, 490, 493], "standard": [23, 35, 71, 97, 121, 171, 202, 226, 269, 277, 306, 307, 360, 363, 391, 400, 426, 443, 447, 465, 466, 467, 480, 488, 496], "categori": [23, 415], "file": [24, 35, 63, 71, 74, 80, 81, 91, 96, 97, 98, 113, 114, 119, 121, 128, 131, 138, 162, 180, 188, 201, 202, 207, 228, 230, 231, 233, 248, 249, 261, 265, 266, 273, 283, 285, 287, 293, 296, 297, 301, 308, 319, 321, 326, 335, 347, 352, 365, 369, 373, 375, 384, 390, 394, 405, 412, 416, 428, 437, 443, 452, 453, 461, 465, 466, 471, 475, 476, 480, 489, 491, 492, 493, 494, 495], "float": [25, 90, 199, 360, 443, 450, 459, 467, 481], "point": [25, 90, 106, 199, 266, 450, 459, 467], "pack": [25, 363], "unpack": [25, 423, 456, 492], "frame": [26, 397, 443, 488, 493], "cyclic": [28, 88], "garbag": [28, 88, 90, 112, 241, 477], "collect": [28, 88, 90, 112, 173, 174, 204, 401, 477, 484, 487, 489, 490, 491, 492, 493, 494, 495, 496], "collector": [28, 241], "state": [28, 33, 112, 228, 258, 270, 298, 314, 373, 391, 399], "gener": [29, 63, 78, 87, 90, 92, 93, 96, 97, 107, 129, 163, 215, 253, 270, 307, 311, 319, 328, 333, 341, 348, 357, 360, 367, 375, 377, 401, 405, 443, 445, 455, 470, 471, 479, 480, 481, 482, 488, 492, 493, 494, 496], "pyhash": 30, "import": [31, 97, 125, 133, 225, 264, 265, 266, 282, 283, 284, 295, 377, 384, 405, 438, 447, 451, 465, 478, 480, 481, 482, 483, 488, 490, 491], "modul": [31, 45, 69, 71, 73, 75, 77, 80, 83, 85, 91, 96, 97, 103, 104, 107, 111, 112, 114, 116, 118, 121, 122, 124, 164, 169, 179, 181, 186, 188, 194, 206, 224, 225, 237, 238, 244, 255, 265, 273, 274, 282, 294, 295, 298, 305, 311, 314, 321, 323, 327, 334, 339, 348, 349, 353, 356, 360, 364, 366, 369, 384, 399, 401, 403, 407, 424, 425, 433, 438, 443, 447, 453, 465, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "refer": [32, 35, 51, 62, 66, 71, 73, 85, 87, 92, 97, 107, 119, 189, 237, 298, 307, 323, 356, 384, 399, 417, 422, 428, 445, 447, 448, 465, 467, 478], "manual": [32, 100, 183, 323, 357, 384, 461], "initi": [33, 34, 45, 85, 369, 492, 495], "final": [33, 87, 182, 417, 442, 482, 491], "thread": [33, 90, 96, 114, 126, 138, 149, 151, 199, 273, 282, 348, 377, 380, 384, 467, 487, 488, 489, 490, 491, 492, 494, 495], "befor": [33, 92], "global": [33, 96, 97, 112, 314, 440, 451], "configur": [33, 34, 71, 74, 113, 114, 121, 180, 283, 349, 360, 370, 399, 440, 471, 474, 476, 484, 489, 495], "interpret": [33, 86, 90, 96, 112, 168, 170, 193, 270, 358, 363, 400, 436, 462, 463, 479, 482, 483, 484, 488], "process": [33, 58, 71, 112, 114, 138, 144, 194, 288, 298, 299, 301, 308, 357, 378, 424, 477, 483], "wide": 33, "paramet": [33, 85, 97, 114, 188, 189, 194, 308, 368, 384, 401, 456, 487, 495], "lock": [33, 96, 150, 380, 490], "releas": [33, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496], "gil": 33, "from": [33, 71, 85, 91, 96, 97, 98, 105, 108, 112, 114, 151, 167, 182, 189, 220, 227, 232, 297, 364, 399, 405, 437, 438, 465, 476, 480, 483], "extens": [33, 57, 71, 75, 80, 83, 85, 86, 87, 88, 89, 91, 96, 103, 108, 112, 121, 122, 192, 261, 281, 317, 390, 410, 471, 490, 492], "non": [33, 116, 117, 121, 277, 356, 357, 428, 491], "creat": [33, 60, 63, 71, 72, 73, 81, 86, 91, 92, 96, 97, 106, 107, 111, 114, 117, 131, 138, 149, 151, 220, 249, 276, 307, 353, 356, 405, 414, 436, 443, 468, 491], "caution": 33, "fork": 33, "high": [33, 65, 84, 135, 136, 273, 344, 347, 364], "level": [33, 45, 65, 84, 97, 113, 114, 116, 125, 126, 135, 136, 142, 164, 273, 274, 277, 282, 343, 344, 347, 353, 364, 452, 492], "low": [33, 45, 126, 135, 142, 353], "sub": [33, 62, 71, 131], "caveat": [33, 56, 281, 436], "asynchron": [33, 134, 135, 152, 348, 354, 401, 405, 441, 443, 445, 493], "notif": [33, 105], "profil": [33, 198, 323], "trace": [33, 395, 397, 441], "advanc": [33, 101, 113, 207, 483], "debugg": [33, 97, 157, 312], "local": [33, 63, 97, 108, 244, 281, 380, 476, 481, 487, 488, 492, 493, 494], "storag": [33, 494], "specif": [33, 78, 87, 90, 107, 171, 349, 361, 368, 391, 399, 406, 419, 420, 446, 480, 481, 482, 483, 484, 487], "tss": 33, "dynam": [33, 105, 189, 400, 444], "method": [33, 44, 57, 63, 85, 88, 90, 91, 96, 97, 105, 106, 112, 116, 131, 138, 142, 182, 186, 254, 255, 298, 303, 307, 311, 353, 356, 360, 399, 404, 405, 417, 425, 443, 445, 455, 461, 477, 481, 482, 485, 490, 492, 493, 494, 496], "tl": [33, 138, 357], "exampl": [34, 42, 62, 75, 78, 85, 88, 105, 110, 113, 114, 131, 134, 138, 145, 146, 148, 149, 152, 153, 160, 162, 168, 173, 174, 179, 180, 182, 185, 186, 188, 196, 201, 203, 207, 214, 228, 248, 249, 250, 254, 256, 257, 258, 262, 264, 265, 285, 286, 294, 298, 307, 314, 319, 320, 322, 324, 329, 333, 334, 335, 344, 345, 347, 348, 351, 353, 354, 357, 359, 361, 363, 371, 373, 374, 375, 376, 380, 382, 393, 394, 396, 397, 403, 405, 410, 413, 414, 417, 422, 426, 428, 434, 435, 436, 438, 445, 455, 456], "pywidestringlist": 34, "pystatu": 34, "pypreconfig": 34, "preiniti": 34, "pyconfig": 34, "isol": [34, 112], "path": [34, 121, 265, 309, 311, 369, 370, 437, 447, 465, 475, 476, 487, 493, 495], "py_runmain": 34, "py_getargcargv": 34, "multi": [34, 45, 273, 357, 467, 481, 489, 492], "phase": [34, 45, 492], "privat": [34, 140, 455], "provision": [34, 490], "introduct": [35, 78, 105, 107, 111, 116, 119, 120, 121, 164, 265, 272, 298, 323, 344, 399, 449, 464, 468, 477, 478, 479], "includ": [35, 466], "count": [35, 51, 85], "detail": [35, 111, 174, 196, 281, 283, 359], "embed": [35, 84, 86, 91, 369, 476, 477], "debug": [35, 42, 71, 80, 91, 107, 108, 137, 138, 164, 198, 207, 261, 470, 471, 484, 487, 495], "iter": [36, 37, 97, 106, 107, 218, 232, 274, 276, 360, 403, 405, 443, 445, 455, 479, 481, 485, 492], "list": [38, 80, 90, 92, 97, 107, 108, 111, 160, 335, 360, 445, 456, 457, 464, 467, 477, 483, 485], "integ": [39, 97, 274, 333, 360, 450, 479, 481, 483, 485], "map": [40, 62, 63, 180, 266, 291, 293, 306, 360, 425, 442, 443], "data": [41, 71, 80, 88, 90, 96, 97, 106, 107, 113, 117, 119, 120, 130, 148, 154, 156, 158, 166, 189, 194, 195, 225, 285, 300, 313, 314, 318, 322, 332, 363, 380, 384, 423, 440, 443, 457, 461, 466, 467, 476, 481, 485, 488, 495], "marshal": [41, 289, 314, 491], "memori": [42, 90, 285, 293, 299, 357, 360, 397, 488, 491, 492], "manag": [42, 87, 90, 105, 112, 114, 147, 165, 182, 183, 197, 211, 258, 298, 308, 341, 356, 360, 364, 384, 390, 405, 415, 436, 441, 443, 468, 482, 483, 487], "overview": [42, 84, 105, 111, 266, 273, 442, 485], "domain": [42, 171], "raw": [42, 63, 90, 97, 154, 273, 334], "interfac": [42, 56, 90, 91, 93, 96, 111, 164, 169, 197, 203, 204, 224, 241, 248, 270, 273, 274, 277, 302, 308, 314, 315, 316, 326, 335, 349, 353, 356, 373, 377, 382, 383, 384, 395, 403, 410, 421, 431, 436, 437, 466, 470, 489], "default": [42, 97, 131, 194, 307, 356, 357, 373, 404, 415, 437, 456, 476, 484, 491], "custom": [42, 105, 106, 113, 114, 121, 131, 140, 144, 180, 189, 193, 217, 274, 283, 285, 298, 314, 323, 356, 361, 443, 453, 475, 476, 491, 493, 494], "hook": [42, 265, 335, 349, 447, 478, 480, 495], "pymalloc": [42, 480], "arena": 42, "tracemalloc": [42, 397, 491, 493, 494, 496], "memoryview": [43, 360, 484, 490], "instanc": [44, 97, 105, 106, 111, 194, 211, 314, 360, 443, 455], "singl": [45, 71, 75, 96, 97, 114, 182], "creation": [45, 111, 308, 354, 357, 400, 414, 443, 493], "none": [46, 96, 443], "old": [48, 403, 461, 479], "implement": [50, 57, 90, 91, 96, 114, 138, 182, 197, 250, 265, 277, 304, 336, 422, 426, 443, 449, 488, 490, 491, 493, 494], "reflect": 52, "set": [54, 138, 144, 209, 261, 265, 348, 357, 360, 384, 399, 405, 443, 445, 457, 476, 480, 481], "slice": [55, 443, 445, 480], "ellipsi": [55, 360, 443], "stabil": [56, 118], "stabl": [56, 92, 487, 489], "applic": [56, 84, 86, 93, 96, 98, 104, 105, 114, 171, 244, 254, 261, 363, 436, 474, 476, 482, 492], "binari": [56, 71, 96, 97, 117, 122, 158, 159, 171, 273, 360, 363, 434, 445, 467], "limit": [56, 112, 277, 323, 337, 360, 437, 459, 476], "scope": [56, 112, 455, 478, 479], "perform": [56, 71, 96, 97, 116, 160, 273, 314, 466, 471, 485, 490], "platform": [56, 121, 143, 272, 318, 347, 391, 475, 476, 478, 487, 494], "consider": [56, 125, 156, 259, 283, 342, 357, 364, 447], "content": [56, 67, 90, 91, 92, 93, 96, 97, 98, 105, 124, 188, 194, 211, 225, 321, 329, 334, 348, 349, 353, 401, 405, 425], "common": [57, 96, 116, 122, 164, 196, 309, 321, 360, 361, 485], "base": [57, 71, 97, 114, 121, 127, 145, 170, 171, 174, 227, 244, 265, 268, 273, 298, 304, 380, 422, 430, 447, 483, 484, 489, 494], "access": [57, 63, 91, 96, 100, 106, 112, 180, 189, 233, 264, 266, 267, 280, 281, 283, 299, 310, 311, 318, 367, 370, 381, 420, 434, 441, 443, 466, 479, 494], "attribut": [57, 87, 88, 90, 97, 104, 105, 106, 114, 186, 249, 270, 282, 303, 307, 308, 360, 368, 404, 405, 431, 443, 445, 447, 478, 479, 493, 494], "oper": [58, 71, 90, 97, 107, 118, 129, 184, 240, 246, 257, 274, 297, 304, 306, 308, 311, 334, 347, 357, 360, 361, 445, 450, 466, 479, 485, 487, 488, 490, 491, 492, 496], "system": [58, 63, 71, 84, 91, 122, 129, 164, 175, 226, 229, 308, 321, 328, 364, 368, 437, 447, 466, 471, 478, 490, 491, 492, 493], "util": [58, 64, 71, 131, 182, 189, 191, 223, 225, 265, 303, 317, 324, 377, 400, 422, 432, 488], "tupl": [59, 90, 91, 97, 173, 360, 368, 401, 457], "struct": [59, 363, 490, 491, 493], "hint": [61, 281, 373, 401, 487, 488, 492, 496], "quick": [62, 131, 180, 199, 404], "tp": 62, "slot": [62, 63, 112], "typedef": 62, "pytypeobject": 62, "definit": [62, 90, 105, 119, 124, 133, 253, 274, 442, 455, 493], "pyobject": 62, "pyvarobject": 62, "static": [62, 97, 105, 110, 112, 270, 422, 443, 488], "async": [62, 133, 442, 492], "charact": [63, 116, 190, 191, 209, 277, 363], "properti": [63, 105, 119, 196, 311, 483], "deprec": [63, 267, 375, 401, 403, 477, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "py_unicod": 63, "wchar_t": 63, "built": [63, 72, 107, 108, 161, 181, 227, 239, 360, 400, 401, 443, 477, 481, 494], "utf": [63, 171, 308, 356, 476, 493, 494], "8": [63, 112, 171, 308, 356, 476, 485, 487, 493, 494, 495], "32": 63, "16": 63, "7": [63, 484, 487, 493, 494], "escap": [63, 450], "latin": 63, "1": [63, 98, 120, 307, 357, 441, 477, 478, 482, 484, 486, 489, 494, 495, 496], "ascii": [63, 159, 191, 409], "mbc": [63, 171], "window": [63, 72, 89, 98, 104, 121, 143, 171, 190, 202, 261, 318, 364, 384, 399, 419, 420, 421, 436, 476, 480, 483, 484, 488, 490, 493, 494], "veri": [65, 84], "weak": [66, 87, 417, 467, 478], "copyright": [68, 92], "distribut": [69, 71, 72, 73, 75, 76, 77, 80, 81, 83, 121, 205, 266, 333, 474], "distutil": [71, 75, 76, 78, 83, 121, 206, 477, 480, 487, 492, 493, 494, 496], "core": [71, 97, 131, 273, 477, 494], "ccompil": 71, "unixccompil": 71, "unix": [71, 84, 89, 96, 121, 138, 164, 186, 197, 234, 245, 318, 371, 406, 475], "compil": [71, 72, 84, 85, 90, 91, 116, 121, 133, 172, 176, 326, 367, 440, 465, 471, 476, 488, 495], "msvccompil": 71, "microsoft": [71, 121, 296, 476], "bcppcompil": 71, "borland": [71, 121], "cygwincompil": 71, "cygwin": [71, 121], "archive_util": 71, "archiv": [71, 130, 347, 373, 436, 437, 438, 480], "dep_util": 71, "depend": [71, 347, 415], "dir_util": 71, "directori": [71, 230, 233, 296, 308, 347, 375, 465, 483, 489, 492], "tree": [71, 133, 249, 392, 427, 428], "file_util": 71, "miscellan": [71, 223, 285, 298, 308, 390, 470, 475, 485], "dist": 71, "mode": [71, 108, 137, 138, 199, 201, 249, 308, 453, 463, 470, 476, 484, 494], "fancy_getopt": 71, "wrapper": [71, 357, 387], "around": 71, "getopt": [71, 242], "filelist": 71, "log": [71, 113, 114, 137, 282, 283, 284, 298, 467, 480, 484, 488, 489, 490, 491, 492, 493, 494, 495], "simpl": [71, 78, 85, 90, 105, 113, 116, 207, 249, 254, 346, 371, 422, 451, 479, 480, 487], "pep": [71, 401, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "282": [71, 480], "spawn": [71, 298, 364], "sysconfig": [71, 370, 484, 488, 489, 492], "inform": [71, 92, 104, 114, 296, 308, 337, 370, 464], "text_fil": 71, "textfil": 71, "cmd": [71, 168], "command": [71, 73, 76, 108, 131, 133, 134, 163, 168, 169, 176, 203, 204, 224, 242, 248, 261, 270, 277, 307, 308, 312, 315, 326, 349, 364, 373, 377, 382, 390, 393, 395, 403, 436, 437, 466, 470, 476, 484, 489, 490, 491, 493], "new": [71, 76, 92, 107, 197, 307, 415, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "individu": [71, 80, 311, 488], "bdist": 71, "instal": [71, 73, 80, 95, 121, 122, 164, 206, 224, 296, 370, 471, 474, 475, 476, 477, 491], "bdist_packag": 71, "packag": [71, 72, 75, 79, 80, 82, 96, 120, 122, 125, 178, 205, 208, 266, 267, 317, 377, 424, 447, 465, 468, 474, 476, 478, 480, 482, 483, 490], "bdist_dumb": 71, "dumb": [71, 197], "bdist_rpm": 71, "redhat": 71, "rpm": [71, 72], "srpm": 71, "sdist": [71, 73], "sourc": [71, 73, 80, 81, 92, 96, 97, 98, 108, 119, 121, 261, 265, 270, 326, 393, 440, 463, 480], "all": [71, 90, 97, 143, 298, 307, 334, 397, 405, 484, 492, 493], "build_clib": 71, "ani": [71, 91, 92, 96, 100, 182, 401, 404, 488], "librari": [71, 80, 96, 113, 114, 123, 176, 189, 269, 274, 371, 404, 410, 466, 467, 471, 483, 485, 488], "build_ext": 71, "build_pi": 71, "py": [71, 96, 108, 125, 488], "pyc": [71, 97, 489, 494], "build_script": 71, "script": [71, 72, 80, 96, 97, 98, 164, 165, 294, 370, 399, 453, 465, 474, 476, 482], "clean": [71, 182, 458], "area": 71, "config": [71, 121, 283], "install_data": [71, 73], "install_head": 71, "header": [71, 120, 148, 216, 217, 422, 490], "install_lib": 71, "install_script": [71, 73], "regist": [71, 148, 185, 356], "index": [71, 79, 82, 90, 97, 136, 142, 384, 480, 482], "meta": [71, 80, 447], "cross": [72, 318, 471], "postinstal": 72, "famili": [73, 353, 364], "write": [74, 80, 85, 91, 96, 97, 119, 128, 140, 145, 188, 285, 296, 334, 356, 365, 373, 377, 416, 461, 482, 483, 488], "setup": [74, 80, 91, 108, 473], "pure": [75, 84, 105, 311], "read": [75, 96, 112, 119, 128, 138, 145, 166, 188, 267, 285, 296, 365, 373, 416, 443, 461], "metadata": [75, 266, 478, 480, 482, 487], "extend": [76, 84, 85, 86, 91, 97, 140, 266, 307, 308, 414, 477, 480], "integr": [76, 282, 443], "ad": [76, 88, 91, 114, 131, 181, 304, 307, 484, 490, 493], "legaci": [77, 121, 180, 364, 410, 494], "an": [78, 84, 85, 90, 91, 96, 97, 98, 100, 105, 111, 114, 119, 147, 148, 182, 196, 208, 210, 219, 263, 265, 277, 364, 405, 414, 428, 464, 476, 484], "concept": [78, 101, 384], "terminologi": [78, 307], "A": [78, 85, 89, 105, 111, 113, 114, 189, 192, 203, 331, 354, 384, 455, 480, 483, 485, 490, 491, 492], "pypi": 79, "whole": 80, "describ": [80, 415], "name": [80, 97, 105, 106, 116, 121, 131, 171, 173, 225, 277, 308, 368, 373, 400, 404, 405, 443, 444, 445, 455, 480, 490], "preprocessor": [80, 471], "option": [80, 81, 97, 101, 131, 207, 242, 248, 261, 277, 307, 315, 373, 384, 391, 395, 403, 437, 470, 471, 487, 493], "relationship": [80, 314, 477], "between": [80, 89, 97, 119, 159, 175, 298, 307, 359, 450], "addit": [80, 97, 221, 360, 400, 474, 476, 492], "specifi": [81, 90, 97, 189, 285, 401, 436, 484, 486], "manifest": 81, "upload": 82, "your": [83, 114, 164, 189, 244, 307, 405, 454, 496], "anoth": [84, 97], "beyond": [84, 131], "link": [84, 131, 189, 479], "under": [84, 98], "like": [84, 92, 114, 246], "intermezzo": [85, 456], "back": 85, "": [85, 91, 92, 96, 97, 119, 121, 123, 207, 302, 318, 323, 367, 370, 399, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "tabl": [85, 155, 296, 314, 367, 394], "linkag": 85, "extract": [85, 91, 373, 437], "keyword": [85, 97, 194, 278, 450, 456, 487, 492, 493], "arbitrari": [85, 91, 113, 307, 456, 488], "ownership": 85, "rule": [85, 97, 346, 348, 479], "thin": 85, "ic": 85, "null": [85, 360], "pointer": [85, 189], "provid": [85, 88, 113, 314, 370], "recommend": [86, 360], "third": [86, 115], "parti": [86, 115], "tool": [86, 96, 97, 200, 273, 288, 311, 315, 377, 422, 456, 467, 484, 487, 495], "without": [86, 98, 261, 476, 487], "cpython": [86, 90, 108, 110, 487, 488, 491, 493, 494, 495, 496], "runtim": [86, 98, 297, 330, 440, 488, 494, 495], "larger": 86, "defin": [87, 88, 97, 111, 112, 283, 307, 401, 443, 456, 458, 487, 489], "assort": 87, "topic": 87, "de": [87, 162], "present": [87, 485], "comparison": [87, 106, 111, 118, 230, 274, 314, 360, 445, 478, 485], "more": [87, 90, 101, 104, 111, 114, 116, 304, 399, 405, 456, 457, 465, 488], "suggest": 87, "tutori": [88, 92, 101, 105, 113, 131, 135, 189, 199, 307, 356, 399, 428, 460], "basic": [88, 101, 113, 118, 120, 122, 152, 196, 207, 250, 277, 311, 382, 390, 399, 403, 435, 436, 443], "finer": [88, 106, 490], "over": [88, 97, 232], "subclass": [88, 97, 106, 114, 257, 336, 405, 443], "cookbook": [89, 106, 114], "approach": [89, 485, 487], "differ": [89, 97, 106, 203, 249, 397, 399], "dll": [89, 98, 189], "practic": [89, 97, 100, 105, 341], "design": 90, "histori": [90, 107, 117, 335, 441, 462], "faq": [90, 91, 92, 93, 95, 96, 97, 98, 199, 488], "why": [90, 91, 92, 93, 95, 96, 97, 98, 481, 488], "doe": [90, 92, 97, 98, 384], "indent": [90, 261, 372, 450], "group": [90, 107, 116, 131, 151, 227, 247, 307, 403, 442, 488], "statement": [90, 91, 124, 133, 182, 380, 395, 442, 443, 451, 456, 457, 482, 483], "am": [90, 97], "i": [90, 91, 92, 93, 95, 96, 97, 98, 104, 113, 122, 125, 135, 196, 273, 297, 323, 343, 344, 384, 443, 481, 483, 485, 488], "strang": 90, "result": [90, 97, 358, 409], "arithmet": [90, 199, 274, 304, 445, 459, 467], "ar": [90, 91, 92, 96, 97, 106, 207, 307, 491], "calcul": [90, 464], "so": [90, 98, 489], "inaccur": 90, "immut": [90, 97, 360, 443], "must": 90, "self": [90, 97, 357, 488, 495], "explicitli": 90, "can": [90, 91, 92, 93, 95, 96, 97, 98, 265, 314, 488], "t": [90, 93, 96, 97, 470, 488], "assign": [90, 445, 451, 477, 495], "express": [90, 91, 107, 116, 119, 133, 334, 445, 451, 452, 455, 456, 481, 482, 495], "some": [90, 91], "e": [90, 91], "g": [90, 91], "len": 90, "join": [90, 450], "instead": [90, 97, 485], "how": [90, 91, 92, 93, 96, 97, 98, 101, 102, 106, 114, 115, 118, 121, 122, 207, 307, 341, 356, 384, 399, 414, 474, 488], "fast": [90, 329, 495], "isn": 90, "switch": [90, 490], "case": [90, 112, 403, 442, 478], "you": [90, 96, 97, 470, 496], "emul": [90, 443], "reli": [90, 97], "o": [90, 93, 96, 135, 227, 273, 297, 308, 309, 311, 343, 344, 364, 377, 443, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "lambda": [90, 97, 107, 445, 456], "machin": [90, 95], "languag": [90, 92, 97, 244, 252, 279, 361, 399, 448, 477, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "doesn": [90, 96], "tradit": 90, "scheme": [90, 92, 121, 370], "freed": 90, "when": [90, 97, 106, 111, 113, 117], "exit": [90, 131, 153], "separ": [90, 391, 480, 484, 486], "kei": [90, 93, 118, 122, 249, 251, 261, 298, 357, 487, 490], "sort": [90, 97, 118, 160], "return": [90, 97, 105, 189, 405, 451, 476], "do": [90, 91, 92, 93, 96, 97, 98, 122, 384], "enforc": 90, "spec": [90, 447], "goto": 90, "r": 90, "end": [90, 97, 104, 118, 455], "backslash": [90, 97, 116], "have": [90, 92, 93, 97], "don": [90, 96, 97, 488], "colon": 90, "requir": [90, 131, 189, 266, 488], "while": [90, 93, 442], "def": 90, "allow": [90, 106], "comma": [90, 97, 480], "my": [91, 95, 96, 97, 98, 488], "own": [91, 189], "hard": 91, "altern": [91, 114, 121, 333, 336, 449, 462, 476], "execut": [91, 96, 98, 138, 177, 207, 261, 339, 348, 377, 382, 395, 436, 441, 443, 444, 453, 465, 476, 482], "evalu": [91, 445, 493, 494], "py_buildvalu": 91, "length": [91, 249, 360], "catch": [91, 182], "output": [91, 96, 97, 101, 114, 261, 347, 461, 466, 467], "pyerr_print": 91, "anyth": 91, "stdout": [91, 96], "stderr": [91, 96], "written": 91, "make": [91, 96, 97, 98, 112, 334, 399, 436, 477, 484, 492, 493], "fail": [91, 111, 492], "want": [91, 97], "linux": [91, 108, 122, 308, 318, 475], "miss": [91, 98], "tell": [91, 399], "incomplet": [91, 189], "input": [91, 96, 104, 190, 202, 232, 243, 359, 393, 399, 452, 461, 462], "invalid": [91, 131, 447], "find": [91, 96, 97, 189, 294, 334, 428, 476], "undefin": 91, "symbol": [91, 226, 367], "__builtin_new": 91, "__pure_virtu": 91, "through": [91, 441], "inherit": [91, 194, 227, 308, 399, 455, 479, 491], "what": [92, 93, 95, 96, 97, 104, 113, 125, 207, 307, 314, 323, 384, 469, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498], "softwar": [92, 205, 441, 482], "foundat": 92, "restrict": [92, 106, 314, 345, 410, 444], "wa": 92, "first": [92, 455, 464], "place": [92, 97, 306], "good": 92, "work": [92, 93, 96, 97, 121, 122, 138, 199, 207, 273, 356, 401, 414, 437, 467], "obtain": [92, 142], "copi": [92, 96, 97, 184, 347], "ve": 92, "never": [92, 137], "program": [92, 96, 97, 98, 104, 107, 117, 119, 147, 190, 236, 238, 244, 281, 298, 384, 444, 452, 464, 466, 474], "newsgroup": 92, "mail": [92, 96], "devot": 92, "beta": 92, "test": [92, 96, 97, 107, 164, 207, 278, 357, 360, 377, 403, 405, 415, 441, 445, 492], "submit": 92, "report": 92, "patch": [92, 404, 405], "publish": 92, "articl": [92, 120], "book": 92, "where": [92, 96, 404], "world": [92, 135, 138, 384], "www": [92, 96], "org": [92, 476], "locat": [92, 121, 339, 359, 431, 488], "monti": 92, "fly": [92, 244], "circu": 92, "real": [92, 333, 443], "mani": [92, 97, 341], "peopl": 92, "signific": [92, 491], "project": 92, "been": 92, "done": 92, "develop": [92, 108, 137, 200, 201, 261, 315, 477, 483, 494], "expect": [92, 403], "futur": [92, 114, 124, 138, 140, 141, 179, 451, 484, 488, 489, 492, 493, 494, 496], "reason": 92, "propos": 92, "incompat": 92, "chang": [92, 97, 112, 113, 244, 399, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "begin": 92, "programm": 92, "graphic": [93, 383, 399], "user": [93, 104, 121, 122, 228, 261, 283, 323, 370, 383, 401, 443, 458, 483, 487], "gui": [93, 114, 296, 474], "question": [93, 94, 96, 97], "toolkit": 93, "exist": [93, 145, 405], "tkinter": [93, 202, 261, 384, 385, 386, 387, 388, 389, 390, 391, 488, 492, 493, 494, 495], "freez": 93, "tk": [93, 383, 384, 390, 391, 484], "event": [93, 114, 138, 140, 142, 150, 155, 340, 348, 380, 384, 391, 399], "wait": [93, 148, 151, 343], "bind": [93, 261, 356, 384, 444], "frequent": [94, 364], "ask": 94, "comput": [95, 203, 397], "delet": [95, 96, 97, 404, 477], "task": [96, 136, 138, 140, 151, 179], "x": [96, 97, 483, 484, 494], "math": [96, 290, 488, 489, 490, 492, 493, 494, 495, 496], "socket": [96, 114, 117, 120, 134, 138, 145, 148, 152, 353, 357, 377, 441, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "regex": 96, "etc": [96, 97], "curs": [96, 104, 190, 191, 192, 487, 490, 492, 495, 496], "termcap": 96, "equival": [96, 97, 105], "onexit": 96, "compon": [96, 409, 452], "doc": 96, "keypress": [96, 98], "time": [96, 113, 114, 196, 381, 382, 440, 466, 480, 488, 489, 490, 492, 493, 494, 495, 496], "seem": 96, "run": [96, 98, 114, 137, 138, 147, 151, 261, 377, 403, 474, 476], "parcel": 96, "out": [96, 112, 314, 495], "among": 96, "bunch": 96, "worker": [96, 298], "kind": [96, 105], "mutat": 96, "safe": [96, 112, 491], "we": 96, "rid": 96, "And": [96, 100, 485], "pipe": [96, 138, 298, 316], "popen": [96, 364, 489], "serial": [96, 289, 314, 440], "rs232": 96, "port": [96, 103, 115, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "close": [96, 105], "sy": [96, 131, 368, 369, 487, 488, 490, 491, 492, 493, 494, 495, 496], "stdin": 96, "realli": 96, "network": [96, 111, 114, 138, 274, 275, 353, 354, 484], "internet": [96, 120, 271, 300, 362, 466], "mimic": 96, "cgi": [96, 164, 165, 492], "form": [96, 390, 401, 445], "submiss": 96, "post": [96, 194], "should": [96, 112, 341, 488, 496], "help": [96, 97, 131, 261, 307, 328, 399], "html": [96, 252, 253, 254, 489, 490, 491], "send": [96, 114], "avoid": [96, 112, 114], "block": [96, 98, 114, 117, 137, 357, 397, 428, 442, 485], "connect": [96, 138, 145, 283, 298, 353, 356], "databas": [96, 197, 247, 296, 325, 355, 356, 402], "persist": [96, 313, 314, 345], "mathemat": [96, 167, 290, 305, 359, 466], "random": [96, 249, 280, 308, 333, 341, 357, 455, 489, 493, 496], "breakpoint": [97, 494], "step": [97, 113, 464, 471, 476], "analysi": [97, 204, 346, 450], "stand": 97, "alon": 97, "guid": [97, 105, 115, 135, 307, 356, 404], "unboundlocalerror": 97, "ha": 97, "loop": [97, 138, 140, 142, 145, 276, 456, 457], "same": [97, 98, 114, 405, 495], "share": [97, 189, 298, 299, 490], "across": [97, 114, 299], "best": [97, 100, 341, 357], "pass": [97, 107, 114, 189, 451, 456, 463], "one": 97, "did": 97, "y": 97, "also": [97, 443], "higher": [97, 164, 240], "order": [97, 189, 194, 240, 283, 307, 363, 404, 405, 445, 484, 485, 486, 493], "discov": 97, "up": [97, 108, 120, 121, 182, 265, 458], "preced": [97, 404, 445], "ternari": 97, "possibl": [97, 399], "obfusc": 97, "liner": 97, "slash": 97, "mean": 97, "hexadecim": 97, "octal": 97, "22": 97, "10": [97, 100, 397, 487, 493, 494, 495], "3": [97, 100, 103, 112, 115, 122, 123, 307, 357, 399, 441, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "int": [97, 360], "liter": [97, 119, 133, 442, 445, 450, 461, 483, 487, 488, 490, 493], "syntaxerror": [97, 487], "convert": [97, 119, 159, 356, 364], "modifi": [97, 116, 121, 395, 428, 476], "perl": 97, "chomp": 97, "remov": [97, 476, 482, 483, 484, 485, 487, 488, 491, 492, 493, 494, 495, 496], "trail": 97, "newlin": [97, 480], "scanf": [97, 334], "sscanf": 97, "unicodedecodeerror": 97, "unicodeencodeerror": 97, "odd": [97, 118, 455], "too": 97, "slow": 97, "speed": 97, "most": [97, 321], "effici": [97, 132, 276, 347], "wai": 97, "concaten": [97, 450], "togeth": [97, 307], "neg": 97, "revers": [97, 481], "duplic": [97, 106], "multipl": [97, 112, 114, 122, 232, 404, 405, 455, 458, 465, 479, 492], "item": [97, 391, 488], "multidimension": 97, "appli": [97, 405], "a_tupl": 97, "complic": 97, "schwartzian": 97, "transform": [97, 171, 488], "given": 97, "deleg": [97, 112, 490], "deriv": [97, 106, 249], "organ": [97, 403], "easier": 97, "overload": 97, "constructor": [97, 140, 244, 249, 364], "try": [97, 182, 442, 482], "__spam": 97, "_someclassname__spam": 97, "__del__": [97, 417], "id": [97, 381, 472, 474], "appear": [97, 399], "uniqu": [97, 106], "ident": [97, 445], "store": [97, 307, 476], "cach": [97, 447, 495], "current": [97, 122, 138, 270, 397], "mutual": [97, 131], "each": 97, "__import__": 97, "z": 97, "edit": [97, 261, 462], "reimport": 97, "show": [97, 494], "thi": [97, 112], "happen": [97, 113], "sometim": 98, "take": 98, "long": [98, 479, 481], "pyd": 98, "emb": [98, 281], "keep": 98, "editor": [98, 261, 472], "insert": [98, 114], "tab": [98, 391, 462], "solv": 98, "m": [98, 297, 419], "win": 98, "crt": 98, "l1": 98, "0": [98, 356, 399, 441, 477, 483, 485, 489, 495, 496], "glossari": 99, "annot": [100, 360, 401, 451, 456, 493, 494], "dict": [100, 114, 360, 404, 405, 493], "Of": [100, 485], "In": [100, 306, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "newer": 100, "9": [100, 441, 495, 496], "older": [100, 121, 364, 373], "un": 100, "stringiz": 100, "For": [100, 104, 281, 415, 484], "__annotations__": 100, "quirk": 100, "argpars": [101, 131, 484, 487, 489, 491, 492, 494], "introduc": 101, "posit": [101, 307, 334, 399, 443, 456, 487, 495], "short": 101, "combin": [101, 106, 357], "littl": 101, "conflict": [101, 307], "translat": [101, 123, 244, 399, 494], "conclus": 101, "clinic": [102, 491], "To": [102, 485], "pad": 104, "displai": [104, 113, 138, 190, 397, 445, 478], "text": [104, 171, 190, 207, 261, 273, 280, 334, 356, 360, 378, 379, 389, 425, 464, 485], "color": [104, 175, 261, 385, 399], "howto": [105, 106, 107, 109, 113, 116, 117, 119, 120], "primer": 105, "constant": [105, 149, 167, 181, 190, 196, 199, 249, 290, 293, 329, 353, 356, 357, 361, 364, 381, 392, 401, 420], "thought": 105, "complet": [105, 261, 335, 338, 343, 452, 462], "valid": [105, 422], "technic": [105, 196], "invoc": [105, 364], "super": 105, "summari": [105, 296, 487, 488, 490, 491, 492, 493, 494, 495, 496], "logic": [105, 199, 274, 450], "automat": [105, 106, 261], "orm": 105, "member": [105, 106, 270], "__slots__": [105, 443, 487], "enum": [106, 225, 487, 488, 491, 492, 493, 494], "programmat": [106, 265, 315, 395], "enumer": [106, 225, 480], "ensur": 106, "pickl": [106, 185, 314, 315, 440, 480, 490, 491, 492, 493, 495], "intenum": 106, "strenum": 106, "intflag": 106, "flag": [106, 116, 121, 131, 133, 182, 207, 270, 307, 334, 471], "__new__": 106, "v": [106, 334, 401, 485], "__init__": [106, 194], "__dunder__": [106, 225], "_sunder_": [106, 225], "_private__nam": 106, "mix": 106, "minutia": 106, "aka": 106, "omit": 106, "auto": 106, "descript": [106, 131, 174, 329], "orderedenum": 106, "duplicatefreeenum": 106, "planet": 106, "timeperiod": 106, "enumtyp": 106, "formal": 107, "provabl": 107, "modular": 107, "eas": 107, "compos": 107, "That": 107, "comprehens": [107, 133, 457, 477, 493], "itertool": [107, 276, 487, 489, 490, 494, 495], "element": [107, 425, 428], "select": [107, 114, 202, 343, 357, 441, 489, 490, 491], "combinator": 107, "functool": [107, 240, 488, 489, 490, 491, 492, 494, 495], "small": [107, 382], "revis": [107, 483], "acknowledg": [107, 119, 244, 441, 477, 478, 479, 480, 481, 482, 483, 484], "intern": [108, 264, 283, 289, 360, 443], "gdb": 108, "prerequisit": 108, "distro": 108, "pretti": [108, 322, 397], "printer": [108, 322], "down": 108, "bt": 108, "instrument": 110, "dtrace": [110, 493], "systemtap": [110, 493], "enabl": [110, 138, 484, 491], "marker": 110, "probe": [110, 493], "avail": [110, 196, 272, 415], "tapset": 110, "ipaddress": [111, 274, 490, 491, 492, 494, 496], "address": [111, 274, 298], "note": [111, 160, 199, 221, 225, 250, 272, 304, 333, 348, 353, 354, 357, 364, 391, 458, 488], "ip": [111, 274], "host": [111, 274], "inspect": [111, 270, 487, 488, 489, 490, 491, 492, 493, 495, 496], "who": 112, "background": [112, 281, 307], "enter": 112, "per": [112, 405, 483], "surpris": [112, 189], "edg": [112, 343], "opt": [112, 273], "One": [112, 162], "tp_travers": 112, "lower": 112, "tp_dealloc": 112, "Not": 112, "overrid": [112, 415], "tp_free": 112, "pyobject_new": 112, "regular": [112, 116, 119, 334, 447], "getter": 112, "setter": 112, "lifetim": [112, 140], "open": [112, 114, 120, 138, 148, 267, 410], "lossless": 112, "messag": [113, 114, 210, 219, 221, 244, 249, 251, 281, 286, 388, 487], "date": [113, 138, 196, 466, 480], "next": 113, "flow": [113, 133, 456], "logger": [113, 114, 282], "formatt": [113, 114, 282], "dure": 113, "optim": [113, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "destin": 114, "server": [114, 138, 145, 148, 152, 259, 350, 354, 357, 422, 433, 434, 435, 489, 494], "receiv": 114, "listen": [114, 298], "product": 114, "contextu": 114, "loggeradapt": [114, 282], "impart": 114, "than": 114, "filter": [114, 282, 285, 373, 395, 397, 415], "contextvar": [114, 183, 494], "concurr": [114, 137, 151, 177, 178, 179, 489, 492, 493, 494, 496], "processpoolexecutor": [114, 179], "deploi": 114, "web": [114, 257, 418, 489], "gunicorn": 114, "uwsgi": 114, "rotat": 114, "logrecord": [114, 282], "queuehandl": [114, 284], "queuelisten": [114, 284], "zeromq": 114, "pynng": 114, "namer": 114, "elabor": 114, "multiprocess": [114, 298, 299, 483, 490, 491, 492, 493, 494, 495, 496], "bom": [114, 171], "sent": 114, "sysloghandl": [114, 284], "dictconfig": 114, "particular": 114, "throughout": 114, "factori": [114, 173, 194, 274, 356], "speak": 114, "them": 114, "condition": 114, "email": [114, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 489, 490, 491, 492, 493], "utc": 114, "gmt": 114, "via": [114, 476], "cli": [114, 169], "starter": 114, "templat": [114, 202, 316, 361, 467], "qt": 114, "syslog": [114, 371], "rfc5424": 114, "treat": 114, "stream": [114, 136, 145, 148, 171, 232, 273, 314], "pattern": [114, 116, 133, 234, 245, 399, 442, 443, 466, 487], "nullhandl": [114, 284], "lot": 114, "resourc": [114, 120, 267, 268, 337, 437, 474, 490, 491, 494], "2": [115, 120, 123, 307, 356, 399, 441, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 493, 494, 495, 496], "match": [116, 131, 133, 234, 334, 405, 442, 443, 456, 466, 487], "repeat": [116, 277], "thing": 116, "plagu": 116, "power": [116, 167, 290, 445], "metacharact": 116, "captur": [116, 442], "lookahead": 116, "assert": [116, 405, 451], "split": [116, 121], "search": [116, 121, 160, 261, 266, 334, 369, 447, 465], "replac": [116, 182, 261, 364, 447, 488], "problem": [116, 164], "versu": [116, 443], "greedi": 116, "re": [116, 194, 334, 403, 488, 490, 491, 492, 493, 494], "verbos": [116, 405], "feedback": 116, "ipc": 117, "disconnect": 117, "die": 117, "TO": 118, "ascend": 118, "descend": 118, "decor": [118, 182, 225, 401, 404, 405, 481, 483], "undecor": 118, "compar": [119, 417, 457], "filenam": [119, 234, 291], "tip": [119, 121, 281], "awar": [119, 196, 492], "unknown": 119, "fetch": [120, 270], "urllib": [120, 407, 408, 409, 410, 411, 487, 489, 490, 491, 492, 493, 494, 495, 496], "url": [120, 407, 409, 410], "urlerror": 120, "httperror": 120, "wrap": [120, 379, 384, 404], "info": 120, "geturl": 120, "authent": [120, 251, 298], "proxi": [120, 298, 404], "footnot": 120, "variat": 121, "job": 121, "home": [121, 370], "prefix": [121, 131, 274, 370, 496], "syntax": [121, 131, 133, 334, 361, 428, 455, 458, 483, 485, 487, 490, 492, 493], "trick": 121, "tweak": 121, "linker": [121, 471], "codegear": 121, "gnu": [121, 197, 244, 335, 338], "mingw": 121, "term": [122, 441], "usag": [122, 125, 131, 133, 162, 163, 196, 207, 248, 249, 261, 277, 294, 315, 337, 393, 395, 434, 473, 490], "pip": [122, 224, 468, 484, 491], "prior": 122, "4": [122, 307, 481, 488, 491, 492, 493], "just": 122, "scientif": 122, "parallel": [122, 179, 298, 380, 495], "2to3": 123, "autom": 123, "fixer": 123, "lib2to3": 123, "__future__": [124, 478], "__main__": [125, 447, 494], "top": [125, 277, 397, 452], "environ": [125, 308, 369, 399, 414, 422, 440, 463, 468, 470, 476, 484, 490, 492, 493], "__name__": 125, "idiomat": 125, "_thread": [126, 487], "abc": [127, 174, 265, 268, 304, 401, 487, 489, 490, 491, 492, 496], "aifc": [128, 491, 494], "aiff": 128, "servic": [129, 158, 187, 244, 279, 281, 292, 330, 378, 406, 419, 441], "compress": [130, 162, 285, 439, 466], "parser": [131, 180, 221, 242, 254, 307, 329, 411, 429, 431, 483, 496], "line": [131, 133, 163, 168, 169, 176, 203, 204, 224, 232, 242, 248, 261, 270, 277, 280, 307, 308, 315, 326, 335, 349, 373, 377, 382, 393, 395, 403, 436, 437, 450, 466, 470, 476, 481, 484, 487, 489, 490], "add_argu": 131, "argumentpars": 131, "prog": 131, "epilog": 131, "parent": 131, "formatter_class": 131, "prefix_char": 131, "fromfile_prefix_char": 131, "argument_default": 131, "allow_abbrev": 131, "conflict_handl": 131, "add_help": 131, "exit_on_error": 131, "action": [131, 307, 458], "narg": 131, "const": 131, "choic": 131, "metavar": 131, "dest": 131, "parse_arg": 131, "abbrevi": 131, "argv": 131, "namespac": [131, 399, 428, 443, 447, 455, 490], "filetyp": 131, "exclus": 131, "partial": [131, 240, 405, 427, 482], "intermix": 131, "upgrad": [131, 138], "optpars": [131, 307, 480], "ast": [133, 483, 489, 493, 495, 496], "grammar": [133, 446], "node": [133, 425], "root": 133, "subscript": [133, 445], "await": [133, 137, 151, 443, 445, 492], "helper": [133, 203, 361, 364, 401, 404], "asynchat": [134, 487, 493], "respons": [134, 410, 422], "asyncio": [135, 137, 147, 183, 441, 487, 488, 491, 492, 493, 494, 495, 496], "hello": [135, 138, 384], "queue": [136, 146, 250, 298, 331, 457, 494], "subprocess": [136, 138, 143, 145, 149, 261, 364, 481, 490, 491, 492, 493, 494], "synchron": [136, 150, 298, 331], "multithread": 137, "detect": [137, 372], "retriev": [137, 270, 396], "stop": [138, 404], "schedul": [138, 151, 308, 340], "callback": [138, 189, 307, 480], "delai": 138, "transfer": 138, "watch": 138, "directli": [138, 265], "dn": 138, "pool": [138, 298], "call_soon": 138, "call_lat": 138, "sigint": 138, "sigterm": 138, "transport": [142, 145], "polici": [142, 144, 222, 490], "maco": [143, 261, 318, 471, 495, 496], "watcher": 144, "hierarchi": [145, 227, 273, 443, 483, 490], "onli": [145, 194, 261, 443, 456, 487, 494, 495], "datagram": 145, "tcp": [145, 148], "echo": [145, 148, 152], "client": [145, 148, 152, 237, 256, 257, 262, 298, 303, 320, 351, 357, 374, 433, 434, 484, 489, 491, 492, 493, 494], "udp": 145, "subprocess_exec": 145, "subprocessprotocol": 145, "prioriti": [146, 250], "lifo": 146, "runner": 147, "keyboard": 147, "interrupt": [147, 437], "streamread": [148, 171], "streamwrit": [148, 171], "http": [148, 152, 255, 256, 257, 258, 259, 422, 484, 489, 490, 491, 492, 493, 494, 496], "interact": [149, 170, 207, 444, 452, 453, 462, 463, 478, 482], "primit": [150, 151, 298, 401], "condit": [150, 307, 380, 441, 445, 457, 482], "semaphor": [150, 380], "boundedsemaphor": 150, "barrier": [150, 380], "cancel": 151, "sleep": 151, "shield": 151, "timeout": [151, 228, 353], "introspect": [151, 270, 401], "asyncor": [152, 487, 489, 493], "atexit": 153, "audioop": [154, 441, 491], "manipul": [154, 274, 286, 307, 309], "audio": [154, 310], "audit": [155, 495], "base64": [156, 487, 490, 491], "base16": 156, "base32": 156, "base85": 156, "secur": [156, 164, 249, 259, 283, 341, 342, 357, 364, 409, 471, 484, 487, 491, 494, 495, 496], "bdb": [157, 487], "framework": [157, 236, 354, 403, 478, 490], "binascii": [159, 490, 493, 494], "bisect": [160, 487], "algorithm": [160, 249, 250, 266, 285, 399, 491], "builtin": [161, 404, 444, 485, 488, 490, 495], "bz2": [162, 490, 492], "bzip2": 162, "increment": [162, 171, 283], "shot": 162, "calendar": [163, 494], "gatewai": [164, 422, 489], "care": 164, "solut": 164, "cgitb": 165, "traceback": [165, 228, 396, 397, 443, 487, 488, 491, 492, 493], "chunk": 166, "iff": 166, "cmath": [167, 492, 493], "polar": 167, "coordin": 167, "logarithm": [167, 290], "trigonometr": [167, 290], "hyperbol": [167, 290], "classif": 167, "orient": [168, 311, 399], "consol": [170, 297, 493], "stateless": 171, "decod": [171, 277, 332, 412, 423], "incrementalencod": 171, "incrementaldecod": 171, "streamreaderwrit": 171, "streamrecod": 171, "idna": 171, "internation": [171, 216, 244, 260, 281], "ansi": 171, "codepag": 171, "utf_8_sig": 171, "signatur": [171, 270, 490], "codeop": 172, "datatyp": [173, 180, 480], "chainmap": 173, "recip": [173, 174, 182, 199, 276, 333, 341, 356, 359], "counter": 173, "dequ": 173, "defaultdict": 173, "namedtupl": 173, "ordereddict": 173, "userdict": 173, "userlist": 173, "userstr": 173, "colorsi": [175, 491], "compileal": [176, 492, 494, 496], "public": [176, 399], "launch": 179, "executor": 179, "threadpoolexecutor": 179, "configpars": [180, 489, 492], "fallback": 180, "ini": [180, 476], "interpol": 180, "behaviour": 180, "rawconfigpars": 180, "site": [181, 349, 483, 487, 489, 493], "contextlib": [182, 401, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494], "__enter__": 182, "reusabl": 182, "reentrant": 182, "shallow": 184, "deep": 184, "copyreg": 185, "crypt": [186, 490, 494], "password": [186, 243, 325, 355], "hash": [186, 249, 251, 360, 491, 494], "cryptograph": 187, "csv": [188, 489, 492, 495], "dialect": 188, "reader": 188, "writer": [188, 281], "ctype": [189, 298, 482, 483, 489, 495], "foreign": 189, "load": [189, 202, 403, 447], "continu": [189, 451, 456], "variad": [189, 488], "prototyp": 189, "union": [189, 360, 487], "align": [189, 363], "bit": [189, 270, 420, 485], "export": 189, "size": [189, 249, 308, 347, 363, 397], "termin": [190, 308, 324, 347, 398, 466], "textpad": 190, "widget": [190, 384, 389, 390, 391, 484], "textbox": 190, "panel": 192, "stack": [192, 270, 396, 457], "dataclass": [194, 487, 488, 494], "init": [194, 335], "frozen": [194, 488], "mutabl": [194, 360, 405, 443], "naiv": 196, "determin": [196, 263, 352, 443], "timedelta": 196, "tzinfo": 196, "timezon": [196, 381], "strftime": 196, "strptime": 196, "behavior": [196, 437, 487, 491, 492, 493, 494, 495], "dbm": [197, 489, 491, 492, 493, 494], "ndbm": 197, "portabl": [197, 243], "decim": [199, 467, 481, 489, 490, 493, 494], "fix": [199, 307, 478, 479, 480, 484], "operand": 199, "round": 199, "mitig": 199, "off": 199, "increas": 199, "precis": [199, 487], "special": [199, 290, 360, 399, 401, 443, 447, 456, 480, 485, 488], "effect": [201, 405], "resourcewarn": 201, "bad": 201, "dialog": [202, 385], "simpledialog": 202, "filedialog": 202, "nativ": [202, 363], "save": [202, 461], "commondialog": 202, "difflib": [203, 492], "delta": 203, "sequencematch": 203, "di": [204, 489, 491, 494], "disassembl": 204, "bytecod": [204, 377, 447, 487, 488, 493, 494, 495, 496], "instruct": 204, "opcod": [204, 488], "doctest": [207, 481, 487, 491, 492], "docstr": [207, 399], "It": 207, "which": 207, "examin": [207, 367], "recogn": 207, "unittest": [207, 403, 404, 405, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495], "doctestfind": 207, "doctestpars": 207, "doctestrunn": 207, "outputcheck": 207, "soapbox": 207, "mime": [208, 211, 215, 220, 291, 332], "charset": 209, "repres": [209, 210, 219], "compat32": 210, "contentmanag": 211, "defect": 213, "headerregistri": 217, "scratch": 220, "feedpars": 221, "ensurepip": [224, 484, 491], "bootstrap": [224, 484, 491], "errno": 226, "faulthandl": [228, 487, 490, 492, 493], "dump": 228, "fault": [228, 434], "after": 228, "fcntl": [229, 488, 496], "ioctl": 229, "filecmp": [230, 491], "dircmp": 230, "fileinput": [232, 487, 493], "fnmatch": 234, "fraction": [235, 483, 488, 489], "ration": 235, "ftplib": [237, 490, 496], "ftp": [237, 489], "ftp_tl": 237, "callabl": [240, 270, 356, 401, 443], "gc": [241, 487, 490, 491, 494, 495, 496], "getpass": 243, "gettext": [244, 494, 495], "multilingu": 244, "nulltransl": 244, "gnutransl": 244, "solari": 244, "catalog": [244, 281], "defer": 244, "glob": [245, 487, 491, 492], "pathnam": [245, 309], "expans": 245, "graphlib": [246, 496], "graph": 246, "grp": [247, 493], "gzip": [248, 439, 489, 492, 495], "hashlib": [249, 482, 487, 488, 489, 491, 493, 496], "digest": 249, "shake": 249, "blake2": 249, "person": 249, "credit": 249, "heapq": [250, 492], "theori": 250, "hmac": [251, 487, 490, 491, 494], "hypertext": 252, "markup": [252, 288], "entiti": 253, "xhtml": 254, "htmlparser": 254, "statu": 255, "httpconnect": 256, "httprespons": 256, "httpmessag": 256, "cookiejar": 257, "cooki": [257, 258, 441], "filecookiejar": 257, "co": 257, "browser": [257, 327, 418], "cookiepolici": 257, "defaultcookiepolici": 257, "morsel": 258, "idl": [261, 477, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496], "menu": 261, "shell": [261, 316, 346, 364], "navig": [261, 384], "calltip": 261, "startup": [261, 335, 453, 488], "failur": [261, 403], "prefer": 261, "idlelib": [261, 487, 488, 491, 492, 493, 494, 495, 496], "imaplib": [262, 489, 490, 492, 496], "imap4": 262, "imghdr": [263, 492], "imag": [263, 384, 390], "imp": 264, "importlib": [265, 266, 267, 268, 447, 484, 487, 490, 491, 492, 493, 494, 496], "machineri": 265, "lazi": [265, 488], "approxim": [265, 492], "import_modul": 265, "entri": [266, 443, 447], "discoveri": [266, 403], "live": 270, "webassembli": [272, 471], "io": [273, 401, 489, 490, 492, 494, 495], "encodingwarn": [273, 487], "reentranc": 273, "ipv4": 274, "ipv6": 274, "conveni": [274, 418, 434], "net": 274, "mask": 274, "interprocess": 275, "commun": 275, "json": [277, 314, 461, 483, 492, 493, 495], "complianc": 277, "interoper": 277, "infinit": 277, "nan": 277, "within": 277, "linecach": [280, 487, 492], "facil": 282, "safeti": 282, "schema": 283, "extern": [283, 314], "resolut": [283, 444, 494], "streamhandl": 284, "filehandl": [284, 410], "watchedfilehandl": 284, "baserotatinghandl": 284, "rotatingfilehandl": 284, "timedrotatingfilehandl": 284, "sockethandl": 284, "datagramhandl": 284, "nteventloghandl": 284, "smtphandler": 284, "memoryhandl": 284, "httphandler": [284, 410], "lzma": [285, 490, 492], "decompress": [285, 437], "chain": [285, 357, 405, 458], "mailbox": [286, 489], "variou": 286, "maildir": 286, "mbox": 286, "mh": 286, "babyl": 286, "mmdf": 286, "maildirmessag": 286, "mboxmessag": 286, "mhmessag": 286, "babylmessag": 286, "mmdfmessag": 286, "mailcap": 287, "theoret": 290, "represent": [290, 440, 459, 490], "angular": 290, "mimetyp": [291, 494], "multimedia": 292, "mmap": [293, 490, 491, 495], "madv_": 293, "map_": 293, "modulefind": 294, "msilib": [296, 494], "view": [296, 360, 484, 485], "record": [296, 397, 467], "cab": 296, "featur": [296, 401, 444, 482, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496], "precomput": 296, "msvcrt": 297, "routin": [297, 371], "vc": 297, "exchang": 298, "sharedctyp": 298, "remot": [298, 441], "cleanup": [298, 307, 491], "dummi": 298, "guidelin": 298, "forkserv": 298, "shared_memori": 299, "netrc": 301, "ni": 302, "sun": [302, 365], "yellow": 302, "page": 302, "nntplib": [303, 490, 496], "nntp": [303, 489], "tower": 304, "implementor": 304, "understand": [307, 384], "put": 307, "popul": 307, "trivial": 307, "5": [307, 482, 488, 492, 493, 495, 496], "6": [307, 399, 441, 477, 483, 485, 493, 494], "ossaudiodev": 310, "oss": 310, "compat": [310, 346, 391, 439], "devic": 310, "mixer": 310, "pathlib": [311, 487, 488, 491, 492, 493, 494, 495, 496], "filesystem": [311, 493, 495], "part": [311, 467], "correspond": [311, 399], "pdb": [312, 489, 490, 491, 493, 494, 496], "unpickl": 314, "dispatch": 314, "reduct": 314, "band": [314, 495], "consum": 314, "pickletool": [315, 493], "pipelin": [316, 364], "pkgutil": 317, "underli": 318, "identifi": [318, 391, 445, 450], "java": 318, "plistlib": [319, 483, 491, 495], "appl": [319, 495, 496], "plist": 319, "poplib": [320, 489, 491, 492, 496], "pop3": 320, "posix": [321, 376], "larg": 321, "notabl": [321, 487, 488, 492, 493, 494, 495, 496], "pprint": [322, 487, 491, 495, 496], "prettyprint": 322, "instant": 323, "cprofil": [323, 494, 495], "stat": [323, 358, 490, 491], "determinist": 323, "calibr": 323, "timer": [323, 380], "pty": [324, 491], "pseudo": [324, 333], "pwd": 325, "py_compil": [326, 487, 494, 495], "pyclbr": [327, 487], "pydoc": [328, 489, 490, 491, 493, 494, 496], "onlin": 328, "xml": [329, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 441, 477, 487, 490, 491, 492, 493, 494, 495, 496], "expat": [329, 441], "xmlparser": [329, 428], "expaterror": 329, "model": [329, 384, 425, 443, 444, 478], "simplequeu": 331, "quopri": 332, "quot": [332, 409], "printabl": 332, "bookkeep": 333, "reproduc": 333, "pair": 334, "simul": 334, "phonebook": 334, "mung": 334, "adverb": 334, "notat": [334, 449, 483], "token": [334, 341, 392, 393, 450, 495], "readlin": [335, 338, 349, 492, 493], "reprlib": [336, 489], "repr": [336, 447], "rlcomplet": [338, 493], "runpi": 339, "sched": [340, 490], "secret": [341, 493], "dev": [343, 494], "poll": 343, "trigger": 343, "epol": 343, "kqueue": [343, 441], "kevent": 343, "selector": [344, 390, 491, 492], "multiplex": 344, "shelv": [345, 487, 491], "shlex": [346, 490, 493, 495], "lexic": [346, 450], "improv": [346, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496], "shutil": [347, 488, 489, 490, 491, 492, 495], "copytre": 347, "rmtree": 347, "base_dir": 347, "sigpip": 348, "sitecustom": 349, "usercustom": 349, "smtpd": [350, 487, 490, 491, 492], "smtp": [350, 351], "smtpserver": 350, "debuggingserv": 350, "pureproxi": 350, "smtpchannel": 350, "smtplib": [351, 490, 491, 492, 496], "sndhdr": [352, 492], "sound": [352, 421], "accept": 353, "socketserv": [354, 490, 493, 494], "tcpserver": 354, "udpserv": 354, "mixin": 354, "spwd": 355, "shadow": 355, "sqlite3": [356, 482, 487, 488, 489, 490, 491, 492, 493, 494], "db": 356, "sqlite": 356, "cursor": 356, "row": 356, "blob": 356, "prepareprotocol": 356, "adapt": [356, 488], "placehold": 356, "sql": 356, "shortcut": 356, "uri": 356, "explan": [356, 399], "transact": 356, "ssl": [357, 483, 487, 489, 490, 491, 492, 493, 494, 495], "certif": [357, 484, 489, 491], "ca": 357, "sign": 357, "side": [357, 405], "bio": [357, 492], "session": 357, "verifi": 357, "cipher": 357, "statist": [359, 397, 487, 491, 493, 495], "averag": 359, "measur": [359, 382, 399, 466], "central": 359, "spread": 359, "two": [359, 484], "normaldist": 359, "truth": 360, "bitwis": [360, 445], "rang": [360, 456], "str": 360, "printf": 360, "bytearrai": [360, 492], "frozenset": 360, "alia": 360, "genericalia": 360, "notimpl": [360, 443], "affect": 360, "mini": 361, "stringprep": 362, "prepar": [362, 443], "bin": 364, "sh": 364, "substitut": [364, 462, 481], "popen2": 364, "popen3": 364, "disabl": 364, "vfork": 364, "posix_spawn": 364, "sunau": [365, 491, 494], "au": 365, "au_read": 365, "au_writ": 365, "supersed": 366, "symtabl": 367, "float_info": 368, "virtual": [369, 391, 414, 468, 476, 490, 492], "_pth": 369, "posix_us": 370, "nt_user": 370, "osx_framework_us": 370, "posix_hom": 370, "posix_prefix": 370, "nt": [370, 480], "tabnanni": 372, "ambigu": 372, "tarfil": [373, 487, 488, 489, 490, 491, 492, 495, 496], "tar": 373, "tarinfo": 373, "further": [373, 405], "verif": [373, 484, 491], "telnetlib": [374, 493], "telnet": 374, "tempfil": [375, 488, 489, 490], "temporari": [375, 476], "termio": 376, "tty": [376, 398], "regress": 377, "unit": [377, 403], "suit": [377, 441], "socket_help": 377, "script_help": 377, "bytecode_help": 377, "correct": 377, "threading_help": 377, "os_help": 377, "import_help": 377, "warnings_help": 377, "textwrap": [379, 490, 491], "fill": [379, 399], "rlock": 380, "clock": 381, "timeit": [382, 492, 493], "snippet": 382, "tcl": 384, "architectur": 384, "life": 384, "preserv": [384, 493], "handi": 384, "packer": [384, 423], "coupl": 384, "colorchoos": 385, "choos": 385, "dnd": 386, "drag": 386, "drop": 386, "font": 387, "messagebox": 388, "prompt": 388, "scrolledtext": 389, "scroll": 389, "tix": 390, "hierarch": 390, "listbox": 390, "tabular": 390, "geometri": 390, "ttk": [391, 484], "theme": [391, 484], "scrollabl": 391, "label": 391, "combobox": 391, "spinbox": 391, "notebook": 391, "progressbar": 391, "sizegrip": 391, "treeview": 391, "tag": [391, 489], "column": 391, "layout": [391, 467], "tomllib": 394, "toml": 394, "track": [395, 405], "main": [395, 471, 483], "tracebackexcept": 396, "stacksummari": 396, "framesummari": 396, "peak": 397, "domainfilt": 397, "snapshot": 397, "statisticdiff": 397, "turtl": 399, "star": 399, "draw": 399, "pen": 399, "quickli": 399, "turtlescreen": 399, "screen": 399, "rawturtl": 399, "motion": 399, "visibl": [399, 490], "anim": 399, "turtledemo": [399, 489], "demo": [399, 495], "sinc": 399, "relev": 401, "alias": [401, 403], "newtyp": 401, "nomin": 401, "subtyp": 401, "recognis": 401, "timelin": 401, "major": 401, "unicodedata": [402, 488, 492, 493, 494, 495, 496], "skip": 403, "distinguish": 403, "subtest": 403, "load_test": 403, "fixtur": 403, "setupclass": 403, "teardownclass": 403, "setupmodul": 403, "teardownmodul": 403, "mock": [404, 405, 492, 493, 494], "attach": 404, "patcher": 404, "test_prefix": 404, "nest": [404, 405, 457, 478, 479, 487], "magicmock": [404, 405], "magic": 404, "sentinel": 404, "create_autospec": 404, "filter_dir": 404, "mock_open": 404, "autospecc": 404, "seal": 404, "side_effect": [404, 405], "return_valu": 404, "everi": 405, "unbound": 405, "cope": 405, "less": 405, "openerdirector": 410, "basehandl": 410, "httpredirecthandl": 410, "httpcookieprocessor": 410, "proxyhandl": 410, "httppasswordmgr": 410, "httppasswordmgrwithpriorauth": 410, "abstractbasicauthhandl": 410, "httpbasicauthhandl": 410, "proxybasicauthhandl": 410, "abstractdigestauthhandl": 410, "httpdigestauthhandl": 410, "proxydigestauthhandl": 410, "httpshandler": 410, "datahandl": 410, "ftphandler": 410, "cacheftphandl": 410, "unknownhandl": 410, "httperrorprocessor": 410, "robotpars": [411, 493], "robot": 411, "txt": 411, "uu": [412, 494], "uuencod": [412, 441], "uuid": [413, 494], "accord": 413, "rfc": 413, "4122": 413, "venv": [414, 488, 491, 493, 495, 496], "envbuild": 414, "temporarili": 415, "suppress": [415, 490], "updat": [415, 484, 496], "wave": [416, 491, 494], "wav": 416, "wave_read": 416, "wave_writ": 416, "weakref": [417, 491, 495], "webbrows": [418, 490], "winreg": [420, 493], "hkey_": 420, "right": 420, "64": 420, "winsound": [421, 493], "plai": 421, "wsgiref": [422, 482, 492], "wsgi": 422, "simple_serv": 422, "conform": [422, 425], "checker": 422, "xdrlib": 423, "xdr": 423, "vulner": 424, "defusedxml": 424, "dom": [425, 426, 427, 477], "domimplement": 425, "nodelist": 425, "documenttyp": 425, "attr": 425, "namednodemap": 425, "comment": [425, 450], "cdatasect": 425, "processinginstruct": 425, "accessor": 425, "minidom": 426, "minim": 426, "pulldom": 427, "domeventstream": 427, "etre": [428, 490, 491, 494], "elementtre": [428, 482, 484, 489, 490], "pull": 428, "interest": 428, "xpath": 428, "xinclud": 428, "qname": 428, "treebuild": 428, "xmlpullpars": 428, "sax": [429, 430, 431, 432, 492], "sax2": [429, 477], "saxexcept": 429, "contenthandl": 430, "dtdhandler": 430, "entityresolv": 430, "errorhandl": 430, "lexicalhandl": 430, "xmlreader": 431, "incrementalpars": 431, "inputsourc": 431, "attributesn": 431, "saxutil": 432, "xmlrpc": [433, 434, 435, 492, 493, 494, 495], "rpc": [434, 435], "serverproxi": 434, "protocolerror": 434, "multical": 434, "simplexmlrpcserv": 435, "cgixmlrpcrequesthandl": 435, "docxmlrpcserv": 435, "doccgixmlrpcrequesthandl": 435, "zipapp": [436, 492, 494], "zip": [436, 437, 438, 480], "standalon": 436, "zipfil": [437, 488, 489, 491, 492, 493, 494], "pyzipfil": 437, "zipinfo": 437, "pitfal": 437, "itself": 437, "zipimport": [438, 487], "zlib": [439, 441, 490, 493], "zoneinfo": [440, 496], "iana": 440, "zone": 440, "licens": 441, "otherwis": 441, "psf": 441, "agreement": 441, "FOR": 441, "11": [441, 488, 494, 495, 496], "beopen": 441, "com": 441, "cnri": 441, "cwi": 441, "zero": 441, "claus": [441, 442, 456], "bsd": 441, "IN": 441, "THE": 441, "incorpor": 441, "mersenn": 441, "twister": 441, "uudecod": 441, "procedur": 441, "test_epol": 441, "siphash24": 441, "strtod": 441, "dtoa": 441, "openssl": [441, 475, 488], "libffi": 441, "cfuhash": 441, "libmpdec": 441, "w3c": 441, "c14n": 441, "els": [442, 456], "guard": [442, 487], "irrefut": 442, "OR": 442, "AS": 442, "wildcard": [442, 466, 487], "writabl": 443, "known": [443, 476], "invok": [443, 463], "metaclass": 443, "resolv": 443, "mro": 443, "appropri": 443, "bodi": 443, "purpos": 443, "__class_getitem__": 443, "__getitem__": 443, "With": [443, 494], "atom": 445, "parenthes": [445, 487], "yield": [445, 451], "primari": 445, "unari": 445, "shift": 445, "membership": 445, "full": [446, 476], "finder": 447, "loader": 447, "submodul": 447, "__path__": 447, "rel": [447, 482, 483], "__spec__": 447, "physic": 450, "declar": [450, 487], "explicit": [450, 483, 490, 491], "implicit": [450, 490], "blank": 450, "whitespac": 450, "soft": 450, "reserv": 450, "f": [450, 495], "imaginari": 450, "delimit": 450, "augment": [451, 477], "del": [451, 457], "break": [451, 456], "nonloc": 451, "appendix": 453, "whet": 454, "appetit": 454, "word": 455, "look": 455, "remark": 455, "recap": 456, "techniqu": 457, "predefin": 458, "unrel": 458, "enrich": [458, 488], "fancier": 461, "Its": 463, "toward": 464, "dir": 465, "intra": 465, "brief": [466, 467], "tour": [466, 467], "redirect": [466, 476], "qualiti": 466, "batteri": 466, "ii": 467, "now": 469, "shouldn": 470, "makefil": 471, "target": [471, 484, 492, 493], "mac": [474, 483, 484, 495, 496], "latest": 475, "On": 475, "freebsd": [475, 484], "openbsd": 475, "opensolari": 475, "max_path": 476, "ui": 476, "download": 476, "nuget": 476, "embedd": 476, "bundl": 476, "excursu": 476, "launcher": [476, 488, 490, 492], "associ": 476, "shebang": 476, "diagnost": 476, "dry": 476, "demand": 476, "pywin32": 476, "cx_freez": 476, "cycl": 477, "minor": 477, "easi": 477, "pyxml": 477, "227": [478, 479], "236": 478, "207": 478, "rich": 478, "230": 478, "229": 478, "205": 478, "232": 478, "235": 478, "insensit": 478, "217": 478, "208": 478, "coercion": [478, 494], "241": 478, "252": 479, "253": 479, "diamond": 479, "234": 479, "255": [479, 480], "237": [479, 481], "unifi": [479, 481, 482], "238": 479, "divis": 479, "218": [480, 481], "263": 480, "273": 480, "277": 480, "278": 480, "univers": 480, "279": 480, "285": 480, "293": 480, "301": 480, "302": 480, "305": 480, "307": 480, "enhanc": [480, 483, 484, 493], "289": 481, "292": 481, "simpler": [481, 493], "318": 481, "322": 481, "324": 481, "327": 481, "need": 481, "328": [481, 482], "331": 481, "cookielib": 481, "308": 482, "309": 482, "314": 482, "v1": [482, 489], "absolut": 482, "338": 482, "341": 482, "342": 482, "343": [482, 483], "352": 482, "353": 482, "ssize_t": 482, "357": 482, "__index__": 482, "roundup": 483, "restructuredtext": 483, "sphinx": 483, "366": 483, "370": 483, "371": 483, "3101": [483, 485], "3105": 483, "As": 483, "3110": 483, "3112": 483, "3116": 483, "3118": [483, 490], "3119": 483, "3127": 483, "3129": 483, "3141": 483, "future_builtin": 483, "javascript": 483, "irix": 483, "372": [484, 486], "378": [484, 486], "thousand": [484, 486], "389": [484, 489], "391": [484, 489], "3106": 484, "3137": 484, "mainten": 484, "434": 484, "branch": 484, "466": 484, "477": 484, "backport": 484, "453": [484, 491], "By": [484, 491], "476": [484, 491], "stdlib": [484, 491], "493": 484, "migrat": 484, "regen": [484, 492, 493], "touch": [484, 492, 493], "stumbl": 485, "alreadi": 485, "highlight": [487, 488, 490, 491, 492, 493, 494, 495, 496], "better": [487, 492], "indentationerror": 487, "attributeerror": 487, "nameerror": 487, "626": 487, "634": 487, "604": 487, "612": 487, "613": 487, "typealia": 487, "647": 487, "652": 487, "maintain": 487, "12": [487, 488, 495], "657": 488, "fine": 488, "grain": [488, 490], "654": 488, "678": 488, "ex": 488, "646": 488, "655": 488, "mark": 488, "typeddict": 488, "673": 488, "675": 488, "681": 488, "563": [488, 494], "mai": 488, "faster": [488, 492], "cheaper": 488, "inlin": 488, "659": 488, "misc": 488, "speedup": 488, "Will": 488, "see": 488, "workload": 488, "jit": 488, "pend": 488, "384": 489, "3148": 489, "3147": 489, "repositori": 489, "3149": 489, "3333": 489, "405": 490, "420": 490, "393": 490, "flexibl": 490, "397": 490, "3151": 490, "rework": 490, "380": 490, "subgener": 490, "409": 490, "414": 490, "3155": 490, "qualifi": 490, "412": 490, "362": 490, "421": 490, "simplenamespac": 490, "unsupport": [490, 492], "446": 491, "newli": 491, "451": 491, "modulespec": 491, "445": 491, "442": 491, "456": 491, "interchang": 491, "436": 491, "No": 491, "longer": 491, "492": 492, "465": 492, "dedic": 492, "infix": 492, "matrix": 492, "448": 492, "461": 492, "percent": 492, "484": 492, "471": 492, "scandir": 492, "475": 492, "retri": 492, "eintr": 492, "479": 492, "stopiter": 492, "insid": 492, "485": 492, "equal": 492, "486": 492, "488": 492, "elimin": 492, "pyo": 492, "489": 492, "negoti": 492, "498": 493, "526": 493, "515": 493, "underscor": 493, "525": 493, "530": 493, "487": 493, "519": 493, "495": 493, "disambigu": 493, "529": 493, "528": 493, "520": 493, "468": 493, "523": 493, "pythonmalloc": 493, "13": 493, "14": [493, 494, 495, 496], "postpon": 494, "538": 494, "540": 494, "forc": 494, "553": 494, "539": 494, "562": 494, "564": 494, "nanosecond": 494, "565": 494, "deprecationwarn": [494, 496], "560": 494, "552": 494, "545": 494, "macpath": 494, "578": 495, "587": 495, "590": 495, "big": [495, 496], "sur": [495, 496], "silicon": [495, 496], "17": [495, 496], "merg": 496, "suffix": 496, "changelog": 497}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"About these documents": [[0, "about-these-documents"]], "Contributors to the Python Documentation": [[0, "contributors-to-the-python-documentation"]], "Dealing with Bugs": [[1, "dealing-with-bugs"]], "Documentation bugs": [[1, "documentation-bugs"]], "Using the Python issue tracker": [[1, "using-the-python-issue-tracker"]], "Getting started contributing to Python yourself": [[1, "getting-started-contributing-to-python-yourself"]], "Abstract Objects Layer": [[2, "abstract-objects-layer"]], "Allocating Objects on the Heap": [[3, "allocating-objects-on-the-heap"]], "API and ABI Versioning": [[4, "api-and-abi-versioning"]], "Parsing arguments and building values": [[5, "parsing-arguments-and-building-values"]], "Parsing arguments": [[5, "parsing-arguments"], [131, "parsing-arguments"], [307, "parsing-arguments"]], "Strings and buffers": [[5, "strings-and-buffers"]], "Numbers": [[5, "numbers"], [464, "numbers"]], "Other objects": [[5, "other-objects"]], "API Functions": [[5, "api-functions"]], "Building values": [[5, "building-values"]], "Boolean Objects": [[6, "boolean-objects"]], "Buffer Protocol": [[7, "buffer-protocol"]], "Buffer structure": [[7, "buffer-structure"]], "Buffer request types": [[7, "buffer-request-types"]], "request-independent fields": [[7, "request-independent-fields"]], "readonly, format": [[7, "readonly-format"]], "shape, strides, suboffsets": [[7, "shape-strides-suboffsets"]], "contiguity requests": [[7, "contiguity-requests"]], "compound requests": [[7, "compound-requests"]], "Complex arrays": [[7, "complex-arrays"]], "NumPy-style: shape and strides": [[7, "numpy-style-shape-and-strides"]], "PIL-style: shape, strides and suboffsets": [[7, "pil-style-shape-strides-and-suboffsets"]], "Buffer-related functions": [[7, "buffer-related-functions"]], "Byte Array Objects": [[8, "byte-array-objects"]], "Type check macros": [[8, "type-check-macros"]], "Direct API functions": [[8, "direct-api-functions"]], "Macros": [[8, "macros"]], "Bytes Objects": [[9, "bytes-objects"], [360, "bytes-objects"]], "Call Protocol": [[10, "call-protocol"]], "The tp_call Protocol": [[10, "the-tp-call-protocol"]], "The Vectorcall Protocol": [[10, "the-vectorcall-protocol"]], "Recursion Control": [[10, "recursion-control"], [23, "recursion-control"]], "Vectorcall Support API": [[10, "vectorcall-support-api"]], "Object Calling API": [[10, "object-calling-api"]], "Call Support API": [[10, "call-support-api"]], "Capsules": [[11, "capsules"], [484, "capsules"]], "Cell Objects": [[12, "cell-objects"]], "Code Objects": [[13, "code-objects"], [360, "code-objects"]], "Codec registry and support functions": [[14, "codec-registry-and-support-functions"]], "Codec lookup API": [[14, "codec-lookup-api"]], "Registry API for Unicode encoding error handlers": [[14, "registry-api-for-unicode-encoding-error-handlers"]], "Complex Number Objects": [[15, "complex-number-objects"]], "Complex Numbers as C Structures": [[15, "complex-numbers-as-c-structures"]], "Complex Numbers as Python Objects": [[15, "complex-numbers-as-python-objects"]], "Concrete Objects Layer": [[16, "concrete-objects-layer"]], "Fundamental Objects": [[16, "fundamental-objects"]], "Numeric Objects": [[16, "numeric-objects"]], "Sequence Objects": [[16, "sequence-objects"]], "Container Objects": [[16, "container-objects"]], "Function Objects": [[16, "function-objects"], [27, "function-objects"], [327, "function-objects"]], "Other Objects": [[16, "other-objects"]], "Context Variables Objects": [[17, "context-variables-objects"]], "String conversion and formatting": [[18, "string-conversion-and-formatting"]], "Coroutine Objects": [[19, "coroutine-objects"], [443, "coroutine-objects"]], "DateTime Objects": [[20, "datetime-objects"], [434, "datetime-objects"]], "Descriptor Objects": [[21, "descriptor-objects"]], "Dictionary Objects": [[22, "dictionary-objects"]], "Exception Handling": [[23, "exception-handling"]], "Printing and clearing": [[23, "printing-and-clearing"]], "Raising exceptions": [[23, "raising-exceptions"]], "Issuing warnings": [[23, "issuing-warnings"]], "Querying the error indicator": [[23, "querying-the-error-indicator"]], "Signal Handling": [[23, "signal-handling"], [403, "signal-handling"]], "Exception Classes": [[23, "exception-classes"]], "Exception Objects": [[23, "exception-objects"]], "Unicode Exception Objects": [[23, "unicode-exception-objects"]], "Standard Exceptions": [[23, "standard-exceptions"]], "Standard Warning Categories": [[23, "standard-warning-categories"]], "File Objects": [[24, "file-objects"]], "Floating Point Objects": [[25, "floating-point-objects"]], "Pack and Unpack functions": [[25, "pack-and-unpack-functions"]], "Pack functions": [[25, "pack-functions"]], "Unpack functions": [[25, "unpack-functions"]], "Frame Objects": [[26, "frame-objects"]], "Supporting Cyclic Garbage Collection": [[28, "supporting-cyclic-garbage-collection"]], "Controlling the Garbage Collector State": [[28, "controlling-the-garbage-collector-state"]], "Generator Objects": [[29, "generator-objects"]], "PyHash API": [[30, "pyhash-api"]], "Importing Modules": [[31, "importing-modules"], [295, "importing-modules"]], "Python/C API Reference Manual": [[32, "python-c-api-reference-manual"]], "Initialization, Finalization, and Threads": [[33, "initialization-finalization-and-threads"]], "Before Python Initialization": [[33, "before-python-initialization"]], "Global configuration variables": [[33, "global-configuration-variables"]], "Initializing and finalizing the interpreter": [[33, "initializing-and-finalizing-the-interpreter"]], "Process-wide parameters": [[33, "process-wide-parameters"]], "Thread State and the Global Interpreter Lock": [[33, "thread-state-and-the-global-interpreter-lock"]], "Releasing the GIL from extension code": [[33, "releasing-the-gil-from-extension-code"]], "Non-Python created threads": [[33, "non-python-created-threads"]], "Cautions about fork()": [[33, "cautions-about-fork"]], "High-level API": [[33, "high-level-api"]], "Low-level API": [[33, "low-level-api"]], "Sub-interpreter support": [[33, "sub-interpreter-support"]], "Bugs and caveats": [[33, "bugs-and-caveats"]], "Asynchronous Notifications": [[33, "asynchronous-notifications"]], "Profiling and Tracing": [[33, "profiling-and-tracing"]], "Advanced Debugger Support": [[33, "advanced-debugger-support"]], "Thread Local Storage Support": [[33, "thread-local-storage-support"]], "Thread Specific Storage (TSS) API": [[33, "thread-specific-storage-tss-api"]], "Dynamic Allocation": [[33, "dynamic-allocation"]], "Methods": [[33, "methods"], [303, "methods"], [311, "methods"], [360, "methods"]], "Thread Local Storage (TLS) API": [[33, "thread-local-storage-tls-api"]], "Python Initialization Configuration": [[34, "python-initialization-configuration"]], "Example": [[34, "example"], [131, "example"], [185, "example"], [228, "example"], [258, "example"], [314, "example"], [322, "example"], [324, "example"], [329, "example"], [335, "example"], [345, "example"], [353, "example"], [376, "example"], [413, "example"], [417, "example"], [428, "example"], [428, "id3"]], "PyWideStringList": [[34, "pywidestringlist"]], "PyStatus": [[34, "pystatus"]], "PyPreConfig": [[34, "pypreconfig"]], "Preinitialize Python with PyPreConfig": [[34, "preinitialize-python-with-pypreconfig"]], "PyConfig": [[34, "pyconfig"]], "Initialization with PyConfig": [[34, "initialization-with-pyconfig"]], "Isolated Configuration": [[34, "isolated-configuration"]], "Python Configuration": [[34, "python-configuration"]], "Python Path Configuration": [[34, "python-path-configuration"]], "Py_RunMain()": [[34, "py-runmain"]], "Py_GetArgcArgv()": [[34, "py-getargcargv"]], "Multi-Phase Initialization Private Provisional API": [[34, "multi-phase-initialization-private-provisional-api"]], "Introduction": [[35, "introduction"], [107, "introduction"], [116, "introduction"], [120, "introduction"], [121, "introduction"], [164, "introduction"], [265, "introduction"], [272, "introduction"], [298, "introduction"], [344, "introduction"], [399, "introduction"], [449, "introduction"], [468, "introduction"], [477, "introduction"], [478, "introduction"], [479, "introduction"]], "Coding standards": [[35, "coding-standards"]], "Include Files": [[35, "include-files"]], "Useful macros": [[35, "useful-macros"]], "Objects, Types and Reference Counts": [[35, "objects-types-and-reference-counts"]], "Reference Counts": [[35, "reference-counts"], [85, "reference-counts"]], "Reference Count Details": [[35, "reference-count-details"]], "Types": [[35, "types"]], "Exceptions": [[35, "exceptions"], [131, "exceptions"], [136, "exceptions"], [139, "exceptions"], [146, "exceptions"], [180, "exceptions"], [246, "exceptions"], [277, "exceptions"], [286, "exceptions"], [307, "exceptions"], [334, "exceptions"], [353, "exceptions"], [356, "exceptions"], [357, "exceptions"], [359, "exceptions"], [364, "exceptions"], [423, "exceptions"], [425, "exceptions"], [428, "exceptions"], [444, "exceptions"], [458, "exceptions"]], "Embedding Python": [[35, "embedding-python"], [476, "embedding-python"]], "Debugging Builds": [[35, "debugging-builds"]], "Iterator Protocol": [[36, "iterator-protocol"]], "Iterator Objects": [[37, "iterator-objects"]], "List Objects": [[38, "list-objects"]], "Integer Objects": [[39, "integer-objects"]], "Mapping Protocol": [[40, "mapping-protocol"]], "Data marshalling support": [[41, "data-marshalling-support"]], "Memory Management": [[42, "memory-management"]], "Overview": [[42, "overview"], [111, null], [266, "overview"], [273, "overview"], [442, "overview"]], "Allocator Domains": [[42, "allocator-domains"]], "Raw Memory Interface": [[42, "raw-memory-interface"]], "Memory Interface": [[42, "memory-interface"]], "Object allocators": [[42, "object-allocators"]], "Default Memory Allocators": [[42, "default-memory-allocators"]], "Customize Memory Allocators": [[42, "customize-memory-allocators"]], "Debug hooks on the Python memory allocators": [[42, "debug-hooks-on-the-python-memory-allocators"]], "The pymalloc allocator": [[42, "the-pymalloc-allocator"]], "Customize pymalloc Arena Allocator": [[42, "customize-pymalloc-arena-allocator"]], "tracemalloc C API": [[42, "tracemalloc-c-api"]], "Examples": [[42, "examples"], [62, "examples"], [110, "examples"], [138, "examples"], [145, "examples"], [146, "examples"], [148, "examples"], [149, "examples"], [160, "examples"], [186, "examples"], [188, "examples"], [249, "examples"], [254, "examples"], [256, "examples"], [257, "examples"], [264, "examples"], [265, "examples"], [285, "examples"], [286, "examples"], [298, "examples"], [314, "examples"], [319, "examples"], [333, "examples"], [344, "examples"], [348, "examples"], [354, "examples"], [357, "examples"], [363, "examples"], [371, "examples"], [373, "examples"], [375, "examples"], [382, "examples"], [393, "examples"], [394, "examples"], [397, "examples"], [410, "examples"], [422, "examples"], [436, "examples"], [438, "examples"], [445, "examples"]], "MemoryView objects": [[43, "index-0"]], "Instance Method Objects": [[44, "instance-method-objects"]], "Method Objects": [[44, "method-objects"], [455, "method-objects"]], "Module Objects": [[45, "module-objects"]], "Initializing C modules": [[45, "initializing-c-modules"]], "Single-phase initialization": [[45, "single-phase-initialization"]], "Multi-phase initialization": [[45, "multi-phase-initialization"]], "Low-level module creation functions": [[45, "low-level-module-creation-functions"]], "Support functions": [[45, "support-functions"]], "Module lookup": [[45, "module-lookup"]], "The None Object": [[46, "the-none-object"]], "Number Protocol": [[47, "number-protocol"]], "Old Buffer Protocol": [[48, "old-buffer-protocol"]], "Object Protocol": [[49, "object-protocol"]], "Object Implementation Support": [[50, "object-implementation-support"]], "Reference Counting": [[51, "reference-counting"]], "Reflection": [[52, "reflection"]], "Sequence Protocol": [[53, "sequence-protocol"]], "Set Objects": [[54, "set-objects"]], "Slice Objects": [[55, "slice-objects"]], "Ellipsis Object": [[55, "ellipsis-object"]], "C API Stability": [[56, "c-api-stability"]], "Stable Application Binary Interface": [[56, "stable-application-binary-interface"]], "Limited C API": [[56, "limited-c-api"]], "Stable ABI": [[56, "stable-abi"]], "Limited API Scope and Performance": [[56, "limited-api-scope-and-performance"]], "Limited API Caveats": [[56, "limited-api-caveats"]], "Platform Considerations": [[56, "platform-considerations"]], "Contents of Limited API": [[56, "contents-of-limited-api"]], "Common Object Structures": [[57, "common-object-structures"]], "Base object types and macros": [[57, "base-object-types-and-macros"]], "Implementing functions and methods": [[57, "implementing-functions-and-methods"]], "Accessing attributes of extension types": [[57, "accessing-attributes-of-extension-types"]], "Operating System Utilities": [[58, "operating-system-utilities"]], "System Functions": [[58, "system-functions"]], "Process Control": [[58, "process-control"]], "Tuple Objects": [[59, "tuple-objects"]], "Struct Sequence Objects": [[59, "struct-sequence-objects"]], "Type Objects": [[60, "type-objects"], [62, "type-objects"], [360, "type-objects"]], "Creating Heap-Allocated Types": [[60, "creating-heap-allocated-types"]], "Objects for Type Hinting": [[61, "objects-for-type-hinting"]], "Quick Reference": [[62, "quick-reference"]], "\u201ctp slots\u201d": [[62, "tp-slots"]], "sub-slots": [[62, "sub-slots"]], "slot typedefs": [[62, "slot-typedefs"]], "PyTypeObject Definition": [[62, "pytypeobject-definition"]], "PyObject Slots": [[62, "pyobject-slots"]], "PyVarObject Slots": [[62, "pyvarobject-slots"]], "PyTypeObject Slots": [[62, "pytypeobject-slots"]], "Static Types": [[62, "static-types"]], "Heap Types": [[62, "heap-types"], [112, "heap-types"]], "Number Object Structures": [[62, "number-object-structures"]], "Mapping Object Structures": [[62, "mapping-object-structures"]], "Sequence Object Structures": [[62, "sequence-object-structures"]], "Buffer Object Structures": [[62, "buffer-object-structures"]], "Async Object Structures": [[62, "async-object-structures"]], "Slot Type typedefs": [[62, "slot-type-typedefs"]], "Unicode Objects and Codecs": [[63, "unicode-objects-and-codecs"]], "Unicode Objects": [[63, "unicode-objects"]], "Unicode Type": [[63, "unicode-type"]], "Unicode Character Properties": [[63, "unicode-character-properties"]], "Creating and accessing Unicode strings": [[63, "creating-and-accessing-unicode-strings"]], "Deprecated Py_UNICODE APIs": [[63, "deprecated-py-unicode-apis"]], "Locale Encoding": [[63, "locale-encoding"]], "File System Encoding": [[63, "file-system-encoding"]], "wchar_t Support": [[63, "wchar-t-support"]], "Built-in Codecs": [[63, "built-in-codecs"]], "Generic Codecs": [[63, "generic-codecs"]], "UTF-8 Codecs": [[63, "utf-8-codecs"]], "UTF-32 Codecs": [[63, "utf-32-codecs"]], "UTF-16 Codecs": [[63, "utf-16-codecs"]], "UTF-7 Codecs": [[63, "utf-7-codecs"]], "Unicode-Escape Codecs": [[63, "unicode-escape-codecs"]], "Raw-Unicode-Escape Codecs": [[63, "raw-unicode-escape-codecs"]], "Latin-1 Codecs": [[63, "latin-1-codecs"]], "ASCII Codecs": [[63, "ascii-codecs"]], "Character Map Codecs": [[63, "character-map-codecs"]], "MBCS codecs for Windows": [[63, "mbcs-codecs-for-windows"]], "Methods & Slots": [[63, "methods-slots"]], "Methods and Slot Functions": [[63, "methods-and-slot-functions"]], "Utilities": [[64, "utilities"], [182, "utilities"]], "The Very High Level Layer": [[65, "the-very-high-level-layer"]], "Weak Reference Objects": [[66, "weak-reference-objects"], [417, "weak-reference-objects"]], "Python Documentation contents": [[67, "python-documentation-contents"]], "Copyright": [[68, "copyright"]], "Distributing Python Modules": [[69, "distributing-python-modules"]], "API Reference": [[71, "api-reference"]], "distutils.core \u2014 Core Distutils functionality": [[71, "module-distutils.core"]], "distutils.ccompiler \u2014 CCompiler base class": [[71, "module-distutils.ccompiler"]], "distutils.unixccompiler \u2014 Unix C Compiler": [[71, "module-distutils.unixccompiler"]], "distutils.msvccompiler \u2014 Microsoft Compiler": [[71, "module-distutils.msvccompiler"]], "distutils.bcppcompiler \u2014 Borland Compiler": [[71, "module-distutils.bcppcompiler"]], "distutils.cygwincompiler \u2014 Cygwin Compiler": [[71, "module-distutils.cygwinccompiler"]], "distutils.archive_util \u2014  Archiving utilities": [[71, "module-distutils.archive_util"]], "distutils.dep_util \u2014 Dependency checking": [[71, "module-distutils.dep_util"]], "distutils.dir_util \u2014 Directory tree operations": [[71, "module-distutils.dir_util"]], "distutils.file_util \u2014 Single file operations": [[71, "module-distutils.file_util"]], "distutils.util \u2014 Miscellaneous other utility functions": [[71, "module-distutils.util"]], "distutils.dist \u2014 The Distribution class": [[71, "module-distutils.dist"]], "distutils.extension \u2014 The Extension class": [[71, "module-distutils.extension"]], "distutils.debug \u2014 Distutils debug mode": [[71, "module-distutils.debug"]], "distutils.errors \u2014 Distutils exceptions": [[71, "module-distutils.errors"]], "distutils.fancy_getopt \u2014 Wrapper around the standard getopt module": [[71, "module-distutils.fancy_getopt"]], "distutils.filelist \u2014 The FileList class": [[71, "module-distutils.filelist"]], "distutils.log \u2014 Simple PEP 282-style logging": [[71, "module-distutils.log"]], "distutils.spawn \u2014 Spawn a sub-process": [[71, "module-distutils.spawn"]], "distutils.sysconfig \u2014 System configuration information": [[71, "module-distutils.sysconfig"]], "distutils.text_file \u2014 The TextFile class": [[71, "module-distutils.text_file"]], "distutils.version \u2014 Version number classes": [[71, "module-distutils.version"]], "distutils.cmd \u2014 Abstract base class for Distutils commands": [[71, "module-distutils.cmd"]], "Creating a new Distutils command": [[71, "creating-a-new-distutils-command"]], "distutils.command \u2014 Individual Distutils commands": [[71, "module-distutils.command"]], "distutils.command.bdist \u2014 Build a binary installer": [[71, "module-distutils.command.bdist"]], "distutils.command.bdist_packager \u2014 Abstract base class for packagers": [[71, "module-distutils.command.bdist_packager"]], "distutils.command.bdist_dumb \u2014 Build a \u201cdumb\u201d installer": [[71, "module-distutils.command.bdist_dumb"]], "distutils.command.bdist_rpm \u2014 Build a binary distribution as a Redhat RPM and SRPM": [[71, "module-distutils.command.bdist_rpm"]], "distutils.command.sdist \u2014 Build a source distribution": [[71, "module-distutils.command.sdist"]], "distutils.command.build \u2014 Build all files of a package": [[71, "module-distutils.command.build"]], "distutils.command.build_clib \u2014 Build any C libraries in a package": [[71, "module-distutils.command.build_clib"]], "distutils.command.build_ext \u2014 Build any extensions in a package": [[71, "module-distutils.command.build_ext"]], "distutils.command.build_py \u2014 Build the .py/.pyc files of a package": [[71, "module-distutils.command.build_py"]], "distutils.command.build_scripts \u2014 Build the scripts of a package": [[71, "module-distutils.command.build_scripts"]], "distutils.command.clean \u2014 Clean a package build area": [[71, "module-distutils.command.clean"]], "distutils.command.config \u2014 Perform package configuration": [[71, "module-distutils.command.config"]], "distutils.command.install \u2014 Install a package": [[71, "module-distutils.command.install"]], "distutils.command.install_data \u2014 Install data files from a package": [[71, "module-distutils.command.install_data"]], "distutils.command.install_headers \u2014 Install C/C++ header files from a package": [[71, "module-distutils.command.install_headers"]], "distutils.command.install_lib \u2014 Install library files from a package": [[71, "module-distutils.command.install_lib"]], "distutils.command.install_scripts \u2014 Install script files from a package": [[71, "module-distutils.command.install_scripts"]], "distutils.command.register \u2014 Register a module with the Python Package Index": [[71, "module-distutils.command.register"]], "distutils.command.check \u2014 Check the meta-data of a package": [[71, "module-distutils.command.check"]], "Creating Built Distributions": [[72, "creating-built-distributions"]], "Creating RPM packages": [[72, "creating-rpm-packages"]], "Cross-compiling on Windows": [[72, "cross-compiling-on-windows"]], "The Postinstallation script": [[72, "the-postinstallation-script"]], "Command Reference": [[73, "command-reference"]], "Installing modules: the install command family": [[73, "installing-modules-the-install-command-family"]], "install_data": [[73, "install-data"]], "install_scripts": [[73, "install-scripts"]], "Creating a source distribution: the sdist command": [[73, "creating-a-source-distribution-the-sdist-command"]], "Writing the Setup Configuration File": [[74, "writing-the-setup-configuration-file"]], "Distutils Examples": [[75, "distutils-examples"]], "Pure Python distribution (by module)": [[75, "pure-python-distribution-by-module"]], "Pure Python distribution (by package)": [[75, "pure-python-distribution-by-package"]], "Single extension module": [[75, "single-extension-module"]], "Checking a package": [[75, "checking-a-package"]], "Reading the metadata": [[75, "reading-the-metadata"]], "Extending Distutils": [[76, "extending-distutils"]], "Integrating new commands": [[76, "integrating-new-commands"]], "Adding new distribution types": [[76, "adding-new-distribution-types"]], "Distributing Python Modules (Legacy version)": [[77, "distributing-python-modules-legacy-version"]], "An Introduction to Distutils": [[78, "an-introduction-to-distutils"]], "Concepts & Terminology": [[78, "concepts-terminology"]], "A Simple Example": [[78, "a-simple-example"], [85, "a-simple-example"]], "General Python terminology": [[78, "general-python-terminology"]], "Distutils-specific terminology": [[78, "distutils-specific-terminology"]], "The Python Package Index (PyPI)": [[79, "the-python-package-index-pypi"]], "Writing the Setup Script": [[80, "writing-the-setup-script"]], "Listing whole packages": [[80, "listing-whole-packages"]], "Listing individual modules": [[80, "listing-individual-modules"]], "Describing extension modules": [[80, "describing-extension-modules"]], "Extension names and packages": [[80, "extension-names-and-packages"]], "Extension source files": [[80, "extension-source-files"]], "Preprocessor options": [[80, "preprocessor-options"]], "Library options": [[80, "library-options"]], "Other options": [[80, "other-options"]], "Relationships between Distributions and Packages": [[80, "relationships-between-distributions-and-packages"]], "Installing Scripts": [[80, "installing-scripts"]], "Installing Package Data": [[80, "installing-package-data"]], "Installing Additional Files": [[80, "installing-additional-files"]], "Additional meta-data": [[80, "additional-meta-data"]], "Debugging the setup script": [[80, "debugging-the-setup-script"]], "Creating a Source Distribution": [[81, "creating-a-source-distribution"]], "Specifying the files to distribute": [[81, "specifying-the-files-to-distribute"]], "Manifest-related options": [[81, "manifest-related-options"]], "Uploading Packages to the Package Index": [[82, "uploading-packages-to-the-package-index"]], "Building C and C++ Extensions": [[83, "building-c-and-c-extensions"]], "Building C and C++ Extensions with distutils": [[83, "building-c-and-c-extensions-with-distutils"]], "Distributing your extension modules": [[83, "distributing-your-extension-modules"]], "Embedding Python in Another Application": [[84, "embedding-python-in-another-application"]], "Very High Level Embedding": [[84, "very-high-level-embedding"]], "Beyond Very High Level Embedding: An overview": [[84, "beyond-very-high-level-embedding-an-overview"]], "Pure Embedding": [[84, "pure-embedding"]], "Extending Embedded Python": [[84, "extending-embedded-python"]], "Embedding Python in C++": [[84, "embedding-python-in-c"]], "Compiling and Linking under Unix-like systems": [[84, "compiling-and-linking-under-unix-like-systems"]], "Extending Python with C or C++": [[85, "extending-python-with-c-or-c"]], "Intermezzo: Errors and Exceptions": [[85, "intermezzo-errors-and-exceptions"]], "Back to the Example": [[85, "back-to-the-example"]], "The Module\u2019s Method Table and Initialization Function": [[85, "the-module-s-method-table-and-initialization-function"]], "Compilation and Linkage": [[85, "compilation-and-linkage"]], "Calling Python Functions from C": [[85, "calling-python-functions-from-c"]], "Extracting Parameters in Extension Functions": [[85, "extracting-parameters-in-extension-functions"]], "Keyword Parameters for Extension Functions": [[85, "keyword-parameters-for-extension-functions"]], "Building Arbitrary Values": [[85, "building-arbitrary-values"]], "Reference Counting in Python": [[85, "reference-counting-in-python"]], "Ownership Rules": [[85, "ownership-rules"]], "Thin Ice": [[85, "thin-ice"]], "NULL Pointers": [[85, "null-pointers"]], "Writing Extensions in C++": [[85, "writing-extensions-in-c"]], "Providing a C API for an Extension Module": [[85, "providing-a-c-api-for-an-extension-module"]], "Extending and Embedding the Python Interpreter": [[86, "extending-and-embedding-the-python-interpreter"]], "Recommended third party tools": [[86, "recommended-third-party-tools"]], "Creating extensions without third party tools": [[86, "creating-extensions-without-third-party-tools"]], "Embedding the CPython runtime in a larger application": [[86, "embedding-the-cpython-runtime-in-a-larger-application"]], "Defining Extension Types: Assorted Topics": [[87, "defining-extension-types-assorted-topics"]], "Finalization and De-allocation": [[87, "finalization-and-de-allocation"]], "Object Presentation": [[87, "object-presentation"]], "Attribute Management": [[87, "attribute-management"]], "Generic Attribute Management": [[87, "generic-attribute-management"]], "Type-specific Attribute Management": [[87, "type-specific-attribute-management"]], "Object Comparison": [[87, "object-comparison"]], "Abstract Protocol Support": [[87, "abstract-protocol-support"]], "Weak Reference Support": [[87, "weak-reference-support"]], "More Suggestions": [[87, "more-suggestions"]], "Defining Extension Types: Tutorial": [[88, "defining-extension-types-tutorial"]], "The Basics": [[88, "the-basics"]], "Adding data and methods to the Basic example": [[88, "adding-data-and-methods-to-the-basic-example"]], "Providing finer control over data attributes": [[88, "providing-finer-control-over-data-attributes"]], "Supporting cyclic garbage collection": [[88, "supporting-cyclic-garbage-collection"]], "Subclassing other types": [[88, "subclassing-other-types"]], "Building C and C++ Extensions on Windows": [[89, "building-c-and-c-extensions-on-windows"]], "A Cookbook Approach": [[89, "a-cookbook-approach"]], "Differences Between Unix and Windows": [[89, "differences-between-unix-and-windows"]], "Using DLLs in Practice": [[89, "using-dlls-in-practice"]], "Design and History FAQ": [[90, "design-and-history-faq"]], "Contents": [[90, "contents"], [91, "contents"], [92, "contents"], [93, "contents"], [96, "contents"], [97, "contents"], [98, "contents"], [105, "contents"]], "Why does Python use indentation for grouping of statements?": [[90, "why-does-python-use-indentation-for-grouping-of-statements"]], "Why am I getting strange results with simple arithmetic operations?": [[90, "why-am-i-getting-strange-results-with-simple-arithmetic-operations"]], "Why are floating-point calculations so inaccurate?": [[90, "why-are-floating-point-calculations-so-inaccurate"]], "Why are Python strings immutable?": [[90, "why-are-python-strings-immutable"]], "Why must \u2018self\u2019 be used explicitly in method definitions and calls?": [[90, "why-must-self-be-used-explicitly-in-method-definitions-and-calls"]], "Why can\u2019t I use an assignment in an expression?": [[90, "why-can-t-i-use-an-assignment-in-an-expression"]], "Why does Python use methods for some functionality (e.g. list.index()) but functions for other (e.g. len(list))?": [[90, "why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list"]], "Why is join() a string method instead of a list or tuple method?": [[90, "why-is-join-a-string-method-instead-of-a-list-or-tuple-method"]], "How fast are exceptions?": [[90, "how-fast-are-exceptions"]], "Why isn\u2019t there a switch or case statement in Python?": [[90, "why-isn-t-there-a-switch-or-case-statement-in-python"]], "Can\u2019t you emulate threads in the interpreter instead of relying on an OS-specific thread implementation?": [[90, "can-t-you-emulate-threads-in-the-interpreter-instead-of-relying-on-an-os-specific-thread-implementation"]], "Why can\u2019t lambda expressions contain statements?": [[90, "why-can-t-lambda-expressions-contain-statements"]], "Can Python be compiled to machine code, C or some other language?": [[90, "can-python-be-compiled-to-machine-code-c-or-some-other-language"]], "How does Python manage memory?": [[90, "how-does-python-manage-memory"]], "Why doesn\u2019t CPython use a more traditional garbage collection scheme?": [[90, "why-doesn-t-cpython-use-a-more-traditional-garbage-collection-scheme"]], "Why isn\u2019t all memory freed when CPython exits?": [[90, "why-isn-t-all-memory-freed-when-cpython-exits"]], "Why are there separate tuple and list data types?": [[90, "why-are-there-separate-tuple-and-list-data-types"]], "How are lists implemented in CPython?": [[90, "how-are-lists-implemented-in-cpython"]], "How are dictionaries implemented in CPython?": [[90, "how-are-dictionaries-implemented-in-cpython"]], "Why must dictionary keys be immutable?": [[90, "why-must-dictionary-keys-be-immutable"]], "Why doesn\u2019t list.sort() return the sorted list?": [[90, "why-doesn-t-list-sort-return-the-sorted-list"]], "How do you specify and enforce an interface spec in Python?": [[90, "how-do-you-specify-and-enforce-an-interface-spec-in-python"]], "Why is there no goto?": [[90, "why-is-there-no-goto"]], "Why can\u2019t raw strings (r-strings) end with a backslash?": [[90, "why-can-t-raw-strings-r-strings-end-with-a-backslash"]], "Why doesn\u2019t Python have a \u201cwith\u201d statement for attribute assignments?": [[90, "why-doesn-t-python-have-a-with-statement-for-attribute-assignments"]], "Why don\u2019t generators support the with statement?": [[90, "why-don-t-generators-support-the-with-statement"]], "Why are colons required for the if/while/def/class statements?": [[90, "why-are-colons-required-for-the-if-while-def-class-statements"]], "Why does Python allow commas at the end of lists and tuples?": [[90, "why-does-python-allow-commas-at-the-end-of-lists-and-tuples"]], "Extending/Embedding FAQ": [[91, "extending-embedding-faq"]], "Can I create my own functions in C?": [[91, "can-i-create-my-own-functions-in-c"]], "Can I create my own functions in C++?": [[91, "id1"]], "Writing C is hard; are there any alternatives?": [[91, "writing-c-is-hard-are-there-any-alternatives"]], "How can I execute arbitrary Python statements from C?": [[91, "how-can-i-execute-arbitrary-python-statements-from-c"]], "How can I evaluate an arbitrary Python expression from C?": [[91, "how-can-i-evaluate-an-arbitrary-python-expression-from-c"]], "How do I extract C values from a Python object?": [[91, "how-do-i-extract-c-values-from-a-python-object"]], "How do I use Py_BuildValue() to create a tuple of arbitrary length?": [[91, "how-do-i-use-py-buildvalue-to-create-a-tuple-of-arbitrary-length"]], "How do I call an object\u2019s method from C?": [[91, "how-do-i-call-an-object-s-method-from-c"]], "How do I catch the output from PyErr_Print() (or anything that prints to stdout/stderr)?": [[91, "how-do-i-catch-the-output-from-pyerr-print-or-anything-that-prints-to-stdout-stderr"]], "How do I access a module written in Python from C?": [[91, "how-do-i-access-a-module-written-in-python-from-c"]], "How do I interface to C++ objects from Python?": [[91, "how-do-i-interface-to-c-objects-from-python"]], "I added a module using the Setup file and the make fails; why?": [[91, "i-added-a-module-using-the-setup-file-and-the-make-fails-why"]], "How do I debug an extension?": [[91, "how-do-i-debug-an-extension"]], "I want to compile a Python module on my Linux system, but some files are missing. Why?": [[91, "i-want-to-compile-a-python-module-on-my-linux-system-but-some-files-are-missing-why"]], "How do I tell \u201cincomplete input\u201d from \u201cinvalid input\u201d?": [[91, "how-do-i-tell-incomplete-input-from-invalid-input"]], "How do I find undefined g++ symbols __builtin_new or __pure_virtual?": [[91, "how-do-i-find-undefined-g-symbols-builtin-new-or-pure-virtual"]], "Can I create an object class with some methods implemented in C and others in Python (e.g. through inheritance)?": [[91, "can-i-create-an-object-class-with-some-methods-implemented-in-c-and-others-in-python-e-g-through-inheritance"]], "General Python FAQ": [[92, "general-python-faq"]], "General Information": [[92, "general-information"]], "What is Python?": [[92, "what-is-python"], [95, "what-is-python"]], "What is the Python Software Foundation?": [[92, "what-is-the-python-software-foundation"]], "Are there copyright restrictions on the use of Python?": [[92, "are-there-copyright-restrictions-on-the-use-of-python"]], "Why was Python created in the first place?": [[92, "why-was-python-created-in-the-first-place"]], "What is Python good for?": [[92, "what-is-python-good-for"]], "How does the Python version numbering scheme work?": [[92, "how-does-the-python-version-numbering-scheme-work"]], "How do I obtain a copy of the Python source?": [[92, "how-do-i-obtain-a-copy-of-the-python-source"]], "How do I get documentation on Python?": [[92, "how-do-i-get-documentation-on-python"]], "I\u2019ve never programmed before. Is there a Python tutorial?": [[92, "i-ve-never-programmed-before-is-there-a-python-tutorial"]], "Is there a newsgroup or mailing list devoted to Python?": [[92, "is-there-a-newsgroup-or-mailing-list-devoted-to-python"]], "How do I get a beta test version of Python?": [[92, "how-do-i-get-a-beta-test-version-of-python"]], "How do I submit bug reports and patches for Python?": [[92, "how-do-i-submit-bug-reports-and-patches-for-python"]], "Are there any published articles about Python that I can reference?": [[92, "are-there-any-published-articles-about-python-that-i-can-reference"]], "Are there any books on Python?": [[92, "are-there-any-books-on-python"]], "Where in the world is www.python.org located?": [[92, "where-in-the-world-is-www-python-org-located"]], "Why is it called Python?": [[92, "why-is-it-called-python"]], "Do I have to like \u201cMonty Python\u2019s Flying Circus\u201d?": [[92, "do-i-have-to-like-monty-python-s-flying-circus"]], "Python in the real world": [[92, "python-in-the-real-world"]], "How stable is Python?": [[92, "how-stable-is-python"]], "How many people are using Python?": [[92, "how-many-people-are-using-python"]], "Have any significant projects been done in Python?": [[92, "have-any-significant-projects-been-done-in-python"]], "What new developments are expected for Python in the future?": [[92, "what-new-developments-are-expected-for-python-in-the-future"]], "Is it reasonable to propose incompatible changes to Python?": [[92, "is-it-reasonable-to-propose-incompatible-changes-to-python"]], "Is Python a good language for beginning programmers?": [[92, "is-python-a-good-language-for-beginning-programmers"]], "Graphic User Interface FAQ": [[93, "graphic-user-interface-faq"]], "General GUI Questions": [[93, "general-gui-questions"]], "What GUI toolkits exist for Python?": [[93, "what-gui-toolkits-exist-for-python"]], "Tkinter questions": [[93, "tkinter-questions"]], "How do I freeze Tkinter applications?": [[93, "how-do-i-freeze-tkinter-applications"]], "Can I have Tk events handled while waiting for I/O?": [[93, "can-i-have-tk-events-handled-while-waiting-for-i-o"]], "I can\u2019t get key bindings to work in Tkinter: why?": [[93, "i-can-t-get-key-bindings-to-work-in-tkinter-why"]], "Python Frequently Asked Questions": [[94, "python-frequently-asked-questions"]], "\u201cWhy is Python Installed on my Computer?\u201d FAQ": [[95, "why-is-python-installed-on-my-computer-faq"]], "Why is Python installed on my machine?": [[95, "why-is-python-installed-on-my-machine"]], "Can I delete Python?": [[95, "can-i-delete-python"]], "Library and Extension FAQ": [[96, "library-and-extension-faq"]], "General Library Questions": [[96, "general-library-questions"]], "How do I find a module or application to perform task X?": [[96, "how-do-i-find-a-module-or-application-to-perform-task-x"]], "Where is the math.py (socket.py, regex.py, etc.) source file?": [[96, "where-is-the-math-py-socket-py-regex-py-etc-source-file"]], "How do I make a Python script executable on Unix?": [[96, "how-do-i-make-a-python-script-executable-on-unix"]], "Is there a curses/termcap package for Python?": [[96, "is-there-a-curses-termcap-package-for-python"]], "Is there an equivalent to C\u2019s onexit() in Python?": [[96, "is-there-an-equivalent-to-c-s-onexit-in-python"]], "Why don\u2019t my signal handlers work?": [[96, "why-don-t-my-signal-handlers-work"]], "Common tasks": [[96, "common-tasks"]], "How do I test a Python program or component?": [[96, "how-do-i-test-a-python-program-or-component"]], "How do I create documentation from doc strings?": [[96, "how-do-i-create-documentation-from-doc-strings"]], "How do I get a single keypress at a time?": [[96, "how-do-i-get-a-single-keypress-at-a-time"]], "Threads": [[96, "threads"]], "How do I program using threads?": [[96, "how-do-i-program-using-threads"]], "None of my threads seem to run: why?": [[96, "none-of-my-threads-seem-to-run-why"]], "How do I parcel out work among a bunch of worker threads?": [[96, "how-do-i-parcel-out-work-among-a-bunch-of-worker-threads"]], "What kinds of global value mutation are thread-safe?": [[96, "what-kinds-of-global-value-mutation-are-thread-safe"]], "Can\u2019t we get rid of the Global Interpreter Lock?": [[96, "can-t-we-get-rid-of-the-global-interpreter-lock"]], "Input and Output": [[96, "input-and-output"], [461, "input-and-output"]], "How do I delete a file? (And other file questions\u2026)": [[96, "how-do-i-delete-a-file-and-other-file-questions"]], "How do I copy a file?": [[96, "how-do-i-copy-a-file"]], "How do I read (or write) binary data?": [[96, "how-do-i-read-or-write-binary-data"]], "I can\u2019t seem to use os.read() on a pipe created with os.popen(); why?": [[96, "i-can-t-seem-to-use-os-read-on-a-pipe-created-with-os-popen-why"]], "How do I access the serial (RS232) port?": [[96, "how-do-i-access-the-serial-rs232-port"]], "Why doesn\u2019t closing sys.stdout (stdin, stderr) really close it?": [[96, "why-doesn-t-closing-sys-stdout-stdin-stderr-really-close-it"]], "Network/Internet Programming": [[96, "network-internet-programming"]], "What WWW tools are there for Python?": [[96, "what-www-tools-are-there-for-python"]], "How can I mimic CGI form submission (METHOD=POST)?": [[96, "how-can-i-mimic-cgi-form-submission-method-post"]], "What module should I use to help with generating HTML?": [[96, "what-module-should-i-use-to-help-with-generating-html"]], "How do I send mail from a Python script?": [[96, "how-do-i-send-mail-from-a-python-script"]], "How do I avoid blocking in the connect() method of a socket?": [[96, "how-do-i-avoid-blocking-in-the-connect-method-of-a-socket"]], "Databases": [[96, "databases"]], "Are there any interfaces to database packages in Python?": [[96, "are-there-any-interfaces-to-database-packages-in-python"]], "How do you implement persistent objects in Python?": [[96, "how-do-you-implement-persistent-objects-in-python"]], "Mathematics and Numerics": [[96, "mathematics-and-numerics"]], "How do I generate random numbers in Python?": [[96, "how-do-i-generate-random-numbers-in-python"]], "Programming FAQ": [[97, "programming-faq"]], "General Questions": [[97, "general-questions"]], "Is there a source code level debugger with breakpoints, single-stepping, etc.?": [[97, "is-there-a-source-code-level-debugger-with-breakpoints-single-stepping-etc"]], "Are there tools to help find bugs or perform static analysis?": [[97, "are-there-tools-to-help-find-bugs-or-perform-static-analysis"]], "How can I create a stand-alone binary from a Python script?": [[97, "how-can-i-create-a-stand-alone-binary-from-a-python-script"]], "Are there coding standards or a style guide for Python programs?": [[97, "are-there-coding-standards-or-a-style-guide-for-python-programs"]], "Core Language": [[97, "core-language"]], "Why am I getting an UnboundLocalError when the variable has a value?": [[97, "why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value"]], "What are the rules for local and global variables in Python?": [[97, "what-are-the-rules-for-local-and-global-variables-in-python"]], "Why do lambdas defined in a loop with different values all return the same result?": [[97, "why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result"]], "How do I share global variables across modules?": [[97, "how-do-i-share-global-variables-across-modules"]], "What are the \u201cbest practices\u201d for using import in a module?": [[97, "what-are-the-best-practices-for-using-import-in-a-module"]], "Why are default values shared between objects?": [[97, "why-are-default-values-shared-between-objects"]], "How can I pass optional or keyword parameters from one function to another?": [[97, "how-can-i-pass-optional-or-keyword-parameters-from-one-function-to-another"]], "What is the difference between arguments and parameters?": [[97, "what-is-the-difference-between-arguments-and-parameters"]], "Why did changing list \u2018y\u2019 also change list \u2018x\u2019?": [[97, "why-did-changing-list-y-also-change-list-x"]], "How do I write a function with output parameters (call by reference)?": [[97, "how-do-i-write-a-function-with-output-parameters-call-by-reference"]], "How do you make a higher order function in Python?": [[97, "how-do-you-make-a-higher-order-function-in-python"]], "How do I copy an object in Python?": [[97, "how-do-i-copy-an-object-in-python"]], "How can I find the methods or attributes of an object?": [[97, "how-can-i-find-the-methods-or-attributes-of-an-object"]], "How can my code discover the name of an object?": [[97, "how-can-my-code-discover-the-name-of-an-object"]], "What\u2019s up with the comma operator\u2019s precedence?": [[97, "what-s-up-with-the-comma-operator-s-precedence"]], "Is there an equivalent of C\u2019s \u201c?:\u201d ternary operator?": [[97, "is-there-an-equivalent-of-c-s-ternary-operator"]], "Is it possible to write obfuscated one-liners in Python?": [[97, "is-it-possible-to-write-obfuscated-one-liners-in-python"]], "What does the slash(/) in the parameter list of a function mean?": [[97, "what-does-the-slash-in-the-parameter-list-of-a-function-mean"]], "Numbers and strings": [[97, "numbers-and-strings"]], "How do I specify hexadecimal and octal integers?": [[97, "how-do-i-specify-hexadecimal-and-octal-integers"]], "Why does -22 // 10 return -3?": [[97, "why-does-22-10-return-3"]], "How do I get int literal attribute instead of SyntaxError?": [[97, "how-do-i-get-int-literal-attribute-instead-of-syntaxerror"]], "How do I convert a string to a number?": [[97, "how-do-i-convert-a-string-to-a-number"]], "How do I convert a number to a string?": [[97, "how-do-i-convert-a-number-to-a-string"]], "How do I modify a string in place?": [[97, "how-do-i-modify-a-string-in-place"]], "How do I use strings to call functions/methods?": [[97, "how-do-i-use-strings-to-call-functions-methods"]], "Is there an equivalent to Perl\u2019s chomp() for removing trailing newlines from strings?": [[97, "is-there-an-equivalent-to-perl-s-chomp-for-removing-trailing-newlines-from-strings"]], "Is there a scanf() or sscanf() equivalent?": [[97, "is-there-a-scanf-or-sscanf-equivalent"]], "What does \u2018UnicodeDecodeError\u2019 or \u2018UnicodeEncodeError\u2019 error  mean?": [[97, "what-does-unicodedecodeerror-or-unicodeencodeerror-error-mean"]], "Can I end a raw string with an odd number of backslashes?": [[97, "can-i-end-a-raw-string-with-an-odd-number-of-backslashes"]], "Performance": [[97, "performance"], [273, "performance"], [314, "performance"], [485, "performance"]], "My program is too slow. How do I speed it up?": [[97, "my-program-is-too-slow-how-do-i-speed-it-up"]], "What is the most efficient way to concatenate many strings together?": [[97, "what-is-the-most-efficient-way-to-concatenate-many-strings-together"]], "Sequences (Tuples/Lists)": [[97, "sequences-tuples-lists"]], "How do I convert between tuples and lists?": [[97, "how-do-i-convert-between-tuples-and-lists"]], "What\u2019s a negative index?": [[97, "what-s-a-negative-index"]], "How do I iterate over a sequence in reverse order?": [[97, "how-do-i-iterate-over-a-sequence-in-reverse-order"]], "How do you remove duplicates from a list?": [[97, "how-do-you-remove-duplicates-from-a-list"]], "How do you remove multiple items from a list": [[97, "how-do-you-remove-multiple-items-from-a-list"]], "How do you make an array in Python?": [[97, "how-do-you-make-an-array-in-python"]], "How do I create a multidimensional list?": [[97, "how-do-i-create-a-multidimensional-list"]], "How do I apply a method or function to a sequence of objects?": [[97, "how-do-i-apply-a-method-or-function-to-a-sequence-of-objects"]], "Why does a_tuple[i] += [\u2018item\u2019] raise an exception when the addition works?": [[97, "why-does-a-tuple-i-item-raise-an-exception-when-the-addition-works"]], "I want to do a complicated sort: can you do a Schwartzian Transform in Python?": [[97, "i-want-to-do-a-complicated-sort-can-you-do-a-schwartzian-transform-in-python"]], "How can I sort one list by values from another list?": [[97, "how-can-i-sort-one-list-by-values-from-another-list"]], "Objects": [[97, "objects"]], "What is a class?": [[97, "what-is-a-class"]], "What is a method?": [[97, "what-is-a-method"]], "What is self?": [[97, "what-is-self"]], "How do I check if an object is an instance of a given class or of a subclass of it?": [[97, "how-do-i-check-if-an-object-is-an-instance-of-a-given-class-or-of-a-subclass-of-it"]], "What is delegation?": [[97, "what-is-delegation"]], "How do I call a method defined in a base class from a derived class that extends it?": [[97, "how-do-i-call-a-method-defined-in-a-base-class-from-a-derived-class-that-extends-it"]], "How can I organize my code to make it easier to change the base class?": [[97, "how-can-i-organize-my-code-to-make-it-easier-to-change-the-base-class"]], "How do I create static class data and static class methods?": [[97, "how-do-i-create-static-class-data-and-static-class-methods"]], "How can I overload constructors (or methods) in Python?": [[97, "how-can-i-overload-constructors-or-methods-in-python"]], "I try to use __spam and I get an error about _SomeClassName__spam.": [[97, "i-try-to-use-spam-and-i-get-an-error-about-someclassname-spam"]], "My class defines __del__ but it is not called when I delete the object.": [[97, "my-class-defines-del-but-it-is-not-called-when-i-delete-the-object"]], "How do I get a list of all instances of a given class?": [[97, "how-do-i-get-a-list-of-all-instances-of-a-given-class"]], "Why does the result of id() appear to be not unique?": [[97, "why-does-the-result-of-id-appear-to-be-not-unique"]], "When can I rely on identity tests with the is operator?": [[97, "when-can-i-rely-on-identity-tests-with-the-is-operator"]], "How can a subclass control what data is stored in an immutable instance?": [[97, "how-can-a-subclass-control-what-data-is-stored-in-an-immutable-instance"]], "How do I cache method calls?": [[97, "how-do-i-cache-method-calls"]], "Modules": [[97, "modules"], [360, "modules"], [443, "modules"], [465, "modules"], [488, "modules"]], "How do I create a .pyc file?": [[97, "how-do-i-create-a-pyc-file"]], "How do I find the current module name?": [[97, "how-do-i-find-the-current-module-name"]], "How can I have modules that mutually import each other?": [[97, "how-can-i-have-modules-that-mutually-import-each-other"]], "__import__(\u2018x.y.z\u2019) returns <module \u2018x\u2019>; how do I get z?": [[97, "import-x-y-z-returns-module-x-how-do-i-get-z"]], "When I edit an imported module and reimport it, the changes don\u2019t show up.  Why does this happen?": [[97, "when-i-edit-an-imported-module-and-reimport-it-the-changes-don-t-show-up-why-does-this-happen"]], "Python on Windows FAQ": [[98, "python-on-windows-faq"]], "How do I run a Python program under Windows?": [[98, "how-do-i-run-a-python-program-under-windows"]], "How do I make Python scripts executable?": [[98, "how-do-i-make-python-scripts-executable"]], "Why does Python sometimes take so long to start?": [[98, "why-does-python-sometimes-take-so-long-to-start"]], "How do I make an executable from a Python script?": [[98, "how-do-i-make-an-executable-from-a-python-script"]], "Is a *.pyd file the same as a DLL?": [[98, "is-a-pyd-file-the-same-as-a-dll"]], "How can I embed Python into a Windows application?": [[98, "how-can-i-embed-python-into-a-windows-application"]], "How do I keep editors from inserting tabs into my Python source?": [[98, "how-do-i-keep-editors-from-inserting-tabs-into-my-python-source"]], "How do I check for a keypress without blocking?": [[98, "how-do-i-check-for-a-keypress-without-blocking"]], "How do I solve the missing api-ms-win-crt-runtime-l1-1-0.dll error?": [[98, "how-do-i-solve-the-missing-api-ms-win-crt-runtime-l1-1-0-dll-error"]], "Glossary": [[99, "glossary"]], "Annotations Best Practices": [[100, "annotations-best-practices"]], "Abstract": [[100, null], [104, null], [105, "abstract"], [112, null], [116, null], [117, null]], "Accessing The Annotations Dict Of An Object In Python 3.10 And Newer": [[100, "accessing-the-annotations-dict-of-an-object-in-python-3-10-and-newer"]], "Accessing The Annotations Dict Of An Object In Python 3.9 And Older": [[100, "accessing-the-annotations-dict-of-an-object-in-python-3-9-and-older"]], "Manually Un-Stringizing Stringized Annotations": [[100, "manually-un-stringizing-stringized-annotations"]], "Best Practices For __annotations__ In Any Python Version": [[100, "best-practices-for-annotations-in-any-python-version"]], "__annotations__ Quirks": [[100, "annotations-quirks"]], "Argparse Tutorial": [[101, "argparse-tutorial"]], "Concepts": [[101, "concepts"]], "The basics": [[101, "the-basics"]], "Introducing Positional arguments": [[101, "introducing-positional-arguments"]], "Introducing Optional arguments": [[101, "introducing-optional-arguments"]], "Short options": [[101, "short-options"]], "Combining Positional and Optional arguments": [[101, "combining-positional-and-optional-arguments"]], "Getting a little more advanced": [[101, "getting-a-little-more-advanced"]], "Conflicting options": [[101, "conflicting-options"]], "How to translate the argparse output": [[101, "how-to-translate-the-argparse-output"]], "Conclusion": [[101, "conclusion"]], "Argument Clinic How-To": [[102, "argument-clinic-how-to"]], "Porting Extension Modules to Python 3": [[103, "porting-extension-modules-to-python-3"]], "Curses Programming with Python": [[104, "curses-programming-with-python"]], "What is curses?": [[104, "what-is-curses"]], "The Python curses module": [[104, "the-python-curses-module"]], "Starting and ending a curses application": [[104, "starting-and-ending-a-curses-application"]], "Windows and Pads": [[104, "windows-and-pads"]], "Displaying Text": [[104, "displaying-text"]], "Attributes and Color": [[104, "attributes-and-color"]], "User Input": [[104, "user-input"]], "For More Information": [[104, "for-more-information"]], "Descriptor HowTo Guide": [[105, "descriptor-howto-guide"]], "Primer": [[105, "primer"]], "Simple example: A descriptor that returns a constant": [[105, "simple-example-a-descriptor-that-returns-a-constant"]], "Dynamic lookups": [[105, "dynamic-lookups"]], "Managed attributes": [[105, "managed-attributes"]], "Customized names": [[105, "customized-names"]], "Closing thoughts": [[105, "closing-thoughts"]], "Complete Practical Example": [[105, "complete-practical-example"]], "Validator class": [[105, "validator-class"]], "Custom validators": [[105, "custom-validators"]], "Practical application": [[105, "practical-application"]], "Technical Tutorial": [[105, "technical-tutorial"]], "Definition and introduction": [[105, "definition-and-introduction"]], "Descriptor protocol": [[105, "descriptor-protocol"]], "Overview of descriptor invocation": [[105, "overview-of-descriptor-invocation"]], "Invocation from an instance": [[105, "invocation-from-an-instance"]], "Invocation from a class": [[105, "invocation-from-a-class"]], "Invocation from super": [[105, "invocation-from-super"]], "Summary of invocation logic": [[105, "summary-of-invocation-logic"]], "Automatic name notification": [[105, "automatic-name-notification"]], "ORM example": [[105, "orm-example"]], "Pure Python Equivalents": [[105, "pure-python-equivalents"]], "Properties": [[105, "properties"]], "Functions and methods": [[105, "functions-and-methods"]], "Kinds of methods": [[105, "kinds-of-methods"]], "Static methods": [[105, "static-methods"]], "Class methods": [[105, "class-methods"]], "Member objects and __slots__": [[105, "member-objects-and-slots"]], "Enum HOWTO": [[106, "enum-howto"]], "Programmatic access to enumeration members and their attributes": [[106, "programmatic-access-to-enumeration-members-and-their-attributes"]], "Duplicating enum members and values": [[106, "duplicating-enum-members-and-values"]], "Ensuring unique enumeration values": [[106, "ensuring-unique-enumeration-values"]], "Using automatic values": [[106, "using-automatic-values"]], "Iteration": [[106, "iteration"], [274, "iteration"]], "Comparisons": [[106, "comparisons"], [111, "comparisons"], [360, "comparisons"], [445, "comparisons"]], "Allowed members and attributes of enumerations": [[106, "allowed-members-and-attributes-of-enumerations"]], "Restricted Enum subclassing": [[106, "restricted-enum-subclassing"]], "Pickling": [[106, "pickling"]], "Functional API": [[106, "functional-api"], [266, "functional-api"]], "Derived Enumerations": [[106, "derived-enumerations"]], "IntEnum": [[106, "intenum"]], "StrEnum": [[106, "strenum"]], "IntFlag": [[106, "intflag"]], "Flag": [[106, "flag"]], "Others": [[106, "others"]], "When to use __new__() vs. __init__()": [[106, "when-to-use-new-vs-init"]], "Finer Points": [[106, "finer-points"]], "Supported __dunder__ names": [[106, "supported-dunder-names"], [225, "supported-dunder-names"]], "Supported _sunder_ names": [[106, "supported-sunder-names"], [225, "supported-sunder-names"]], "_Private__names": [[106, "private-names"]], "Enum member type": [[106, "enum-member-type"]], "Creating members that are mixed with other data types": [[106, "creating-members-that-are-mixed-with-other-data-types"]], "Boolean value of Enum classes and members": [[106, "boolean-value-of-enum-classes-and-members"]], "Enum classes with methods": [[106, "enum-classes-with-methods"]], "Combining members of Flag": [[106, "combining-members-of-flag"]], "Flag and IntFlag minutia": [[106, "flag-and-intflag-minutia"]], "How are Enums and Flags different?": [[106, "how-are-enums-and-flags-different"]], "Enum Classes": [[106, "enum-classes"]], "Flag Classes": [[106, "flag-classes"]], "Enum Members (aka instances)": [[106, "enum-members-aka-instances"]], "Flag Members": [[106, "flag-members"]], "Enum Cookbook": [[106, "enum-cookbook"]], "Omitting values": [[106, "omitting-values"]], "Using auto": [[106, "using-auto"]], "Using object": [[106, "using-object"]], "Using a descriptive string": [[106, "using-a-descriptive-string"]], "Using a custom __new__()": [[106, "using-a-custom-new"]], "OrderedEnum": [[106, "orderedenum"]], "DuplicateFreeEnum": [[106, "duplicatefreeenum"]], "Planet": [[106, "planet"]], "TimePeriod": [[106, "timeperiod"]], "Subclassing EnumType": [[106, "subclassing-enumtype"]], "Functional Programming HOWTO": [[107, "functional-programming-howto"]], "Formal provability": [[107, "formal-provability"]], "Modularity": [[107, "modularity"]], "Ease of debugging and testing": [[107, "ease-of-debugging-and-testing"]], "Composability": [[107, "composability"]], "Iterators": [[107, "iterators"], [455, "iterators"]], "Data Types That Support Iterators": [[107, "data-types-that-support-iterators"]], "Generator expressions and list comprehensions": [[107, "generator-expressions-and-list-comprehensions"]], "Generators": [[107, "generators"], [455, "generators"]], "Passing values into a generator": [[107, "passing-values-into-a-generator"]], "Built-in functions": [[107, "built-in-functions"], [443, "built-in-functions"]], "The itertools module": [[107, "the-itertools-module"]], "Creating new iterators": [[107, "creating-new-iterators"]], "Calling functions on elements": [[107, "calling-functions-on-elements"]], "Selecting elements": [[107, "selecting-elements"]], "Combinatoric functions": [[107, "combinatoric-functions"]], "Grouping elements": [[107, "grouping-elements"]], "The functools module": [[107, "the-functools-module"]], "The operator module": [[107, "the-operator-module"]], "Small functions and the lambda expression": [[107, "small-functions-and-the-lambda-expression"]], "Revision History and Acknowledgements": [[107, "revision-history-and-acknowledgements"]], "References": [[107, "references"], [119, "references"], [119, "id2"], [119, "id3"], [447, "references"]], "General": [[107, "general"]], "Python-specific": [[107, "python-specific"]], "Python documentation": [[107, "python-documentation"]], "Debugging C API extensions and CPython Internals with GDB": [[108, "debugging-c-api-extensions-and-cpython-internals-with-gdb"]], "Prerequisites": [[108, "prerequisites"]], "Setup with Python built from source": [[108, "setup-with-python-built-from-source"]], "Setup for Python from a Linux distro": [[108, "setup-for-python-from-a-linux-distro"]], "Using the Debug build and Development mode": [[108, "using-the-debug-build-and-development-mode"]], "Using the python-gdb extension": [[108, "using-the-python-gdb-extension"]], "Pretty-printers": [[108, "pretty-printers"]], "py-list": [[108, "py-list"]], "py-up and py-down": [[108, "py-up-and-py-down"]], "py-bt": [[108, "py-bt"]], "py-print": [[108, "py-print"]], "py-locals": [[108, "py-locals"]], "Use with GDB commands": [[108, "use-with-gdb-commands"]], "Python HOWTOs": [[109, "python-howtos"]], "Instrumenting CPython with DTrace and SystemTap": [[110, "instrumenting-cpython-with-dtrace-and-systemtap"]], "Enabling the static markers": [[110, "enabling-the-static-markers"]], "Static DTrace probes": [[110, "static-dtrace-probes"]], "Static SystemTap markers": [[110, "static-systemtap-markers"]], "Available static markers": [[110, "available-static-markers"]], "SystemTap Tapsets": [[110, "systemtap-tapsets"]], "An introduction to the ipaddress module": [[111, "an-introduction-to-the-ipaddress-module"]], "Creating Address/Network/Interface objects": [[111, "creating-address-network-interface-objects"]], "A Note on IP Versions": [[111, "a-note-on-ip-versions"]], "IP Host Addresses": [[111, "ip-host-addresses"]], "Defining Networks": [[111, "defining-networks"]], "Host Interfaces": [[111, "host-interfaces"]], "Inspecting Address/Network/Interface Objects": [[111, "inspecting-address-network-interface-objects"]], "Networks as lists of Addresses": [[111, "networks-as-lists-of-addresses"]], "Using IP Addresses with other modules": [[111, "using-ip-addresses-with-other-modules"]], "Getting more detail when instance creation fails": [[111, "getting-more-detail-when-instance-creation-fails"]], "Isolating Extension Modules": [[112, "isolating-extension-modules"]], "Who should read this": [[112, "who-should-read-this"]], "Background": [[112, "background"], [307, "background"]], "Enter Per-Module State": [[112, "enter-per-module-state"]], "Isolated Module Objects": [[112, "isolated-module-objects"]], "Surprising Edge Cases": [[112, "surprising-edge-cases"]], "Making Modules Safe with Multiple Interpreters": [[112, "making-modules-safe-with-multiple-interpreters"]], "Managing Global State": [[112, "managing-global-state"]], "Managing Per-Module State": [[112, "managing-per-module-state"]], "Opt-Out: Limiting to One Module Object per Process": [[112, "opt-out-limiting-to-one-module-object-per-process"]], "Module State Access from Functions": [[112, "module-state-access-from-functions"]], "Changing Static Types to Heap Types": [[112, "changing-static-types-to-heap-types"]], "Defining Heap Types": [[112, "defining-heap-types"]], "Garbage-Collection Protocol": [[112, "garbage-collection-protocol"]], "tp_traverse in Python 3.8 and lower": [[112, "tp-traverse-in-python-3-8-and-lower"]], "Delegating tp_traverse": [[112, "delegating-tp-traverse"]], "Defining tp_dealloc": [[112, "defining-tp-dealloc"]], "Not overriding tp_free": [[112, "not-overriding-tp-free"]], "Avoiding PyObject_New": [[112, "avoiding-pyobject-new"]], "Module State Access from Classes": [[112, "module-state-access-from-classes"]], "Module State Access from Regular Methods": [[112, "module-state-access-from-regular-methods"]], "Module State Access from Slot Methods, Getters and Setters": [[112, "module-state-access-from-slot-methods-getters-and-setters"]], "Lifetime of the Module State": [[112, "lifetime-of-the-module-state"]], "Open Issues": [[112, "open-issues"]], "Per-Class Scope": [[112, "per-class-scope"]], "Lossless Conversion to Heap Types": [[112, "lossless-conversion-to-heap-types"]], "Logging HOWTO": [[113, "logging-howto"]], "Basic Logging Tutorial": [[113, "basic-logging-tutorial"]], "When to use logging": [[113, "when-to-use-logging"]], "A simple example": [[113, "a-simple-example"]], "Logging to a file": [[113, "logging-to-a-file"]], "Logging variable data": [[113, "logging-variable-data"]], "Changing the format of displayed messages": [[113, "changing-the-format-of-displayed-messages"]], "Displaying the date/time in messages": [[113, "displaying-the-date-time-in-messages"]], "Next Steps": [[113, "next-steps"]], "Advanced Logging Tutorial": [[113, "advanced-logging-tutorial"]], "Logging Flow": [[113, "logging-flow"]], "Loggers": [[113, "loggers"]], "Handlers": [[113, "handlers"]], "Formatters": [[113, "formatters"]], "Configuring Logging": [[113, "configuring-logging"]], "What happens if no configuration is provided": [[113, "what-happens-if-no-configuration-is-provided"]], "Configuring Logging for a Library": [[113, "configuring-logging-for-a-library"]], "Logging Levels": [[113, "logging-levels"], [282, "logging-levels"]], "Custom Levels": [[113, "custom-levels"]], "Useful Handlers": [[113, "useful-handlers"]], "Exceptions raised during logging": [[113, "exceptions-raised-during-logging"]], "Using arbitrary objects as messages": [[113, "using-arbitrary-objects-as-messages"]], "Optimization": [[113, "optimization"]], "Logging Cookbook": [[114, "logging-cookbook"]], "Using logging in multiple modules": [[114, "using-logging-in-multiple-modules"]], "Logging from multiple threads": [[114, "logging-from-multiple-threads"]], "Multiple handlers and formatters": [[114, "multiple-handlers-and-formatters"]], "Logging to multiple destinations": [[114, "logging-to-multiple-destinations"]], "Custom handling of levels": [[114, "custom-handling-of-levels"]], "Configuration server example": [[114, "configuration-server-example"]], "Dealing with handlers that block": [[114, "dealing-with-handlers-that-block"]], "Sending and receiving logging events across a network": [[114, "sending-and-receiving-logging-events-across-a-network"]], "Running a logging socket listener in production": [[114, "running-a-logging-socket-listener-in-production"]], "Adding contextual information to your logging output": [[114, "adding-contextual-information-to-your-logging-output"]], "Using LoggerAdapters to impart contextual information": [[114, "using-loggeradapters-to-impart-contextual-information"]], "Using objects other than dicts to pass contextual information": [[114, "using-objects-other-than-dicts-to-pass-contextual-information"]], "Using Filters to impart contextual information": [[114, "using-filters-to-impart-contextual-information"]], "Use of contextvars": [[114, "use-of-contextvars"]], "Imparting contextual information in handlers": [[114, "imparting-contextual-information-in-handlers"]], "Logging to a single file from multiple processes": [[114, "logging-to-a-single-file-from-multiple-processes"]], "Using concurrent.futures.ProcessPoolExecutor": [[114, "using-concurrent-futures-processpoolexecutor"]], "Deploying Web applications using Gunicorn and uWSGI": [[114, "deploying-web-applications-using-gunicorn-and-uwsgi"]], "Using file rotation": [[114, "using-file-rotation"]], "Use of alternative formatting styles": [[114, "use-of-alternative-formatting-styles"]], "Customizing LogRecord": [[114, "customizing-logrecord"]], "Subclassing QueueHandler and QueueListener- a ZeroMQ example": [[114, "subclassing-queuehandler-and-queuelistener-a-zeromq-example"]], "Subclass QueueHandler": [[114, "subclass-queuehandler"], [114, "id4"]], "Subclass QueueListener": [[114, "subclass-queuelistener"], [114, "id3"]], "Subclassing QueueHandler and QueueListener- a pynng example": [[114, "subclassing-queuehandler-and-queuelistener-a-pynng-example"]], "An example dictionary-based configuration": [[114, "an-example-dictionary-based-configuration"]], "Using a rotator and namer to customize log rotation processing": [[114, "using-a-rotator-and-namer-to-customize-log-rotation-processing"]], "A more elaborate multiprocessing example": [[114, "a-more-elaborate-multiprocessing-example"]], "Inserting a BOM into messages sent to a SysLogHandler": [[114, "inserting-a-bom-into-messages-sent-to-a-sysloghandler"]], "Implementing structured logging": [[114, "implementing-structured-logging"]], "Customizing handlers with dictConfig()": [[114, "customizing-handlers-with-dictconfig"]], "Using particular formatting styles throughout your application": [[114, "using-particular-formatting-styles-throughout-your-application"]], "Using LogRecord factories": [[114, "using-logrecord-factories"]], "Using custom message objects": [[114, "using-custom-message-objects"]], "Configuring filters with dictConfig()": [[114, "configuring-filters-with-dictconfig"]], "Customized exception formatting": [[114, "customized-exception-formatting"]], "Speaking logging messages": [[114, "speaking-logging-messages"]], "Buffering logging messages and outputting them conditionally": [[114, "buffering-logging-messages-and-outputting-them-conditionally"]], "Sending logging messages to email, with buffering": [[114, "sending-logging-messages-to-email-with-buffering"]], "Formatting times using UTC (GMT) via configuration": [[114, "formatting-times-using-utc-gmt-via-configuration"]], "Using a context manager for selective logging": [[114, "using-a-context-manager-for-selective-logging"]], "A CLI application starter template": [[114, "a-cli-application-starter-template"]], "A Qt GUI for logging": [[114, "a-qt-gui-for-logging"]], "Logging to syslog with RFC5424 support": [[114, "logging-to-syslog-with-rfc5424-support"]], "How to treat a logger like an output stream": [[114, "how-to-treat-a-logger-like-an-output-stream"]], "Patterns to avoid": [[114, "patterns-to-avoid"]], "Opening the same log file multiple times": [[114, "opening-the-same-log-file-multiple-times"]], "Using loggers as attributes in a class or passing them as parameters": [[114, "using-loggers-as-attributes-in-a-class-or-passing-them-as-parameters"]], "Adding handlers other than NullHandler to a logger in a library": [[114, "adding-handlers-other-than-nullhandler-to-a-logger-in-a-library"]], "Creating a lot of loggers": [[114, "creating-a-lot-of-loggers"]], "Other resources": [[114, "other-resources"]], "How to port Python 2 Code to Python 3": [[115, "how-to-port-python-2-code-to-python-3"]], "Third-party guides": [[115, "third-party-guides"]], "Regular Expression HOWTO": [[116, "regular-expression-howto"]], "Simple Patterns": [[116, "simple-patterns"]], "Matching Characters": [[116, "matching-characters"]], "Repeating Things": [[116, "repeating-things"]], "Using Regular Expressions": [[116, "using-regular-expressions"]], "Compiling Regular Expressions": [[116, "compiling-regular-expressions"]], "The Backslash Plague": [[116, "the-backslash-plague"]], "Performing Matches": [[116, "performing-matches"]], "Module-Level Functions": [[116, "module-level-functions"], [282, "module-level-functions"]], "Compilation Flags": [[116, "compilation-flags"]], "More Pattern Power": [[116, "more-pattern-power"]], "More Metacharacters": [[116, "more-metacharacters"]], "Grouping": [[116, "grouping"]], "Non-capturing and Named Groups": [[116, "non-capturing-and-named-groups"]], "Lookahead Assertions": [[116, "lookahead-assertions"]], "Modifying Strings": [[116, "modifying-strings"]], "Splitting Strings": [[116, "splitting-strings"]], "Search and Replace": [[116, "search-and-replace"], [261, "search-and-replace"]], "Common Problems": [[116, "common-problems"]], "Use String Methods": [[116, "use-string-methods"]], "match() versus search()": [[116, "match-versus-search"]], "Greedy versus Non-Greedy": [[116, "greedy-versus-non-greedy"]], "Using re.VERBOSE": [[116, "using-re-verbose"]], "Feedback": [[116, "feedback"]], "Socket Programming HOWTO": [[117, "socket-programming-howto"]], "Sockets": [[117, "sockets"], [441, "sockets"]], "History": [[117, "history"]], "Creating a Socket": [[117, "creating-a-socket"]], "IPC": [[117, "ipc"]], "Using a Socket": [[117, "using-a-socket"]], "Binary Data": [[117, "binary-data"]], "Disconnecting": [[117, "disconnecting"]], "When Sockets Die": [[117, "when-sockets-die"]], "Non-blocking Sockets": [[117, "non-blocking-sockets"]], "Sorting HOW TO": [[118, "sorting-how-to"]], "Sorting Basics": [[118, "sorting-basics"]], "Key Functions": [[118, "key-functions"]], "Operator Module Functions": [[118, "operator-module-functions"]], "Ascending and Descending": [[118, "ascending-and-descending"]], "Sort Stability and Complex Sorts": [[118, "sort-stability-and-complex-sorts"]], "Decorate-Sort-Undecorate": [[118, "decorate-sort-undecorate"]], "Comparison Functions": [[118, "comparison-functions"]], "Odds and Ends": [[118, "odds-and-ends"], [455, "odds-and-ends"]], "Unicode HOWTO": [[119, "unicode-howto"]], "Introduction to Unicode": [[119, "introduction-to-unicode"]], "Definitions": [[119, "definitions"]], "Encodings": [[119, "encodings"]], "Python\u2019s Unicode Support": [[119, "python-s-unicode-support"]], "The String Type": [[119, "the-string-type"]], "Converting to Bytes": [[119, "converting-to-bytes"]], "Unicode Literals in Python Source Code": [[119, "unicode-literals-in-python-source-code"]], "Unicode Properties": [[119, "unicode-properties"]], "Comparing Strings": [[119, "comparing-strings"]], "Unicode Regular Expressions": [[119, "unicode-regular-expressions"]], "Reading and Writing Unicode Data": [[119, "reading-and-writing-unicode-data"]], "Unicode filenames": [[119, "unicode-filenames"]], "Tips for Writing Unicode-aware Programs": [[119, "tips-for-writing-unicode-aware-programs"]], "Converting Between File Encodings": [[119, "converting-between-file-encodings"]], "Files in an Unknown Encoding": [[119, "files-in-an-unknown-encoding"]], "Acknowledgements": [[119, "acknowledgements"], [244, "acknowledgements"], [477, "acknowledgements"], [478, "acknowledgements"], [479, "acknowledgements"], [480, "acknowledgements"], [481, "acknowledgements"], [482, "acknowledgements"], [483, "acknowledgements"], [484, "acknowledgements"]], "HOWTO Fetch Internet Resources Using The urllib Package": [[120, "howto-fetch-internet-resources-using-the-urllib-package"]], "Related Articles": [[120, null]], "Fetching URLs": [[120, "fetching-urls"]], "Data": [[120, "data"]], "Headers": [[120, "headers"]], "Handling Exceptions": [[120, "handling-exceptions"], [458, "handling-exceptions"]], "URLError": [[120, "urlerror"]], "HTTPError": [[120, "httperror"]], "Error Codes": [[120, "error-codes"]], "Wrapping it Up": [[120, "wrapping-it-up"]], "Number 1": [[120, "number-1"]], "Number 2": [[120, "number-2"]], "info and geturl": [[120, "info-and-geturl"]], "Openers and Handlers": [[120, "openers-and-handlers"]], "Basic Authentication": [[120, "id5"]], "Proxies": [[120, "proxies"]], "Sockets and Layers": [[120, "sockets-and-layers"]], "Footnotes": [[120, "footnotes"]], "Installing Python Modules (Legacy version)": [[121, "installing-python-modules-legacy-version"]], "Distutils based source distributions": [[121, "distutils-based-source-distributions"]], "Standard Build and Install": [[121, "standard-build-and-install"]], "Platform variations": [[121, "platform-variations"]], "Splitting the job up": [[121, "splitting-the-job-up"]], "How building works": [[121, "how-building-works"]], "How installation works": [[121, "how-installation-works"]], "Alternate Installation": [[121, "alternate-installation"]], "Alternate installation: the user scheme": [[121, "alternate-installation-the-user-scheme"]], "Alternate installation: the home scheme": [[121, "alternate-installation-the-home-scheme"]], "Alternate installation: Unix (the prefix scheme)": [[121, "alternate-installation-unix-the-prefix-scheme"]], "Alternate installation: Windows (the prefix scheme)": [[121, "alternate-installation-windows-the-prefix-scheme"]], "Custom Installation": [[121, "custom-installation"]], "Modifying Python\u2019s Search Path": [[121, "modifying-python-s-search-path"]], "Distutils Configuration Files": [[121, "distutils-configuration-files"]], "Location and names of config files": [[121, "location-and-names-of-config-files"]], "Syntax of config files": [[121, "syntax-of-config-files"]], "Building Extensions: Tips and Tricks": [[121, "building-extensions-tips-and-tricks"]], "Tweaking compiler/linker flags": [[121, "tweaking-compiler-linker-flags"]], "Using non-Microsoft compilers on Windows": [[121, "using-non-microsoft-compilers-on-windows"]], "Borland/CodeGear C++": [[121, "borland-codegear-c"]], "GNU C / Cygwin / MinGW": [[121, "gnu-c-cygwin-mingw"]], "Older Versions of Python and MinGW": [[121, "older-versions-of-python-and-mingw"]], "Installing Python Modules": [[122, "installing-python-modules"]], "Key terms": [[122, "key-terms"]], "Basic usage": [[122, "basic-usage"]], "How do I \u2026?": [[122, "how-do-i"]], "\u2026 install pip in versions of Python prior to Python 3.4?": [[122, "install-pip-in-versions-of-python-prior-to-python-3-4"]], "\u2026 install packages just for the current user?": [[122, "install-packages-just-for-the-current-user"]], "\u2026 install scientific Python packages?": [[122, "install-scientific-python-packages"]], "\u2026 work with multiple versions of Python installed in parallel?": [[122, "work-with-multiple-versions-of-python-installed-in-parallel"]], "Common installation issues": [[122, "common-installation-issues"]], "Installing into the system Python on Linux": [[122, "installing-into-the-system-python-on-linux"]], "Pip not installed": [[122, "pip-not-installed"]], "Installing binary extensions": [[122, "installing-binary-extensions"]], "2to3 \u2014 Automated Python 2 to 3 code translation": [[123, "to3-automated-python-2-to-3-code-translation"]], "Using 2to3": [[123, "using-2to3"]], "Fixers": [[123, "fixers"]], "lib2to3 \u2014 2to3\u2019s library": [[123, "module-lib2to3"]], "__future__ \u2014 Future statement definitions": [[124, "module-__future__"]], "Module Contents": [[124, "module-contents"], [188, "module-contents"], [225, "module-contents"], [334, "module-contents"], [425, "module-contents"]], "__main__ \u2014 Top-level code environment": [[125, "module-__main__"]], "__name__ == '__main__'": [[125, "name-main"]], "What is the \u201ctop-level code environment\u201d?": [[125, "what-is-the-top-level-code-environment"]], "Idiomatic Usage": [[125, "idiomatic-usage"], [125, "id1"]], "Packaging Considerations": [[125, "packaging-considerations"]], "__main__.py in Python Packages": [[125, "main-py-in-python-packages"]], "import __main__": [[125, "import-main"]], "_thread \u2014 Low-level threading API": [[126, "module-_thread"]], "abc \u2014 Abstract Base Classes": [[127, "module-abc"]], "aifc \u2014 Read and write AIFF and AIFC files": [[128, "module-aifc"]], "Generic Operating System Services": [[129, "generic-operating-system-services"]], "Data Compression and Archiving": [[130, "data-compression-and-archiving"]], "argparse \u2014 Parser for command-line options, arguments and sub-commands": [[131, "module-argparse"]], "Tutorial": [[131, null], [307, "tutorial"], [356, "tutorial"], [399, "tutorial"], [428, "tutorial"]], "Core Functionality": [[131, "core-functionality"]], "Quick Links for add_argument()": [[131, "quick-links-for-add-argument"]], "Creating a parser": [[131, "creating-a-parser"]], "Adding arguments": [[131, "adding-arguments"]], "ArgumentParser objects": [[131, "argumentparser-objects"]], "prog": [[131, "prog"]], "usage": [[131, "usage"]], "description": [[131, "description"]], "epilog": [[131, "epilog"]], "parents": [[131, "parents"]], "formatter_class": [[131, "formatter-class"]], "prefix_chars": [[131, "prefix-chars"]], "fromfile_prefix_chars": [[131, "fromfile-prefix-chars"]], "argument_default": [[131, "argument-default"]], "allow_abbrev": [[131, "allow-abbrev"]], "conflict_handler": [[131, "conflict-handler"]], "add_help": [[131, "add-help"]], "exit_on_error": [[131, "exit-on-error"]], "The add_argument() method": [[131, "the-add-argument-method"]], "name or flags": [[131, "name-or-flags"]], "action": [[131, "action"]], "nargs": [[131, "nargs"]], "const": [[131, "const"]], "default": [[131, "default"]], "type": [[131, "type"]], "choices": [[131, "choices"]], "required": [[131, "required"]], "help": [[131, "help"]], "metavar": [[131, "metavar"]], "dest": [[131, "dest"]], "Action classes": [[131, "action-classes"]], "The parse_args() method": [[131, "the-parse-args-method"]], "Option value syntax": [[131, "option-value-syntax"]], "Invalid arguments": [[131, "invalid-arguments"]], "Arguments containing -": [[131, "arguments-containing"]], "Argument abbreviations (prefix matching)": [[131, "argument-abbreviations-prefix-matching"]], "Beyond sys.argv": [[131, "beyond-sys-argv"]], "The Namespace object": [[131, "the-namespace-object"]], "Other utilities": [[131, "other-utilities"]], "Sub-commands": [[131, "sub-commands"]], "FileType objects": [[131, "filetype-objects"]], "Argument groups": [[131, "argument-groups"]], "Mutual exclusion": [[131, "mutual-exclusion"]], "Parser defaults": [[131, "parser-defaults"]], "Printing help": [[131, "printing-help"]], "Partial parsing": [[131, "partial-parsing"]], "Customizing file parsing": [[131, "customizing-file-parsing"]], "Exiting methods": [[131, "exiting-methods"]], "Intermixed parsing": [[131, "intermixed-parsing"]], "Upgrading optparse code": [[131, "upgrading-optparse-code"]], "array \u2014 Efficient arrays of numeric values": [[132, "module-array"]], "ast \u2014 Abstract Syntax Trees": [[133, "module-ast"]], "Abstract Grammar": [[133, "abstract-grammar"]], "Node classes": [[133, "node-classes"]], "Root nodes": [[133, "root-nodes"]], "Literals": [[133, "literals"], [445, "literals"], [450, "literals"]], "Variables": [[133, "variables"]], "Expressions": [[133, "expressions"], [445, "expressions"]], "Subscripting": [[133, "subscripting"]], "Comprehensions": [[133, "comprehensions"]], "Statements": [[133, "statements"]], "Imports": [[133, "imports"]], "Control flow": [[133, "control-flow"]], "Pattern matching": [[133, "pattern-matching"]], "Function and class definitions": [[133, "function-and-class-definitions"]], "Async and await": [[133, "async-and-await"]], "ast Helpers": [[133, "ast-helpers"]], "Compiler Flags": [[133, "compiler-flags"]], "Command-Line Usage": [[133, "command-line-usage"], [163, "command-line-usage"], [393, "command-line-usage"], [395, "command-line-usage"]], "asynchat \u2014 Asynchronous socket command/response handler": [[134, "module-asynchat"]], "asynchat Example": [[134, "asynchat-example"]], "asyncio \u2014 Asynchronous I/O": [[135, "module-asyncio"]], "Hello World!": [[135, null]], "High-level APIs": [[135, null]], "Low-level APIs": [[135, null]], "Guides and Tutorials": [[135, null]], "High-level API Index": [[136, "high-level-api-index"]], "Tasks": [[136, "tasks"]], "Queues": [[136, "queues"], [146, "queues"]], "Subprocesses": [[136, "subprocesses"], [149, "subprocesses"]], "Streams": [[136, "streams"], [148, "streams"]], "Synchronization": [[136, "synchronization"]], "Developing with asyncio": [[137, "developing-with-asyncio"]], "Debug Mode": [[137, "debug-mode"]], "Concurrency and Multithreading": [[137, "concurrency-and-multithreading"]], "Running Blocking Code": [[137, "running-blocking-code"]], "Logging": [[137, "logging"], [298, "logging"], [467, "logging"]], "Detect never-awaited coroutines": [[137, "detect-never-awaited-coroutines"]], "Detect never-retrieved exceptions": [[137, "detect-never-retrieved-exceptions"]], "Event Loop": [[138, "event-loop"]], "Event Loop Methods": [[138, "event-loop-methods"], [142, "event-loop-methods"]], "Running and stopping the loop": [[138, "running-and-stopping-the-loop"]], "Scheduling callbacks": [[138, "scheduling-callbacks"]], "Scheduling delayed callbacks": [[138, "scheduling-delayed-callbacks"]], "Creating Futures and Tasks": [[138, "creating-futures-and-tasks"]], "Opening network connections": [[138, "opening-network-connections"]], "Creating network servers": [[138, "creating-network-servers"]], "Transferring files": [[138, "transferring-files"]], "TLS Upgrade": [[138, "tls-upgrade"]], "Watching file descriptors": [[138, "watching-file-descriptors"]], "Working with socket objects directly": [[138, "working-with-socket-objects-directly"]], "DNS": [[138, "dns"]], "Working with pipes": [[138, "working-with-pipes"]], "Unix signals": [[138, "unix-signals"]], "Executing code in thread or process pools": [[138, "executing-code-in-thread-or-process-pools"]], "Error Handling API": [[138, "error-handling-api"]], "Enabling debug mode": [[138, "enabling-debug-mode"]], "Running Subprocesses": [[138, "running-subprocesses"]], "Callback Handles": [[138, "callback-handles"]], "Server Objects": [[138, "server-objects"], [354, "server-objects"]], "Event Loop Implementations": [[138, "event-loop-implementations"]], "Hello World with call_soon()": [[138, "hello-world-with-call-soon"]], "Display the current date with call_later()": [[138, "display-the-current-date-with-call-later"]], "Watch a file descriptor for read events": [[138, "watch-a-file-descriptor-for-read-events"]], "Set signal handlers for SIGINT and SIGTERM": [[138, "set-signal-handlers-for-sigint-and-sigterm"]], "Extending": [[140, "extending"]], "Writing a Custom Event Loop": [[140, "writing-a-custom-event-loop"]], "Future and Task private constructors": [[140, "future-and-task-private-constructors"]], "Task lifetime support": [[140, "task-lifetime-support"]], "Futures": [[141, "futures"]], "Future Functions": [[141, "future-functions"]], "Future Object": [[141, "future-object"]], "Low-level API Index": [[142, "low-level-api-index"]], "Obtaining the Event Loop": [[142, "obtaining-the-event-loop"]], "Transports": [[142, "transports"], [145, "transports"]], "Protocols": [[142, "protocols"], [145, "protocols"], [401, "protocols"]], "Event Loop Policies": [[142, "event-loop-policies"]], "Platform Support": [[143, "platform-support"]], "All Platforms": [[143, "all-platforms"]], "Windows": [[143, "windows"]], "Subprocess Support on Windows": [[143, "subprocess-support-on-windows"]], "macOS": [[143, "macos"]], "Policies": [[144, "policies"]], "Getting and Setting the Policy": [[144, "getting-and-setting-the-policy"]], "Policy Objects": [[144, "policy-objects"]], "Process Watchers": [[144, "process-watchers"]], "Custom Policies": [[144, "custom-policies"]], "Transports and Protocols": [[145, "transports-and-protocols"]], "Transports Hierarchy": [[145, "transports-hierarchy"]], "Base Transport": [[145, "base-transport"]], "Read-only Transports": [[145, "read-only-transports"]], "Write-only Transports": [[145, "write-only-transports"]], "Datagram Transports": [[145, "datagram-transports"]], "Subprocess Transports": [[145, "subprocess-transports"]], "Base Protocols": [[145, "base-protocols"]], "Base Protocol": [[145, "base-protocol"]], "Streaming Protocols": [[145, "streaming-protocols"]], "Buffered Streaming Protocols": [[145, "buffered-streaming-protocols"]], "Datagram Protocols": [[145, "datagram-protocols"]], "Subprocess Protocols": [[145, "subprocess-protocols"]], "TCP Echo Server": [[145, "tcp-echo-server"]], "TCP Echo Client": [[145, "tcp-echo-client"]], "UDP Echo Server": [[145, "udp-echo-server"]], "UDP Echo Client": [[145, "udp-echo-client"]], "Connecting Existing Sockets": [[145, "connecting-existing-sockets"]], "loop.subprocess_exec() and SubprocessProtocol": [[145, "loop-subprocess-exec-and-subprocessprotocol"]], "Queue": [[146, "queue"]], "Priority Queue": [[146, "priority-queue"]], "LIFO Queue": [[146, "lifo-queue"]], "Runners": [[147, "runners"]], "Running an asyncio Program": [[147, "running-an-asyncio-program"]], "Runner context manager": [[147, "runner-context-manager"]], "Handling Keyboard Interruption": [[147, "handling-keyboard-interruption"]], "StreamReader": [[148, "streamreader"]], "StreamWriter": [[148, "streamwriter"]], "TCP echo client using streams": [[148, "tcp-echo-client-using-streams"]], "TCP echo server using streams": [[148, "tcp-echo-server-using-streams"]], "Get HTTP headers": [[148, "get-http-headers"]], "Register an open socket to wait for data using streams": [[148, "register-an-open-socket-to-wait-for-data-using-streams"]], "Creating Subprocesses": [[149, "creating-subprocesses"]], "Constants": [[149, "constants"], [167, "constants"], [190, "constants"], [196, "constants"], [199, "constants"], [249, "constants"], [290, "constants"], [353, "constants"], [357, "constants"], [420, "constants"]], "Interacting with Subprocesses": [[149, "interacting-with-subprocesses"]], "Subprocess and Threads": [[149, "subprocess-and-threads"]], "Synchronization Primitives": [[150, "synchronization-primitives"]], "Lock": [[150, "lock"]], "Event": [[150, "event"]], "Condition": [[150, "condition"]], "Semaphore": [[150, "semaphore"]], "BoundedSemaphore": [[150, "boundedsemaphore"]], "Barrier": [[150, "barrier"]], "Coroutines and Tasks": [[151, "coroutines-and-tasks"]], "Coroutines": [[151, "coroutines"], [442, "coroutines"], [443, "coroutines"]], "Awaitables": [[151, "awaitables"]], "Creating Tasks": [[151, "creating-tasks"]], "Task Cancellation": [[151, "task-cancellation"]], "Task Groups": [[151, "task-groups"]], "Sleeping": [[151, "sleeping"]], "Running Tasks Concurrently": [[151, "running-tasks-concurrently"]], "Shielding From Cancellation": [[151, "shielding-from-cancellation"]], "Timeouts": [[151, "timeouts"]], "Waiting Primitives": [[151, "waiting-primitives"]], "Running in Threads": [[151, "running-in-threads"]], "Scheduling From Other Threads": [[151, "scheduling-from-other-threads"]], "Introspection": [[151, "introspection"]], "Task Object": [[151, "task-object"]], "asyncore \u2014 Asynchronous socket handler": [[152, "module-asyncore"]], "asyncore Example basic HTTP client": [[152, "asyncore-example-basic-http-client"]], "asyncore Example basic echo server": [[152, "asyncore-example-basic-echo-server"]], "atexit \u2014 Exit handlers": [[153, "module-atexit"]], "atexit Example": [[153, "atexit-example"]], "audioop \u2014 Manipulate raw audio data": [[154, "module-audioop"]], "Audit events table": [[155, "audit-events-table"]], "base64 \u2014 Base16, Base32, Base64, Base85 Data Encodings": [[156, "module-base64"]], "Security Considerations": [[156, "security-considerations"], [259, "security-considerations"], [342, "security-considerations"], [364, "security-considerations"]], "bdb \u2014 Debugger framework": [[157, "module-bdb"]], "Binary Data Services": [[158, "binary-data-services"]], "binascii \u2014 Convert between binary and ASCII": [[159, "module-binascii"]], "bisect \u2014 Array bisection algorithm": [[160, "module-bisect"]], "Performance Notes": [[160, "performance-notes"]], "Searching Sorted Lists": [[160, "searching-sorted-lists"]], "builtins \u2014 Built-in objects": [[161, "module-builtins"]], "bz2 \u2014 Support for bzip2 compression": [[162, "module-bz2"]], "(De)compression of files": [[162, "de-compression-of-files"]], "Incremental (de)compression": [[162, "incremental-de-compression"]], "One-shot (de)compression": [[162, "one-shot-de-compression"]], "Examples of usage": [[162, "examples-of-usage"], [248, "examples-of-usage"]], "calendar \u2014 General calendar-related functions": [[163, "module-calendar"]], "cgi \u2014 Common Gateway Interface support": [[164, "module-cgi"]], "Using the cgi module": [[164, "using-the-cgi-module"]], "Higher Level Interface": [[164, "higher-level-interface"]], "Functions": [[164, "functions"], [190, "functions"], [192, "functions"], [265, "functions"], [322, "functions"], [334, "functions"], [353, "functions"], [360, "functions"], [381, "functions"], [397, "functions"], [420, "functions"], [428, "functions"], [428, "elementinclude-functions"], [440, "functions"]], "Caring about security": [[164, "caring-about-security"]], "Installing your CGI script on a Unix system": [[164, "installing-your-cgi-script-on-a-unix-system"]], "Testing your CGI script": [[164, "testing-your-cgi-script"]], "Debugging CGI scripts": [[164, "debugging-cgi-scripts"]], "Common problems and solutions": [[164, "common-problems-and-solutions"]], "cgitb \u2014 Traceback manager for CGI scripts": [[165, "module-cgitb"]], "chunk \u2014 Read IFF chunked data": [[166, "module-chunk"]], "cmath \u2014 Mathematical functions for complex numbers": [[167, "module-cmath"]], "Conversions to and from polar coordinates": [[167, "conversions-to-and-from-polar-coordinates"]], "Power and logarithmic functions": [[167, "power-and-logarithmic-functions"], [290, "power-and-logarithmic-functions"]], "Trigonometric functions": [[167, "trigonometric-functions"], [290, "trigonometric-functions"]], "Hyperbolic functions": [[167, "hyperbolic-functions"], [290, "hyperbolic-functions"]], "Classification functions": [[167, "classification-functions"]], "cmd \u2014 Support for line-oriented command interpreters": [[168, "module-cmd"]], "Cmd Objects": [[168, "cmd-objects"]], "Cmd Example": [[168, "cmd-example"]], "Modules command-line interface (CLI)": [[169, "modules-command-line-interface-cli"]], "code \u2014 Interpreter base classes": [[170, "module-code"]], "Interactive Interpreter Objects": [[170, "interactive-interpreter-objects"]], "Interactive Console Objects": [[170, "interactive-console-objects"]], "codecs \u2014 Codec registry and base classes": [[171, "module-codecs"]], "Codec Base Classes": [[171, "codec-base-classes"]], "Error Handlers": [[171, "error-handlers"]], "Stateless Encoding and Decoding": [[171, "stateless-encoding-and-decoding"]], "Incremental Encoding and Decoding": [[171, "incremental-encoding-and-decoding"]], "IncrementalEncoder Objects": [[171, "incrementalencoder-objects"]], "IncrementalDecoder Objects": [[171, "incrementaldecoder-objects"]], "Stream Encoding and Decoding": [[171, "stream-encoding-and-decoding"]], "StreamWriter Objects": [[171, "streamwriter-objects"]], "StreamReader Objects": [[171, "streamreader-objects"]], "StreamReaderWriter Objects": [[171, "streamreaderwriter-objects"]], "StreamRecoder Objects": [[171, "streamrecoder-objects"]], "Encodings and Unicode": [[171, "encodings-and-unicode"]], "Standard Encodings": [[171, "standard-encodings"]], "Python Specific Encodings": [[171, "python-specific-encodings"]], "Text Encodings": [[171, "text-encodings"]], "Binary Transforms": [[171, "binary-transforms"]], "Text Transforms": [[171, "text-transforms"]], "encodings.idna \u2014 Internationalized Domain Names in Applications": [[171, "module-encodings.idna"]], "encodings.mbcs \u2014 Windows ANSI codepage": [[171, "module-encodings.mbcs"]], "encodings.utf_8_sig \u2014 UTF-8 codec with BOM signature": [[171, "module-encodings.utf_8_sig"]], "codeop \u2014 Compile Python code": [[172, "module-codeop"]], "collections \u2014 Container datatypes": [[173, "module-collections"]], "ChainMap objects": [[173, "chainmap-objects"]], "ChainMap Examples and Recipes": [[173, "chainmap-examples-and-recipes"]], "Counter objects": [[173, "counter-objects"]], "deque objects": [[173, "deque-objects"]], "deque Recipes": [[173, "deque-recipes"]], "defaultdict objects": [[173, "defaultdict-objects"]], "defaultdict Examples": [[173, "defaultdict-examples"]], "namedtuple() Factory Function for Tuples with Named Fields": [[173, "namedtuple-factory-function-for-tuples-with-named-fields"]], "OrderedDict objects": [[173, "ordereddict-objects"]], "OrderedDict Examples and Recipes": [[173, "ordereddict-examples-and-recipes"]], "UserDict objects": [[173, "userdict-objects"]], "UserList objects": [[173, "userlist-objects"]], "UserString objects": [[173, "userstring-objects"]], "collections.abc \u2014 Abstract Base Classes for Containers": [[174, "module-collections.abc"]], "Collections Abstract Base Classes": [[174, "collections-abstract-base-classes"]], "Collections Abstract Base Classes \u2013 Detailed Descriptions": [[174, "collections-abstract-base-classes-detailed-descriptions"]], "Examples and Recipes": [[174, "examples-and-recipes"], [182, "examples-and-recipes"]], "colorsys \u2014 Conversions between color systems": [[175, "module-colorsys"]], "compileall \u2014 Byte-compile Python libraries": [[176, "module-compileall"]], "Command-line use": [[176, "command-line-use"]], "Public functions": [[176, "public-functions"]], "Concurrent Execution": [[177, "concurrent-execution"]], "The concurrent package": [[178, "the-concurrent-package"]], "concurrent.futures \u2014 Launching parallel tasks": [[179, "module-concurrent.futures"]], "Executor Objects": [[179, "executor-objects"]], "ThreadPoolExecutor": [[179, "threadpoolexecutor"]], "ThreadPoolExecutor Example": [[179, "threadpoolexecutor-example"]], "ProcessPoolExecutor": [[179, "processpoolexecutor"]], "ProcessPoolExecutor Example": [[179, "processpoolexecutor-example"]], "Future Objects": [[179, "future-objects"]], "Module Functions": [[179, "module-functions"], [186, "module-functions"]], "Exception classes": [[179, "exception-classes"]], "configparser \u2014 Configuration file parser": [[180, "module-configparser"]], "Quick Start": [[180, "quick-start"]], "Supported Datatypes": [[180, "supported-datatypes"]], "Fallback Values": [[180, "fallback-values"]], "Supported INI File Structure": [[180, "supported-ini-file-structure"]], "Interpolation of values": [[180, "interpolation-of-values"]], "Mapping Protocol Access": [[180, "mapping-protocol-access"]], "Customizing Parser Behaviour": [[180, "customizing-parser-behaviour"]], "Legacy API Examples": [[180, "legacy-api-examples"]], "ConfigParser Objects": [[180, "configparser-objects"]], "RawConfigParser Objects": [[180, "rawconfigparser-objects"]], "Built-in Constants": [[181, "built-in-constants"]], "Constants added by the site module": [[181, "constants-added-by-the-site-module"]], "contextlib \u2014 Utilities for with-statement contexts": [[182, "module-contextlib"]], "Supporting a variable number of context managers": [[182, "supporting-a-variable-number-of-context-managers"]], "Catching exceptions from __enter__ methods": [[182, "catching-exceptions-from-enter-methods"]], "Cleaning up in an __enter__ implementation": [[182, "cleaning-up-in-an-enter-implementation"]], "Replacing any use of try-finally and flag variables": [[182, "replacing-any-use-of-try-finally-and-flag-variables"]], "Using a context manager as a function decorator": [[182, "using-a-context-manager-as-a-function-decorator"]], "Single use, reusable and reentrant context managers": [[182, "single-use-reusable-and-reentrant-context-managers"]], "Reentrant context managers": [[182, "reentrant-context-managers"]], "Reusable context managers": [[182, "reusable-context-managers"]], "contextvars \u2014 Context Variables": [[183, "module-contextvars"]], "Context Variables": [[183, "context-variables"]], "Manual Context Management": [[183, "manual-context-management"]], "asyncio support": [[183, "asyncio-support"]], "copy \u2014 Shallow and deep copy operations": [[184, "module-copy"]], "copyreg \u2014 Register pickle support functions": [[185, "module-copyreg"]], "crypt \u2014 Function to check Unix passwords": [[186, "module-crypt"]], "Hashing Methods": [[186, "hashing-methods"]], "Module Attributes": [[186, "module-attributes"]], "Cryptographic Services": [[187, "cryptographic-services"]], "csv \u2014 CSV File Reading and Writing": [[188, "module-csv"]], "Dialects and Formatting Parameters": [[188, "dialects-and-formatting-parameters"]], "Reader Objects": [[188, "reader-objects"]], "Writer Objects": [[188, "writer-objects"]], "ctypes \u2014 A foreign function library for Python": [[189, "module-ctypes"]], "ctypes tutorial": [[189, "ctypes-tutorial"]], "Loading dynamic link libraries": [[189, "loading-dynamic-link-libraries"]], "Accessing functions from loaded dlls": [[189, "accessing-functions-from-loaded-dlls"]], "Calling functions": [[189, "calling-functions"]], "Fundamental data types": [[189, "fundamental-data-types"], [189, "ctypes-fundamental-data-types-2"]], "Calling functions, continued": [[189, "calling-functions-continued"]], "Calling variadic functions": [[189, "calling-variadic-functions"]], "Calling functions with your own custom data types": [[189, "calling-functions-with-your-own-custom-data-types"]], "Specifying the required argument types (function prototypes)": [[189, "specifying-the-required-argument-types-function-prototypes"]], "Return types": [[189, "return-types"]], "Passing pointers (or: passing parameters by reference)": [[189, "passing-pointers-or-passing-parameters-by-reference"]], "Structures and unions": [[189, "structures-and-unions"]], "Structure/union alignment and byte order": [[189, "structure-union-alignment-and-byte-order"]], "Bit fields in structures and unions": [[189, "bit-fields-in-structures-and-unions"]], "Arrays": [[189, "arrays"]], "Pointers": [[189, "pointers"]], "Type conversions": [[189, "type-conversions"]], "Incomplete Types": [[189, "incomplete-types"]], "Callback functions": [[189, "callback-functions"]], "Accessing values exported from dlls": [[189, "accessing-values-exported-from-dlls"]], "Surprises": [[189, "surprises"]], "Variable-sized data types": [[189, "variable-sized-data-types"]], "ctypes reference": [[189, "ctypes-reference"]], "Finding shared libraries": [[189, "finding-shared-libraries"]], "Loading shared libraries": [[189, "loading-shared-libraries"]], "Foreign functions": [[189, "foreign-functions"]], "Function prototypes": [[189, "function-prototypes"]], "Utility functions": [[189, "utility-functions"], [303, "utility-functions"]], "Data types": [[189, "data-types"]], "Structured data types": [[189, "structured-data-types"]], "Arrays and pointers": [[189, "arrays-and-pointers"]], "curses \u2014 Terminal handling for character-cell displays": [[190, "module-curses"]], "Window Objects": [[190, "window-objects"]], "curses.textpad \u2014 Text input widget for curses programs": [[190, "module-curses.textpad"]], "Textbox objects": [[190, "textbox-objects"]], "curses.ascii \u2014 Utilities for ASCII characters": [[191, "module-curses.ascii"]], "curses.panel \u2014 A panel stack extension for curses": [[192, "module-curses.panel"]], "Panel Objects": [[192, "panel-objects"]], "Custom Python Interpreters": [[193, "custom-python-interpreters"]], "dataclasses \u2014 Data Classes": [[194, "module-dataclasses"]], "Module contents": [[194, "module-contents"], [348, "module-contents"], [349, "module-contents"], [353, "module-contents"], [401, "module-contents"]], "Post-init processing": [[194, "post-init-processing"]], "Class variables": [[194, "class-variables"]], "Init-only variables": [[194, "init-only-variables"]], "Frozen instances": [[194, "frozen-instances"]], "Inheritance": [[194, "inheritance"], [455, "inheritance"]], "Re-ordering of keyword-only parameters in __init__()": [[194, "re-ordering-of-keyword-only-parameters-in-init"]], "Default factory functions": [[194, "default-factory-functions"]], "Mutable default values": [[194, "mutable-default-values"]], "Descriptor-typed fields": [[194, "descriptor-typed-fields"]], "Data Types": [[195, "data-types"], [225, "data-types"]], "datetime \u2014 Basic date and time types": [[196, "module-datetime"]], "Aware and Naive Objects": [[196, "aware-and-naive-objects"]], "Available Types": [[196, "available-types"]], "Common Properties": [[196, "common-properties"]], "Determining if an Object is Aware or Naive": [[196, "determining-if-an-object-is-aware-or-naive"]], "timedelta Objects": [[196, "timedelta-objects"]], "Examples of usage: timedelta": [[196, "examples-of-usage-timedelta"]], "date Objects": [[196, "date-objects"]], "Examples of Usage: date": [[196, "examples-of-usage-date"]], "datetime Objects": [[196, "datetime-objects"]], "Examples of Usage: datetime": [[196, "examples-of-usage-datetime"]], "time Objects": [[196, "time-objects"]], "Examples of Usage: time": [[196, "examples-of-usage-time"]], "tzinfo Objects": [[196, "tzinfo-objects"]], "timezone Objects": [[196, "timezone-objects"]], "strftime() and strptime() Behavior": [[196, "strftime-and-strptime-behavior"]], "strftime() and strptime() Format Codes": [[196, "strftime-and-strptime-format-codes"]], "Technical Detail": [[196, "technical-detail"]], "dbm \u2014 Interfaces to Unix \u201cdatabases\u201d": [[197, "module-dbm"]], "dbm.gnu \u2014 GNU database manager": [[197, "module-dbm.gnu"]], "dbm.ndbm \u2014 New Database Manager": [[197, "module-dbm.ndbm"]], "dbm.dumb \u2014 Portable DBM implementation": [[197, "module-dbm.dumb"]], "Debugging and Profiling": [[198, "debugging-and-profiling"]], "decimal \u2014 Decimal fixed point and floating point arithmetic": [[199, "module-decimal"]], "Quick-start Tutorial": [[199, "quick-start-tutorial"]], "Decimal objects": [[199, "decimal-objects"]], "Logical operands": [[199, "logical-operands"]], "Context objects": [[199, "context-objects"]], "Rounding modes": [[199, "rounding-modes"]], "Signals": [[199, "signals"]], "Floating Point Notes": [[199, "floating-point-notes"]], "Mitigating round-off error with increased precision": [[199, "mitigating-round-off-error-with-increased-precision"]], "Special values": [[199, "special-values"]], "Working with threads": [[199, "working-with-threads"]], "Recipes": [[199, "recipes"], [333, "recipes"]], "Decimal FAQ": [[199, "decimal-faq"]], "Development Tools": [[200, "development-tools"]], "Python Development Mode": [[201, "python-development-mode"]], "Effects of the Python Development Mode": [[201, "effects-of-the-python-development-mode"]], "ResourceWarning Example": [[201, "resourcewarning-example"]], "Bad file descriptor error example": [[201, "bad-file-descriptor-error-example"]], "Tkinter Dialogs": [[202, "tkinter-dialogs"]], "tkinter.simpledialog \u2014 Standard Tkinter input dialogs": [[202, "module-tkinter.simpledialog"]], "tkinter.filedialog \u2014 File selection dialogs": [[202, "module-tkinter.filedialog"]], "Native Load/Save Dialogs": [[202, "native-load-save-dialogs"]], "tkinter.commondialog \u2014 Dialog window templates": [[202, "module-tkinter.commondialog"]], "difflib \u2014 Helpers for computing deltas": [[203, "module-difflib"]], "SequenceMatcher Objects": [[203, "sequencematcher-objects"]], "SequenceMatcher Examples": [[203, "sequencematcher-examples"]], "Differ Objects": [[203, "differ-objects"]], "Differ Example": [[203, "differ-example"]], "A command-line interface to difflib": [[203, "a-command-line-interface-to-difflib"]], "dis \u2014 Disassembler for Python bytecode": [[204, "module-dis"]], "Command-line interface": [[204, "command-line-interface"]], "Bytecode analysis": [[204, "bytecode-analysis"]], "Analysis functions": [[204, "analysis-functions"]], "Python Bytecode Instructions": [[204, "python-bytecode-instructions"]], "Opcode collections": [[204, "opcode-collections"]], "Software Packaging and Distribution": [[205, "software-packaging-and-distribution"]], "distutils \u2014 Building and installing Python modules": [[206, "module-distutils"]], "doctest \u2014 Test interactive Python examples": [[207, "module-doctest"]], "Simple Usage: Checking Examples in Docstrings": [[207, "simple-usage-checking-examples-in-docstrings"]], "Simple Usage: Checking Examples in a Text File": [[207, "simple-usage-checking-examples-in-a-text-file"]], "How It Works": [[207, "how-it-works"]], "Which Docstrings Are Examined?": [[207, "which-docstrings-are-examined"]], "How are Docstring Examples Recognized?": [[207, "how-are-docstring-examples-recognized"]], "What\u2019s the Execution Context?": [[207, "what-s-the-execution-context"]], "What About Exceptions?": [[207, "what-about-exceptions"]], "Option Flags": [[207, "option-flags"]], "Directives": [[207, "directives"]], "Warnings": [[207, "warnings"], [227, "warnings"]], "Basic API": [[207, "basic-api"]], "Unittest API": [[207, "unittest-api"]], "Advanced API": [[207, "advanced-api"]], "DocTest Objects": [[207, "doctest-objects"]], "Example Objects": [[207, "example-objects"]], "DocTestFinder objects": [[207, "doctestfinder-objects"]], "DocTestParser objects": [[207, "doctestparser-objects"]], "DocTestRunner objects": [[207, "doctestrunner-objects"]], "OutputChecker objects": [[207, "outputchecker-objects"]], "Debugging": [[207, "debugging"]], "Soapbox": [[207, "soapbox"]], "email \u2014 An email and MIME handling package": [[208, "module-email"]], "email.charset: Representing character sets": [[209, "module-email.charset"]], "email.message.Message: Representing an email message using the compat32 API": [[210, "email-message-message-representing-an-email-message-using-the-compat32-api"]], "email.contentmanager: Managing MIME Content": [[211, "module-email.contentmanager"]], "Content Manager Instances": [[211, "content-manager-instances"]], "email.encoders: Encoders": [[212, "module-email.encoders"]], "email.errors: Exception and Defect classes": [[213, "module-email.errors"]], "email: Examples": [[214, "email-examples"]], "email.generator: Generating MIME documents": [[215, "module-email.generator"]], "email.header: Internationalized headers": [[216, "module-email.header"]], "email.headerregistry: Custom Header Objects": [[217, "module-email.headerregistry"]], "email.iterators: Iterators": [[218, "module-email.iterators"]], "email.message: Representing an email message": [[219, "module-email.message"]], "email.mime: Creating email and MIME objects from scratch": [[220, "module-email.mime"]], "email.parser: Parsing email messages": [[221, "module-email.parser"]], "FeedParser API": [[221, "feedparser-api"]], "Parser API": [[221, "parser-api"]], "Additional notes": [[221, "additional-notes"]], "email.policy: Policy Objects": [[222, "module-email.policy"]], "email.utils: Miscellaneous utilities": [[223, "module-email.utils"]], "ensurepip \u2014 Bootstrapping the pip installer": [[224, "module-ensurepip"]], "Command line interface": [[224, "command-line-interface"]], "Module API": [[224, "module-api"]], "enum \u2014 Support for enumerations": [[225, "module-enum"]], "Important": [[225, null], [282, "index-0"], [283, null], [284, null]], "Utilities and Decorators": [[225, "utilities-and-decorators"]], "Notes": [[225, "notes"], [364, "notes"]], "errno \u2014 Standard errno system symbols": [[226, "module-errno"]], "Built-in Exceptions": [[227, "built-in-exceptions"]], "Exception context": [[227, "exception-context"]], "Inheriting from built-in exceptions": [[227, "inheriting-from-built-in-exceptions"]], "Base classes": [[227, "base-classes"]], "Concrete exceptions": [[227, "concrete-exceptions"]], "OS exceptions": [[227, "os-exceptions"]], "Exception groups": [[227, "exception-groups"]], "Exception hierarchy": [[227, "exception-hierarchy"]], "faulthandler \u2014 Dump the Python traceback": [[228, "module-faulthandler"]], "Dumping the traceback": [[228, "dumping-the-traceback"]], "Fault handler state": [[228, "fault-handler-state"]], "Dumping the tracebacks after a timeout": [[228, "dumping-the-tracebacks-after-a-timeout"]], "Dumping the traceback on a user signal": [[228, "dumping-the-traceback-on-a-user-signal"]], "Issue with file descriptors": [[228, "issue-with-file-descriptors"]], "fcntl \u2014 The fcntl and ioctl system calls": [[229, "module-fcntl"]], "filecmp \u2014 File and Directory Comparisons": [[230, "module-filecmp"]], "The dircmp class": [[230, "the-dircmp-class"]], "File Formats": [[231, "file-formats"]], "fileinput \u2014 Iterate over lines from multiple input streams": [[232, "module-fileinput"]], "File and Directory Access": [[233, "file-and-directory-access"]], "fnmatch \u2014 Unix filename pattern matching": [[234, "module-fnmatch"]], "fractions \u2014 Rational numbers": [[235, "module-fractions"]], "Program Frameworks": [[236, "program-frameworks"]], "ftplib \u2014 FTP protocol client": [[237, "module-ftplib"]], "Reference": [[237, "reference"], [298, "reference"], [356, "reference"], [428, "reference"], [428, "id4"]], "FTP objects": [[237, "ftp-objects"]], "FTP_TLS objects": [[237, "ftp-tls-objects"]], "Module variables": [[237, "module-variables"]], "Functional Programming Modules": [[238, "functional-programming-modules"]], "Built-in Functions": [[239, "built-in-functions"]], "functools \u2014 Higher-order functions and operations on callable objects": [[240, "module-functools"]], "partial Objects": [[240, "partial-objects"]], "gc \u2014 Garbage Collector interface": [[241, "module-gc"]], "getopt \u2014 C-style parser for command line options": [[242, "module-getopt"]], "getpass \u2014 Portable password input": [[243, "module-getpass"]], "gettext \u2014 Multilingual internationalization services": [[244, "module-gettext"]], "GNU gettext API": [[244, "gnu-gettext-api"]], "Class-based API": [[244, "class-based-api"]], "The NullTranslations class": [[244, "the-nulltranslations-class"]], "The GNUTranslations class": [[244, "the-gnutranslations-class"]], "Solaris message catalog support": [[244, "solaris-message-catalog-support"]], "The Catalog constructor": [[244, "the-catalog-constructor"]], "Internationalizing your programs and modules": [[244, "internationalizing-your-programs-and-modules"]], "Localizing your module": [[244, "localizing-your-module"]], "Localizing your application": [[244, "localizing-your-application"]], "Changing languages on the fly": [[244, "changing-languages-on-the-fly"]], "Deferred translations": [[244, "deferred-translations"]], "glob \u2014 Unix style pathname pattern expansion": [[245, "module-glob"]], "graphlib \u2014 Functionality to operate with graph-like structures": [[246, "module-graphlib"]], "grp \u2014 The group database": [[247, "module-grp"]], "gzip \u2014 Support for gzip files": [[248, "module-gzip"]], "Command Line Interface": [[248, "command-line-interface"], [270, "command-line-interface"], [277, "module-json.tool"], [349, "command-line-interface"]], "Command line options": [[248, "command-line-options"], [277, "command-line-options"], [315, "command-line-options"]], "hashlib \u2014 Secure hashes and message digests": [[249, "module-hashlib"]], "Hash algorithms": [[249, "hash-algorithms"]], "Usage": [[249, "usage"]], "Constructors": [[249, "constructors"]], "Attributes": [[249, "attributes"], [303, "attributes"]], "Hash Objects": [[249, "hash-objects"]], "SHAKE variable length digests": [[249, "shake-variable-length-digests"]], "File hashing": [[249, "file-hashing"]], "Key derivation": [[249, "key-derivation"]], "BLAKE2": [[249, "blake2"]], "Creating hash objects": [[249, "creating-hash-objects"]], "Simple hashing": [[249, "simple-hashing"]], "Using different digest sizes": [[249, "using-different-digest-sizes"]], "Keyed hashing": [[249, "keyed-hashing"]], "Randomized hashing": [[249, "randomized-hashing"]], "Personalization": [[249, "personalization"]], "Tree mode": [[249, "tree-mode"]], "Credits": [[249, "credits"]], "heapq \u2014 Heap queue algorithm": [[250, "module-heapq"]], "Basic Examples": [[250, "basic-examples"], [382, "basic-examples"]], "Priority Queue Implementation Notes": [[250, "priority-queue-implementation-notes"]], "Theory": [[250, "theory"]], "hmac \u2014 Keyed-Hashing for Message Authentication": [[251, "module-hmac"]], "html \u2014 HyperText Markup Language support": [[252, "module-html"]], "html.entities \u2014 Definitions of HTML general entities": [[253, "module-html.entities"]], "html.parser \u2014 Simple HTML and XHTML parser": [[254, "module-html.parser"]], "Example HTML Parser Application": [[254, "example-html-parser-application"]], "HTMLParser Methods": [[254, "htmlparser-methods"]], "http \u2014 HTTP modules": [[255, "module-http"]], "HTTP status codes": [[255, "http-status-codes"]], "HTTP methods": [[255, "http-methods"]], "http.client \u2014 HTTP protocol client": [[256, "module-http.client"]], "HTTPConnection Objects": [[256, "httpconnection-objects"]], "HTTPResponse Objects": [[256, "httpresponse-objects"]], "HTTPMessage Objects": [[256, "httpmessage-objects"]], "http.cookiejar \u2014 Cookie handling for HTTP clients": [[257, "module-http.cookiejar"]], "CookieJar and FileCookieJar Objects": [[257, "cookiejar-and-filecookiejar-objects"]], "FileCookieJar subclasses and co-operation with web browsers": [[257, "filecookiejar-subclasses-and-co-operation-with-web-browsers"]], "CookiePolicy Objects": [[257, "cookiepolicy-objects"]], "DefaultCookiePolicy Objects": [[257, "defaultcookiepolicy-objects"]], "Cookie Objects": [[257, "cookie-objects"], [258, "cookie-objects"]], "http.cookies \u2014 HTTP state management": [[258, "module-http.cookies"]], "Morsel Objects": [[258, "morsel-objects"]], "http.server \u2014 HTTP servers": [[259, "module-http.server"]], "Internationalization": [[260, "internationalization"]], "IDLE": [[261, "idle"], [486, "idle"], [489, "idle"]], "Menus": [[261, "menus"]], "File menu (Shell and Editor)": [[261, "file-menu-shell-and-editor"]], "Edit menu (Shell and Editor)": [[261, "edit-menu-shell-and-editor"]], "Format menu (Editor window only)": [[261, "format-menu-editor-window-only"]], "Run menu (Editor window only)": [[261, "run-menu-editor-window-only"]], "Shell menu (Shell window only)": [[261, "shell-menu-shell-window-only"]], "Debug menu (Shell window only)": [[261, "debug-menu-shell-window-only"]], "Options menu (Shell and Editor)": [[261, "options-menu-shell-and-editor"]], "Window menu (Shell and Editor)": [[261, "window-menu-shell-and-editor"]], "Help menu (Shell and Editor)": [[261, "help-menu-shell-and-editor"]], "Context menus": [[261, "context-menus"]], "Editing and Navigation": [[261, "editing-and-navigation"]], "Editor windows": [[261, "editor-windows"]], "Key bindings": [[261, "key-bindings"]], "Automatic indentation": [[261, "automatic-indentation"]], "Completions": [[261, "completions"]], "Calltips": [[261, "calltips"]], "Code Context": [[261, "code-context"]], "Shell window": [[261, "shell-window"]], "Text colors": [[261, "text-colors"]], "Startup and Code Execution": [[261, "startup-and-code-execution"]], "Command line usage": [[261, "command-line-usage"], [315, "command-line-usage"]], "Startup failure": [[261, "startup-failure"]], "Running user code": [[261, "running-user-code"]], "User output in Shell": [[261, "user-output-in-shell"]], "Developing tkinter applications": [[261, "developing-tkinter-applications"]], "Running without a subprocess": [[261, "running-without-a-subprocess"]], "Help and Preferences": [[261, "help-and-preferences"]], "Help sources": [[261, "help-sources"]], "Setting preferences": [[261, "setting-preferences"]], "IDLE on macOS": [[261, "idle-on-macos"]], "Extensions": [[261, "extensions"]], "idlelib": [[261, "module-idlelib"]], "imaplib \u2014 IMAP4 protocol client": [[262, "module-imaplib"]], "IMAP4 Objects": [[262, "imap4-objects"]], "IMAP4 Example": [[262, "imap4-example"]], "imghdr \u2014 Determine the type of an image": [[263, "module-imghdr"]], "imp \u2014 Access the import internals": [[264, "module-imp"]], "importlib \u2014 The implementation of import": [[265, "module-importlib"]], "importlib.abc \u2013 Abstract base classes related to import": [[265, "module-importlib.abc"]], "importlib.machinery \u2013 Importers and path hooks": [[265, "module-importlib.machinery"]], "importlib.util \u2013 Utility code for importers": [[265, "module-importlib.util"]], "Importing programmatically": [[265, "importing-programmatically"]], "Checking if a module can be imported": [[265, "checking-if-a-module-can-be-imported"]], "Importing a source file directly": [[265, "importing-a-source-file-directly"]], "Implementing lazy imports": [[265, "implementing-lazy-imports"]], "Setting up an importer": [[265, "setting-up-an-importer"]], "Approximating importlib.import_module()": [[265, "approximating-importlib-import-module"]], "importlib.metadata \u2013 Accessing package metadata": [[266, "module-importlib.metadata"]], "Entry points": [[266, "entry-points"]], "Distribution metadata": [[266, "distribution-metadata"]], "Distribution versions": [[266, "distribution-versions"]], "Distribution files": [[266, "distribution-files"]], "Distribution requirements": [[266, "distribution-requirements"]], "Mapping import to distribution packages": [[266, "mapping-import-to-distribution-packages"]], "Distributions": [[266, "distributions"]], "Distribution Discovery": [[266, "distribution-discovery"]], "Extending the search algorithm": [[266, "extending-the-search-algorithm"]], "importlib.resources \u2013 Package resource reading, opening and access": [[267, "module-importlib.resources"]], "Deprecated functions": [[267, "deprecated-functions"]], "importlib.resources.abc \u2013 Abstract base classes for resources": [[268, "module-importlib.resources.abc"]], "The Python Standard Library": [[269, "the-python-standard-library"]], "inspect \u2014 Inspect live objects": [[270, "inspect-inspect-live-objects"]], "Types and members": [[270, "types-and-members"]], "Retrieving source code": [[270, "retrieving-source-code"]], "Introspecting callables with the Signature object": [[270, "introspecting-callables-with-the-signature-object"]], "Classes and functions": [[270, "classes-and-functions"], [403, "classes-and-functions"]], "The interpreter stack": [[270, "the-interpreter-stack"]], "Fetching attributes statically": [[270, "fetching-attributes-statically"]], "Current State of Generators and Coroutines": [[270, "current-state-of-generators-and-coroutines"]], "Code Objects Bit Flags": [[270, "code-objects-bit-flags"]], "Internet Protocols and Support": [[271, "internet-protocols-and-support"]], "Notes on availability": [[272, "notes-on-availability"]], "WebAssembly platforms": [[272, "webassembly-platforms"]], "io \u2014 Core tools for working with streams": [[273, "module-io"]], "Text I/O": [[273, "text-i-o"], [273, "id1"], [273, "id3"]], "Binary I/O": [[273, "binary-i-o"], [273, "id2"]], "Raw I/O": [[273, "raw-i-o"]], "Text Encoding": [[273, "text-encoding"]], "Opt-in EncodingWarning": [[273, "opt-in-encodingwarning"]], "High-level Module Interface": [[273, "high-level-module-interface"]], "Class hierarchy": [[273, "class-hierarchy"]], "I/O Base Classes": [[273, "i-o-base-classes"]], "Raw File I/O": [[273, "raw-file-i-o"]], "Buffered Streams": [[273, "buffered-streams"]], "Multi-threading": [[273, "multi-threading"], [467, "multi-threading"], [489, "multi-threading"]], "Reentrancy": [[273, "reentrancy"]], "ipaddress \u2014 IPv4/IPv6 manipulation library": [[274, "module-ipaddress"]], "Convenience factory functions": [[274, "convenience-factory-functions"]], "IP Addresses": [[274, "ip-addresses"]], "Address objects": [[274, "address-objects"]], "Conversion to Strings and Integers": [[274, "conversion-to-strings-and-integers"]], "Operators": [[274, "operators"], [274, "id1"], [274, "id2"], [311, "operators"], [450, "operators"]], "Comparison operators": [[274, "comparison-operators"]], "Arithmetic operators": [[274, "arithmetic-operators"]], "IP Network definitions": [[274, "ip-network-definitions"]], "Prefix, net mask and host mask": [[274, "prefix-net-mask-and-host-mask"]], "Network objects": [[274, "network-objects"]], "Logical operators": [[274, "logical-operators"], [274, "id3"]], "Networks as containers of addresses": [[274, "networks-as-containers-of-addresses"]], "Interface objects": [[274, "interface-objects"]], "Other Module Level Functions": [[274, "other-module-level-functions"]], "Custom Exceptions": [[274, "custom-exceptions"]], "Networking and Interprocess Communication": [[275, "networking-and-interprocess-communication"]], "itertools \u2014 Functions creating iterators for efficient looping": [[276, "module-itertools"]], "Itertool functions": [[276, "itertool-functions"]], "Itertools Recipes": [[276, "itertools-recipes"]], "json \u2014 JSON encoder and decoder": [[277, "module-json"]], "Basic Usage": [[277, "basic-usage"]], "Encoders and Decoders": [[277, "encoders-and-decoders"]], "Standard Compliance and Interoperability": [[277, "standard-compliance-and-interoperability"]], "Character Encodings": [[277, "character-encodings"]], "Infinite and NaN Number Values": [[277, "infinite-and-nan-number-values"]], "Repeated Names Within an Object": [[277, "repeated-names-within-an-object"]], "Top-level Non-Object, Non-Array Values": [[277, "top-level-non-object-non-array-values"]], "Implementation Limitations": [[277, "implementation-limitations"]], "keyword \u2014 Testing for Python keywords": [[278, "module-keyword"]], "Python Language Services": [[279, "python-language-services"]], "linecache \u2014 Random access to text lines": [[280, "module-linecache"]], "locale \u2014 Internationalization services": [[281, "module-locale"]], "Background, details, hints, tips and caveats": [[281, "background-details-hints-tips-and-caveats"]], "For extension writers and programs that embed Python": [[281, "for-extension-writers-and-programs-that-embed-python"]], "Access to message catalogs": [[281, "access-to-message-catalogs"]], "logging \u2014 Logging facility for Python": [[282, "module-logging"]], "Logger Objects": [[282, "logger-objects"]], "Handler Objects": [[282, "handler-objects"]], "Formatter Objects": [[282, "formatter-objects"]], "Filter Objects": [[282, "filter-objects"]], "LogRecord Objects": [[282, "logrecord-objects"]], "LogRecord attributes": [[282, "logrecord-attributes"]], "LoggerAdapter Objects": [[282, "loggeradapter-objects"]], "Thread Safety": [[282, "thread-safety"]], "Module-Level Attributes": [[282, "module-level-attributes"]], "Integration with the warnings module": [[282, "integration-with-the-warnings-module"]], "logging.config \u2014 Logging configuration": [[283, "module-logging.config"]], "Configuration functions": [[283, "configuration-functions"]], "Security considerations": [[283, "security-considerations"], [357, "security-considerations"]], "Configuration dictionary schema": [[283, "configuration-dictionary-schema"]], "Dictionary Schema Details": [[283, "dictionary-schema-details"]], "Incremental Configuration": [[283, "incremental-configuration"]], "Object connections": [[283, "object-connections"]], "User-defined objects": [[283, "user-defined-objects"]], "Handler configuration order": [[283, "handler-configuration-order"]], "Access to external objects": [[283, "access-to-external-objects"]], "Access to internal objects": [[283, "access-to-internal-objects"]], "Import resolution and custom importers": [[283, "import-resolution-and-custom-importers"]], "Configuration file format": [[283, "configuration-file-format"]], "logging.handlers \u2014 Logging handlers": [[284, "module-logging.handlers"]], "StreamHandler": [[284, "streamhandler"]], "FileHandler": [[284, "filehandler"]], "NullHandler": [[284, "nullhandler"]], "WatchedFileHandler": [[284, "watchedfilehandler"]], "BaseRotatingHandler": [[284, "baserotatinghandler"]], "RotatingFileHandler": [[284, "rotatingfilehandler"]], "TimedRotatingFileHandler": [[284, "timedrotatingfilehandler"]], "SocketHandler": [[284, "sockethandler"]], "DatagramHandler": [[284, "datagramhandler"]], "SysLogHandler": [[284, "sysloghandler"]], "NTEventLogHandler": [[284, "nteventloghandler"]], "SMTPHandler": [[284, "smtphandler"]], "MemoryHandler": [[284, "memoryhandler"]], "HTTPHandler": [[284, "httphandler"]], "QueueHandler": [[284, "queuehandler"]], "QueueListener": [[284, "queuelistener"]], "lzma \u2014 Compression using the LZMA algorithm": [[285, "module-lzma"]], "Reading and writing compressed files": [[285, "reading-and-writing-compressed-files"]], "Compressing and decompressing data in memory": [[285, "compressing-and-decompressing-data-in-memory"]], "Miscellaneous": [[285, "miscellaneous"], [298, "miscellaneous"], [475, "miscellaneous"]], "Specifying custom filter chains": [[285, "specifying-custom-filter-chains"]], "mailbox \u2014 Manipulate mailboxes in various formats": [[286, "module-mailbox"]], "Mailbox objects": [[286, "mailbox-objects"]], "Maildir objects": [[286, "maildir-objects"]], "mbox objects": [[286, "mbox-objects"]], "MH objects": [[286, "mh-objects"]], "Babyl objects": [[286, "babyl-objects"]], "MMDF objects": [[286, "mmdf-objects"]], "Message objects": [[286, "message-objects"]], "MaildirMessage objects": [[286, "maildirmessage-objects"]], "mboxMessage objects": [[286, "mboxmessage-objects"]], "MHMessage objects": [[286, "mhmessage-objects"]], "BabylMessage objects": [[286, "babylmessage-objects"]], "MMDFMessage objects": [[286, "mmdfmessage-objects"]], "mailcap \u2014 Mailcap file handling": [[287, "module-mailcap"]], "Structured Markup Processing Tools": [[288, "structured-markup-processing-tools"]], "marshal \u2014 Internal Python object serialization": [[289, "module-marshal"]], "math \u2014 Mathematical functions": [[290, "module-math"]], "Number-theoretic and representation functions": [[290, "number-theoretic-and-representation-functions"]], "Angular conversion": [[290, "angular-conversion"]], "Special functions": [[290, "special-functions"]], "mimetypes \u2014 Map filenames to MIME types": [[291, "module-mimetypes"]], "MimeTypes Objects": [[291, "mimetypes-objects"]], "Multimedia Services": [[292, "multimedia-services"]], "mmap \u2014 Memory-mapped file support": [[293, "module-mmap"]], "MADV_* Constants": [[293, "madv-constants"]], "MAP_* Constants": [[293, "map-constants"]], "modulefinder \u2014 Find modules used by a script": [[294, "module-modulefinder"]], "Example usage of ModuleFinder": [[294, "example-usage-of-modulefinder"]], "msilib \u2014 Read and write Microsoft Installer files": [[296, "module-msilib"]], "Database Objects": [[296, "database-objects"]], "View Objects": [[296, "view-objects"]], "Summary Information Objects": [[296, "summary-information-objects"]], "Record Objects": [[296, "record-objects"]], "Errors": [[296, "errors"]], "CAB Objects": [[296, "cab-objects"]], "Directory Objects": [[296, "directory-objects"]], "Features": [[296, "features"], [490, "features"], [490, "id1"]], "GUI classes": [[296, "gui-classes"]], "Precomputed tables": [[296, "precomputed-tables"]], "msvcrt \u2014 Useful routines from the MS VC++ runtime": [[297, "module-msvcrt"]], "File Operations": [[297, "file-operations"]], "Console I/O": [[297, "console-i-o"]], "Other Functions": [[297, "other-functions"]], "multiprocessing \u2014 Process-based parallelism": [[298, "module-multiprocessing"]], "The Process class": [[298, "the-process-class"]], "Contexts and start methods": [[298, "contexts-and-start-methods"]], "Exchanging objects between processes": [[298, "exchanging-objects-between-processes"]], "Synchronization between processes": [[298, "synchronization-between-processes"]], "Sharing state between processes": [[298, "sharing-state-between-processes"]], "Using a pool of workers": [[298, "using-a-pool-of-workers"]], "Process and exceptions": [[298, "process-and-exceptions"]], "Pipes and Queues": [[298, "pipes-and-queues"]], "Connection Objects": [[298, "connection-objects"]], "Synchronization primitives": [[298, "synchronization-primitives"]], "Shared ctypes Objects": [[298, "shared-ctypes-objects"]], "The multiprocessing.sharedctypes module": [[298, "module-multiprocessing.sharedctypes"]], "Managers": [[298, "managers"]], "Customized managers": [[298, "customized-managers"]], "Using a remote manager": [[298, "using-a-remote-manager"]], "Proxy Objects": [[298, "proxy-objects"]], "Cleanup": [[298, "cleanup"], [307, "cleanup"]], "Process Pools": [[298, "module-multiprocessing.pool"]], "Listeners and Clients": [[298, "module-multiprocessing.connection"]], "Address Formats": [[298, "address-formats"]], "Authentication keys": [[298, "authentication-keys"]], "The multiprocessing.dummy module": [[298, "module-multiprocessing.dummy"]], "Programming guidelines": [[298, "programming-guidelines"]], "All start methods": [[298, "all-start-methods"]], "The spawn and forkserver start methods": [[298, "the-spawn-and-forkserver-start-methods"]], "multiprocessing.shared_memory \u2014 Shared memory for direct access across processes": [[299, "module-multiprocessing.shared_memory"]], "Internet Data Handling": [[300, "internet-data-handling"]], "netrc \u2014 netrc file processing": [[301, "module-netrc"]], "netrc Objects": [[301, "netrc-objects"]], "nis \u2014 Interface to Sun\u2019s NIS (Yellow Pages)": [[302, "module-nis"]], "nntplib \u2014 NNTP protocol client": [[303, "module-nntplib"]], "NNTP Objects": [[303, "nntp-objects"]], "numbers \u2014 Numeric abstract base classes": [[304, "module-numbers"]], "The numeric tower": [[304, "the-numeric-tower"]], "Notes for type implementors": [[304, "notes-for-type-implementors"]], "Adding More Numeric ABCs": [[304, "adding-more-numeric-abcs"]], "Implementing the arithmetic operations": [[304, "implementing-the-arithmetic-operations"]], "Numeric and Mathematical Modules": [[305, "numeric-and-mathematical-modules"]], "operator \u2014 Standard operators as functions": [[306, "module-operator"]], "Mapping Operators to Functions": [[306, "mapping-operators-to-functions"]], "In-place Operators": [[306, "in-place-operators"]], "optparse \u2014 Parser for command line options": [[307, "module-optparse"]], "Terminology": [[307, "terminology"]], "What are options for?": [[307, "what-are-options-for"]], "What are positional arguments for?": [[307, "what-are-positional-arguments-for"]], "Understanding option actions": [[307, "understanding-option-actions"]], "The store action": [[307, "the-store-action"]], "Handling boolean (flag) options": [[307, "handling-boolean-flag-options"]], "Other actions": [[307, "other-actions"]], "Default values": [[307, "default-values"]], "Generating help": [[307, "generating-help"]], "Grouping Options": [[307, "grouping-options"]], "Printing a version string": [[307, "printing-a-version-string"]], "How optparse handles errors": [[307, "how-optparse-handles-errors"]], "Putting it all together": [[307, "putting-it-all-together"]], "Reference Guide": [[307, "reference-guide"]], "Creating the parser": [[307, "creating-the-parser"]], "Populating the parser": [[307, "populating-the-parser"]], "Defining options": [[307, "defining-options"]], "Option attributes": [[307, "option-attributes"]], "Standard option actions": [[307, "standard-option-actions"]], "Standard option types": [[307, "standard-option-types"]], "Querying and manipulating your option parser": [[307, "querying-and-manipulating-your-option-parser"]], "Conflicts between options": [[307, "conflicts-between-options"]], "Other methods": [[307, "other-methods"]], "Option Callbacks": [[307, "option-callbacks"]], "Defining a callback option": [[307, "defining-a-callback-option"]], "How callbacks are called": [[307, "how-callbacks-are-called"]], "Raising errors in a callback": [[307, "raising-errors-in-a-callback"]], "Callback example 1: trivial callback": [[307, "callback-example-1-trivial-callback"]], "Callback example 2: check option order": [[307, "callback-example-2-check-option-order"]], "Callback example 3: check option order (generalized)": [[307, "callback-example-3-check-option-order-generalized"]], "Callback example 4: check arbitrary condition": [[307, "callback-example-4-check-arbitrary-condition"]], "Callback example 5: fixed arguments": [[307, "callback-example-5-fixed-arguments"]], "Callback example 6: variable arguments": [[307, "callback-example-6-variable-arguments"]], "Extending optparse": [[307, "extending-optparse"]], "Adding new types": [[307, "adding-new-types"]], "Adding new actions": [[307, "adding-new-actions"]], "os \u2014 Miscellaneous operating system interfaces": [[308, "module-os"]], "File Names, Command Line Arguments, and Environment Variables": [[308, "file-names-command-line-arguments-and-environment-variables"]], "Python UTF-8 Mode": [[308, "python-utf-8-mode"]], "Process Parameters": [[308, "process-parameters"]], "File Object Creation": [[308, "file-object-creation"]], "File Descriptor Operations": [[308, "file-descriptor-operations"]], "Querying the size of a terminal": [[308, "querying-the-size-of-a-terminal"]], "Inheritance of File Descriptors": [[308, "inheritance-of-file-descriptors"]], "Files and Directories": [[308, "files-and-directories"]], "Linux extended attributes": [[308, "linux-extended-attributes"]], "Process Management": [[308, "process-management"]], "Interface to the scheduler": [[308, "interface-to-the-scheduler"]], "Miscellaneous System Information": [[308, "miscellaneous-system-information"]], "Random numbers": [[308, "random-numbers"], [341, "random-numbers"]], "os.path \u2014 Common pathname manipulations": [[309, "module-os.path"]], "ossaudiodev \u2014 Access to OSS-compatible audio devices": [[310, "module-ossaudiodev"]], "Audio Device Objects": [[310, "audio-device-objects"]], "Mixer Device Objects": [[310, "mixer-device-objects"]], "pathlib \u2014 Object-oriented filesystem paths": [[311, "module-pathlib"]], "Basic use": [[311, "basic-use"]], "Pure paths": [[311, "pure-paths"]], "General properties": [[311, "general-properties"]], "Accessing individual parts": [[311, "accessing-individual-parts"]], "Methods and properties": [[311, "methods-and-properties"]], "Concrete paths": [[311, "concrete-paths"]], "Correspondence to tools in the os module": [[311, "correspondence-to-tools-in-the-os-module"]], "pdb \u2014 The Python Debugger": [[312, "module-pdb"]], "Debugger Commands": [[312, "debugger-commands"]], "Data Persistence": [[313, "data-persistence"]], "pickle \u2014 Python object serialization": [[314, "module-pickle"]], "Relationship to other Python modules": [[314, "relationship-to-other-python-modules"]], "Comparison with marshal": [[314, "comparison-with-marshal"]], "Comparison with json": [[314, "comparison-with-json"]], "Data stream format": [[314, "data-stream-format"]], "Module Interface": [[314, "module-interface"]], "What can be pickled and unpickled?": [[314, "what-can-be-pickled-and-unpickled"]], "Pickling Class Instances": [[314, "pickling-class-instances"]], "Persistence of External Objects": [[314, "persistence-of-external-objects"]], "Dispatch Tables": [[314, "dispatch-tables"]], "Handling Stateful Objects": [[314, "handling-stateful-objects"]], "Custom Reduction for Types, Functions, and Other Objects": [[314, "custom-reduction-for-types-functions-and-other-objects"]], "Out-of-band Buffers": [[314, "out-of-band-buffers"]], "Provider API": [[314, "provider-api"]], "Consumer API": [[314, "consumer-api"]], "Restricting Globals": [[314, "restricting-globals"]], "pickletools \u2014 Tools for pickle developers": [[315, "module-pickletools"]], "Programmatic Interface": [[315, "programmatic-interface"], [395, "programmatic-interface"]], "pipes \u2014 Interface to shell pipelines": [[316, "module-pipes"]], "Template Objects": [[316, "template-objects"]], "pkgutil \u2014 Package extension utility": [[317, "module-pkgutil"]], "platform \u2014  Access to underlying platform\u2019s identifying data": [[318, "module-platform"]], "Cross Platform": [[318, "cross-platform"]], "Java Platform": [[318, "java-platform"]], "Windows Platform": [[318, "windows-platform"]], "macOS Platform": [[318, "macos-platform"]], "Unix Platforms": [[318, "unix-platforms"]], "Linux Platforms": [[318, "linux-platforms"]], "plistlib \u2014 Generate and parse Apple .plist files": [[319, "module-plistlib"]], "poplib \u2014 POP3 protocol client": [[320, "module-poplib"]], "POP3 Objects": [[320, "pop3-objects"]], "POP3 Example": [[320, "pop3-example"]], "posix \u2014 The most common POSIX system calls": [[321, "module-posix"]], "Large File Support": [[321, "large-file-support"]], "Notable Module Contents": [[321, "notable-module-contents"]], "pprint \u2014 Data pretty printer": [[322, "module-pprint"]], "PrettyPrinter Objects": [[322, "prettyprinter-objects"]], "The Python Profilers": [[323, "the-python-profilers"]], "Introduction to the profilers": [[323, "introduction-to-the-profilers"]], "Instant User\u2019s Manual": [[323, "instant-user-s-manual"]], "profile and cProfile Module Reference": [[323, "module-cProfile"]], "The Stats Class": [[323, "the-stats-class"]], "What Is Deterministic Profiling?": [[323, "what-is-deterministic-profiling"]], "Limitations": [[323, "limitations"]], "Calibration": [[323, "calibration"]], "Using a custom timer": [[323, "using-a-custom-timer"]], "pty \u2014 Pseudo-terminal utilities": [[324, "module-pty"]], "pwd \u2014 The password database": [[325, "module-pwd"]], "py_compile \u2014 Compile Python source files": [[326, "module-py_compile"]], "Command-Line Interface": [[326, "command-line-interface"], [373, "command-line-interface"], [382, "command-line-interface"], [403, "command-line-interface"], [436, "command-line-interface"], [437, "command-line-interface"]], "pyclbr \u2014 Python module browser support": [[327, "module-pyclbr"]], "Class Objects": [[327, "class-objects"], [455, "class-objects"]], "pydoc \u2014 Documentation generator and online help system": [[328, "module-pydoc"]], "xml.parsers.expat \u2014 Fast XML parsing using Expat": [[329, "module-xml.parsers.expat"]], "XMLParser Objects": [[329, "xmlparser-objects"], [428, "xmlparser-objects"]], "ExpatError Exceptions": [[329, "expaterror-exceptions"]], "Content Model Descriptions": [[329, "module-xml.parsers.expat.model"]], "Expat error constants": [[329, "module-xml.parsers.expat.errors"]], "Python Runtime Services": [[330, "python-runtime-services"]], "queue \u2014 A synchronized queue class": [[331, "module-queue"]], "Queue Objects": [[331, "queue-objects"]], "SimpleQueue Objects": [[331, "simplequeue-objects"]], "quopri \u2014 Encode and decode MIME quoted-printable data": [[332, "module-quopri"]], "random \u2014 Generate pseudo-random numbers": [[333, "module-random"]], "Bookkeeping functions": [[333, "bookkeeping-functions"]], "Functions for bytes": [[333, "functions-for-bytes"]], "Functions for integers": [[333, "functions-for-integers"]], "Functions for sequences": [[333, "functions-for-sequences"]], "Real-valued distributions": [[333, "real-valued-distributions"]], "Alternative Generator": [[333, "alternative-generator"]], "Notes on Reproducibility": [[333, "notes-on-reproducibility"]], "re \u2014 Regular expression operations": [[334, "module-re"]], "Regular Expression Syntax": [[334, "regular-expression-syntax"]], "Flags": [[334, "flags"]], "Regular Expression Objects": [[334, "regular-expression-objects"]], "Match Objects": [[334, "match-objects"]], "Regular Expression Examples": [[334, "regular-expression-examples"]], "Checking for a Pair": [[334, "checking-for-a-pair"]], "Simulating scanf()": [[334, "simulating-scanf"]], "search() vs. match()": [[334, "search-vs-match"]], "Making a Phonebook": [[334, "making-a-phonebook"]], "Text Munging": [[334, "text-munging"]], "Finding all Adverbs": [[334, "finding-all-adverbs"]], "Finding all Adverbs and their Positions": [[334, "finding-all-adverbs-and-their-positions"]], "Raw String Notation": [[334, "raw-string-notation"]], "Writing a Tokenizer": [[334, "writing-a-tokenizer"]], "readline \u2014 GNU readline interface": [[335, "module-readline"]], "Init file": [[335, "init-file"]], "Line buffer": [[335, "line-buffer"]], "History file": [[335, "history-file"]], "History list": [[335, "history-list"]], "Startup hooks": [[335, "startup-hooks"]], "Completion": [[335, "completion"]], "reprlib \u2014 Alternate repr() implementation": [[336, "module-reprlib"]], "Repr Objects": [[336, "repr-objects"]], "Subclassing Repr Objects": [[336, "subclassing-repr-objects"]], "resource \u2014 Resource usage information": [[337, "module-resource"]], "Resource Limits": [[337, "resource-limits"]], "Resource Usage": [[337, "resource-usage"]], "rlcompleter \u2014 Completion function for GNU readline": [[338, "module-rlcompleter"]], "runpy \u2014 Locating and executing Python modules": [[339, "module-runpy"]], "sched \u2014 Event scheduler": [[340, "module-sched"]], "Scheduler Objects": [[340, "scheduler-objects"]], "secrets \u2014 Generate secure random numbers for managing secrets": [[341, "module-secrets"]], "Generating tokens": [[341, "generating-tokens"]], "How many bytes should tokens use?": [[341, "how-many-bytes-should-tokens-use"]], "Other functions": [[341, "other-functions"], [353, "other-functions"], [370, "other-functions"]], "Recipes and best practices": [[341, "recipes-and-best-practices"]], "select \u2014 Waiting for I/O completion": [[343, "module-select"]], "/dev/poll Polling Objects": [[343, "dev-poll-polling-objects"]], "Edge and Level Trigger Polling (epoll) Objects": [[343, "edge-and-level-trigger-polling-epoll-objects"]], "Polling Objects": [[343, "polling-objects"]], "Kqueue Objects": [[343, "kqueue-objects"]], "Kevent Objects": [[343, "kevent-objects"]], "selectors \u2014 High-level I/O multiplexing": [[344, "module-selectors"]], "Classes": [[344, "classes"], [363, "classes"], [443, "classes"], [455, "classes"]], "shelve \u2014 Python object persistence": [[345, "module-shelve"]], "Restrictions": [[345, "restrictions"]], "shlex \u2014 Simple lexical analysis": [[346, "module-shlex"]], "shlex Objects": [[346, "shlex-objects"]], "Parsing Rules": [[346, "parsing-rules"]], "Improved Compatibility with Shells": [[346, "improved-compatibility-with-shells"]], "shutil \u2014 High-level file operations": [[347, "module-shutil"]], "Directory and files operations": [[347, "directory-and-files-operations"]], "Platform-dependent efficient copy operations": [[347, "platform-dependent-efficient-copy-operations"]], "copytree example": [[347, "copytree-example"]], "rmtree example": [[347, "rmtree-example"]], "Archiving operations": [[347, "archiving-operations"]], "Archiving example": [[347, "archiving-example"]], "Archiving example with base_dir": [[347, "archiving-example-with-base-dir"]], "Querying the size of the output terminal": [[347, "querying-the-size-of-the-output-terminal"]], "signal \u2014 Set handlers for asynchronous events": [[348, "module-signal"]], "General rules": [[348, "general-rules"]], "Execution of Python signal handlers": [[348, "execution-of-python-signal-handlers"]], "Signals and threads": [[348, "signals-and-threads"]], "Note on SIGPIPE": [[348, "note-on-sigpipe"]], "Note on Signal Handlers and Exceptions": [[348, "note-on-signal-handlers-and-exceptions"]], "site \u2014 Site-specific configuration hook": [[349, "module-site"]], "sitecustomize": [[349, "module-sitecustomize"]], "usercustomize": [[349, "module-usercustomize"]], "Readline configuration": [[349, "readline-configuration"]], "smtpd \u2014 SMTP Server": [[350, "module-smtpd"]], "SMTPServer Objects": [[350, "smtpserver-objects"]], "DebuggingServer Objects": [[350, "debuggingserver-objects"]], "PureProxy Objects": [[350, "pureproxy-objects"]], "SMTPChannel Objects": [[350, "smtpchannel-objects"]], "smtplib \u2014 SMTP protocol client": [[351, "module-smtplib"]], "SMTP Objects": [[351, "smtp-objects"]], "SMTP Example": [[351, "smtp-example"]], "sndhdr \u2014 Determine type of sound file": [[352, "module-sndhdr"]], "socket \u2014 Low-level networking interface": [[353, "module-socket"]], "Socket families": [[353, "socket-families"]], "Creating sockets": [[353, "creating-sockets"]], "Socket Objects": [[353, "socket-objects"]], "Notes on socket timeouts": [[353, "notes-on-socket-timeouts"]], "Timeouts and the connect method": [[353, "timeouts-and-the-connect-method"]], "Timeouts and the accept method": [[353, "timeouts-and-the-accept-method"]], "socketserver \u2014 A framework for network servers": [[354, "module-socketserver"]], "Server Creation Notes": [[354, "server-creation-notes"]], "Request Handler Objects": [[354, "request-handler-objects"]], "socketserver.TCPServer Example": [[354, "socketserver-tcpserver-example"]], "socketserver.UDPServer Example": [[354, "socketserver-udpserver-example"]], "Asynchronous Mixins": [[354, "asynchronous-mixins"]], "spwd \u2014 The shadow password database": [[355, "module-spwd"]], "sqlite3 \u2014 DB-API 2.0 interface for SQLite databases": [[356, "module-sqlite3"]], "Module functions": [[356, "module-functions"]], "Module constants": [[356, "module-constants"]], "Connection objects": [[356, "connection-objects"]], "Cursor objects": [[356, "cursor-objects"]], "Row objects": [[356, "row-objects"]], "Blob objects": [[356, "blob-objects"]], "PrepareProtocol objects": [[356, "prepareprotocol-objects"]], "SQLite and Python types": [[356, "sqlite-and-python-types"]], "Default adapters and converters": [[356, "default-adapters-and-converters"]], "How-to guides": [[356, "how-to-guides"]], "How to use placeholders to bind values in SQL queries": [[356, "how-to-use-placeholders-to-bind-values-in-sql-queries"]], "How to adapt custom Python types to SQLite values": [[356, "how-to-adapt-custom-python-types-to-sqlite-values"]], "How to write adaptable objects": [[356, "how-to-write-adaptable-objects"]], "How to register adapter callables": [[356, "how-to-register-adapter-callables"]], "How to convert SQLite values to custom Python types": [[356, "how-to-convert-sqlite-values-to-custom-python-types"]], "Adapter and converter recipes": [[356, "adapter-and-converter-recipes"]], "How to use connection shortcut methods": [[356, "how-to-use-connection-shortcut-methods"]], "How to use the connection context manager": [[356, "how-to-use-the-connection-context-manager"]], "How to work with SQLite URIs": [[356, "how-to-work-with-sqlite-uris"]], "How to create and use row factories": [[356, "how-to-create-and-use-row-factories"]], "How to handle non-UTF-8 text encodings": [[356, "how-to-handle-non-utf-8-text-encodings"]], "Explanation": [[356, "explanation"], [399, "explanation"]], "Transaction control": [[356, "transaction-control"]], "ssl \u2014 TLS/SSL wrapper for socket objects": [[357, "module-ssl"]], "Functions, Constants, and Exceptions": [[357, "functions-constants-and-exceptions"]], "Socket creation": [[357, "socket-creation"]], "Context creation": [[357, "context-creation"]], "Random generation": [[357, "random-generation"]], "Certificate handling": [[357, "certificate-handling"]], "SSL Sockets": [[357, "ssl-sockets"]], "SSL Contexts": [[357, "ssl-contexts"]], "Certificates": [[357, "certificates"]], "Certificate chains": [[357, "certificate-chains"]], "CA certificates": [[357, "ca-certificates"]], "Combined key and certificate": [[357, "combined-key-and-certificate"]], "Self-signed certificates": [[357, "self-signed-certificates"]], "Testing for SSL support": [[357, "testing-for-ssl-support"]], "Client-side operation": [[357, "client-side-operation"]], "Server-side operation": [[357, "server-side-operation"]], "Notes on non-blocking sockets": [[357, "notes-on-non-blocking-sockets"]], "Memory BIO Support": [[357, "memory-bio-support"], [492, "memory-bio-support"]], "SSL session": [[357, "ssl-session"]], "Best defaults": [[357, "best-defaults"]], "Manual settings": [[357, "manual-settings"]], "Verifying certificates": [[357, "verifying-certificates"]], "Protocol versions": [[357, "protocol-versions"]], "Cipher selection": [[357, "cipher-selection"]], "Multi-processing": [[357, "multi-processing"]], "TLS 1.3": [[357, "tls-1-3"]], "stat \u2014 Interpreting stat() results": [[358, "module-stat"]], "statistics \u2014 Mathematical statistics functions": [[359, "module-statistics"]], "Averages and measures of central location": [[359, "averages-and-measures-of-central-location"]], "Measures of spread": [[359, "measures-of-spread"]], "Statistics for relations between two inputs": [[359, "statistics-for-relations-between-two-inputs"]], "Function details": [[359, "function-details"]], "NormalDist objects": [[359, "normaldist-objects"]], "NormalDist Examples and Recipes": [[359, "normaldist-examples-and-recipes"]], "Built-in Types": [[360, "built-in-types"]], "Truth Value Testing": [[360, "truth-value-testing"]], "Boolean Operations \u2014 and, or, not": [[360, "boolean-operations-and-or-not"]], "Numeric Types \u2014 int, float, complex": [[360, "numeric-types-int-float-complex"]], "Bitwise Operations on Integer Types": [[360, "bitwise-operations-on-integer-types"]], "Additional Methods on Integer Types": [[360, "additional-methods-on-integer-types"]], "Additional Methods on Float": [[360, "additional-methods-on-float"]], "Hashing of numeric types": [[360, "hashing-of-numeric-types"]], "Iterator Types": [[360, "iterator-types"]], "Generator Types": [[360, "generator-types"]], "Sequence Types \u2014 list, tuple, range": [[360, "sequence-types-list-tuple-range"]], "Common Sequence Operations": [[360, "common-sequence-operations"]], "Immutable Sequence Types": [[360, "immutable-sequence-types"]], "Mutable Sequence Types": [[360, "mutable-sequence-types"]], "Lists": [[360, "lists"], [464, "lists"]], "Tuples": [[360, "tuples"]], "Ranges": [[360, "ranges"]], "Text Sequence Type \u2014 str": [[360, "text-sequence-type-str"]], "String Methods": [[360, "string-methods"], [477, "string-methods"]], "printf-style String Formatting": [[360, "printf-style-string-formatting"]], "Binary Sequence Types \u2014 bytes, bytearray, memoryview": [[360, "binary-sequence-types-bytes-bytearray-memoryview"]], "Bytearray Objects": [[360, "bytearray-objects"]], "Bytes and Bytearray Operations": [[360, "bytes-and-bytearray-operations"]], "printf-style Bytes Formatting": [[360, "printf-style-bytes-formatting"]], "Memory Views": [[360, "memory-views"]], "Set Types \u2014 set, frozenset": [[360, "set-types-set-frozenset"]], "Mapping Types \u2014 dict": [[360, "mapping-types-dict"]], "Dictionary view objects": [[360, "dictionary-view-objects"]], "Context Manager Types": [[360, "context-manager-types"]], "Type Annotation Types \u2014 Generic Alias, Union": [[360, "type-annotation-types-generic-alias-union"]], "Generic Alias Type": [[360, "generic-alias-type"]], "Standard Generic Classes": [[360, "standard-generic-classes"]], "Special Attributes of GenericAlias objects": [[360, "special-attributes-of-genericalias-objects"]], "Union Type": [[360, "union-type"]], "Other Built-in Types": [[360, "other-built-in-types"]], "Classes and Class Instances": [[360, "classes-and-class-instances"]], "The Null Object": [[360, "the-null-object"]], "The Ellipsis Object": [[360, "the-ellipsis-object"]], "The NotImplemented Object": [[360, "the-notimplemented-object"]], "Boolean Values": [[360, "boolean-values"]], "Internal Objects": [[360, "internal-objects"]], "Special Attributes": [[360, "special-attributes"]], "Integer string conversion length limitation": [[360, "integer-string-conversion-length-limitation"]], "Affected APIs": [[360, "affected-apis"]], "Configuring the limit": [[360, "configuring-the-limit"]], "Recommended configuration": [[360, "recommended-configuration"]], "string \u2014 Common string operations": [[361, "module-string"]], "String constants": [[361, "string-constants"]], "Custom String Formatting": [[361, "custom-string-formatting"]], "Format String Syntax": [[361, "format-string-syntax"]], "Format Specification Mini-Language": [[361, "format-specification-mini-language"]], "Format examples": [[361, "format-examples"]], "Template strings": [[361, "template-strings"]], "Helper functions": [[361, "helper-functions"]], "stringprep \u2014 Internet String Preparation": [[362, "module-stringprep"]], "struct \u2014 Interpret bytes as packed binary data": [[363, "module-struct"]], "Functions and Exceptions": [[363, "functions-and-exceptions"]], "Format Strings": [[363, "format-strings"]], "Byte Order, Size, and Alignment": [[363, "byte-order-size-and-alignment"]], "Format Characters": [[363, "format-characters"]], "Applications": [[363, "applications"]], "Native Formats": [[363, "native-formats"]], "Standard Formats": [[363, "standard-formats"]], "subprocess \u2014 Subprocess management": [[364, "module-subprocess"]], "Using the subprocess Module": [[364, "using-the-subprocess-module"]], "Frequently Used Arguments": [[364, "frequently-used-arguments"]], "Popen Constructor": [[364, "popen-constructor"]], "Popen Objects": [[364, "popen-objects"]], "Windows Popen Helpers": [[364, "windows-popen-helpers"]], "Windows Constants": [[364, "windows-constants"]], "Older high-level API": [[364, "older-high-level-api"]], "Replacing Older Functions with the subprocess Module": [[364, "replacing-older-functions-with-the-subprocess-module"]], "Replacing /bin/sh shell command substitution": [[364, "replacing-bin-sh-shell-command-substitution"]], "Replacing shell pipeline": [[364, "replacing-shell-pipeline"]], "Replacing os.system()": [[364, "replacing-os-system"]], "Replacing the os.spawn family": [[364, "replacing-the-os-spawn-family"]], "Replacing os.popen(), os.popen2(), os.popen3()": [[364, "replacing-os-popen-os-popen2-os-popen3"]], "Replacing functions from the popen2 module": [[364, "replacing-functions-from-the-popen2-module"]], "Legacy Shell Invocation Functions": [[364, "legacy-shell-invocation-functions"]], "Converting an argument sequence to a string on Windows": [[364, "converting-an-argument-sequence-to-a-string-on-windows"]], "Disabling use of vfork() or posix_spawn()": [[364, "disabling-use-of-vfork-or-posix-spawn"]], "sunau \u2014 Read and write Sun AU files": [[365, "module-sunau"]], "AU_read Objects": [[365, "au-read-objects"]], "AU_write Objects": [[365, "au-write-objects"]], "Superseded Modules": [[366, "superseded-modules"]], "symtable \u2014 Access to the compiler\u2019s symbol tables": [[367, "module-symtable"]], "Generating Symbol Tables": [[367, "generating-symbol-tables"]], "Examining Symbol Tables": [[367, "examining-symbol-tables"]], "sys \u2014 System-specific parameters and functions": [[368, "module-sys"]], "Attributes of the float_info named tuple": [[368, "id2"]], "The initialization of the sys.path module search path": [[369, "the-initialization-of-the-sys-path-module-search-path"]], "Virtual environments": [[369, "virtual-environments"], [476, "virtual-environments"]], "_pth files": [[369, "pth-files"]], "Embedded Python": [[369, "embedded-python"]], "sysconfig \u2014 Provide access to Python\u2019s configuration information": [[370, "module-sysconfig"]], "Configuration variables": [[370, "configuration-variables"]], "Installation paths": [[370, "installation-paths"]], "User scheme": [[370, "user-scheme"]], "posix_user": [[370, "posix-user"]], "nt_user": [[370, "nt-user"]], "osx_framework_user": [[370, "osx-framework-user"]], "Home scheme": [[370, "home-scheme"]], "posix_home": [[370, "posix-home"]], "Prefix scheme": [[370, "prefix-scheme"]], "posix_prefix": [[370, "posix-prefix"]], "nt": [[370, "nt"]], "Installation path functions": [[370, "installation-path-functions"]], "Using sysconfig as a script": [[370, "using-sysconfig-as-a-script"]], "syslog \u2014 Unix syslog library routines": [[371, "module-syslog"]], "Simple example": [[371, "simple-example"]], "tabnanny \u2014 Detection of ambiguous indentation": [[372, "module-tabnanny"]], "tarfile \u2014 Read and write tar archive files": [[373, "module-tarfile"]], "TarFile Objects": [[373, "tarfile-objects"]], "TarInfo Objects": [[373, "tarinfo-objects"]], "Extraction filters": [[373, "extraction-filters"]], "Default named filters": [[373, "default-named-filters"]], "Filter errors": [[373, "filter-errors"]], "Hints for further verification": [[373, "hints-for-further-verification"]], "Supporting older Python versions": [[373, "supporting-older-python-versions"]], "Stateful extraction filter example": [[373, "stateful-extraction-filter-example"]], "Command-line options": [[373, "command-line-options"], [403, "command-line-options"], [437, "command-line-options"]], "Supported tar formats": [[373, "supported-tar-formats"]], "Unicode issues": [[373, "unicode-issues"]], "telnetlib \u2014 Telnet client": [[374, "module-telnetlib"]], "Telnet Objects": [[374, "telnet-objects"]], "Telnet Example": [[374, "telnet-example"]], "tempfile \u2014 Generate temporary files and directories": [[375, "module-tempfile"]], "Deprecated functions and variables": [[375, "deprecated-functions-and-variables"]], "termios \u2014 POSIX style tty control": [[376, "module-termios"]], "test \u2014 Regression tests package for Python": [[377, "module-test"]], "Writing Unit Tests for the test package": [[377, "writing-unit-tests-for-the-test-package"]], "Running tests using the command-line interface": [[377, "module-test.regrtest"]], "test.support \u2014 Utilities for the Python test suite": [[377, "module-test.support"]], "test.support.socket_helper \u2014 Utilities for socket tests": [[377, "module-test.support.socket_helper"]], "test.support.script_helper \u2014 Utilities for the Python execution tests": [[377, "module-test.support.script_helper"]], "test.support.bytecode_helper \u2014 Support tools for testing correct bytecode generation": [[377, "module-test.support.bytecode_helper"]], "test.support.threading_helper \u2014 Utilities for threading tests": [[377, "module-test.support.threading_helper"]], "test.support.os_helper \u2014 Utilities for os tests": [[377, "module-test.support.os_helper"]], "test.support.import_helper \u2014 Utilities for import tests": [[377, "module-test.support.import_helper"]], "test.support.warnings_helper \u2014 Utilities for warnings tests": [[377, "module-test.support.warnings_helper"]], "Text Processing Services": [[378, "text-processing-services"]], "textwrap \u2014 Text wrapping and filling": [[379, "module-textwrap"]], "threading \u2014 Thread-based parallelism": [[380, "module-threading"]], "Thread-Local Data": [[380, "thread-local-data"]], "Thread Objects": [[380, "thread-objects"]], "Lock Objects": [[380, "lock-objects"]], "RLock Objects": [[380, "rlock-objects"]], "Condition Objects": [[380, "condition-objects"]], "Semaphore Objects": [[380, "semaphore-objects"]], "Semaphore Example": [[380, "semaphore-example"]], "Event Objects": [[380, "event-objects"]], "Timer Objects": [[380, "timer-objects"]], "Barrier Objects": [[380, "barrier-objects"]], "Using locks, conditions, and semaphores in the with statement": [[380, "using-locks-conditions-and-semaphores-in-the-with-statement"]], "time \u2014 Time access and conversions": [[381, "module-time"]], "Clock ID Constants": [[381, "clock-id-constants"]], "Timezone Constants": [[381, "timezone-constants"]], "timeit \u2014 Measure execution time of small code snippets": [[382, "module-timeit"]], "Python Interface": [[382, "python-interface"]], "Graphical User Interfaces with Tk": [[383, "graphical-user-interfaces-with-tk"]], "tkinter \u2014 Python interface to Tcl/Tk": [[384, "module-tkinter"]], "Architecture": [[384, "architecture"]], "Tkinter Modules": [[384, "tkinter-modules"]], "Tkinter Life Preserver": [[384, "tkinter-life-preserver"]], "A Hello World Program": [[384, "a-hello-world-program"]], "Important Tk Concepts": [[384, "important-tk-concepts"]], "Understanding How Tkinter Wraps Tcl/Tk": [[384, "understanding-how-tkinter-wraps-tcl-tk"]], "How do I\u2026? What option does\u2026?": [[384, "how-do-i-what-option-does"]], "Navigating the Tcl/Tk Reference Manual": [[384, "navigating-the-tcl-tk-reference-manual"]], "Threading model": [[384, "threading-model"]], "Handy Reference": [[384, "handy-reference"]], "Setting Options": [[384, "setting-options"]], "The Packer": [[384, "the-packer"]], "Packer Options": [[384, "packer-options"]], "Coupling Widget Variables": [[384, "coupling-widget-variables"]], "The Window Manager": [[384, "the-window-manager"]], "Tk Option Data Types": [[384, "tk-option-data-types"]], "Bindings and Events": [[384, "bindings-and-events"]], "The index Parameter": [[384, "the-index-parameter"]], "Images": [[384, "images"]], "File Handlers": [[384, "file-handlers"]], "tkinter.colorchooser \u2014 Color choosing dialog": [[385, "module-tkinter.colorchooser"]], "tkinter.dnd \u2014 Drag and drop support": [[386, "module-tkinter.dnd"]], "tkinter.font \u2014 Tkinter font wrapper": [[387, "module-tkinter.font"]], "tkinter.messagebox \u2014 Tkinter message prompts": [[388, "module-tkinter.messagebox"]], "tkinter.scrolledtext \u2014 Scrolled Text Widget": [[389, "module-tkinter.scrolledtext"]], "tkinter.tix \u2014 Extension widgets for Tk": [[390, "module-tkinter.tix"]], "Using Tix": [[390, "using-tix"]], "Tix Widgets": [[390, "tix-widgets"]], "Basic Widgets": [[390, "basic-widgets"]], "File Selectors": [[390, "file-selectors"]], "Hierarchical ListBox": [[390, "hierarchical-listbox"]], "Tabular ListBox": [[390, "tabular-listbox"]], "Manager Widgets": [[390, "manager-widgets"]], "Image Types": [[390, "image-types"]], "Miscellaneous Widgets": [[390, "miscellaneous-widgets"]], "Form Geometry Manager": [[390, "form-geometry-manager"]], "Tix Commands": [[390, "tix-commands"]], "tkinter.ttk \u2014 Tk themed widgets": [[391, "module-tkinter.ttk"]], "Using Ttk": [[391, "using-ttk"]], "Ttk Widgets": [[391, "ttk-widgets"]], "Widget": [[391, "widget"]], "Standard Options": [[391, "standard-options"]], "Scrollable Widget Options": [[391, "scrollable-widget-options"]], "Label Options": [[391, "label-options"]], "Compatibility Options": [[391, "compatibility-options"]], "Widget States": [[391, "widget-states"]], "ttk.Widget": [[391, "ttk-widget"]], "Combobox": [[391, "combobox"]], "Options": [[391, "options"], [391, "id1"], [391, "id3"], [391, "id5"], [391, "id6"], [391, "id7"]], "Virtual events": [[391, "virtual-events"], [391, "id2"]], "ttk.Combobox": [[391, "ttk-combobox"]], "Spinbox": [[391, "spinbox"]], "ttk.Spinbox": [[391, "ttk-spinbox"]], "Notebook": [[391, "notebook"]], "Tab Options": [[391, "tab-options"]], "Tab Identifiers": [[391, "tab-identifiers"]], "Virtual Events": [[391, "id4"], [391, "id8"]], "ttk.Notebook": [[391, "ttk-notebook"]], "Progressbar": [[391, "progressbar"]], "ttk.Progressbar": [[391, "ttk-progressbar"]], "Separator": [[391, "separator"]], "Sizegrip": [[391, "sizegrip"]], "Platform-specific notes": [[391, "platform-specific-notes"]], "Bugs": [[391, "bugs"]], "Treeview": [[391, "treeview"]], "Item Options": [[391, "item-options"]], "Tag Options": [[391, "tag-options"]], "Column Identifiers": [[391, "column-identifiers"]], "ttk.Treeview": [[391, "ttk-treeview"]], "Ttk Styling": [[391, "ttk-styling"]], "Layouts": [[391, "layouts"]], "token \u2014 Constants used with Python parse trees": [[392, "module-token"]], "tokenize \u2014 Tokenizer for Python source": [[393, "module-tokenize"]], "Tokenizing Input": [[393, "tokenizing-input"]], "tomllib \u2014 Parse TOML files": [[394, "module-tomllib"]], "Conversion Table": [[394, "conversion-table"]], "trace \u2014 Trace or track Python statement execution": [[395, "module-trace"]], "Main options": [[395, "main-options"]], "Modifiers": [[395, "modifiers"]], "Filters": [[395, "filters"]], "traceback \u2014 Print or retrieve a stack traceback": [[396, "module-traceback"]], "TracebackException Objects": [[396, "tracebackexception-objects"]], "StackSummary Objects": [[396, "stacksummary-objects"]], "FrameSummary Objects": [[396, "framesummary-objects"]], "Traceback Examples": [[396, "traceback-examples"]], "tracemalloc \u2014 Trace memory allocations": [[397, "module-tracemalloc"]], "Display the top 10": [[397, "display-the-top-10"]], "Compute differences": [[397, "compute-differences"]], "Get the traceback of a memory block": [[397, "get-the-traceback-of-a-memory-block"]], "Pretty top": [[397, "pretty-top"]], "Record the current and peak size of all traced memory blocks": [[397, "record-the-current-and-peak-size-of-all-traced-memory-blocks"]], "API": [[397, "api"], [414, "api"]], "DomainFilter": [[397, "domainfilter"]], "Filter": [[397, "filter"]], "Frame": [[397, "frame"]], "Snapshot": [[397, "snapshot"]], "Statistic": [[397, "statistic"]], "StatisticDiff": [[397, "statisticdiff"]], "Trace": [[397, "trace"]], "Traceback": [[397, "traceback"]], "tty \u2014 Terminal control functions": [[398, "module-tty"]], "turtle \u2014 Turtle graphics": [[399, "module-turtle"]], "Turtle star": [[399, null]], "Starting a turtle environment": [[399, "starting-a-turtle-environment"]], "Basic drawing": [[399, "basic-drawing"]], "Pen control": [[399, "pen-control"], [399, "id1"]], "The turtle\u2019s position": [[399, "the-turtle-s-position"]], "Making algorithmic patterns": [[399, "making-algorithmic-patterns"]], "How to\u2026": [[399, "how-to"]], "Get started as quickly as possible": [[399, "get-started-as-quickly-as-possible"]], "Use the turtle module namespace": [[399, "use-the-turtle-module-namespace"]], "Use turtle graphics in a script": [[399, "use-turtle-graphics-in-a-script"]], "Use object-oriented turtle graphics": [[399, "use-object-oriented-turtle-graphics"]], "Turtle graphics reference": [[399, "turtle-graphics-reference"]], "Turtle methods": [[399, "turtle-methods"]], "Methods of TurtleScreen/Screen": [[399, "methods-of-turtlescreen-screen"]], "Methods of RawTurtle/Turtle and corresponding functions": [[399, "methods-of-rawturtle-turtle-and-corresponding-functions"]], "Turtle motion": [[399, "turtle-motion"]], "Tell Turtle\u2019s state": [[399, "tell-turtle-s-state"]], "Settings for measurement": [[399, "settings-for-measurement"]], "Drawing state": [[399, "drawing-state"]], "Color control": [[399, "color-control"]], "Filling": [[399, "filling"]], "More drawing control": [[399, "more-drawing-control"]], "Turtle state": [[399, "turtle-state"]], "Visibility": [[399, "visibility"]], "Appearance": [[399, "appearance"]], "Using events": [[399, "using-events"]], "Special Turtle methods": [[399, "special-turtle-methods"]], "Compound shapes": [[399, "compound-shapes"]], "Methods of TurtleScreen/Screen and corresponding functions": [[399, "methods-of-turtlescreen-screen-and-corresponding-functions"]], "Window control": [[399, "window-control"]], "Animation control": [[399, "animation-control"]], "Using screen events": [[399, "using-screen-events"]], "Input methods": [[399, "input-methods"]], "Settings and special methods": [[399, "settings-and-special-methods"]], "Methods specific to Screen, not inherited from TurtleScreen": [[399, "methods-specific-to-screen-not-inherited-from-turtlescreen"]], "Public classes": [[399, "public-classes"]], "Help and configuration": [[399, "help-and-configuration"]], "How to use help": [[399, "how-to-use-help"]], "Translation of docstrings into different languages": [[399, "translation-of-docstrings-into-different-languages"]], "How to configure Screen and Turtles": [[399, "how-to-configure-screen-and-turtles"]], "turtledemo \u2014 Demo scripts": [[399, "module-turtledemo"]], "Changes since Python 2.6": [[399, "changes-since-python-2-6"]], "Changes since Python 3.0": [[399, "changes-since-python-3-0"]], "types \u2014 Dynamic type creation and names for built-in types": [[400, "module-types"]], "Dynamic Type Creation": [[400, "dynamic-type-creation"]], "Standard Interpreter Types": [[400, "standard-interpreter-types"]], "Additional Utility Classes and Functions": [[400, "additional-utility-classes-and-functions"]], "Coroutine Utility Functions": [[400, "coroutine-utility-functions"]], "typing \u2014 Support for type hints": [[401, "typing-support-for-type-hints"]], "Relevant PEPs": [[401, "relevant-peps"]], "Type aliases": [[401, "type-aliases"]], "NewType": [[401, "newtype"]], "Annotating callable objects": [[401, "annotating-callable-objects"]], "Generics": [[401, "generics"]], "Annotating tuples": [[401, "annotating-tuples"]], "The type of class objects": [[401, "the-type-of-class-objects"]], "User-defined generic types": [[401, "user-defined-generic-types"]], "The Any type": [[401, "the-any-type"]], "Nominal vs structural subtyping": [[401, "nominal-vs-structural-subtyping"]], "Special typing primitives": [[401, "special-typing-primitives"]], "Special types": [[401, "special-types"]], "Special forms": [[401, "special-forms"]], "Building generic types": [[401, "building-generic-types"]], "Other special directives": [[401, "other-special-directives"]], "ABCs for working with IO": [[401, "abcs-for-working-with-io"]], "Functions and decorators": [[401, "functions-and-decorators"]], "Recognised parameters for field specifiers": [[401, "id6"]], "Introspection helpers": [[401, "introspection-helpers"]], "Constant": [[401, "constant"]], "Deprecated aliases": [[401, "deprecated-aliases"], [403, "deprecated-aliases"]], "Aliases to built-in types": [[401, "aliases-to-built-in-types"]], "Aliases to types in collections": [[401, "aliases-to-types-in-collections"]], "Aliases to other concrete types": [[401, "aliases-to-other-concrete-types"]], "Aliases to container ABCs in collections.abc": [[401, "aliases-to-container-abcs-in-collections-abc"]], "Aliases to asynchronous ABCs in collections.abc": [[401, "aliases-to-asynchronous-abcs-in-collections-abc"]], "Aliases to other ABCs in collections.abc": [[401, "aliases-to-other-abcs-in-collections-abc"]], "Aliases to contextlib ABCs": [[401, "aliases-to-contextlib-abcs"]], "Deprecation Timeline of Major Features": [[401, "deprecation-timeline-of-major-features"]], "unicodedata \u2014 Unicode Database": [[402, "module-unicodedata"]], "unittest \u2014 Unit testing framework": [[403, "module-unittest"]], "Basic example": [[403, "basic-example"]], "Test Discovery": [[403, "test-discovery"]], "Organizing test code": [[403, "organizing-test-code"]], "Re-using old test code": [[403, "re-using-old-test-code"]], "Skipping tests and expected failures": [[403, "skipping-tests-and-expected-failures"]], "Distinguishing test iterations using subtests": [[403, "distinguishing-test-iterations-using-subtests"]], "Test cases": [[403, "test-cases"]], "Grouping tests": [[403, "grouping-tests"]], "Loading and running tests": [[403, "loading-and-running-tests"]], "load_tests Protocol": [[403, "load-tests-protocol"]], "Class and Module Fixtures": [[403, "class-and-module-fixtures"]], "setUpClass and tearDownClass": [[403, "setupclass-and-teardownclass"]], "setUpModule and tearDownModule": [[403, "setupmodule-and-teardownmodule"]], "unittest.mock \u2014 mock object library": [[404, "module-unittest.mock"]], "Quick Guide": [[404, "quick-guide"]], "The Mock Class": [[404, "the-mock-class"]], "Calling": [[404, "calling"]], "Deleting Attributes": [[404, "deleting-attributes"]], "Mock names and the name attribute": [[404, "mock-names-and-the-name-attribute"]], "Attaching Mocks as Attributes": [[404, "attaching-mocks-as-attributes"]], "The patchers": [[404, "the-patchers"]], "patch": [[404, "patch"]], "patch.object": [[404, "patch-object"]], "patch.dict": [[404, "patch-dict"]], "patch.multiple": [[404, "patch-multiple"]], "patch methods: start and stop": [[404, "patch-methods-start-and-stop"]], "patch builtins": [[404, "patch-builtins"]], "TEST_PREFIX": [[404, "test-prefix"]], "Nesting Patch Decorators": [[404, "nesting-patch-decorators"]], "Where to patch": [[404, "where-to-patch"]], "Patching Descriptors and Proxy Objects": [[404, "patching-descriptors-and-proxy-objects"]], "MagicMock and magic method support": [[404, "magicmock-and-magic-method-support"]], "Mocking Magic Methods": [[404, "mocking-magic-methods"]], "Magic Mock": [[404, "magic-mock"]], "Helpers": [[404, "helpers"]], "sentinel": [[404, "sentinel"]], "DEFAULT": [[404, "default"]], "call": [[404, "call"]], "create_autospec": [[404, "create-autospec"]], "ANY": [[404, "any"]], "FILTER_DIR": [[404, "filter-dir"]], "mock_open": [[404, "mock-open"]], "Autospeccing": [[404, "autospeccing"]], "Sealing mocks": [[404, "sealing-mocks"]], "Order of precedence of side_effect, return_value and wraps": [[404, "order-of-precedence-of-side-effect-return-value-and-wraps"]], "unittest.mock \u2014 getting started": [[405, "unittest-mock-getting-started"]], "Using Mock": [[405, "using-mock"]], "Mock Patching Methods": [[405, "mock-patching-methods"]], "Mock for Method Calls on an Object": [[405, "mock-for-method-calls-on-an-object"]], "Mocking Classes": [[405, "mocking-classes"]], "Naming your mocks": [[405, "naming-your-mocks"]], "Tracking all Calls": [[405, "tracking-all-calls"]], "Setting Return Values and Attributes": [[405, "setting-return-values-and-attributes"]], "Raising exceptions with mocks": [[405, "raising-exceptions-with-mocks"]], "Side effect functions and iterables": [[405, "side-effect-functions-and-iterables"]], "Mocking asynchronous iterators": [[405, "mocking-asynchronous-iterators"]], "Mocking asynchronous context manager": [[405, "mocking-asynchronous-context-manager"]], "Creating a Mock from an Existing Object": [[405, "creating-a-mock-from-an-existing-object"]], "Using side_effect to return per file content": [[405, "using-side-effect-to-return-per-file-content"]], "Patch Decorators": [[405, "patch-decorators"]], "Further Examples": [[405, "further-examples"]], "Mocking chained calls": [[405, "mocking-chained-calls"]], "Partial mocking": [[405, "partial-mocking"]], "Mocking a Generator Method": [[405, "mocking-a-generator-method"]], "Applying the same patch to every test method": [[405, "applying-the-same-patch-to-every-test-method"]], "Mocking Unbound Methods": [[405, "mocking-unbound-methods"]], "Checking multiple calls with mock": [[405, "checking-multiple-calls-with-mock"]], "Coping with mutable arguments": [[405, "coping-with-mutable-arguments"]], "Nesting Patches": [[405, "nesting-patches"]], "Mocking a dictionary with MagicMock": [[405, "mocking-a-dictionary-with-magicmock"]], "Mock subclasses and their attributes": [[405, "mock-subclasses-and-their-attributes"]], "Mocking imports with patch.dict": [[405, "mocking-imports-with-patch-dict"]], "Tracking order of calls and less verbose call assertions": [[405, "tracking-order-of-calls-and-less-verbose-call-assertions"]], "More complex argument matching": [[405, "more-complex-argument-matching"]], "Unix Specific Services": [[406, "unix-specific-services"]], "urllib \u2014 URL handling modules": [[407, "module-urllib"]], "urllib.error \u2014 Exception classes raised by urllib.request": [[408, "module-urllib.error"]], "urllib.parse \u2014 Parse URLs into components": [[409, "module-urllib.parse"]], "URL Parsing": [[409, "url-parsing"]], "URL parsing security": [[409, "url-parsing-security"]], "Parsing ASCII Encoded Bytes": [[409, "parsing-ascii-encoded-bytes"]], "Structured Parse Results": [[409, "structured-parse-results"]], "URL Quoting": [[409, "url-quoting"]], "urllib.request \u2014 Extensible library for opening URLs": [[410, "module-urllib.request"]], "Request Objects": [[410, "request-objects"]], "OpenerDirector Objects": [[410, "openerdirector-objects"]], "BaseHandler Objects": [[410, "basehandler-objects"]], "HTTPRedirectHandler Objects": [[410, "httpredirecthandler-objects"]], "HTTPCookieProcessor Objects": [[410, "httpcookieprocessor-objects"]], "ProxyHandler Objects": [[410, "proxyhandler-objects"]], "HTTPPasswordMgr Objects": [[410, "httppasswordmgr-objects"]], "HTTPPasswordMgrWithPriorAuth Objects": [[410, "httppasswordmgrwithpriorauth-objects"]], "AbstractBasicAuthHandler Objects": [[410, "abstractbasicauthhandler-objects"]], "HTTPBasicAuthHandler Objects": [[410, "httpbasicauthhandler-objects"]], "ProxyBasicAuthHandler Objects": [[410, "proxybasicauthhandler-objects"]], "AbstractDigestAuthHandler Objects": [[410, "abstractdigestauthhandler-objects"]], "HTTPDigestAuthHandler Objects": [[410, "httpdigestauthhandler-objects"]], "ProxyDigestAuthHandler Objects": [[410, "proxydigestauthhandler-objects"]], "HTTPHandler Objects": [[410, "httphandler-objects"]], "HTTPSHandler Objects": [[410, "httpshandler-objects"]], "FileHandler Objects": [[410, "filehandler-objects"]], "DataHandler Objects": [[410, "datahandler-objects"]], "FTPHandler Objects": [[410, "ftphandler-objects"]], "CacheFTPHandler Objects": [[410, "cacheftphandler-objects"]], "UnknownHandler Objects": [[410, "unknownhandler-objects"]], "HTTPErrorProcessor Objects": [[410, "httperrorprocessor-objects"]], "Legacy interface": [[410, "legacy-interface"]], "urllib.request Restrictions": [[410, "urllib-request-restrictions"]], "urllib.response \u2014 Response classes used by urllib": [[410, "module-urllib.response"]], "urllib.robotparser \u2014  Parser for robots.txt": [[411, "module-urllib.robotparser"]], "uu \u2014 Encode and decode uuencode files": [[412, "module-uu"]], "uuid \u2014 UUID objects according to RFC 4122": [[413, "module-uuid"]], "venv \u2014 Creation of virtual environments": [[414, "module-venv"]], "Creating virtual environments": [[414, "creating-virtual-environments"]], "How venvs work": [[414, "how-venvs-work"]], "An example of extending EnvBuilder": [[414, "an-example-of-extending-envbuilder"]], "warnings \u2014 Warning control": [[415, "module-warnings"]], "Warning Categories": [[415, "warning-categories"]], "The Warnings Filter": [[415, "the-warnings-filter"]], "Describing Warning Filters": [[415, "describing-warning-filters"]], "Default Warning Filter": [[415, "default-warning-filter"]], "Overriding the default filter": [[415, "overriding-the-default-filter"]], "Temporarily Suppressing Warnings": [[415, "temporarily-suppressing-warnings"]], "Testing Warnings": [[415, "testing-warnings"]], "Updating Code For New Versions of Dependencies": [[415, "updating-code-for-new-versions-of-dependencies"]], "Available Functions": [[415, "available-functions"]], "Available Context Managers": [[415, "available-context-managers"]], "wave \u2014 Read and write WAV files": [[416, "module-wave"]], "Wave_read Objects": [[416, "wave-read-objects"]], "Wave_write Objects": [[416, "wave-write-objects"]], "weakref \u2014 Weak references": [[417, "module-weakref"]], "Finalizer Objects": [[417, "finalizer-objects"]], "Comparing finalizers with __del__() methods": [[417, "comparing-finalizers-with-del-methods"]], "webbrowser \u2014 Convenient web-browser controller": [[418, "module-webbrowser"]], "Browser Controller Objects": [[418, "browser-controller-objects"]], "MS Windows Specific Services": [[419, "ms-windows-specific-services"]], "winreg \u2014 Windows registry access": [[420, "module-winreg"]], "HKEY_* Constants": [[420, "hkey-constants"]], "Access Rights": [[420, "access-rights"]], "64-bit Specific": [[420, "bit-specific"]], "Value Types": [[420, "value-types"]], "Registry Handle Objects": [[420, "registry-handle-objects"]], "winsound \u2014 Sound-playing interface for Windows": [[421, "module-winsound"]], "wsgiref \u2014 WSGI Utilities and Reference Implementation": [[422, "module-wsgiref"]], "wsgiref.util \u2013 WSGI environment utilities": [[422, "module-wsgiref.util"]], "wsgiref.headers \u2013 WSGI response header tools": [[422, "module-wsgiref.headers"]], "wsgiref.simple_server \u2013 a simple WSGI HTTP server": [[422, "module-wsgiref.simple_server"]], "wsgiref.validate \u2014 WSGI conformance checker": [[422, "module-wsgiref.validate"]], "wsgiref.handlers \u2013 server/gateway base classes": [[422, "module-wsgiref.handlers"]], "wsgiref.types \u2013 WSGI types for static type checking": [[422, "module-wsgiref.types"]], "xdrlib \u2014 Encode and decode XDR data": [[423, "module-xdrlib"]], "Packer Objects": [[423, "packer-objects"]], "Unpacker Objects": [[423, "unpacker-objects"]], "XML Processing Modules": [[424, "module-xml"]], "XML vulnerabilities": [[424, "xml-vulnerabilities"]], "The defusedxml Package": [[424, "the-defusedxml-package"]], "xml.dom \u2014 The Document Object Model API": [[425, "module-xml.dom"]], "Objects in the DOM": [[425, "objects-in-the-dom"]], "DOMImplementation Objects": [[425, "domimplementation-objects"]], "Node Objects": [[425, "node-objects"]], "NodeList Objects": [[425, "nodelist-objects"]], "DocumentType Objects": [[425, "documenttype-objects"]], "Document Objects": [[425, "document-objects"]], "Element Objects": [[425, "element-objects"], [428, "element-objects"]], "Attr Objects": [[425, "attr-objects"]], "NamedNodeMap Objects": [[425, "namednodemap-objects"]], "Comment Objects": [[425, "comment-objects"]], "Text and CDATASection Objects": [[425, "text-and-cdatasection-objects"]], "ProcessingInstruction Objects": [[425, "processinginstruction-objects"]], "Conformance": [[425, "conformance"]], "Type Mapping": [[425, "type-mapping"]], "Accessor Methods": [[425, "accessor-methods"]], "xml.dom.minidom \u2014 Minimal DOM implementation": [[426, "module-xml.dom.minidom"]], "DOM Objects": [[426, "dom-objects"]], "DOM Example": [[426, "dom-example"]], "minidom and the DOM standard": [[426, "minidom-and-the-dom-standard"]], "xml.dom.pulldom \u2014 Support for building partial DOM trees": [[427, "module-xml.dom.pulldom"]], "DOMEventStream Objects": [[427, "domeventstream-objects"]], "xml.etree.ElementTree \u2014 The ElementTree XML API": [[428, "module-xml.etree.ElementTree"]], "XML tree and elements": [[428, "xml-tree-and-elements"]], "Parsing XML": [[428, "parsing-xml"]], "Pull API for non-blocking parsing": [[428, "pull-api-for-non-blocking-parsing"]], "Finding interesting elements": [[428, "finding-interesting-elements"]], "Modifying an XML File": [[428, "modifying-an-xml-file"]], "Building XML documents": [[428, "building-xml-documents"]], "Parsing XML with Namespaces": [[428, "parsing-xml-with-namespaces"]], "XPath support": [[428, "xpath-support"]], "Supported XPath syntax": [[428, "supported-xpath-syntax"]], "XInclude support": [[428, "xinclude-support"]], "ElementTree Objects": [[428, "elementtree-objects"]], "QName Objects": [[428, "qname-objects"]], "TreeBuilder Objects": [[428, "treebuilder-objects"]], "XMLPullParser Objects": [[428, "xmlpullparser-objects"]], "xml.sax \u2014 Support for SAX2 parsers": [[429, "module-xml.sax"]], "SAXException Objects": [[429, "saxexception-objects"]], "xml.sax.handler \u2014 Base classes for SAX handlers": [[430, "module-xml.sax.handler"]], "ContentHandler Objects": [[430, "contenthandler-objects"]], "DTDHandler Objects": [[430, "dtdhandler-objects"]], "EntityResolver Objects": [[430, "entityresolver-objects"]], "ErrorHandler Objects": [[430, "errorhandler-objects"]], "LexicalHandler Objects": [[430, "lexicalhandler-objects"]], "xml.sax.xmlreader \u2014 Interface for XML parsers": [[431, "module-xml.sax.xmlreader"]], "XMLReader Objects": [[431, "xmlreader-objects"]], "IncrementalParser Objects": [[431, "incrementalparser-objects"]], "Locator Objects": [[431, "locator-objects"]], "InputSource Objects": [[431, "inputsource-objects"]], "The Attributes Interface": [[431, "the-attributes-interface"]], "The AttributesNS Interface": [[431, "the-attributesns-interface"]], "xml.sax.saxutils \u2014 SAX Utilities": [[432, "module-xml.sax.saxutils"]], "xmlrpc \u2014 XMLRPC server and client modules": [[433, "xmlrpc-xmlrpc-server-and-client-modules"]], "xmlrpc.client \u2014 XML-RPC client access": [[434, "module-xmlrpc.client"]], "ServerProxy Objects": [[434, "serverproxy-objects"]], "Binary Objects": [[434, "binary-objects"]], "Fault Objects": [[434, "fault-objects"]], "ProtocolError Objects": [[434, "protocolerror-objects"]], "MultiCall Objects": [[434, "multicall-objects"]], "Convenience Functions": [[434, "convenience-functions"]], "Example of Client Usage": [[434, "example-of-client-usage"]], "Example of Client and Server Usage": [[434, "example-of-client-and-server-usage"]], "xmlrpc.server \u2014 Basic XML-RPC servers": [[435, "module-xmlrpc.server"]], "SimpleXMLRPCServer Objects": [[435, "simplexmlrpcserver-objects"]], "SimpleXMLRPCServer Example": [[435, "simplexmlrpcserver-example"]], "CGIXMLRPCRequestHandler": [[435, "cgixmlrpcrequesthandler"]], "Documenting XMLRPC server": [[435, "documenting-xmlrpc-server"]], "DocXMLRPCServer Objects": [[435, "docxmlrpcserver-objects"]], "DocCGIXMLRPCRequestHandler": [[435, "doccgixmlrpcrequesthandler"]], "zipapp \u2014 Manage executable Python zip archives": [[436, "module-zipapp"]], "Basic Example": [[436, "basic-example"]], "Python API": [[436, "python-api"]], "Specifying the Interpreter": [[436, "specifying-the-interpreter"]], "Creating Standalone Applications with zipapp": [[436, "creating-standalone-applications-with-zipapp"]], "Making a Windows executable": [[436, "making-a-windows-executable"]], "Caveats": [[436, "caveats"]], "The Python Zip Application Archive Format": [[436, "the-python-zip-application-archive-format"]], "zipfile \u2014 Work with ZIP archives": [[437, "module-zipfile"]], "ZipFile Objects": [[437, "zipfile-objects"]], "Path Objects": [[437, "path-objects"]], "PyZipFile Objects": [[437, "pyzipfile-objects"]], "ZipInfo Objects": [[437, "zipinfo-objects"]], "Decompression pitfalls": [[437, "decompression-pitfalls"]], "From file itself": [[437, "from-file-itself"]], "File System limitations": [[437, "file-system-limitations"]], "Resources limitations": [[437, "resources-limitations"]], "Interruption": [[437, "interruption"]], "Default behaviors of extraction": [[437, "default-behaviors-of-extraction"]], "zipimport \u2014 Import modules from Zip archives": [[438, "module-zipimport"]], "zipimporter Objects": [[438, "zipimporter-objects"]], "zlib \u2014 Compression compatible with gzip": [[439, "module-zlib"]], "zoneinfo \u2014 IANA time zone support": [[440, "module-zoneinfo"]], "Using ZoneInfo": [[440, "using-zoneinfo"]], "Data sources": [[440, "data-sources"]], "Configuring the data sources": [[440, "configuring-the-data-sources"]], "Compile-time configuration": [[440, "compile-time-configuration"]], "Environment configuration": [[440, "environment-configuration"]], "Runtime configuration": [[440, "runtime-configuration"]], "The ZoneInfo class": [[440, "the-zoneinfo-class"]], "String representations": [[440, "string-representations"]], "Pickle serialization": [[440, "pickle-serialization"]], "Globals": [[440, "globals"]], "Exceptions and warnings": [[440, "exceptions-and-warnings"]], "History and License": [[441, "history-and-license"]], "History of the software": [[441, "history-of-the-software"]], "Terms and conditions for accessing or otherwise using Python": [[441, "terms-and-conditions-for-accessing-or-otherwise-using-python"]], "PSF LICENSE AGREEMENT FOR PYTHON 3.11.9": [[441, "psf-license-agreement-for-python-release"]], "BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0": [[441, "beopen-com-license-agreement-for-python-2-0"]], "CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1": [[441, "cnri-license-agreement-for-python-1-6-1"]], "CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2": [[441, "cwi-license-agreement-for-python-0-9-0-through-1-2"]], "ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON 3.11.9 DOCUMENTATION": [[441, "zero-clause-bsd-license-for-code-in-the-python-release-documentation"]], "Licenses and Acknowledgements for Incorporated Software": [[441, "licenses-and-acknowledgements-for-incorporated-software"]], "Mersenne Twister": [[441, "mersenne-twister"]], "Asynchronous socket services": [[441, "asynchronous-socket-services"]], "Cookie management": [[441, "cookie-management"]], "Execution tracing": [[441, "execution-tracing"]], "UUencode and UUdecode functions": [[441, "uuencode-and-uudecode-functions"]], "XML Remote Procedure Calls": [[441, "xml-remote-procedure-calls"]], "test_epoll": [[441, "test-epoll"]], "Select kqueue": [[441, "select-kqueue"]], "SipHash24": [[441, "siphash24"]], "strtod and dtoa": [[441, "strtod-and-dtoa"]], "OpenSSL": [[441, "openssl"], [488, "openssl"]], "expat": [[441, "expat"]], "libffi": [[441, "libffi"]], "zlib": [[441, "zlib"], [490, "zlib"], [493, "zlib"]], "cfuhash": [[441, "cfuhash"]], "libmpdec": [[441, "libmpdec"]], "W3C C14N test suite": [[441, "w3c-c14n-test-suite"]], "Audioop": [[441, "audioop"]], "asyncio": [[441, "asyncio"], [487, "asyncio"], [488, "asyncio"], [491, "asyncio"], [492, "asyncio"], [493, "asyncio"], [494, "asyncio"], [494, "whatsnew37-asyncio-deprecated"], [495, "asyncio"], [496, "asyncio"]], "Compound statements": [[442, "compound-statements"]], "The if statement": [[442, "the-if-statement"]], "The while statement": [[442, "the-while-statement"]], "The for statement": [[442, "the-for-statement"]], "The try statement": [[442, "the-try-statement"]], "except clause": [[442, "except-clause"]], "except* clause": [[442, "except-star"]], "else clause": [[442, "else-clause"]], "finally clause": [[442, "finally-clause"]], "The with statement": [[442, "the-with-statement"]], "The match statement": [[442, "the-match-statement"]], "Guards": [[442, "guards"]], "Irrefutable Case Blocks": [[442, "irrefutable-case-blocks"]], "Patterns": [[442, "patterns"]], "OR Patterns": [[442, "or-patterns"]], "AS Patterns": [[442, "as-patterns"]], "Literal Patterns": [[442, "literal-patterns"]], "Capture Patterns": [[442, "capture-patterns"]], "Wildcard Patterns": [[442, "wildcard-patterns"]], "Value Patterns": [[442, "value-patterns"]], "Group Patterns": [[442, "group-patterns"]], "Sequence Patterns": [[442, "sequence-patterns"]], "Mapping Patterns": [[442, "mapping-patterns"]], "Class Patterns": [[442, "class-patterns"]], "Function definitions": [[442, "function-definitions"]], "Class definitions": [[442, "class-definitions"]], "Coroutine function definition": [[442, "coroutine-function-definition"]], "The async for statement": [[442, "the-async-for-statement"]], "The async with statement": [[442, "the-async-with-statement"]], "Data model": [[443, "data-model"]], "Objects, values and types": [[443, "objects-values-and-types"]], "The standard type hierarchy": [[443, "the-standard-type-hierarchy"]], "None": [[443, "none"]], "NotImplemented": [[443, "notimplemented"]], "Ellipsis": [[443, "ellipsis"]], "numbers.Number": [[443, "numbers-number"]], "numbers.Integral": [[443, "numbers-integral"]], "numbers.Real (float)": [[443, "numbers-real-float"]], "numbers.Complex (complex)": [[443, "numbers-complex-complex"]], "Sequences": [[443, "sequences"]], "Immutable sequences": [[443, "immutable-sequences"]], "Mutable sequences": [[443, "mutable-sequences"]], "Set types": [[443, "set-types"]], "Mappings": [[443, "mappings"]], "Dictionaries": [[443, "dictionaries"], [457, "dictionaries"]], "Callable types": [[443, "callable-types"]], "User-defined functions": [[443, "user-defined-functions"]], "Special read-only attributes": [[443, "special-read-only-attributes"], [443, "index-58"], [443, "index-64"]], "Special writable attributes": [[443, "special-writable-attributes"], [443, "index-65"]], "Instance methods": [[443, "instance-methods"]], "Generator functions": [[443, "generator-functions"]], "Coroutine functions": [[443, "coroutine-functions"]], "Asynchronous generator functions": [[443, "asynchronous-generator-functions"], [445, "asynchronous-generator-functions"]], "Built-in methods": [[443, "built-in-methods"]], "Class Instances": [[443, "class-instances"]], "Custom classes": [[443, "custom-classes"]], "Class instances": [[443, "id3"]], "I/O objects (also known as file objects)": [[443, "i-o-objects-also-known-as-file-objects"]], "Internal types": [[443, "internal-types"]], "Code objects": [[443, "code-objects"]], "Methods on code objects": [[443, "methods-on-code-objects"]], "Frame objects": [[443, "frame-objects"]], "Frame object methods": [[443, "frame-object-methods"]], "Traceback objects": [[443, "traceback-objects"]], "Slice objects": [[443, "slice-objects"]], "Static method objects": [[443, "static-method-objects"]], "Class method objects": [[443, "class-method-objects"]], "Special method names": [[443, "special-method-names"]], "Basic customization": [[443, "basic-customization"]], "Customizing attribute access": [[443, "customizing-attribute-access"]], "Customizing module attribute access": [[443, "customizing-module-attribute-access"]], "Implementing Descriptors": [[443, "implementing-descriptors"]], "Invoking Descriptors": [[443, "invoking-descriptors"]], "__slots__": [[443, "slots"], [487, "slots"]], "Customizing class creation": [[443, "customizing-class-creation"]], "Metaclasses": [[443, "metaclasses"]], "Resolving MRO entries": [[443, "resolving-mro-entries"]], "Determining the appropriate metaclass": [[443, "determining-the-appropriate-metaclass"]], "Preparing the class namespace": [[443, "preparing-the-class-namespace"]], "Executing the class body": [[443, "executing-the-class-body"]], "Creating the class object": [[443, "creating-the-class-object"]], "Uses for metaclasses": [[443, "uses-for-metaclasses"]], "Customizing instance and subclass checks": [[443, "customizing-instance-and-subclass-checks"]], "Emulating generic types": [[443, "emulating-generic-types"]], "The purpose of __class_getitem__": [[443, "the-purpose-of-class-getitem"]], "__class_getitem__ versus __getitem__": [[443, "class-getitem-versus-getitem"]], "Emulating callable objects": [[443, "emulating-callable-objects"]], "Emulating container types": [[443, "emulating-container-types"]], "Emulating numeric types": [[443, "emulating-numeric-types"]], "With Statement Context Managers": [[443, "with-statement-context-managers"]], "Customizing positional arguments in class pattern matching": [[443, "customizing-positional-arguments-in-class-pattern-matching"]], "Special method lookup": [[443, "special-method-lookup"]], "Awaitable Objects": [[443, "awaitable-objects"]], "Asynchronous Iterators": [[443, "asynchronous-iterators"]], "Asynchronous Context Managers": [[443, "asynchronous-context-managers"]], "Execution model": [[444, "execution-model"]], "Structure of a program": [[444, "structure-of-a-program"]], "Naming and binding": [[444, "naming-and-binding"]], "Binding of names": [[444, "binding-of-names"]], "Resolution of names": [[444, "resolution-of-names"]], "Builtins and restricted execution": [[444, "builtins-and-restricted-execution"]], "Interaction with dynamic features": [[444, "interaction-with-dynamic-features"]], "Arithmetic conversions": [[445, "arithmetic-conversions"]], "Atoms": [[445, "atoms"]], "Identifiers (Names)": [[445, "atom-identifiers"]], "Parenthesized forms": [[445, "parenthesized-forms"]], "Displays for lists, sets and dictionaries": [[445, "displays-for-lists-sets-and-dictionaries"]], "List displays": [[445, "list-displays"]], "Set displays": [[445, "set-displays"]], "Dictionary displays": [[445, "dictionary-displays"]], "Generator expressions": [[445, "generator-expressions"]], "Yield expressions": [[445, "yield-expressions"]], "Generator-iterator methods": [[445, "generator-iterator-methods"]], "Asynchronous generator-iterator methods": [[445, "asynchronous-generator-iterator-methods"]], "Primaries": [[445, "primaries"]], "Attribute references": [[445, "attribute-references"]], "Subscriptions": [[445, "subscriptions"]], "Slicings": [[445, "slicings"]], "Calls": [[445, "calls"]], "Await expression": [[445, "await-expression"]], "The power operator": [[445, "the-power-operator"]], "Unary arithmetic and bitwise operations": [[445, "unary-arithmetic-and-bitwise-operations"]], "Binary arithmetic operations": [[445, "binary-arithmetic-operations"]], "Shifting operations": [[445, "shifting-operations"]], "Binary bitwise operations": [[445, "binary-bitwise-operations"]], "Value comparisons": [[445, "value-comparisons"]], "Membership test operations": [[445, "membership-test-operations"]], "Identity comparisons": [[445, "is-not"]], "Boolean operations": [[445, "boolean-operations"]], "Assignment expressions": [[445, "assignment-expressions"], [495, "assignment-expressions"]], "Conditional expressions": [[445, "conditional-expressions"]], "Lambdas": [[445, "lambda"]], "Expression lists": [[445, "expression-lists"]], "Evaluation order": [[445, "evaluation-order"]], "Operator precedence": [[445, "operator-precedence"]], "Full Grammar specification": [[446, "full-grammar-specification"]], "The import system": [[447, "the-import-system"]], "importlib": [[447, "importlib"], [491, "importlib"], [492, "importlib"], [493, "importlib"], [493, "id3"], [494, "importlib"], [494, "id6"], [496, "importlib"]], "Packages": [[447, "packages"], [465, "packages"]], "Regular packages": [[447, "regular-packages"]], "Namespace packages": [[447, "namespace-packages"]], "Searching": [[447, "searching"]], "The module cache": [[447, "the-module-cache"]], "Finders and loaders": [[447, "finders-and-loaders"]], "Import hooks": [[447, "import-hooks"]], "The meta path": [[447, "the-meta-path"]], "Loading": [[447, "loading"]], "Loaders": [[447, "loaders"]], "Submodules": [[447, "submodules"]], "Module spec": [[447, "module-spec"]], "Import-related module attributes": [[447, "import-related-module-attributes"]], "module.__path__": [[447, "module-path"]], "Module reprs": [[447, "module-reprs"]], "Cached bytecode invalidation": [[447, "cached-bytecode-invalidation"]], "The Path Based Finder": [[447, "the-path-based-finder"]], "Path entry finders": [[447, "path-entry-finders"]], "Path entry finder protocol": [[447, "path-entry-finder-protocol"]], "Replacing the standard import system": [[447, "replacing-the-standard-import-system"]], "Package Relative Imports": [[447, "package-relative-imports"]], "Special considerations for __main__": [[447, "special-considerations-for-main"]], "__main__.__spec__": [[447, "main-spec"]], "The Python Language Reference": [[448, "the-python-language-reference"]], "Alternate Implementations": [[449, "alternate-implementations"]], "Notation": [[449, "notation"]], "Lexical analysis": [[450, "lexical-analysis"]], "Line structure": [[450, "line-structure"]], "Logical lines": [[450, "logical-lines"]], "Physical lines": [[450, "physical-lines"]], "Comments": [[450, "comments"]], "Encoding declarations": [[450, "encoding-declarations"]], "Explicit line joining": [[450, "explicit-line-joining"]], "Implicit line joining": [[450, "implicit-line-joining"]], "Blank lines": [[450, "blank-lines"]], "Indentation": [[450, "indentation"]], "Whitespace between tokens": [[450, "whitespace-between-tokens"]], "Other tokens": [[450, "other-tokens"]], "Identifiers and keywords": [[450, "identifiers"]], "Keywords": [[450, "keywords"]], "Soft Keywords": [[450, "soft-keywords"]], "Reserved classes of identifiers": [[450, "reserved-classes-of-identifiers"]], "String and Bytes literals": [[450, "string-and-bytes-literals"]], "Escape sequences": [[450, "escape-sequences"]], "String literal concatenation": [[450, "string-literal-concatenation"]], "f-strings": [[450, "formatted-string-literals"]], "Numeric literals": [[450, "numeric-literals"]], "Integer literals": [[450, "integer-literals"]], "Floating point literals": [[450, "floating-point-literals"]], "Imaginary literals": [[450, "imaginary-literals"]], "Delimiters": [[450, "delimiters"]], "Simple statements": [[451, "simple-statements"]], "Expression statements": [[451, "expression-statements"]], "Assignment statements": [[451, "assignment-statements"]], "Augmented assignment statements": [[451, "augmented-assignment-statements"]], "Annotated assignment statements": [[451, "annotated-assignment-statements"]], "The assert statement": [[451, "the-assert-statement"]], "The pass statement": [[451, "the-pass-statement"]], "The del statement": [[451, "the-del-statement"], [457, "the-del-statement"]], "The return statement": [[451, "the-return-statement"]], "The yield statement": [[451, "the-yield-statement"]], "The raise statement": [[451, "the-raise-statement"]], "The break statement": [[451, "the-break-statement"]], "The continue statement": [[451, "the-continue-statement"]], "The import statement": [[451, "the-import-statement"]], "Future statements": [[451, "future-statements"]], "The global statement": [[451, "the-global-statement"]], "The nonlocal statement": [[451, "the-nonlocal-statement"]], "Top-level components": [[452, "top-level-components"]], "Complete Python programs": [[452, "complete-python-programs"]], "File input": [[452, "file-input"]], "Interactive input": [[452, "interactive-input"]], "Expression input": [[452, "expression-input"]], "Appendix": [[453, "appendix"]], "Interactive Mode": [[453, "interactive-mode"], [463, "interactive-mode"]], "Error Handling": [[453, "error-handling"]], "Executable Python Scripts": [[453, "executable-python-scripts"]], "The Interactive Startup File": [[453, "the-interactive-startup-file"]], "The Customization Modules": [[453, "the-customization-modules"]], "Whetting Your Appetite": [[454, "whetting-your-appetite"]], "A Word About Names and Objects": [[455, "a-word-about-names-and-objects"]], "Python Scopes and Namespaces": [[455, "python-scopes-and-namespaces"]], "Scopes and Namespaces Example": [[455, "scopes-and-namespaces-example"]], "A First Look at Classes": [[455, "a-first-look-at-classes"]], "Class Definition Syntax": [[455, "class-definition-syntax"]], "Instance Objects": [[455, "instance-objects"]], "Class and Instance Variables": [[455, "class-and-instance-variables"]], "Random Remarks": [[455, "random-remarks"]], "Multiple Inheritance": [[455, "multiple-inheritance"]], "Private Variables": [[455, "private-variables"]], "Generator Expressions": [[455, "generator-expressions"]], "More Control Flow Tools": [[456, "more-control-flow-tools"]], "if Statements": [[456, "if-statements"]], "for Statements": [[456, "for-statements"]], "The range() Function": [[456, "the-range-function"]], "break and continue Statements, and else Clauses on Loops": [[456, "break-and-continue-statements-and-else-clauses-on-loops"]], "pass Statements": [[456, "pass-statements"]], "match Statements": [[456, "match-statements"]], "Defining Functions": [[456, "defining-functions"]], "More on Defining Functions": [[456, "more-on-defining-functions"]], "Default Argument Values": [[456, "default-argument-values"]], "Keyword Arguments": [[456, "keyword-arguments"]], "Special parameters": [[456, "special-parameters"]], "Positional-or-Keyword Arguments": [[456, "positional-or-keyword-arguments"]], "Positional-Only Parameters": [[456, "positional-only-parameters"]], "Keyword-Only Arguments": [[456, "keyword-only-arguments"]], "Function Examples": [[456, "function-examples"]], "Recap": [[456, "recap"]], "Arbitrary Argument Lists": [[456, "arbitrary-argument-lists"]], "Unpacking Argument Lists": [[456, "unpacking-argument-lists"]], "Lambda Expressions": [[456, "lambda-expressions"]], "Documentation Strings": [[456, "documentation-strings"]], "Function Annotations": [[456, "function-annotations"]], "Intermezzo: Coding Style": [[456, "intermezzo-coding-style"]], "Data Structures": [[457, "data-structures"]], "More on Lists": [[457, "more-on-lists"]], "Using Lists as Stacks": [[457, "using-lists-as-stacks"]], "Using Lists as Queues": [[457, "using-lists-as-queues"]], "List Comprehensions": [[457, "list-comprehensions"], [477, "list-comprehensions"]], "Nested List Comprehensions": [[457, "nested-list-comprehensions"]], "Tuples and Sequences": [[457, "tuples-and-sequences"]], "Sets": [[457, "sets"]], "Looping Techniques": [[457, "looping-techniques"]], "More on Conditions": [[457, "more-on-conditions"]], "Comparing Sequences and Other Types": [[457, "comparing-sequences-and-other-types"]], "Errors and Exceptions": [[458, "errors-and-exceptions"]], "Syntax Errors": [[458, "syntax-errors"]], "Raising Exceptions": [[458, "raising-exceptions"]], "Exception Chaining": [[458, "exception-chaining"]], "User-defined Exceptions": [[458, "user-defined-exceptions"]], "Defining Clean-up Actions": [[458, "defining-clean-up-actions"]], "Predefined Clean-up Actions": [[458, "predefined-clean-up-actions"]], "Raising and Handling Multiple Unrelated Exceptions": [[458, "raising-and-handling-multiple-unrelated-exceptions"]], "Enriching Exceptions with Notes": [[458, "enriching-exceptions-with-notes"]], "Floating Point Arithmetic:  Issues and Limitations": [[459, "floating-point-arithmetic-issues-and-limitations"]], "Representation Error": [[459, "representation-error"]], "The Python Tutorial": [[460, "the-python-tutorial"]], "Fancier Output Formatting": [[461, "fancier-output-formatting"]], "Formatted String Literals": [[461, "formatted-string-literals"]], "The String format() Method": [[461, "the-string-format-method"]], "Manual String Formatting": [[461, "manual-string-formatting"]], "Old string formatting": [[461, "old-string-formatting"]], "Reading and Writing Files": [[461, "reading-and-writing-files"]], "Methods of File Objects": [[461, "methods-of-file-objects"]], "Saving structured data with json": [[461, "saving-structured-data-with-json"]], "Interactive Input Editing and History Substitution": [[462, "interactive-input-editing-and-history-substitution"]], "Tab Completion and History Editing": [[462, "tab-completion-and-history-editing"]], "Alternatives to the Interactive Interpreter": [[462, "alternatives-to-the-interactive-interpreter"]], "Using the Python Interpreter": [[463, "using-the-python-interpreter"]], "Invoking the Interpreter": [[463, "invoking-the-interpreter"]], "Argument Passing": [[463, "argument-passing"]], "The Interpreter and Its Environment": [[463, "the-interpreter-and-its-environment"]], "Source Code Encoding": [[463, "source-code-encoding"]], "An Informal Introduction to Python": [[464, "an-informal-introduction-to-python"]], "Using Python as a Calculator": [[464, "using-python-as-a-calculator"]], "Text": [[464, "text"]], "First Steps Towards Programming": [[464, "first-steps-towards-programming"]], "More on Modules": [[465, "more-on-modules"]], "Executing modules as scripts": [[465, "executing-modules-as-scripts"]], "The Module Search Path": [[465, "the-module-search-path"]], "\u201cCompiled\u201d Python files": [[465, "compiled-python-files"]], "Standard Modules": [[465, "standard-modules"]], "The dir() Function": [[465, "the-dir-function"]], "Importing * From a Package": [[465, "importing-from-a-package"]], "Intra-package References": [[465, "intra-package-references"]], "Packages in Multiple Directories": [[465, "packages-in-multiple-directories"]], "Brief Tour of the Standard Library": [[466, "brief-tour-of-the-standard-library"]], "Operating System Interface": [[466, "operating-system-interface"]], "File Wildcards": [[466, "file-wildcards"]], "Command Line Arguments": [[466, "command-line-arguments"]], "Error Output Redirection and Program Termination": [[466, "error-output-redirection-and-program-termination"]], "String Pattern Matching": [[466, "string-pattern-matching"]], "Mathematics": [[466, "mathematics"]], "Internet Access": [[466, "internet-access"]], "Dates and Times": [[466, "dates-and-times"]], "Data Compression": [[466, "data-compression"]], "Performance Measurement": [[466, "performance-measurement"]], "Quality Control": [[466, "quality-control"]], "Batteries Included": [[466, "batteries-included"]], "Brief Tour of the Standard Library \u2014 Part II": [[467, "brief-tour-of-the-standard-library-part-ii"]], "Output Formatting": [[467, "output-formatting"]], "Templating": [[467, "templating"]], "Working with Binary Data Record Layouts": [[467, "working-with-binary-data-record-layouts"]], "Weak References": [[467, "weak-references"]], "Tools for Working with Lists": [[467, "tools-for-working-with-lists"]], "Decimal Floating Point Arithmetic": [[467, "decimal-floating-point-arithmetic"]], "Virtual Environments and Packages": [[468, "virtual-environments-and-packages"]], "Creating Virtual Environments": [[468, "creating-virtual-environments"]], "Managing Packages with pip": [[468, "managing-packages-with-pip"]], "What Now?": [[469, "what-now"]], "Command line and environment": [[470, "command-line-and-environment"]], "Command line": [[470, "command-line"]], "Interface options": [[470, "interface-options"]], "Generic options": [[470, "generic-options"]], "Miscellaneous options": [[470, "miscellaneous-options"]], "Options you shouldn\u2019t use": [[470, "options-you-shouldn-t-use"]], "Environment variables": [[470, "environment-variables"]], "Debug-mode variables": [[470, "debug-mode-variables"]], "Configure Python": [[471, "configure-python"]], "Configure Options": [[471, "configure-options"]], "General Options": [[471, "general-options"]], "WebAssembly Options": [[471, "webassembly-options"]], "Install Options": [[471, "install-options"]], "Performance options": [[471, "performance-options"]], "Python Debug Build": [[471, "python-debug-build"]], "Debug options": [[471, "debug-options"]], "Linker options": [[471, "linker-options"]], "Libraries options": [[471, "libraries-options"]], "Security Options": [[471, "security-options"]], "macOS Options": [[471, "macos-options"]], "Cross Compiling Options": [[471, "cross-compiling-options"]], "Python Build System": [[471, "python-build-system"]], "Main files of the build system": [[471, "main-files-of-the-build-system"]], "Main build steps": [[471, "main-build-steps"]], "Main Makefile targets": [[471, "main-makefile-targets"]], "C extensions": [[471, "c-extensions"]], "Compiler and linker flags": [[471, "compiler-and-linker-flags"]], "Preprocessor flags": [[471, "preprocessor-flags"]], "Compiler flags": [[471, "compiler-flags"]], "Linker flags": [[471, "linker-flags"]], "Editors and IDEs": [[472, "editors-and-ides"]], "Python Setup and Usage": [[473, "python-setup-and-usage"]], "Using Python on a Mac": [[474, "using-python-on-a-mac"]], "Getting and Installing Python": [[474, "getting-and-installing-python"]], "How to run a Python script": [[474, "how-to-run-a-python-script"]], "Running scripts with a GUI": [[474, "running-scripts-with-a-gui"]], "Configuration": [[474, "configuration"]], "The IDE": [[474, "the-ide"]], "Installing Additional Python Packages": [[474, "installing-additional-python-packages"]], "GUI Programming": [[474, "gui-programming"]], "Distributing Python Applications": [[474, "distributing-python-applications"]], "Other Resources": [[474, "other-resources"]], "Using Python on Unix platforms": [[475, "using-python-on-unix-platforms"]], "Getting and installing the latest version of Python": [[475, "getting-and-installing-the-latest-version-of-python"]], "On Linux": [[475, "on-linux"]], "On FreeBSD and OpenBSD": [[475, "on-freebsd-and-openbsd"]], "On OpenSolaris": [[475, "on-opensolaris"]], "Building Python": [[475, "building-python"]], "Python-related paths and files": [[475, "python-related-paths-and-files"]], "Custom OpenSSL": [[475, "custom-openssl"]], "Using Python on Windows": [[476, "using-python-on-windows"]], "The full installer": [[476, "the-full-installer"]], "Installation steps": [[476, "installation-steps"]], "Removing the MAX_PATH Limitation": [[476, "removing-the-max-path-limitation"]], "Installing Without UI": [[476, "installing-without-ui"]], "Installing Without Downloading": [[476, "installing-without-downloading"]], "Modifying an install": [[476, "modifying-an-install"]], "The Microsoft Store package": [[476, "the-microsoft-store-package"]], "Known issues": [[476, "known-issues"]], "Redirection of local data, registry, and temporary paths": [[476, "redirection-of-local-data-registry-and-temporary-paths"]], "The nuget.org packages": [[476, "the-nuget-org-packages"]], "The embeddable package": [[476, "the-embeddable-package"]], "Python Application": [[476, "python-application"]], "Alternative bundles": [[476, "alternative-bundles"]], "Configuring Python": [[476, "configuring-python"]], "Excursus: Setting environment variables": [[476, "excursus-setting-environment-variables"]], "Finding the Python executable": [[476, "finding-the-python-executable"]], "UTF-8 mode": [[476, "utf-8-mode"]], "Python Launcher for Windows": [[476, "python-launcher-for-windows"]], "Getting started": [[476, "getting-started"]], "From the command-line": [[476, "from-the-command-line"]], "From a script": [[476, "from-a-script"]], "From file associations": [[476, "from-file-associations"]], "Shebang Lines": [[476, "shebang-lines"]], "Arguments in shebang lines": [[476, "arguments-in-shebang-lines"]], "Customization": [[476, "customization"]], "Customization via INI files": [[476, "customization-via-ini-files"]], "Customizing default Python versions": [[476, "customizing-default-python-versions"]], "Diagnostics": [[476, "diagnostics"]], "Dry Run": [[476, "dry-run"]], "Install on demand": [[476, "install-on-demand"]], "Return codes": [[476, "return-codes"]], "Finding modules": [[476, "finding-modules"]], "Additional modules": [[476, "additional-modules"]], "PyWin32": [[476, "pywin32"]], "cx_Freeze": [[476, "cx-freeze"]], "Compiling Python on Windows": [[476, "compiling-python-on-windows"]], "Other Platforms": [[476, "other-platforms"]], "What\u2019s New in Python 2.0": [[477, "what-s-new-in-python-2-0"]], "What About Python 1.6?": [[477, "what-about-python-1-6"]], "New Development Process": [[477, "new-development-process"]], "Unicode": [[477, "unicode"], [489, "unicode"]], "Augmented Assignment": [[477, "augmented-assignment"]], "Garbage Collection of Cycles": [[477, "garbage-collection-of-cycles"]], "Other Core Changes": [[477, "other-core-changes"]], "Minor Language Changes": [[477, "minor-language-changes"]], "Changes to Built-in Functions": [[477, "changes-to-built-in-functions"]], "Porting to 2.0": [[477, "porting-to-2-0"]], "Extending/Embedding Changes": [[477, "extending-embedding-changes"]], "Distutils: Making Modules Easy to Install": [[477, "distutils-making-modules-easy-to-install"]], "XML Modules": [[477, "xml-modules"]], "SAX2 Support": [[477, "sax2-support"]], "DOM Support": [[477, "dom-support"]], "Relationship to PyXML": [[477, "relationship-to-pyxml"]], "Module changes": [[477, "module-changes"]], "New modules": [[477, "new-modules"]], "IDLE Improvements": [[477, "idle-improvements"]], "Deleted and Deprecated Modules": [[477, "deleted-and-deprecated-modules"]], "What\u2019s New in Python 2.1": [[478, "what-s-new-in-python-2-1"]], "PEP 227: Nested Scopes": [[478, "pep-227-nested-scopes"], [479, "pep-227-nested-scopes"]], "PEP 236: __future__ Directives": [[478, "pep-236-future-directives"]], "PEP 207: Rich Comparisons": [[478, "pep-207-rich-comparisons"]], "PEP 230: Warning Framework": [[478, "pep-230-warning-framework"]], "PEP 229: New Build System": [[478, "pep-229-new-build-system"]], "PEP 205: Weak References": [[478, "pep-205-weak-references"]], "PEP 232: Function Attributes": [[478, "pep-232-function-attributes"]], "PEP 235: Importing Modules on Case-Insensitive Platforms": [[478, "pep-235-importing-modules-on-case-insensitive-platforms"]], "PEP 217: Interactive Display Hook": [[478, "pep-217-interactive-display-hook"]], "PEP 208: New Coercion Model": [[478, "pep-208-new-coercion-model"]], "PEP 241: Metadata in Python Packages": [[478, "pep-241-metadata-in-python-packages"]], "New and Improved Modules": [[478, "new-and-improved-modules"], [479, "new-and-improved-modules"], [483, "new-and-improved-modules"], [484, "new-and-improved-modules"]], "Other Changes and Fixes": [[478, "other-changes-and-fixes"], [479, "other-changes-and-fixes"], [480, "other-changes-and-fixes"], [484, "other-changes-and-fixes"]], "What\u2019s New in Python 2.2": [[479, "what-s-new-in-python-2-2"]], "PEPs 252 and 253: Type and Class Changes": [[479, "peps-252-and-253-type-and-class-changes"]], "Old and New Classes": [[479, "old-and-new-classes"]], "Descriptors": [[479, "descriptors"]], "Multiple Inheritance: The Diamond Rule": [[479, "multiple-inheritance-the-diamond-rule"]], "Attribute Access": [[479, "attribute-access"]], "Related Links": [[479, "related-links"]], "PEP 234: Iterators": [[479, "pep-234-iterators"]], "PEP 255: Simple Generators": [[479, "pep-255-simple-generators"], [480, "pep-255-simple-generators"]], "PEP 237: Unifying Long Integers and Integers": [[479, "pep-237-unifying-long-integers-and-integers"], [481, "pep-237-unifying-long-integers-and-integers"]], "PEP 238: Changing the Division Operator": [[479, "pep-238-changing-the-division-operator"]], "Unicode Changes": [[479, "unicode-changes"]], "Interpreter Changes and Fixes": [[479, "interpreter-changes-and-fixes"]], "What\u2019s New in Python 2.3": [[480, "what-s-new-in-python-2-3"]], "PEP 218: A Standard Set Datatype": [[480, "pep-218-a-standard-set-datatype"]], "PEP 263: Source Code Encodings": [[480, "pep-263-source-code-encodings"]], "PEP 273: Importing Modules from ZIP Archives": [[480, "pep-273-importing-modules-from-zip-archives"]], "PEP 277: Unicode file name support for Windows NT": [[480, "pep-277-unicode-file-name-support-for-windows-nt"]], "PEP 278: Universal Newline Support": [[480, "pep-278-universal-newline-support"]], "PEP 279: enumerate()": [[480, "pep-279-enumerate"]], "PEP 282: The logging Package": [[480, "pep-282-the-logging-package"]], "PEP 285: A Boolean Type": [[480, "pep-285-a-boolean-type"]], "PEP 293: Codec Error Handling Callbacks": [[480, "pep-293-codec-error-handling-callbacks"]], "PEP 301: Package Index and Metadata for Distutils": [[480, "pep-301-package-index-and-metadata-for-distutils"]], "PEP 302: New Import Hooks": [[480, "pep-302-new-import-hooks"]], "PEP 305: Comma-separated Files": [[480, "pep-305-comma-separated-files"]], "PEP 307: Pickle Enhancements": [[480, "pep-307-pickle-enhancements"]], "Extended Slices": [[480, "extended-slices"]], "Other Language Changes": [[480, "other-language-changes"], [481, "other-language-changes"], [482, "other-language-changes"], [483, "other-language-changes"], [484, "other-language-changes"], [486, "other-language-changes"], [487, "other-language-changes"], [488, "other-language-changes"], [489, "other-language-changes"], [490, "other-language-changes"], [491, "other-language-changes"], [492, "other-language-changes"], [493, "other-language-changes"], [494, "other-language-changes"], [495, "other-language-changes"], [496, "other-language-changes"]], "String Changes": [[480, "string-changes"]], "Optimizations": [[480, "optimizations"], [481, "optimizations"], [482, "optimizations"], [483, "optimizations"], [484, "optimizations"], [486, "optimizations"], [487, "optimizations"], [488, "optimizations"], [489, "optimizations"], [490, "optimizations"], [492, "optimizations"], [493, "optimizations"], [494, "optimizations"], [495, "optimizations"], [496, "optimizations"]], "New, Improved, and Deprecated Modules": [[480, "new-improved-and-deprecated-modules"], [481, "new-improved-and-deprecated-modules"], [486, "new-improved-and-deprecated-modules"], [489, "new-improved-and-deprecated-modules"]], "Date/Time Type": [[480, "date-time-type"]], "The optparse Module": [[480, "the-optparse-module"]], "Pymalloc: A Specialized Object Allocator": [[480, "pymalloc-a-specialized-object-allocator"]], "Build and C API Changes": [[480, "build-and-c-api-changes"], [481, "build-and-c-api-changes"], [482, "build-and-c-api-changes"], [483, "build-and-c-api-changes"], [484, "build-and-c-api-changes"], [485, "build-and-c-api-changes"], [486, "build-and-c-api-changes"], [489, "build-and-c-api-changes"], [490, "build-and-c-api-changes"], [492, "build-and-c-api-changes"], [493, "build-and-c-api-changes"], [495, "build-and-c-api-changes"]], "Port-Specific Changes": [[480, "port-specific-changes"], [481, "port-specific-changes"], [482, "port-specific-changes"]], "Porting to Python 2.3": [[480, "porting-to-python-2-3"]], "What\u2019s New in Python 2.4": [[481, "what-s-new-in-python-2-4"]], "PEP 218: Built-In Set Objects": [[481, "pep-218-built-in-set-objects"]], "PEP 289: Generator Expressions": [[481, "pep-289-generator-expressions"]], "PEP 292: Simpler String Substitutions": [[481, "pep-292-simpler-string-substitutions"]], "PEP 318: Decorators for Functions and Methods": [[481, "pep-318-decorators-for-functions-and-methods"]], "PEP 322: Reverse Iteration": [[481, "pep-322-reverse-iteration"]], "PEP 324: New subprocess Module": [[481, "pep-324-new-subprocess-module"]], "PEP 327: Decimal Data Type": [[481, "pep-327-decimal-data-type"]], "Why is Decimal needed?": [[481, "why-is-decimal-needed"]], "The Decimal type": [[481, "the-decimal-type"]], "The Context type": [[481, "the-context-type"]], "PEP 328: Multi-line Imports": [[481, "pep-328-multi-line-imports"]], "PEP 331: Locale-Independent Float/String Conversions": [[481, "pep-331-locale-independent-float-string-conversions"]], "cookielib": [[481, "cookielib"]], "doctest": [[481, "doctest"], [487, "doctest"], [491, "doctest"], [492, "doctest"]], "Porting to Python 2.4": [[481, "porting-to-python-2-4"]], "What\u2019s New in Python 2.5": [[482, "what-s-new-in-python-2-5"]], "PEP 308: Conditional Expressions": [[482, "pep-308-conditional-expressions"]], "PEP 309: Partial Function Application": [[482, "pep-309-partial-function-application"]], "PEP 314: Metadata for Python Software Packages v1.1": [[482, "pep-314-metadata-for-python-software-packages-v1-1"]], "PEP 328: Absolute and Relative Imports": [[482, "pep-328-absolute-and-relative-imports"]], "PEP 338: Executing Modules as Scripts": [[482, "pep-338-executing-modules-as-scripts"]], "PEP 341: Unified try/except/finally": [[482, "pep-341-unified-try-except-finally"]], "PEP 342: New Generator Features": [[482, "pep-342-new-generator-features"]], "PEP 343: The \u2018with\u2019 statement": [[482, "pep-343-the-with-statement"], [483, "pep-343-the-with-statement"]], "Writing Context Managers": [[482, "writing-context-managers"], [483, "writing-context-managers"]], "The contextlib module": [[482, "the-contextlib-module"], [483, "the-contextlib-module"]], "PEP 352: Exceptions as New-Style Classes": [[482, "pep-352-exceptions-as-new-style-classes"]], "PEP 353: Using ssize_t as the index type": [[482, "pep-353-using-ssize-t-as-the-index-type"]], "PEP 357: The \u2018__index__\u2019 method": [[482, "pep-357-the-index-method"]], "Interactive Interpreter Changes": [[482, "interactive-interpreter-changes"]], "New, Improved, and Removed Modules": [[482, "new-improved-and-removed-modules"]], "The ctypes package": [[482, "the-ctypes-package"]], "The ElementTree package": [[482, "the-elementtree-package"]], "The hashlib package": [[482, "the-hashlib-package"]], "The sqlite3 package": [[482, "the-sqlite3-package"]], "The wsgiref package": [[482, "the-wsgiref-package"]], "Porting to Python 2.5": [[482, "porting-to-python-2-5"]], "What\u2019s New in Python 2.6": [[483, "what-s-new-in-python-2-6"]], "Python 3.0": [[483, "python-3-0"]], "Changes to the Development Process": [[483, "changes-to-the-development-process"]], "New Issue Tracker: Roundup": [[483, "new-issue-tracker-roundup"]], "New Documentation Format: reStructuredText Using Sphinx": [[483, "new-documentation-format-restructuredtext-using-sphinx"]], "PEP 366: Explicit Relative Imports From a Main Module": [[483, "pep-366-explicit-relative-imports-from-a-main-module"]], "PEP 370: Per-user site-packages Directory": [[483, "pep-370-per-user-site-packages-directory"]], "PEP 371: The multiprocessing Package": [[483, "pep-371-the-multiprocessing-package"]], "PEP 3101: Advanced String Formatting": [[483, "pep-3101-advanced-string-formatting"]], "PEP 3105: print As a Function": [[483, "pep-3105-print-as-a-function"]], "PEP 3110: Exception-Handling Changes": [[483, "pep-3110-exception-handling-changes"]], "PEP 3112: Byte Literals": [[483, "pep-3112-byte-literals"]], "PEP 3116: New I/O Library": [[483, "pep-3116-new-i-o-library"]], "PEP 3118: Revised Buffer Protocol": [[483, "pep-3118-revised-buffer-protocol"]], "PEP 3119: Abstract Base Classes": [[483, "pep-3119-abstract-base-classes"]], "PEP 3127: Integer Literal Support and Syntax": [[483, "pep-3127-integer-literal-support-and-syntax"]], "PEP 3129: Class Decorators": [[483, "pep-3129-class-decorators"]], "PEP 3141: A Type Hierarchy for Numbers": [[483, "pep-3141-a-type-hierarchy-for-numbers"]], "The fractions Module": [[483, "the-fractions-module"]], "Interpreter Changes": [[483, "interpreter-changes"], [484, "interpreter-changes"]], "The ast module": [[483, "the-ast-module"]], "The future_builtins module": [[483, "the-future-builtins-module"]], "The json module: JavaScript Object Notation": [[483, "the-json-module-javascript-object-notation"]], "The plistlib module: A Property-List Parser": [[483, "the-plistlib-module-a-property-list-parser"]], "ctypes Enhancements": [[483, "ctypes-enhancements"]], "Improved SSL Support": [[483, "improved-ssl-support"]], "Deprecations and Removals": [[483, "deprecations-and-removals"]], "Port-Specific Changes: Windows": [[483, "port-specific-changes-windows"], [484, "port-specific-changes-windows"]], "Port-Specific Changes: Mac OS X": [[483, "port-specific-changes-mac-os-x"], [484, "port-specific-changes-mac-os-x"]], "Port-Specific Changes: IRIX": [[483, "port-specific-changes-irix"]], "Porting to Python 2.6": [[483, "porting-to-python-2-6"]], "What\u2019s New in Python 2.7": [[484, "what-s-new-in-python-2-7"]], "The Future for Python 2.x": [[484, "the-future-for-python-2-x"]], "Changes to the Handling of Deprecation Warnings": [[484, "changes-to-the-handling-of-deprecation-warnings"]], "Python 3.1 Features": [[484, "python-3-1-features"]], "PEP 372: Adding an Ordered Dictionary to collections": [[484, "pep-372-adding-an-ordered-dictionary-to-collections"]], "PEP 378: Format Specifier for Thousands Separator": [[484, "pep-378-format-specifier-for-thousands-separator"], [486, "pep-378-format-specifier-for-thousands-separator"]], "PEP 389: The argparse Module for Parsing Command Lines": [[484, "pep-389-the-argparse-module-for-parsing-command-lines"]], "PEP 391: Dictionary-Based Configuration For Logging": [[484, "pep-391-dictionary-based-configuration-for-logging"]], "PEP 3106: Dictionary Views": [[484, "pep-3106-dictionary-views"]], "PEP 3137: The memoryview Object": [[484, "pep-3137-the-memoryview-object"]], "New module: importlib": [[484, "new-module-importlib"]], "New module: sysconfig": [[484, "new-module-sysconfig"]], "ttk: Themed Widgets for Tk": [[484, "ttk-themed-widgets-for-tk"]], "Updated module: unittest": [[484, "updated-module-unittest"]], "Updated module: ElementTree 1.3": [[484, "updated-module-elementtree-1-3"]], "Port-Specific Changes: FreeBSD": [[484, "port-specific-changes-freebsd"]], "Porting to Python 2.7": [[484, "porting-to-python-2-7"]], "New Features Added to Python 2.7 Maintenance Releases": [[484, "new-features-added-to-python-2-7-maintenance-releases"]], "Two new environment variables for debug mode": [[484, "two-new-environment-variables-for-debug-mode"]], "PEP 434: IDLE Enhancement Exception for All Branches": [[484, "pep-434-idle-enhancement-exception-for-all-branches"]], "PEP 466: Network Security Enhancements for Python 2.7": [[484, "pep-466-network-security-enhancements-for-python-2-7"]], "PEP 477: Backport ensurepip (PEP 453) to Python 2.7": [[484, "pep-477-backport-ensurepip-pep-453-to-python-2-7"]], "Bootstrapping pip By Default": [[484, "bootstrapping-pip-by-default"], [491, "bootstrapping-pip-by-default"]], "Documentation Changes": [[484, "documentation-changes"], [491, "documentation-changes"]], "PEP 476: Enabling certificate verification by default for stdlib http clients": [[484, "pep-476-enabling-certificate-verification-by-default-for-stdlib-http-clients"], [491, "pep-476-enabling-certificate-verification-by-default-for-stdlib-http-clients"]], "PEP 493: HTTPS verification migration tools for Python 2.7": [[484, "pep-493-https-verification-migration-tools-for-python-2-7"]], "New make regen-all build target": [[484, "new-make-regen-all-build-target"], [492, "new-make-regen-all-build-target"], [493, "new-make-regen-all-build-target"]], "Removal of make touch build target": [[484, "removal-of-make-touch-build-target"], [492, "removal-of-make-touch-build-target"], [493, "removal-of-make-touch-build-target"]], "What\u2019s New In Python 3.0": [[485, "what-s-new-in-python-3-0"]], "Common Stumbling Blocks": [[485, "common-stumbling-blocks"]], "Print Is A Function": [[485, "print-is-a-function"]], "Views And Iterators Instead Of Lists": [[485, "views-and-iterators-instead-of-lists"]], "Ordering Comparisons": [[485, "ordering-comparisons"]], "Integers": [[485, "integers"]], "Text Vs. Data Instead Of Unicode Vs. 8-bit": [[485, "text-vs-data-instead-of-unicode-vs-8-bit"]], "Overview Of Syntax Changes": [[485, "overview-of-syntax-changes"]], "New Syntax": [[485, "new-syntax"]], "Changed Syntax": [[485, "changed-syntax"]], "Removed Syntax": [[485, "removed-syntax"]], "Changes Already Present In Python 2.6": [[485, "changes-already-present-in-python-2-6"]], "Library Changes": [[485, "library-changes"]], "PEP 3101: A New Approach To String Formatting": [[485, "pep-3101-a-new-approach-to-string-formatting"]], "Changes To Exceptions": [[485, "changes-to-exceptions"]], "Miscellaneous Other Changes": [[485, "miscellaneous-other-changes"]], "Operators And Special Methods": [[485, "operators-and-special-methods"]], "Builtins": [[485, "builtins"]], "Porting To Python 3.0": [[485, "porting-to-python-3-0"]], "What\u2019s New In Python 3.1": [[486, "what-s-new-in-python-3-1"]], "PEP 372: Ordered Dictionaries": [[486, "pep-372-ordered-dictionaries"]], "Porting to Python 3.1": [[486, "porting-to-python-3-1"]], "What\u2019s New In Python 3.10": [[487, "what-s-new-in-python-3-10"]], "Summary \u2013 Release highlights": [[487, "summary-release-highlights"], [488, "summary-release-highlights"], [490, "summary-release-highlights"], [492, "summary-release-highlights"], [493, "summary-release-highlights"], [495, "summary-release-highlights"], [496, "summary-release-highlights"]], "New Features": [[487, "new-features"], [487, "id1"], [488, "new-features"], [488, "whatsnew311-c-api-new-features"], [491, "new-features"], [492, "new-features"], [493, "new-features"], [494, "new-features"], [495, "new-features"], [496, "new-features"], [496, "id1"]], "Parenthesized context managers": [[487, "parenthesized-context-managers"]], "Better error messages": [[487, "better-error-messages"]], "SyntaxErrors": [[487, "syntaxerrors"]], "IndentationErrors": [[487, "indentationerrors"]], "AttributeErrors": [[487, "attributeerrors"]], "NameErrors": [[487, "nameerrors"]], "PEP 626: Precise line numbers for debugging and other tools": [[487, "pep-626-precise-line-numbers-for-debugging-and-other-tools"]], "PEP 634: Structural Pattern Matching": [[487, "pep-634-structural-pattern-matching"]], "Syntax and operations": [[487, "syntax-and-operations"]], "Declarative approach": [[487, "declarative-approach"]], "Simple pattern: match to a literal": [[487, "simple-pattern-match-to-a-literal"]], "Behavior without the wildcard": [[487, "behavior-without-the-wildcard"]], "Patterns with a literal and variable": [[487, "patterns-with-a-literal-and-variable"]], "Patterns and classes": [[487, "patterns-and-classes"]], "Patterns with positional parameters": [[487, "patterns-with-positional-parameters"]], "Nested patterns": [[487, "nested-patterns"]], "Complex patterns and the wildcard": [[487, "complex-patterns-and-the-wildcard"]], "Guard": [[487, "guard"]], "Other Key Features": [[487, "other-key-features"]], "Optional EncodingWarning and encoding=\"locale\" option": [[487, "optional-encodingwarning-and-encoding-locale-option"]], "New Features Related to Type Hints": [[487, "new-features-related-to-type-hints"], [488, "new-features-related-to-type-hints"]], "PEP 604: New Type Union Operator": [[487, "pep-604-new-type-union-operator"]], "PEP 612: Parameter Specification Variables": [[487, "pep-612-parameter-specification-variables"]], "PEP 613: TypeAlias": [[487, "pep-613-typealias"]], "PEP 647: User-Defined Type Guards": [[487, "pep-647-user-defined-type-guards"]], "New Modules": [[487, "new-modules"], [488, "new-modules"], [490, "new-modules"], [491, "new-modules"], [492, "new-modules"], [493, "new-modules"], [494, "new-modules"], [495, "new-modules"], [496, "new-modules"]], "Improved Modules": [[487, "improved-modules"], [488, "improved-modules"], [490, "improved-modules"], [491, "improved-modules"], [492, "improved-modules"], [493, "improved-modules"], [494, "improved-modules"], [495, "improved-modules"], [496, "improved-modules"]], "argparse": [[487, "argparse"], [491, "argparse"], [492, "argparse"], [494, "argparse"]], "array": [[487, "array"], [490, "array"], [493, "array"]], "asynchat, asyncore, smtpd": [[487, "asynchat-asyncore-smtpd"]], "base64": [[487, "base64"], [490, "base64"], [491, "base64"]], "bdb": [[487, "bdb"]], "bisect": [[487, "bisect"]], "codecs": [[487, "codecs"], [490, "codecs"]], "collections.abc": [[487, "collections-abc"], [492, "collections-abc"], [496, "collections-abc"]], "contextlib": [[487, "contextlib"], [488, "contextlib"], [489, "contextlib"], [490, "contextlib"], [491, "contextlib"], [492, "contextlib"], [493, "contextlib"], [494, "contextlib"]], "curses": [[487, "curses"], [490, "curses"], [492, "curses"], [495, "curses"], [496, "curses"]], "dataclasses": [[487, "dataclasses"], [488, "dataclasses"], [494, "dataclasses"]], "Keyword-only fields": [[487, "keyword-only-fields"]], "distutils": [[487, "distutils"], [492, "distutils"], [493, "distutils"], [493, "id2"], [494, "distutils"], [496, "distutils"]], "encodings": [[487, "encodings"], [493, "encodings"]], "enum": [[487, "enum"], [488, "enum"], [491, "enum"], [492, "enum"], [493, "enum"], [494, "enum"], [494, "id5"]], "fileinput": [[487, "fileinput"], [493, "fileinput"]], "faulthandler": [[487, "faulthandler"], [490, "faulthandler"], [492, "faulthandler"], [493, "faulthandler"]], "gc": [[487, "gc"], [490, "gc"], [491, "gc"], [494, "gc"], [495, "gc"], [496, "gc"]], "glob": [[487, "glob"], [491, "glob"], [492, "glob"]], "hashlib": [[487, "hashlib"], [488, "hashlib"], [489, "hashlib"], [491, "hashlib"], [493, "hashlib"], [496, "hashlib"]], "hmac": [[487, "hmac"], [490, "hmac"], [491, "hmac"], [494, "hmac"]], "IDLE and idlelib": [[487, "idle-and-idlelib"], [488, "whatsnew311-idle"], [495, "idle-and-idlelib"], [496, "idle-and-idlelib"]], "importlib.metadata": [[487, "importlib-metadata"]], "inspect": [[487, "inspect"], [488, "inspect"], [489, "inspect"], [490, "inspect"], [491, "inspect"], [492, "inspect"], [493, "inspect"], [495, "inspect"], [496, "inspect"]], "itertools": [[487, "itertools"], [489, "itertools"], [490, "itertools"], [494, "itertools"], [495, "itertools"]], "linecache": [[487, "linecache"], [492, "linecache"]], "os": [[487, "os"], [488, "os"], [489, "os"], [490, "os"], [491, "os"], [492, "os"], [493, "os"], [493, "id4"], [494, "os"], [495, "os"], [496, "os"]], "os.path": [[487, "os-path"], [495, "os-path"]], "pathlib": [[487, "pathlib"], [488, "pathlib"], [491, "pathlib"], [492, "pathlib"], [493, "pathlib"], [494, "pathlib"], [495, "pathlib"], [496, "pathlib"]], "platform": [[487, "platform"]], "pprint": [[487, "pprint"], [491, "pprint"], [495, "pprint"], [496, "pprint"]], "py_compile": [[487, "py-compile"], [494, "py-compile"], [495, "py-compile"]], "pyclbr": [[487, "pyclbr"]], "shelve": [[487, "shelve"], [491, "shelve"]], "statistics": [[487, "statistics"], [491, "statistics"], [493, "statistics"], [495, "statistics"]], "site": [[487, "site"], [489, "site"], [493, "site"]], "socket": [[487, "socket"], [488, "socket"], [489, "socket"], [490, "socket"], [491, "socket"], [492, "socket"], [493, "socket"], [494, "socket"], [494, "id8"], [495, "socket"], [496, "socket"]], "ssl": [[487, "ssl"], [489, "ssl"], [490, "ssl"], [491, "ssl"], [492, "ssl"], [493, "ssl"], [493, "id6"], [494, "ssl"], [494, "id9"], [495, "ssl"]], "sqlite3": [[487, "sqlite3"], [488, "sqlite3"], [489, "sqlite3"], [490, "sqlite3"], [491, "sqlite3"], [492, "sqlite3"], [493, "sqlite3"], [494, "sqlite3"]], "sys": [[487, "sys"], [488, "sys"], [490, "sys"], [491, "sys"], [492, "sys"], [493, "sys"], [494, "sys"], [494, "id10"], [495, "sys"], [496, "sys"]], "_thread": [[487, "thread"]], "threading": [[487, "threading"], [488, "threading"], [489, "threading"], [490, "threading"], [491, "threading"], [492, "threading"], [494, "threading"], [495, "threading"]], "traceback": [[487, "traceback"], [488, "traceback"], [491, "traceback"], [492, "traceback"], [493, "traceback"]], "types": [[487, "types"], [490, "types"], [491, "types"], [492, "types"], [494, "types"]], "typing": [[487, "typing"], [488, "typing"], [492, "typing"], [493, "typing"], [495, "typing"], [496, "typing"], [496, "id4"]], "unittest": [[487, "unittest"], [488, "unittest"], [489, "unittest"], [490, "unittest"], [491, "unittest"], [492, "unittest"], [494, "unittest"], [495, "unittest"]], "urllib.parse": [[487, "urllib-parse"], [489, "urllib-parse"], [494, "urllib-parse"], [495, "urllib-parse"], [496, "urllib-parse"], [496, "id5"]], "xml": [[487, "xml"], [493, "xml"], [494, "xml"], [495, "xml"], [496, "xml"]], "zipimport": [[487, "zipimport"]], "Deprecated": [[487, "deprecated"], [487, "id3"], [488, "deprecated"], [488, "whatsnew311-c-api-deprecated"], [490, "deprecated"], [491, "deprecated"], [492, "deprecated"], [493, "deprecated"], [495, "deprecated"], [496, "deprecated"]], "Removed": [[487, "removed"], [487, "id4"], [488, "removed"], [488, "whatsnew311-c-api-removed"], [491, "removed"], [492, "removed"], [493, "removed"], [496, "removed"], [496, "id3"]], "Porting to Python 3.10": [[487, "porting-to-python-3-10"], [487, "id2"]], "Changes in the Python syntax": [[487, "changes-in-the-python-syntax"]], "Changes in the Python API": [[487, "changes-in-the-python-api"], [491, "changes-in-the-python-api"], [492, "changes-in-the-python-api"], [493, "changes-in-the-python-api"], [494, "changes-in-the-python-api"], [495, "changes-in-the-python-api"], [495, "id2"], [496, "changes-in-the-python-api"]], "Changes in the C API": [[487, "changes-in-the-c-api"], [491, "changes-in-the-c-api"], [492, "changes-in-the-c-api"], [493, "changes-in-the-c-api"], [494, "changes-in-the-c-api"], [495, "changes-in-the-c-api"], [496, "changes-in-the-c-api"]], "CPython bytecode changes": [[487, "cpython-bytecode-changes"], [488, "cpython-bytecode-changes"], [493, "cpython-bytecode-changes"], [494, "cpython-bytecode-changes"], [495, "cpython-bytecode-changes"], [496, "cpython-bytecode-changes"]], "Build Changes": [[487, "build-changes"], [488, "build-changes"], [494, "build-changes"], [496, "build-changes"]], "C API Changes": [[487, "c-api-changes"], [488, "c-api-changes"], [494, "c-api-changes"], [496, "c-api-changes"]], "PEP 652: Maintaining the Stable ABI": [[487, "pep-652-maintaining-the-stable-abi"]], "Notable security feature in 3.10.7": [[487, "notable-security-feature-in-3-10-7"]], "Notable security feature in 3.10.8": [[487, "notable-security-feature-in-3-10-8"]], "Notable changes in 3.10.12": [[487, "notable-changes-in-3-10-12"]], "tarfile": [[487, "tarfile"], [488, "tarfile"], [489, "tarfile"], [490, "tarfile"], [491, "tarfile"], [492, "tarfile"], [495, "tarfile"], [495, "id3"], [496, "tarfile"]], "What\u2019s New In Python 3.11": [[488, "what-s-new-in-python-3-11"]], "PEP 657: Fine-grained error locations in tracebacks": [[488, "pep-657-fine-grained-error-locations-in-tracebacks"]], "PEP 654: Exception Groups and except*": [[488, "pep-654-exception-groups-and-except"]], "PEP 678: Exceptions can be enriched with notes": [[488, "pep-678-exceptions-can-be-enriched-with-notes"]], "Windows py.exe launcher improvements": [[488, "windows-py-exe-launcher-improvements"]], "PEP 646: Variadic generics": [[488, "pep-646-variadic-generics"]], "PEP 655: Marking individual TypedDict items as required or not-required": [[488, "pep-655-marking-individual-typeddict-items-as-required-or-not-required"]], "PEP 673: Self type": [[488, "pep-673-self-type"]], "PEP 675: Arbitrary literal string type": [[488, "pep-675-arbitrary-literal-string-type"]], "PEP 681: Data class transforms": [[488, "pep-681-data-class-transforms"]], "PEP 563 may not be the future": [[488, "pep-563-may-not-be-the-future"]], "Other CPython Implementation Changes": [[488, "other-cpython-implementation-changes"], [494, "other-cpython-implementation-changes"]], "datetime": [[488, "datetime"], [490, "datetime"], [493, "datetime"], [494, "datetime"], [495, "datetime"], [496, "datetime"]], "fcntl": [[488, "fcntl"], [496, "fcntl"]], "fractions": [[488, "fractions"]], "functools": [[488, "functools"], [489, "functools"], [490, "functools"], [491, "functools"], [492, "functools"], [494, "functools"], [495, "functools"]], "locale": [[488, "locale"], [492, "locale"], [494, "locale"], [494, "id7"]], "logging": [[488, "logging"], [489, "logging"], [490, "logging"], [491, "logging"], [492, "logging"], [493, "logging"], [494, "logging"], [495, "logging"]], "math": [[488, "math"], [489, "math"], [490, "math"], [492, "math"], [493, "math"], [494, "math"], [495, "math"], [496, "math"]], "operator": [[488, "operator"], [491, "operator"], [492, "operator"]], "re": [[488, "re"], [490, "re"], [491, "re"], [492, "re"], [493, "re"], [493, "id5"], [494, "re"]], "shutil": [[488, "shutil"], [489, "shutil"], [490, "shutil"], [491, "shutil"], [492, "shutil"], [495, "shutil"]], "string": [[488, "string"], [494, "string"]], "sysconfig": [[488, "sysconfig"], [489, "sysconfig"], [492, "sysconfig"]], "tempfile": [[488, "tempfile"], [489, "tempfile"], [490, "tempfile"]], "time": [[488, "time"], [490, "time"], [492, "time"], [493, "time"], [494, "time"], [495, "time"], [496, "time"]], "tkinter": [[488, "tkinter"], [492, "tkinter"], [493, "tkinter"], [493, "id7"], [494, "tkinter"], [495, "tkinter"]], "unicodedata": [[488, "unicodedata"], [492, "unicodedata"], [493, "unicodedata"], [494, "unicodedata"], [495, "unicodedata"], [496, "unicodedata"]], "venv": [[488, "venv"], [491, "venv"], [493, "venv"], [493, "whatsnew36-venv"], [495, "venv"], [496, "venv"]], "warnings": [[488, "warnings"], [493, "warnings"], [494, "warnings"]], "zipfile": [[488, "zipfile"], [491, "zipfile"], [492, "zipfile"], [493, "zipfile"], [494, "zipfile"]], "Faster CPython": [[488, "faster-cpython"]], "Faster Startup": [[488, "faster-startup"]], "Frozen imports / Static code objects": [[488, "frozen-imports-static-code-objects"]], "Faster Runtime": [[488, "faster-runtime"]], "Cheaper, lazy Python frames": [[488, "cheaper-lazy-python-frames"]], "Inlined Python function calls": [[488, "inlined-python-function-calls"]], "PEP 659: Specializing Adaptive Interpreter": [[488, "pep-659-specializing-adaptive-interpreter"]], "Misc": [[488, "misc"]], "FAQ": [[488, "faq"]], "How should I write my code to utilize these speedups?": [[488, "how-should-i-write-my-code-to-utilize-these-speedups"]], "Will CPython 3.11 use more memory?": [[488, "will-cpython-3-11-use-more-memory"]], "I don\u2019t see any speedups in my workload. Why?": [[488, "i-don-t-see-any-speedups-in-my-workload-why"]], "Is there a JIT compiler?": [[488, "is-there-a-jit-compiler"]], "About": [[488, "about"]], "New opcodes": [[488, "new-opcodes"]], "Replaced opcodes": [[488, "replaced-opcodes"]], "Changed/removed opcodes": [[488, "changed-removed-opcodes"]], "Language/Builtins": [[488, "language-builtins"]], "Standard Library": [[488, "standard-library"]], "Pending Removal in Python 3.12": [[488, "pending-removal-in-python-3-12"], [488, "whatsnew311-c-api-pending-removal"]], "Porting to Python 3.11": [[488, "porting-to-python-3-11"], [488, "whatsnew311-c-api-porting"]], "Notable Changes in 3.11.4": [[488, "notable-changes-in-3-11-4"]], "Notable Changes in 3.11.5": [[488, "notable-changes-in-3-11-5"]], "What\u2019s New In Python 3.2": [[489, "what-s-new-in-python-3-2"]], "PEP 384: Defining a Stable ABI": [[489, "pep-384-defining-a-stable-abi"]], "PEP 389: Argparse Command Line Parsing Module": [[489, "pep-389-argparse-command-line-parsing-module"]], "PEP 391:  Dictionary Based Configuration for Logging": [[489, "pep-391-dictionary-based-configuration-for-logging"]], "PEP 3148:  The concurrent.futures module": [[489, "pep-3148-the-concurrent-futures-module"]], "PEP 3147:  PYC Repository Directories": [[489, "pep-3147-pyc-repository-directories"]], "PEP 3149: ABI Version Tagged .so Files": [[489, "pep-3149-abi-version-tagged-so-files"]], "PEP 3333: Python Web Server Gateway Interface v1.0.1": [[489, "pep-3333-python-web-server-gateway-interface-v1-0-1"]], "email": [[489, "email"], [490, "email"], [491, "email"], [492, "email"], [493, "email"]], "elementtree": [[489, "elementtree"]], "collections": [[489, "collections"], [490, "collections"], [491, "collections"], [492, "collections"], [493, "collections"], [494, "collections"], [494, "id3"], [495, "collections"]], "datetime and time": [[489, "datetime-and-time"]], "abc": [[489, "abc"], [490, "abc"], [491, "abc"]], "io": [[489, "io"], [490, "io"], [492, "io"], [494, "io"], [495, "io"]], "reprlib": [[489, "reprlib"]], "csv": [[489, "csv"], [492, "csv"], [495, "csv"]], "decimal and fractions": [[489, "decimal-and-fractions"]], "ftp": [[489, "ftp"]], "popen": [[489, "popen"]], "select": [[489, "select"], [490, "select"], [491, "select"]], "gzip and zipfile": [[489, "gzip-and-zipfile"]], "ast": [[489, "ast"], [493, "ast"], [495, "ast"], [496, "ast"]], "html": [[489, "html"], [490, "html"], [491, "html"]], "nntp": [[489, "nntp"]], "certificates": [[489, "certificates"]], "imaplib": [[489, "imaplib"], [490, "imaplib"], [492, "imaplib"], [496, "imaplib"]], "http.client": [[489, "http-client"], [492, "http-client"], [493, "http-client"], [494, "http-client"]], "random": [[489, "random"], [493, "random"], [496, "random"]], "poplib": [[489, "poplib"], [491, "poplib"], [492, "poplib"], [496, "poplib"]], "asyncore": [[489, "asyncore"], [493, "asyncore"]], "pydoc": [[489, "pydoc"], [490, "pydoc"], [491, "pydoc"], [493, "pydoc"], [494, "pydoc"], [496, "pydoc"]], "dis": [[489, "dis"], [491, "dis"], [494, "dis"]], "dbm": [[489, "dbm"], [491, "dbm"], [492, "dbm"], [493, "dbm"], [494, "dbm"], [494, "id4"]], "ctypes": [[489, "ctypes"], [495, "ctypes"]], "pdb": [[489, "pdb"], [490, "pdb"], [491, "pdb"], [493, "pdb"], [494, "pdb"], [496, "pdb"]], "configparser": [[489, "configparser"], [492, "configparser"]], "mailbox": [[489, "mailbox"]], "turtledemo": [[489, "turtledemo"]], "Codecs": [[489, "codecs"]], "Documentation": [[489, "documentation"]], "Code Repository": [[489, "code-repository"]], "Porting to Python 3.2": [[489, "porting-to-python-3-2"]], "What\u2019s New In Python 3.3": [[490, "what-s-new-in-python-3-3"]], "PEP 405: Virtual Environments": [[490, "pep-405-virtual-environments"]], "PEP 420: Implicit Namespace Packages": [[490, "pep-420-implicit-namespace-packages"]], "PEP 3118: New memoryview implementation and buffer protocol documentation": [[490, "pep-3118-new-memoryview-implementation-and-buffer-protocol-documentation"]], "API changes": [[490, "api-changes"], [490, "id2"]], "PEP 393: Flexible String Representation": [[490, "pep-393-flexible-string-representation"]], "Functionality": [[490, "functionality"]], "Performance and resource usage": [[490, "performance-and-resource-usage"]], "PEP 397: Python Launcher for Windows": [[490, "pep-397-python-launcher-for-windows"]], "PEP 3151: Reworking the OS and IO exception hierarchy": [[490, "pep-3151-reworking-the-os-and-io-exception-hierarchy"]], "PEP 380: Syntax for Delegating to a Subgenerator": [[490, "pep-380-syntax-for-delegating-to-a-subgenerator"]], "PEP 409: Suppressing exception context": [[490, "pep-409-suppressing-exception-context"]], "PEP 414: Explicit Unicode literals": [[490, "pep-414-explicit-unicode-literals"]], "PEP 3155: Qualified name for classes and functions": [[490, "pep-3155-qualified-name-for-classes-and-functions"]], "PEP 412: Key-Sharing Dictionary": [[490, "pep-412-key-sharing-dictionary"]], "PEP 362: Function Signature Object": [[490, "pep-362-function-signature-object"]], "PEP 421: Adding sys.implementation": [[490, "pep-421-adding-sys-implementation"]], "SimpleNamespace": [[490, "simplenamespace"]], "Using importlib as the Implementation of Import": [[490, "using-importlib-as-the-implementation-of-import"]], "New APIs": [[490, "new-apis"]], "Visible Changes": [[490, "visible-changes"]], "A Finer-Grained Import Lock": [[490, "a-finer-grained-import-lock"]], "Builtin functions and types": [[490, "builtin-functions-and-types"]], "ipaddress": [[490, "ipaddress"], [491, "ipaddress"], [492, "ipaddress"], [494, "ipaddress"], [496, "ipaddress"]], "lzma": [[490, "lzma"], [492, "lzma"]], "binascii": [[490, "binascii"], [493, "binascii"], [494, "binascii"]], "bz2": [[490, "bz2"], [492, "bz2"]], "crypt": [[490, "crypt"], [494, "crypt"]], "decimal": [[490, "decimal"], [493, "decimal"], [494, "decimal"]], "Policy Framework": [[490, "policy-framework"]], "Provisional Policy with New Header API": [[490, "provisional-policy-with-new-header-api"]], "Other API Changes": [[490, "other-api-changes"]], "ftplib": [[490, "ftplib"], [496, "ftplib"]], "http": [[490, "http"], [491, "http"], [492, "http"], [496, "http"]], "mmap": [[490, "mmap"], [491, "mmap"], [495, "mmap"]], "multiprocessing": [[490, "multiprocessing"], [491, "multiprocessing"], [492, "multiprocessing"], [493, "multiprocessing"], [494, "multiprocessing"], [495, "multiprocessing"], [496, "multiprocessing"]], "nntplib": [[490, "nntplib"], [496, "nntplib"]], "pickle": [[490, "pickle"], [491, "pickle"], [492, "pickle"], [493, "pickle"], [495, "pickle"]], "sched": [[490, "sched"]], "shlex": [[490, "shlex"], [493, "shlex"], [495, "shlex"]], "signal": [[490, "signal"], [492, "signal"], [494, "signal"], [496, "signal"]], "smtpd": [[490, "smtpd"], [491, "smtpd"], [492, "smtpd"]], "smtplib": [[490, "smtplib"], [491, "smtplib"], [492, "smtplib"], [496, "smtplib"]], "socketserver": [[490, "socketserver"], [493, "socketserver"], [494, "socketserver"]], "stat": [[490, "stat"], [491, "stat"]], "struct": [[490, "struct"], [491, "struct"], [493, "struct"]], "subprocess": [[490, "subprocess"], [491, "subprocess"], [492, "subprocess"], [493, "subprocess"], [494, "subprocess"]], "textwrap": [[490, "textwrap"], [491, "textwrap"]], "urllib": [[490, "urllib"], [491, "urllib"], [492, "urllib"]], "webbrowser": [[490, "webbrowser"]], "xml.etree.ElementTree": [[490, "xml-etree-elementtree"]], "Unsupported Operating Systems": [[490, "unsupported-operating-systems"], [492, "unsupported-operating-systems"]], "Deprecated Python modules, functions and methods": [[490, "deprecated-python-modules-functions-and-methods"], [492, "deprecated-python-modules-functions-and-methods"], [493, "deprecated-python-modules-functions-and-methods"], [494, "deprecated-python-modules-functions-and-methods"]], "Deprecated functions and types of the C API": [[490, "deprecated-functions-and-types-of-the-c-api"], [493, "deprecated-functions-and-types-of-the-c-api"], [494, "deprecated-functions-and-types-of-the-c-api"]], "Deprecated features": [[490, "deprecated-features"]], "Porting to Python 3.3": [[490, "porting-to-python-3-3"]], "Porting Python code": [[490, "porting-python-code"]], "Porting C code": [[490, "porting-c-code"]], "Building C extensions": [[490, "building-c-extensions"]], "Command Line Switch Changes": [[490, "command-line-switch-changes"]], "What\u2019s New In Python 3.4": [[491, "what-s-new-in-python-3-4"]], "Summary \u2013 Release Highlights": [[491, "summary-release-highlights"], [494, "summary-release-highlights"]], "PEP 453: Explicit Bootstrapping of PIP in Python Installations": [[491, "pep-453-explicit-bootstrapping-of-pip-in-python-installations"]], "PEP 446: Newly Created File Descriptors Are Non-Inheritable": [[491, "pep-446-newly-created-file-descriptors-are-non-inheritable"]], "Improvements to Codec Handling": [[491, "improvements-to-codec-handling"]], "PEP 451: A ModuleSpec Type for the Import System": [[491, "pep-451-a-modulespec-type-for-the-import-system"]], "ensurepip": [[491, "ensurepip"]], "selectors": [[491, "selectors"], [492, "selectors"]], "tracemalloc": [[491, "tracemalloc"], [493, "tracemalloc"], [494, "tracemalloc"], [496, "tracemalloc"]], "aifc": [[491, "aifc"], [494, "aifc"]], "audioop": [[491, "audioop"]], "colorsys": [[491, "colorsys"]], "filecmp": [[491, "filecmp"]], "idlelib and IDLE": [[491, "idlelib-and-idle"], [492, "idlelib-and-idle"], [493, "idlelib-and-idle"], [494, "idlelib-and-idle"]], "marshal": [[491, "marshal"]], "plistlib": [[491, "plistlib"], [495, "plistlib"]], "pty": [[491, "pty"]], "resource": [[491, "resource"]], "sunau": [[491, "sunau"], [494, "sunau"]], "wave": [[491, "wave"], [494, "wave"]], "weakref": [[491, "weakref"], [495, "weakref"]], "xml.etree": [[491, "xml-etree"], [494, "xml-etree"]], "CPython Implementation Changes": [[491, "cpython-implementation-changes"]], "PEP 445: Customization of CPython Memory Allocators": [[491, "pep-445-customization-of-cpython-memory-allocators"]], "PEP 442: Safe Object Finalization": [[491, "pep-442-safe-object-finalization"]], "PEP 456: Secure and Interchangeable Hash Algorithm": [[491, "pep-456-secure-and-interchangeable-hash-algorithm"]], "PEP 436: Argument Clinic": [[491, "pep-436-argument-clinic"]], "Other Build and C API Changes": [[491, "other-build-and-c-api-changes"]], "Other Improvements": [[491, "other-improvements"], [493, "other-improvements"]], "Significant Optimizations": [[491, "significant-optimizations"]], "Deprecations in the Python API": [[491, "deprecations-in-the-python-api"]], "Deprecated Features": [[491, "deprecated-features"]], "Operating Systems No Longer Supported": [[491, "operating-systems-no-longer-supported"]], "API and Feature Removals": [[491, "api-and-feature-removals"], [492, "api-and-feature-removals"], [493, "api-and-feature-removals"], [494, "api-and-feature-removals"], [495, "api-and-feature-removals"]], "Code Cleanups": [[491, "code-cleanups"]], "Porting to Python 3.4": [[491, "porting-to-python-3-4"]], "Changes in \u2018python\u2019 Command Behavior": [[491, "changes-in-python-command-behavior"], [493, "changes-in-python-command-behavior"]], "Changed in 3.4.3": [[491, "changed-in-3-4-3"]], "What\u2019s New In Python 3.5": [[492, "what-s-new-in-python-3-5"]], "PEP 492 - Coroutines with async and await syntax": [[492, "pep-492-coroutines-with-async-and-await-syntax"]], "PEP 465 - A dedicated infix operator for matrix multiplication": [[492, "pep-465-a-dedicated-infix-operator-for-matrix-multiplication"]], "PEP 448 - Additional Unpacking Generalizations": [[492, "pep-448-additional-unpacking-generalizations"]], "PEP 461 - percent formatting support for bytes and bytearray": [[492, "pep-461-percent-formatting-support-for-bytes-and-bytearray"]], "PEP 484 - Type Hints": [[492, "pep-484-type-hints"]], "PEP 471 - os.scandir() function \u2013 a better and faster directory iterator": [[492, "pep-471-os-scandir-function-a-better-and-faster-directory-iterator"]], "PEP 475: Retry system calls failing with EINTR": [[492, "pep-475-retry-system-calls-failing-with-eintr"]], "PEP 479: Change StopIteration handling inside generators": [[492, "pep-479-change-stopiteration-handling-inside-generators"]], "PEP 485: A function for testing approximate equality": [[492, "pep-485-a-function-for-testing-approximate-equality"]], "PEP 486: Make the Python Launcher aware of virtual environments": [[492, "pep-486-make-the-python-launcher-aware-of-virtual-environments"]], "PEP 488: Elimination of PYO files": [[492, "pep-488-elimination-of-pyo-files"]], "PEP 489: Multi-phase extension module initialization": [[492, "pep-489-multi-phase-extension-module-initialization"]], "zipapp": [[492, "zipapp"], [494, "zipapp"]], "cgi": [[492, "cgi"]], "cmath": [[492, "cmath"], [493, "cmath"]], "code": [[492, "code"]], "compileall": [[492, "compileall"], [494, "compileall"], [496, "compileall"]], "concurrent.futures": [[492, "concurrent-futures"], [493, "concurrent-futures"], [494, "concurrent-futures"], [496, "concurrent-futures"]], "difflib": [[492, "difflib"]], "gzip": [[492, "gzip"], [495, "gzip"]], "heapq": [[492, "heapq"]], "imghdr": [[492, "imghdr"]], "json": [[492, "json"], [493, "json"]], "readline": [[492, "readline"], [493, "readline"]], "sndhdr": [[492, "sndhdr"]], "Application-Layer Protocol Negotiation Support": [[492, "application-layer-protocol-negotiation-support"]], "Other Changes": [[492, "other-changes"]], "timeit": [[492, "timeit"], [493, "timeit"]], "unittest.mock": [[492, "unittest-mock"], [493, "unittest-mock"], [494, "unittest-mock"]], "wsgiref": [[492, "wsgiref"]], "xmlrpc": [[492, "xmlrpc"], [495, "xmlrpc"]], "xml.sax": [[492, "xml-sax"]], "Other module-level changes": [[492, "other-module-level-changes"]], "New Keywords": [[492, "new-keywords"], [493, "new-keywords"]], "Deprecated Python Behavior": [[492, "deprecated-python-behavior"], [494, "deprecated-python-behavior"]], "Porting to Python 3.5": [[492, "porting-to-python-3-5"]], "Changes in Python behavior": [[492, "changes-in-python-behavior"], [495, "changes-in-python-behavior"]], "Notable changes in Python 3.5.4": [[492, "notable-changes-in-python-3-5-4"]], "What\u2019s New In Python 3.6": [[493, "what-s-new-in-python-3-6"]], "PEP 498: Formatted string literals": [[493, "pep-498-formatted-string-literals"]], "PEP 526: Syntax for variable annotations": [[493, "pep-526-syntax-for-variable-annotations"]], "PEP 515: Underscores in Numeric Literals": [[493, "pep-515-underscores-in-numeric-literals"]], "PEP 525: Asynchronous Generators": [[493, "pep-525-asynchronous-generators"]], "PEP 530: Asynchronous Comprehensions": [[493, "pep-530-asynchronous-comprehensions"]], "PEP 487: Simpler customization of class creation": [[493, "pep-487-simpler-customization-of-class-creation"]], "PEP 487: Descriptor Protocol Enhancements": [[493, "pep-487-descriptor-protocol-enhancements"]], "PEP 519: Adding a file system path protocol": [[493, "pep-519-adding-a-file-system-path-protocol"]], "PEP 495: Local Time Disambiguation": [[493, "pep-495-local-time-disambiguation"]], "PEP 529: Change Windows filesystem encoding to UTF-8": [[493, "pep-529-change-windows-filesystem-encoding-to-utf-8"]], "PEP 528: Change Windows console encoding to UTF-8": [[493, "pep-528-change-windows-console-encoding-to-utf-8"]], "PEP 520: Preserving Class Attribute Definition Order": [[493, "pep-520-preserving-class-attribute-definition-order"]], "PEP 468: Preserving Keyword Argument Order": [[493, "pep-468-preserving-keyword-argument-order"]], "New dict implementation": [[493, "new-dict-implementation"]], "PEP 523: Adding a frame evaluation API to CPython": [[493, "pep-523-adding-a-frame-evaluation-api-to-cpython"]], "PYTHONMALLOC environment variable": [[493, "pythonmalloc-environment-variable"]], "DTrace and SystemTap probing support": [[493, "dtrace-and-systemtap-probing-support"]], "secrets": [[493, "secrets"]], "pickletools": [[493, "pickletools"]], "rlcompleter": [[493, "rlcompleter"]], "telnetlib": [[493, "telnetlib"]], "urllib.request": [[493, "urllib-request"]], "urllib.robotparser": [[493, "urllib-robotparser"]], "winreg": [[493, "winreg"]], "winsound": [[493, "winsound"]], "xmlrpc.client": [[493, "xmlrpc-client"]], "Deprecated Python behavior": [[493, "deprecated-python-behavior"]], "asynchat": [[493, "asynchat"]], "grp": [[493, "grp"]], "Deprecated Build Options": [[493, "deprecated-build-options"]], "Porting to Python 3.6": [[493, "porting-to-python-3-6"]], "Notable changes in Python 3.6.2": [[493, "notable-changes-in-python-3-6-2"]], "Notable changes in Python 3.6.4": [[493, "notable-changes-in-python-3-6-4"]], "Notable changes in Python 3.6.5": [[493, "notable-changes-in-python-3-6-5"]], "Notable changes in Python 3.6.7": [[493, "notable-changes-in-python-3-6-7"]], "Notable changes in Python 3.6.10": [[493, "notable-changes-in-python-3-6-10"]], "Notable changes in Python 3.6.13": [[493, "notable-changes-in-python-3-6-13"]], "Notable changes in Python 3.6.14": [[493, "notable-changes-in-python-3-6-14"]], "What\u2019s New In Python 3.7": [[494, "what-s-new-in-python-3-7"]], "PEP 563: Postponed Evaluation of Annotations": [[494, "pep-563-postponed-evaluation-of-annotations"]], "PEP 538: Legacy C Locale Coercion": [[494, "pep-538-legacy-c-locale-coercion"]], "PEP 540: Forced UTF-8 Runtime Mode": [[494, "pep-540-forced-utf-8-runtime-mode"]], "PEP 553: Built-in breakpoint()": [[494, "pep-553-built-in-breakpoint"]], "PEP 539: New C API for Thread-Local Storage": [[494, "pep-539-new-c-api-for-thread-local-storage"]], "PEP 562: Customization of Access to Module Attributes": [[494, "pep-562-customization-of-access-to-module-attributes"]], "PEP 564: New Time Functions With Nanosecond Resolution": [[494, "pep-564-new-time-functions-with-nanosecond-resolution"]], "PEP 565: Show DeprecationWarning in __main__": [[494, "pep-565-show-deprecationwarning-in-main"]], "PEP 560: Core Support for typing module and Generic Types": [[494, "pep-560-core-support-for-typing-module-and-generic-types"]], "PEP 552: Hash-based .pyc Files": [[494, "pep-552-hash-based-pyc-files"]], "PEP 545: Python Documentation Translations": [[494, "pep-545-python-documentation-translations"]], "Python Development Mode (-X dev)": [[494, "python-development-mode-x-dev"]], "contextvars": [[494, "contextvars"]], "importlib.resources": [[494, "importlib-resources"]], "calendar": [[494, "calendar"]], "cProfile": [[494, "cprofile"], [495, "cprofile"]], "http.server": [[494, "http-server"]], "mimetypes": [[494, "mimetypes"]], "msilib": [[494, "msilib"]], "queue": [[494, "queue"]], "uu": [[494, "uu"]], "uuid": [[494, "uuid"]], "xmlrpc.server": [[494, "xmlrpc-server"]], "gettext": [[494, "gettext"], [495, "gettext"]], "macpath": [[494, "macpath"]], "Platform Support Removals": [[494, "platform-support-removals"]], "Module Removals": [[494, "module-removals"]], "Windows-only Changes": [[494, "windows-only-changes"], [494, "id12"]], "Porting to Python 3.7": [[494, "porting-to-python-3-7"]], "Changes in Python Behavior": [[494, "changes-in-python-behavior"]], "Other CPython implementation changes": [[494, "id13"]], "Notable changes in Python 3.7.1": [[494, "notable-changes-in-python-3-7-1"]], "Notable changes in Python 3.7.2": [[494, "notable-changes-in-python-3-7-2"]], "Notable changes in Python 3.7.6": [[494, "notable-changes-in-python-3-7-6"]], "Notable changes in Python 3.7.10": [[494, "notable-changes-in-python-3-7-10"]], "Notable changes in Python 3.7.11": [[494, "notable-changes-in-python-3-7-11"]], "Notable security feature in 3.7.14": [[494, "notable-security-feature-in-3-7-14"]], "What\u2019s New In Python 3.8": [[495, "what-s-new-in-python-3-8"]], "Positional-only parameters": [[495, "positional-only-parameters"]], "Parallel filesystem cache for compiled bytecode files": [[495, "parallel-filesystem-cache-for-compiled-bytecode-files"]], "Debug build uses the same ABI as release build": [[495, "debug-build-uses-the-same-abi-as-release-build"]], "f-strings support = for self-documenting expressions and debugging": [[495, "f-strings-support-for-self-documenting-expressions-and-debugging"]], "PEP 578: Python Runtime Audit Hooks": [[495, "pep-578-python-runtime-audit-hooks"]], "PEP 587: Python Initialization Configuration": [[495, "pep-587-python-initialization-configuration"]], "PEP 590: Vectorcall: a fast calling protocol for CPython": [[495, "pep-590-vectorcall-a-fast-calling-protocol-for-cpython"]], "Pickle protocol 5 with out-of-band data buffers": [[495, "pickle-protocol-5-with-out-of-band-data-buffers"]], "builtins": [[495, "builtins"]], "json.tool": [[495, "json-tool"]], "tokenize": [[495, "tokenize"]], "Porting to Python 3.8": [[495, "porting-to-python-3-8"]], "Demos and Tools": [[495, "demos-and-tools"]], "Notable changes in Python 3.8.1": [[495, "notable-changes-in-python-3-8-1"]], "Notable changes in Python 3.8.2": [[495, "notable-changes-in-python-3-8-2"]], "Notable changes in Python 3.8.3": [[495, "notable-changes-in-python-3-8-3"]], "Notable changes in Python 3.8.8": [[495, "notable-changes-in-python-3-8-8"]], "Notable changes in Python 3.8.9": [[495, "notable-changes-in-python-3-8-9"]], "Notable changes in Python 3.8.10": [[495, "notable-changes-in-python-3-8-10"], [495, "id1"]], "macOS 11.0 (Big Sur) and Apple Silicon Mac support": [[495, "macos-11-0-big-sur-and-apple-silicon-mac-support"], [496, "macos-11-0-big-sur-and-apple-silicon-mac-support"]], "Notable changes in Python 3.8.12": [[495, "notable-changes-in-python-3-8-12"]], "Notable security feature in 3.8.14": [[495, "notable-security-feature-in-3-8-14"]], "Notable changes in 3.8.17": [[495, "notable-changes-in-3-8-17"]], "What\u2019s New In Python 3.9": [[496, "what-s-new-in-python-3-9"]], "You should check for DeprecationWarning in your code": [[496, "you-should-check-for-deprecationwarning-in-your-code"]], "Dictionary Merge & Update Operators": [[496, "dictionary-merge-update-operators"]], "New String Methods to Remove Prefixes and Suffixes": [[496, "new-string-methods-to-remove-prefixes-and-suffixes"]], "Type Hinting Generics in Standard Collections": [[496, "type-hinting-generics-in-standard-collections"]], "New Parser": [[496, "new-parser"]], "zoneinfo": [[496, "zoneinfo"]], "graphlib": [[496, "graphlib"]], "Porting to Python 3.9": [[496, "porting-to-python-3-9"], [496, "id2"]], "Notable changes in Python 3.9.1": [[496, "notable-changes-in-python-3-9-1"]], "Notable changes in Python 3.9.2": [[496, "notable-changes-in-python-3-9-2"]], "Notable changes in Python 3.9.3": [[496, "notable-changes-in-python-3-9-3"]], "Notable changes in Python 3.9.5": [[496, "notable-changes-in-python-3-9-5"]], "Notable security feature in 3.9.14": [[496, "notable-security-feature-in-3-9-14"]], "Notable changes in 3.9.17": [[496, "notable-changes-in-3-9-17"]], "Changelog": [[497, "changelog"]], "What\u2019s New in Python": [[498, "what-s-new-in-python"]]}, "indexentries": {"pyobject_del (c function)": [[3, "c.PyObject_Del"]], "pyobject_init (c function)": [[3, "c.PyObject_Init"]], "pyobject_initvar (c function)": [[3, "c.PyObject_InitVar"]], "pyobject_new (c macro)": [[3, "c.PyObject_New"]], "pyobject_newvar (c macro)": [[3, "c.PyObject_NewVar"]], "_pyobject_new (c function)": [[3, "c._PyObject_New"]], "_pyobject_newvar (c function)": [[3, "c._PyObject_NewVar"]], "_py_nonestruct (c var)": [[3, "c._Py_NoneStruct"]], "py_major_version (c macro)": [[4, "c.PY_MAJOR_VERSION"]], "py_micro_version (c macro)": [[4, "c.PY_MICRO_VERSION"]], "py_minor_version (c macro)": [[4, "c.PY_MINOR_VERSION"]], "py_release_level (c macro)": [[4, "c.PY_RELEASE_LEVEL"]], "py_release_serial (c macro)": [[4, "c.PY_RELEASE_SERIAL"]], "py_version_hex (c macro)": [[4, "c.PY_VERSION_HEX"]], "py_version (c var)": [[4, "c.Py_Version"]], "pyarg_parse (c function)": [[5, "c.PyArg_Parse"]], "pyarg_parsetuple (c function)": [[5, "c.PyArg_ParseTuple"], [85, "index-2"]], "pyarg_parsetupleandkeywords (c function)": [[5, "c.PyArg_ParseTupleAndKeywords"], [85, "index-3"]], "pyarg_unpacktuple (c function)": [[5, "c.PyArg_UnpackTuple"]], "pyarg_vaparse (c function)": [[5, "c.PyArg_VaParse"]], "pyarg_vaparsetupleandkeywords (c function)": [[5, "c.PyArg_VaParseTupleAndKeywords"]], "pyarg_validatekeywordarguments (c function)": [[5, "c.PyArg_ValidateKeywordArguments"]], "py_buildvalue (c function)": [[5, "c.Py_BuildValue"]], "py_vabuildvalue (c function)": [[5, "c.Py_VaBuildValue"]], "pybool_check (c function)": [[6, "c.PyBool_Check"]], "pybool_fromlong (c function)": [[6, "c.PyBool_FromLong"]], "pybool_type (c var)": [[6, "c.PyBool_Type"]], "py_false (c var)": [[6, "c.Py_False"]], "py_return_false (c macro)": [[6, "c.Py_RETURN_FALSE"]], "py_return_true (c macro)": [[6, "c.Py_RETURN_TRUE"]], "py_true (c var)": [[6, "c.Py_True"]], "(see buffer protocol)": [[7, "index-0"]], "c-contiguous": [[7, "index-2"], [99, "index-10"]], "fortran contiguous": [[7, "index-2"], [99, "index-10"]], "pybuf_any_contiguous (c macro)": [[7, "c.PyBUF_ANY_CONTIGUOUS"]], "pybuf_contig (c macro)": [[7, "c.PyBUF_CONTIG"]], "pybuf_contig_ro (c macro)": [[7, "c.PyBUF_CONTIG_RO"]], "pybuf_c_contiguous (c macro)": [[7, "c.PyBUF_C_CONTIGUOUS"]], "pybuf_format (c macro)": [[7, "c.PyBUF_FORMAT"]], "pybuf_full (c macro)": [[7, "c.PyBUF_FULL"]], "pybuf_full_ro (c macro)": [[7, "c.PyBUF_FULL_RO"]], "pybuf_f_contiguous (c macro)": [[7, "c.PyBUF_F_CONTIGUOUS"]], "pybuf_indirect (c macro)": [[7, "c.PyBUF_INDIRECT"]], "pybuf_max_ndim (c macro)": [[7, "c.PyBUF_MAX_NDIM"]], "pybuf_nd (c macro)": [[7, "c.PyBUF_ND"]], "pybuf_records (c macro)": [[7, "c.PyBUF_RECORDS"]], "pybuf_records_ro (c macro)": [[7, "c.PyBUF_RECORDS_RO"]], "pybuf_simple (c macro)": [[7, "c.PyBUF_SIMPLE"]], "pybuf_strided (c macro)": [[7, "c.PyBUF_STRIDED"]], "pybuf_strided_ro (c macro)": [[7, "c.PyBUF_STRIDED_RO"]], "pybuf_strides (c macro)": [[7, "c.PyBUF_STRIDES"]], "pybuf_writable (c macro)": [[7, "c.PyBUF_WRITABLE"]], "pybufferprocs (c type)": [[7, "index-1"], [62, "c.PyBufferProcs"]], "pybuffer_fillcontiguousstrides (c function)": [[7, "c.PyBuffer_FillContiguousStrides"]], "pybuffer_fillinfo (c function)": [[7, "c.PyBuffer_FillInfo"]], "pybuffer_fromcontiguous (c function)": [[7, "c.PyBuffer_FromContiguous"]], "pybuffer_getpointer (c function)": [[7, "c.PyBuffer_GetPointer"]], "pybuffer_iscontiguous (c function)": [[7, "c.PyBuffer_IsContiguous"]], "pybuffer_release (c function)": [[7, "c.PyBuffer_Release"]], "pybuffer_sizefromformat (c function)": [[7, "c.PyBuffer_SizeFromFormat"]], "pybuffer_tocontiguous (c function)": [[7, "c.PyBuffer_ToContiguous"]], "pyobject_checkbuffer (c function)": [[7, "c.PyObject_CheckBuffer"]], "pyobject_copydata (c function)": [[7, "c.PyObject_CopyData"]], "pyobject_getbuffer (c function)": [[7, "c.PyObject_GetBuffer"]], "py_buffer (c type)": [[7, "c.Py_buffer"]], "py_buffer.buf (c member)": [[7, "c.Py_buffer.buf"]], "py_buffer.format (c member)": [[7, "c.Py_buffer.format"]], "py_buffer.internal (c member)": [[7, "c.Py_buffer.internal"]], "py_buffer.itemsize (c member)": [[7, "c.Py_buffer.itemsize"]], "py_buffer.len (c member)": [[7, "c.Py_buffer.len"]], "py_buffer.ndim (c member)": [[7, "c.Py_buffer.ndim"]], "py_buffer.obj (c member)": [[7, "c.Py_buffer.obj"]], "py_buffer.readonly (c member)": [[7, "c.Py_buffer.readonly"]], "py_buffer.shape (c member)": [[7, "c.Py_buffer.shape"]], "py_buffer.strides (c member)": [[7, "c.Py_buffer.strides"]], "py_buffer.suboffsets (c member)": [[7, "c.Py_buffer.suboffsets"]], "buffer interface": [[7, "index-0"]], "buffer object": [[7, "index-0"]], "buffer protocol": [[7, "index-0"], [360, "index-30"], [360, "index-38"]], "contiguous": [[7, "index-2"], [99, "term-contiguous"]], "pybytearrayobject (c type)": [[8, "c.PyByteArrayObject"]], "pybytearray_as_string (c function)": [[8, "c.PyByteArray_AS_STRING"]], "pybytearray_asstring (c function)": [[8, "c.PyByteArray_AsString"]], "pybytearray_check (c function)": [[8, "c.PyByteArray_Check"]], "pybytearray_checkexact (c function)": [[8, "c.PyByteArray_CheckExact"]], "pybytearray_concat (c function)": [[8, "c.PyByteArray_Concat"]], "pybytearray_fromobject (c function)": [[8, "c.PyByteArray_FromObject"]], "pybytearray_fromstringandsize (c function)": [[8, "c.PyByteArray_FromStringAndSize"]], "pybytearray_get_size (c function)": [[8, "c.PyByteArray_GET_SIZE"]], "pybytearray_resize (c function)": [[8, "c.PyByteArray_Resize"]], "pybytearray_size (c function)": [[8, "c.PyByteArray_Size"]], "pybytearray_type (c var)": [[8, "c.PyByteArray_Type"]], "bytearray": [[8, "index-0"], [360, "index-22"], [360, "index-39"], [360, "index-41"], [360, "index-42"], [360, "index-44"], [443, "index-26"]], "object": [[8, "index-0"], [9, "index-0"], [11, "index-0"], [13, "index-0"], [15, "index-0"], [16, "index-0"], [16, "index-1"], [16, "index-2"], [22, "index-0"], [24, "index-0"], [25, "index-0"], [27, "index-0"], [35, "index-3"], [38, "index-0"], [39, "index-0"], [43, "index-0"], [44, "index-0"], [44, "index-1"], [45, "index-0"], [46, "index-0"], [54, "index-0"], [59, "index-0"], [60, "index-0"], [87, "index-0"], [99, "term-object"], [239, "index-12"], [289, "index-1"], [353, "index-0"], [360, "index-11"], [360, "index-18"], [360, "index-21"], [360, "index-22"], [360, "index-24"], [360, "index-25"], [360, "index-26"], [360, "index-27"], [360, "index-28"], [360, "index-39"], [360, "index-40"], [360, "index-41"], [360, "index-50"], [360, "index-51"], [360, "index-55"], [360, "index-58"], [360, "index-60"], [360, "index-61"], [360, "index-8"], [368, "index-8"], [396, "index-0"], [442, "index-11"], [442, "index-28"], [442, "index-42"], [442, "index-6"], [443, "index-0"], [443, "index-10"], [443, "index-12"], [443, "index-13"], [443, "index-14"], [443, "index-15"], [443, "index-17"], [443, "index-20"], [443, "index-22"], [443, "index-25"], [443, "index-27"], [443, "index-28"], [443, "index-29"], [443, "index-30"], [443, "index-31"], [443, "index-33"], [443, "index-34"], [443, "index-37"], [443, "index-42"], [443, "index-43"], [443, "index-44"], [443, "index-47"], [443, "index-51"], [443, "index-53"], [443, "index-57"], [443, "index-59"], [443, "index-6"], [443, "index-63"], [443, "index-66"], [443, "index-7"], [443, "index-8"], [443, "index-80"], [443, "index-9"], [443, "index-99"], [445, "index-15"], [445, "index-16"], [445, "index-17"], [445, "index-20"], [445, "index-22"], [445, "index-31"], [445, "index-35"], [445, "index-40"], [445, "index-42"], [445, "index-45"], [445, "index-47"], [445, "index-52"], [445, "index-53"], [445, "index-54"], [445, "index-55"], [445, "index-7"], [445, "index-80"], [445, "index-92"], [451, "index-10"], [451, "index-11"], [451, "index-28"], [451, "index-3"], [451, "index-4"], [451, "index-9"], [455, "index-0"], [461, "index-0"]], "pybytesobject (c type)": [[9, "c.PyBytesObject"]], "pybytes_as_string (c function)": [[9, "c.PyBytes_AS_STRING"]], "pybytes_asstring (c function)": [[9, "c.PyBytes_AsString"]], "pybytes_asstringandsize (c function)": [[9, "c.PyBytes_AsStringAndSize"]], "pybytes_check (c function)": [[9, "c.PyBytes_Check"]], "pybytes_checkexact (c function)": [[9, "c.PyBytes_CheckExact"]], "pybytes_concat (c function)": [[9, "c.PyBytes_Concat"]], "pybytes_concatanddel (c function)": [[9, "c.PyBytes_ConcatAndDel"]], "pybytes_fromformat (c function)": [[9, "c.PyBytes_FromFormat"]], "pybytes_fromformatv (c function)": [[9, "c.PyBytes_FromFormatV"]], "pybytes_fromobject (c function)": [[9, "c.PyBytes_FromObject"]], "pybytes_fromstring (c function)": [[9, "c.PyBytes_FromString"]], "pybytes_fromstringandsize (c function)": [[9, "c.PyBytes_FromStringAndSize"]], "pybytes_get_size (c function)": [[9, "c.PyBytes_GET_SIZE"]], "pybytes_size (c function)": [[9, "c.PyBytes_Size"]], "pybytes_type (c var)": [[9, "c.PyBytes_Type"]], "_pybytes_resize (c function)": [[9, "c._PyBytes_Resize"]], "bytes": [[9, "index-0"], [49, "index-3"], [360, "index-30"], [360, "index-39"], [360, "index-40"], [360, "index-42"], [360, "index-44"], [443, "index-21"], [443, "index-77"]], "pep 590": [[10, "index-0"], [487, "index-34"], [488, "index-38"], [495, "index-7"], [496, "index-18"], [496, "index-8"]], "py_vectorcall_arguments_offset (c macro)": [[10, "c.PY_VECTORCALL_ARGUMENTS_OFFSET"]], "pycallable_check (c function)": [[10, "c.PyCallable_Check"]], "pyobject_call (c function)": [[10, "c.PyObject_Call"]], "pyobject_callfunction (c function)": [[10, "c.PyObject_CallFunction"]], "pyobject_callfunctionobjargs (c function)": [[10, "c.PyObject_CallFunctionObjArgs"]], "pyobject_callmethod (c function)": [[10, "c.PyObject_CallMethod"]], "pyobject_callmethodnoargs (c function)": [[10, "c.PyObject_CallMethodNoArgs"]], "pyobject_callmethodobjargs (c function)": [[10, "c.PyObject_CallMethodObjArgs"]], "pyobject_callmethodonearg (c function)": [[10, "c.PyObject_CallMethodOneArg"]], "pyobject_callnoargs (c function)": [[10, "c.PyObject_CallNoArgs"]], "pyobject_callobject (c function)": [[10, "c.PyObject_CallObject"], [85, "index-1"]], "pyobject_callonearg (c function)": [[10, "c.PyObject_CallOneArg"]], "pyobject_vectorcall (c function)": [[10, "c.PyObject_Vectorcall"]], "pyobject_vectorcalldict (c function)": [[10, "c.PyObject_VectorcallDict"]], "pyobject_vectorcallmethod (c function)": [[10, "c.PyObject_VectorcallMethod"]], "pyvectorcall_call (c function)": [[10, "c.PyVectorcall_Call"]], "pyvectorcall_function (c function)": [[10, "c.PyVectorcall_Function"]], "pyvectorcall_nargs (c function)": [[10, "c.PyVectorcall_NARGS"]], "python enhancement proposals": [[10, "index-0"], [23, "index-5"], [30, "index-0"], [31, "index-3"], [33, "index-10"], [33, "index-39"], [33, "index-40"], [33, "index-45"], [33, "index-8"], [34, "index-0"], [34, "index-16"], [34, "index-31"], [34, "index-32"], [34, "index-35"], [34, "index-36"], [34, "index-7"], [35, "index-0"], [35, "index-1"], [35, "index-10"], [35, "index-2"], [45, "index-6"], [45, "index-7"], [45, "index-8"], [49, "index-4"], [49, "index-5"], [56, "index-0"], [58, "index-1"], [62, "index-3"], [62, "index-4"], [62, "index-5"], [63, "index-0"], [63, "index-1"], [63, "index-2"], [63, "index-3"], [63, "index-4"], [63, "index-5"], [63, "index-6"], [65, "index-3"], [67, "index-23"], [71, "index-0"], [71, "index-3"], [71, "index-4"], [71, "index-5"], [71, "index-7"], [71, "index-8"], [77, "index-7"], [83, "index-1"], [85, "index-0"], [87, "index-2"], [90, "index-0"], [92, "index-0"], [92, "index-1"], [92, "index-2"], [97, "index-0"], [97, "index-2"], [97, "index-3"], [98, "index-0"], [99, "index-0"], [99, "index-1"], [99, "index-11"], [99, "index-12"], [99, "index-13"], [99, "index-14"], [99, "index-15"], [99, "index-16"], [99, "index-17"], [99, "index-18"], [99, "index-2"], [99, "index-21"], [99, "index-22"], [99, "index-23"], [99, "index-24"], [99, "index-25"], [99, "index-27"], [99, "index-28"], [99, "index-29"], [99, "index-3"], [99, "index-30"], [99, "index-31"], [99, "index-32"], [99, "index-33"], [99, "index-35"], [99, "index-36"], [99, "index-37"], [99, "index-38"], [99, "index-39"], [99, "index-4"], [99, "index-40"], [99, "index-5"], [99, "index-6"], [99, "index-7"], [99, "index-8"], [99, "index-9"], [100, "index-0"], [107, "index-0"], [107, "index-1"], [107, "index-2"], [115, "index-0"], [119, "index-0"], [123, "index-0"], [123, "index-1"], [124, "index-0"], [124, "index-1"], [124, "index-10"], [124, "index-11"], [124, "index-2"], [124, "index-3"], [124, "index-4"], [124, "index-5"], [124, "index-6"], [124, "index-7"], [124, "index-8"], [124, "index-9"], [127, "index-0"], [127, "index-1"], [128, "index-1"], [133, "index-2"], [133, "index-3"], [133, "index-4"], [133, "index-5"], [133, "index-6"], [133, "index-7"], [134, "index-0"], [138, "index-0"], [138, "index-1"], [138, "index-2"], [141, "index-0"], [152, "index-0"], [154, "index-0"], [155, "index-1"], [164, "index-1"], [165, "index-1"], [166, "index-1"], [167, "index-0"], [171, "index-2"], [171, "index-5"], [173, "index-0"], [173, "index-1"], [173, "index-2"], [173, "index-3"], [174, "index-0"], [174, "index-1"], [174, "index-2"], [174, "index-3"], [174, "index-4"], [176, "index-0"], [176, "index-2"], [176, "index-3"], [179, "index-0"], [182, "index-0"], [183, "index-0"], [186, "index-1"], [188, "index-2"], [194, "index-0"], [194, "index-1"], [194, "index-2"], [204, "index-0"], [224, "index-0"], [227, "index-10"], [227, "index-11"], [227, "index-12"], [227, "index-3"], [227, "index-6"], [227, "index-7"], [227, "index-8"], [227, "index-9"], [235, "index-0"], [239, "index-10"], [239, "index-14"], [239, "index-15"], [239, "index-9"], [240, "index-0"], [241, "index-0"], [261, "index-7"], [263, "index-0"], [264, "index-2"], [264, "index-3"], [264, "index-4"], [264, "index-5"], [264, "index-6"], [264, "index-7"], [265, "index-0"], [265, "index-1"], [265, "index-10"], [265, "index-11"], [265, "index-12"], [265, "index-13"], [265, "index-14"], [265, "index-15"], [265, "index-17"], [265, "index-18"], [265, "index-19"], [265, "index-2"], [265, "index-20"], [265, "index-21"], [265, "index-22"], [265, "index-23"], [265, "index-24"], [265, "index-25"], [265, "index-3"], [265, "index-4"], [265, "index-5"], [265, "index-6"], [265, "index-7"], [265, "index-8"], [265, "index-9"], [266, "index-0"], [270, "index-0"], [270, "index-1"], [270, "index-2"], [270, "index-3"], [273, "index-1"], [273, "index-2"], [280, "index-1"], [281, "index-6"], [281, "index-7"], [282, "index-1"], [287, "index-0"], [290, "index-0"], [296, "index-1"], [302, "index-0"], [303, "index-1"], [304, "index-0"], [308, "index-0"], [308, "index-22"], [308, "index-24"], [308, "index-25"], [308, "index-27"], [308, "index-44"], [308, "index-5"], [308, "index-53"], [308, "index-6"], [308, "index-7"], [310, "index-0"], [311, "index-1"], [314, "index-2"], [314, "index-3"], [314, "index-4"], [314, "index-8"], [316, "index-0"], [317, "index-0"], [317, "index-1"], [317, "index-10"], [317, "index-11"], [317, "index-12"], [317, "index-2"], [317, "index-3"], [317, "index-4"], [317, "index-5"], [317, "index-6"], [317, "index-7"], [317, "index-8"], [317, "index-9"], [326, "index-1"], [326, "index-2"], [326, "index-4"], [326, "index-5"], [337, "index-0"], [339, "index-1"], [339, "index-2"], [339, "index-3"], [339, "index-5"], [339, "index-6"], [339, "index-7"], [339, "index-8"], [341, "index-0"], [343, "index-0"], [343, "index-3"], [343, "index-4"], [343, "index-5"], [343, "index-6"], [343, "index-7"], [344, "index-0"], [347, "index-2"], [348, "index-0"], [348, "index-1"], [349, "index-9"], [350, "index-0"], [352, "index-1"], [353, "index-1"], [353, "index-10"], [353, "index-11"], [353, "index-12"], [353, "index-13"], [353, "index-2"], [353, "index-4"], [353, "index-5"], [353, "index-7"], [353, "index-8"], [353, "index-9"], [355, "index-0"], [356, "index-0"], [356, "index-1"], [356, "index-4"], [356, "index-5"], [356, "index-6"], [356, "index-7"], [357, "index-2"], [360, "index-37"], [360, "index-47"], [360, "index-48"], [360, "index-49"], [360, "index-56"], [360, "index-57"], [360, "index-59"], [361, "index-0"], [361, "index-1"], [361, "index-11"], [361, "index-12"], [361, "index-6"], [361, "index-9"], [364, "index-0"], [365, "index-0"], [368, "index-0"], [368, "index-1"], [368, "index-12"], [368, "index-13"], [368, "index-14"], [368, "index-15"], [368, "index-16"], [368, "index-19"], [368, "index-20"], [368, "index-25"], [368, "index-26"], [368, "index-30"], [368, "index-31"], [368, "index-32"], [368, "index-34"], [368, "index-9"], [373, "index-0"], [374, "index-1"], [377, "index-3"], [377, "index-4"], [381, "index-8"], [393, "index-0"], [393, "index-1"], [400, "index-0"], [400, "index-1"], [400, "index-2"], [400, "index-4"], [400, "index-5"], [401, "index-0"], [401, "index-1"], [401, "index-10"], [401, "index-11"], [401, "index-12"], [401, "index-13"], [401, "index-14"], [401, "index-15"], [401, "index-16"], [401, "index-17"], [401, "index-18"], [401, "index-19"], [401, "index-2"], [401, "index-20"], [401, "index-21"], [401, "index-22"], [401, "index-23"], [401, "index-24"], [401, "index-25"], [401, "index-26"], [401, "index-27"], [401, "index-28"], [401, "index-29"], [401, "index-3"], [401, "index-30"], [401, "index-31"], [401, "index-32"], [401, "index-33"], [401, "index-34"], [401, "index-35"], [401, "index-36"], [401, "index-37"], [401, "index-38"], [401, "index-39"], [401, "index-4"], [401, "index-40"], [401, "index-41"], [401, "index-42"], [401, "index-43"], [401, "index-44"], [401, "index-45"], [401, "index-46"], [401, "index-47"], [401, "index-48"], [401, "index-49"], [401, "index-5"], [401, "index-50"], [401, "index-51"], [401, "index-52"], [401, "index-53"], [401, "index-54"], [401, "index-55"], [401, "index-56"], [401, "index-57"], [401, "index-58"], [401, "index-59"], [401, "index-6"], [401, "index-60"], [401, "index-61"], [401, "index-62"], [401, "index-63"], [401, "index-64"], [401, "index-65"], [401, "index-66"], [401, "index-67"], [401, "index-68"], [401, "index-69"], [401, "index-7"], [401, "index-70"], [401, "index-71"], [401, "index-72"], [401, "index-73"], [401, "index-74"], [401, "index-75"], [401, "index-76"], [401, "index-77"], [401, "index-78"], [401, "index-79"], [401, "index-8"], [401, "index-80"], [401, "index-81"], [401, "index-82"], [401, "index-83"], [401, "index-84"], [401, "index-85"], [401, "index-86"], [401, "index-87"], [401, "index-88"], [401, "index-89"], [401, "index-9"], [401, "index-90"], [412, "index-0"], [414, "index-1"], [417, "index-0"], [417, "index-1"], [417, "index-2"], [422, "index-0"], [422, "index-1"], [422, "index-11"], [422, "index-12"], [422, "index-13"], [422, "index-14"], [422, "index-15"], [422, "index-16"], [422, "index-17"], [422, "index-18"], [422, "index-2"], [422, "index-3"], [422, "index-4"], [422, "index-6"], [422, "index-7"], [422, "index-8"], [422, "index-9"], [423, "index-1"], [438, "index-0"], [438, "index-1"], [438, "index-2"], [440, "index-0"], [440, "index-1"], [442, "index-17"], [442, "index-19"], [442, "index-20"], [442, "index-24"], [442, "index-25"], [442, "index-26"], [442, "index-30"], [442, "index-33"], [442, "index-36"], [442, "index-37"], [442, "index-38"], [442, "index-39"], [442, "index-40"], [442, "index-41"], [442, "index-44"], [442, "index-45"], [442, "index-46"], [442, "index-47"], [442, "index-52"], [443, "index-107"], [443, "index-108"], [443, "index-110"], [443, "index-62"], [443, "index-84"], [443, "index-85"], [443, "index-87"], [443, "index-90"], [443, "index-93"], [443, "index-94"], [443, "index-95"], [443, "index-96"], [445, "index-14"], [445, "index-19"], [445, "index-21"], [445, "index-26"], [445, "index-27"], [445, "index-28"], [445, "index-29"], [445, "index-30"], [445, "index-51"], [445, "index-79"], [445, "index-87"], [445, "index-89"], [445, "index-94"], [446, "index-0"], [447, "index-1"], [447, "index-11"], [447, "index-12"], [447, "index-13"], [447, "index-14"], [447, "index-15"], [447, "index-19"], [447, "index-2"], [447, "index-20"], [447, "index-21"], [447, "index-22"], [447, "index-23"], [447, "index-24"], [447, "index-25"], [447, "index-26"], [447, "index-27"], [447, "index-6"], [450, "index-1"], [450, "index-11"], [450, "index-12"], [450, "index-21"], [450, "index-26"], [451, "index-13"], [451, "index-16"], [451, "index-17"], [451, "index-41"], [451, "index-42"], [451, "index-46"], [456, "index-1"], [456, "index-10"], [456, "index-7"], [456, "index-8"], [465, "index-3"], [470, "index-0"], [470, "index-10"], [470, "index-11"], [470, "index-16"], [470, "index-38"], [470, "index-39"], [470, "index-41"], [470, "index-44"], [470, "index-7"], [470, "index-9"], [471, "index-1"], [472, "index-0"], [476, "index-0"], [476, "index-16"], [476, "index-17"], [476, "index-19"], [476, "index-21"], [476, "index-38"], [477, "index-0"], [477, "index-1"], [477, "index-2"], [477, "index-3"], [478, "index-0"], [478, "index-1"], [478, "index-10"], [478, "index-12"], [478, "index-13"], [478, "index-14"], [478, "index-15"], [478, "index-16"], [478, "index-17"], [478, "index-2"], [478, "index-3"], [478, "index-4"], [478, "index-5"], [478, "index-6"], [478, "index-7"], [478, "index-8"], [478, "index-9"], [479, "index-0"], [479, "index-1"], [479, "index-10"], [479, "index-11"], [479, "index-12"], [479, "index-13"], [479, "index-14"], [479, "index-15"], [479, "index-16"], [479, "index-2"], [479, "index-22"], [479, "index-3"], [479, "index-4"], [479, "index-5"], [479, "index-6"], [479, "index-7"], [479, "index-8"], [479, "index-9"], [480, "index-0"], [480, "index-1"], [480, "index-10"], [480, "index-11"], [480, "index-12"], [480, "index-13"], [480, "index-14"], [480, "index-15"], [480, "index-16"], [480, "index-17"], [480, "index-18"], [480, "index-19"], [480, "index-2"], [480, "index-20"], [480, "index-21"], [480, "index-22"], [480, "index-23"], [480, "index-3"], [480, "index-4"], [480, "index-5"], [480, "index-6"], [480, "index-7"], [480, "index-9"], [481, "index-0"], [481, "index-1"], [481, "index-10"], [481, "index-11"], [481, "index-12"], [481, "index-13"], [481, "index-14"], [481, "index-15"], [481, "index-16"], [481, "index-17"], [481, "index-2"], [481, "index-3"], [481, "index-4"], [481, "index-5"], [481, "index-6"], [481, "index-8"], [481, "index-9"], [482, "index-0"], [482, "index-1"], [482, "index-10"], [482, "index-11"], [482, "index-12"], [482, "index-13"], [482, "index-14"], [482, "index-15"], [482, "index-16"], [482, "index-17"], [482, "index-18"], [482, "index-19"], [482, "index-2"], [482, "index-21"], [482, "index-24"], [482, "index-25"], [482, "index-26"], [482, "index-27"], [482, "index-28"], [482, "index-29"], [482, "index-3"], [482, "index-30"], [482, "index-31"], [482, "index-4"], [482, "index-5"], [482, "index-6"], [482, "index-7"], [482, "index-8"], [482, "index-9"], [483, "index-0"], [483, "index-1"], [483, "index-10"], [483, "index-11"], [483, "index-12"], [483, "index-14"], [483, "index-15"], [483, "index-16"], [483, "index-17"], [483, "index-18"], [483, "index-19"], [483, "index-2"], [483, "index-25"], [483, "index-3"], [483, "index-7"], [483, "index-8"], [483, "index-9"], [484, "index-0"], [484, "index-13"], [484, "index-14"], [484, "index-15"], [484, "index-16"], [484, "index-17"], [484, "index-18"], [484, "index-19"], [484, "index-2"], [484, "index-20"], [484, "index-21"], [484, "index-22"], [484, "index-23"], [484, "index-3"], [484, "index-4"], [484, "index-5"], [484, "index-6"], [484, "index-7"], [485, "index-0"], [485, "index-1"], [485, "index-10"], [485, "index-11"], [485, "index-12"], [485, "index-13"], [485, "index-14"], [485, "index-15"], [485, "index-16"], [485, "index-17"], [485, "index-18"], [485, "index-19"], [485, "index-2"], [485, "index-20"], [485, "index-21"], [485, "index-22"], [485, "index-23"], [485, "index-24"], [485, "index-25"], [485, "index-26"], [485, "index-27"], [485, "index-28"], [485, "index-29"], [485, "index-3"], [485, "index-30"], [485, "index-31"], [485, "index-32"], [485, "index-33"], [485, "index-34"], [485, "index-35"], [485, "index-4"], [485, "index-5"], [485, "index-6"], [485, "index-7"], [485, "index-8"], [485, "index-9"], [486, "index-0"], [486, "index-1"], [486, "index-2"], [486, "index-3"], [487, "index-0"], [487, "index-1"], [487, "index-10"], [487, "index-11"], [487, "index-12"], [487, "index-13"], [487, "index-14"], [487, "index-15"], [487, "index-16"], [487, "index-17"], [487, "index-19"], [487, "index-2"], [487, "index-20"], [487, "index-21"], [487, "index-22"], [487, "index-23"], [487, "index-24"], [487, "index-25"], [487, "index-26"], [487, "index-27"], [487, "index-28"], [487, "index-29"], [487, "index-3"], [487, "index-30"], [487, "index-31"], [487, "index-33"], [487, "index-34"], [487, "index-36"], [487, "index-37"], [487, "index-38"], [487, "index-39"], [487, "index-4"], [487, "index-40"], [487, "index-41"], [487, "index-5"], [487, "index-6"], [487, "index-7"], [487, "index-8"], [487, "index-9"], [488, "index-0"], [488, "index-10"], [488, "index-11"], [488, "index-12"], [488, "index-13"], [488, "index-14"], [488, "index-15"], [488, "index-16"], [488, "index-17"], [488, "index-18"], [488, "index-19"], [488, "index-2"], [488, "index-20"], [488, "index-22"], [488, "index-23"], [488, "index-24"], [488, "index-25"], [488, "index-26"], [488, "index-27"], [488, "index-28"], [488, "index-29"], [488, "index-3"], [488, "index-30"], [488, "index-31"], [488, "index-32"], [488, "index-34"], [488, "index-35"], [488, "index-36"], [488, "index-37"], [488, "index-38"], [488, "index-39"], [488, "index-4"], [488, "index-40"], [488, "index-41"], [488, "index-42"], [488, "index-5"], [488, "index-7"], [488, "index-8"], [488, "index-9"], [489, "index-0"], [489, "index-1"], [489, "index-14"], [489, "index-2"], [489, "index-3"], [489, "index-4"], [489, "index-5"], [489, "index-6"], [489, "index-9"], [490, "index-0"], [490, "index-1"], [490, "index-10"], [490, "index-12"], [490, "index-13"], [490, "index-14"], [490, "index-15"], [490, "index-16"], [490, "index-17"], [490, "index-18"], [490, "index-19"], [490, "index-2"], [490, "index-20"], [490, "index-21"], [490, "index-22"], [490, "index-25"], [490, "index-28"], [490, "index-29"], [490, "index-3"], [490, "index-30"], [490, "index-31"], [490, "index-32"], [490, "index-33"], [490, "index-34"], [490, "index-36"], [490, "index-37"], [490, "index-38"], [490, "index-4"], [490, "index-5"], [490, "index-6"], [490, "index-7"], [490, "index-8"], [490, "index-9"], [491, "index-0"], [491, "index-1"], [491, "index-10"], [491, "index-11"], [491, "index-12"], [491, "index-13"], [491, "index-14"], [491, "index-15"], [491, "index-16"], [491, "index-17"], [491, "index-18"], [491, "index-19"], [491, "index-2"], [491, "index-20"], [491, "index-21"], [491, "index-22"], [491, "index-23"], [491, "index-24"], [491, "index-25"], [491, "index-26"], [491, "index-27"], [491, "index-28"], [491, "index-29"], [491, "index-3"], [491, "index-30"], [491, "index-31"], [491, "index-32"], [491, "index-33"], [491, "index-34"], [491, "index-35"], [491, "index-36"], [491, "index-37"], [491, "index-38"], [491, "index-39"], [491, "index-4"], [491, "index-42"], [491, "index-43"], [491, "index-44"], [491, "index-45"], [491, "index-46"], [491, "index-47"], [491, "index-48"], [491, "index-49"], [491, "index-5"], [491, "index-51"], [491, "index-52"], [491, "index-6"], [491, "index-7"], [491, "index-8"], [491, "index-9"], [492, "index-0"], [492, "index-1"], [492, "index-10"], [492, "index-11"], [492, "index-12"], [492, "index-13"], [492, "index-14"], [492, "index-15"], [492, "index-16"], [492, "index-17"], [492, "index-18"], [492, "index-19"], [492, "index-2"], [492, "index-20"], [492, "index-21"], [492, "index-22"], [492, "index-23"], [492, "index-24"], [492, "index-25"], [492, "index-26"], [492, "index-27"], [492, "index-28"], [492, "index-29"], [492, "index-3"], [492, "index-30"], [492, "index-4"], [492, "index-45"], [492, "index-46"], [492, "index-47"], [492, "index-48"], [492, "index-49"], [492, "index-5"], [492, "index-50"], [492, "index-52"], [492, "index-6"], [492, "index-7"], [492, "index-8"], [492, "index-9"], [493, "index-0"], [493, "index-1"], [493, "index-10"], [493, "index-11"], [493, "index-12"], [493, "index-13"], [493, "index-14"], [493, "index-15"], [493, "index-16"], [493, "index-17"], [493, "index-18"], [493, "index-20"], [493, "index-22"], [493, "index-23"], [493, "index-24"], [493, "index-25"], [493, "index-26"], [493, "index-28"], [493, "index-29"], [493, "index-3"], [493, "index-30"], [493, "index-31"], [493, "index-32"], [493, "index-33"], [493, "index-34"], [493, "index-35"], [493, "index-36"], [493, "index-37"], [493, "index-4"], [493, "index-5"], [493, "index-6"], [493, "index-7"], [493, "index-8"], [493, "index-9"], [494, "index-0"], [494, "index-1"], [494, "index-10"], [494, "index-11"], [494, "index-13"], [494, "index-14"], [494, "index-15"], [494, "index-16"], [494, "index-17"], [494, "index-18"], [494, "index-19"], [494, "index-2"], [494, "index-20"], [494, "index-21"], [494, "index-22"], [494, "index-23"], [494, "index-24"], [494, "index-25"], [494, "index-28"], [494, "index-29"], [494, "index-3"], [494, "index-30"], [494, "index-32"], [494, "index-33"], [494, "index-37"], [494, "index-38"], [494, "index-5"], [494, "index-6"], [494, "index-7"], [494, "index-9"], [495, "index-0"], [495, "index-1"], [495, "index-10"], [495, "index-11"], [495, "index-12"], [495, "index-15"], [495, "index-16"], [495, "index-17"], [495, "index-18"], [495, "index-19"], [495, "index-23"], [495, "index-24"], [495, "index-26"], [495, "index-4"], [495, "index-5"], [495, "index-6"], [495, "index-7"], [495, "index-8"], [495, "index-9"], [496, "index-0"], [496, "index-1"], [496, "index-10"], [496, "index-11"], [496, "index-12"], [496, "index-13"], [496, "index-14"], [496, "index-15"], [496, "index-16"], [496, "index-17"], [496, "index-18"], [496, "index-19"], [496, "index-2"], [496, "index-20"], [496, "index-23"], [496, "index-24"], [496, "index-25"], [496, "index-26"], [496, "index-27"], [496, "index-29"], [496, "index-3"], [496, "index-4"], [496, "index-5"], [496, "index-6"], [496, "index-7"], [496, "index-8"], [496, "index-9"], [498, "index-23"]], "vectorcallfunc (c type)": [[10, "c.vectorcallfunc"]], "capsule": [[11, "index-0"]], "pycapsule (c type)": [[11, "c.PyCapsule"]], "pycapsule_checkexact (c function)": [[11, "c.PyCapsule_CheckExact"]], "pycapsule_destructor (c type)": [[11, "c.PyCapsule_Destructor"]], "pycapsule_getcontext (c function)": [[11, "c.PyCapsule_GetContext"]], "pycapsule_getdestructor (c function)": [[11, "c.PyCapsule_GetDestructor"]], "pycapsule_getname (c function)": [[11, "c.PyCapsule_GetName"]], "pycapsule_getpointer (c function)": [[11, "c.PyCapsule_GetPointer"]], "pycapsule_import (c function)": [[11, "c.PyCapsule_Import"]], "pycapsule_isvalid (c function)": [[11, "c.PyCapsule_IsValid"]], "pycapsule_new (c function)": [[11, "c.PyCapsule_New"]], "pycapsule_setcontext (c function)": [[11, "c.PyCapsule_SetContext"]], "pycapsule_setdestructor (c function)": [[11, "c.PyCapsule_SetDestructor"]], "pycapsule_setname (c function)": [[11, "c.PyCapsule_SetName"]], "pycapsule_setpointer (c function)": [[11, "c.PyCapsule_SetPointer"]], "pycellobject (c type)": [[12, "c.PyCellObject"]], "pycell_check (c function)": [[12, "c.PyCell_Check"]], "pycell_get (c function)": [[12, "c.PyCell_GET"], [12, "c.PyCell_Get"]], "pycell_new (c function)": [[12, "c.PyCell_New"]], "pycell_set (c function)": [[12, "c.PyCell_SET"], [12, "c.PyCell_Set"]], "pycell_type (c var)": [[12, "c.PyCell_Type"]], "pycodeobject (c type)": [[13, "c.PyCodeObject"]], "pycode_addr2line (c function)": [[13, "c.PyCode_Addr2Line"]], "pycode_addr2location (c function)": [[13, "c.PyCode_Addr2Location"]], "pycode_check (c function)": [[13, "c.PyCode_Check"]], "pycode_getcellvars (c function)": [[13, "c.PyCode_GetCellvars"]], "pycode_getcode (c function)": [[13, "c.PyCode_GetCode"]], "pycode_getfreevars (c function)": [[13, "c.PyCode_GetFreevars"]], "pycode_getnumfree (c function)": [[13, "c.PyCode_GetNumFree"]], "pycode_getvarnames (c function)": [[13, "c.PyCode_GetVarnames"]], "pycode_new (c function)": [[13, "c.PyCode_New"]], "pycode_newempty (c function)": [[13, "c.PyCode_NewEmpty"]], "pycode_newwithposonlyargs (c function)": [[13, "c.PyCode_NewWithPosOnlyArgs"]], "pycode_type (c var)": [[13, "c.PyCode_Type"]], "code": [[13, "index-0"], [170, "module-code"], [289, "index-1"], [360, "index-61"], [443, "index-57"], [444, "index-0"]], "code object": [[13, "index-0"], [289, "index-1"], [360, "index-61"], [443, "index-57"]], "pycodec_backslashreplaceerrors (c function)": [[14, "c.PyCodec_BackslashReplaceErrors"]], "pycodec_decode (c function)": [[14, "c.PyCodec_Decode"]], "pycodec_decoder (c function)": [[14, "c.PyCodec_Decoder"]], "pycodec_encode (c function)": [[14, "c.PyCodec_Encode"]], "pycodec_encoder (c function)": [[14, "c.PyCodec_Encoder"]], "pycodec_ignoreerrors (c function)": [[14, "c.PyCodec_IgnoreErrors"]], "pycodec_incrementaldecoder (c function)": [[14, "c.PyCodec_IncrementalDecoder"]], "pycodec_incrementalencoder (c function)": [[14, "c.PyCodec_IncrementalEncoder"]], "pycodec_knownencoding (c function)": [[14, "c.PyCodec_KnownEncoding"]], "pycodec_lookuperror (c function)": [[14, "c.PyCodec_LookupError"]], "pycodec_namereplaceerrors (c function)": [[14, "c.PyCodec_NameReplaceErrors"]], "pycodec_register (c function)": [[14, "c.PyCodec_Register"]], "pycodec_registererror (c function)": [[14, "c.PyCodec_RegisterError"]], "pycodec_replaceerrors (c function)": [[14, "c.PyCodec_ReplaceErrors"]], "pycodec_streamreader (c function)": [[14, "c.PyCodec_StreamReader"]], "pycodec_streamwriter (c function)": [[14, "c.PyCodec_StreamWriter"]], "pycodec_stricterrors (c function)": [[14, "c.PyCodec_StrictErrors"]], "pycodec_unregister (c function)": [[14, "c.PyCodec_Unregister"]], "pycodec_xmlcharrefreplaceerrors (c function)": [[14, "c.PyCodec_XMLCharRefReplaceErrors"]], "pycomplexobject (c type)": [[15, "c.PyComplexObject"]], "pycomplex_asccomplex (c function)": [[15, "c.PyComplex_AsCComplex"]], "pycomplex_check (c function)": [[15, "c.PyComplex_Check"]], "pycomplex_checkexact (c function)": [[15, "c.PyComplex_CheckExact"]], "pycomplex_fromccomplex (c function)": [[15, "c.PyComplex_FromCComplex"]], "pycomplex_fromdoubles (c function)": [[15, "c.PyComplex_FromDoubles"]], "pycomplex_imagasdouble (c function)": [[15, "c.PyComplex_ImagAsDouble"]], "pycomplex_realasdouble (c function)": [[15, "c.PyComplex_RealAsDouble"]], "pycomplex_type (c var)": [[15, "c.PyComplex_Type"]], "py_complex (c type)": [[15, "c.Py_complex"]], "_py_c_diff (c function)": [[15, "c._Py_c_diff"]], "_py_c_neg (c function)": [[15, "c._Py_c_neg"]], "_py_c_pow (c function)": [[15, "c._Py_c_pow"]], "_py_c_prod (c function)": [[15, "c._Py_c_prod"]], "_py_c_quot (c function)": [[15, "c._Py_c_quot"]], "_py_c_sum (c function)": [[15, "c._Py_c_sum"]], "complex number": [[15, "index-0"], [99, "term-complex-number"], [360, "index-11"], [360, "index-12"]], "mapping": [[16, "index-2"], [99, "term-mapping"], [360, "index-51"], [443, "index-30"], [443, "index-53"], [445, "index-42"], [451, "index-11"]], "numeric": [[16, "index-0"], [360, "index-11"], [360, "index-12"], [360, "index-14"], [360, "index-15"], [360, "index-8"], [443, "index-53"], [443, "index-9"]], "sequence": [[16, "index-1"], [99, "term-sequence"], [360, "index-17"], [360, "index-18"], [360, "index-19"], [360, "index-21"], [360, "index-22"], [360, "index-23"], [442, "index-6"], [443, "index-15"], [443, "index-53"], [445, "index-42"], [445, "index-45"], [445, "index-80"], [451, "index-10"]], "pycontext (c type)": [[17, "c.PyContext"]], "pycontexttoken (c type)": [[17, "c.PyContextToken"]], "pycontexttoken_checkexact (c function)": [[17, "c.PyContextToken_CheckExact"]], "pycontexttoken_type (c var)": [[17, "c.PyContextToken_Type"]], "pycontextvar (c type)": [[17, "c.PyContextVar"]], "pycontextvar_checkexact (c function)": [[17, "c.PyContextVar_CheckExact"]], "pycontextvar_get (c function)": [[17, "c.PyContextVar_Get"]], "pycontextvar_new (c function)": [[17, "c.PyContextVar_New"]], "pycontextvar_reset (c function)": [[17, "c.PyContextVar_Reset"]], "pycontextvar_set (c function)": [[17, "c.PyContextVar_Set"]], "pycontextvar_type (c var)": [[17, "c.PyContextVar_Type"]], "pycontext_checkexact (c function)": [[17, "c.PyContext_CheckExact"]], "pycontext_copy (c function)": [[17, "c.PyContext_Copy"]], "pycontext_copycurrent (c function)": [[17, "c.PyContext_CopyCurrent"]], "pycontext_enter (c function)": [[17, "c.PyContext_Enter"]], "pycontext_exit (c function)": [[17, "c.PyContext_Exit"]], "pycontext_new (c function)": [[17, "c.PyContext_New"]], "pycontext_type (c var)": [[17, "c.PyContext_Type"]], "pyos_double_to_string (c function)": [[18, "c.PyOS_double_to_string"]], "pyos_snprintf (c function)": [[18, "c.PyOS_snprintf"]], "pyos_stricmp (c function)": [[18, "c.PyOS_stricmp"]], "pyos_string_to_double (c function)": [[18, "c.PyOS_string_to_double"]], "pyos_strnicmp (c function)": [[18, "c.PyOS_strnicmp"]], "pyos_strtol (c function)": [[18, "c.PyOS_strtol"]], "pyos_strtoul (c function)": [[18, "c.PyOS_strtoul"]], "pyos_vsnprintf (c function)": [[18, "c.PyOS_vsnprintf"]], "pycoroobject (c type)": [[19, "c.PyCoroObject"]], "pycoro_checkexact (c function)": [[19, "c.PyCoro_CheckExact"]], "pycoro_new (c function)": [[19, "c.PyCoro_New"]], "pycoro_type (c var)": [[19, "c.PyCoro_Type"]], "pydatetime_check (c function)": [[20, "c.PyDateTime_Check"]], "pydatetime_checkexact (c function)": [[20, "c.PyDateTime_CheckExact"]], "pydatetime_date_get_fold (c function)": [[20, "c.PyDateTime_DATE_GET_FOLD"]], "pydatetime_date_get_hour (c function)": [[20, "c.PyDateTime_DATE_GET_HOUR"]], "pydatetime_date_get_microsecond (c function)": [[20, "c.PyDateTime_DATE_GET_MICROSECOND"]], "pydatetime_date_get_minute (c function)": [[20, "c.PyDateTime_DATE_GET_MINUTE"]], "pydatetime_date_get_second (c function)": [[20, "c.PyDateTime_DATE_GET_SECOND"]], "pydatetime_date_get_tzinfo (c function)": [[20, "c.PyDateTime_DATE_GET_TZINFO"]], "pydatetime_delta_get_days (c function)": [[20, "c.PyDateTime_DELTA_GET_DAYS"]], "pydatetime_delta_get_microseconds (c function)": [[20, "c.PyDateTime_DELTA_GET_MICROSECONDS"]], "pydatetime_delta_get_seconds (c function)": [[20, "c.PyDateTime_DELTA_GET_SECONDS"]], "pydatetime_date (c type)": [[20, "c.PyDateTime_Date"]], "pydatetime_datetime (c type)": [[20, "c.PyDateTime_DateTime"]], "pydatetime_datetimetype (c var)": [[20, "c.PyDateTime_DateTimeType"]], "pydatetime_datetype (c var)": [[20, "c.PyDateTime_DateType"]], "pydatetime_delta (c type)": [[20, "c.PyDateTime_Delta"]], "pydatetime_deltatype (c var)": [[20, "c.PyDateTime_DeltaType"]], "pydatetime_fromdateandtime (c function)": [[20, "c.PyDateTime_FromDateAndTime"]], "pydatetime_fromdateandtimeandfold (c function)": [[20, "c.PyDateTime_FromDateAndTimeAndFold"]], "pydatetime_fromtimestamp (c function)": [[20, "c.PyDateTime_FromTimestamp"]], "pydatetime_get_day (c function)": [[20, "c.PyDateTime_GET_DAY"]], "pydatetime_get_month (c function)": [[20, "c.PyDateTime_GET_MONTH"]], "pydatetime_get_year (c function)": [[20, "c.PyDateTime_GET_YEAR"]], "pydatetime_time_get_fold (c function)": [[20, "c.PyDateTime_TIME_GET_FOLD"]], "pydatetime_time_get_hour (c function)": [[20, "c.PyDateTime_TIME_GET_HOUR"]], "pydatetime_time_get_microsecond (c function)": [[20, "c.PyDateTime_TIME_GET_MICROSECOND"]], "pydatetime_time_get_minute (c function)": [[20, "c.PyDateTime_TIME_GET_MINUTE"]], "pydatetime_time_get_second (c function)": [[20, "c.PyDateTime_TIME_GET_SECOND"]], "pydatetime_time_get_tzinfo (c function)": [[20, "c.PyDateTime_TIME_GET_TZINFO"]], "pydatetime_tzinfotype (c var)": [[20, "c.PyDateTime_TZInfoType"]], "pydatetime_time (c type)": [[20, "c.PyDateTime_Time"]], "pydatetime_timetype (c var)": [[20, "c.PyDateTime_TimeType"]], "pydatetime_timezone_utc (c var)": [[20, "c.PyDateTime_TimeZone_UTC"]], "pydate_check (c function)": [[20, "c.PyDate_Check"]], "pydate_checkexact (c function)": [[20, "c.PyDate_CheckExact"]], "pydate_fromdate (c function)": [[20, "c.PyDate_FromDate"]], "pydate_fromtimestamp (c function)": [[20, "c.PyDate_FromTimestamp"]], "pydelta_check (c function)": [[20, "c.PyDelta_Check"]], "pydelta_checkexact (c function)": [[20, "c.PyDelta_CheckExact"]], "pydelta_fromdsu (c function)": [[20, "c.PyDelta_FromDSU"]], "pytzinfo_check (c function)": [[20, "c.PyTZInfo_Check"]], "pytzinfo_checkexact (c function)": [[20, "c.PyTZInfo_CheckExact"]], "pytimezone_fromoffset (c function)": [[20, "c.PyTimeZone_FromOffset"]], "pytimezone_fromoffsetandname (c function)": [[20, "c.PyTimeZone_FromOffsetAndName"]], "pytime_check (c function)": [[20, "c.PyTime_Check"]], "pytime_checkexact (c function)": [[20, "c.PyTime_CheckExact"]], "pytime_fromtime (c function)": [[20, "c.PyTime_FromTime"]], "pytime_fromtimeandfold (c function)": [[20, "c.PyTime_FromTimeAndFold"]], "pydescr_isdata (c function)": [[21, "c.PyDescr_IsData"]], "pydescr_newclassmethod (c function)": [[21, "c.PyDescr_NewClassMethod"]], "pydescr_newgetset (c function)": [[21, "c.PyDescr_NewGetSet"]], "pydescr_newmember (c function)": [[21, "c.PyDescr_NewMember"]], "pydescr_newmethod (c function)": [[21, "c.PyDescr_NewMethod"]], "pydescr_newwrapper (c function)": [[21, "c.PyDescr_NewWrapper"]], "pyproperty_type (c var)": [[21, "c.PyProperty_Type"]], "pywrapper_new (c function)": [[21, "c.PyWrapper_New"]], "pydictobject (c type)": [[22, "c.PyDictObject"]], "pydictproxy_new (c function)": [[22, "c.PyDictProxy_New"]], "pydict_check (c function)": [[22, "c.PyDict_Check"]], "pydict_checkexact (c function)": [[22, "c.PyDict_CheckExact"]], "pydict_clear (c function)": [[22, "c.PyDict_Clear"]], "pydict_contains (c function)": [[22, "c.PyDict_Contains"]], "pydict_copy (c function)": [[22, "c.PyDict_Copy"]], "pydict_delitem (c function)": [[22, "c.PyDict_DelItem"]], "pydict_delitemstring (c function)": [[22, "c.PyDict_DelItemString"]], "pydict_getitem (c function)": [[22, "c.PyDict_GetItem"]], "pydict_getitemstring (c function)": [[22, "c.PyDict_GetItemString"]], "pydict_getitemwitherror (c function)": [[22, "c.PyDict_GetItemWithError"]], "pydict_items (c function)": [[22, "c.PyDict_Items"]], "pydict_keys (c function)": [[22, "c.PyDict_Keys"]], "pydict_merge (c function)": [[22, "c.PyDict_Merge"]], "pydict_mergefromseq2 (c function)": [[22, "c.PyDict_MergeFromSeq2"]], "pydict_new (c function)": [[22, "c.PyDict_New"]], "pydict_next (c function)": [[22, "c.PyDict_Next"]], "pydict_setdefault (c function)": [[22, "c.PyDict_SetDefault"]], "pydict_setitem (c function)": [[22, "c.PyDict_SetItem"]], "pydict_setitemstring (c function)": [[22, "c.PyDict_SetItemString"]], "pydict_size (c function)": [[22, "c.PyDict_Size"]], "pydict_type (c var)": [[22, "c.PyDict_Type"]], "pydict_update (c function)": [[22, "c.PyDict_Update"]], "pydict_values (c function)": [[22, "c.PyDict_Values"]], "built-in function": [[22, "index-1"], [31, "index-1"], [31, "index-2"], [38, "index-1"], [38, "index-2"], [40, "index-0"], [47, "index-0"], [47, "index-1"], [47, "index-2"], [47, "index-3"], [47, "index-4"], [47, "index-5"], [49, "index-0"], [49, "index-1"], [49, "index-3"], [49, "index-6"], [49, "index-7"], [49, "index-8"], [53, "index-0"], [53, "index-1"], [54, "index-1"], [57, "index-0"], [57, "index-1"], [62, "index-1"], [62, "index-2"], [72, "create_shortcut"], [72, "directory_created"], [72, "file_created"], [72, "get_special_folder_path"], [87, "index-3"], [204, "index-1"], [239, "abs"], [239, "aiter"], [239, "all"], [239, "anext"], [239, "any"], [239, "ascii"], [239, "bin"], [239, "breakpoint"], [239, "callable"], [239, "chr"], [239, "classmethod"], [239, "compile"], [239, "delattr"], [239, "dir"], [239, "divmod"], [239, "enumerate"], [239, "eval"], [239, "exec"], [239, "filter"], [239, "format"], [239, "getattr"], [239, "globals"], [239, "hasattr"], [239, "hash"], [239, "help"], [239, "hex"], [239, "id"], [239, "import__"], [239, "index-2"], [239, "input"], [239, "isinstance"], [239, "issubclass"], [239, "iter"], [239, "len"], [239, "locals"], [239, "map"], [239, "max"], [239, "min"], [239, "next"], [239, "oct"], [239, "open"], [239, "ord"], [239, "pow"], [239, "print"], [239, "property.deleter"], [239, "property.getter"], [239, "property.setter"], [239, "repr"], [239, "reversed"], [239, "round"], [239, "setattr"], [239, "sorted"], [239, "staticmethod"], [239, "sum"], [239, "vars"], [239, "zip"], [298, "multiprocessing.Manager"], [322, "index-0"], [322, "index-2"], [360, "index-13"], [360, "index-19"], [360, "index-21"], [360, "index-51"], [360, "index-62"], [360, "index-63"], [360, "index-64"], [400, "index-3"], [428, "xml.etree.ElementInclude.default_loader"], [428, "xml.etree.ElementInclude.include"], [442, "index-8"], [443, "index-1"], [443, "index-100"], [443, "index-101"], [443, "index-102"], [443, "index-103"], [443, "index-104"], [443, "index-105"], [443, "index-15"], [443, "index-19"], [443, "index-27"], [443, "index-30"], [443, "index-42"], [443, "index-55"], [443, "index-69"], [443, "index-77"], [443, "index-78"], [443, "index-80"], [443, "index-86"], [443, "index-98"], [445, "index-53"], [451, "index-3"], [451, "index-44"], [452, "index-6"], [461, "index-0"], [466, "index-0"]], "dictionary": [[22, "index-0"], [99, "term-dictionary"], [360, "index-51"], [443, "index-31"], [443, "index-47"], [443, "index-80"], [445, "index-17"], [445, "index-18"], [445, "index-42"], [451, "index-11"]], "len": [[22, "index-1"], [38, "index-1"], [40, "index-0"], [49, "index-8"], [53, "index-0"], [54, "index-1"], [360, "index-19"], [360, "index-51"], [443, "index-15"], [443, "index-27"], [443, "index-30"], [443, "index-98"]], "keyboardinterrupt (built-in exception)": [[23, "index-1"], [23, "index-2"], [23, "index-3"]], "pep 3151": [[23, "index-5"], [227, "index-9"], [337, "index-0"], [343, "index-0"], [353, "index-2"], [490, "index-10"]], "pyerr_badargument (c function)": [[23, "c.PyErr_BadArgument"]], "pyerr_badinternalcall (c function)": [[23, "c.PyErr_BadInternalCall"]], "pyerr_checksignals (c function)": [[23, "c.PyErr_CheckSignals"]], "pyerr_clear (c function)": [[23, "c.PyErr_Clear"], [35, "index-12"], [35, "index-17"]], "pyerr_exceptionmatches (c function)": [[23, "c.PyErr_ExceptionMatches"], [35, "index-17"]], "pyerr_fetch (c function)": [[23, "c.PyErr_Fetch"], [87, "index-1"]], "pyerr_format (c function)": [[23, "c.PyErr_Format"]], "pyerr_formatv (c function)": [[23, "c.PyErr_FormatV"]], "pyerr_getexcinfo (c function)": [[23, "c.PyErr_GetExcInfo"]], "pyerr_gethandledexception (c function)": [[23, "c.PyErr_GetHandledException"]], "pyerr_givenexceptionmatches (c function)": [[23, "c.PyErr_GivenExceptionMatches"]], "pyerr_newexception (c function)": [[23, "c.PyErr_NewException"]], "pyerr_newexceptionwithdoc (c function)": [[23, "c.PyErr_NewExceptionWithDoc"]], "pyerr_nomemory (c function)": [[23, "c.PyErr_NoMemory"]], "pyerr_normalizeexception (c function)": [[23, "c.PyErr_NormalizeException"]], "pyerr_occurred (c function)": [[23, "c.PyErr_Occurred"], [35, "index-11"]], "pyerr_print (c function)": [[23, "c.PyErr_Print"]], "pyerr_printex (c function)": [[23, "c.PyErr_PrintEx"]], "pyerr_resourcewarning (c function)": [[23, "c.PyErr_ResourceWarning"]], "pyerr_restore (c function)": [[23, "c.PyErr_Restore"], [87, "index-1"]], "pyerr_setexcfromwindowserr (c function)": [[23, "c.PyErr_SetExcFromWindowsErr"]], "pyerr_setexcfromwindowserrwithfilename (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilename"]], "pyerr_setexcfromwindowserrwithfilenameobject (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilenameObject"]], "pyerr_setexcfromwindowserrwithfilenameobjects (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects"]], "pyerr_setexcinfo (c function)": [[23, "c.PyErr_SetExcInfo"]], "pyerr_setfromerrno (c function)": [[23, "c.PyErr_SetFromErrno"]], "pyerr_setfromerrnowithfilename (c function)": [[23, "c.PyErr_SetFromErrnoWithFilename"]], "pyerr_setfromerrnowithfilenameobject (c function)": [[23, "c.PyErr_SetFromErrnoWithFilenameObject"]], "pyerr_setfromerrnowithfilenameobjects (c function)": [[23, "c.PyErr_SetFromErrnoWithFilenameObjects"]], "pyerr_setfromwindowserr (c function)": [[23, "c.PyErr_SetFromWindowsErr"]], "pyerr_setfromwindowserrwithfilename (c function)": [[23, "c.PyErr_SetFromWindowsErrWithFilename"]], "pyerr_sethandledexception (c function)": [[23, "c.PyErr_SetHandledException"]], "pyerr_setimporterror (c function)": [[23, "c.PyErr_SetImportError"]], "pyerr_setimporterrorsubclass (c function)": [[23, "c.PyErr_SetImportErrorSubclass"]], "pyerr_setinterrupt (c function)": [[23, "c.PyErr_SetInterrupt"]], "pyerr_setinterruptex (c function)": [[23, "c.PyErr_SetInterruptEx"]], "pyerr_setnone (c function)": [[23, "c.PyErr_SetNone"]], "pyerr_setobject (c function)": [[23, "c.PyErr_SetObject"]], "pyerr_setstring (c function)": [[23, "c.PyErr_SetString"], [35, "index-12"]], "pyerr_syntaxlocation (c function)": [[23, "c.PyErr_SyntaxLocation"]], "pyerr_syntaxlocationex (c function)": [[23, "c.PyErr_SyntaxLocationEx"]], "pyerr_syntaxlocationobject (c function)": [[23, "c.PyErr_SyntaxLocationObject"]], "pyerr_warnex (c function)": [[23, "c.PyErr_WarnEx"]], "pyerr_warnexplicit (c function)": [[23, "c.PyErr_WarnExplicit"]], "pyerr_warnexplicitobject (c function)": [[23, "c.PyErr_WarnExplicitObject"]], "pyerr_warnformat (c function)": [[23, "c.PyErr_WarnFormat"]], "pyerr_writeunraisable (c function)": [[23, "c.PyErr_WriteUnraisable"]], "pyexc_arithmeticerror (c var)": [[23, "index-4"]], "pyexc_assertionerror (c var)": [[23, "index-4"]], "pyexc_attributeerror (c var)": [[23, "index-4"]], "pyexc_baseexception (c var)": [[23, "index-4"]], "pyexc_blockingioerror (c var)": [[23, "index-4"]], "pyexc_brokenpipeerror (c var)": [[23, "index-4"]], "pyexc_buffererror (c var)": [[23, "index-4"]], "pyexc_byteswarning (c var)": [[23, "index-7"]], "pyexc_childprocesserror (c var)": [[23, "index-4"]], "pyexc_connectionabortederror (c var)": [[23, "index-4"]], "pyexc_connectionerror (c var)": [[23, "index-4"]], "pyexc_connectionrefusederror (c var)": [[23, "index-4"]], "pyexc_connectionreseterror (c var)": [[23, "index-4"]], "pyexc_deprecationwarning (c var)": [[23, "index-7"]], "pyexc_eoferror (c var)": [[23, "index-4"]], "pyexc_environmenterror (c var)": [[23, "index-6"]], "pyexc_exception (c var)": [[23, "index-4"]], "pyexc_fileexistserror (c var)": [[23, "index-4"]], "pyexc_filenotfounderror (c var)": [[23, "index-4"]], "pyexc_floatingpointerror (c var)": [[23, "index-4"]], "pyexc_futurewarning (c var)": [[23, "index-7"]], "pyexc_generatorexit (c var)": [[23, "index-4"]], "pyexc_ioerror (c var)": [[23, "index-6"]], "pyexc_importerror (c var)": [[23, "index-4"]], "pyexc_importwarning (c var)": [[23, "index-7"]], "pyexc_indentationerror (c var)": [[23, "index-4"]], "pyexc_indexerror (c var)": [[23, "index-4"]], "pyexc_interruptederror (c var)": [[23, "index-4"]], "pyexc_isadirectoryerror (c var)": [[23, "index-4"]], "pyexc_keyerror (c var)": [[23, "index-4"]], "pyexc_keyboardinterrupt (c var)": [[23, "index-4"]], "pyexc_lookuperror (c var)": [[23, "index-4"]], "pyexc_memoryerror (c var)": [[23, "index-4"]], "pyexc_modulenotfounderror (c var)": [[23, "index-4"]], "pyexc_nameerror (c var)": [[23, "index-4"]], "pyexc_notadirectoryerror (c var)": [[23, "index-4"]], "pyexc_notimplementederror (c var)": [[23, "index-4"]], "pyexc_oserror (c var)": [[23, "index-4"]], "pyexc_overflowerror (c var)": [[23, "index-4"]], "pyexc_pendingdeprecationwarning (c var)": [[23, "index-7"]], "pyexc_permissionerror (c var)": [[23, "index-4"]], "pyexc_processlookuperror (c var)": [[23, "index-4"]], "pyexc_recursionerror (c var)": [[23, "index-4"]], "pyexc_referenceerror (c var)": [[23, "index-4"]], "pyexc_resourcewarning (c var)": [[23, "index-7"]], "pyexc_runtimeerror (c var)": [[23, "index-4"]], "pyexc_runtimewarning (c var)": [[23, "index-7"]], "pyexc_stopasynciteration (c var)": [[23, "index-4"]], "pyexc_stopiteration (c var)": [[23, "index-4"]], "pyexc_syntaxerror (c var)": [[23, "index-4"]], "pyexc_syntaxwarning (c var)": [[23, "index-7"]], "pyexc_systemerror (c var)": [[23, "index-4"]], "pyexc_systemexit (c var)": [[23, "index-4"]], "pyexc_taberror (c var)": [[23, "index-4"]], "pyexc_timeouterror (c var)": [[23, "index-4"]], "pyexc_typeerror (c var)": [[23, "index-4"]], "pyexc_unboundlocalerror (c var)": [[23, "index-4"]], "pyexc_unicodedecodeerror (c var)": [[23, "index-4"]], "pyexc_unicodeencodeerror (c var)": [[23, "index-4"]], "pyexc_unicodeerror (c var)": [[23, "index-4"]], "pyexc_unicodetranslateerror (c var)": [[23, "index-4"]], "pyexc_unicodewarning (c var)": [[23, "index-7"]], "pyexc_userwarning (c var)": [[23, "index-7"]], "pyexc_valueerror (c var)": [[23, "index-4"]], "pyexc_warning (c var)": [[23, "index-7"]], "pyexc_windowserror (c var)": [[23, "index-6"]], "pyexc_zerodivisionerror (c var)": [[23, "index-4"]], "pyexception_getcause (c function)": [[23, "c.PyException_GetCause"]], "pyexception_getcontext (c function)": [[23, "c.PyException_GetContext"]], "pyexception_gettraceback (c function)": [[23, "c.PyException_GetTraceback"]], "pyexception_setcause (c function)": [[23, "c.PyException_SetCause"]], "pyexception_setcontext (c function)": [[23, "c.PyException_SetContext"]], "pyexception_settraceback (c function)": [[23, "c.PyException_SetTraceback"]], "pysignal_setwakeupfd (c function)": [[23, "c.PySignal_SetWakeupFd"]], "pyunicodedecodeerror_create (c function)": [[23, "c.PyUnicodeDecodeError_Create"]], "pyunicodedecodeerror_getencoding (c function)": [[23, "c.PyUnicodeDecodeError_GetEncoding"]], "pyunicodedecodeerror_getend (c function)": [[23, "c.PyUnicodeDecodeError_GetEnd"]], "pyunicodedecodeerror_getobject (c function)": [[23, "c.PyUnicodeDecodeError_GetObject"]], "pyunicodedecodeerror_getreason (c function)": [[23, "c.PyUnicodeDecodeError_GetReason"]], "pyunicodedecodeerror_getstart (c function)": [[23, "c.PyUnicodeDecodeError_GetStart"]], "pyunicodedecodeerror_setend (c function)": [[23, "c.PyUnicodeDecodeError_SetEnd"]], "pyunicodedecodeerror_setreason (c function)": [[23, "c.PyUnicodeDecodeError_SetReason"]], "pyunicodedecodeerror_setstart (c function)": [[23, "c.PyUnicodeDecodeError_SetStart"]], "pyunicodeencodeerror_getencoding (c function)": [[23, "c.PyUnicodeEncodeError_GetEncoding"]], "pyunicodeencodeerror_getend (c function)": [[23, "c.PyUnicodeEncodeError_GetEnd"]], "pyunicodeencodeerror_getobject (c function)": [[23, "c.PyUnicodeEncodeError_GetObject"]], "pyunicodeencodeerror_getreason (c function)": [[23, "c.PyUnicodeEncodeError_GetReason"]], "pyunicodeencodeerror_getstart (c function)": [[23, "c.PyUnicodeEncodeError_GetStart"]], "pyunicodeencodeerror_setend (c function)": [[23, "c.PyUnicodeEncodeError_SetEnd"]], "pyunicodeencodeerror_setreason (c function)": [[23, "c.PyUnicodeEncodeError_SetReason"]], "pyunicodeencodeerror_setstart (c function)": [[23, "c.PyUnicodeEncodeError_SetStart"]], "pyunicodetranslateerror_getend (c function)": [[23, "c.PyUnicodeTranslateError_GetEnd"]], "pyunicodetranslateerror_getobject (c function)": [[23, "c.PyUnicodeTranslateError_GetObject"]], "pyunicodetranslateerror_getreason (c function)": [[23, "c.PyUnicodeTranslateError_GetReason"]], "pyunicodetranslateerror_getstart (c function)": [[23, "c.PyUnicodeTranslateError_GetStart"]], "pyunicodetranslateerror_setend (c function)": [[23, "c.PyUnicodeTranslateError_SetEnd"]], "pyunicodetranslateerror_setreason (c function)": [[23, "c.PyUnicodeTranslateError_SetReason"]], "pyunicodetranslateerror_setstart (c function)": [[23, "c.PyUnicodeTranslateError_SetStart"]], "py_enterrecursivecall (c function)": [[23, "c.Py_EnterRecursiveCall"]], "py_leaverecursivecall (c function)": [[23, "c.Py_LeaveRecursiveCall"]], "py_reprenter (c function)": [[23, "c.Py_ReprEnter"]], "py_reprleave (c function)": [[23, "c.Py_ReprLeave"]], "sigint (c macro)": [[23, "index-1"], [23, "index-2"]], "module": [[23, "index-1"], [23, "index-2"], [23, "index-3"], [33, "index-15"], [33, "index-22"], [33, "index-23"], [33, "index-38"], [33, "index-41"], [35, "index-18"], [45, "index-0"], [71, "module-distutils.archive_util"], [71, "module-distutils.bcppcompiler"], [71, "module-distutils.ccompiler"], [71, "module-distutils.cmd"], [71, "module-distutils.command"], [71, "module-distutils.command.bdist"], [71, "module-distutils.command.bdist_dumb"], [71, "module-distutils.command.bdist_packager"], [71, "module-distutils.command.bdist_rpm"], [71, "module-distutils.command.build"], [71, "module-distutils.command.build_clib"], [71, "module-distutils.command.build_ext"], [71, "module-distutils.command.build_py"], [71, "module-distutils.command.build_scripts"], [71, "module-distutils.command.check"], [71, "module-distutils.command.clean"], [71, "module-distutils.command.config"], [71, "module-distutils.command.install"], [71, "module-distutils.command.install_data"], [71, "module-distutils.command.install_headers"], [71, "module-distutils.command.install_lib"], [71, "module-distutils.command.install_scripts"], [71, "module-distutils.command.register"], [71, "module-distutils.command.sdist"], [71, "module-distutils.core"], [71, "module-distutils.cygwinccompiler"], [71, "module-distutils.debug"], [71, "module-distutils.dep_util"], [71, "module-distutils.dir_util"], [71, "module-distutils.dist"], [71, "module-distutils.errors"], [71, "module-distutils.extension"], [71, "module-distutils.fancy_getopt"], [71, "module-distutils.file_util"], [71, "module-distutils.filelist"], [71, "module-distutils.log"], [71, "module-distutils.msvccompiler"], [71, "module-distutils.spawn"], [71, "module-distutils.sysconfig"], [71, "module-distutils.text_file"], [71, "module-distutils.unixccompiler"], [71, "module-distutils.util"], [71, "module-distutils.version"], [99, "term-module"], [123, "module-lib2to3"], [124, "module-__future__"], [125, "module-__main__"], [126, "index-2"], [126, "module-_thread"], [127, "module-abc"], [128, "module-aifc"], [131, "module-argparse"], [132, "module-array"], [133, "module-ast"], [134, "module-asynchat"], [135, "module-asyncio"], [152, "module-asyncore"], [153, "module-atexit"], [154, "module-audioop"], [156, "module-base64"], [157, "module-bdb"], [159, "index-0"], [159, "module-binascii"], [160, "module-bisect"], [161, "module-builtins"], [162, "module-bz2"], [163, "module-calendar"], [164, "module-cgi"], [165, "module-cgitb"], [166, "module-chunk"], [167, "index-1"], [167, "module-cmath"], [168, "module-cmd"], [170, "module-code"], [171, "module-codecs"], [171, "module-encodings.idna"], [171, "module-encodings.mbcs"], [171, "module-encodings.utf_8_sig"], [172, "module-codeop"], [173, "module-collections"], [174, "module-collections.abc"], [175, "module-colorsys"], [176, "module-compileall"], [179, "module-concurrent.futures"], [180, "module-configparser"], [182, "module-contextlib"], [183, "module-contextvars"], [184, "index-0"], [184, "module-copy"], [185, "index-0"], [185, "module-copyreg"], [186, "module-crypt"], [188, "module-csv"], [189, "module-ctypes"], [190, "module-curses"], [190, "module-curses.textpad"], [191, "module-curses.ascii"], [192, "module-curses.panel"], [194, "module-dataclasses"], [196, "module-datetime"], [197, "module-dbm"], [197, "module-dbm.dumb"], [197, "module-dbm.gnu"], [197, "module-dbm.ndbm"], [199, "module-decimal"], [202, "module-tkinter.commondialog"], [202, "module-tkinter.filedialog"], [202, "module-tkinter.simpledialog"], [203, "module-difflib"], [204, "module-dis"], [206, "module-distutils"], [207, "module-doctest"], [208, "module-email"], [209, "module-email.charset"], [211, "module-email.contentmanager"], [212, "module-email.encoders"], [213, "module-email.errors"], [215, "module-email.generator"], [216, "module-email.header"], [217, "module-email.headerregistry"], [218, "module-email.iterators"], [219, "module-email.message"], [220, "module-email.mime"], [220, "module-email.mime.application"], [220, "module-email.mime.audio"], [220, "module-email.mime.base"], [220, "module-email.mime.image"], [220, "module-email.mime.message"], [220, "module-email.mime.multipart"], [220, "module-email.mime.nonmultipart"], [220, "module-email.mime.text"], [221, "module-email.parser"], [222, "module-email.policy"], [223, "module-email.utils"], [224, "module-ensurepip"], [225, "module-enum"], [226, "module-errno"], [227, "index-5"], [228, "module-faulthandler"], [229, "module-fcntl"], [230, "module-filecmp"], [232, "module-fileinput"], [234, "index-1"], [234, "index-3"], [234, "module-fnmatch"], [235, "module-fractions"], [237, "module-ftplib"], [239, "index-13"], [239, "index-8"], [240, "module-functools"], [241, "module-gc"], [242, "module-getopt"], [243, "module-getpass"], [244, "module-gettext"], [245, "module-glob"], [246, "module-graphlib"], [247, "module-grp"], [248, "module-gzip"], [249, "module-hashlib"], [250, "module-heapq"], [251, "module-hmac"], [252, "module-html"], [253, "module-html.entities"], [254, "module-html.parser"], [255, "module-http"], [256, "index-1"], [256, "module-http.client"], [257, "module-http.cookiejar"], [258, "module-http.cookies"], [259, "module-http.server"], [261, "module-idlelib"], [262, "module-imaplib"], [263, "module-imghdr"], [264, "module-imp"], [265, "module-importlib"], [265, "module-importlib.abc"], [265, "module-importlib.machinery"], [265, "module-importlib.util"], [266, "module-importlib.metadata"], [267, "module-importlib.resources"], [268, "module-importlib.resources.abc"], [270, "module-inspect"], [271, "index-1"], [273, "module-io"], [274, "module-ipaddress"], [276, "module-itertools"], [277, "module-json"], [277, "module-json.tool"], [278, "module-keyword"], [280, "index-0"], [280, "module-linecache"], [281, "index-0"], [281, "module-locale"], [282, "module-logging"], [283, "module-logging.config"], [284, "module-logging.handlers"], [285, "module-lzma"], [286, "module-mailbox"], [287, "module-mailcap"], [289, "index-0"], [289, "module-marshal"], [290, "module-math"], [291, "module-mimetypes"], [293, "module-mmap"], [294, "module-modulefinder"], [296, "module-msilib"], [297, "module-msvcrt"], [298, "module-multiprocessing"], [298, "module-multiprocessing.connection"], [298, "module-multiprocessing.dummy"], [298, "module-multiprocessing.managers"], [298, "module-multiprocessing.pool"], [298, "module-multiprocessing.sharedctypes"], [299, "module-multiprocessing.shared_memory"], [301, "module-netrc"], [302, "module-nis"], [303, "module-nntplib"], [304, "module-numbers"], [306, "module-operator"], [307, "module-optparse"], [308, "index-23"], [308, "index-30"], [308, "module-os"], [309, "index-2"], [309, "module-os.path"], [310, "module-ossaudiodev"], [311, "module-pathlib"], [312, "index-1"], [312, "module-pdb"], [314, "module-pickle"], [315, "module-pickletools"], [316, "module-pipes"], [317, "module-pkgutil"], [318, "module-platform"], [319, "module-plistlib"], [320, "module-poplib"], [321, "index-0"], [321, "module-posix"], [322, "module-pprint"], [323, "module-cProfile"], [323, "module-profile"], [323, "module-pstats"], [324, "module-pty"], [325, "index-0"], [325, "module-pwd"], [326, "module-py_compile"], [327, "module-pyclbr"], [328, "module-pydoc"], [329, "index-1"], [329, "module-xml.parsers.expat"], [329, "module-xml.parsers.expat.errors"], [329, "module-xml.parsers.expat.model"], [331, "module-queue"], [332, "module-quopri"], [333, "module-random"], [334, "module-re"], [335, "module-readline"], [336, "module-reprlib"], [337, "module-resource"], [338, "module-rlcompleter"], [339, "index-0"], [339, "index-4"], [339, "module-runpy"], [340, "module-sched"], [341, "module-secrets"], [343, "module-select"], [344, "module-selectors"], [345, "index-0"], [345, "index-1"], [345, "module-shelve"], [346, "module-shlex"], [347, "module-shutil"], [348, "module-signal"], [349, "index-0"], [349, "module-site"], [349, "module-sitecustomize"], [349, "module-usercustomize"], [350, "module-smtpd"], [351, "module-smtplib"], [352, "module-sndhdr"], [353, "index-14"], [353, "module-socket"], [354, "module-socketserver"], [355, "module-spwd"], [356, "module-sqlite3"], [357, "module-ssl"], [358, "module-stat"], [359, "module-statistics"], [360, "index-15"], [360, "index-32"], [360, "index-39"], [360, "index-64"], [361, "module-string"], [362, "module-stringprep"], [363, "module-struct"], [364, "module-subprocess"], [365, "module-sunau"], [367, "module-symtable"], [368, "index-21"], [368, "module-sys"], [370, "module-sysconfig"], [371, "module-syslog"], [372, "module-tabnanny"], [373, "module-tarfile"], [374, "module-telnetlib"], [375, "module-tempfile"], [376, "module-termios"], [377, "module-test"], [377, "module-test.regrtest"], [377, "module-test.support"], [377, "module-test.support.bytecode_helper"], [377, "module-test.support.import_helper"], [377, "module-test.support.os_helper"], [377, "module-test.support.script_helper"], [377, "module-test.support.socket_helper"], [377, "module-test.support.threading_helper"], [377, "module-test.support.warnings_helper"], [379, "module-textwrap"], [380, "module-threading"], [381, "module-time"], [382, "module-timeit"], [384, "module-_tkinter"], [384, "module-tkinter"], [385, "module-tkinter.colorchooser"], [386, "module-tkinter.dnd"], [387, "module-tkinter.font"], [388, "module-tkinter.messagebox"], [389, "module-tkinter.scrolledtext"], [390, "module-tkinter.tix"], [391, "module-tkinter.ttk"], [392, "module-token"], [393, "module-tokenize"], [394, "module-tomllib"], [395, "module-trace"], [396, "module-traceback"], [397, "module-tracemalloc"], [398, "module-tty"], [399, "module-turtle"], [399, "module-turtledemo"], [400, "module-types"], [401, "module-typing"], [402, "module-unicodedata"], [403, "module-unittest"], [404, "module-unittest.mock"], [407, "module-urllib"], [408, "module-urllib.error"], [409, "module-urllib.parse"], [410, "module-urllib.request"], [410, "module-urllib.response"], [411, "module-urllib.robotparser"], [412, "module-uu"], [413, "module-uuid"], [414, "module-venv"], [415, "module-warnings"], [416, "module-wave"], [417, "module-weakref"], [418, "module-webbrowser"], [420, "module-winreg"], [421, "module-winsound"], [422, "module-wsgiref"], [422, "module-wsgiref.handlers"], [422, "module-wsgiref.headers"], [422, "module-wsgiref.simple_server"], [422, "module-wsgiref.types"], [422, "module-wsgiref.util"], [422, "module-wsgiref.validate"], [423, "module-xdrlib"], [424, "module-xml"], [425, "module-xml.dom"], [426, "module-xml.dom.minidom"], [427, "module-xml.dom.pulldom"], [428, "module-xml.etree.ElementInclude"], [428, "module-xml.etree.ElementTree"], [429, "module-xml.sax"], [430, "module-xml.sax.handler"], [431, "module-xml.sax.xmlreader"], [432, "module-xml.sax.saxutils"], [434, "module-xmlrpc.client"], [435, "module-xmlrpc.server"], [436, "module-zipapp"], [437, "module-zipfile"], [438, "module-zipimport"], [439, "module-zlib"], [440, "module-zoneinfo"], [442, "index-11"], [443, "index-23"], [443, "index-24"], [443, "index-32"], [443, "index-4"], [443, "index-44"], [443, "index-45"], [443, "index-55"], [444, "index-10"], [445, "index-40"], [451, "index-34"], [452, "index-2"], [452, "index-3"], [461, "index-1"], [465, "index-0"], [465, "index-4"], [465, "index-7"]], "signal": [[23, "index-1"], [23, "index-2"], [23, "index-3"], [126, "index-2"], [348, "module-signal"]], "strerror (c function)": [[23, "index-0"]], "eoferror (built-in exception)": [[24, "index-1"]], "pyfile_fromfd (c function)": [[24, "c.PyFile_FromFd"]], "pyfile_getline (c function)": [[24, "c.PyFile_GetLine"]], "pyfile_setopencodehook (c function)": [[24, "c.PyFile_SetOpenCodeHook"]], "pyfile_writeobject (c function)": [[24, "c.PyFile_WriteObject"]], "pyfile_writestring (c function)": [[24, "c.PyFile_WriteString"]], "pyobject_asfiledescriptor (c function)": [[24, "c.PyObject_AsFileDescriptor"]], "py_opencodehookfunction (c type)": [[24, "c.Py_OpenCodeHookFunction"]], "py_print_raw (c macro)": [[24, "index-2"], [49, "c.Py_PRINT_RAW"]], "file": [[24, "index-0"], [176, "cmdoption-compileall-arg-file"], [180, "index-0"], [239, "index-6"], [248, "cmdoption-gzip-arg-file"], [264, "index-1"], [291, "index-2"], [312, "index-2"], [319, "index-0"], [321, "index-1"], [326, "index-0"], [347, "index-0"], [349, "index-4"], [375, "index-0"], [461, "index-0"]], "pyfloatobject (c type)": [[25, "c.PyFloatObject"]], "pyfloat_as_double (c function)": [[25, "c.PyFloat_AS_DOUBLE"]], "pyfloat_asdouble (c function)": [[25, "c.PyFloat_AsDouble"]], "pyfloat_check (c function)": [[25, "c.PyFloat_Check"]], "pyfloat_checkexact (c function)": [[25, "c.PyFloat_CheckExact"]], "pyfloat_fromdouble (c function)": [[25, "c.PyFloat_FromDouble"]], "pyfloat_fromstring (c function)": [[25, "c.PyFloat_FromString"]], "pyfloat_getinfo (c function)": [[25, "c.PyFloat_GetInfo"]], "pyfloat_getmax (c function)": [[25, "c.PyFloat_GetMax"]], "pyfloat_getmin (c function)": [[25, "c.PyFloat_GetMin"]], "pyfloat_pack2 (c function)": [[25, "c.PyFloat_Pack2"]], "pyfloat_pack4 (c function)": [[25, "c.PyFloat_Pack4"]], "pyfloat_pack8 (c function)": [[25, "c.PyFloat_Pack8"]], "pyfloat_type (c var)": [[25, "c.PyFloat_Type"]], "pyfloat_unpack2 (c function)": [[25, "c.PyFloat_Unpack2"]], "pyfloat_unpack4 (c function)": [[25, "c.PyFloat_Unpack4"]], "pyfloat_unpack8 (c function)": [[25, "c.PyFloat_Unpack8"]], "floating point": [[25, "index-0"], [360, "index-11"], [360, "index-12"], [443, "index-13"]], "pyframeobject (c type)": [[26, "c.PyFrameObject"]], "pyframe_check (c function)": [[26, "c.PyFrame_Check"]], "pyframe_getback (c function)": [[26, "c.PyFrame_GetBack"]], "pyframe_getbuiltins (c function)": [[26, "c.PyFrame_GetBuiltins"]], "pyframe_getcode (c function)": [[26, "c.PyFrame_GetCode"]], "pyframe_getgenerator (c function)": [[26, "c.PyFrame_GetGenerator"]], "pyframe_getglobals (c function)": [[26, "c.PyFrame_GetGlobals"]], "pyframe_getlasti (c function)": [[26, "c.PyFrame_GetLasti"]], "pyframe_getlinenumber (c function)": [[26, "c.PyFrame_GetLineNumber"]], "pyframe_getlocals (c function)": [[26, "c.PyFrame_GetLocals"]], "pyframe_type (c var)": [[26, "c.PyFrame_Type"]], "methodtype (in module types)": [[27, "index-1"], [44, "index-2"], [400, "types.MethodType"]], "pyfunctionobject (c type)": [[27, "c.PyFunctionObject"]], "pyfunction_check (c function)": [[27, "c.PyFunction_Check"]], "pyfunction_getannotations (c function)": [[27, "c.PyFunction_GetAnnotations"]], "pyfunction_getclosure (c function)": [[27, "c.PyFunction_GetClosure"]], "pyfunction_getcode (c function)": [[27, "c.PyFunction_GetCode"]], "pyfunction_getdefaults (c function)": [[27, "c.PyFunction_GetDefaults"]], "pyfunction_getglobals (c function)": [[27, "c.PyFunction_GetGlobals"]], "pyfunction_getmodule (c function)": [[27, "c.PyFunction_GetModule"]], "pyfunction_new (c function)": [[27, "c.PyFunction_New"]], "pyfunction_newwithqualname (c function)": [[27, "c.PyFunction_NewWithQualName"]], "pyfunction_setannotations (c function)": [[27, "c.PyFunction_SetAnnotations"]], "pyfunction_setclosure (c function)": [[27, "c.PyFunction_SetClosure"]], "pyfunction_setdefaults (c function)": [[27, "c.PyFunction_SetDefaults"]], "pyfunction_type (c var)": [[27, "c.PyFunction_Type"]], "function": [[27, "index-0"], [99, "term-function"], [442, "index-28"], [442, "index-34"], [443, "index-33"], [443, "index-34"], [443, "index-39"], [443, "index-40"], [443, "index-41"], [443, "index-42"], [445, "index-23"], [445, "index-52"], [445, "index-53"], [445, "index-90"], [451, "index-24"], [451, "index-26"], [456, "index-6"]], "pygc_collect (c function)": [[28, "c.PyGC_Collect"]], "pygc_disable (c function)": [[28, "c.PyGC_Disable"]], "pygc_enable (c function)": [[28, "c.PyGC_Enable"]], "pygc_isenabled (c function)": [[28, "c.PyGC_IsEnabled"]], "pyobject_gc_del (c function)": [[28, "c.PyObject_GC_Del"]], "pyobject_gc_isfinalized (c function)": [[28, "c.PyObject_GC_IsFinalized"]], "pyobject_gc_istracked (c function)": [[28, "c.PyObject_GC_IsTracked"]], "pyobject_gc_new (c macro)": [[28, "c.PyObject_GC_New"]], "pyobject_gc_newvar (c macro)": [[28, "c.PyObject_GC_NewVar"]], "pyobject_gc_resize (c macro)": [[28, "c.PyObject_GC_Resize"]], "pyobject_gc_track (c function)": [[28, "c.PyObject_GC_Track"]], "pyobject_gc_untrack (c function)": [[28, "c.PyObject_GC_UnTrack"]], "pyobject_is_gc (c function)": [[28, "c.PyObject_IS_GC"]], "py_visit (c function)": [[28, "c.Py_VISIT"]], "inquiry (c type)": [[28, "c.inquiry"]], "traverseproc (c type)": [[28, "c.traverseproc"]], "visitproc (c type)": [[28, "c.visitproc"]], "pygenobject (c type)": [[29, "c.PyGenObject"]], "pygen_check (c function)": [[29, "c.PyGen_Check"]], "pygen_checkexact (c function)": [[29, "c.PyGen_CheckExact"]], "pygen_new (c function)": [[29, "c.PyGen_New"]], "pygen_newwithqualname (c function)": [[29, "c.PyGen_NewWithQualName"]], "pygen_type (c var)": [[29, "c.PyGen_Type"]], "pep 456": [[30, "index-0"], [491, "index-13"], [491, "index-47"]], "pyhash_funcdef (c type)": [[30, "c.PyHash_FuncDef"]], "pyhash_funcdef.hash_bits (c member)": [[30, "c.PyHash_FuncDef.hash_bits"]], "pyhash_funcdef.name (c member)": [[30, "c.PyHash_FuncDef.name"]], "pyhash_funcdef.seed_bits (c member)": [[30, "c.PyHash_FuncDef.seed_bits"]], "pyhash_getfuncdef (c function)": [[30, "c.PyHash_GetFuncDef"]], "py_hash_t (c type)": [[30, "c.Py_hash_t"]], "py_uhash_t (c type)": [[30, "c.Py_uhash_t"]], "pep 3147": [[31, "index-3"], [71, "index-3"], [97, "index-3"], [176, "index-0"], [176, "index-2"], [176, "index-3"], [264, "index-2"], [264, "index-3"], [264, "index-4"], [264, "index-5"], [264, "index-6"], [265, "index-11"], [265, "index-21"], [265, "index-23"], [265, "index-24"], [326, "index-1"], [326, "index-4"], [339, "index-2"], [377, "index-3"], [447, "index-13"], [465, "index-3"], [489, "index-5"], [490, "index-18"]], "pyimport_addmodule (c function)": [[31, "c.PyImport_AddModule"]], "pyimport_addmoduleobject (c function)": [[31, "c.PyImport_AddModuleObject"]], "pyimport_appendinittab (c function)": [[31, "c.PyImport_AppendInittab"]], "pyimport_execcodemodule (c function)": [[31, "c.PyImport_ExecCodeModule"]], "pyimport_execcodemoduleex (c function)": [[31, "c.PyImport_ExecCodeModuleEx"]], "pyimport_execcodemoduleobject (c function)": [[31, "c.PyImport_ExecCodeModuleObject"]], "pyimport_execcodemodulewithpathnames (c function)": [[31, "c.PyImport_ExecCodeModuleWithPathnames"]], "pyimport_extendinittab (c function)": [[31, "c.PyImport_ExtendInittab"]], "pyimport_frozenmodules (c var)": [[31, "c.PyImport_FrozenModules"]], "pyimport_getimporter (c function)": [[31, "c.PyImport_GetImporter"]], "pyimport_getmagicnumber (c function)": [[31, "c.PyImport_GetMagicNumber"]], "pyimport_getmagictag (c function)": [[31, "c.PyImport_GetMagicTag"]], "pyimport_getmodule (c function)": [[31, "c.PyImport_GetModule"]], "pyimport_getmoduledict (c function)": [[31, "c.PyImport_GetModuleDict"]], "pyimport_import (c function)": [[31, "c.PyImport_Import"]], "pyimport_importfrozenmodule (c function)": [[31, "c.PyImport_ImportFrozenModule"]], "pyimport_importfrozenmoduleobject (c function)": [[31, "c.PyImport_ImportFrozenModuleObject"]], "pyimport_importmodule (c function)": [[31, "c.PyImport_ImportModule"]], "pyimport_importmoduleex (c function)": [[31, "c.PyImport_ImportModuleEx"]], "pyimport_importmodulelevel (c function)": [[31, "c.PyImport_ImportModuleLevel"]], "pyimport_importmodulelevelobject (c function)": [[31, "c.PyImport_ImportModuleLevelObject"]], "pyimport_importmodulenoblock (c function)": [[31, "c.PyImport_ImportModuleNoBlock"]], "pyimport_reloadmodule (c function)": [[31, "c.PyImport_ReloadModule"]], "__all__": [[31, "index-0"], [465, "index-8"]], "__all__ (package variable)": [[31, "index-0"]], "__import__": [[31, "index-1"]], "_frozen (c struct)": [[31, "c._frozen"]], "_inittab (c struct)": [[31, "c._inittab"]], "_inittab.initfunc (c member)": [[31, "c._inittab.initfunc"]], "_inittab.name (c member)": [[31, "c._inittab.name"]], "compile": [[31, "index-2"], [360, "index-62"], [400, "index-3"], [451, "index-44"]], "freeze utility": [[31, "index-4"]], "modules (in module sys)": [[31, "index-0"], [33, "index-15"], [368, "sys.modules"]], "package variable": [[31, "index-0"]], "pep 523": [[33, "index-39"], [33, "index-40"], [488, "index-37"], [493, "index-25"], [493, "index-26"], [496, "index-24"]], "pep 528": [[33, "index-10"], [34, "index-16"], [476, "index-16"], [493, "index-22"]], "pep 529": [[33, "index-8"], [63, "index-6"], [308, "index-27"], [368, "index-34"], [368, "index-9"], [470, "index-41"], [476, "index-17"], [493, "index-20"], [495, "index-19"]], "pep 539": [[33, "index-45"], [494, "index-14"], [494, "index-15"]], "pythondebug": [[33, "index-0"], [34, "index-21"], [470, "envvar-PYTHONDEBUG"], [470, "index-2"]], "pythondontwritebytecode": [[33, "index-1"], [34, "index-30"], [97, "index-4"], [368, "index-6"], [470, "envvar-PYTHONDONTWRITEBYTECODE"], [470, "index-1"], [483, "index-20"], [483, "index-24"]], "pythonhashseed": [[33, "index-2"], [33, "index-3"], [34, "index-11"], [443, "index-81"], [470, "envvar-PYTHONHASHSEED"], [470, "index-13"], [470, "index-14"], [470, "index-36"], [490, "index-23"], [490, "index-35"]], "pythonhome": [[33, "index-30"], [33, "index-31"], [33, "index-5"], [34, "index-12"], [35, "index-21"], [35, "index-24"], [121, "index-0"], [121, "index-1"], [369, "index-2"], [369, "index-4"], [377, "index-0"], [470, "envvar-PYTHONHOME"], [470, "index-29"], [470, "index-30"], [470, "index-33"], [470, "index-4"], [476, "index-33"], [476, "index-35"], [476, "index-37"], [493, "index-2"]], "pythoninspect": [[33, "index-6"], [34, "index-14"], [470, "envvar-PYTHONINSPECT"], [470, "index-6"], [480, "index-28"]], "pythonioencoding": [[33, "index-17"], [33, "index-18"], [34, "index-25"], [308, "index-1"], [368, "index-35"], [470, "envvar-PYTHONIOENCODING"], [470, "index-42"], [483, "index-21"], [491, "index-53"]], "pythonlegacywindowsfsencoding": [[33, "index-7"], [34, "index-1"], [368, "index-33"], [470, "envvar-PYTHONLEGACYWINDOWSFSENCODING"], [493, "index-19"]], "pythonlegacywindowsstdio": [[33, "index-9"], [34, "index-15"], [368, "index-37"], [470, "envvar-PYTHONLEGACYWINDOWSSTDIO"], [470, "index-37"], [493, "index-21"]], "pythonnousersite": [[33, "index-11"], [34, "index-27"], [349, "index-6"], [470, "envvar-PYTHONNOUSERSITE"], [470, "index-15"], [483, "index-6"]], "pythonoptimize": [[33, "index-12"], [34, "index-20"], [470, "envvar-PYTHONOPTIMIZE"], [470, "index-8"]], "pythonpath": [[33, "index-4"], [34, "index-19"], [35, "index-22"], [35, "index-25"], [83, "index-0"], [121, "index-2"], [121, "index-3"], [164, "index-4"], [368, "index-22"], [368, "index-23"], [369, "index-0"], [369, "index-1"], [377, "index-1"], [447, "index-17"], [447, "index-18"], [465, "index-1"], [465, "index-5"], [465, "index-6"], [470, "envvar-PYTHONPATH"], [470, "index-3"], [470, "index-32"], [470, "index-34"], [470, "index-35"], [474, "index-0"], [476, "index-11"], [476, "index-32"], [476, "index-34"], [476, "index-36"], [491, "index-55"], [491, "index-56"]], "pythonunbuffered": [[33, "index-13"], [34, "index-5"], [368, "index-38"], [470, "envvar-PYTHONUNBUFFERED"], [470, "index-17"]], "pythonverbose": [[33, "index-14"], [34, "index-28"], [470, "envvar-PYTHONVERBOSE"], [470, "index-18"]], "pyeval_acquirelock (c function)": [[33, "c.PyEval_AcquireLock"]], "pyeval_acquirethread (c function)": [[33, "c.PyEval_AcquireThread"]], "pyeval_acquirethread()": [[33, "index-37"]], "pyeval_initthreads (c function)": [[33, "c.PyEval_InitThreads"]], "pyeval_initthreads()": [[33, "index-15"]], "pyeval_releaselock (c function)": [[33, "c.PyEval_ReleaseLock"]], "pyeval_releasethread (c function)": [[33, "c.PyEval_ReleaseThread"]], "pyeval_releasethread()": [[33, "index-37"]], "pyeval_restorethread (c function)": [[33, "c.PyEval_RestoreThread"], [33, "index-36"]], "pyeval_restorethread()": [[33, "index-37"]], "pyeval_savethread (c function)": [[33, "c.PyEval_SaveThread"], [33, "index-36"]], "pyeval_savethread()": [[33, "index-37"]], "pyeval_setprofile (c function)": [[33, "c.PyEval_SetProfile"]], "pyeval_settrace (c function)": [[33, "c.PyEval_SetTrace"]], "pyeval_threadsinitialized (c function)": [[33, "c.PyEval_ThreadsInitialized"]], "pygilstate_check (c function)": [[33, "c.PyGILState_Check"]], "pygilstate_ensure (c function)": [[33, "c.PyGILState_Ensure"]], "pygilstate_getthisthreadstate (c function)": [[33, "c.PyGILState_GetThisThreadState"]], "pygilstate_release (c function)": [[33, "c.PyGILState_Release"]], "pyinterpreterstate (c type)": [[33, "c.PyInterpreterState"]], "pyinterpreterstate_clear (c function)": [[33, "c.PyInterpreterState_Clear"]], "pyinterpreterstate_delete (c function)": [[33, "c.PyInterpreterState_Delete"]], "pyinterpreterstate_get (c function)": [[33, "c.PyInterpreterState_Get"]], "pyinterpreterstate_getdict (c function)": [[33, "c.PyInterpreterState_GetDict"]], "pyinterpreterstate_getid (c function)": [[33, "c.PyInterpreterState_GetID"]], "pyinterpreterstate_head (c function)": [[33, "c.PyInterpreterState_Head"]], "pyinterpreterstate_main (c function)": [[33, "c.PyInterpreterState_Main"]], "pyinterpreterstate_new (c function)": [[33, "c.PyInterpreterState_New"]], "pyinterpreterstate_next (c function)": [[33, "c.PyInterpreterState_Next"]], "pyinterpreterstate_threadhead (c function)": [[33, "c.PyInterpreterState_ThreadHead"]], "pysys_setargv (c function)": [[33, "c.PySys_SetArgv"], [33, "index-15"]], "pysys_setargvex (c function)": [[33, "c.PySys_SetArgvEx"], [33, "index-15"]], "pythreadstate (c type)": [[33, "c.PyThreadState"], [33, "index-34"]], "pythreadstate.interp (c member)": [[33, "c.PyThreadState.interp"]], "pythreadstate_clear (c function)": [[33, "c.PyThreadState_Clear"]], "pythreadstate_delete (c function)": [[33, "c.PyThreadState_Delete"]], "pythreadstate_deletecurrent (c function)": [[33, "c.PyThreadState_DeleteCurrent"]], "pythreadstate_entertracing (c function)": [[33, "c.PyThreadState_EnterTracing"]], "pythreadstate_get (c function)": [[33, "c.PyThreadState_Get"]], "pythreadstate_getdict (c function)": [[33, "c.PyThreadState_GetDict"]], "pythreadstate_getframe (c function)": [[33, "c.PyThreadState_GetFrame"]], "pythreadstate_getid (c function)": [[33, "c.PyThreadState_GetID"]], "pythreadstate_getinterpreter (c function)": [[33, "c.PyThreadState_GetInterpreter"]], "pythreadstate_leavetracing (c function)": [[33, "c.PyThreadState_LeaveTracing"]], "pythreadstate_new (c function)": [[33, "c.PyThreadState_New"]], "pythreadstate_next (c function)": [[33, "c.PyThreadState_Next"]], "pythreadstate_setasyncexc (c function)": [[33, "c.PyThreadState_SetAsyncExc"]], "pythreadstate_swap (c function)": [[33, "c.PyThreadState_Swap"]], "pythread_reinittls (c function)": [[33, "c.PyThread_ReInitTLS"]], "pythread_create_key (c function)": [[33, "c.PyThread_create_key"]], "pythread_delete_key (c function)": [[33, "c.PyThread_delete_key"]], "pythread_delete_key_value (c function)": [[33, "c.PyThread_delete_key_value"]], "pythread_get_key_value (c function)": [[33, "c.PyThread_get_key_value"]], "pythread_set_key_value (c function)": [[33, "c.PyThread_set_key_value"]], "pythread_tss_alloc (c function)": [[33, "c.PyThread_tss_alloc"]], "pythread_tss_create (c function)": [[33, "c.PyThread_tss_create"]], "pythread_tss_delete (c function)": [[33, "c.PyThread_tss_delete"]], "pythread_tss_free (c function)": [[33, "c.PyThread_tss_free"]], "pythread_tss_get (c function)": [[33, "c.PyThread_tss_get"]], "pythread_tss_is_created (c function)": [[33, "c.PyThread_tss_is_created"]], "pythread_tss_set (c function)": [[33, "c.PyThread_tss_set"]], "pytrace_call (c var)": [[33, "c.PyTrace_CALL"]], "pytrace_c_call (c var)": [[33, "c.PyTrace_C_CALL"]], "pytrace_c_exception (c var)": [[33, "c.PyTrace_C_EXCEPTION"]], "pytrace_c_return (c var)": [[33, "c.PyTrace_C_RETURN"]], "pytrace_exception (c var)": [[33, "c.PyTrace_EXCEPTION"]], "pytrace_line (c var)": [[33, "c.PyTrace_LINE"]], "pytrace_opcode (c var)": [[33, "c.PyTrace_OPCODE"]], "pytrace_return (c var)": [[33, "c.PyTrace_RETURN"]], "py_addpendingcall (c function)": [[33, "c.Py_AddPendingCall"]], "py_begin_allow_threads (c macro)": [[33, "c.Py_BEGIN_ALLOW_THREADS"], [33, "index-35"]], "py_block_threads (c macro)": [[33, "c.Py_BLOCK_THREADS"]], "py_byteswarningflag (c var)": [[33, "c.Py_BytesWarningFlag"]], "py_debugflag (c var)": [[33, "c.Py_DebugFlag"]], "py_dontwritebytecodeflag (c var)": [[33, "c.Py_DontWriteBytecodeFlag"]], "py_end_allow_threads (c macro)": [[33, "c.Py_END_ALLOW_THREADS"], [33, "index-35"]], "py_endinterpreter (c function)": [[33, "c.Py_EndInterpreter"]], "py_fatalerror()": [[33, "index-29"]], "py_finalize (c function)": [[33, "c.Py_Finalize"]], "py_finalizeex (c function)": [[33, "c.Py_FinalizeEx"], [33, "index-15"], [33, "index-42"], [33, "index-44"], [58, "index-3"], [58, "index-4"]], "py_frozenflag (c var)": [[33, "c.Py_FrozenFlag"]], "py_getbuildinfo (c function)": [[33, "c.Py_GetBuildInfo"]], "py_getcompiler (c function)": [[33, "c.Py_GetCompiler"]], "py_getcopyright (c function)": [[33, "c.Py_GetCopyright"]], "py_getexecprefix (c function)": [[33, "c.Py_GetExecPrefix"], [35, "index-23"]], "py_getpath (c function)": [[33, "c.Py_GetPath"], [35, "index-23"]], "py_getpath()": [[33, "index-19"], [33, "index-23"]], "py_getplatform (c function)": [[33, "c.Py_GetPlatform"]], "py_getprefix (c function)": [[33, "c.Py_GetPrefix"], [35, "index-23"]], "py_getprogramfullpath (c function)": [[33, "c.Py_GetProgramFullPath"], [35, "index-23"]], "py_getprogramname (c function)": [[33, "c.Py_GetProgramName"]], "py_getpythonhome (c function)": [[33, "c.Py_GetPythonHome"]], "py_getversion (c function)": [[33, "c.Py_GetVersion"]], "py_hashrandomizationflag (c var)": [[33, "c.Py_HashRandomizationFlag"]], "py_ignoreenvironmentflag (c var)": [[33, "c.Py_IgnoreEnvironmentFlag"]], "py_initialize (c function)": [[33, "c.Py_Initialize"], [33, "index-42"], [35, "index-18"]], "py_initialize()": [[33, "index-16"], [33, "index-19"]], "py_initializeex (c function)": [[33, "c.Py_InitializeEx"]], "py_inspectflag (c var)": [[33, "c.Py_InspectFlag"]], "py_interactiveflag (c var)": [[33, "c.Py_InteractiveFlag"]], "py_isinitialized (c function)": [[33, "c.Py_IsInitialized"], [35, "index-26"]], "py_isolatedflag (c var)": [[33, "c.Py_IsolatedFlag"]], "py_legacywindowsfsencodingflag (c var)": [[33, "c.Py_LegacyWindowsFSEncodingFlag"]], "py_legacywindowsstdioflag (c var)": [[33, "c.Py_LegacyWindowsStdioFlag"]], "py_newinterpreter (c function)": [[33, "c.Py_NewInterpreter"]], "py_nositeflag (c var)": [[33, "c.Py_NoSiteFlag"]], "py_nousersitedirectory (c var)": [[33, "c.Py_NoUserSiteDirectory"]], "py_optimizeflag (c var)": [[33, "c.Py_OptimizeFlag"]], "py_quietflag (c var)": [[33, "c.Py_QuietFlag"]], "py_setpath (c function)": [[33, "c.Py_SetPath"]], "py_setpath()": [[33, "index-22"]], "py_setprogramname (c function)": [[33, "c.Py_SetProgramName"], [35, "index-23"]], "py_setprogramname()": [[33, "index-15"], [33, "index-20"], [33, "index-21"]], "py_setpythonhome (c function)": [[33, "c.Py_SetPythonHome"]], "py_setstandardstreamencoding (c function)": [[33, "c.Py_SetStandardStreamEncoding"]], "py_unblock_threads (c macro)": [[33, "c.Py_UNBLOCK_THREADS"]], "py_unbufferedstdioflag (c var)": [[33, "c.Py_UnbufferedStdioFlag"]], "py_verboseflag (c var)": [[33, "c.Py_VerboseFlag"]], "py_tracefunc (c type)": [[33, "c.Py_tracefunc"]], "py_tss_needs_init (c macro)": [[33, "c.Py_tss_NEEDS_INIT"]], "py_tss_t (c type)": [[33, "c.Py_tss_t"]], "_pyframeevalfunction (c type)": [[33, "c._PyFrameEvalFunction"]], "_pyinterpreterstate_getevalframefunc (c function)": [[33, "c._PyInterpreterState_GetEvalFrameFunc"]], "_pyinterpreterstate_setevalframefunc (c function)": [[33, "c._PyInterpreterState_SetEvalFrameFunc"]], "__main__": [[33, "index-15"], [33, "index-41"], [35, "index-18"], [125, "module-__main__"], [339, "index-0"], [339, "index-4"], [444, "index-10"], [452, "index-2"], [452, "index-3"]], "_thread": [[33, "index-38"], [126, "module-_thread"]], "argv (in module sys)": [[33, "index-29"], [368, "sys.argv"]], "builtins": [[33, "index-15"], [33, "index-41"], [35, "index-18"], [161, "module-builtins"], [239, "index-13"], [452, "index-2"], [465, "index-7"]], "close (in module os)": [[33, "index-43"]], "copyright (in module sys)": [[33, "index-26"], [368, "sys.copyright"]], "environment variable": [[33, "index-0"], [33, "index-1"], [33, "index-11"], [33, "index-12"], [33, "index-13"], [33, "index-14"], [33, "index-17"], [33, "index-18"], [33, "index-2"], [33, "index-3"], [33, "index-30"], [33, "index-31"], [33, "index-4"], [33, "index-5"], [33, "index-6"], [33, "index-7"], [33, "index-9"], [34, "index-1"], [34, "index-10"], [34, "index-11"], [34, "index-12"], [34, "index-13"], [34, "index-14"], [34, "index-15"], [34, "index-17"], [34, "index-18"], [34, "index-19"], [34, "index-2"], [34, "index-20"], [34, "index-21"], [34, "index-22"], [34, "index-23"], [34, "index-24"], [34, "index-25"], [34, "index-26"], [34, "index-27"], [34, "index-28"], [34, "index-29"], [34, "index-3"], [34, "index-30"], [34, "index-33"], [34, "index-34"], [34, "index-4"], [34, "index-5"], [34, "index-6"], [34, "index-8"], [34, "index-9"], [35, "index-19"], [35, "index-20"], [35, "index-21"], [35, "index-22"], [35, "index-24"], [35, "index-25"], [42, "index-1"], [42, "index-2"], [42, "index-3"], [42, "index-4"], [42, "index-5"], [62, "index-0"], [71, "index-1"], [71, "index-2"], [80, "index-0"], [83, "index-0"], [96, "index-0"], [96, "index-1"], [97, "index-4"], [121, "index-0"], [121, "index-1"], [121, "index-10"], [121, "index-2"], [121, "index-3"], [121, "index-4"], [121, "index-5"], [121, "index-6"], [121, "index-7"], [121, "index-8"], [121, "index-9"], [137, "index-0"], [138, "index-5"], [164, "index-3"], [164, "index-4"], [164, "index-6"], [176, "index-1"], [190, "index-0"], [190, "index-1"], [190, "index-2"], [190, "index-3"], [190, "index-4"], [190, "index-5"], [190, "index-6"], [201, "index-0"], [201, "index-1"], [201, "index-2"], [201, "index-3"], [201, "index-4"], [201, "index-5"], [228, "index-0"], [239, "index-1"], [239, "index-16"], [242, "index-0"], [243, "index-0"], [243, "index-1"], [243, "index-2"], [244, "index-0"], [244, "index-1"], [244, "index-2"], [244, "index-3"], [244, "index-5"], [244, "index-6"], [244, "index-7"], [244, "index-8"], [261, "index-5"], [261, "index-6"], [273, "index-3"], [281, "index-1"], [281, "index-2"], [281, "index-3"], [308, "index-1"], [308, "index-10"], [308, "index-11"], [308, "index-2"], [308, "index-3"], [308, "index-33"], [308, "index-34"], [308, "index-35"], [308, "index-36"], [308, "index-39"], [308, "index-4"], [308, "index-40"], [308, "index-41"], [308, "index-42"], [308, "index-43"], [308, "index-52"], [309, "index-3"], [309, "index-4"], [309, "index-5"], [309, "index-6"], [309, "index-7"], [309, "index-8"], [310, "index-1"], [310, "index-2"], [326, "index-3"], [326, "index-6"], [326, "index-7"], [328, "index-1"], [335, "index-0"], [342, "index-2"], [349, "index-3"], [349, "index-5"], [349, "index-6"], [349, "index-7"], [349, "index-8"], [357, "index-3"], [357, "index-4"], [360, "index-67"], [360, "index-68"], [364, "index-2"], [364, "index-3"], [364, "index-4"], [368, "index-17"], [368, "index-18"], [368, "index-22"], [368, "index-23"], [368, "index-24"], [368, "index-3"], [368, "index-33"], [368, "index-35"], [368, "index-36"], [368, "index-37"], [368, "index-38"], [368, "index-4"], [368, "index-5"], [368, "index-6"], [368, "index-7"], [369, "index-0"], [369, "index-1"], [369, "index-2"], [369, "index-3"], [369, "index-4"], [375, "index-1"], [375, "index-2"], [375, "index-3"], [377, "index-0"], [377, "index-1"], [377, "index-2"], [381, "index-13"], [381, "index-14"], [381, "index-15"], [381, "index-16"], [381, "index-17"], [381, "index-18"], [384, "index-0"], [384, "index-1"], [397, "index-0"], [397, "index-1"], [397, "index-2"], [410, "index-3"], [414, "index-2"], [414, "index-3"], [414, "index-4"], [415, "index-1"], [415, "index-2"], [415, "index-3"], [415, "index-4"], [415, "index-5"], [418, "index-0"], [418, "index-1"], [418, "index-2"], [418, "index-3"], [425, "index-0"], [440, "envvar-PYTHONTZPATH"], [440, "index-2"], [443, "index-61"], [443, "index-81"], [447, "index-18"], [453, "index-0"], [453, "index-1"], [465, "index-1"], [465, "index-2"], [465, "index-5"], [465, "index-6"], [470, "envvar-PYTHONASYNCIODEBUG"], [470, "envvar-PYTHONBREAKPOINT"], [470, "envvar-PYTHONCASEOK"], [470, "envvar-PYTHONCOERCECLOCALE"], [470, "envvar-PYTHONDEBUG"], [470, "envvar-PYTHONDEVMODE"], [470, "envvar-PYTHONDONTWRITEBYTECODE"], [470, "envvar-PYTHONDUMPREFS"], [470, "envvar-PYTHONDUMPREFSFILE-FILENAME"], [470, "envvar-PYTHONEXECUTABLE"], [470, "envvar-PYTHONFAULTHANDLER"], [470, "envvar-PYTHONHASHSEED"], [470, "envvar-PYTHONHOME"], [470, "envvar-PYTHONINSPECT"], [470, "envvar-PYTHONINTMAXSTRDIGITS"], [470, "envvar-PYTHONIOENCODING"], [470, "envvar-PYTHONLEGACYWINDOWSFSENCODING"], [470, "envvar-PYTHONLEGACYWINDOWSSTDIO"], [470, "envvar-PYTHONMALLOC"], [470, "envvar-PYTHONMALLOCSTATS"], [470, "envvar-PYTHONNODEBUGRANGES"], [470, "envvar-PYTHONNOUSERSITE"], [470, "envvar-PYTHONOPTIMIZE"], [470, "envvar-PYTHONPATH"], [470, "envvar-PYTHONPLATLIBDIR"], [470, "envvar-PYTHONPROFILEIMPORTTIME"], [470, "envvar-PYTHONPYCACHEPREFIX"], [470, "envvar-PYTHONSAFEPATH"], [470, "envvar-PYTHONSTARTUP"], [470, "envvar-PYTHONTHREADDEBUG"], [470, "envvar-PYTHONTRACEMALLOC"], [470, "envvar-PYTHONUNBUFFERED"], [470, "envvar-PYTHONUSERBASE"], [470, "envvar-PYTHONUTF8"], [470, "envvar-PYTHONVERBOSE"], [470, "envvar-PYTHONWARNDEFAULTENCODING"], [470, "envvar-PYTHONWARNINGS"], [470, "index-1"], [470, "index-12"], [470, "index-13"], [470, "index-14"], [470, "index-15"], [470, "index-17"], [470, "index-18"], [470, "index-19"], [470, "index-2"], [470, "index-20"], [470, "index-21"], [470, "index-22"], [470, "index-23"], [470, "index-24"], [470, "index-25"], [470, "index-26"], [470, "index-27"], [470, "index-28"], [470, "index-29"], [470, "index-3"], [470, "index-30"], [470, "index-31"], [470, "index-32"], [470, "index-33"], [470, "index-34"], [470, "index-35"], [470, "index-36"], [470, "index-37"], [470, "index-4"], [470, "index-40"], [470, "index-42"], [470, "index-43"], [470, "index-5"], [470, "index-6"], [470, "index-8"], [471, "envvar-BASECFLAGS"], [471, "envvar-BASECPPFLAGS"], [471, "envvar-BLDSHARED"], [471, "envvar-CC"], [471, "envvar-CCSHARED"], [471, "envvar-CFLAGS"], [471, "envvar-CFLAGSFORSHARED"], [471, "envvar-CFLAGS_ALIASING"], [471, "envvar-CFLAGS_NODIST"], [471, "envvar-CONFIGURE_CFLAGS"], [471, "envvar-CONFIGURE_CFLAGS_NODIST"], [471, "envvar-CONFIGURE_CPPFLAGS"], [471, "envvar-CONFIGURE_LDFLAGS"], [471, "envvar-CONFIGURE_LDFLAGS_NODIST"], [471, "envvar-CPPFLAGS"], [471, "envvar-CXX"], [471, "envvar-EXTRA_CFLAGS"], [471, "envvar-LDFLAGS"], [471, "envvar-LDFLAGS_NODIST"], [471, "envvar-LDSHARED"], [471, "envvar-LIBS"], [471, "envvar-LINKCC"], [471, "envvar-MAINCC"], [471, "envvar-OPT"], [471, "envvar-PROFILE_TASK"], [471, "envvar-PURIFY"], [471, "envvar-PY_BUILTIN_MODULE_CFLAGS"], [471, "envvar-PY_CFLAGS"], [471, "envvar-PY_CFLAGS_NODIST"], [471, "envvar-PY_CORE_CFLAGS"], [471, "envvar-PY_CORE_LDFLAGS"], [471, "envvar-PY_CPPFLAGS"], [471, "envvar-PY_LDFLAGS"], [471, "envvar-PY_LDFLAGS_NODIST"], [471, "envvar-PY_STDMODULE_CFLAGS"], [471, "index-0"], [471, "index-10"], [471, "index-11"], [471, "index-12"], [471, "index-13"], [471, "index-14"], [471, "index-15"], [471, "index-16"], [471, "index-17"], [471, "index-18"], [471, "index-19"], [471, "index-2"], [471, "index-20"], [471, "index-21"], [471, "index-22"], [471, "index-23"], [471, "index-24"], [471, "index-25"], [471, "index-26"], [471, "index-3"], [471, "index-4"], [471, "index-5"], [471, "index-6"], [471, "index-7"], [471, "index-8"], [471, "index-9"], [474, "index-0"], [475, "index-0"], [476, "index-1"], [476, "index-10"], [476, "index-11"], [476, "index-12"], [476, "index-13"], [476, "index-14"], [476, "index-15"], [476, "index-18"], [476, "index-2"], [476, "index-20"], [476, "index-22"], [476, "index-23"], [476, "index-24"], [476, "index-25"], [476, "index-26"], [476, "index-27"], [476, "index-28"], [476, "index-29"], [476, "index-3"], [476, "index-30"], [476, "index-31"], [476, "index-32"], [476, "index-33"], [476, "index-34"], [476, "index-35"], [476, "index-36"], [476, "index-37"], [476, "index-4"], [476, "index-5"], [476, "index-6"], [476, "index-7"], [476, "index-8"], [476, "index-9"], [478, "index-11"], [480, "index-24"], [480, "index-25"], [480, "index-26"], [480, "index-27"], [480, "index-28"], [483, "index-20"], [483, "index-21"], [483, "index-24"], [483, "index-4"], [483, "index-5"], [483, "index-6"], [484, "index-1"], [484, "index-11"], [484, "index-8"], [487, "index-18"], [487, "index-35"], [488, "index-1"], [488, "index-21"], [488, "index-33"], [488, "index-6"], [489, "index-10"], [490, "index-23"], [490, "index-24"], [490, "index-35"], [491, "index-40"], [491, "index-41"], [491, "index-50"], [491, "index-53"], [491, "index-54"], [491, "index-55"], [491, "index-56"], [491, "index-57"], [491, "index-58"], [493, "index-19"], [493, "index-2"], [493, "index-21"], [493, "index-27"], [493, "index-38"], [494, "index-12"], [494, "index-26"], [494, "index-27"], [494, "index-31"], [494, "index-36"], [494, "index-4"], [494, "index-8"], [495, "index-13"], [495, "index-14"], [495, "index-2"], [495, "index-20"], [495, "index-21"], [495, "index-22"], [495, "index-3"], [496, "index-21"]], "executable (in module sys)": [[33, "index-21"], [368, "sys.executable"]], "global interpreter lock": [[33, "index-32"], [99, "term-global-interpreter-lock"]], "interpreter lock": [[33, "index-32"]], "lock, interpreter": [[33, "index-32"]], "main()": [[33, "index-16"], [33, "index-19"], [33, "index-29"]], "path": [[33, "index-15"], [33, "index-22"], [33, "index-23"], [35, "index-19"], [35, "index-20"], [35, "index-18"], [96, "index-0"], [96, "index-1"], [164, "index-3"], [164, "index-6"], [280, "index-0"], [308, "index-33"], [308, "index-34"], [308, "index-35"], [308, "index-36"], [308, "index-39"], [308, "index-40"], [308, "index-41"], [308, "index-42"], [308, "index-52"], [309, "index-0"], [311, "index-0"], [349, "index-3"], [349, "index-0"], [349, "index-4"], [364, "index-2"], [368, "index-21"], [414, "index-2"], [414, "index-3"], [414, "index-4"], [418, "index-3"], [447, "index-9"], [453, "index-0"], [465, "index-2"], [465, "index-0"], [470, "index-31"], [475, "index-0"], [476, "index-1"], [476, "index-10"], [476, "index-12"], [476, "index-13"], [476, "index-14"], [476, "index-18"], [476, "index-2"], [476, "index-20"], [476, "index-22"], [476, "index-23"], [476, "index-25"], [476, "index-3"], [476, "index-5"], [476, "index-9"], [491, "index-54"], [491, "index-57"], [491, "index-58"], [495, "index-22"]], "path (in module sys)": [[33, "index-15"], [33, "index-22"], [33, "index-23"], [35, "index-18"], [368, "sys.path"]], "platform (in module sys)": [[33, "index-25"], [368, "sys.platform"]], "sdterr": [[33, "index-16"]], "search": [[33, "index-15"], [33, "index-22"], [33, "index-23"], [35, "index-18"], [280, "index-0"], [349, "index-0"], [368, "index-21"], [465, "index-0"]], "setswitchinterval (in module sys)": [[33, "index-33"]], "stderr (in module sys)": [[33, "index-41"], [368, "sys.stderr"], [443, "index-55"]], "stdin": [[33, "index-16"]], "stdin (in module sys)": [[33, "index-41"], [368, "sys.stdin"], [443, "index-55"]], "stdout": [[33, "index-16"]], "stdout (in module sys)": [[33, "index-41"], [368, "sys.stdout"], [443, "index-55"]], "sys": [[33, "index-15"], [33, "index-41"], [35, "index-18"], [239, "index-8"], [368, "module-sys"], [442, "index-11"], [452, "index-2"], [465, "index-4"]], "version (in module sys)": [[33, "index-24"], [33, "index-27"], [33, "index-28"], [368, "sys.version"]], "pep 432": [[34, "index-35"], [34, "index-36"], [494, "index-38"]], "pep 538": [[34, "index-31"], [281, "index-6"], [470, "index-44"], [471, "index-1"], [494, "index-10"], [494, "index-3"], [494, "index-6"], [494, "index-7"]], "pep 540": [[34, "index-32"], [281, "index-7"], [308, "index-0"], [494, "index-11"], [494, "index-9"]], "pep 552": [[34, "index-7"], [265, "index-9"], [326, "index-5"], [488, "index-23"], [494, "index-22"], [494, "index-23"]], "pep 587": [[34, "index-0"], [488, "index-39"], [495, "index-5"], [495, "index-6"]], "pythoncoerceclocale": [[34, "index-34"], [308, "index-4"], [470, "envvar-PYTHONCOERCECLOCALE"], [471, "index-0"], [494, "index-4"]], "pythondevmode": [[34, "index-8"], [201, "index-0"], [470, "envvar-PYTHONDEVMODE"], [470, "index-24"], [494, "index-26"]], "pythondumprefs": [[34, "index-9"], [62, "index-0"], [470, "envvar-PYTHONDUMPREFS"], [471, "index-5"], [495, "index-3"]], "pythonexecutable": [[34, "index-22"], [470, "envvar-PYTHONEXECUTABLE"]], "pythonfaulthandler": [[34, "index-10"], [201, "index-4"], [228, "index-0"], [470, "envvar-PYTHONFAULTHANDLER"], [470, "index-20"], [490, "index-24"]], "pythonmallocstats": [[34, "index-17"], [42, "index-2"], [470, "envvar-PYTHONMALLOCSTATS"]], "pythonnodebugranges": [[34, "index-6"], [443, "index-61"], [470, "envvar-PYTHONNODEBUGRANGES"], [470, "index-28"], [488, "index-6"]], "pythonplatlibdir": [[34, "index-18"], [369, "index-3"], [470, "envvar-PYTHONPLATLIBDIR"]], "pythonprofileimporttime": [[34, "index-13"], [470, "envvar-PYTHONPROFILEIMPORTTIME"], [470, "index-23"], [494, "index-27"]], "pythonpycacheprefix": [[34, "index-24"], [368, "index-7"], [470, "envvar-PYTHONPYCACHEPREFIX"], [470, "index-26"], [495, "index-2"]], "pythonsafepath": [[34, "index-3"], [342, "index-2"], [368, "index-24"], [470, "envvar-PYTHONSAFEPATH"], [470, "index-12"], [488, "index-1"], [488, "index-21"]], "pythontracemalloc": [[34, "index-26"], [397, "index-0"], [397, "index-1"], [397, "index-2"], [470, "envvar-PYTHONTRACEMALLOC"], [470, "index-21"]], "pythonutf8": [[34, "index-2"], [34, "index-33"], [308, "index-2"], [308, "index-3"], [368, "index-36"], [470, "envvar-PYTHONUTF8"], [470, "index-25"], [470, "index-43"], [476, "index-15"], [494, "index-8"]], "pythonwarnings": [[34, "index-29"], [201, "index-1"], [415, "index-1"], [415, "index-2"], [415, "index-3"], [415, "index-4"], [415, "index-5"], [470, "envvar-PYTHONWARNINGS"], [470, "index-19"], [484, "index-1"], [484, "index-8"], [489, "index-10"], [494, "index-36"]], "pyconfig (c type)": [[34, "c.PyConfig"]], "pyconfig.argv (c member)": [[34, "c.PyConfig.argv"]], "pyconfig.base_exec_prefix (c member)": [[34, "c.PyConfig.base_exec_prefix"]], "pyconfig.base_executable (c member)": [[34, "c.PyConfig.base_executable"]], "pyconfig.base_prefix (c member)": [[34, "c.PyConfig.base_prefix"]], "pyconfig.buffered_stdio (c member)": [[34, "c.PyConfig.buffered_stdio"]], "pyconfig.bytes_warning (c member)": [[34, "c.PyConfig.bytes_warning"]], "pyconfig.check_hash_pycs_mode (c member)": [[34, "c.PyConfig.check_hash_pycs_mode"]], "pyconfig.code_debug_ranges (c member)": [[34, "c.PyConfig.code_debug_ranges"]], "pyconfig.configure_c_stdio (c member)": [[34, "c.PyConfig.configure_c_stdio"]], "pyconfig.dev_mode (c member)": [[34, "c.PyConfig.dev_mode"]], "pyconfig.dump_refs (c member)": [[34, "c.PyConfig.dump_refs"]], "pyconfig.exec_prefix (c member)": [[34, "c.PyConfig.exec_prefix"]], "pyconfig.executable (c member)": [[34, "c.PyConfig.executable"]], "pyconfig.faulthandler (c member)": [[34, "c.PyConfig.faulthandler"]], "pyconfig.filesystem_encoding (c member)": [[34, "c.PyConfig.filesystem_encoding"]], "pyconfig.filesystem_errors (c member)": [[34, "c.PyConfig.filesystem_errors"]], "pyconfig.hash_seed (c member)": [[34, "c.PyConfig.hash_seed"]], "pyconfig.home (c member)": [[34, "c.PyConfig.home"]], "pyconfig.import_time (c member)": [[34, "c.PyConfig.import_time"]], "pyconfig.inspect (c member)": [[34, "c.PyConfig.inspect"]], "pyconfig.install_signal_handlers (c member)": [[34, "c.PyConfig.install_signal_handlers"]], "pyconfig.interactive (c member)": [[34, "c.PyConfig.interactive"]], "pyconfig.isolated (c member)": [[34, "c.PyConfig.isolated"]], "pyconfig.legacy_windows_stdio (c member)": [[34, "c.PyConfig.legacy_windows_stdio"]], "pyconfig.malloc_stats (c member)": [[34, "c.PyConfig.malloc_stats"]], "pyconfig.module_search_paths (c member)": [[34, "c.PyConfig.module_search_paths"]], "pyconfig.module_search_paths_set (c member)": [[34, "c.PyConfig.module_search_paths_set"]], "pyconfig.optimization_level (c member)": [[34, "c.PyConfig.optimization_level"]], "pyconfig.orig_argv (c member)": [[34, "c.PyConfig.orig_argv"]], "pyconfig.parse_argv (c member)": [[34, "c.PyConfig.parse_argv"]], "pyconfig.parser_debug (c member)": [[34, "c.PyConfig.parser_debug"]], "pyconfig.pathconfig_warnings (c member)": [[34, "c.PyConfig.pathconfig_warnings"]], "pyconfig.platlibdir (c member)": [[34, "c.PyConfig.platlibdir"]], "pyconfig.prefix (c member)": [[34, "c.PyConfig.prefix"]], "pyconfig.program_name (c member)": [[34, "c.PyConfig.program_name"]], "pyconfig.pycache_prefix (c member)": [[34, "c.PyConfig.pycache_prefix"]], "pyconfig.pythonpath_env (c member)": [[34, "c.PyConfig.pythonpath_env"]], "pyconfig.quiet (c member)": [[34, "c.PyConfig.quiet"]], "pyconfig.run_command (c member)": [[34, "c.PyConfig.run_command"]], "pyconfig.run_filename (c member)": [[34, "c.PyConfig.run_filename"]], "pyconfig.run_module (c member)": [[34, "c.PyConfig.run_module"]], "pyconfig.safe_path (c member)": [[34, "c.PyConfig.safe_path"]], "pyconfig.show_ref_count (c member)": [[34, "c.PyConfig.show_ref_count"]], "pyconfig.site_import (c member)": [[34, "c.PyConfig.site_import"]], "pyconfig.skip_source_first_line (c member)": [[34, "c.PyConfig.skip_source_first_line"]], "pyconfig.stdio_encoding (c member)": [[34, "c.PyConfig.stdio_encoding"]], "pyconfig.stdio_errors (c member)": [[34, "c.PyConfig.stdio_errors"]], "pyconfig.tracemalloc (c member)": [[34, "c.PyConfig.tracemalloc"]], "pyconfig.use_environment (c member)": [[34, "c.PyConfig.use_environment"]], "pyconfig.use_hash_seed (c member)": [[34, "c.PyConfig.use_hash_seed"]], "pyconfig.user_site_directory (c member)": [[34, "c.PyConfig.user_site_directory"]], "pyconfig.verbose (c member)": [[34, "c.PyConfig.verbose"]], "pyconfig.warn_default_encoding (c member)": [[34, "c.PyConfig.warn_default_encoding"]], "pyconfig.warnoptions (c member)": [[34, "c.PyConfig.warnoptions"]], "pyconfig.write_bytecode (c member)": [[34, "c.PyConfig.write_bytecode"]], "pyconfig.xoptions (c member)": [[34, "c.PyConfig.xoptions"]], "pyconfig_clear (c function)": [[34, "c.PyConfig_Clear"]], "pyconfig_initisolatedconfig (c function)": [[34, "c.PyConfig_InitIsolatedConfig"]], "pyconfig_initpythonconfig (c function)": [[34, "c.PyConfig_InitPythonConfig"]], "pyconfig_read (c function)": [[34, "c.PyConfig_Read"]], "pyconfig_setargv (c function)": [[34, "c.PyConfig_SetArgv"]], "pyconfig_setbytesargv (c function)": [[34, "c.PyConfig_SetBytesArgv"]], "pyconfig_setbytesstring (c function)": [[34, "c.PyConfig_SetBytesString"]], "pyconfig_setstring (c function)": [[34, "c.PyConfig_SetString"]], "pyconfig_setwidestringlist (c function)": [[34, "c.PyConfig_SetWideStringList"]], "pypreconfig (c type)": [[34, "c.PyPreConfig"]], "pypreconfig.allocator (c member)": [[34, "c.PyPreConfig.allocator"]], "pypreconfig.coerce_c_locale (c member)": [[34, "c.PyPreConfig.coerce_c_locale"]], "pypreconfig.coerce_c_locale_warn (c member)": [[34, "c.PyPreConfig.coerce_c_locale_warn"]], "pypreconfig.configure_locale (c member)": [[34, "c.PyPreConfig.configure_locale"]], "pypreconfig.dev_mode (c member)": [[34, "c.PyPreConfig.dev_mode"]], "pypreconfig.isolated (c member)": [[34, "c.PyPreConfig.isolated"]], "pypreconfig.legacy_windows_fs_encoding (c member)": [[34, "c.PyPreConfig.legacy_windows_fs_encoding"]], "pypreconfig.parse_argv (c member)": [[34, "c.PyPreConfig.parse_argv"]], "pypreconfig.use_environment (c member)": [[34, "c.PyPreConfig.use_environment"]], "pypreconfig.utf8_mode (c member)": [[34, "c.PyPreConfig.utf8_mode"]], "pypreconfig_initisolatedconfig (c function)": [[34, "c.PyPreConfig_InitIsolatedConfig"]], "pypreconfig_initpythonconfig (c function)": [[34, "c.PyPreConfig_InitPythonConfig"]], "pystatus (c type)": [[34, "c.PyStatus"]], "pystatus.err_msg (c member)": [[34, "c.PyStatus.err_msg"]], "pystatus.exitcode (c member)": [[34, "c.PyStatus.exitcode"]], "pystatus.func (c member)": [[34, "c.PyStatus.func"]], "pystatus_error (c function)": [[34, "c.PyStatus_Error"]], "pystatus_exception (c function)": [[34, "c.PyStatus_Exception"]], "pystatus_exit (c function)": [[34, "c.PyStatus_Exit"]], "pystatus_iserror (c function)": [[34, "c.PyStatus_IsError"]], "pystatus_isexit (c function)": [[34, "c.PyStatus_IsExit"]], "pystatus_nomemory (c function)": [[34, "c.PyStatus_NoMemory"]], "pystatus_ok (c function)": [[34, "c.PyStatus_Ok"]], "pywidestringlist (c type)": [[34, "c.PyWideStringList"]], "pywidestringlist.items (c member)": [[34, "c.PyWideStringList.items"]], "pywidestringlist.length (c member)": [[34, "c.PyWideStringList.length"]], "pywidestringlist_append (c function)": [[34, "c.PyWideStringList_Append"]], "pywidestringlist_insert (c function)": [[34, "c.PyWideStringList_Insert"]], "py_exitstatusexception (c function)": [[34, "c.Py_ExitStatusException"]], "py_getargcargv (c function)": [[34, "c.Py_GetArgcArgv"]], "py_initializefromconfig (c function)": [[34, "c.Py_InitializeFromConfig"]], "py_preinitialize (c function)": [[34, "c.Py_PreInitialize"]], "py_preinitializefromargs (c function)": [[34, "c.Py_PreInitializeFromArgs"]], "py_preinitializefrombytesargs (c function)": [[34, "c.Py_PreInitializeFromBytesArgs"]], "py_runmain (c function)": [[34, "c.Py_RunMain"]], "_py_initializemain (c function)": [[34, "c._Py_InitializeMain"]], "__pyvenv_launcher__": [[34, "index-23"], [34, "index-4"]], "pep 353": [[35, "index-10"], [482, "index-16"], [482, "index-17"], [482, "index-29"], [487, "index-38"]], "pep 7": [[35, "index-0"], [35, "index-1"], [35, "index-2"], [493, "index-34"]], "pydoc_str (c macro)": [[35, "c.PyDoc_STR"]], "pydoc_strvar (c macro)": [[35, "c.PyDoc_STRVAR"]], "pylist_getitem (c function)": [[35, "index-7"], [38, "c.PyList_GetItem"]], "pylist_setitem (c function)": [[35, "index-5"], [38, "c.PyList_SetItem"]], "pymodinit_func (c macro)": [[35, "c.PyMODINIT_FUNC"]], "pysequence_getitem (c function)": [[35, "index-7"], [53, "c.PySequence_GetItem"]], "pytuple_setitem (c function)": [[35, "index-5"], [59, "c.PyTuple_SetItem"]], "py_abs (c macro)": [[35, "c.Py_ABS"]], "py_always_inline (c macro)": [[35, "c.Py_ALWAYS_INLINE"]], "py_charmask (c macro)": [[35, "c.Py_CHARMASK"]], "py_debug (c macro)": [[35, "c.Py_DEBUG"]], "py_decref (c function)": [[35, "index-4"], [51, "c.Py_DECREF"], [51, "c.Py_DecRef"]], "py_deprecated (c macro)": [[35, "c.Py_DEPRECATED"]], "py_getenv (c macro)": [[35, "c.Py_GETENV"]], "py_incref (c function)": [[35, "index-4"], [51, "c.Py_INCREF"], [51, "c.Py_IncRef"]], "py_max (c macro)": [[35, "c.Py_MAX"]], "py_member_size (c macro)": [[35, "c.Py_MEMBER_SIZE"]], "py_min (c macro)": [[35, "c.Py_MIN"]], "py_no_inline (c macro)": [[35, "c.Py_NO_INLINE"]], "py_stringify (c macro)": [[35, "c.Py_STRINGIFY"]], "py_unreachable (c macro)": [[35, "c.Py_UNREACHABLE"]], "py_unused (c macro)": [[35, "c.Py_UNUSED"]], "py_xdecref (c function)": [[35, "index-17"], [51, "c.Py_XDECREF"]], "py_ssize_t (c type)": [[35, "c.Py_ssize_t"]], "exc_info (in module sys)": [[35, "index-13"], [443, "index-66"]], "incr_item()": [[35, "index-15"], [35, "index-16"]], "set_all()": [[35, "index-6"]], "sum_list()": [[35, "index-8"]], "sum_sequence()": [[35, "index-14"], [35, "index-9"]], "type": [[35, "index-3"], [49, "index-7"], [60, "index-0"], [99, "term-type"], [239, "index-0"], [239, "index-12"], [360, "index-23"], [360, "index-51"], [360, "index-58"], [360, "index-64"], [443, "index-1"], [443, "index-4"], [443, "index-86"], [445, "index-7"]], "pyaiter_check (c function)": [[36, "c.PyAIter_Check"]], "pyiter_check (c function)": [[36, "c.PyIter_Check"]], "pyiter_next (c function)": [[36, "c.PyIter_Next"]], "pyiter_send (c function)": [[36, "c.PyIter_Send"]], "pysendresult (c type)": [[36, "c.PySendResult"]], "pycalliter_check (c function)": [[37, "c.PyCallIter_Check"]], "pycalliter_new (c function)": [[37, "c.PyCallIter_New"]], "pycalliter_type (c var)": [[37, "c.PyCallIter_Type"]], "pyseqiter_check (c function)": [[37, "c.PySeqIter_Check"]], "pyseqiter_new (c function)": [[37, "c.PySeqIter_New"]], "pyseqiter_type (c var)": [[37, "c.PySeqIter_Type"]], "pylistobject (c type)": [[38, "c.PyListObject"]], "pylist_append (c function)": [[38, "c.PyList_Append"]], "pylist_astuple (c function)": [[38, "c.PyList_AsTuple"]], "pylist_check (c function)": [[38, "c.PyList_Check"]], "pylist_checkexact (c function)": [[38, "c.PyList_CheckExact"]], "pylist_get_item (c function)": [[38, "c.PyList_GET_ITEM"]], "pylist_get_size (c function)": [[38, "c.PyList_GET_SIZE"]], "pylist_getslice (c function)": [[38, "c.PyList_GetSlice"]], "pylist_insert (c function)": [[38, "c.PyList_Insert"]], "pylist_new (c function)": [[38, "c.PyList_New"]], "pylist_reverse (c function)": [[38, "c.PyList_Reverse"]], "pylist_set_item (c function)": [[38, "c.PyList_SET_ITEM"]], "pylist_setslice (c function)": [[38, "c.PyList_SetSlice"]], "pylist_size (c function)": [[38, "c.PyList_Size"]], "pylist_sort (c function)": [[38, "c.PyList_Sort"]], "pylist_type (c var)": [[38, "c.PyList_Type"]], "list": [[38, "index-0"], [99, "term-list"], [360, "index-22"], [360, "index-23"], [360, "index-24"], [442, "index-6"], [443, "index-25"], [445, "index-15"], [445, "index-40"], [445, "index-42"], [445, "index-45"], [445, "index-91"], [451, "index-1"], [451, "index-10"], [451, "index-2"], [451, "index-21"], [451, "index-5"], [451, "index-6"]], "tuple": [[38, "index-2"], [53, "index-1"], [59, "index-0"], [360, "index-21"], [360, "index-25"], [443, "index-20"], [445, "index-42"], [445, "index-45"], [445, "index-9"], [445, "index-92"]], "long_max (c macro)": [[39, "index-1"]], "overflowerror (built-in exception)": [[39, "index-1"], [39, "index-2"], [39, "index-3"], [39, "index-4"], [39, "index-5"], [39, "index-6"]], "py_ssize_t_max (c macro)": [[39, "index-3"]], "pylongobject (c type)": [[39, "c.PyLongObject"]], "pylong_asdouble (c function)": [[39, "c.PyLong_AsDouble"]], "pylong_aslong (c function)": [[39, "c.PyLong_AsLong"]], "pylong_aslongandoverflow (c function)": [[39, "c.PyLong_AsLongAndOverflow"]], "pylong_aslonglong (c function)": [[39, "c.PyLong_AsLongLong"]], "pylong_aslonglongandoverflow (c function)": [[39, "c.PyLong_AsLongLongAndOverflow"]], "pylong_assize_t (c function)": [[39, "c.PyLong_AsSize_t"]], "pylong_asssize_t (c function)": [[39, "c.PyLong_AsSsize_t"]], "pylong_asunsignedlong (c function)": [[39, "c.PyLong_AsUnsignedLong"]], "pylong_asunsignedlonglong (c function)": [[39, "c.PyLong_AsUnsignedLongLong"]], "pylong_asunsignedlonglongmask (c function)": [[39, "c.PyLong_AsUnsignedLongLongMask"]], "pylong_asunsignedlongmask (c function)": [[39, "c.PyLong_AsUnsignedLongMask"]], "pylong_asvoidptr (c function)": [[39, "c.PyLong_AsVoidPtr"]], "pylong_check (c function)": [[39, "c.PyLong_Check"]], "pylong_checkexact (c function)": [[39, "c.PyLong_CheckExact"]], "pylong_fromdouble (c function)": [[39, "c.PyLong_FromDouble"]], "pylong_fromlong (c function)": [[39, "c.PyLong_FromLong"]], "pylong_fromlonglong (c function)": [[39, "c.PyLong_FromLongLong"]], "pylong_fromsize_t (c function)": [[39, "c.PyLong_FromSize_t"]], "pylong_fromssize_t (c function)": [[39, "c.PyLong_FromSsize_t"]], "pylong_fromstring (c function)": [[39, "c.PyLong_FromString"]], "pylong_fromunicodeobject (c function)": [[39, "c.PyLong_FromUnicodeObject"]], "pylong_fromunsignedlong (c function)": [[39, "c.PyLong_FromUnsignedLong"]], "pylong_fromunsignedlonglong (c function)": [[39, "c.PyLong_FromUnsignedLongLong"]], "pylong_fromvoidptr (c function)": [[39, "c.PyLong_FromVoidPtr"]], "pylong_type (c var)": [[39, "c.PyLong_Type"]], "size_max (c macro)": [[39, "index-5"]], "ulong_max (c macro)": [[39, "index-4"]], "integer": [[39, "index-0"], [360, "index-11"], [360, "index-12"], [360, "index-16"], [443, "index-10"], [443, "index-11"], [443, "index-19"]], "long integer": [[39, "index-0"]], "pymapping_check (c function)": [[40, "c.PyMapping_Check"]], "pymapping_delitem (c function)": [[40, "c.PyMapping_DelItem"]], "pymapping_delitemstring (c function)": [[40, "c.PyMapping_DelItemString"]], "pymapping_getitemstring (c function)": [[40, "c.PyMapping_GetItemString"]], "pymapping_haskey (c function)": [[40, "c.PyMapping_HasKey"]], "pymapping_haskeystring (c function)": [[40, "c.PyMapping_HasKeyString"]], "pymapping_items (c function)": [[40, "c.PyMapping_Items"]], "pymapping_keys (c function)": [[40, "c.PyMapping_Keys"]], "pymapping_length (c function)": [[40, "c.PyMapping_Length"]], "pymapping_setitemstring (c function)": [[40, "c.PyMapping_SetItemString"]], "pymapping_size (c function)": [[40, "c.PyMapping_Size"]], "pymapping_values (c function)": [[40, "c.PyMapping_Values"]], "pymarshal_readlastobjectfromfile (c function)": [[41, "c.PyMarshal_ReadLastObjectFromFile"]], "pymarshal_readlongfromfile (c function)": [[41, "c.PyMarshal_ReadLongFromFile"]], "pymarshal_readobjectfromfile (c function)": [[41, "c.PyMarshal_ReadObjectFromFile"]], "pymarshal_readobjectfromstring (c function)": [[41, "c.PyMarshal_ReadObjectFromString"]], "pymarshal_readshortfromfile (c function)": [[41, "c.PyMarshal_ReadShortFromFile"]], "pymarshal_writelongtofile (c function)": [[41, "c.PyMarshal_WriteLongToFile"]], "pymarshal_writeobjecttofile (c function)": [[41, "c.PyMarshal_WriteObjectToFile"]], "pymarshal_writeobjecttostring (c function)": [[41, "c.PyMarshal_WriteObjectToString"]], "pymem_domain_mem (c macro)": [[42, "c.PYMEM_DOMAIN_MEM"]], "pymem_domain_obj (c macro)": [[42, "c.PYMEM_DOMAIN_OBJ"]], "pymem_domain_raw (c macro)": [[42, "c.PYMEM_DOMAIN_RAW"]], "pythonmalloc": [[42, "index-1"], [42, "index-3"], [42, "index-4"], [42, "index-5"], [201, "index-2"], [201, "index-3"], [470, "envvar-PYTHONMALLOC"], [470, "index-40"], [471, "index-3"], [493, "index-27"], [493, "index-38"]], "pymemallocatordomain (c type)": [[42, "c.PyMemAllocatorDomain"]], "pymemallocatorex (c type)": [[42, "c.PyMemAllocatorEx"]], "pymem_calloc (c function)": [[42, "c.PyMem_Calloc"]], "pymem_del (c function)": [[42, "c.PyMem_Del"]], "pymem_free (c function)": [[42, "c.PyMem_Free"]], "pymem_getallocator (c function)": [[42, "c.PyMem_GetAllocator"]], "pymem_malloc (c function)": [[42, "c.PyMem_Malloc"]], "pymem_new (c macro)": [[42, "c.PyMem_New"]], "pymem_rawcalloc (c function)": [[42, "c.PyMem_RawCalloc"]], "pymem_rawfree (c function)": [[42, "c.PyMem_RawFree"]], "pymem_rawmalloc (c function)": [[42, "c.PyMem_RawMalloc"]], "pymem_rawrealloc (c function)": [[42, "c.PyMem_RawRealloc"]], "pymem_realloc (c function)": [[42, "c.PyMem_Realloc"]], "pymem_resize (c macro)": [[42, "c.PyMem_Resize"]], "pymem_setallocator (c function)": [[42, "c.PyMem_SetAllocator"]], "pymem_setupdebughooks (c function)": [[42, "c.PyMem_SetupDebugHooks"]], "pyobjectarenaallocator (c type)": [[42, "c.PyObjectArenaAllocator"]], "pyobject_calloc (c function)": [[42, "c.PyObject_Calloc"]], "pyobject_free (c function)": [[42, "c.PyObject_Free"]], "pyobject_getarenaallocator (c function)": [[42, "c.PyObject_GetArenaAllocator"]], "pyobject_malloc (c function)": [[42, "c.PyObject_Malloc"]], "pyobject_realloc (c function)": [[42, "c.PyObject_Realloc"]], "pyobject_setarenaallocator (c function)": [[42, "c.PyObject_SetArenaAllocator"]], "pytracemalloc_track (c function)": [[42, "c.PyTraceMalloc_Track"]], "pytracemalloc_untrack (c function)": [[42, "c.PyTraceMalloc_Untrack"]], "calloc (c function)": [[42, "index-0"]], "free (c function)": [[42, "index-0"]], "malloc (c function)": [[42, "index-0"]], "realloc (c function)": [[42, "index-0"]], "pybuf_read (c macro)": [[43, "c.PyBUF_READ"]], "pybuf_write (c macro)": [[43, "c.PyBUF_WRITE"]], "pymemoryview_check (c function)": [[43, "c.PyMemoryView_Check"]], "pymemoryview_frombuffer (c function)": [[43, "c.PyMemoryView_FromBuffer"]], "pymemoryview_frommemory (c function)": [[43, "c.PyMemoryView_FromMemory"]], "pymemoryview_fromobject (c function)": [[43, "c.PyMemoryView_FromObject"]], "pymemoryview_get_base (c function)": [[43, "c.PyMemoryView_GET_BASE"]], "pymemoryview_get_buffer (c function)": [[43, "c.PyMemoryView_GET_BUFFER"]], "pymemoryview_getcontiguous (c function)": [[43, "c.PyMemoryView_GetContiguous"]], "memoryview": [[43, "index-0"], [360, "index-39"]], "pyinstancemethod_check (c function)": [[44, "c.PyInstanceMethod_Check"]], "pyinstancemethod_function (c function)": [[44, "c.PyInstanceMethod_Function"]], "pyinstancemethod_get_function (c function)": [[44, "c.PyInstanceMethod_GET_FUNCTION"]], "pyinstancemethod_new (c function)": [[44, "c.PyInstanceMethod_New"]], "pyinstancemethod_type (c var)": [[44, "c.PyInstanceMethod_Type"]], "pymethod_check (c function)": [[44, "c.PyMethod_Check"]], "pymethod_function (c function)": [[44, "c.PyMethod_Function"]], "pymethod_get_function (c function)": [[44, "c.PyMethod_GET_FUNCTION"]], "pymethod_get_self (c function)": [[44, "c.PyMethod_GET_SELF"]], "pymethod_new (c function)": [[44, "c.PyMethod_New"]], "pymethod_self (c function)": [[44, "c.PyMethod_Self"]], "pymethod_type (c var)": [[44, "c.PyMethod_Type"]], "instancemethod": [[44, "index-0"]], "method": [[44, "index-1"], [99, "index-26"], [99, "index-34"], [99, "term-method"], [360, "index-60"], [443, "index-37"], [443, "index-43"], [445, "index-53"], [455, "index-0"]], "moduletype (in module types)": [[45, "index-1"]], "pep 3121": [[45, "index-6"], [485, "index-34"]], "pep 451": [[45, "index-7"], [99, "index-16"], [265, "index-6"], [317, "index-6"], [317, "index-9"], [339, "index-3"], [339, "index-5"], [339, "index-8"], [368, "index-20"], [447, "index-27"], [487, "index-33"], [491, "index-23"], [491, "index-3"], [492, "index-27"]], "pep 489": [[45, "index-8"], [83, "index-1"], [85, "index-0"], [265, "index-18"], [265, "index-19"], [265, "index-20"], [265, "index-8"], [492, "index-26"], [492, "index-28"], [492, "index-45"]], "pymoduledef (c type)": [[45, "c.PyModuleDef"]], "pymoduledef.m_base (c member)": [[45, "c.PyModuleDef.m_base"]], "pymoduledef.m_clear (c member)": [[45, "c.PyModuleDef.m_clear"]], "pymoduledef.m_doc (c member)": [[45, "c.PyModuleDef.m_doc"]], "pymoduledef.m_free (c member)": [[45, "c.PyModuleDef.m_free"]], "pymoduledef.m_methods (c member)": [[45, "c.PyModuleDef.m_methods"]], "pymoduledef.m_name (c member)": [[45, "c.PyModuleDef.m_name"]], "pymoduledef.m_size (c member)": [[45, "c.PyModuleDef.m_size"]], "pymoduledef.m_slots (c member)": [[45, "c.PyModuleDef.m_slots"]], "pymoduledef.m_slots.m_reload (c member)": [[45, "c.PyModuleDef.m_slots.m_reload"]], "pymoduledef.m_traverse (c member)": [[45, "c.PyModuleDef.m_traverse"]], "pymoduledef_init (c function)": [[45, "c.PyModuleDef_Init"]], "pymoduledef_slot (c type)": [[45, "c.PyModuleDef_Slot"]], "pymoduledef_slot.slot (c member)": [[45, "c.PyModuleDef_Slot.slot"]], "pymoduledef_slot.value (c member)": [[45, "c.PyModuleDef_Slot.value"]], "pymodule_addfunctions (c function)": [[45, "c.PyModule_AddFunctions"]], "pymodule_addintconstant (c function)": [[45, "c.PyModule_AddIntConstant"]], "pymodule_addintmacro (c macro)": [[45, "c.PyModule_AddIntMacro"]], "pymodule_addobject (c function)": [[45, "c.PyModule_AddObject"]], "pymodule_addobjectref (c function)": [[45, "c.PyModule_AddObjectRef"]], "pymodule_addstringconstant (c function)": [[45, "c.PyModule_AddStringConstant"]], "pymodule_addstringmacro (c macro)": [[45, "c.PyModule_AddStringMacro"]], "pymodule_addtype (c function)": [[45, "c.PyModule_AddType"]], "pymodule_check (c function)": [[45, "c.PyModule_Check"]], "pymodule_checkexact (c function)": [[45, "c.PyModule_CheckExact"]], "pymodule_create (c function)": [[45, "c.PyModule_Create"]], "pymodule_create2 (c function)": [[45, "c.PyModule_Create2"]], "pymodule_execdef (c function)": [[45, "c.PyModule_ExecDef"]], "pymodule_fromdefandspec (c function)": [[45, "c.PyModule_FromDefAndSpec"]], "pymodule_fromdefandspec2 (c function)": [[45, "c.PyModule_FromDefAndSpec2"]], "pymodule_getdef (c function)": [[45, "c.PyModule_GetDef"]], "pymodule_getdict (c function)": [[45, "c.PyModule_GetDict"]], "pymodule_getfilename (c function)": [[45, "c.PyModule_GetFilename"]], "pymodule_getfilenameobject (c function)": [[45, "c.PyModule_GetFilenameObject"]], "pymodule_getname (c function)": [[45, "c.PyModule_GetName"]], "pymodule_getnameobject (c function)": [[45, "c.PyModule_GetNameObject"]], "pymodule_getstate (c function)": [[45, "c.PyModule_GetState"]], "pymodule_new (c function)": [[45, "c.PyModule_New"]], "pymodule_newobject (c function)": [[45, "c.PyModule_NewObject"]], "pymodule_setdocstring (c function)": [[45, "c.PyModule_SetDocString"]], "pymodule_type (c var)": [[45, "c.PyModule_Type"]], "pystate_addmodule (c function)": [[45, "c.PyState_AddModule"]], "pystate_findmodule (c function)": [[45, "c.PyState_FindModule"]], "pystate_removemodule (c function)": [[45, "c.PyState_RemoveModule"]], "py_mod_create (c macro)": [[45, "c.Py_mod_create"]], "py_mod_exec (c macro)": [[45, "c.Py_mod_exec"]], "systemerror (built-in exception)": [[45, "index-4"], [45, "index-5"]], "__dict__ (module attribute)": [[45, "index-3"], [443, "index-46"]], "__doc__ (module attribute)": [[45, "index-2"], [443, "index-45"]], "__file__ (module attribute)": [[45, "index-2"], [45, "index-5"], [443, "index-45"]], "__loader__ (module attribute)": [[45, "index-2"]], "__name__ (module attribute)": [[45, "index-2"], [45, "index-4"], [443, "index-45"]], "__package__ (module attribute)": [[45, "index-2"]], "none": [[46, "index-0"], [443, "index-6"], [451, "index-3"]], "py_none (c var)": [[46, "c.Py_None"]], "py_return_none (c macro)": [[46, "c.Py_RETURN_NONE"]], "pyindex_check (c function)": [[47, "c.PyIndex_Check"]], "pynumber_absolute (c function)": [[47, "c.PyNumber_Absolute"]], "pynumber_add (c function)": [[47, "c.PyNumber_Add"]], "pynumber_and (c function)": [[47, "c.PyNumber_And"]], "pynumber_asssize_t (c function)": [[47, "c.PyNumber_AsSsize_t"]], "pynumber_check (c function)": [[47, "c.PyNumber_Check"]], "pynumber_divmod (c function)": [[47, "c.PyNumber_Divmod"]], "pynumber_float (c function)": [[47, "c.PyNumber_Float"]], "pynumber_floordivide (c function)": [[47, "c.PyNumber_FloorDivide"]], "pynumber_inplaceadd (c function)": [[47, "c.PyNumber_InPlaceAdd"]], "pynumber_inplaceand (c function)": [[47, "c.PyNumber_InPlaceAnd"]], "pynumber_inplacefloordivide (c function)": [[47, "c.PyNumber_InPlaceFloorDivide"]], "pynumber_inplacelshift (c function)": [[47, "c.PyNumber_InPlaceLshift"]], "pynumber_inplacematrixmultiply (c function)": [[47, "c.PyNumber_InPlaceMatrixMultiply"]], "pynumber_inplacemultiply (c function)": [[47, "c.PyNumber_InPlaceMultiply"]], "pynumber_inplaceor (c function)": [[47, "c.PyNumber_InPlaceOr"]], "pynumber_inplacepower (c function)": [[47, "c.PyNumber_InPlacePower"]], "pynumber_inplaceremainder (c function)": [[47, "c.PyNumber_InPlaceRemainder"]], "pynumber_inplacershift (c function)": [[47, "c.PyNumber_InPlaceRshift"]], "pynumber_inplacesubtract (c function)": [[47, "c.PyNumber_InPlaceSubtract"]], "pynumber_inplacetruedivide (c function)": [[47, "c.PyNumber_InPlaceTrueDivide"]], "pynumber_inplacexor (c function)": [[47, "c.PyNumber_InPlaceXor"]], "pynumber_index (c function)": [[47, "c.PyNumber_Index"]], "pynumber_invert (c function)": [[47, "c.PyNumber_Invert"]], "pynumber_long (c function)": [[47, "c.PyNumber_Long"]], "pynumber_lshift (c function)": [[47, "c.PyNumber_Lshift"]], "pynumber_matrixmultiply (c function)": [[47, "c.PyNumber_MatrixMultiply"]], "pynumber_multiply (c function)": [[47, "c.PyNumber_Multiply"]], "pynumber_negative (c function)": [[47, "c.PyNumber_Negative"]], "pynumber_or (c function)": [[47, "c.PyNumber_Or"]], "pynumber_positive (c function)": [[47, "c.PyNumber_Positive"]], "pynumber_power (c function)": [[47, "c.PyNumber_Power"]], "pynumber_remainder (c function)": [[47, "c.PyNumber_Remainder"]], "pynumber_rshift (c function)": [[47, "c.PyNumber_Rshift"]], "pynumber_subtract (c function)": [[47, "c.PyNumber_Subtract"]], "pynumber_tobase (c function)": [[47, "c.PyNumber_ToBase"]], "pynumber_truedivide (c function)": [[47, "c.PyNumber_TrueDivide"]], "pynumber_xor (c function)": [[47, "c.PyNumber_Xor"]], "abs": [[47, "index-2"], [443, "index-103"]], "divmod": [[47, "index-0"], [443, "index-100"], [443, "index-101"]], "float": [[47, "index-5"], [360, "index-13"], [443, "index-104"]], "int": [[47, "index-4"], [360, "index-13"], [443, "index-104"]], "pow": [[47, "index-1"], [47, "index-3"], [443, "index-100"], [443, "index-101"], [443, "index-102"]], "pyobject_ascharbuffer (c function)": [[48, "c.PyObject_AsCharBuffer"]], "pyobject_asreadbuffer (c function)": [[48, "c.PyObject_AsReadBuffer"]], "pyobject_aswritebuffer (c function)": [[48, "c.PyObject_AsWriteBuffer"]], "pyobject_checkreadbuffer (c function)": [[48, "c.PyObject_CheckReadBuffer"]], "pep 3119": [[49, "index-4"], [49, "index-5"], [127, "index-0"], [174, "index-4"], [443, "index-94"], [483, "index-16"]], "pyobject_ascii (c function)": [[49, "c.PyObject_ASCII"]], "pyobject_bytes (c function)": [[49, "c.PyObject_Bytes"]], "pyobject_delattr (c function)": [[49, "c.PyObject_DelAttr"]], "pyobject_delattrstring (c function)": [[49, "c.PyObject_DelAttrString"]], "pyobject_delitem (c function)": [[49, "c.PyObject_DelItem"]], "pyobject_dir (c function)": [[49, "c.PyObject_Dir"]], "pyobject_format (c function)": [[49, "c.PyObject_Format"]], "pyobject_genericgetattr (c function)": [[49, "c.PyObject_GenericGetAttr"]], "pyobject_genericgetdict (c function)": [[49, "c.PyObject_GenericGetDict"]], "pyobject_genericsetattr (c function)": [[49, "c.PyObject_GenericSetAttr"]], "pyobject_genericsetdict (c function)": [[49, "c.PyObject_GenericSetDict"]], "pyobject_getaiter (c function)": [[49, "c.PyObject_GetAIter"]], "pyobject_getattr (c function)": [[49, "c.PyObject_GetAttr"]], "pyobject_getattrstring (c function)": [[49, "c.PyObject_GetAttrString"]], "pyobject_getitem (c function)": [[49, "c.PyObject_GetItem"]], "pyobject_getiter (c function)": [[49, "c.PyObject_GetIter"]], "pyobject_hasattr (c function)": [[49, "c.PyObject_HasAttr"]], "pyobject_hasattrstring (c function)": [[49, "c.PyObject_HasAttrString"]], "pyobject_hash (c function)": [[49, "c.PyObject_Hash"]], "pyobject_hashnotimplemented (c function)": [[49, "c.PyObject_HashNotImplemented"]], "pyobject_isinstance (c function)": [[49, "c.PyObject_IsInstance"]], "pyobject_issubclass (c function)": [[49, "c.PyObject_IsSubclass"]], "pyobject_istrue (c function)": [[49, "c.PyObject_IsTrue"]], "pyobject_length (c function)": [[49, "c.PyObject_Length"]], "pyobject_lengthhint (c function)": [[49, "c.PyObject_LengthHint"]], "pyobject_not (c function)": [[49, "c.PyObject_Not"]], "pyobject_print (c function)": [[49, "c.PyObject_Print"]], "pyobject_repr (c function)": [[49, "c.PyObject_Repr"]], "pyobject_richcompare (c function)": [[49, "c.PyObject_RichCompare"]], "pyobject_richcomparebool (c function)": [[49, "c.PyObject_RichCompareBool"]], "pyobject_setattr (c function)": [[49, "c.PyObject_SetAttr"]], "pyobject_setattrstring (c function)": [[49, "c.PyObject_SetAttrString"]], "pyobject_setitem (c function)": [[49, "c.PyObject_SetItem"]], "pyobject_size (c function)": [[49, "c.PyObject_Size"]], "pyobject_str (c function)": [[49, "c.PyObject_Str"], [49, "index-2"]], "pyobject_type (c function)": [[49, "c.PyObject_Type"]], "pyobject_typecheck (c function)": [[49, "c.PyObject_TypeCheck"]], "py_notimplemented (c var)": [[49, "c.Py_NotImplemented"]], "py_return_notimplemented (c macro)": [[49, "c.Py_RETURN_NOTIMPLEMENTED"]], "_pyobject_getdictptr (c function)": [[49, "c._PyObject_GetDictPtr"]], "ascii": [[49, "index-1"], [449, "index-1"], [450, "index-17"]], "hash": [[49, "index-6"], [62, "index-2"], [360, "index-21"], [443, "index-80"]], "repr": [[49, "index-0"], [62, "index-1"], [87, "index-3"], [451, "index-3"]], "string": [[49, "index-2"], [87, "index-3"], [239, "index-11"], [239, "index-4"], [360, "index-27"], [360, "index-29"], [360, "index-31"], [360, "index-34"], [361, "module-string"], [443, "index-18"], [443, "index-76"], [443, "index-78"], [445, "index-42"], [445, "index-43"], [445, "index-45"], [450, "index-25"], [451, "index-3"]], "py_clear (c function)": [[51, "c.Py_CLEAR"]], "py_newref (c function)": [[51, "c.Py_NewRef"]], "py_xincref (c function)": [[51, "c.Py_XINCREF"]], "py_xnewref (c function)": [[51, "c.Py_XNewRef"]], "pyeval_getbuiltins (c function)": [[52, "c.PyEval_GetBuiltins"]], "pyeval_getframe (c function)": [[52, "c.PyEval_GetFrame"]], "pyeval_getfuncdesc (c function)": [[52, "c.PyEval_GetFuncDesc"]], "pyeval_getfuncname (c function)": [[52, "c.PyEval_GetFuncName"]], "pyeval_getglobals (c function)": [[52, "c.PyEval_GetGlobals"]], "pyeval_getlocals (c function)": [[52, "c.PyEval_GetLocals"]], "pysequence_check (c function)": [[53, "c.PySequence_Check"]], "pysequence_concat (c function)": [[53, "c.PySequence_Concat"]], "pysequence_contains (c function)": [[53, "c.PySequence_Contains"]], "pysequence_count (c function)": [[53, "c.PySequence_Count"]], "pysequence_delitem (c function)": [[53, "c.PySequence_DelItem"]], "pysequence_delslice (c function)": [[53, "c.PySequence_DelSlice"]], "pysequence_fast (c function)": [[53, "c.PySequence_Fast"]], "pysequence_fast_get_item (c function)": [[53, "c.PySequence_Fast_GET_ITEM"]], "pysequence_fast_get_size (c function)": [[53, "c.PySequence_Fast_GET_SIZE"]], "pysequence_fast_items (c function)": [[53, "c.PySequence_Fast_ITEMS"]], "pysequence_getslice (c function)": [[53, "c.PySequence_GetSlice"]], "pysequence_item (c function)": [[53, "c.PySequence_ITEM"]], "pysequence_inplaceconcat (c function)": [[53, "c.PySequence_InPlaceConcat"]], "pysequence_inplacerepeat (c function)": [[53, "c.PySequence_InPlaceRepeat"]], "pysequence_index (c function)": [[53, "c.PySequence_Index"]], "pysequence_length (c function)": [[53, "c.PySequence_Length"]], "pysequence_list (c function)": [[53, "c.PySequence_List"]], "pysequence_repeat (c function)": [[53, "c.PySequence_Repeat"]], "pysequence_setitem (c function)": [[53, "c.PySequence_SetItem"]], "pysequence_setslice (c function)": [[53, "c.PySequence_SetSlice"]], "pysequence_size (c function)": [[53, "c.PySequence_Size"]], "pysequence_tuple (c function)": [[53, "c.PySequence_Tuple"]], "pyanyset_check (c function)": [[54, "c.PyAnySet_Check"]], "pyanyset_checkexact (c function)": [[54, "c.PyAnySet_CheckExact"]], "pyfrozenset_check (c function)": [[54, "c.PyFrozenSet_Check"]], "pyfrozenset_checkexact (c function)": [[54, "c.PyFrozenSet_CheckExact"]], "pyfrozenset_new (c function)": [[54, "c.PyFrozenSet_New"]], "pyfrozenset_type (c var)": [[54, "c.PyFrozenSet_Type"]], "pysetobject (c type)": [[54, "c.PySetObject"]], "pyset_add (c function)": [[54, "c.PySet_Add"]], "pyset_check (c function)": [[54, "c.PySet_Check"]], "pyset_checkexact (c function)": [[54, "c.PySet_CheckExact"]], "pyset_clear (c function)": [[54, "c.PySet_Clear"]], "pyset_contains (c function)": [[54, "c.PySet_Contains"]], "pyset_discard (c function)": [[54, "c.PySet_Discard"]], "pyset_get_size (c function)": [[54, "c.PySet_GET_SIZE"]], "pyset_new (c function)": [[54, "c.PySet_New"]], "pyset_pop (c function)": [[54, "c.PySet_Pop"]], "pyset_size (c function)": [[54, "c.PySet_Size"]], "pyset_type (c var)": [[54, "c.PySet_Type"]], "frozenset": [[54, "index-0"], [443, "index-29"]], "set": [[54, "index-0"], [360, "index-50"], [443, "index-28"], [445, "index-16"]], "pyslice_adjustindices (c function)": [[55, "c.PySlice_AdjustIndices"]], "pyslice_check (c function)": [[55, "c.PySlice_Check"]], "pyslice_getindices (c function)": [[55, "c.PySlice_GetIndices"]], "pyslice_getindicesex (c function)": [[55, "c.PySlice_GetIndicesEx"]], "pyslice_new (c function)": [[55, "c.PySlice_New"]], "pyslice_type (c var)": [[55, "c.PySlice_Type"]], "pyslice_unpack (c function)": [[55, "c.PySlice_Unpack"]], "py_ellipsis (c var)": [[55, "c.Py_Ellipsis"]], "pep 387": [[56, "index-0"], [92, "index-0"], [227, "index-11"], [227, "index-12"]], "py_limited_api (c macro)": [[56, "c.Py_LIMITED_API"]], "meth_class (c macro)": [[57, "c.METH_CLASS"]], "meth_coexist (c macro)": [[57, "c.METH_COEXIST"]], "meth_fastcall (c macro)": [[57, "c.METH_FASTCALL"]], "meth_keywords (c macro)": [[57, "c.METH_KEYWORDS"]], "meth_method (c macro)": [[57, "c.METH_METHOD"]], "meth_noargs (c macro)": [[57, "c.METH_NOARGS"]], "meth_o (c macro)": [[57, "c.METH_O"]], "meth_static (c macro)": [[57, "c.METH_STATIC"]], "meth_varargs (c macro)": [[57, "c.METH_VARARGS"]], "pycfunction (c type)": [[57, "c.PyCFunction"]], "pycfunctionwithkeywords (c type)": [[57, "c.PyCFunctionWithKeywords"]], "pycfunction_new (c function)": [[57, "c.PyCFunction_New"]], "pycfunction_newex (c function)": [[57, "c.PyCFunction_NewEx"]], "pycmethod (c type)": [[57, "c.PyCMethod"]], "pycmethod_new (c function)": [[57, "c.PyCMethod_New"]], "pygetsetdef (c type)": [[57, "c.PyGetSetDef"]], "pymemberdef (c type)": [[57, "c.PyMemberDef"]], "pymember_getone (c function)": [[57, "c.PyMember_GetOne"]], "pymember_setone (c function)": [[57, "c.PyMember_SetOne"]], "pymethoddef (c type)": [[57, "c.PyMethodDef"]], "pymethoddef.ml_doc (c member)": [[57, "c.PyMethodDef.ml_doc"]], "pymethoddef.ml_flags (c member)": [[57, "c.PyMethodDef.ml_flags"]], "pymethoddef.ml_meth (c member)": [[57, "c.PyMethodDef.ml_meth"]], "pymethoddef.ml_name (c member)": [[57, "c.PyMethodDef.ml_name"]], "pyobject (c type)": [[57, "c.PyObject"]], "pyobject_head (c macro)": [[57, "c.PyObject_HEAD"]], "pyobject_head_init (c macro)": [[57, "c.PyObject_HEAD_INIT"]], "pyobject_var_head (c macro)": [[57, "c.PyObject_VAR_HEAD"]], "pyvarobject (c type)": [[57, "c.PyVarObject"]], "pyvarobject_head_init (c macro)": [[57, "c.PyVarObject_HEAD_INIT"]], "py_is_type (c function)": [[57, "c.Py_IS_TYPE"]], "py_is (c function)": [[57, "c.Py_Is"]], "py_isfalse (c function)": [[57, "c.Py_IsFalse"]], "py_isnone (c function)": [[57, "c.Py_IsNone"]], "py_istrue (c function)": [[57, "c.Py_IsTrue"]], "py_refcnt (c function)": [[57, "c.Py_REFCNT"]], "py_set_refcnt (c function)": [[57, "c.Py_SET_REFCNT"]], "py_set_size (c function)": [[57, "c.Py_SET_SIZE"]], "py_set_type (c function)": [[57, "c.Py_SET_TYPE"]], "py_size (c function)": [[57, "c.Py_SIZE"]], "py_type (c function)": [[57, "c.Py_TYPE"]], "_pycfunctionfast (c type)": [[57, "c._PyCFunctionFast"]], "_pycfunctionfastwithkeywords (c type)": [[57, "c._PyCFunctionFastWithKeywords"]], "classmethod": [[57, "index-0"]], "staticmethod": [[57, "index-1"]], "pep 578": [[58, "index-1"], [155, "index-1"], [368, "index-1"], [495, "index-4"]], "pyos_afterfork (c function)": [[58, "c.PyOS_AfterFork"]], "pyos_afterfork_child (c function)": [[58, "c.PyOS_AfterFork_Child"]], "pyos_afterfork_parent (c function)": [[58, "c.PyOS_AfterFork_Parent"]], "pyos_beforefork (c function)": [[58, "c.PyOS_BeforeFork"]], "pyos_checkstack (c function)": [[58, "c.PyOS_CheckStack"]], "pyos_fspath (c function)": [[58, "c.PyOS_FSPath"]], "pyos_getsig (c function)": [[58, "c.PyOS_getsig"]], "pyos_setsig (c function)": [[58, "c.PyOS_setsig"]], "pyos_sighandler_t (c type)": [[58, "c.PyOS_sighandler_t"]], "pysys_addaudithook (c function)": [[58, "c.PySys_AddAuditHook"]], "pysys_addwarnoption (c function)": [[58, "c.PySys_AddWarnOption"]], "pysys_addwarnoptionunicode (c function)": [[58, "c.PySys_AddWarnOptionUnicode"]], "pysys_addxoption (c function)": [[58, "c.PySys_AddXOption"]], "pysys_audit (c function)": [[58, "c.PySys_Audit"]], "pysys_formatstderr (c function)": [[58, "c.PySys_FormatStderr"]], "pysys_formatstdout (c function)": [[58, "c.PySys_FormatStdout"]], "pysys_getobject (c function)": [[58, "c.PySys_GetObject"]], "pysys_getxoptions (c function)": [[58, "c.PySys_GetXOptions"]], "pysys_resetwarnoptions (c function)": [[58, "c.PySys_ResetWarnOptions"]], "pysys_setobject (c function)": [[58, "c.PySys_SetObject"]], "pysys_setpath (c function)": [[58, "c.PySys_SetPath"]], "pysys_writestderr (c function)": [[58, "c.PySys_WriteStderr"]], "pysys_writestdout (c function)": [[58, "c.PySys_WriteStdout"]], "py_atexit (c function)": [[58, "c.Py_AtExit"]], "py_audithookfunction (c type)": [[58, "c.Py_AuditHookFunction"]], "py_decodelocale (c function)": [[58, "c.Py_DecodeLocale"]], "py_encodelocale (c function)": [[58, "c.Py_EncodeLocale"]], "py_exit (c function)": [[58, "c.Py_Exit"]], "py_fatalerror (c function)": [[58, "c.Py_FatalError"]], "py_fdisinteractive (c function)": [[58, "c.Py_FdIsInteractive"]], "use_stackcheck (c macro)": [[58, "index-0"]], "abort (c function)": [[58, "index-2"]], "cleanup functions": [[58, "index-4"]], "exit (c function)": [[58, "index-3"]], "pystructsequence_desc (c type)": [[59, "c.PyStructSequence_Desc"]], "pystructsequence_desc.doc (c member)": [[59, "c.PyStructSequence_Desc.doc"]], "pystructsequence_desc.fields (c member)": [[59, "c.PyStructSequence_Desc.fields"]], "pystructsequence_desc.n_in_sequence (c member)": [[59, "c.PyStructSequence_Desc.n_in_sequence"]], "pystructsequence_desc.name (c member)": [[59, "c.PyStructSequence_Desc.name"]], "pystructsequence_field (c type)": [[59, "c.PyStructSequence_Field"]], "pystructsequence_field.doc (c member)": [[59, "c.PyStructSequence_Field.doc"]], "pystructsequence_field.name (c member)": [[59, "c.PyStructSequence_Field.name"]], "pystructsequence_get_item (c function)": [[59, "c.PyStructSequence_GET_ITEM"]], "pystructsequence_getitem (c function)": [[59, "c.PyStructSequence_GetItem"]], "pystructsequence_inittype (c function)": [[59, "c.PyStructSequence_InitType"]], "pystructsequence_inittype2 (c function)": [[59, "c.PyStructSequence_InitType2"]], "pystructsequence_new (c function)": [[59, "c.PyStructSequence_New"]], "pystructsequence_newtype (c function)": [[59, "c.PyStructSequence_NewType"]], "pystructsequence_set_item (c function)": [[59, "c.PyStructSequence_SET_ITEM"]], "pystructsequence_setitem (c function)": [[59, "c.PyStructSequence_SetItem"]], "pystructsequence_unnamedfield (c var)": [[59, "c.PyStructSequence_UnnamedField"]], "pytupleobject (c type)": [[59, "c.PyTupleObject"]], "pytuple_check (c function)": [[59, "c.PyTuple_Check"]], "pytuple_checkexact (c function)": [[59, "c.PyTuple_CheckExact"]], "pytuple_get_item (c function)": [[59, "c.PyTuple_GET_ITEM"]], "pytuple_get_size (c function)": [[59, "c.PyTuple_GET_SIZE"]], "pytuple_getitem (c function)": [[59, "c.PyTuple_GetItem"]], "pytuple_getslice (c function)": [[59, "c.PyTuple_GetSlice"]], "pytuple_new (c function)": [[59, "c.PyTuple_New"]], "pytuple_pack (c function)": [[59, "c.PyTuple_Pack"]], "pytuple_set_item (c function)": [[59, "c.PyTuple_SET_ITEM"]], "pytuple_size (c function)": [[59, "c.PyTuple_Size"]], "pytuple_type (c var)": [[59, "c.PyTuple_Type"]], "_pytuple_resize (c function)": [[59, "c._PyTuple_Resize"]], "pytypeobject (c type)": [[60, "c.PyTypeObject"]], "pytype_check (c function)": [[60, "c.PyType_Check"]], "pytype_checkexact (c function)": [[60, "c.PyType_CheckExact"]], "pytype_clearcache (c function)": [[60, "c.PyType_ClearCache"]], "pytype_frommoduleandspec (c function)": [[60, "c.PyType_FromModuleAndSpec"]], "pytype_fromspec (c function)": [[60, "c.PyType_FromSpec"]], "pytype_fromspecwithbases (c function)": [[60, "c.PyType_FromSpecWithBases"]], "pytype_genericalloc (c function)": [[60, "c.PyType_GenericAlloc"]], "pytype_genericnew (c function)": [[60, "c.PyType_GenericNew"]], "pytype_getflags (c function)": [[60, "c.PyType_GetFlags"]], "pytype_getmodule (c function)": [[60, "c.PyType_GetModule"]], "pytype_getmodulebydef (c function)": [[60, "c.PyType_GetModuleByDef"]], "pytype_getmodulestate (c function)": [[60, "c.PyType_GetModuleState"]], "pytype_getname (c function)": [[60, "c.PyType_GetName"]], "pytype_getqualname (c function)": [[60, "c.PyType_GetQualName"]], "pytype_getslot (c function)": [[60, "c.PyType_GetSlot"]], "pytype_hasfeature (c function)": [[60, "c.PyType_HasFeature"]], "pytype_is_gc (c function)": [[60, "c.PyType_IS_GC"]], "pytype_issubtype (c function)": [[60, "c.PyType_IsSubtype"]], "pytype_modified (c function)": [[60, "c.PyType_Modified"]], "pytype_ready (c function)": [[60, "c.PyType_Ready"]], "pytype_slot (c type)": [[60, "c.PyType_Slot"]], "pytype_slot.pytype_slot.pfunc (c member)": [[60, "c.PyType_Slot.PyType_Slot.pfunc"]], "pytype_slot.pytype_slot.slot (c member)": [[60, "c.PyType_Slot.PyType_Slot.slot"]], "pytype_spec (c type)": [[60, "c.PyType_Spec"]], "pytype_spec.pytype_spec.basicsize (c member)": [[60, "c.PyType_Spec.PyType_Spec.basicsize"]], "pytype_spec.pytype_spec.flags (c member)": [[60, "c.PyType_Spec.PyType_Spec.flags"]], "pytype_spec.pytype_spec.itemsize (c member)": [[60, "c.PyType_Spec.PyType_Spec.itemsize"]], "pytype_spec.pytype_spec.name (c member)": [[60, "c.PyType_Spec.PyType_Spec.name"]], "pytype_spec.pytype_spec.slots (c member)": [[60, "c.PyType_Spec.PyType_Spec.slots"]], "pytype_type (c var)": [[60, "c.PyType_Type"]], "py_genericalias (c function)": [[61, "c.Py_GenericAlias"]], "py_genericaliastype (c var)": [[61, "c.Py_GenericAliasType"]], "pep 442": [[62, "index-5"], [87, "index-2"], [241, "index-0"], [491, "index-15"], [491, "index-16"], [491, "index-45"], [491, "index-46"], [496, "index-20"]], "pep 634": [[62, "index-3"], [62, "index-4"], [123, "index-1"], [442, "index-19"], [442, "index-25"], [443, "index-108"], [487, "index-0"], [487, "index-15"]], "pyasyncmethods (c type)": [[62, "c.PyAsyncMethods"]], "pyasyncmethods.am_aiter (c member)": [[62, "c.PyAsyncMethods.am_aiter"]], "pyasyncmethods.am_anext (c member)": [[62, "c.PyAsyncMethods.am_anext"]], "pyasyncmethods.am_await (c member)": [[62, "c.PyAsyncMethods.am_await"]], "pyasyncmethods.am_send (c member)": [[62, "c.PyAsyncMethods.am_send"]], "pybufferprocs.bf_getbuffer (c member)": [[62, "c.PyBufferProcs.bf_getbuffer"]], "pybufferprocs.bf_releasebuffer (c member)": [[62, "c.PyBufferProcs.bf_releasebuffer"]], "pymappingmethods (c type)": [[62, "c.PyMappingMethods"]], "pymappingmethods.mp_ass_subscript (c member)": [[62, "c.PyMappingMethods.mp_ass_subscript"]], "pymappingmethods.mp_length (c member)": [[62, "c.PyMappingMethods.mp_length"]], "pymappingmethods.mp_subscript (c member)": [[62, "c.PyMappingMethods.mp_subscript"]], "pynumbermethods (c type)": [[62, "c.PyNumberMethods"]], "pynumbermethods.nb_absolute (c member)": [[62, "c.PyNumberMethods.nb_absolute"]], "pynumbermethods.nb_add (c member)": [[62, "c.PyNumberMethods.nb_add"]], "pynumbermethods.nb_and (c member)": [[62, "c.PyNumberMethods.nb_and"]], "pynumbermethods.nb_bool (c member)": [[62, "c.PyNumberMethods.nb_bool"]], "pynumbermethods.nb_divmod (c member)": [[62, "c.PyNumberMethods.nb_divmod"]], "pynumbermethods.nb_float (c member)": [[62, "c.PyNumberMethods.nb_float"]], "pynumbermethods.nb_floor_divide (c member)": [[62, "c.PyNumberMethods.nb_floor_divide"]], "pynumbermethods.nb_index (c member)": [[62, "c.PyNumberMethods.nb_index"]], "pynumbermethods.nb_inplace_add (c member)": [[62, "c.PyNumberMethods.nb_inplace_add"]], "pynumbermethods.nb_inplace_and (c member)": [[62, "c.PyNumberMethods.nb_inplace_and"]], "pynumbermethods.nb_inplace_floor_divide (c member)": [[62, "c.PyNumberMethods.nb_inplace_floor_divide"]], "pynumbermethods.nb_inplace_lshift (c member)": [[62, "c.PyNumberMethods.nb_inplace_lshift"]], "pynumbermethods.nb_inplace_matrix_multiply (c member)": [[62, "c.PyNumberMethods.nb_inplace_matrix_multiply"]], "pynumbermethods.nb_inplace_multiply (c member)": [[62, "c.PyNumberMethods.nb_inplace_multiply"]], "pynumbermethods.nb_inplace_or (c member)": [[62, "c.PyNumberMethods.nb_inplace_or"]], "pynumbermethods.nb_inplace_power (c member)": [[62, "c.PyNumberMethods.nb_inplace_power"]], "pynumbermethods.nb_inplace_remainder (c member)": [[62, "c.PyNumberMethods.nb_inplace_remainder"]], "pynumbermethods.nb_inplace_rshift (c member)": [[62, "c.PyNumberMethods.nb_inplace_rshift"]], "pynumbermethods.nb_inplace_subtract (c member)": [[62, "c.PyNumberMethods.nb_inplace_subtract"]], "pynumbermethods.nb_inplace_true_divide (c member)": [[62, "c.PyNumberMethods.nb_inplace_true_divide"]], "pynumbermethods.nb_inplace_xor (c member)": [[62, "c.PyNumberMethods.nb_inplace_xor"]], "pynumbermethods.nb_int (c member)": [[62, "c.PyNumberMethods.nb_int"]], "pynumbermethods.nb_invert (c member)": [[62, "c.PyNumberMethods.nb_invert"]], "pynumbermethods.nb_lshift (c member)": [[62, "c.PyNumberMethods.nb_lshift"]], "pynumbermethods.nb_matrix_multiply (c member)": [[62, "c.PyNumberMethods.nb_matrix_multiply"]], "pynumbermethods.nb_multiply (c member)": [[62, "c.PyNumberMethods.nb_multiply"]], "pynumbermethods.nb_negative (c member)": [[62, "c.PyNumberMethods.nb_negative"]], "pynumbermethods.nb_or (c member)": [[62, "c.PyNumberMethods.nb_or"]], "pynumbermethods.nb_positive (c member)": [[62, "c.PyNumberMethods.nb_positive"]], "pynumbermethods.nb_power (c member)": [[62, "c.PyNumberMethods.nb_power"]], "pynumbermethods.nb_remainder (c member)": [[62, "c.PyNumberMethods.nb_remainder"]], "pynumbermethods.nb_reserved (c member)": [[62, "c.PyNumberMethods.nb_reserved"]], "pynumbermethods.nb_rshift (c member)": [[62, "c.PyNumberMethods.nb_rshift"]], "pynumbermethods.nb_subtract (c member)": [[62, "c.PyNumberMethods.nb_subtract"]], "pynumbermethods.nb_true_divide (c member)": [[62, "c.PyNumberMethods.nb_true_divide"]], "pynumbermethods.nb_xor (c member)": [[62, "c.PyNumberMethods.nb_xor"]], "pyobject._ob_next (c member)": [[62, "c.PyObject._ob_next"]], "pyobject._ob_prev (c member)": [[62, "c.PyObject._ob_prev"]], "pyobject.ob_refcnt (c member)": [[62, "c.PyObject.ob_refcnt"]], "pyobject.ob_type (c member)": [[62, "c.PyObject.ob_type"]], "pysequencemethods (c type)": [[62, "c.PySequenceMethods"]], "pysequencemethods.sq_ass_item (c member)": [[62, "c.PySequenceMethods.sq_ass_item"]], "pysequencemethods.sq_concat (c member)": [[62, "c.PySequenceMethods.sq_concat"]], "pysequencemethods.sq_contains (c member)": [[62, "c.PySequenceMethods.sq_contains"]], "pysequencemethods.sq_inplace_concat (c member)": [[62, "c.PySequenceMethods.sq_inplace_concat"]], "pysequencemethods.sq_inplace_repeat (c member)": [[62, "c.PySequenceMethods.sq_inplace_repeat"]], "pysequencemethods.sq_item (c member)": [[62, "c.PySequenceMethods.sq_item"]], "pysequencemethods.sq_length (c member)": [[62, "c.PySequenceMethods.sq_length"]], "pysequencemethods.sq_repeat (c member)": [[62, "c.PySequenceMethods.sq_repeat"]], "pytypeobject.tp_alloc (c member)": [[62, "c.PyTypeObject.tp_alloc"]], "pytypeobject.tp_as_async (c member)": [[62, "c.PyTypeObject.tp_as_async"]], "pytypeobject.tp_as_buffer (c member)": [[62, "c.PyTypeObject.tp_as_buffer"]], "pytypeobject.tp_as_mapping (c member)": [[62, "c.PyTypeObject.tp_as_mapping"]], "pytypeobject.tp_as_number (c member)": [[62, "c.PyTypeObject.tp_as_number"]], "pytypeobject.tp_as_sequence (c member)": [[62, "c.PyTypeObject.tp_as_sequence"]], "pytypeobject.tp_base (c member)": [[62, "c.PyTypeObject.tp_base"]], "pytypeobject.tp_bases (c member)": [[62, "c.PyTypeObject.tp_bases"]], "pytypeobject.tp_basicsize (c member)": [[62, "c.PyTypeObject.tp_basicsize"]], "pytypeobject.tp_cache (c member)": [[62, "c.PyTypeObject.tp_cache"]], "pytypeobject.tp_call (c member)": [[62, "c.PyTypeObject.tp_call"]], "pytypeobject.tp_clear (c member)": [[62, "c.PyTypeObject.tp_clear"]], "pytypeobject.tp_dealloc (c member)": [[62, "c.PyTypeObject.tp_dealloc"]], "pytypeobject.tp_del (c member)": [[62, "c.PyTypeObject.tp_del"]], "pytypeobject.tp_descr_get (c member)": [[62, "c.PyTypeObject.tp_descr_get"]], "pytypeobject.tp_descr_set (c member)": [[62, "c.PyTypeObject.tp_descr_set"]], "pytypeobject.tp_dict (c member)": [[62, "c.PyTypeObject.tp_dict"]], "pytypeobject.tp_dictoffset (c member)": [[62, "c.PyTypeObject.tp_dictoffset"]], "pytypeobject.tp_doc (c member)": [[62, "c.PyTypeObject.tp_doc"]], "pytypeobject.tp_finalize (c member)": [[62, "c.PyTypeObject.tp_finalize"]], "pytypeobject.tp_flags (c member)": [[62, "c.PyTypeObject.tp_flags"]], "pytypeobject.tp_free (c member)": [[62, "c.PyTypeObject.tp_free"]], "pytypeobject.tp_getattr (c member)": [[62, "c.PyTypeObject.tp_getattr"]], "pytypeobject.tp_getattro (c member)": [[62, "c.PyTypeObject.tp_getattro"]], "pytypeobject.tp_getset (c member)": [[62, "c.PyTypeObject.tp_getset"]], "pytypeobject.tp_hash (c member)": [[62, "c.PyTypeObject.tp_hash"]], "pytypeobject.tp_init (c member)": [[62, "c.PyTypeObject.tp_init"]], "pytypeobject.tp_is_gc (c member)": [[62, "c.PyTypeObject.tp_is_gc"]], "pytypeobject.tp_itemsize (c member)": [[62, "c.PyTypeObject.tp_itemsize"]], "pytypeobject.tp_iter (c member)": [[62, "c.PyTypeObject.tp_iter"]], "pytypeobject.tp_iternext (c member)": [[62, "c.PyTypeObject.tp_iternext"]], "pytypeobject.tp_members (c member)": [[62, "c.PyTypeObject.tp_members"]], "pytypeobject.tp_methods (c member)": [[62, "c.PyTypeObject.tp_methods"]], "pytypeobject.tp_mro (c member)": [[62, "c.PyTypeObject.tp_mro"]], "pytypeobject.tp_name (c member)": [[62, "c.PyTypeObject.tp_name"]], "pytypeobject.tp_new (c member)": [[62, "c.PyTypeObject.tp_new"]], "pytypeobject.tp_repr (c member)": [[62, "c.PyTypeObject.tp_repr"]], "pytypeobject.tp_richcompare (c member)": [[62, "c.PyTypeObject.tp_richcompare"]], "pytypeobject.tp_setattr (c member)": [[62, "c.PyTypeObject.tp_setattr"]], "pytypeobject.tp_setattro (c member)": [[62, "c.PyTypeObject.tp_setattro"]], "pytypeobject.tp_str (c member)": [[62, "c.PyTypeObject.tp_str"]], "pytypeobject.tp_subclasses (c member)": [[62, "c.PyTypeObject.tp_subclasses"]], "pytypeobject.tp_traverse (c member)": [[62, "c.PyTypeObject.tp_traverse"]], "pytypeobject.tp_vectorcall (c member)": [[62, "c.PyTypeObject.tp_vectorcall"]], "pytypeobject.tp_vectorcall_offset (c member)": [[62, "c.PyTypeObject.tp_vectorcall_offset"]], "pytypeobject.tp_version_tag (c member)": [[62, "c.PyTypeObject.tp_version_tag"]], "pytypeobject.tp_weaklist (c member)": [[62, "c.PyTypeObject.tp_weaklist"]], "pytypeobject.tp_weaklistoffset (c member)": [[62, "c.PyTypeObject.tp_weaklistoffset"]], "pyvarobject.ob_size (c member)": [[62, "c.PyVarObject.ob_size"]], "py_eq (c macro)": [[62, "c.Py_EQ"]], "py_ge (c macro)": [[62, "c.Py_GE"]], "py_gt (c macro)": [[62, "c.Py_GT"]], "py_le (c macro)": [[62, "c.Py_LE"]], "py_lt (c macro)": [[62, "c.Py_LT"]], "py_ne (c macro)": [[62, "c.Py_NE"]], "py_return_richcompare (c macro)": [[62, "c.Py_RETURN_RICHCOMPARE"]], "py_tpflags_basetype (c macro)": [[62, "c.Py_TPFLAGS_BASETYPE"]], "py_tpflags_base_exc_subclass (c macro)": [[62, "c.Py_TPFLAGS_BASE_EXC_SUBCLASS"]], "py_tpflags_bytes_subclass (c macro)": [[62, "c.Py_TPFLAGS_BYTES_SUBCLASS"]], "py_tpflags_default (c macro)": [[62, "c.Py_TPFLAGS_DEFAULT"]], "py_tpflags_dict_subclass (c macro)": [[62, "c.Py_TPFLAGS_DICT_SUBCLASS"]], "py_tpflags_disallow_instantiation (c macro)": [[62, "c.Py_TPFLAGS_DISALLOW_INSTANTIATION"]], "py_tpflags_have_finalize (c macro)": [[62, "c.Py_TPFLAGS_HAVE_FINALIZE"]], "py_tpflags_have_gc (c macro)": [[62, "c.Py_TPFLAGS_HAVE_GC"]], "py_tpflags_have_vectorcall (c macro)": [[62, "c.Py_TPFLAGS_HAVE_VECTORCALL"]], "py_tpflags_heaptype (c macro)": [[62, "c.Py_TPFLAGS_HEAPTYPE"]], "py_tpflags_immutabletype (c macro)": [[62, "c.Py_TPFLAGS_IMMUTABLETYPE"]], "py_tpflags_list_subclass (c macro)": [[62, "c.Py_TPFLAGS_LIST_SUBCLASS"]], "py_tpflags_long_subclass (c macro)": [[62, "c.Py_TPFLAGS_LONG_SUBCLASS"]], "py_tpflags_mapping (c macro)": [[62, "c.Py_TPFLAGS_MAPPING"]], "py_tpflags_method_descriptor (c macro)": [[62, "c.Py_TPFLAGS_METHOD_DESCRIPTOR"]], "py_tpflags_ready (c macro)": [[62, "c.Py_TPFLAGS_READY"]], "py_tpflags_readying (c macro)": [[62, "c.Py_TPFLAGS_READYING"]], "py_tpflags_sequence (c macro)": [[62, "c.Py_TPFLAGS_SEQUENCE"]], "py_tpflags_tuple_subclass (c macro)": [[62, "c.Py_TPFLAGS_TUPLE_SUBCLASS"]], "py_tpflags_type_subclass (c macro)": [[62, "c.Py_TPFLAGS_TYPE_SUBCLASS"]], "py_tpflags_unicode_subclass (c macro)": [[62, "c.Py_TPFLAGS_UNICODE_SUBCLASS"]], "allocfunc (c type)": [[62, "c.allocfunc"]], "binaryfunc (c type)": [[62, "c.binaryfunc"]], "descrgetfunc (c type)": [[62, "c.descrgetfunc"]], "descrsetfunc (c type)": [[62, "c.descrsetfunc"]], "destructor (c type)": [[62, "c.destructor"]], "freefunc (c type)": [[62, "c.freefunc"]], "getattrfunc (c type)": [[62, "c.getattrfunc"]], "getattrofunc (c type)": [[62, "c.getattrofunc"]], "getbufferproc (c type)": [[62, "c.getbufferproc"]], "getiterfunc (c type)": [[62, "c.getiterfunc"]], "hashfunc (c type)": [[62, "c.hashfunc"]], "initproc (c type)": [[62, "c.initproc"]], "iternextfunc (c type)": [[62, "c.iternextfunc"]], "lenfunc (c type)": [[62, "c.lenfunc"]], "newfunc (c type)": [[62, "c.newfunc"]], "objobjargproc (c type)": [[62, "c.objobjargproc"]], "objobjproc (c type)": [[62, "c.objobjproc"]], "releasebufferproc (c type)": [[62, "c.releasebufferproc"]], "reprfunc (c type)": [[62, "c.reprfunc"]], "richcmpfunc (c type)": [[62, "c.richcmpfunc"]], "sendfunc (c type)": [[62, "c.sendfunc"]], "setattrfunc (c type)": [[62, "c.setattrfunc"]], "setattrofunc (c type)": [[62, "c.setattrofunc"]], "ssizeargfunc (c type)": [[62, "c.ssizeargfunc"]], "ssizeobjargproc (c type)": [[62, "c.ssizeobjargproc"]], "ternaryfunc (c type)": [[62, "c.ternaryfunc"]], "unaryfunc (c type)": [[62, "c.unaryfunc"]], "pep 383": [[63, "index-3"], [63, "index-4"], [63, "index-5"], [171, "index-2"], [353, "index-1"]], "pep 393": [[63, "index-0"], [63, "index-2"], [171, "index-5"], [368, "index-19"], [487, "index-39"], [490, "index-30"], [490, "index-32"], [490, "index-33"], [490, "index-34"], [490, "index-38"], [490, "index-6"], [490, "index-7"], [490, "index-8"], [496, "index-25"], [496, "index-26"]], "pep 623": [[63, "index-1"], [487, "index-11"]], "pyasciiobject (c type)": [[63, "c.PyASCIIObject"]], "pycompactunicodeobject (c type)": [[63, "c.PyCompactUnicodeObject"]], "pyunicodeobject (c type)": [[63, "c.PyUnicodeObject"]], "pyunicode_1byte_data (c function)": [[63, "c.PyUnicode_1BYTE_DATA"]], "pyunicode_1byte_kind (c macro)": [[63, "c.PyUnicode_1BYTE_KIND"]], "pyunicode_2byte_data (c function)": [[63, "c.PyUnicode_2BYTE_DATA"]], "pyunicode_2byte_kind (c macro)": [[63, "c.PyUnicode_2BYTE_KIND"]], "pyunicode_4byte_data (c function)": [[63, "c.PyUnicode_4BYTE_DATA"]], "pyunicode_4byte_kind (c macro)": [[63, "c.PyUnicode_4BYTE_KIND"]], "pyunicode_as_data (c function)": [[63, "c.PyUnicode_AS_DATA"]], "pyunicode_as_unicode (c function)": [[63, "c.PyUnicode_AS_UNICODE"]], "pyunicode_asasciistring (c function)": [[63, "c.PyUnicode_AsASCIIString"]], "pyunicode_ascharmapstring (c function)": [[63, "c.PyUnicode_AsCharmapString"]], "pyunicode_asencodedstring (c function)": [[63, "c.PyUnicode_AsEncodedString"]], "pyunicode_aslatin1string (c function)": [[63, "c.PyUnicode_AsLatin1String"]], "pyunicode_asmbcsstring (c function)": [[63, "c.PyUnicode_AsMBCSString"]], "pyunicode_asrawunicodeescapestring (c function)": [[63, "c.PyUnicode_AsRawUnicodeEscapeString"]], "pyunicode_asucs4 (c function)": [[63, "c.PyUnicode_AsUCS4"]], "pyunicode_asucs4copy (c function)": [[63, "c.PyUnicode_AsUCS4Copy"]], "pyunicode_asutf16string (c function)": [[63, "c.PyUnicode_AsUTF16String"]], "pyunicode_asutf32string (c function)": [[63, "c.PyUnicode_AsUTF32String"]], "pyunicode_asutf8 (c function)": [[63, "c.PyUnicode_AsUTF8"]], "pyunicode_asutf8andsize (c function)": [[63, "c.PyUnicode_AsUTF8AndSize"]], "pyunicode_asutf8string (c function)": [[63, "c.PyUnicode_AsUTF8String"]], "pyunicode_asunicode (c function)": [[63, "c.PyUnicode_AsUnicode"]], "pyunicode_asunicodeandsize (c function)": [[63, "c.PyUnicode_AsUnicodeAndSize"]], "pyunicode_asunicodeescapestring (c function)": [[63, "c.PyUnicode_AsUnicodeEscapeString"]], "pyunicode_aswidechar (c function)": [[63, "c.PyUnicode_AsWideChar"]], "pyunicode_aswidecharstring (c function)": [[63, "c.PyUnicode_AsWideCharString"]], "pyunicode_check (c function)": [[63, "c.PyUnicode_Check"]], "pyunicode_checkexact (c function)": [[63, "c.PyUnicode_CheckExact"]], "pyunicode_compare (c function)": [[63, "c.PyUnicode_Compare"]], "pyunicode_comparewithasciistring (c function)": [[63, "c.PyUnicode_CompareWithASCIIString"]], "pyunicode_concat (c function)": [[63, "c.PyUnicode_Concat"]], "pyunicode_contains (c function)": [[63, "c.PyUnicode_Contains"]], "pyunicode_copycharacters (c function)": [[63, "c.PyUnicode_CopyCharacters"]], "pyunicode_count (c function)": [[63, "c.PyUnicode_Count"]], "pyunicode_data (c function)": [[63, "c.PyUnicode_DATA"]], "pyunicode_decode (c function)": [[63, "c.PyUnicode_Decode"]], "pyunicode_decodeascii (c function)": [[63, "c.PyUnicode_DecodeASCII"]], "pyunicode_decodecharmap (c function)": [[63, "c.PyUnicode_DecodeCharmap"]], "pyunicode_decodefsdefault (c function)": [[63, "c.PyUnicode_DecodeFSDefault"]], "pyunicode_decodefsdefaultandsize (c function)": [[63, "c.PyUnicode_DecodeFSDefaultAndSize"]], "pyunicode_decodelatin1 (c function)": [[63, "c.PyUnicode_DecodeLatin1"]], "pyunicode_decodelocale (c function)": [[63, "c.PyUnicode_DecodeLocale"]], "pyunicode_decodelocaleandsize (c function)": [[63, "c.PyUnicode_DecodeLocaleAndSize"]], "pyunicode_decodembcs (c function)": [[63, "c.PyUnicode_DecodeMBCS"]], "pyunicode_decodembcsstateful (c function)": [[63, "c.PyUnicode_DecodeMBCSStateful"]], "pyunicode_decoderawunicodeescape (c function)": [[63, "c.PyUnicode_DecodeRawUnicodeEscape"]], "pyunicode_decodeutf16 (c function)": [[63, "c.PyUnicode_DecodeUTF16"]], "pyunicode_decodeutf16stateful (c function)": [[63, "c.PyUnicode_DecodeUTF16Stateful"]], "pyunicode_decodeutf32 (c function)": [[63, "c.PyUnicode_DecodeUTF32"]], "pyunicode_decodeutf32stateful (c function)": [[63, "c.PyUnicode_DecodeUTF32Stateful"]], "pyunicode_decodeutf7 (c function)": [[63, "c.PyUnicode_DecodeUTF7"]], "pyunicode_decodeutf7stateful (c function)": [[63, "c.PyUnicode_DecodeUTF7Stateful"]], "pyunicode_decodeutf8 (c function)": [[63, "c.PyUnicode_DecodeUTF8"]], "pyunicode_decodeutf8stateful (c function)": [[63, "c.PyUnicode_DecodeUTF8Stateful"]], "pyunicode_decodeunicodeescape (c function)": [[63, "c.PyUnicode_DecodeUnicodeEscape"]], "pyunicode_encodecodepage (c function)": [[63, "c.PyUnicode_EncodeCodePage"]], "pyunicode_encodefsdefault (c function)": [[63, "c.PyUnicode_EncodeFSDefault"]], "pyunicode_encodelocale (c function)": [[63, "c.PyUnicode_EncodeLocale"]], "pyunicode_fsconverter (c function)": [[63, "c.PyUnicode_FSConverter"]], "pyunicode_fsdecoder (c function)": [[63, "c.PyUnicode_FSDecoder"]], "pyunicode_fill (c function)": [[63, "c.PyUnicode_Fill"]], "pyunicode_find (c function)": [[63, "c.PyUnicode_Find"]], "pyunicode_findchar (c function)": [[63, "c.PyUnicode_FindChar"]], "pyunicode_format (c function)": [[63, "c.PyUnicode_Format"]], "pyunicode_fromencodedobject (c function)": [[63, "c.PyUnicode_FromEncodedObject"]], "pyunicode_fromformat (c function)": [[63, "c.PyUnicode_FromFormat"]], "pyunicode_fromformatv (c function)": [[63, "c.PyUnicode_FromFormatV"]], "pyunicode_fromkindanddata (c function)": [[63, "c.PyUnicode_FromKindAndData"]], "pyunicode_fromobject (c function)": [[63, "c.PyUnicode_FromObject"]], "pyunicode_fromstring (c function)": [[63, "c.PyUnicode_FromString"]], "pyunicode_fromstringandsize (c function)": [[63, "c.PyUnicode_FromStringAndSize"]], "pyunicode_fromunicode (c function)": [[63, "c.PyUnicode_FromUnicode"]], "pyunicode_fromwidechar (c function)": [[63, "c.PyUnicode_FromWideChar"]], "pyunicode_get_data_size (c function)": [[63, "c.PyUnicode_GET_DATA_SIZE"]], "pyunicode_get_length (c function)": [[63, "c.PyUnicode_GET_LENGTH"]], "pyunicode_get_size (c function)": [[63, "c.PyUnicode_GET_SIZE"]], "pyunicode_getlength (c function)": [[63, "c.PyUnicode_GetLength"]], "pyunicode_getsize (c function)": [[63, "c.PyUnicode_GetSize"]], "pyunicode_internfromstring (c function)": [[63, "c.PyUnicode_InternFromString"]], "pyunicode_interninplace (c function)": [[63, "c.PyUnicode_InternInPlace"]], "pyunicode_isidentifier (c function)": [[63, "c.PyUnicode_IsIdentifier"]], "pyunicode_join (c function)": [[63, "c.PyUnicode_Join"]], "pyunicode_kind (c function)": [[63, "c.PyUnicode_KIND"]], "pyunicode_max_char_value (c function)": [[63, "c.PyUnicode_MAX_CHAR_VALUE"]], "pyunicode_new (c function)": [[63, "c.PyUnicode_New"]], "pyunicode_read (c function)": [[63, "c.PyUnicode_READ"]], "pyunicode_ready (c function)": [[63, "c.PyUnicode_READY"]], "pyunicode_read_char (c function)": [[63, "c.PyUnicode_READ_CHAR"]], "pyunicode_readchar (c function)": [[63, "c.PyUnicode_ReadChar"]], "pyunicode_replace (c function)": [[63, "c.PyUnicode_Replace"]], "pyunicode_richcompare (c function)": [[63, "c.PyUnicode_RichCompare"]], "pyunicode_split (c function)": [[63, "c.PyUnicode_Split"]], "pyunicode_splitlines (c function)": [[63, "c.PyUnicode_Splitlines"]], "pyunicode_substring (c function)": [[63, "c.PyUnicode_Substring"]], "pyunicode_tailmatch (c function)": [[63, "c.PyUnicode_Tailmatch"]], "pyunicode_translate (c function)": [[63, "c.PyUnicode_Translate"]], "pyunicode_type (c var)": [[63, "c.PyUnicode_Type"]], "pyunicode_wchar_kind (c macro)": [[63, "c.PyUnicode_WCHAR_KIND"]], "pyunicode_write (c function)": [[63, "c.PyUnicode_WRITE"]], "pyunicode_writechar (c function)": [[63, "c.PyUnicode_WriteChar"]], "py_ucs1 (c type)": [[63, "c.Py_UCS1"]], "py_ucs2 (c type)": [[63, "c.Py_UCS2"]], "py_ucs4 (c type)": [[63, "c.Py_UCS4"]], "py_unicode (c type)": [[63, "c.Py_UNICODE"]], "py_unicode_isalnum (c function)": [[63, "c.Py_UNICODE_ISALNUM"]], "py_unicode_isalpha (c function)": [[63, "c.Py_UNICODE_ISALPHA"]], "py_unicode_isdecimal (c function)": [[63, "c.Py_UNICODE_ISDECIMAL"]], "py_unicode_isdigit (c function)": [[63, "c.Py_UNICODE_ISDIGIT"]], "py_unicode_islinebreak (c function)": [[63, "c.Py_UNICODE_ISLINEBREAK"]], "py_unicode_islower (c function)": [[63, "c.Py_UNICODE_ISLOWER"]], "py_unicode_isnumeric (c function)": [[63, "c.Py_UNICODE_ISNUMERIC"]], "py_unicode_isprintable (c function)": [[63, "c.Py_UNICODE_ISPRINTABLE"]], "py_unicode_isspace (c function)": [[63, "c.Py_UNICODE_ISSPACE"]], "py_unicode_istitle (c function)": [[63, "c.Py_UNICODE_ISTITLE"]], "py_unicode_isupper (c function)": [[63, "c.Py_UNICODE_ISUPPER"]], "py_unicode_is_high_surrogate (c macro)": [[63, "c.Py_UNICODE_IS_HIGH_SURROGATE"]], "py_unicode_is_low_surrogate (c macro)": [[63, "c.Py_UNICODE_IS_LOW_SURROGATE"]], "py_unicode_is_surrogate (c macro)": [[63, "c.Py_UNICODE_IS_SURROGATE"]], "py_unicode_join_surrogates (c macro)": [[63, "c.Py_UNICODE_JOIN_SURROGATES"]], "py_unicode_todecimal (c function)": [[63, "c.Py_UNICODE_TODECIMAL"]], "py_unicode_todigit (c function)": [[63, "c.Py_UNICODE_TODIGIT"]], "py_unicode_tolower (c function)": [[63, "c.Py_UNICODE_TOLOWER"]], "py_unicode_tonumeric (c function)": [[63, "c.Py_UNICODE_TONUMERIC"]], "py_unicode_totitle (c function)": [[63, "c.Py_UNICODE_TOTITLE"]], "py_unicode_toupper (c function)": [[63, "c.Py_UNICODE_TOUPPER"]], "co_future_division (c var)": [[65, "c.CO_FUTURE_DIVISION"]], "pep 238": [[65, "index-3"], [99, "index-17"], [124, "index-2"], [479, "index-11"], [479, "index-12"], [479, "index-13"], [485, "index-2"]], "pycompilerflags (c struct)": [[65, "c.PyCompilerFlags"]], "pycompilerflags.cf_feature_version (c member)": [[65, "c.PyCompilerFlags.cf_feature_version"]], "pycompilerflags.cf_flags (c member)": [[65, "c.PyCompilerFlags.cf_flags"]], "pyeval_evalcode (c function)": [[65, "c.PyEval_EvalCode"]], "pyeval_evalcodeex (c function)": [[65, "c.PyEval_EvalCodeEx"]], "pyeval_evalframe (c function)": [[65, "c.PyEval_EvalFrame"]], "pyeval_evalframeex (c function)": [[65, "c.PyEval_EvalFrameEx"]], "pyeval_mergecompilerflags (c function)": [[65, "c.PyEval_MergeCompilerFlags"]], "pyos_inputhook (c var)": [[65, "c.PyOS_InputHook"]], "pyos_readlinefunctionpointer (c var)": [[65, "c.PyOS_ReadlineFunctionPointer"]], "pyrun_anyfile (c function)": [[65, "c.PyRun_AnyFile"]], "pyrun_anyfileex (c function)": [[65, "c.PyRun_AnyFileEx"]], "pyrun_anyfileexflags (c function)": [[65, "c.PyRun_AnyFileExFlags"]], "pyrun_anyfileflags (c function)": [[65, "c.PyRun_AnyFileFlags"]], "pyrun_file (c function)": [[65, "c.PyRun_File"]], "pyrun_fileex (c function)": [[65, "c.PyRun_FileEx"]], "pyrun_fileexflags (c function)": [[65, "c.PyRun_FileExFlags"]], "pyrun_fileflags (c function)": [[65, "c.PyRun_FileFlags"]], "pyrun_interactiveloop (c function)": [[65, "c.PyRun_InteractiveLoop"]], "pyrun_interactiveloopflags (c function)": [[65, "c.PyRun_InteractiveLoopFlags"]], "pyrun_interactiveone (c function)": [[65, "c.PyRun_InteractiveOne"]], "pyrun_interactiveoneflags (c function)": [[65, "c.PyRun_InteractiveOneFlags"]], "pyrun_simplefile (c function)": [[65, "c.PyRun_SimpleFile"]], "pyrun_simplefileex (c function)": [[65, "c.PyRun_SimpleFileEx"]], "pyrun_simplefileexflags (c function)": [[65, "c.PyRun_SimpleFileExFlags"]], "pyrun_simplestring (c function)": [[65, "c.PyRun_SimpleString"]], "pyrun_simplestringflags (c function)": [[65, "c.PyRun_SimpleStringFlags"]], "pyrun_string (c function)": [[65, "c.PyRun_String"]], "pyrun_stringflags (c function)": [[65, "c.PyRun_StringFlags"]], "py_bytesmain (c function)": [[65, "c.Py_BytesMain"]], "py_compilestring (c function)": [[65, "c.Py_CompileString"], [65, "index-0"], [65, "index-1"], [65, "index-2"]], "py_compilestringexflags (c function)": [[65, "c.Py_CompileStringExFlags"]], "py_compilestringflags (c function)": [[65, "c.Py_CompileStringFlags"]], "py_compilestringobject (c function)": [[65, "c.Py_CompileStringObject"]], "py_main (c function)": [[65, "c.Py_Main"]], "py_eval_input (c var)": [[65, "c.Py_eval_input"]], "py_file_input (c var)": [[65, "c.Py_file_input"]], "py_single_input (c var)": [[65, "c.Py_single_input"]], "pyobject_clearweakrefs (c function)": [[66, "c.PyObject_ClearWeakRefs"]], "pyweakref_check (c function)": [[66, "c.PyWeakref_Check"]], "pyweakref_checkproxy (c function)": [[66, "c.PyWeakref_CheckProxy"]], "pyweakref_checkref (c function)": [[66, "c.PyWeakref_CheckRef"]], "pyweakref_get_object (c function)": [[66, "c.PyWeakref_GET_OBJECT"]], "pyweakref_getobject (c function)": [[66, "c.PyWeakref_GetObject"]], "pyweakref_newproxy (c function)": [[66, "c.PyWeakref_NewProxy"]], "pyweakref_newref (c function)": [[66, "c.PyWeakref_NewRef"]], "pep 3101": [[67, "index-23"], [361, "index-0"], [361, "index-1"], [483, "index-9"], [485, "index-23"], [485, "index-24"], [498, "index-23"]], "rfc": [[67, "index-0"], [71, "index-6"], [113, "index-0"], [114, "index-0"], [114, "index-1"], [114, "index-2"], [114, "index-3"], [114, "index-4"], [114, "index-5"], [120, "index-0"], [120, "index-1"], [120, "index-2"], [138, "index-3"], [138, "index-4"], [156, "index-1"], [156, "index-10"], [156, "index-11"], [156, "index-12"], [156, "index-2"], [156, "index-3"], [156, "index-4"], [156, "index-5"], [156, "index-6"], [156, "index-7"], [156, "index-8"], [156, "index-9"], [159, "index-1"], [159, "index-2"], [159, "index-3"], [171, "index-10"], [171, "index-11"], [171, "index-12"], [171, "index-13"], [171, "index-14"], [171, "index-6"], [171, "index-7"], [171, "index-8"], [171, "index-9"], [188, "index-1"], [208, "index-0"], [208, "index-1"], [208, "index-2"], [208, "index-3"], [208, "index-4"], [208, "index-5"], [208, "index-6"], [208, "index-7"], [210, "index-0"], [210, "index-1"], [210, "index-10"], [210, "index-11"], [210, "index-2"], [210, "index-3"], [210, "index-4"], [210, "index-5"], [210, "index-6"], [210, "index-7"], [210, "index-8"], [210, "index-9"], [211, "index-0"], [213, "index-0"], [214, "index-0"], [215, "index-0"], [215, "index-1"], [216, "index-0"], [216, "index-1"], [216, "index-10"], [216, "index-11"], [216, "index-12"], [216, "index-13"], [216, "index-2"], [216, "index-3"], [216, "index-4"], [216, "index-5"], [216, "index-6"], [216, "index-7"], [216, "index-8"], [216, "index-9"], [217, "index-0"], [217, "index-1"], [217, "index-10"], [217, "index-11"], [217, "index-12"], [217, "index-13"], [217, "index-14"], [217, "index-2"], [217, "index-3"], [217, "index-4"], [217, "index-5"], [217, "index-6"], [217, "index-7"], [217, "index-8"], [217, "index-9"], [219, "index-0"], [219, "index-1"], [219, "index-10"], [219, "index-2"], [219, "index-3"], [219, "index-4"], [219, "index-5"], [219, "index-6"], [219, "index-7"], [219, "index-8"], [219, "index-9"], [221, "index-0"], [221, "index-1"], [222, "index-0"], [222, "index-1"], [222, "index-2"], [222, "index-3"], [222, "index-4"], [222, "index-5"], [222, "index-6"], [222, "index-7"], [222, "index-8"], [222, "index-9"], [223, "index-0"], [223, "index-1"], [223, "index-10"], [223, "index-2"], [223, "index-3"], [223, "index-4"], [223, "index-5"], [223, "index-6"], [223, "index-7"], [223, "index-8"], [223, "index-9"], [237, "index-1"], [237, "index-2"], [237, "index-3"], [237, "index-4"], [237, "index-5"], [237, "index-6"], [244, "index-9"], [249, "index-1"], [249, "index-3"], [249, "index-5"], [251, "index-0"], [255, "index-1"], [255, "index-10"], [255, "index-11"], [255, "index-12"], [255, "index-13"], [255, "index-14"], [255, "index-15"], [255, "index-16"], [255, "index-17"], [255, "index-18"], [255, "index-19"], [255, "index-2"], [255, "index-20"], [255, "index-21"], [255, "index-22"], [255, "index-23"], [255, "index-24"], [255, "index-25"], [255, "index-26"], [255, "index-27"], [255, "index-28"], [255, "index-29"], [255, "index-3"], [255, "index-30"], [255, "index-31"], [255, "index-32"], [255, "index-33"], [255, "index-34"], [255, "index-35"], [255, "index-36"], [255, "index-37"], [255, "index-38"], [255, "index-39"], [255, "index-4"], [255, "index-40"], [255, "index-41"], [255, "index-42"], [255, "index-43"], [255, "index-44"], [255, "index-45"], [255, "index-46"], [255, "index-47"], [255, "index-48"], [255, "index-49"], [255, "index-5"], [255, "index-50"], [255, "index-51"], [255, "index-52"], [255, "index-53"], [255, "index-54"], [255, "index-55"], [255, "index-56"], [255, "index-57"], [255, "index-58"], [255, "index-59"], [255, "index-6"], [255, "index-60"], [255, "index-61"], [255, "index-62"], [255, "index-63"], [255, "index-64"], [255, "index-65"], [255, "index-66"], [255, "index-67"], [255, "index-68"], [255, "index-69"], [255, "index-7"], [255, "index-70"], [255, "index-71"], [255, "index-8"], [255, "index-9"], [256, "index-2"], [256, "index-3"], [256, "index-4"], [256, "index-5"], [256, "index-6"], [256, "index-7"], [257, "index-0"], [257, "index-1"], [257, "index-10"], [257, "index-11"], [257, "index-12"], [257, "index-13"], [257, "index-14"], [257, "index-15"], [257, "index-16"], [257, "index-17"], [257, "index-18"], [257, "index-19"], [257, "index-2"], [257, "index-20"], [257, "index-21"], [257, "index-22"], [257, "index-23"], [257, "index-24"], [257, "index-25"], [257, "index-3"], [257, "index-4"], [257, "index-5"], [257, "index-6"], [257, "index-7"], [257, "index-8"], [257, "index-9"], [258, "index-0"], [258, "index-1"], [258, "index-2"], [258, "index-3"], [258, "index-4"], [258, "index-5"], [258, "index-6"], [258, "index-7"], [259, "index-1"], [259, "index-2"], [262, "index-1"], [262, "index-2"], [262, "index-3"], [262, "index-4"], [262, "index-5"], [262, "index-6"], [262, "index-7"], [262, "index-8"], [269, "index-0"], [271, "index-0"], [274, "index-0"], [274, "index-1"], [274, "index-10"], [274, "index-11"], [274, "index-12"], [274, "index-13"], [274, "index-2"], [274, "index-3"], [274, "index-4"], [274, "index-5"], [274, "index-6"], [274, "index-7"], [274, "index-8"], [274, "index-9"], [277, "index-0"], [277, "index-1"], [277, "index-2"], [277, "index-3"], [277, "index-4"], [281, "index-4"], [281, "index-5"], [284, "index-0"], [286, "index-0"], [287, "index-1"], [287, "index-2"], [303, "index-10"], [303, "index-2"], [303, "index-3"], [303, "index-4"], [303, "index-5"], [303, "index-6"], [303, "index-7"], [303, "index-8"], [303, "index-9"], [320, "index-1"], [320, "index-2"], [320, "index-3"], [320, "index-4"], [320, "index-5"], [320, "index-6"], [332, "index-1"], [332, "index-2"], [332, "index-3"], [332, "index-4"], [342, "index-1"], [350, "index-1"], [350, "index-2"], [350, "index-3"], [350, "index-4"], [350, "index-5"], [350, "index-6"], [350, "index-7"], [350, "index-8"], [350, "index-9"], [351, "index-1"], [351, "index-10"], [351, "index-11"], [351, "index-12"], [351, "index-2"], [351, "index-3"], [351, "index-4"], [351, "index-5"], [351, "index-6"], [351, "index-7"], [351, "index-8"], [351, "index-9"], [353, "index-15"], [353, "index-3"], [357, "index-10"], [357, "index-11"], [357, "index-12"], [357, "index-13"], [357, "index-14"], [357, "index-15"], [357, "index-16"], [357, "index-17"], [357, "index-20"], [357, "index-21"], [357, "index-22"], [357, "index-23"], [357, "index-24"], [357, "index-25"], [357, "index-26"], [357, "index-5"], [357, "index-6"], [357, "index-7"], [357, "index-8"], [357, "index-9"], [362, "index-0"], [362, "index-1"], [374, "index-2"], [374, "index-3"], [381, "index-10"], [381, "index-19"], [381, "index-20"], [381, "index-21"], [381, "index-22"], [408, "index-0"], [409, "index-1"], [409, "index-10"], [409, "index-11"], [409, "index-12"], [409, "index-13"], [409, "index-2"], [409, "index-3"], [409, "index-4"], [409, "index-5"], [409, "index-6"], [409, "index-7"], [409, "index-8"], [409, "index-9"], [410, "index-0"], [410, "index-1"], [410, "index-2"], [410, "index-4"], [410, "index-5"], [410, "index-6"], [410, "index-7"], [410, "index-8"], [413, "index-0"], [413, "index-1"], [413, "index-10"], [413, "index-11"], [413, "index-2"], [413, "index-3"], [413, "index-4"], [422, "index-10"], [422, "index-5"], [423, "index-2"], [423, "index-3"], [423, "index-4"], [423, "index-5"], [434, "index-0"], [466, "index-1"], [479, "index-17"], [479, "index-18"], [479, "index-19"], [479, "index-20"], [479, "index-21"], [481, "index-18"], [482, "index-22"], [482, "index-23"], [483, "index-22"], [483, "index-23"], [484, "index-10"], [484, "index-12"], [484, "index-9"], [487, "index-32"], [489, "index-11"], [489, "index-12"], [489, "index-13"], [489, "index-7"], [489, "index-8"], [490, "index-26"], [490, "index-27"], [492, "index-31"], [492, "index-32"], [492, "index-33"], [492, "index-34"], [492, "index-35"], [492, "index-36"], [492, "index-37"], [492, "index-38"], [492, "index-39"], [492, "index-40"], [492, "index-41"], [492, "index-42"], [492, "index-43"], [492, "index-44"], [492, "index-51"], [494, "index-34"], [494, "index-35"], [495, "index-25"], [496, "index-22"], [496, "index-28"]], "rfc 4122": [[67, "index-0"], [269, "index-0"], [271, "index-0"], [413, "index-0"], [413, "index-1"], [413, "index-10"], [413, "index-11"], [413, "index-2"], [413, "index-3"], [413, "index-4"], [482, "index-22"], [482, "index-23"]], "ccompiler (class in distutils.ccompiler)": [[71, "distutils.ccompiler.CCompiler"]], "command (class in distutils.cmd)": [[71, "distutils.cmd.Command"]], "command (class in distutils.core)": [[71, "distutils.core.Command"]], "distribution (class in distutils.core)": [[71, "distutils.core.Distribution"]], "exec_prefix (in module distutils.sysconfig)": [[71, "distutils.sysconfig.EXEC_PREFIX"]], "extension (class in distutils.core)": [[71, "distutils.core.Extension"]], "fancygetopt (class in distutils.fancy_getopt)": [[71, "distutils.fancy_getopt.FancyGetopt"]], "home": [[71, "index-1"], [121, "index-4"], [121, "index-5"], [309, "index-3"], [309, "index-8"], [384, "index-1"], [495, "index-14"], [495, "index-21"]], "pep 282": [[71, "index-7"], [77, "index-7"], [282, "index-1"], [347, "index-2"], [480, "index-11"], [480, "index-12"]], "pep 301": [[71, "index-8"], [480, "index-16"]], "pep 314": [[71, "index-0"], [482, "index-4"]], "pep 488": [[71, "index-4"], [71, "index-5"], [265, "index-22"], [265, "index-25"], [265, "index-7"], [326, "index-2"], [377, "index-4"], [470, "index-10"], [470, "index-11"], [470, "index-7"], [470, "index-9"], [492, "index-24"], [492, "index-25"], [492, "index-50"]], "plat": [[71, "index-2"]], "prefix (in module distutils.sysconfig)": [[71, "distutils.sysconfig.PREFIX"]], "rfc 822": [[71, "index-6"], [214, "index-0"], [216, "index-1"], [244, "index-9"], [256, "index-6"], [351, "index-10"], [351, "index-12"], [351, "index-6"], [351, "index-9"], [381, "index-19"], [381, "index-20"], [479, "index-21"]], "textfile (class in distutils.text_file)": [[71, "distutils.text_file.TextFile"]], "add_include_dir() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.add_include_dir"]], "add_library() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.add_library"]], "add_library_dir() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.add_library_dir"]], "add_link_object() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.add_link_object"]], "add_runtime_library_dir() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.add_runtime_library_dir"]], "announce() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.announce"]], "build_py (class in distutils.command.build_py)": [[71, "distutils.command.build_py.build_py"]], "build_py_2to3 (class in distutils.command.build_py)": [[71, "distutils.command.build_py.build_py_2to3"]], "byte_compile() (in module distutils.util)": [[71, "distutils.util.byte_compile"]], "change_root() (in module distutils.util)": [[71, "distutils.util.change_root"]], "check_environ() (in module distutils.util)": [[71, "distutils.util.check_environ"]], "close() (distutils.text_file.textfile method)": [[71, "distutils.text_file.TextFile.close"]], "compile() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.compile"]], "convert_path() (in module distutils.util)": [[71, "distutils.util.convert_path"]], "copy_file() (in module distutils.file_util)": [[71, "distutils.file_util.copy_file"]], "copy_tree() (in module distutils.dir_util)": [[71, "distutils.dir_util.copy_tree"]], "create_static_lib() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.create_static_lib"]], "create_tree() (in module distutils.dir_util)": [[71, "distutils.dir_util.create_tree"]], "customize_compiler() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.customize_compiler"]], "debug_print() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.debug_print"]], "define_macro() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.define_macro"]], "detect_language() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.detect_language"]], "distutils.archive_util": [[71, "module-distutils.archive_util"]], "distutils.bcppcompiler": [[71, "module-distutils.bcppcompiler"]], "distutils.ccompiler": [[71, "module-distutils.ccompiler"]], "distutils.cmd": [[71, "module-distutils.cmd"]], "distutils.command": [[71, "module-distutils.command"]], "distutils.command.bdist": [[71, "module-distutils.command.bdist"]], "distutils.command.bdist_dumb": [[71, "module-distutils.command.bdist_dumb"]], "distutils.command.bdist_packager": [[71, "module-distutils.command.bdist_packager"]], "distutils.command.bdist_rpm": [[71, "module-distutils.command.bdist_rpm"]], "distutils.command.build": [[71, "module-distutils.command.build"]], "distutils.command.build_clib": [[71, "module-distutils.command.build_clib"]], "distutils.command.build_ext": [[71, "module-distutils.command.build_ext"]], "distutils.command.build_py": [[71, "module-distutils.command.build_py"]], "distutils.command.build_scripts": [[71, "module-distutils.command.build_scripts"]], "distutils.command.check": [[71, "module-distutils.command.check"]], "distutils.command.clean": [[71, "module-distutils.command.clean"]], "distutils.command.config": [[71, "module-distutils.command.config"]], "distutils.command.install": [[71, "module-distutils.command.install"]], "distutils.command.install_data": [[71, "module-distutils.command.install_data"]], "distutils.command.install_headers": [[71, "module-distutils.command.install_headers"]], "distutils.command.install_lib": [[71, "module-distutils.command.install_lib"]], "distutils.command.install_scripts": [[71, "module-distutils.command.install_scripts"]], "distutils.command.register": [[71, "module-distutils.command.register"]], "distutils.command.sdist": [[71, "module-distutils.command.sdist"]], "distutils.core": [[71, "module-distutils.core"]], "distutils.cygwinccompiler": [[71, "module-distutils.cygwinccompiler"]], "distutils.debug": [[71, "module-distutils.debug"]], "distutils.dep_util": [[71, "module-distutils.dep_util"]], "distutils.dir_util": [[71, "module-distutils.dir_util"]], "distutils.dist": [[71, "module-distutils.dist"]], "distutils.errors": [[71, "module-distutils.errors"]], "distutils.extension": [[71, "module-distutils.extension"]], "distutils.fancy_getopt": [[71, "module-distutils.fancy_getopt"]], "distutils.file_util": [[71, "module-distutils.file_util"]], "distutils.filelist": [[71, "module-distutils.filelist"]], "distutils.log": [[71, "module-distutils.log"]], "distutils.msvccompiler": [[71, "module-distutils.msvccompiler"]], "distutils.spawn": [[71, "module-distutils.spawn"]], "distutils.sysconfig": [[71, "module-distutils.sysconfig"]], "distutils.text_file": [[71, "module-distutils.text_file"]], "distutils.unixccompiler": [[71, "module-distutils.unixccompiler"]], "distutils.util": [[71, "module-distutils.util"]], "distutils.version": [[71, "module-distutils.version"]], "executable_filename() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.executable_filename"]], "execute() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.execute"]], "execute() (in module distutils.util)": [[71, "distutils.util.execute"]], "fancy_getopt() (in module distutils.fancy_getopt)": [[71, "distutils.fancy_getopt.fancy_getopt"]], "finalize_options() (distutils.cmd.command method)": [[71, "distutils.cmd.Command.finalize_options"]], "find_library_file() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.find_library_file"]], "gen_lib_options() (in module distutils.ccompiler)": [[71, "distutils.ccompiler.gen_lib_options"]], "gen_preprocess_options() (in module distutils.ccompiler)": [[71, "distutils.ccompiler.gen_preprocess_options"]], "generate_help() (distutils.fancy_getopt.fancygetopt method)": [[71, "distutils.fancy_getopt.FancyGetopt.generate_help"]], "get_config_h_filename() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.get_config_h_filename"]], "get_config_var() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.get_config_var"]], "get_config_vars() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.get_config_vars"]], "get_default_compiler() (in module distutils.ccompiler)": [[71, "distutils.ccompiler.get_default_compiler"]], "get_makefile_filename() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.get_makefile_filename"]], "get_option_order() (distutils.fancy_getopt.fancygetopt method)": [[71, "distutils.fancy_getopt.FancyGetopt.get_option_order"]], "get_platform() (in module distutils.util)": [[71, "distutils.util.get_platform"]], "get_python_inc() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.get_python_inc"]], "get_python_lib() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.get_python_lib"]], "getopt() (distutils.fancy_getopt.fancygetopt method)": [[71, "distutils.fancy_getopt.FancyGetopt.getopt"]], "has_function() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.has_function"]], "initialize_options() (distutils.cmd.command method)": [[71, "distutils.cmd.Command.initialize_options"]], "library_dir_option() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.library_dir_option"]], "library_filename() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.library_filename"]], "library_option() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.library_option"]], "link() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.link"]], "link_executable() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.link_executable"]], "link_shared_lib() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.link_shared_lib"]], "link_shared_object() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.link_shared_object"]], "make_archive() (in module distutils.archive_util)": [[71, "distutils.archive_util.make_archive"]], "make_tarball() (in module distutils.archive_util)": [[71, "distutils.archive_util.make_tarball"]], "make_zipfile() (in module distutils.archive_util)": [[71, "distutils.archive_util.make_zipfile"]], "mkpath() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.mkpath"]], "mkpath() (in module distutils.dir_util)": [[71, "distutils.dir_util.mkpath"]], "move_file() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.move_file"]], "move_file() (in module distutils.file_util)": [[71, "distutils.file_util.move_file"]], "new_compiler() (in module distutils.ccompiler)": [[71, "distutils.ccompiler.new_compiler"]], "newer() (in module distutils.dep_util)": [[71, "distutils.dep_util.newer"]], "newer_group() (in module distutils.dep_util)": [[71, "distutils.dep_util.newer_group"]], "newer_pairwise() (in module distutils.dep_util)": [[71, "distutils.dep_util.newer_pairwise"]], "object_filenames() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.object_filenames"]], "open() (distutils.text_file.textfile method)": [[71, "distutils.text_file.TextFile.open"]], "preprocess() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.preprocess"]], "readline() (distutils.text_file.textfile method)": [[71, "distutils.text_file.TextFile.readline"]], "readlines() (distutils.text_file.textfile method)": [[71, "distutils.text_file.TextFile.readlines"]], "remove_tree() (in module distutils.dir_util)": [[71, "distutils.dir_util.remove_tree"]], "rfc822_escape() (in module distutils.util)": [[71, "distutils.util.rfc822_escape"]], "run() (distutils.cmd.command method)": [[71, "distutils.cmd.Command.run"]], "run_setup() (in module distutils.core)": [[71, "distutils.core.run_setup"]], "runtime_library_dir_option() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.runtime_library_dir_option"]], "set_executables() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.set_executables"]], "set_include_dirs() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.set_include_dirs"]], "set_libraries() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.set_libraries"]], "set_library_dirs() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.set_library_dirs"]], "set_link_objects() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.set_link_objects"]], "set_python_build() (in module distutils.sysconfig)": [[71, "distutils.sysconfig.set_python_build"]], "set_runtime_library_dirs() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.set_runtime_library_dirs"]], "setup() (in module distutils.core)": [[71, "distutils.core.setup"]], "shared_object_filename() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.shared_object_filename"]], "show_compilers() (in module distutils.ccompiler)": [[71, "distutils.ccompiler.show_compilers"]], "spawn() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.spawn"]], "split_quoted() (in module distutils.util)": [[71, "distutils.util.split_quoted"]], "strtobool() (in module distutils.util)": [[71, "distutils.util.strtobool"]], "sub_commands (distutils.cmd.command attribute)": [[71, "distutils.cmd.Command.sub_commands"]], "subst_vars() (in module distutils.util)": [[71, "distutils.util.subst_vars"]], "undefine_macro() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.undefine_macro"]], "unreadline() (distutils.text_file.textfile method)": [[71, "distutils.text_file.TextFile.unreadline"]], "warn() (distutils.ccompiler.ccompiler method)": [[71, "distutils.ccompiler.CCompiler.warn"]], "warn() (distutils.text_file.textfile method)": [[71, "distutils.text_file.TextFile.warn"]], "wrap_text() (in module distutils.fancy_getopt)": [[71, "distutils.fancy_getopt.wrap_text"]], "write_file() (in module distutils.file_util)": [[71, "distutils.file_util.write_file"]], "create_shortcut()": [[72, "create_shortcut"]], "directory_created()": [[72, "directory_created"]], "file_created()": [[72, "file_created"]], "get_special_folder_path()": [[72, "get_special_folder_path"]], "distutils_debug": [[80, "index-0"]], "pyinit_modulename (c function)": [[83, "c.PyInit_modulename"]], "philbrick, geoff": [[85, "index-4"]], "py_audit_read": [[87, "index-4"]], "readonly": [[87, "index-4"]], "read_restricted": [[87, "index-4"]], "restricted": [[87, "index-4"], [444, "index-11"]], "write_restricted": [[87, "index-4"]], "deallocation": [[87, "index-0"]], "deallocation, object": [[87, "index-0"]], "finalization": [[87, "index-0"]], "finalization, of objects": [[87, "index-0"]], "object representation": [[87, "index-3"]], "pep 572": [[90, "index-0"], [442, "index-24"], [445, "index-21"], [445, "index-87"], [495, "index-0"], [495, "index-24"]], "pep 5": [[92, "index-2"], [478, "index-6"]], "pep 602": [[92, "index-1"], [496, "index-10"]], "pep 8": [[97, "index-0"], [97, "index-2"], [98, "index-0"], [239, "index-10"], [445, "index-79"], [456, "index-10"], [472, "index-0"], [485, "index-21"]], "argument": [[97, "index-1"], [99, "term-argument"], [442, "index-31"], [443, "index-33"], [445, "index-47"]], "difference from argument": [[97, "index-1"]], "difference from parameter": [[97, "index-1"]], "parameter": [[97, "index-1"], [99, "term-parameter"], [442, "index-27"], [442, "index-31"], [445, "index-48"]], "...": [[99, "term-..."], [181, "index-0"], [207, "index-0"], [207, "index-3"], [322, "index-1"], [336, "index-0"], [360, "index-65"], [368, "index-27"], [379, "index-0"], [443, "index-8"]], "2to3": [[99, "term-2to3"]], ">>>": [[99, "term-0"], [207, "index-0"], [368, "index-27"]], "bdfl": [[99, "term-BDFL"]], "cpython": [[99, "term-CPython"]], "eafp": [[99, "term-EAFP"]], "gil": [[99, "term-GIL"]], "idle": [[99, "term-IDLE"], [261, "index-0"]], "lbyl": [[99, "term-LBYL"]], "mro": [[99, "term-MRO"]], "pep": [[99, "term-PEP"]], "pep 1": [[99, "index-30"], [477, "index-0"], [477, "index-1"]], "pep 278": [[99, "index-37"], [480, "index-9"]], "pep 302": [[99, "index-14"], [99, "index-25"], [239, "index-14"], [264, "index-7"], [265, "index-12"], [265, "index-13"], [265, "index-14"], [265, "index-15"], [265, "index-17"], [265, "index-2"], [280, "index-1"], [317, "index-0"], [317, "index-1"], [317, "index-10"], [317, "index-11"], [317, "index-12"], [317, "index-2"], [317, "index-3"], [317, "index-4"], [317, "index-5"], [317, "index-7"], [317, "index-8"], [339, "index-1"], [368, "index-25"], [368, "index-26"], [438, "index-2"], [447, "index-1"], [447, "index-19"], [480, "index-17"], [480, "index-18"], [480, "index-19"], [480, "index-6"], [482, "index-21"], [486, "index-2"], [490, "index-20"], [490, "index-21"], [490, "index-37"]], "pep 3116": [[99, "index-38"], [483, "index-14"], [486, "index-3"]], "pep 3155": [[99, "index-33"], [490, "index-15"]], "pep 343": [[99, "index-9"], [124, "index-4"], [182, "index-0"], [442, "index-17"], [443, "index-107"], [482, "index-10"], [482, "index-14"], [483, "index-3"]], "pep 362": [[99, "index-2"], [99, "index-28"], [270, "index-0"], [490, "index-17"]], "pep 411": [[99, "index-32"], [368, "index-13"], [368, "index-14"], [368, "index-31"], [368, "index-32"]], "pep 420": [[99, "index-15"], [99, "index-27"], [99, "index-31"], [265, "index-5"], [447, "index-14"], [447, "index-15"], [447, "index-2"], [447, "index-20"], [447, "index-21"], [447, "index-22"], [447, "index-6"], [490, "index-2"], [490, "index-3"]], "pep 443": [[99, "index-21"], [491, "index-11"], [491, "index-36"]], "pep 483": [[99, "index-22"], [401, "index-1"], [401, "index-3"], [492, "index-12"]], "pep 484": [[99, "index-0"], [99, "index-18"], [99, "index-23"], [99, "index-35"], [99, "index-36"], [99, "index-39"], [133, "index-2"], [133, "index-3"], [133, "index-5"], [133, "index-6"], [360, "index-56"], [401, "index-0"], [401, "index-2"], [401, "index-20"], [401, "index-23"], [401, "index-24"], [401, "index-37"], [401, "index-46"], [442, "index-37"], [443, "index-95"], [451, "index-17"], [456, "index-8"], [487, "index-19"], [487, "index-21"], [487, "index-23"], [488, "index-11"], [488, "index-12"], [492, "index-10"], [492, "index-11"], [493, "index-5"], [494, "index-20"], [495, "index-10"], [495, "index-12"]], "pep 492": [[99, "index-11"], [99, "index-12"], [99, "index-3"], [99, "index-4"], [99, "index-6"], [99, "index-7"], [99, "index-8"], [174, "index-3"], [270, "index-1"], [270, "index-2"], [442, "index-52"], [443, "index-110"], [445, "index-30"], [492, "index-1"], [492, "index-2"], [492, "index-47"], [492, "index-52"], [493, "index-35"], [493, "index-9"]], "pep 498": [[99, "index-13"], [450, "index-26"], [493, "index-3"], [493, "index-4"]], "pep 519": [[99, "index-29"], [493, "index-16"]], "pep 525": [[99, "index-5"], [174, "index-2"], [270, "index-3"], [368, "index-12"], [368, "index-30"], [445, "index-29"], [493, "index-10"]], "pep 526": [[99, "index-1"], [99, "index-40"], [133, "index-4"], [133, "index-7"], [194, "index-1"], [194, "index-2"], [401, "index-31"], [401, "index-4"], [401, "index-40"], [401, "index-42"], [442, "index-38"], [451, "index-16"], [487, "index-27"], [493, "index-33"], [493, "index-6"], [494, "index-1"], [495, "index-11"]], "pep 585": [[99, "index-24"], [174, "index-0"], [360, "index-57"], [400, "index-4"], [401, "index-50"], [401, "index-52"], [401, "index-53"], [401, "index-54"], [401, "index-55"], [401, "index-56"], [401, "index-57"], [401, "index-58"], [401, "index-59"], [401, "index-6"], [401, "index-60"], [401, "index-61"], [401, "index-62"], [401, "index-63"], [401, "index-64"], [401, "index-65"], [401, "index-66"], [401, "index-67"], [401, "index-68"], [401, "index-69"], [401, "index-70"], [401, "index-71"], [401, "index-72"], [401, "index-73"], [401, "index-74"], [401, "index-75"], [401, "index-76"], [401, "index-77"], [401, "index-78"], [401, "index-79"], [401, "index-80"], [401, "index-81"], [401, "index-82"], [401, "index-83"], [401, "index-84"], [401, "index-86"], [401, "index-87"], [401, "index-88"], [401, "index-89"], [401, "index-90"], [496, "index-13"], [496, "index-2"]], "python 3000": [[99, "term-Python-3000"]], "pythonic": [[99, "term-Pythonic"]], "zen of python": [[99, "term-Zen-of-Python"]], "__future__": [[99, "term-__future__"], [124, "module-__future__"], [451, "index-40"]], "__slots__": [[99, "term-__slots__"]], "abstract base class": [[99, "term-abstract-base-class"]], "annotation": [[99, "term-annotation"], [360, "index-54"]], "asynchronous context manager": [[99, "term-asynchronous-context-manager"]], "asynchronous generator": [[99, "term-asynchronous-generator"], [443, "index-41"]], "asynchronous generator iterator": [[99, "term-asynchronous-generator-iterator"]], "asynchronous iterable": [[99, "term-asynchronous-iterable"]], "asynchronous iterator": [[99, "term-asynchronous-iterator"], [443, "index-41"]], "attribute": [[99, "term-attribute"], [443, "index-47"], [443, "index-48"], [443, "index-5"], [443, "index-51"], [443, "index-52"], [445, "index-39"], [451, "index-23"], [451, "index-4"], [451, "index-8"]], "awaitable": [[99, "term-awaitable"]], "binary file": [[99, "term-binary-file"]], "borrowed reference": [[99, "term-borrowed-reference"]], "bytecode": [[99, "term-bytecode"], [443, "index-57"]], "bytes-like object": [[99, "term-bytes-like-object"]], "callable": [[99, "term-callable"], [443, "index-33"], [445, "index-47"]], "callback": [[99, "term-callback"]], "class": [[99, "term-class"], [442, "index-42"], [443, "index-47"], [443, "index-48"], [443, "index-51"], [443, "index-73"], [443, "index-91"], [445, "index-54"], [451, "index-24"]], "class variable": [[99, "term-class-variable"]], "context manager": [[99, "term-context-manager"], [360, "index-53"], [443, "index-106"]], "context variable": [[99, "term-context-variable"]], "coroutine": [[99, "term-coroutine"], [443, "index-109"], [443, "index-40"], [445, "index-24"]], "coroutine function": [[99, "term-coroutine-function"]], "decorator": [[99, "term-decorator"]], "descriptor": [[99, "term-descriptor"]], "dictionary comprehension": [[99, "term-dictionary-comprehension"]], "dictionary view": [[99, "term-dictionary-view"]], "docstring": [[99, "term-docstring"], [442, "index-42"]], "duck-typing": [[99, "term-duck-typing"]], "expression": [[99, "term-expression"], [442, "index-35"], [445, "index-0"], [445, "index-22"], [445, "index-23"], [445, "index-82"], [445, "index-88"], [445, "index-90"], [445, "index-91"], [451, "index-1"], [451, "index-2"]], "extension module": [[99, "term-extension-module"]], "f-string": [[99, "term-f-string"], [450, "index-25"]], "file object": [[99, "term-file-object"], [239, "index-5"], [273, "index-0"]], "file-like object": [[99, "term-file-like-object"]], "filesystem encoding and error handler": [[99, "term-filesystem-encoding-and-error-handler"]], "finder": [[99, "term-finder"], [447, "index-10"], [447, "index-8"]], "floor division": [[99, "term-floor-division"]], "function annotation": [[99, "term-function-annotation"]], "garbage collection": [[99, "term-garbage-collection"], [443, "index-2"]], "generator": [[99, "index-19"], [99, "term-generator"], [443, "index-39"], [443, "index-59"], [445, "index-22"], [445, "index-23"], [445, "index-31"], [451, "index-26"]], "generator expression": [[99, "index-20"], [99, "term-generator-expression"], [445, "index-22"]], "generator iterator": [[99, "term-generator-iterator"]], "generic function": [[99, "term-generic-function"]], "generic type": [[99, "term-generic-type"]], "hash-based pyc": [[99, "term-hash-based-pyc"]], "hashable": [[99, "term-hashable"], [445, "index-20"]], "immutable": [[99, "term-immutable"], [360, "index-21"], [443, "index-17"], [445, "index-20"], [445, "index-7"]], "import path": [[99, "term-import-path"]], "importer": [[99, "term-importer"]], "importing": [[99, "term-importing"], [451, "index-34"]], "interactive": [[99, "term-interactive"]], "interpreted": [[99, "term-interpreted"]], "interpreter shutdown": [[99, "term-interpreter-shutdown"]], "iterable": [[99, "term-iterable"], [445, "index-93"]], "iterator": [[99, "term-iterator"], [360, "index-17"], [443, "index-39"], [451, "index-26"]], "key function": [[99, "term-key-function"]], "keyword argument": [[99, "term-keyword-argument"]], "lambda": [[99, "term-lambda"], [442, "index-35"], [445, "index-90"]], "list comprehension": [[99, "term-list-comprehension"]], "loader": [[99, "term-loader"], [447, "index-8"]], "locale encoding": [[99, "term-locale-encoding"]], "magic": [[99, "index-26"]], "magic method": [[99, "term-magic-method"]], "meta path finder": [[99, "term-meta-path-finder"]], "metaclass": [[99, "term-metaclass"], [443, "index-86"]], "method resolution order": [[99, "term-method-resolution-order"]], "module spec": [[99, "term-module-spec"], [447, "index-8"]], "mutable": [[99, "term-mutable"], [360, "index-22"], [443, "index-22"], [451, "index-4"], [451, "index-9"]], "named tuple": [[99, "term-named-tuple"]], "namespace": [[99, "term-namespace"], [443, "index-35"], [443, "index-45"], [444, "index-3"], [447, "index-5"]], "namespace package": [[99, "term-namespace-package"]], "nested scope": [[99, "term-nested-scope"]], "new-style class": [[99, "term-new-style-class"]], "package": [[99, "term-package"], [349, "index-4"], [447, "index-3"], [447, "index-4"], [447, "index-5"]], "path based finder": [[99, "term-path-based-finder"], [447, "index-16"]], "path entry": [[99, "term-path-entry"]], "path entry finder": [[99, "term-path-entry-finder"]], "path entry hook": [[99, "term-path-entry-hook"]], "path-like object": [[99, "term-path-like-object"]], "portion": [[99, "term-portion"], [447, "index-5"]], "positional argument": [[99, "term-positional-argument"]], "provisional api": [[99, "term-provisional-API"]], "provisional package": [[99, "term-provisional-package"]], "qualified name": [[99, "term-qualified-name"]], "reference count": [[99, "term-reference-count"]], "regular package": [[99, "term-regular-package"]], "set comprehension": [[99, "term-set-comprehension"]], "single dispatch": [[99, "term-single-dispatch"]], "slice": [[99, "term-slice"], [204, "index-1"], [360, "index-19"], [360, "index-23"], [443, "index-69"], [443, "index-99"], [445, "index-44"]], "special": [[99, "index-34"], [443, "index-5"]], "special method": [[99, "term-special-method"]], "statement": [[99, "term-statement"], [227, "index-0"], [227, "index-1"], [227, "index-4"], [239, "index-13"], [264, "index-0"], [349, "index-2"], [360, "index-1"], [360, "index-23"], [360, "index-51"], [442, "index-0"], [442, "index-13"], [442, "index-15"], [442, "index-16"], [442, "index-18"], [442, "index-28"], [442, "index-3"], [442, "index-4"], [442, "index-4"], [442, "index-42"], [442, "index-48"], [442, "index-5"], [442, "index-50"], [442, "index-51"], [442, "index-6"], [442, "index-6"], [442, "index-7"], [442, "index-9"], [443, "index-106"], [443, "index-22"], [443, "index-44"], [443, "index-67"], [443, "index-74"], [451, "index-0"], [451, "index-1"], [451, "index-14"], [451, "index-15"], [451, "index-18"], [451, "index-20"], [451, "index-21"], [451, "index-22"], [451, "index-24"], [451, "index-26"], [451, "index-27"], [451, "index-30"], [451, "index-30"], [451, "index-33"], [451, "index-33"], [451, "index-34"], [451, "index-4"], [451, "index-40"], [451, "index-43"], [451, "index-45"], [456, "index-0"]], "static type checker": [[99, "term-static-type-checker"]], "strong reference": [[99, "term-strong-reference"]], "text encoding": [[99, "term-text-encoding"]], "text file": [[99, "term-text-file"]], "triple-quoted string": [[99, "term-triple-quoted-string"], [450, "index-18"]], "type alias": [[99, "term-type-alias"]], "type hint": [[99, "term-type-hint"]], "universal newlines": [[99, "term-universal-newlines"], [188, "index-3"], [239, "index-7"], [265, "index-16"], [273, "index-4"], [273, "index-5"], [360, "index-33"], [360, "index-43"], [364, "index-1"], [480, "index-8"], [481, "index-7"], [482, "index-20"], [483, "index-13"]], "variable annotation": [[99, "term-variable-annotation"]], "virtual environment": [[99, "term-virtual-environment"]], "virtual machine": [[99, "term-virtual-machine"]], "pep 604": [[100, "index-0"], [360, "index-59"], [401, "index-11"], [487, "index-20"], [487, "index-5"]], "pep 289": [[107, "index-1"], [481, "index-15"], [481, "index-2"]], "pep 342": [[107, "index-0"], [107, "index-2"], [174, "index-1"], [445, "index-27"], [482, "index-11"], [482, "index-31"], [482, "index-9"]], "rfc 3339": [[113, "index-0"]], "__init__() (logging.logging.formatter method)": [[113, "logging.logging.Formatter.__init__"]], "rfc 3164": [[114, "index-5"]], "rfc 5424": [[114, "index-0"], [114, "index-2"], [114, "index-3"], [114, "index-4"], [284, "index-0"]], "rfc 5424#section-6": [[114, "index-1"]], "pep 373": [[115, "index-0"], [484, "index-0"]], "pep 263": [[119, "index-0"], [265, "index-1"], [393, "index-0"], [393, "index-1"], [480, "index-3"], [482, "index-19"]], "rfc 2616": [[120, "index-0"], [120, "index-1"], [120, "index-2"], [408, "index-0"], [410, "index-5"], [410, "index-6"], [410, "index-8"], [422, "index-10"], [422, "index-5"], [489, "index-7"]], "cflags": [[121, "index-10"], [121, "index-9"], [471, "envvar-CFLAGS"], [471, "index-11"], [471, "index-12"], [471, "index-13"], [471, "index-14"], [471, "index-17"], [480, "index-25"]], "homedrive": [[121, "index-7"], [309, "index-6"]], "homepath": [[121, "index-8"], [309, "index-5"]], "userprofile": [[121, "index-6"], [309, "index-4"], [495, "index-13"], [495, "index-20"]], "pep 617": [[123, "index-0"], [446, "index-0"], [487, "index-14"], [488, "index-32"], [496, "index-14"], [496, "index-19"], [496, "index-7"]], "apply (2to3 fixer)": [[123, "to3fixer-apply"]], "asserts (2to3 fixer)": [[123, "to3fixer-asserts"]], "basestring (2to3 fixer)": [[123, "to3fixer-basestring"]], "buffer (2to3 fixer)": [[123, "to3fixer-buffer"]], "dict (2to3 fixer)": [[123, "to3fixer-dict"]], "except (2to3 fixer)": [[123, "to3fixer-except"]], "exec (2to3 fixer)": [[123, "to3fixer-exec"]], "execfile (2to3 fixer)": [[123, "to3fixer-execfile"]], "exitfunc (2to3 fixer)": [[123, "to3fixer-exitfunc"]], "filter (2to3 fixer)": [[123, "to3fixer-filter"]], "funcattrs (2to3 fixer)": [[123, "to3fixer-funcattrs"]], "future (2to3 fixer)": [[123, "to3fixer-future"]], "getcwdu (2to3 fixer)": [[123, "to3fixer-getcwdu"]], "has_key (2to3 fixer)": [[123, "to3fixer-has_key"]], "idioms (2to3 fixer)": [[123, "to3fixer-idioms"]], "import (2to3 fixer)": [[123, "to3fixer-import"]], "imports (2to3 fixer)": [[123, "to3fixer-imports"]], "imports2 (2to3 fixer)": [[123, "to3fixer-imports2"]], "input (2to3 fixer)": [[123, "to3fixer-input"]], "intern (2to3 fixer)": [[123, "to3fixer-intern"]], "isinstance (2to3 fixer)": [[123, "to3fixer-isinstance"]], "itertools (2to3 fixer)": [[123, "to3fixer-itertools"]], "itertools_imports (2to3 fixer)": [[123, "to3fixer-itertools_imports"]], "lib2to3": [[123, "module-lib2to3"]], "long (2to3 fixer)": [[123, "to3fixer-long"]], "map (2to3 fixer)": [[123, "to3fixer-map"]], "metaclass (2to3 fixer)": [[123, "to3fixer-metaclass"]], "methodattrs (2to3 fixer)": [[123, "to3fixer-methodattrs"]], "ne (2to3 fixer)": [[123, "to3fixer-ne"]], "next (2to3 fixer)": [[123, "to3fixer-next"]], "nonzero (2to3 fixer)": [[123, "to3fixer-nonzero"]], "numliterals (2to3 fixer)": [[123, "to3fixer-numliterals"]], "operator (2to3 fixer)": [[123, "to3fixer-operator"]], "paren (2to3 fixer)": [[123, "to3fixer-paren"]], "print (2to3 fixer)": [[123, "to3fixer-print"]], "raise (2to3 fixer)": [[123, "to3fixer-raise"]], "raw_input (2to3 fixer)": [[123, "to3fixer-raw_input"]], "reduce (2to3 fixer)": [[123, "to3fixer-reduce"]], "reload (2to3 fixer)": [[123, "to3fixer-reload"]], "renames (2to3 fixer)": [[123, "to3fixer-renames"]], "repr (2to3 fixer)": [[123, "to3fixer-repr"]], "set_literal (2to3 fixer)": [[123, "to3fixer-set_literal"]], "standarderror (2to3 fixer)": [[123, "to3fixer-standarderror"]], "sys_exc (2to3 fixer)": [[123, "to3fixer-sys_exc"]], "throw (2to3 fixer)": [[123, "to3fixer-throw"]], "tuple_params (2to3 fixer)": [[123, "to3fixer-tuple_params"]], "types (2to3 fixer)": [[123, "to3fixer-types"]], "unicode (2to3 fixer)": [[123, "to3fixer-unicode"]], "urllib (2to3 fixer)": [[123, "to3fixer-urllib"]], "ws_comma (2to3 fixer)": [[123, "to3fixer-ws_comma"]], "xrange (2to3 fixer)": [[123, "to3fixer-xrange"]], "xreadlines (2to3 fixer)": [[123, "to3fixer-xreadlines"]], "zip (2to3 fixer)": [[123, "to3fixer-zip"]], "pep 227": [[124, "index-0"], [478, "index-2"], [479, "index-16"]], "pep 236": [[124, "index-11"], [451, "index-42"], [478, "index-0"], [478, "index-1"], [478, "index-3"]], "pep 255": [[124, "index-1"], [445, "index-26"], [479, "index-8"], [479, "index-9"], [480, "index-1"], [480, "index-2"]], "pep 3105": [[124, "index-5"], [483, "index-10"], [485, "index-0"]], "pep 3112": [[124, "index-6"], [483, "index-12"]], "pep 328": [[124, "index-3"], [239, "index-15"], [265, "index-3"], [447, "index-24"], [481, "index-10"], [481, "index-17"], [482, "index-5"], [482, "index-6"], [485, "index-16"], [490, "index-36"]], "pep 479": [[124, "index-7"], [227, "index-6"], [227, "index-7"], [492, "index-17"], [492, "index-18"], [494, "index-37"]], "pep 563": [[124, "index-8"], [124, "index-9"], [401, "index-48"], [401, "index-51"], [442, "index-39"], [451, "index-41"], [488, "index-20"], [494, "index-2"]], "pep 649": [[124, "index-10"]], "_feature (class in __future__)": [[124, "future__._Feature"]], "compiler_flag (__future__._feature attribute)": [[124, "future__._Feature.compiler_flag"]], "getmandatoryrelease() (__future__._feature method)": [[124, "future__._Feature.getMandatoryRelease"]], "getoptionalrelease() (__future__._feature method)": [[124, "future__._Feature.getOptionalRelease"]], "locktype (in module _thread)": [[126, "thread.LockType"]], "posix": [[126, "index-1"], [321, "module-posix"], [376, "index-0"]], "timeout_max (in module _thread)": [[126, "thread.TIMEOUT_MAX"]], "acquire() (_thread.lock method)": [[126, "thread.lock.acquire"]], "allocate_lock() (in module _thread)": [[126, "thread.allocate_lock"]], "binary semaphores": [[126, "index-0"]], "error": [[126, "thread.error"], [154, "audioop.error"], [159, "binascii.Error"], [180, "configparser.Error"], [184, "copy.Error"], [188, "csv.Error"], [190, "curses.error"], [197, "dbm.dumb.error"], [197, "dbm.error"], [197, "dbm.gnu.error"], [197, "dbm.ndbm.error"], [242, "getopt.error"], [281, "locale.Error"], [286, "mailbox.Error"], [302, "nis.error"], [308, "os.error"], [329, "xml.parsers.expat.error"], [334, "re.error"], [337, "resource.error"], [343, "select.error"], [347, "shutil.Error"], [353, "socket.error"], [356, "sqlite3.Error"], [363, "struct.error"], [365, "sunau.Error"], [412, "uu.Error"], [416, "wave.Error"], [418, "webbrowser.Error"], [423, "xdrlib.Error"], [439, "zlib.error"]], "exit() (in module _thread)": [[126, "thread.exit"]], "get_ident() (in module _thread)": [[126, "thread.get_ident"]], "get_native_id() (in module _thread)": [[126, "thread.get_native_id"]], "interrupt_main() (in module _thread)": [[126, "thread.interrupt_main"]], "light-weight processes": [[126, "index-0"]], "locked() (_thread.lock method)": [[126, "thread.lock.locked"]], "processes, light-weight": [[126, "index-0"]], "pthreads": [[126, "index-1"]], "release() (_thread.lock method)": [[126, "thread.lock.release"]], "semaphores, binary": [[126, "index-0"]], "stack_size() (in module _thread)": [[126, "thread.stack_size"]], "start_new_thread() (in module _thread)": [[126, "thread.start_new_thread"]], "threads": [[126, "index-1"]], "abc (class in abc)": [[127, "abc.ABC"]], "abcmeta (class in abc)": [[127, "abc.ABCMeta"]], "pep 3141": [[127, "index-1"], [304, "index-0"], [483, "index-19"]], "__subclasshook__() (abc.abcmeta method)": [[127, "abc.ABCMeta.__subclasshook__"]], "abc": [[127, "module-abc"]], "abstractclassmethod() (in module abc)": [[127, "abc.abstractclassmethod"]], "abstractmethod() (in module abc)": [[127, "abc.abstractmethod"]], "abstractproperty() (in module abc)": [[127, "abc.abstractproperty"]], "abstractstaticmethod() (in module abc)": [[127, "abc.abstractstaticmethod"]], "get_cache_token() (in module abc)": [[127, "abc.get_cache_token"]], "register() (abc.abcmeta method)": [[127, "abc.ABCMeta.register"]], "update_abstractmethods() (in module abc)": [[127, "abc.update_abstractmethods"]], "a-law": [[128, "index-2"], [154, "index-1"], [352, "index-0"]], "aiff": [[128, "index-0"], [166, "index-0"]], "aiff-c": [[128, "index-0"], [166, "index-0"]], "audio interchange file format": [[128, "index-0"], [166, "index-0"]], "g.722": [[128, "index-2"]], "pep 594#aifc": [[128, "index-1"]], "aifc": [[128, "module-aifc"]], "aifc() (aifc.aifc method)": [[128, "aifc.aifc.aifc"]], "aiff() (aifc.aifc method)": [[128, "aifc.aifc.aiff"]], "close() (aifc.aifc method)": [[128, "aifc.aifc.close"]], "getcompname() (aifc.aifc method)": [[128, "aifc.aifc.getcompname"]], "getcomptype() (aifc.aifc method)": [[128, "aifc.aifc.getcomptype"]], "getframerate() (aifc.aifc method)": [[128, "aifc.aifc.getframerate"]], "getmark() (aifc.aifc method)": [[128, "aifc.aifc.getmark"]], "getmarkers() (aifc.aifc method)": [[128, "aifc.aifc.getmarkers"]], "getnchannels() (aifc.aifc method)": [[128, "aifc.aifc.getnchannels"]], "getnframes() (aifc.aifc method)": [[128, "aifc.aifc.getnframes"]], "getparams() (aifc.aifc method)": [[128, "aifc.aifc.getparams"]], "getsampwidth() (aifc.aifc method)": [[128, "aifc.aifc.getsampwidth"]], "open() (in module aifc)": [[128, "aifc.open"]], "readframes() (aifc.aifc method)": [[128, "aifc.aifc.readframes"]], "rewind() (aifc.aifc method)": [[128, "aifc.aifc.rewind"]], "setcomptype() (aifc.aifc method)": [[128, "aifc.aifc.setcomptype"]], "setframerate() (aifc.aifc method)": [[128, "aifc.aifc.setframerate"]], "setmark() (aifc.aifc method)": [[128, "aifc.aifc.setmark"]], "setnchannels() (aifc.aifc method)": [[128, "aifc.aifc.setnchannels"]], "setnframes() (aifc.aifc method)": [[128, "aifc.aifc.setnframes"]], "setparams() (aifc.aifc method)": [[128, "aifc.aifc.setparams"]], "setpos() (aifc.aifc method)": [[128, "aifc.aifc.setpos"]], "setsampwidth() (aifc.aifc method)": [[128, "aifc.aifc.setsampwidth"]], "tell() (aifc.aifc method)": [[128, "aifc.aifc.tell"]], "u-law": [[128, "index-2"], [154, "index-1"], [352, "index-0"]], "writeframes() (aifc.aifc method)": [[128, "aifc.aifc.writeframes"]], "writeframesraw() (aifc.aifc method)": [[128, "aifc.aifc.writeframesraw"]], "* (asterisk)": [[131, "index-1"], [133, "index-1"], [234, "index-2"], [245, "index-1"], [334, "index-3"], [360, "index-13"], [360, "index-35"], [360, "index-45"], [442, "index-32"], [445, "index-49"], [445, "index-65"], [445, "index-93"], [451, "index-37"], [451, "index-6"], [456, "index-3"]], "+ (plus)": [[131, "index-2"], [207, "index-4"], [334, "index-4"], [360, "index-13"], [360, "index-36"], [360, "index-46"], [361, "index-4"], [445, "index-61"], [445, "index-69"]], "? (question mark)": [[131, "index-0"], [133, "index-0"], [168, "index-0"], [171, "index-1"], [234, "index-2"], [245, "index-1"], [334, "index-5"], [356, "index-2"], [363, "index-2"], [363, "index-3"]], "action (class in argparse)": [[131, "argparse.Action"]], "argumentdefaultshelpformatter (class in argparse)": [[131, "argparse.ArgumentDefaultsHelpFormatter"]], "argumenterror": [[131, "argparse.ArgumentError"], [189, "ctypes.ArgumentError"]], "argumentparser (class in argparse)": [[131, "argparse.ArgumentParser"]], "argumenttypeerror": [[131, "argparse.ArgumentTypeError"]], "filetype (class in argparse)": [[131, "argparse.FileType"]], "metavartypehelpformatter (class in argparse)": [[131, "argparse.MetavarTypeHelpFormatter"]], "namespace (class in argparse)": [[131, "argparse.Namespace"]], "rawdescriptionhelpformatter (class in argparse)": [[131, "argparse.RawDescriptionHelpFormatter"]], "rawtexthelpformatter (class in argparse)": [[131, "argparse.RawTextHelpFormatter"]], "add_argument() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.add_argument"]], "add_argument_group() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.add_argument_group"]], "add_mutually_exclusive_group() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.add_mutually_exclusive_group"]], "add_subparsers() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.add_subparsers"]], "argparse": [[131, "module-argparse"]], "convert_arg_line_to_args() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.convert_arg_line_to_args"]], "error() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.error"]], "exit() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.exit"]], "format_help() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.format_help"]], "format_usage() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.format_usage"]], "get_default() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.get_default"]], "in argparse module": [[131, "index-0"], [131, "index-1"], [131, "index-2"]], "parse_args() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.parse_args"]], "parse_intermixed_args() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.parse_intermixed_args"]], "parse_known_args() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.parse_known_args"]], "parse_known_intermixed_args() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.parse_known_intermixed_args"]], "print_help() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.print_help"]], "print_usage() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.print_usage"]], "set_defaults() (argparse.argumentparser method)": [[131, "argparse.ArgumentParser.set_defaults"]], "append() (array.array method)": [[132, "array.array.append"]], "array": [[132, "module-array"], [360, "index-39"], [443, "index-23"]], "array (class in array)": [[132, "array.array"]], "arrays": [[132, "index-0"]], "buffer_info() (array.array method)": [[132, "array.array.buffer_info"]], "byteswap() (array.array method)": [[132, "array.array.byteswap"]], "count() (array.array method)": [[132, "array.array.count"]], "extend() (array.array method)": [[132, "array.array.extend"]], "frombytes() (array.array method)": [[132, "array.array.frombytes"]], "fromfile() (array.array method)": [[132, "array.array.fromfile"]], "fromlist() (array.array method)": [[132, "array.array.fromlist"]], "fromunicode() (array.array method)": [[132, "array.array.fromunicode"]], "index() (array.array method)": [[132, "array.array.index"]], "insert() (array.array method)": [[132, "array.array.insert"]], "itemsize (array.array attribute)": [[132, "array.array.itemsize"]], "pop() (array.array method)": [[132, "array.array.pop"]], "remove() (array.array method)": [[132, "array.array.remove"]], "reverse() (array.array method)": [[132, "array.array.reverse"]], "tobytes() (array.array method)": [[132, "array.array.tobytes"]], "tofile() (array.array method)": [[132, "array.array.tofile"]], "tolist() (array.array method)": [[132, "array.array.tolist"]], "tounicode() (array.array method)": [[132, "array.array.tounicode"]], "typecode (array.array attribute)": [[132, "array.array.typecode"]], "typecodes (in module array)": [[132, "array.typecodes"]], "--help": [[133, "cmdoption-ast-h"], [163, "cmdoption-calendar-help"], [204, "cmdoption-dis-h"], [248, "cmdoption-gzip-h"], [277, "cmdoption-json.tool-h"], [382, "cmdoption-timeit-h"], [393, "cmdoption-tokenize-h"], [395, "cmdoption-trace-help"], [436, "cmdoption-zipapp-h"], [470, "cmdoption-help"]], "--include-attributes": [[133, "cmdoption-ast-a"]], "--indent": [[133, "cmdoption-ast-indent"], [277, "cmdoption-json.tool-indent"]], "--mode": [[133, "cmdoption-ast-mode"]], "--no-type-comments": [[133, "cmdoption-ast-no-type-comments"]], "-a": [[133, "cmdoption-ast-a"], [315, "cmdoption-pickletools-a"]], "-h": [[133, "cmdoption-ast-h"], [163, "cmdoption-calendar-help"], [204, "cmdoption-dis-h"], [248, "cmdoption-gzip-h"], [277, "cmdoption-json.tool-h"], [382, "cmdoption-timeit-h"], [393, "cmdoption-tokenize-h"], [436, "cmdoption-zipapp-h"], [470, "cmdoption-h"]], "-i": [[133, "cmdoption-ast-i"], [176, "cmdoption-compileall-i"], [470, "cmdoption-I"], [470, "cmdoption-i"]], "-m": [[133, "cmdoption-ast-m"], [163, "cmdoption-calendar-months"], [315, "cmdoption-pickletools-m"], [395, "cmdoption-trace-m"], [436, "cmdoption-zipapp-m"], [470, "cmdoption-m"]], "ast (class in ast)": [[133, "ast.AST"]], "add (class in ast)": [[133, "ast.Add"]], "and (class in ast)": [[133, "ast.And"]], "annassign (class in ast)": [[133, "ast.AnnAssign"]], "assert (class in ast)": [[133, "ast.Assert"]], "assign (class in ast)": [[133, "ast.Assign"]], "asyncfor (class in ast)": [[133, "ast.AsyncFor"]], "asyncfunctiondef (class in ast)": [[133, "ast.AsyncFunctionDef"]], "asyncwith (class in ast)": [[133, "ast.AsyncWith"]], "attribute (class in ast)": [[133, "ast.Attribute"]], "augassign (class in ast)": [[133, "ast.AugAssign"]], "await (class in ast)": [[133, "ast.Await"]], "binop (class in ast)": [[133, "ast.BinOp"]], "bitand (class in ast)": [[133, "ast.BitAnd"]], "bitor (class in ast)": [[133, "ast.BitOr"]], "bitxor (class in ast)": [[133, "ast.BitXor"]], "boolop (class in ast)": [[133, "ast.BoolOp"]], "break (class in ast)": [[133, "ast.Break"]], "call (class in ast)": [[133, "ast.Call"]], "classdef (class in ast)": [[133, "ast.ClassDef"]], "compare (class in ast)": [[133, "ast.Compare"]], "constant (class in ast)": [[133, "ast.Constant"]], "continue (class in ast)": [[133, "ast.Continue"]], "del (class in ast)": [[133, "ast.Del"]], "delete (class in ast)": [[133, "ast.Delete"]], "dict (class in ast)": [[133, "ast.Dict"]], "dictcomp (class in ast)": [[133, "ast.DictComp"]], "div (class in ast)": [[133, "ast.Div"]], "eq (class in ast)": [[133, "ast.Eq"]], "excepthandler (class in ast)": [[133, "ast.ExceptHandler"]], "expr (class in ast)": [[133, "ast.Expr"]], "expression (class in ast)": [[133, "ast.Expression"]], "floordiv (class in ast)": [[133, "ast.FloorDiv"]], "for (class in ast)": [[133, "ast.For"]], "formattedvalue (class in ast)": [[133, "ast.FormattedValue"]], "functiondef (class in ast)": [[133, "ast.FunctionDef"]], "functiontype (class in ast)": [[133, "ast.FunctionType"]], "generatorexp (class in ast)": [[133, "ast.GeneratorExp"]], "global (class in ast)": [[133, "ast.Global"]], "gt (class in ast)": [[133, "ast.Gt"]], "gte (class in ast)": [[133, "ast.GtE"]], "if (class in ast)": [[133, "ast.If"]], "ifexp (class in ast)": [[133, "ast.IfExp"]], "import (class in ast)": [[133, "ast.Import"]], "importfrom (class in ast)": [[133, "ast.ImportFrom"]], "in (class in ast)": [[133, "ast.In"]], "interactive (class in ast)": [[133, "ast.Interactive"]], "invert (class in ast)": [[133, "ast.Invert"]], "is (class in ast)": [[133, "ast.Is"]], "isnot (class in ast)": [[133, "ast.IsNot"]], "joinedstr (class in ast)": [[133, "ast.JoinedStr"]], "lshift (class in ast)": [[133, "ast.LShift"]], "lambda (class in ast)": [[133, "ast.Lambda"]], "list (class in ast)": [[133, "ast.List"]], "listcomp (class in ast)": [[133, "ast.ListComp"]], "load (class in ast)": [[133, "ast.Load"]], "lt (class in ast)": [[133, "ast.Lt"]], "lte (class in ast)": [[133, "ast.LtE"]], "matmult (class in ast)": [[133, "ast.MatMult"]], "match (class in ast)": [[133, "ast.Match"]], "matchas (class in ast)": [[133, "ast.MatchAs"]], "matchclass (class in ast)": [[133, "ast.MatchClass"]], "matchmapping (class in ast)": [[133, "ast.MatchMapping"]], "matchor (class in ast)": [[133, "ast.MatchOr"]], "matchsequence (class in ast)": [[133, "ast.MatchSequence"]], "matchsingleton (class in ast)": [[133, "ast.MatchSingleton"]], "matchstar (class in ast)": [[133, "ast.MatchStar"]], "matchvalue (class in ast)": [[133, "ast.MatchValue"]], "mod (class in ast)": [[133, "ast.Mod"]], "module (class in ast)": [[133, "ast.Module"]], "mult (class in ast)": [[133, "ast.Mult"]], "name (class in ast)": [[133, "ast.Name"]], "namedexpr (class in ast)": [[133, "ast.NamedExpr"]], "nodetransformer (class in ast)": [[133, "ast.NodeTransformer"]], "nodevisitor (class in ast)": [[133, "ast.NodeVisitor"]], "nonlocal (class in ast)": [[133, "ast.Nonlocal"]], "not (class in ast)": [[133, "ast.Not"]], "noteq (class in ast)": [[133, "ast.NotEq"]], "notin (class in ast)": [[133, "ast.NotIn"]], "or (class in ast)": [[133, "ast.Or"]], "pass (class in ast)": [[133, "ast.Pass"]], "pow (class in ast)": [[133, "ast.Pow"]], "pycf_allow_top_level_await (in module ast)": [[133, "ast.PyCF_ALLOW_TOP_LEVEL_AWAIT"]], "pycf_only_ast (in module ast)": [[133, "ast.PyCF_ONLY_AST"]], "pycf_type_comments (in module ast)": [[133, "ast.PyCF_TYPE_COMMENTS"]], "rshift (class in ast)": [[133, "ast.RShift"]], "raise (class in ast)": [[133, "ast.Raise"]], "return (class in ast)": [[133, "ast.Return"]], "set (class in ast)": [[133, "ast.Set"]], "setcomp (class in ast)": [[133, "ast.SetComp"]], "slice (class in ast)": [[133, "ast.Slice"]], "starred (class in ast)": [[133, "ast.Starred"]], "store (class in ast)": [[133, "ast.Store"]], "sub (class in ast)": [[133, "ast.Sub"]], "subscript (class in ast)": [[133, "ast.Subscript"]], "try (class in ast)": [[133, "ast.Try"]], "trystar (class in ast)": [[133, "ast.TryStar"]], "tuple (class in ast)": [[133, "ast.Tuple"]], "uadd (class in ast)": [[133, "ast.UAdd"]], "usub (class in ast)": [[133, "ast.USub"]], "unaryop (class in ast)": [[133, "ast.UnaryOp"]], "while (class in ast)": [[133, "ast.While"]], "with (class in ast)": [[133, "ast.With"]], "yield (class in ast)": [[133, "ast.Yield"]], "yieldfrom (class in ast)": [[133, "ast.YieldFrom"]], "_fields (ast.ast attribute)": [[133, "ast.AST._fields"]], "alias (class in ast)": [[133, "ast.alias"]], "arg (class in ast)": [[133, "ast.arg"]], "arguments (class in ast)": [[133, "ast.arguments"]], "ast": [[133, "module-ast"]], "ast command line option": [[133, "cmdoption-ast-a"], [133, "cmdoption-ast-h"], [133, "cmdoption-ast-i"], [133, "cmdoption-ast-indent"], [133, "cmdoption-ast-m"], [133, "cmdoption-ast-mode"], [133, "cmdoption-ast-no-type-comments"]], "col_offset (ast.ast attribute)": [[133, "ast.AST.col_offset"]], "comprehension (class in ast)": [[133, "ast.comprehension"]], "copy_location() (in module ast)": [[133, "ast.copy_location"]], "dump() (in module ast)": [[133, "ast.dump"]], "end_col_offset (ast.ast attribute)": [[133, "ast.AST.end_col_offset"]], "end_lineno (ast.ast attribute)": [[133, "ast.AST.end_lineno"]], "fix_missing_locations() (in module ast)": [[133, "ast.fix_missing_locations"]], "generic_visit() (ast.nodevisitor method)": [[133, "ast.NodeVisitor.generic_visit"]], "get_docstring() (in module ast)": [[133, "ast.get_docstring"]], "get_source_segment() (in module ast)": [[133, "ast.get_source_segment"]], "in ast grammar": [[133, "index-0"], [133, "index-1"]], "increment_lineno() (in module ast)": [[133, "ast.increment_lineno"]], "iter_child_nodes() (in module ast)": [[133, "ast.iter_child_nodes"]], "iter_fields() (in module ast)": [[133, "ast.iter_fields"]], "keyword (class in ast)": [[133, "ast.keyword"]], "lineno (ast.ast attribute)": [[133, "ast.AST.lineno"]], "literal_eval() (in module ast)": [[133, "ast.literal_eval"]], "match_case (class in ast)": [[133, "ast.match_case"]], "parse() (in module ast)": [[133, "ast.parse"]], "type_comment (ast.assign attribute)": [[133, "ast.Assign.type_comment"]], "type_comment (ast.for attribute)": [[133, "ast.For.type_comment"]], "type_comment (ast.functiondef attribute)": [[133, "ast.FunctionDef.type_comment"]], "type_comment (ast.with attribute)": [[133, "ast.With.type_comment"]], "type_comment (ast.arg attribute)": [[133, "ast.arg.type_comment"]], "unparse() (in module ast)": [[133, "ast.unparse"]], "visit() (ast.nodevisitor method)": [[133, "ast.NodeVisitor.visit"]], "visit_constant() (ast.nodevisitor method)": [[133, "ast.NodeVisitor.visit_Constant"]], "walk() (in module ast)": [[133, "ast.walk"]], "withitem (class in ast)": [[133, "ast.withitem"]], "pep 594#asynchat": [[134, "index-0"]], "async_chat (class in asynchat)": [[134, "asynchat.async_chat"]], "async_chat.ac_in_buffer_size (in module asynchat)": [[134, "asynchat.async_chat.ac_in_buffer_size"]], "async_chat.ac_out_buffer_size (in module asynchat)": [[134, "asynchat.async_chat.ac_out_buffer_size"]], "asynchat": [[134, "module-asynchat"]], "close_when_done() (asynchat.async_chat method)": [[134, "asynchat.async_chat.close_when_done"]], "collect_incoming_data() (asynchat.async_chat method)": [[134, "asynchat.async_chat.collect_incoming_data"]], "discard_buffers() (asynchat.async_chat method)": [[134, "asynchat.async_chat.discard_buffers"]], "found_terminator() (asynchat.async_chat method)": [[134, "asynchat.async_chat.found_terminator"]], "get_terminator() (asynchat.async_chat method)": [[134, "asynchat.async_chat.get_terminator"]], "push() (asynchat.async_chat method)": [[134, "asynchat.async_chat.push"]], "push_with_producer() (asynchat.async_chat method)": [[134, "asynchat.async_chat.push_with_producer"]], "set_terminator() (asynchat.async_chat method)": [[134, "asynchat.async_chat.set_terminator"]], "asyncio": [[135, "module-asyncio"]], "pythonasynciodebug": [[137, "index-0"], [138, "index-5"], [201, "index-5"], [470, "envvar-PYTHONASYNCIODEBUG"]], "abstracteventloop (class in asyncio)": [[138, "asyncio.AbstractEventLoop"]], "handle (class in asyncio)": [[138, "asyncio.Handle"]], "pep 567": [[138, "index-0"], [138, "index-1"], [138, "index-2"], [141, "index-0"], [183, "index-0"], [494, "index-28"], [494, "index-30"]], "proactoreventloop (class in asyncio)": [[138, "asyncio.ProactorEventLoop"]], "rfc 8305": [[138, "index-3"], [138, "index-4"]], "selectoreventloop (class in asyncio)": [[138, "asyncio.SelectorEventLoop"]], "server (class in asyncio)": [[138, "asyncio.Server"]], "timerhandle (class in asyncio)": [[138, "asyncio.TimerHandle"]], "add_reader() (asyncio.loop method)": [[138, "asyncio.loop.add_reader"]], "add_signal_handler() (asyncio.loop method)": [[138, "asyncio.loop.add_signal_handler"]], "add_writer() (asyncio.loop method)": [[138, "asyncio.loop.add_writer"]], "call_at() (asyncio.loop method)": [[138, "asyncio.loop.call_at"]], "call_exception_handler() (asyncio.loop method)": [[138, "asyncio.loop.call_exception_handler"]], "call_later() (asyncio.loop method)": [[138, "asyncio.loop.call_later"]], "call_soon() (asyncio.loop method)": [[138, "asyncio.loop.call_soon"]], "call_soon_threadsafe() (asyncio.loop method)": [[138, "asyncio.loop.call_soon_threadsafe"]], "cancel() (asyncio.handle method)": [[138, "asyncio.Handle.cancel"]], "cancelled() (asyncio.handle method)": [[138, "asyncio.Handle.cancelled"]], "close() (asyncio.server method)": [[138, "asyncio.Server.close"]], "close() (asyncio.loop method)": [[138, "asyncio.loop.close"]], "connect_accepted_socket() (asyncio.loop method)": [[138, "asyncio.loop.connect_accepted_socket"]], "connect_read_pipe() (asyncio.loop method)": [[138, "asyncio.loop.connect_read_pipe"]], "connect_write_pipe() (asyncio.loop method)": [[138, "asyncio.loop.connect_write_pipe"]], "create_connection() (asyncio.loop method)": [[138, "asyncio.loop.create_connection"]], "create_datagram_endpoint() (asyncio.loop method)": [[138, "asyncio.loop.create_datagram_endpoint"]], "create_future() (asyncio.loop method)": [[138, "asyncio.loop.create_future"]], "create_server() (asyncio.loop method)": [[138, "asyncio.loop.create_server"]], "create_task() (asyncio.loop method)": [[138, "asyncio.loop.create_task"]], "create_unix_connection() (asyncio.loop method)": [[138, "asyncio.loop.create_unix_connection"]], "create_unix_server() (asyncio.loop method)": [[138, "asyncio.loop.create_unix_server"]], "default_exception_handler() (asyncio.loop method)": [[138, "asyncio.loop.default_exception_handler"]], "get_debug() (asyncio.loop method)": [[138, "asyncio.loop.get_debug"]], "get_event_loop() (in module asyncio)": [[138, "asyncio.get_event_loop"]], "get_exception_handler() (asyncio.loop method)": [[138, "asyncio.loop.get_exception_handler"]], "get_loop() (asyncio.server method)": [[138, "asyncio.Server.get_loop"]], "get_running_loop() (in module asyncio)": [[138, "asyncio.get_running_loop"]], "get_task_factory() (asyncio.loop method)": [[138, "asyncio.loop.get_task_factory"]], "getaddrinfo() (asyncio.loop method)": [[138, "asyncio.loop.getaddrinfo"]], "getnameinfo() (asyncio.loop method)": [[138, "asyncio.loop.getnameinfo"]], "is_closed() (asyncio.loop method)": [[138, "asyncio.loop.is_closed"]], "is_running() (asyncio.loop method)": [[138, "asyncio.loop.is_running"]], "is_serving() (asyncio.server method)": [[138, "asyncio.Server.is_serving"]], "new_event_loop() (in module asyncio)": [[138, "asyncio.new_event_loop"]], "remove_reader() (asyncio.loop method)": [[138, "asyncio.loop.remove_reader"]], "remove_signal_handler() (asyncio.loop method)": [[138, "asyncio.loop.remove_signal_handler"]], "remove_writer() (asyncio.loop method)": [[138, "asyncio.loop.remove_writer"]], "run_forever() (asyncio.loop method)": [[138, "asyncio.loop.run_forever"]], "run_in_executor() (asyncio.loop method)": [[138, "asyncio.loop.run_in_executor"]], "run_until_complete() (asyncio.loop method)": [[138, "asyncio.loop.run_until_complete"]], "sendfile() (asyncio.loop method)": [[138, "asyncio.loop.sendfile"]], "serve_forever() (asyncio.server method)": [[138, "asyncio.Server.serve_forever"]], "set_debug() (asyncio.loop method)": [[138, "asyncio.loop.set_debug"]], "set_default_executor() (asyncio.loop method)": [[138, "asyncio.loop.set_default_executor"]], "set_event_loop() (in module asyncio)": [[138, "asyncio.set_event_loop"]], "set_exception_handler() (asyncio.loop method)": [[138, "asyncio.loop.set_exception_handler"]], "set_task_factory() (asyncio.loop method)": [[138, "asyncio.loop.set_task_factory"]], "shutdown_asyncgens() (asyncio.loop method)": [[138, "asyncio.loop.shutdown_asyncgens"]], "shutdown_default_executor() (asyncio.loop method)": [[138, "asyncio.loop.shutdown_default_executor"]], "slow_callback_duration (asyncio.loop attribute)": [[138, "asyncio.loop.slow_callback_duration"]], "sock_accept() (asyncio.loop method)": [[138, "asyncio.loop.sock_accept"]], "sock_connect() (asyncio.loop method)": [[138, "asyncio.loop.sock_connect"]], "sock_recv() (asyncio.loop method)": [[138, "asyncio.loop.sock_recv"]], "sock_recv_into() (asyncio.loop method)": [[138, "asyncio.loop.sock_recv_into"]], "sock_recvfrom() (asyncio.loop method)": [[138, "asyncio.loop.sock_recvfrom"]], "sock_recvfrom_into() (asyncio.loop method)": [[138, "asyncio.loop.sock_recvfrom_into"]], "sock_sendall() (asyncio.loop method)": [[138, "asyncio.loop.sock_sendall"]], "sock_sendfile() (asyncio.loop method)": [[138, "asyncio.loop.sock_sendfile"]], "sock_sendto() (asyncio.loop method)": [[138, "asyncio.loop.sock_sendto"]], "sockets (asyncio.server attribute)": [[138, "asyncio.Server.sockets"]], "start_serving() (asyncio.server method)": [[138, "asyncio.Server.start_serving"]], "start_tls() (asyncio.loop method)": [[138, "asyncio.loop.start_tls"]], "stop() (asyncio.loop method)": [[138, "asyncio.loop.stop"]], "subprocess_exec() (asyncio.loop method)": [[138, "asyncio.loop.subprocess_exec"]], "subprocess_shell() (asyncio.loop method)": [[138, "asyncio.loop.subprocess_shell"]], "time() (asyncio.loop method)": [[138, "asyncio.loop.time"]], "wait_closed() (asyncio.server method)": [[138, "asyncio.Server.wait_closed"]], "when() (asyncio.timerhandle method)": [[138, "asyncio.TimerHandle.when"]], "cancellederror": [[139, "asyncio.CancelledError"], [179, "concurrent.futures.CancelledError"]], "incompletereaderror": [[139, "asyncio.IncompleteReadError"]], "invalidstateerror": [[139, "asyncio.InvalidStateError"], [179, "concurrent.futures.InvalidStateError"]], "limitoverrunerror": [[139, "asyncio.LimitOverrunError"]], "sendfilenotavailableerror": [[139, "asyncio.SendfileNotAvailableError"]], "timeouterror": [[139, "asyncio.TimeoutError"], [179, "concurrent.futures.TimeoutError"], [227, "TimeoutError"], [298, "multiprocessing.TimeoutError"]], "consumed (asyncio.limitoverrunerror attribute)": [[139, "asyncio.LimitOverrunError.consumed"]], "expected (asyncio.incompletereaderror attribute)": [[139, "asyncio.IncompleteReadError.expected"]], "partial (asyncio.incompletereaderror attribute)": [[139, "asyncio.IncompleteReadError.partial"]], "__init__() (asyncio.future method)": [[140, "asyncio.Future.__init__"]], "__init__() (asyncio.task method)": [[140, "asyncio.Task.__init__"]], "_enter_task() (in module asyncio)": [[140, "asyncio._enter_task"]], "_leave_task() (in module asyncio)": [[140, "asyncio._leave_task"]], "_register_task() (in module asyncio)": [[140, "asyncio._register_task"]], "_unregister_task() (in module asyncio)": [[140, "asyncio._unregister_task"]], "future (class in asyncio)": [[141, "asyncio.Future"]], "add_done_callback() (asyncio.future method)": [[141, "asyncio.Future.add_done_callback"]], "cancel() (asyncio.future method)": [[141, "asyncio.Future.cancel"]], "cancelled() (asyncio.future method)": [[141, "asyncio.Future.cancelled"]], "done() (asyncio.future method)": [[141, "asyncio.Future.done"]], "ensure_future() (in module asyncio)": [[141, "asyncio.ensure_future"]], "exception() (asyncio.future method)": [[141, "asyncio.Future.exception"]], "get_loop() (asyncio.future method)": [[141, "asyncio.Future.get_loop"]], "isfuture() (in module asyncio)": [[141, "asyncio.isfuture"]], "remove_done_callback() (asyncio.future method)": [[141, "asyncio.Future.remove_done_callback"]], "result() (asyncio.future method)": [[141, "asyncio.Future.result"]], "set_exception() (asyncio.future method)": [[141, "asyncio.Future.set_exception"]], "set_result() (asyncio.future method)": [[141, "asyncio.Future.set_result"]], "wrap_future() (in module asyncio)": [[141, "asyncio.wrap_future"]], "abstractchildwatcher (class in asyncio)": [[144, "asyncio.AbstractChildWatcher"]], "abstracteventlooppolicy (class in asyncio)": [[144, "asyncio.AbstractEventLoopPolicy"]], "defaulteventlooppolicy (class in asyncio)": [[144, "asyncio.DefaultEventLoopPolicy"]], "fastchildwatcher (class in asyncio)": [[144, "asyncio.FastChildWatcher"]], "multiloopchildwatcher (class in asyncio)": [[144, "asyncio.MultiLoopChildWatcher"]], "pidfdchildwatcher (class in asyncio)": [[144, "asyncio.PidfdChildWatcher"]], "safechildwatcher (class in asyncio)": [[144, "asyncio.SafeChildWatcher"]], "threadedchildwatcher (class in asyncio)": [[144, "asyncio.ThreadedChildWatcher"]], "windowsproactoreventlooppolicy (class in asyncio)": [[144, "asyncio.WindowsProactorEventLoopPolicy"]], "windowsselectoreventlooppolicy (class in asyncio)": [[144, "asyncio.WindowsSelectorEventLoopPolicy"]], "add_child_handler() (asyncio.abstractchildwatcher method)": [[144, "asyncio.AbstractChildWatcher.add_child_handler"]], "attach_loop() (asyncio.abstractchildwatcher method)": [[144, "asyncio.AbstractChildWatcher.attach_loop"]], "close() (asyncio.abstractchildwatcher method)": [[144, "asyncio.AbstractChildWatcher.close"]], "get_child_watcher() (asyncio.abstracteventlooppolicy method)": [[144, "asyncio.AbstractEventLoopPolicy.get_child_watcher"]], "get_child_watcher() (in module asyncio)": [[144, "asyncio.get_child_watcher"]], "get_event_loop() (asyncio.abstracteventlooppolicy method)": [[144, "asyncio.AbstractEventLoopPolicy.get_event_loop"]], "get_event_loop_policy() (in module asyncio)": [[144, "asyncio.get_event_loop_policy"]], "is_active() (asyncio.abstractchildwatcher method)": [[144, "asyncio.AbstractChildWatcher.is_active"]], "new_event_loop() (asyncio.abstracteventlooppolicy method)": [[144, "asyncio.AbstractEventLoopPolicy.new_event_loop"]], "remove_child_handler() (asyncio.abstractchildwatcher method)": [[144, "asyncio.AbstractChildWatcher.remove_child_handler"]], "set_child_watcher() (asyncio.abstracteventlooppolicy method)": [[144, "asyncio.AbstractEventLoopPolicy.set_child_watcher"]], "set_child_watcher() (in module asyncio)": [[144, "asyncio.set_child_watcher"]], "set_event_loop() (asyncio.abstracteventlooppolicy method)": [[144, "asyncio.AbstractEventLoopPolicy.set_event_loop"]], "set_event_loop_policy() (in module asyncio)": [[144, "asyncio.set_event_loop_policy"]], "baseprotocol (class in asyncio)": [[145, "asyncio.BaseProtocol"]], "basetransport (class in asyncio)": [[145, "asyncio.BaseTransport"]], "bufferedprotocol (class in asyncio)": [[145, "asyncio.BufferedProtocol"]], "datagramprotocol (class in asyncio)": [[145, "asyncio.DatagramProtocol"]], "datagramtransport (class in asyncio)": [[145, "asyncio.DatagramTransport"]], "protocol (class in asyncio)": [[145, "asyncio.Protocol"]], "readtransport (class in asyncio)": [[145, "asyncio.ReadTransport"]], "subprocessprotocol (class in asyncio)": [[145, "asyncio.SubprocessProtocol"]], "subprocesstransport (class in asyncio)": [[145, "asyncio.SubprocessTransport"]], "transport (class in asyncio)": [[145, "asyncio.Transport"]], "writetransport (class in asyncio)": [[145, "asyncio.WriteTransport"]], "abort() (asyncio.datagramtransport method)": [[145, "asyncio.DatagramTransport.abort"]], "abort() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.abort"]], "buffer_updated() (asyncio.bufferedprotocol method)": [[145, "asyncio.BufferedProtocol.buffer_updated"]], "can_write_eof() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.can_write_eof"]], "close() (asyncio.basetransport method)": [[145, "asyncio.BaseTransport.close"]], "close() (asyncio.subprocesstransport method)": [[145, "asyncio.SubprocessTransport.close"]], "connection_lost() (asyncio.baseprotocol method)": [[145, "asyncio.BaseProtocol.connection_lost"]], "connection_made() (asyncio.baseprotocol method)": [[145, "asyncio.BaseProtocol.connection_made"]], "data_received() (asyncio.protocol method)": [[145, "asyncio.Protocol.data_received"]], "datagram_received() (asyncio.datagramprotocol method)": [[145, "asyncio.DatagramProtocol.datagram_received"]], "eof_received() (asyncio.bufferedprotocol method)": [[145, "asyncio.BufferedProtocol.eof_received"]], "eof_received() (asyncio.protocol method)": [[145, "asyncio.Protocol.eof_received"]], "error_received() (asyncio.datagramprotocol method)": [[145, "asyncio.DatagramProtocol.error_received"]], "get_buffer() (asyncio.bufferedprotocol method)": [[145, "asyncio.BufferedProtocol.get_buffer"]], "get_extra_info() (asyncio.basetransport method)": [[145, "asyncio.BaseTransport.get_extra_info"]], "get_pid() (asyncio.subprocesstransport method)": [[145, "asyncio.SubprocessTransport.get_pid"]], "get_pipe_transport() (asyncio.subprocesstransport method)": [[145, "asyncio.SubprocessTransport.get_pipe_transport"]], "get_protocol() (asyncio.basetransport method)": [[145, "asyncio.BaseTransport.get_protocol"]], "get_returncode() (asyncio.subprocesstransport method)": [[145, "asyncio.SubprocessTransport.get_returncode"]], "get_write_buffer_limits() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.get_write_buffer_limits"]], "get_write_buffer_size() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.get_write_buffer_size"]], "is_closing() (asyncio.basetransport method)": [[145, "asyncio.BaseTransport.is_closing"]], "is_reading() (asyncio.readtransport method)": [[145, "asyncio.ReadTransport.is_reading"]], "kill() (asyncio.subprocesstransport method)": [[145, "asyncio.SubprocessTransport.kill"]], "pause_reading() (asyncio.readtransport method)": [[145, "asyncio.ReadTransport.pause_reading"]], "pause_writing() (asyncio.baseprotocol method)": [[145, "asyncio.BaseProtocol.pause_writing"]], "pipe_connection_lost() (asyncio.subprocessprotocol method)": [[145, "asyncio.SubprocessProtocol.pipe_connection_lost"]], "pipe_data_received() (asyncio.subprocessprotocol method)": [[145, "asyncio.SubprocessProtocol.pipe_data_received"]], "process_exited() (asyncio.subprocessprotocol method)": [[145, "asyncio.SubprocessProtocol.process_exited"]], "resume_reading() (asyncio.readtransport method)": [[145, "asyncio.ReadTransport.resume_reading"]], "resume_writing() (asyncio.baseprotocol method)": [[145, "asyncio.BaseProtocol.resume_writing"]], "send_signal() (asyncio.subprocesstransport method)": [[145, "asyncio.SubprocessTransport.send_signal"]], "sendto() (asyncio.datagramtransport method)": [[145, "asyncio.DatagramTransport.sendto"]], "set_protocol() (asyncio.basetransport method)": [[145, "asyncio.BaseTransport.set_protocol"]], "set_write_buffer_limits() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.set_write_buffer_limits"]], "terminate() (asyncio.subprocesstransport method)": [[145, "asyncio.SubprocessTransport.terminate"]], "write() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.write"]], "write_eof() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.write_eof"]], "writelines() (asyncio.writetransport method)": [[145, "asyncio.WriteTransport.writelines"]], "lifoqueue (class in asyncio)": [[146, "asyncio.LifoQueue"]], "priorityqueue (class in asyncio)": [[146, "asyncio.PriorityQueue"]], "queue (class in asyncio)": [[146, "asyncio.Queue"]], "queueempty": [[146, "asyncio.QueueEmpty"]], "queuefull": [[146, "asyncio.QueueFull"]], "empty() (asyncio.queue method)": [[146, "asyncio.Queue.empty"]], "full() (asyncio.queue method)": [[146, "asyncio.Queue.full"]], "get() (asyncio.queue method)": [[146, "asyncio.Queue.get"]], "get_nowait() (asyncio.queue method)": [[146, "asyncio.Queue.get_nowait"]], "join() (asyncio.queue method)": [[146, "asyncio.Queue.join"]], "maxsize (asyncio.queue attribute)": [[146, "asyncio.Queue.maxsize"]], "put() (asyncio.queue method)": [[146, "asyncio.Queue.put"]], "put_nowait() (asyncio.queue method)": [[146, "asyncio.Queue.put_nowait"]], "qsize() (asyncio.queue method)": [[146, "asyncio.Queue.qsize"]], "task_done() (asyncio.queue method)": [[146, "asyncio.Queue.task_done"]], "runner (class in asyncio)": [[147, "asyncio.Runner"]], "close() (asyncio.runner method)": [[147, "asyncio.Runner.close"]], "get_loop() (asyncio.runner method)": [[147, "asyncio.Runner.get_loop"]], "run() (asyncio.runner method)": [[147, "asyncio.Runner.run"]], "run() (in module asyncio)": [[147, "asyncio.run"]], "streamreader (class in asyncio)": [[148, "asyncio.StreamReader"]], "streamwriter (class in asyncio)": [[148, "asyncio.StreamWriter"]], "at_eof() (asyncio.streamreader method)": [[148, "asyncio.StreamReader.at_eof"]], "can_write_eof() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.can_write_eof"]], "close() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.close"]], "drain() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.drain"]], "feed_eof() (asyncio.streamreader method)": [[148, "asyncio.StreamReader.feed_eof"]], "get_extra_info() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.get_extra_info"]], "is_closing() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.is_closing"]], "open_connection() (in module asyncio)": [[148, "asyncio.open_connection"]], "open_unix_connection() (in module asyncio)": [[148, "asyncio.open_unix_connection"]], "read() (asyncio.streamreader method)": [[148, "asyncio.StreamReader.read"]], "readexactly() (asyncio.streamreader method)": [[148, "asyncio.StreamReader.readexactly"]], "readline() (asyncio.streamreader method)": [[148, "asyncio.StreamReader.readline"]], "readuntil() (asyncio.streamreader method)": [[148, "asyncio.StreamReader.readuntil"]], "start_server() (in module asyncio)": [[148, "asyncio.start_server"]], "start_tls() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.start_tls"]], "start_unix_server() (in module asyncio)": [[148, "asyncio.start_unix_server"]], "transport (asyncio.streamwriter attribute)": [[148, "asyncio.StreamWriter.transport"]], "wait_closed() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.wait_closed"]], "write() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.write"]], "write_eof() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.write_eof"]], "writelines() (asyncio.streamwriter method)": [[148, "asyncio.StreamWriter.writelines"]], "asyncio.subprocess.devnull (built-in variable)": [[149, "asyncio.subprocess.DEVNULL"]], "asyncio.subprocess.pipe (built-in variable)": [[149, "asyncio.subprocess.PIPE"]], "asyncio.subprocess.process (built-in class)": [[149, "asyncio.subprocess.Process"]], "asyncio.subprocess.stdout (built-in variable)": [[149, "asyncio.subprocess.STDOUT"]], "communicate() (asyncio.subprocess.process method)": [[149, "asyncio.subprocess.Process.communicate"]], "create_subprocess_exec() (in module asyncio)": [[149, "asyncio.create_subprocess_exec"]], "create_subprocess_shell() (in module asyncio)": [[149, "asyncio.create_subprocess_shell"]], "kill() (asyncio.subprocess.process method)": [[149, "asyncio.subprocess.Process.kill"]], "pid (asyncio.subprocess.process attribute)": [[149, "asyncio.subprocess.Process.pid"]], "returncode (asyncio.subprocess.process attribute)": [[149, "asyncio.subprocess.Process.returncode"]], "send_signal() (asyncio.subprocess.process method)": [[149, "asyncio.subprocess.Process.send_signal"]], "stderr (asyncio.subprocess.process attribute)": [[149, "asyncio.subprocess.Process.stderr"]], "stdin (asyncio.subprocess.process attribute)": [[149, "asyncio.subprocess.Process.stdin"]], "stdout (asyncio.subprocess.process attribute)": [[149, "asyncio.subprocess.Process.stdout"]], "terminate() (asyncio.subprocess.process method)": [[149, "asyncio.subprocess.Process.terminate"]], "wait() (asyncio.subprocess.process method)": [[149, "asyncio.subprocess.Process.wait"]], "barrier (class in asyncio)": [[150, "asyncio.Barrier"]], "boundedsemaphore (class in asyncio)": [[150, "asyncio.BoundedSemaphore"]], "brokenbarriererror": [[150, "asyncio.BrokenBarrierError"], [380, "threading.BrokenBarrierError"]], "condition (class in asyncio)": [[150, "asyncio.Condition"]], "event (class in asyncio)": [[150, "asyncio.Event"]], "lock (class in asyncio)": [[150, "asyncio.Lock"]], "semaphore (class in asyncio)": [[150, "asyncio.Semaphore"]], "abort() (asyncio.barrier method)": [[150, "asyncio.Barrier.abort"]], "acquire() (asyncio.condition method)": [[150, "asyncio.Condition.acquire"]], "acquire() (asyncio.lock method)": [[150, "asyncio.Lock.acquire"]], "acquire() (asyncio.semaphore method)": [[150, "asyncio.Semaphore.acquire"]], "broken (asyncio.barrier attribute)": [[150, "asyncio.Barrier.broken"]], "clear() (asyncio.event method)": [[150, "asyncio.Event.clear"]], "is_set() (asyncio.event method)": [[150, "asyncio.Event.is_set"]], "locked() (asyncio.condition method)": [[150, "asyncio.Condition.locked"]], "locked() (asyncio.lock method)": [[150, "asyncio.Lock.locked"]], "locked() (asyncio.semaphore method)": [[150, "asyncio.Semaphore.locked"]], "n_waiting (asyncio.barrier attribute)": [[150, "asyncio.Barrier.n_waiting"]], "notify() (asyncio.condition method)": [[150, "asyncio.Condition.notify"]], "notify_all() (asyncio.condition method)": [[150, "asyncio.Condition.notify_all"]], "parties (asyncio.barrier attribute)": [[150, "asyncio.Barrier.parties"]], "release() (asyncio.condition method)": [[150, "asyncio.Condition.release"]], "release() (asyncio.lock method)": [[150, "asyncio.Lock.release"]], "release() (asyncio.semaphore method)": [[150, "asyncio.Semaphore.release"]], "reset() (asyncio.barrier method)": [[150, "asyncio.Barrier.reset"]], "set() (asyncio.event method)": [[150, "asyncio.Event.set"]], "wait() (asyncio.barrier method)": [[150, "asyncio.Barrier.wait"]], "wait() (asyncio.condition method)": [[150, "asyncio.Condition.wait"]], "wait() (asyncio.event method)": [[150, "asyncio.Event.wait"]], "wait_for() (asyncio.condition method)": [[150, "asyncio.Condition.wait_for"]], "all_completed (in module asyncio)": [[151, "asyncio.ALL_COMPLETED"]], "first_completed (in module asyncio)": [[151, "asyncio.FIRST_COMPLETED"]], "first_exception (in module asyncio)": [[151, "asyncio.FIRST_EXCEPTION"]], "task (class in asyncio)": [[151, "asyncio.Task"]], "taskgroup (class in asyncio)": [[151, "asyncio.TaskGroup"]], "timeout (class in asyncio)": [[151, "asyncio.Timeout"]], "add_done_callback() (asyncio.task method)": [[151, "asyncio.Task.add_done_callback"]], "all_tasks() (in module asyncio)": [[151, "asyncio.all_tasks"]], "as_completed() (in module asyncio)": [[151, "asyncio.as_completed"]], "cancel() (asyncio.task method)": [[151, "asyncio.Task.cancel"]], "cancelled() (asyncio.task method)": [[151, "asyncio.Task.cancelled"]], "cancelling() (asyncio.task method)": [[151, "asyncio.Task.cancelling"]], "create_task() (asyncio.taskgroup method)": [[151, "asyncio.TaskGroup.create_task"]], "create_task() (in module asyncio)": [[151, "asyncio.create_task"]], "current_task() (in module asyncio)": [[151, "asyncio.current_task"]], "done() (asyncio.task method)": [[151, "asyncio.Task.done"]], "exception() (asyncio.task method)": [[151, "asyncio.Task.exception"]], "expired() (asyncio.timeout method)": [[151, "asyncio.Timeout.expired"]], "gather() (in module asyncio)": [[151, "asyncio.gather"]], "get_coro() (asyncio.task method)": [[151, "asyncio.Task.get_coro"]], "get_name() (asyncio.task method)": [[151, "asyncio.Task.get_name"]], "get_stack() (asyncio.task method)": [[151, "asyncio.Task.get_stack"]], "iscoroutine() (in module asyncio)": [[151, "asyncio.iscoroutine"]], "print_stack() (asyncio.task method)": [[151, "asyncio.Task.print_stack"]], "remove_done_callback() (asyncio.task method)": [[151, "asyncio.Task.remove_done_callback"]], "reschedule() (asyncio.timeout method)": [[151, "asyncio.Timeout.reschedule"]], "result() (asyncio.task method)": [[151, "asyncio.Task.result"]], "run_coroutine_threadsafe() (in module asyncio)": [[151, "asyncio.run_coroutine_threadsafe"]], "set_name() (asyncio.task method)": [[151, "asyncio.Task.set_name"]], "shield() (in module asyncio)": [[151, "asyncio.shield"]], "sleep() (in module asyncio)": [[151, "asyncio.sleep"]], "timeout() (in module asyncio)": [[151, "asyncio.timeout"]], "timeout_at() (in module asyncio)": [[151, "asyncio.timeout_at"]], "to_thread() (in module asyncio)": [[151, "asyncio.to_thread"]], "uncancel() (asyncio.task method)": [[151, "asyncio.Task.uncancel"]], "wait() (in module asyncio)": [[151, "asyncio.wait"]], "wait_for() (in module asyncio)": [[151, "asyncio.wait_for"]], "when() (asyncio.timeout method)": [[151, "asyncio.Timeout.when"]], "pep 594#asyncore": [[152, "index-0"]], "accept() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.accept"]], "asyncore": [[152, "module-asyncore"]], "bind() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.bind"]], "close() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.close"]], "connect() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.connect"]], "create_socket() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.create_socket"]], "dispatcher (class in asyncore)": [[152, "asyncore.dispatcher"]], "dispatcher_with_send (class in asyncore)": [[152, "asyncore.dispatcher_with_send"]], "file_dispatcher (class in asyncore)": [[152, "asyncore.file_dispatcher"]], "file_wrapper (class in asyncore)": [[152, "asyncore.file_wrapper"]], "handle_accept() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_accept"]], "handle_accepted() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_accepted"]], "handle_close() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_close"]], "handle_connect() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_connect"]], "handle_error() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_error"]], "handle_expt() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_expt"]], "handle_read() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_read"]], "handle_write() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.handle_write"]], "listen() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.listen"]], "loop() (in module asyncore)": [[152, "asyncore.loop"]], "readable() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.readable"]], "recv() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.recv"]], "send() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.send"]], "writable() (asyncore.dispatcher method)": [[152, "asyncore.dispatcher.writable"]], "atexit": [[153, "module-atexit"]], "register() (in module atexit)": [[153, "atexit.register"]], "unregister() (in module atexit)": [[153, "atexit.unregister"]], "adpcm, intel/dvi": [[154, "index-1"]], "intel/dvi adpcm": [[154, "index-1"]], "pep 594#audioop": [[154, "index-0"]], "add() (in module audioop)": [[154, "audioop.add"]], "adpcm2lin() (in module audioop)": [[154, "audioop.adpcm2lin"]], "alaw2lin() (in module audioop)": [[154, "audioop.alaw2lin"]], "audioop": [[154, "module-audioop"]], "avg() (in module audioop)": [[154, "audioop.avg"]], "avgpp() (in module audioop)": [[154, "audioop.avgpp"]], "bias() (in module audioop)": [[154, "audioop.bias"]], "byteswap() (in module audioop)": [[154, "audioop.byteswap"]], "cross() (in module audioop)": [[154, "audioop.cross"]], "findfactor() (in module audioop)": [[154, "audioop.findfactor"]], "findfit() (in module audioop)": [[154, "audioop.findfit"]], "findmax() (in module audioop)": [[154, "audioop.findmax"]], "getsample() (in module audioop)": [[154, "audioop.getsample"]], "lin2adpcm() (in module audioop)": [[154, "audioop.lin2adpcm"]], "lin2alaw() (in module audioop)": [[154, "audioop.lin2alaw"]], "lin2lin() (in module audioop)": [[154, "audioop.lin2lin"]], "lin2ulaw() (in module audioop)": [[154, "audioop.lin2ulaw"]], "max() (in module audioop)": [[154, "audioop.max"]], "maxpp() (in module audioop)": [[154, "audioop.maxpp"]], "minmax() (in module audioop)": [[154, "audioop.minmax"]], "mul() (in module audioop)": [[154, "audioop.mul"]], "ratecv() (in module audioop)": [[154, "audioop.ratecv"]], "reverse() (in module audioop)": [[154, "audioop.reverse"]], "rms() (in module audioop)": [[154, "audioop.rms"]], "tomono() (in module audioop)": [[154, "audioop.tomono"]], "tostereo() (in module audioop)": [[154, "audioop.tostereo"]], "ulaw2lin() (in module audioop)": [[154, "audioop.ulaw2lin"]], "audit events": [[155, "index-0"]], "mime": [[156, "index-0"], [164, "index-0"], [291, "index-0"], [291, "index-1"], [332, "index-0"]], "rfc 1521": [[156, "index-12"], [332, "index-1"], [332, "index-3"]], "rfc 2045": [[156, "index-10"], [156, "index-4"], [156, "index-5"], [156, "index-9"], [208, "index-3"], [210, "index-4"], [210, "index-5"], [210, "index-6"], [210, "index-9"], [216, "index-4"], [217, "index-10"], [217, "index-9"], [219, "index-6"], [219, "index-7"], [219, "index-8"]], "rfc 4648": [[156, "index-1"], [156, "index-11"], [156, "index-2"], [156, "index-3"], [156, "index-6"], [156, "index-7"], [156, "index-8"], [342, "index-1"]], "a85decode() (in module base64)": [[156, "base64.a85decode"]], "a85encode() (in module base64)": [[156, "base64.a85encode"]], "b16decode() (in module base64)": [[156, "base64.b16decode"]], "b16encode() (in module base64)": [[156, "base64.b16encode"]], "b32decode() (in module base64)": [[156, "base64.b32decode"]], "b32encode() (in module base64)": [[156, "base64.b32encode"]], "b32hexdecode() (in module base64)": [[156, "base64.b32hexdecode"]], "b32hexencode() (in module base64)": [[156, "base64.b32hexencode"]], "b64decode() (in module base64)": [[156, "base64.b64decode"]], "b64encode() (in module base64)": [[156, "base64.b64encode"]], "b85decode() (in module base64)": [[156, "base64.b85decode"]], "b85encode() (in module base64)": [[156, "base64.b85encode"]], "base64": [[156, "index-0"], [156, "module-base64"], [159, "index-0"]], "base64 encoding": [[156, "index-0"]], "decode() (in module base64)": [[156, "base64.decode"]], "decodebytes() (in module base64)": [[156, "base64.decodebytes"]], "encode() (in module base64)": [[156, "base64.encode"]], "encodebytes() (in module base64)": [[156, "base64.encodebytes"]], "encoding": [[156, "index-0"], [332, "index-0"]], "standard_b64decode() (in module base64)": [[156, "base64.standard_b64decode"]], "standard_b64encode() (in module base64)": [[156, "base64.standard_b64encode"]], "urlsafe_b64decode() (in module base64)": [[156, "base64.urlsafe_b64decode"]], "urlsafe_b64encode() (in module base64)": [[156, "base64.urlsafe_b64encode"]], "bdb (class in bdb)": [[157, "bdb.Bdb"]], "bdbquit": [[157, "bdb.BdbQuit"]], "breakpoint (class in bdb)": [[157, "bdb.Breakpoint"]], "bdb": [[157, "module-bdb"], [312, "index-1"]], "bpbynumber (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.bpbynumber"]], "bpformat() (bdb.breakpoint method)": [[157, "bdb.Breakpoint.bpformat"]], "bplist (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.bplist"]], "bpprint() (bdb.breakpoint method)": [[157, "bdb.Breakpoint.bpprint"]], "break_anywhere() (bdb.bdb method)": [[157, "bdb.Bdb.break_anywhere"]], "break_here() (bdb.bdb method)": [[157, "bdb.Bdb.break_here"]], "canonic() (bdb.bdb method)": [[157, "bdb.Bdb.canonic"]], "checkfuncname() (in module bdb)": [[157, "bdb.checkfuncname"]], "clear_all_breaks() (bdb.bdb method)": [[157, "bdb.Bdb.clear_all_breaks"]], "clear_all_file_breaks() (bdb.bdb method)": [[157, "bdb.Bdb.clear_all_file_breaks"]], "clear_bpbynumber() (bdb.bdb method)": [[157, "bdb.Bdb.clear_bpbynumber"]], "clear_break() (bdb.bdb method)": [[157, "bdb.Bdb.clear_break"]], "cond (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.cond"]], "deleteme() (bdb.breakpoint method)": [[157, "bdb.Breakpoint.deleteMe"]], "disable() (bdb.breakpoint method)": [[157, "bdb.Breakpoint.disable"]], "dispatch_call() (bdb.bdb method)": [[157, "bdb.Bdb.dispatch_call"]], "dispatch_exception() (bdb.bdb method)": [[157, "bdb.Bdb.dispatch_exception"]], "dispatch_line() (bdb.bdb method)": [[157, "bdb.Bdb.dispatch_line"]], "dispatch_return() (bdb.bdb method)": [[157, "bdb.Bdb.dispatch_return"]], "do_clear() (bdb.bdb method)": [[157, "bdb.Bdb.do_clear"]], "effective() (in module bdb)": [[157, "bdb.effective"]], "enable() (bdb.breakpoint method)": [[157, "bdb.Breakpoint.enable"]], "enabled (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.enabled"]], "file (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.file"]], "format_stack_entry() (bdb.bdb method)": [[157, "bdb.Bdb.format_stack_entry"]], "funcname (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.funcname"]], "get_all_breaks() (bdb.bdb method)": [[157, "bdb.Bdb.get_all_breaks"]], "get_bpbynumber() (bdb.bdb method)": [[157, "bdb.Bdb.get_bpbynumber"]], "get_break() (bdb.bdb method)": [[157, "bdb.Bdb.get_break"]], "get_breaks() (bdb.bdb method)": [[157, "bdb.Bdb.get_breaks"]], "get_file_breaks() (bdb.bdb method)": [[157, "bdb.Bdb.get_file_breaks"]], "get_stack() (bdb.bdb method)": [[157, "bdb.Bdb.get_stack"]], "hits (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.hits"]], "ignore (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.ignore"]], "is_skipped_line() (bdb.bdb method)": [[157, "bdb.Bdb.is_skipped_line"]], "line (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.line"]], "quitting (bdb.bdb attribute)": [[157, "index-0"]], "reset() (bdb.bdb method)": [[157, "bdb.Bdb.reset"]], "run() (bdb.bdb method)": [[157, "bdb.Bdb.run"]], "runcall() (bdb.bdb method)": [[157, "bdb.Bdb.runcall"]], "runctx() (bdb.bdb method)": [[157, "bdb.Bdb.runctx"]], "runeval() (bdb.bdb method)": [[157, "bdb.Bdb.runeval"]], "set_break() (bdb.bdb method)": [[157, "bdb.Bdb.set_break"]], "set_continue() (bdb.bdb method)": [[157, "bdb.Bdb.set_continue"]], "set_next() (bdb.bdb method)": [[157, "bdb.Bdb.set_next"]], "set_quit() (bdb.bdb method)": [[157, "bdb.Bdb.set_quit"]], "set_return() (bdb.bdb method)": [[157, "bdb.Bdb.set_return"]], "set_step() (bdb.bdb method)": [[157, "bdb.Bdb.set_step"]], "set_trace() (bdb.bdb method)": [[157, "bdb.Bdb.set_trace"]], "set_trace() (in module bdb)": [[157, "bdb.set_trace"]], "set_until() (bdb.bdb method)": [[157, "bdb.Bdb.set_until"]], "stop_here() (bdb.bdb method)": [[157, "bdb.Bdb.stop_here"]], "temporary (bdb.breakpoint attribute)": [[157, "bdb.Breakpoint.temporary"]], "trace_dispatch() (bdb.bdb method)": [[157, "bdb.Bdb.trace_dispatch"]], "user_call() (bdb.bdb method)": [[157, "bdb.Bdb.user_call"]], "user_exception() (bdb.bdb method)": [[157, "bdb.Bdb.user_exception"]], "user_line() (bdb.bdb method)": [[157, "bdb.Bdb.user_line"]], "user_return() (bdb.bdb method)": [[157, "bdb.Bdb.user_return"]], "incomplete": [[159, "binascii.Incomplete"]], "rfc 1522": [[159, "index-3"], [332, "index-2"], [332, "index-4"]], "rfc 3548": [[159, "index-1"], [159, "index-2"], [481, "index-18"]], "a2b_base64() (in module binascii)": [[159, "binascii.a2b_base64"]], "a2b_hex() (in module binascii)": [[159, "binascii.a2b_hex"]], "a2b_qp() (in module binascii)": [[159, "binascii.a2b_qp"]], "a2b_uu() (in module binascii)": [[159, "binascii.a2b_uu"]], "b2a_base64() (in module binascii)": [[159, "binascii.b2a_base64"]], "b2a_hex() (in module binascii)": [[159, "binascii.b2a_hex"]], "b2a_qp() (in module binascii)": [[159, "binascii.b2a_qp"]], "b2a_uu() (in module binascii)": [[159, "binascii.b2a_uu"]], "binascii": [[159, "module-binascii"]], "crc32() (in module binascii)": [[159, "binascii.crc32"]], "crc_hqx() (in module binascii)": [[159, "binascii.crc_hqx"]], "hexlify() (in module binascii)": [[159, "binascii.hexlify"]], "unhexlify() (in module binascii)": [[159, "binascii.unhexlify"]], "uu": [[159, "index-0"], [412, "module-uu"]], "bisect": [[160, "module-bisect"]], "bisect() (in module bisect)": [[160, "bisect.bisect"]], "bisect_left() (in module bisect)": [[160, "bisect.bisect_left"]], "bisect_right() (in module bisect)": [[160, "bisect.bisect_right"]], "insort() (in module bisect)": [[160, "bisect.insort"]], "insort_left() (in module bisect)": [[160, "bisect.insort_left"]], "insort_right() (in module bisect)": [[160, "bisect.insort_right"]], "bz2compressor (class in bz2)": [[162, "bz2.BZ2Compressor"]], "bz2decompressor (class in bz2)": [[162, "bz2.BZ2Decompressor"]], "bz2file (class in bz2)": [[162, "bz2.BZ2File"]], "bz2": [[162, "module-bz2"]], "compress() (bz2.bz2compressor method)": [[162, "bz2.BZ2Compressor.compress"]], "compress() (in module bz2)": [[162, "bz2.compress"]], "decompress() (bz2.bz2decompressor method)": [[162, "bz2.BZ2Decompressor.decompress"]], "decompress() (in module bz2)": [[162, "bz2.decompress"]], "eof (bz2.bz2decompressor attribute)": [[162, "bz2.BZ2Decompressor.eof"]], "fileno() (bz2.bz2file method)": [[162, "bz2.BZ2File.fileno"]], "flush() (bz2.bz2compressor method)": [[162, "bz2.BZ2Compressor.flush"]], "needs_input (bz2.bz2decompressor attribute)": [[162, "bz2.BZ2Decompressor.needs_input"]], "open() (in module bz2)": [[162, "bz2.open"]], "peek() (bz2.bz2file method)": [[162, "bz2.BZ2File.peek"]], "read1() (bz2.bz2file method)": [[162, "bz2.BZ2File.read1"]], "readable() (bz2.bz2file method)": [[162, "bz2.BZ2File.readable"]], "readinto() (bz2.bz2file method)": [[162, "bz2.BZ2File.readinto"]], "seekable() (bz2.bz2file method)": [[162, "bz2.BZ2File.seekable"]], "unused_data (bz2.bz2decompressor attribute)": [[162, "bz2.BZ2Decompressor.unused_data"]], "writable() (bz2.bz2file method)": [[162, "bz2.BZ2File.writable"]], "--css": [[163, "cmdoption-calendar-css"]], "--encoding": [[163, "cmdoption-calendar-encoding"]], "--lines": [[163, "cmdoption-calendar-lines"]], "--locale": [[163, "cmdoption-calendar-locale"]], "--months": [[163, "cmdoption-calendar-months"]], "--spacing": [[163, "cmdoption-calendar-spacing"]], "--type": [[163, "cmdoption-calendar-type"]], "--width": [[163, "cmdoption-calendar-width"]], "-l": [[163, "cmdoption-calendar-locale"], [163, "cmdoption-calendar-lines"], [176, "cmdoption-compileall-l"], [315, "cmdoption-pickletools-l"], [373, "cmdoption-tarfile-l"], [395, "cmdoption-trace-l"], [437, "cmdoption-zipfile-l"]], "-c": [[163, "cmdoption-calendar-css"], [204, "cmdoption-dis-C"], [373, "cmdoption-tarfile-c"], [395, "cmdoption-trace-C"], [395, "cmdoption-trace-c"], [403, "cmdoption-unittest-c"], [436, "cmdoption-zipapp-c"], [437, "cmdoption-zipfile-c"], [470, "cmdoption-c"]], "-e": [[163, "cmdoption-calendar-encoding"], [176, "cmdoption-compileall-e"], [373, "cmdoption-tarfile-e"], [393, "cmdoption-tokenize-e"], [437, "cmdoption-zipfile-e"], [470, "cmdoption-E"]], "-s": [[163, "cmdoption-calendar-spacing"], [176, "cmdoption-compileall-s"], [382, "cmdoption-timeit-s"], [395, "cmdoption-trace-s"], [403, "cmdoption-unittest-discover-s"], [470, "cmdoption-S"], [470, "cmdoption-s"]], "-t": [[163, "cmdoption-calendar-type"], [373, "cmdoption-tarfile-t"], [395, "cmdoption-trace-T"], [395, "cmdoption-trace-t"], [403, "cmdoption-unittest-discover-t"], [437, "cmdoption-zipfile-t"]], "-w": [[163, "cmdoption-calendar-width"], [470, "cmdoption-W"]], "calendar (class in calendar)": [[163, "calendar.Calendar"]], "friday (in module calendar)": [[163, "calendar.FRIDAY"]], "htmlcalendar (class in calendar)": [[163, "calendar.HTMLCalendar"]], "illegalmontherror": [[163, "calendar.IllegalMonthError"]], "illegalweekdayerror": [[163, "calendar.IllegalWeekdayError"]], "localehtmlcalendar (class in calendar)": [[163, "calendar.LocaleHTMLCalendar"]], "localetextcalendar (class in calendar)": [[163, "calendar.LocaleTextCalendar"]], "monday (in module calendar)": [[163, "calendar.MONDAY"]], "saturday (in module calendar)": [[163, "calendar.SATURDAY"]], "sunday (in module calendar)": [[163, "calendar.SUNDAY"]], "thursday (in module calendar)": [[163, "calendar.THURSDAY"]], "tuesday (in module calendar)": [[163, "calendar.TUESDAY"]], "textcalendar (class in calendar)": [[163, "calendar.TextCalendar"]], "wednesday (in module calendar)": [[163, "calendar.WEDNESDAY"]], "calendar": [[163, "module-calendar"]], "calendar command line option": [[163, "cmdoption-calendar-arg-month"], [163, "cmdoption-calendar-arg-year"], [163, "cmdoption-calendar-css"], [163, "cmdoption-calendar-encoding"], [163, "cmdoption-calendar-help"], [163, "cmdoption-calendar-lines"], [163, "cmdoption-calendar-locale"], [163, "cmdoption-calendar-months"], [163, "cmdoption-calendar-spacing"], [163, "cmdoption-calendar-type"], [163, "cmdoption-calendar-width"]], "calendar() (in module calendar)": [[163, "calendar.calendar"]], "cssclass_month (calendar.htmlcalendar attribute)": [[163, "calendar.HTMLCalendar.cssclass_month"]], "cssclass_month_head (calendar.htmlcalendar attribute)": [[163, "calendar.HTMLCalendar.cssclass_month_head"]], "cssclass_noday (calendar.htmlcalendar attribute)": [[163, "calendar.HTMLCalendar.cssclass_noday"]], "cssclass_year (calendar.htmlcalendar attribute)": [[163, "calendar.HTMLCalendar.cssclass_year"]], "cssclass_year_head (calendar.htmlcalendar attribute)": [[163, "calendar.HTMLCalendar.cssclass_year_head"]], "cssclasses (calendar.htmlcalendar attribute)": [[163, "calendar.HTMLCalendar.cssclasses"]], "cssclasses_weekday_head (calendar.htmlcalendar attribute)": [[163, "calendar.HTMLCalendar.cssclasses_weekday_head"]], "day_abbr (in module calendar)": [[163, "calendar.day_abbr"]], "day_name (in module calendar)": [[163, "calendar.day_name"]], "firstweekday() (in module calendar)": [[163, "calendar.firstweekday"]], "formatmonth() (calendar.htmlcalendar method)": [[163, "calendar.HTMLCalendar.formatmonth"]], "formatmonth() (calendar.textcalendar method)": [[163, "calendar.TextCalendar.formatmonth"]], "formatmonthname() (calendar.htmlcalendar method)": [[163, "calendar.HTMLCalendar.formatmonthname"]], "formatyear() (calendar.htmlcalendar method)": [[163, "calendar.HTMLCalendar.formatyear"]], "formatyear() (calendar.textcalendar method)": [[163, "calendar.TextCalendar.formatyear"]], "formatyearpage() (calendar.htmlcalendar method)": [[163, "calendar.HTMLCalendar.formatyearpage"]], "isleap() (in module calendar)": [[163, "calendar.isleap"]], "itermonthdates() (calendar.calendar method)": [[163, "calendar.Calendar.itermonthdates"]], "itermonthdays() (calendar.calendar method)": [[163, "calendar.Calendar.itermonthdays"]], "itermonthdays2() (calendar.calendar method)": [[163, "calendar.Calendar.itermonthdays2"]], "itermonthdays3() (calendar.calendar method)": [[163, "calendar.Calendar.itermonthdays3"]], "itermonthdays4() (calendar.calendar method)": [[163, "calendar.Calendar.itermonthdays4"]], "iterweekdays() (calendar.calendar method)": [[163, "calendar.Calendar.iterweekdays"]], "leapdays() (in module calendar)": [[163, "calendar.leapdays"]], "month": [[163, "cmdoption-calendar-arg-month"]], "month (calendar.illegalmontherror attribute)": [[163, "calendar.IllegalMonthError.month"]], "month() (in module calendar)": [[163, "calendar.month"]], "month_abbr (in module calendar)": [[163, "calendar.month_abbr"]], "month_name (in module calendar)": [[163, "calendar.month_name"]], "monthcalendar() (in module calendar)": [[163, "calendar.monthcalendar"]], "monthdatescalendar() (calendar.calendar method)": [[163, "calendar.Calendar.monthdatescalendar"]], "monthdays2calendar() (calendar.calendar method)": [[163, "calendar.Calendar.monthdays2calendar"]], "monthdayscalendar() (calendar.calendar method)": [[163, "calendar.Calendar.monthdayscalendar"]], "monthrange() (in module calendar)": [[163, "calendar.monthrange"]], "prcal() (in module calendar)": [[163, "calendar.prcal"]], "prmonth() (calendar.textcalendar method)": [[163, "calendar.TextCalendar.prmonth"]], "prmonth() (in module calendar)": [[163, "calendar.prmonth"]], "pryear() (calendar.textcalendar method)": [[163, "calendar.TextCalendar.pryear"]], "setfirstweekday() (in module calendar)": [[163, "calendar.setfirstweekday"]], "timegm() (in module calendar)": [[163, "calendar.timegm"]], "weekday (calendar.illegalweekdayerror attribute)": [[163, "calendar.IllegalWeekdayError.weekday"]], "weekday() (in module calendar)": [[163, "calendar.weekday"]], "weekheader() (in module calendar)": [[163, "calendar.weekheader"]], "year": [[163, "cmdoption-calendar-arg-year"]], "yeardatescalendar() (calendar.calendar method)": [[163, "calendar.Calendar.yeardatescalendar"]], "yeardays2calendar() (calendar.calendar method)": [[163, "calendar.Calendar.yeardays2calendar"]], "yeardayscalendar() (calendar.calendar method)": [[163, "calendar.Calendar.yeardayscalendar"]], "cgi": [[164, "index-0"], [164, "index-2"], [164, "index-5"], [164, "module-cgi"], [165, "index-0"]], "common gateway interface": [[164, "index-0"]], "http": [[164, "index-0"], [255, "index-0"], [255, "module-http"], [256, "index-0"], [259, "index-0"], [410, "index-10"], [410, "index-9"]], "pep 594#cgi": [[164, "index-1"]], "url": [[164, "index-0"], [259, "index-0"], [409, "index-0"], [411, "index-0"]], "www": [[164, "index-0"], [259, "index-0"], [271, "index-0"], [409, "index-0"], [411, "index-0"]], "debugging": [[164, "index-5"], [312, "index-0"], [451, "index-18"]], "getfirst() (cgi.fieldstorage method)": [[164, "cgi.FieldStorage.getfirst"]], "getlist() (cgi.fieldstorage method)": [[164, "cgi.FieldStorage.getlist"]], "headers": [[164, "index-0"], [291, "index-1"]], "parse() (in module cgi)": [[164, "cgi.parse"]], "parse_header() (in module cgi)": [[164, "cgi.parse_header"]], "parse_multipart() (in module cgi)": [[164, "cgi.parse_multipart"]], "print_directory() (in module cgi)": [[164, "cgi.print_directory"]], "print_environ() (in module cgi)": [[164, "cgi.print_environ"]], "print_environ_usage() (in module cgi)": [[164, "cgi.print_environ_usage"]], "print_form() (in module cgi)": [[164, "cgi.print_form"]], "protocol": [[164, "index-0"], [237, "index-0"], [255, "index-0"], [256, "index-0"], [259, "index-0"], [262, "index-0"], [303, "index-0"], [314, "index-5"], [320, "index-0"], [351, "index-0"], [360, "index-17"], [360, "index-53"], [374, "index-0"], [410, "index-10"], [410, "index-9"]], "security": [[164, "index-2"], [259, "index-3"]], "server": [[164, "index-0"], [259, "index-0"]], "test() (in module cgi)": [[164, "cgi.test"]], "pep 594#cgitb": [[165, "index-1"]], "cgitb": [[165, "module-cgitb"]], "enable() (in module cgitb)": [[165, "cgitb.enable"]], "excepthook() (in module sys)": [[165, "index-2"], [368, "sys.excepthook"]], "exceptions": [[165, "index-0"]], "handler() (in module cgitb)": [[165, "cgitb.handler"]], "html() (in module cgitb)": [[165, "cgitb.html"]], "in cgi scripts": [[165, "index-0"]], "text() (in module cgitb)": [[165, "cgitb.text"]], "tracebacks": [[165, "index-0"]], "chunk (class in chunk)": [[166, "chunk.Chunk"]], "pep 594#chunk": [[166, "index-1"]], "rmff": [[166, "index-0"]], "real media file format": [[166, "index-0"]], "chunk": [[166, "module-chunk"]], "close() (chunk.chunk method)": [[166, "chunk.Chunk.close"]], "getname() (chunk.chunk method)": [[166, "chunk.Chunk.getname"]], "getsize() (chunk.chunk method)": [[166, "chunk.Chunk.getsize"]], "isatty() (chunk.chunk method)": [[166, "chunk.Chunk.isatty"]], "read() (chunk.chunk method)": [[166, "chunk.Chunk.read"]], "seek() (chunk.chunk method)": [[166, "chunk.Chunk.seek"]], "skip() (chunk.chunk method)": [[166, "chunk.Chunk.skip"]], "tell() (chunk.chunk method)": [[166, "chunk.Chunk.tell"]], "pep 485": [[167, "index-0"], [290, "index-0"], [492, "index-19"], [492, "index-20"]], "acos() (in module cmath)": [[167, "cmath.acos"]], "acosh() (in module cmath)": [[167, "cmath.acosh"]], "asin() (in module cmath)": [[167, "cmath.asin"]], "asinh() (in module cmath)": [[167, "cmath.asinh"]], "atan() (in module cmath)": [[167, "cmath.atan"]], "atanh() (in module cmath)": [[167, "cmath.atanh"]], "cmath": [[167, "module-cmath"]], "cos() (in module cmath)": [[167, "cmath.cos"]], "cosh() (in module cmath)": [[167, "cmath.cosh"]], "e (in module cmath)": [[167, "cmath.e"]], "exp() (in module cmath)": [[167, "cmath.exp"]], "inf (in module cmath)": [[167, "cmath.inf"]], "infj (in module cmath)": [[167, "cmath.infj"]], "isclose() (in module cmath)": [[167, "cmath.isclose"]], "isfinite() (in module cmath)": [[167, "cmath.isfinite"]], "isinf() (in module cmath)": [[167, "cmath.isinf"]], "isnan() (in module cmath)": [[167, "cmath.isnan"]], "log() (in module cmath)": [[167, "cmath.log"]], "log10() (in module cmath)": [[167, "cmath.log10"]], "math": [[167, "index-1"], [290, "module-math"], [360, "index-15"]], "nan (in module cmath)": [[167, "cmath.nan"]], "nanj (in module cmath)": [[167, "cmath.nanj"]], "phase() (in module cmath)": [[167, "cmath.phase"]], "pi (in module cmath)": [[167, "cmath.pi"]], "polar() (in module cmath)": [[167, "cmath.polar"]], "rect() (in module cmath)": [[167, "cmath.rect"]], "sin() (in module cmath)": [[167, "cmath.sin"]], "sinh() (in module cmath)": [[167, "cmath.sinh"]], "sqrt() (in module cmath)": [[167, "cmath.sqrt"]], "tan() (in module cmath)": [[167, "cmath.tan"]], "tanh() (in module cmath)": [[167, "cmath.tanh"]], "tau (in module cmath)": [[167, "cmath.tau"]], "! (exclamation)": [[168, "index-0"], [191, "index-0"], [234, "index-2"], [245, "index-1"], [361, "index-2"], [363, "index-1"], [450, "index-25"]], "cmd (class in cmd)": [[168, "cmd.Cmd"]], "cmd": [[168, "module-cmd"], [312, "index-1"]], "cmdloop() (cmd.cmd method)": [[168, "cmd.Cmd.cmdloop"]], "cmdqueue (cmd.cmd attribute)": [[168, "cmd.Cmd.cmdqueue"]], "columnize() (cmd.cmd method)": [[168, "cmd.Cmd.columnize"]], "completedefault() (cmd.cmd method)": [[168, "cmd.Cmd.completedefault"]], "default() (cmd.cmd method)": [[168, "cmd.Cmd.default"]], "do_help() (cmd.cmd method)": [[168, "cmd.Cmd.do_help"]], "doc_header (cmd.cmd attribute)": [[168, "cmd.Cmd.doc_header"]], "emptyline() (cmd.cmd method)": [[168, "cmd.Cmd.emptyline"]], "identchars (cmd.cmd attribute)": [[168, "cmd.Cmd.identchars"]], "in a command interpreter": [[168, "index-0"]], "intro (cmd.cmd attribute)": [[168, "cmd.Cmd.intro"]], "lastcmd (cmd.cmd attribute)": [[168, "cmd.Cmd.lastcmd"]], "misc_header (cmd.cmd attribute)": [[168, "cmd.Cmd.misc_header"]], "onecmd() (cmd.cmd method)": [[168, "cmd.Cmd.onecmd"]], "postcmd() (cmd.cmd method)": [[168, "cmd.Cmd.postcmd"]], "postloop() (cmd.cmd method)": [[168, "cmd.Cmd.postloop"]], "precmd() (cmd.cmd method)": [[168, "cmd.Cmd.precmd"]], "preloop() (cmd.cmd method)": [[168, "cmd.Cmd.preloop"]], "prompt (cmd.cmd attribute)": [[168, "cmd.Cmd.prompt"]], "ruler (cmd.cmd attribute)": [[168, "cmd.Cmd.ruler"]], "undoc_header (cmd.cmd attribute)": [[168, "cmd.Cmd.undoc_header"]], "use_rawinput (cmd.cmd attribute)": [[168, "cmd.Cmd.use_rawinput"]], "interactiveconsole (class in code)": [[170, "code.InteractiveConsole"]], "interactiveinterpreter (class in code)": [[170, "code.InteractiveInterpreter"]], "compile_command() (in module code)": [[170, "code.compile_command"]], "interact() (code.interactiveconsole method)": [[170, "code.InteractiveConsole.interact"]], "interact() (in module code)": [[170, "code.interact"]], "push() (code.interactiveconsole method)": [[170, "code.InteractiveConsole.push"]], "raw_input() (code.interactiveconsole method)": [[170, "code.InteractiveConsole.raw_input"]], "resetbuffer() (code.interactiveconsole method)": [[170, "code.InteractiveConsole.resetbuffer"]], "runcode() (code.interactiveinterpreter method)": [[170, "code.InteractiveInterpreter.runcode"]], "runsource() (code.interactiveinterpreter method)": [[170, "code.InteractiveInterpreter.runsource"]], "showsyntaxerror() (code.interactiveinterpreter method)": [[170, "code.InteractiveInterpreter.showsyntaxerror"]], "showtraceback() (code.interactiveinterpreter method)": [[170, "code.InteractiveInterpreter.showtraceback"]], "write() (code.interactiveinterpreter method)": [[170, "code.InteractiveInterpreter.write"]], "bom (in module codecs)": [[171, "codecs.BOM"]], "bom_be (in module codecs)": [[171, "codecs.BOM_BE"]], "bom_le (in module codecs)": [[171, "codecs.BOM_LE"]], "bom_utf16 (in module codecs)": [[171, "codecs.BOM_UTF16"]], "bom_utf16_be (in module codecs)": [[171, "codecs.BOM_UTF16_BE"]], "bom_utf16_le (in module codecs)": [[171, "codecs.BOM_UTF16_LE"]], "bom_utf32 (in module codecs)": [[171, "codecs.BOM_UTF32"]], "bom_utf32_be (in module codecs)": [[171, "codecs.BOM_UTF32_BE"]], "bom_utf32_le (in module codecs)": [[171, "codecs.BOM_UTF32_LE"]], "bom_utf8 (in module codecs)": [[171, "codecs.BOM_UTF8"]], "codec (class in codecs)": [[171, "codecs.Codec"]], "codecinfo (class in codecs)": [[171, "codecs.CodecInfo"]], "codecs": [[171, "index-0"], [171, "module-codecs"]], "encodedfile() (in module codecs)": [[171, "codecs.EncodedFile"]], "incrementaldecoder (class in codecs)": [[171, "codecs.IncrementalDecoder"]], "incrementalencoder (class in codecs)": [[171, "codecs.IncrementalEncoder"]], "rfc 3490": [[171, "index-13"], [171, "index-14"], [171, "index-6"], [171, "index-8"]], "rfc 3490#section-3.1": [[171, "index-12"]], "rfc 3492": [[171, "index-7"], [171, "index-9"]], "rfc 5891": [[171, "index-10"]], "rfc 5895": [[171, "index-11"]], "streamreader (class in codecs)": [[171, "codecs.StreamReader"]], "streamreaderwriter (class in codecs)": [[171, "codecs.StreamReaderWriter"]], "streamrecoder (class in codecs)": [[171, "codecs.StreamRecoder"]], "streamwriter (class in codecs)": [[171, "codecs.StreamWriter"]], "toascii() (in module encodings.idna)": [[171, "encodings.idna.ToASCII"]], "tounicode() (in module encodings.idna)": [[171, "encodings.idna.ToUnicode"]], "unicode": [[171, "index-0"], [402, "index-0"], [443, "index-19"]], "\\ (backslash)": [[171, "index-1"], [308, "index-48"], [334, "index-12"], [334, "index-26"], [334, "index-9"], [450, "index-23"]], "\\n": [[171, "index-3"], [334, "index-37"], [334, "index-37"], [450, "index-23"], [450, "index-23"]], "\\u": [[171, "index-1"], [171, "index-1"], [334, "index-37"], [334, "index-37"], [450, "index-23"], [450, "index-23"]], "\\x": [[171, "index-1"], [334, "index-37"], [450, "index-23"]], "backslashreplace": [[171, "index-1"]], "backslashreplace_errors() (in module codecs)": [[171, "codecs.backslashreplace_errors"]], "decode": [[171, "index-0"]], "decode (codecs.codecinfo attribute)": [[171, "codecs.CodecInfo.decode"]], "decode() (codecs.codec method)": [[171, "codecs.Codec.decode"]], "decode() (codecs.incrementaldecoder method)": [[171, "codecs.IncrementalDecoder.decode"]], "decode() (in module codecs)": [[171, "codecs.decode"]], "encode": [[171, "index-0"]], "encode (codecs.codecinfo attribute)": [[171, "codecs.CodecInfo.encode"]], "encode() (codecs.codec method)": [[171, "codecs.Codec.encode"]], "encode() (codecs.incrementalencoder method)": [[171, "codecs.IncrementalEncoder.encode"]], "encode() (in module codecs)": [[171, "codecs.encode"]], "encodings.idna": [[171, "module-encodings.idna"]], "encodings.mbcs": [[171, "module-encodings.mbcs"]], "encodings.utf_8_sig": [[171, "module-encodings.utf_8_sig"]], "error handler's name": [[171, "index-1"], [171, "index-3"], [171, "index-4"]], "escape sequence": [[171, "index-1"], [171, "index-3"], [450, "index-23"]], "getdecoder() (in module codecs)": [[171, "codecs.getdecoder"]], "getencoder() (in module codecs)": [[171, "codecs.getencoder"]], "getincrementaldecoder() (in module codecs)": [[171, "codecs.getincrementaldecoder"]], "getincrementalencoder() (in module codecs)": [[171, "codecs.getincrementalencoder"]], "getreader() (in module codecs)": [[171, "codecs.getreader"]], "getstate() (codecs.incrementaldecoder method)": [[171, "codecs.IncrementalDecoder.getstate"]], "getstate() (codecs.incrementalencoder method)": [[171, "codecs.IncrementalEncoder.getstate"]], "getwriter() (in module codecs)": [[171, "codecs.getwriter"]], "ignore": [[171, "index-1"]], "ignore_errors() (in module codecs)": [[171, "codecs.ignore_errors"]], "incrementaldecoder (codecs.codecinfo attribute)": [[171, "codecs.CodecInfo.incrementaldecoder"]], "incrementalencoder (codecs.codecinfo attribute)": [[171, "codecs.CodecInfo.incrementalencoder"]], "iterdecode() (in module codecs)": [[171, "codecs.iterdecode"]], "iterencode() (in module codecs)": [[171, "codecs.iterencode"]], "lookup() (in module codecs)": [[171, "codecs.lookup"]], "lookup_error() (in module codecs)": [[171, "codecs.lookup_error"]], "name (codecs.codecinfo attribute)": [[171, "codecs.CodecInfo.name"]], "nameprep() (in module encodings.idna)": [[171, "encodings.idna.nameprep"]], "namereplace": [[171, "index-3"]], "namereplace_errors() (in module codecs)": [[171, "codecs.namereplace_errors"]], "open() (in module codecs)": [[171, "codecs.open"]], "read() (codecs.streamreader method)": [[171, "codecs.StreamReader.read"]], "readline() (codecs.streamreader method)": [[171, "codecs.StreamReader.readline"]], "readlines() (codecs.streamreader method)": [[171, "codecs.StreamReader.readlines"]], "register() (in module codecs)": [[171, "codecs.register"]], "register_error() (in module codecs)": [[171, "codecs.register_error"]], "replace": [[171, "index-1"]], "replace_errors() (in module codecs)": [[171, "codecs.replace_errors"]], "replacement character": [[171, "index-1"]], "reset() (codecs.incrementaldecoder method)": [[171, "codecs.IncrementalDecoder.reset"]], "reset() (codecs.incrementalencoder method)": [[171, "codecs.IncrementalEncoder.reset"]], "reset() (codecs.streamreader method)": [[171, "codecs.StreamReader.reset"]], "reset() (codecs.streamwriter method)": [[171, "codecs.StreamWriter.reset"]], "setstate() (codecs.incrementaldecoder method)": [[171, "codecs.IncrementalDecoder.setstate"]], "setstate() (codecs.incrementalencoder method)": [[171, "codecs.IncrementalEncoder.setstate"]], "stackable": [[171, "index-0"]], "streamreader (codecs.codecinfo attribute)": [[171, "codecs.CodecInfo.streamreader"]], "streams": [[171, "index-0"]], "streamwriter (codecs.codecinfo attribute)": [[171, "codecs.CodecInfo.streamwriter"]], "strict": [[171, "index-1"]], "strict_errors() (in module codecs)": [[171, "codecs.strict_errors"]], "surrogateescape": [[171, "index-1"]], "surrogatepass": [[171, "index-4"]], "unregister() (in module codecs)": [[171, "codecs.unregister"]], "write() (codecs.streamwriter method)": [[171, "codecs.StreamWriter.write"]], "writelines() (codecs.streamwriter method)": [[171, "codecs.StreamWriter.writelines"]], "xmlcharrefreplace": [[171, "index-3"]], "xmlcharrefreplace_errors() (in module codecs)": [[171, "codecs.xmlcharrefreplace_errors"]], "commandcompiler (class in codeop)": [[172, "codeop.CommandCompiler"]], "compile (class in codeop)": [[172, "codeop.Compile"]], "codeop": [[172, "module-codeop"]], "compile_command() (in module codeop)": [[172, "codeop.compile_command"]], "chainmap (class in collections)": [[173, "collections.ChainMap"]], "counter (class in collections)": [[173, "collections.Counter"]], "ordereddict (class in collections)": [[173, "collections.OrderedDict"]], "pep 468": [[173, "index-2"], [493, "index-24"]], "pep 584": [[173, "index-0"], [173, "index-1"], [173, "index-3"], [308, "index-6"], [308, "index-7"], [400, "index-5"], [417, "index-0"], [417, "index-1"], [496, "index-1"], [496, "index-11"]], "userdict (class in collections)": [[173, "collections.UserDict"]], "userlist (class in collections)": [[173, "collections.UserList"]], "userstring (class in collections)": [[173, "collections.UserString"]], "__missing__() (collections.defaultdict method)": [[173, "collections.defaultdict.__missing__"]], "_asdict() (collections.somenamedtuple method)": [[173, "collections.somenamedtuple._asdict"]], "_field_defaults (collections.somenamedtuple attribute)": [[173, "collections.somenamedtuple._field_defaults"]], "_fields (collections.somenamedtuple attribute)": [[173, "collections.somenamedtuple._fields"]], "_make() (collections.somenamedtuple class method)": [[173, "collections.somenamedtuple._make"]], "_replace() (collections.somenamedtuple method)": [[173, "collections.somenamedtuple._replace"]], "append() (collections.deque method)": [[173, "collections.deque.append"]], "appendleft() (collections.deque method)": [[173, "collections.deque.appendleft"]], "clear() (collections.deque method)": [[173, "collections.deque.clear"]], "collections": [[173, "module-collections"], [443, "index-24"]], "copy() (collections.deque method)": [[173, "collections.deque.copy"]], "count() (collections.deque method)": [[173, "collections.deque.count"]], "data (collections.userdict attribute)": [[173, "collections.UserDict.data"]], "data (collections.userlist attribute)": [[173, "collections.UserList.data"]], "data (collections.userstring attribute)": [[173, "collections.UserString.data"]], "default_factory (collections.defaultdict attribute)": [[173, "collections.defaultdict.default_factory"]], "defaultdict (class in collections)": [[173, "collections.defaultdict"]], "deque (class in collections)": [[173, "collections.deque"]], "elements() (collections.counter method)": [[173, "collections.Counter.elements"]], "extend() (collections.deque method)": [[173, "collections.deque.extend"]], "extendleft() (collections.deque method)": [[173, "collections.deque.extendleft"]], "fromkeys() (collections.counter method)": [[173, "collections.Counter.fromkeys"]], "index() (collections.deque method)": [[173, "collections.deque.index"]], "insert() (collections.deque method)": [[173, "collections.deque.insert"]], "maps (collections.chainmap attribute)": [[173, "collections.ChainMap.maps"]], "maxlen (collections.deque attribute)": [[173, "collections.deque.maxlen"]], "most_common() (collections.counter method)": [[173, "collections.Counter.most_common"]], "move_to_end() (collections.ordereddict method)": [[173, "collections.OrderedDict.move_to_end"]], "namedtuple() (in module collections)": [[173, "collections.namedtuple"]], "new_child() (collections.chainmap method)": [[173, "collections.ChainMap.new_child"]], "parents (collections.chainmap attribute)": [[173, "collections.ChainMap.parents"]], "pop() (collections.deque method)": [[173, "collections.deque.pop"]], "popitem() (collections.ordereddict method)": [[173, "collections.OrderedDict.popitem"]], "popleft() (collections.deque method)": [[173, "collections.deque.popleft"]], "remove() (collections.deque method)": [[173, "collections.deque.remove"]], "reverse() (collections.deque method)": [[173, "collections.deque.reverse"]], "rotate() (collections.deque method)": [[173, "collections.deque.rotate"]], "subtract() (collections.counter method)": [[173, "collections.Counter.subtract"]], "total() (collections.counter method)": [[173, "collections.Counter.total"]], "update() (collections.counter method)": [[173, "collections.Counter.update"]], "asyncgenerator (class in collections.abc)": [[174, "collections.abc.AsyncGenerator"]], "asynciterable (class in collections.abc)": [[174, "collections.abc.AsyncIterable"]], "asynciterator (class in collections.abc)": [[174, "collections.abc.AsyncIterator"]], "awaitable (class in collections.abc)": [[174, "collections.abc.Awaitable"]], "bytestring (class in collections.abc)": [[174, "collections.abc.ByteString"]], "callable (class in collections.abc)": [[174, "collections.abc.Callable"]], "collection (class in collections.abc)": [[174, "collections.abc.Collection"]], "container (class in collections.abc)": [[174, "collections.abc.Container"]], "coroutine (class in collections.abc)": [[174, "collections.abc.Coroutine"]], "generator (class in collections.abc)": [[174, "collections.abc.Generator"]], "hashable (class in collections.abc)": [[174, "collections.abc.Hashable"]], "itemsview (class in collections.abc)": [[174, "collections.abc.ItemsView"]], "iterable (class in collections.abc)": [[174, "collections.abc.Iterable"]], "iterator (class in collections.abc)": [[174, "collections.abc.Iterator"]], "keysview (class in collections.abc)": [[174, "collections.abc.KeysView"]], "mapping (class in collections.abc)": [[174, "collections.abc.Mapping"]], "mappingview (class in collections.abc)": [[174, "collections.abc.MappingView"]], "mutablemapping (class in collections.abc)": [[174, "collections.abc.MutableMapping"]], "mutablesequence (class in collections.abc)": [[174, "collections.abc.MutableSequence"]], "mutableset (class in collections.abc)": [[174, "collections.abc.MutableSet"]], "reversible (class in collections.abc)": [[174, "collections.abc.Reversible"]], "sequence (class in collections.abc)": [[174, "collections.abc.Sequence"]], "set (class in collections.abc)": [[174, "collections.abc.Set"]], "sized (class in collections.abc)": [[174, "collections.abc.Sized"]], "valuesview (class in collections.abc)": [[174, "collections.abc.ValuesView"]], "collections.abc": [[174, "module-collections.abc"]], "colorsys": [[175, "module-colorsys"]], "hls_to_rgb() (in module colorsys)": [[175, "colorsys.hls_to_rgb"]], "hsv_to_rgb() (in module colorsys)": [[175, "colorsys.hsv_to_rgb"]], "rgb_to_hls() (in module colorsys)": [[175, "colorsys.rgb_to_hls"]], "rgb_to_hsv() (in module colorsys)": [[175, "colorsys.rgb_to_hsv"]], "rgb_to_yiq() (in module colorsys)": [[175, "colorsys.rgb_to_yiq"]], "yiq_to_rgb() (in module colorsys)": [[175, "colorsys.yiq_to_rgb"]], "--hardlink-dupes": [[176, "cmdoption-compileall-hardlink-dupes"]], "--invalidation-mode": [[176, "cmdoption-compileall-invalidation-mode"]], "-b": [[176, "cmdoption-compileall-b"], [403, "cmdoption-unittest-b"], [470, "cmdoption-B"], [470, "cmdoption-b"]], "-d": [[176, "cmdoption-compileall-d"], [248, "cmdoption-gzip-d"], [470, "cmdoption-d"]], "-f": [[176, "cmdoption-compileall-f"], [395, "cmdoption-trace-f"], [403, "cmdoption-unittest-f"]], "-j": [[176, "cmdoption-compileall-j"], [470, "cmdoption-J"]], "-o": [[176, "cmdoption-compileall-o"], [315, "cmdoption-pickletools-o"], [436, "cmdoption-zipapp-o"], [470, "cmdoption-O"]], "-p": [[176, "cmdoption-compileall-p"], [315, "cmdoption-pickletools-p"], [382, "cmdoption-timeit-p"], [403, "cmdoption-unittest-discover-p"], [436, "cmdoption-zipapp-p"], [470, "cmdoption-P"]], "-q": [[176, "cmdoption-compileall-q"], [326, "cmdoption-python-m-py_compile-q"], [470, "cmdoption-q"]], "-r": [[176, "cmdoption-compileall-r"], [382, "cmdoption-timeit-r"], [395, "cmdoption-trace-R"], [395, "cmdoption-trace-r"], [470, "cmdoption-R"]], "-x": [[176, "cmdoption-compileall-x"], [470, "cmdoption-X"], [470, "cmdoption-x"]], "source_date_epoch": [[176, "index-1"], [326, "index-3"], [326, "index-6"], [326, "index-7"], [494, "index-31"]], "compile_dir() (in module compileall)": [[176, "compileall.compile_dir"]], "compile_file() (in module compileall)": [[176, "compileall.compile_file"]], "compile_path() (in module compileall)": [[176, "compileall.compile_path"]], "compileall": [[176, "module-compileall"]], "compileall command line option": [[176, "cmdoption-compileall-arg-directory"], [176, "cmdoption-compileall-arg-file"], [176, "cmdoption-compileall-b"], [176, "cmdoption-compileall-d"], [176, "cmdoption-compileall-e"], [176, "cmdoption-compileall-f"], [176, "cmdoption-compileall-hardlink-dupes"], [176, "cmdoption-compileall-i"], [176, "cmdoption-compileall-invalidation-mode"], [176, "cmdoption-compileall-j"], [176, "cmdoption-compileall-l"], [176, "cmdoption-compileall-o"], [176, "cmdoption-compileall-p"], [176, "cmdoption-compileall-q"], [176, "cmdoption-compileall-r"], [176, "cmdoption-compileall-s"], [176, "cmdoption-compileall-x"]], "directory": [[176, "cmdoption-compileall-arg-directory"], [308, "index-26"], [308, "index-28"], [308, "index-29"], [308, "index-31"], [308, "index-32"], [347, "index-1"], [349, "index-1"]], "all_completed (in module concurrent.futures)": [[179, "concurrent.futures.ALL_COMPLETED"]], "brokenexecutor": [[179, "concurrent.futures.BrokenExecutor"]], "brokenprocesspool": [[179, "concurrent.futures.process.BrokenProcessPool"]], "brokenthreadpool": [[179, "concurrent.futures.thread.BrokenThreadPool"]], "executor (class in concurrent.futures)": [[179, "concurrent.futures.Executor"]], "first_completed (in module concurrent.futures)": [[179, "concurrent.futures.FIRST_COMPLETED"]], "first_exception (in module concurrent.futures)": [[179, "concurrent.futures.FIRST_EXCEPTION"]], "future (class in concurrent.futures)": [[179, "concurrent.futures.Future"]], "pep 3148": [[179, "index-0"], [489, "index-4"]], "processpoolexecutor (class in concurrent.futures)": [[179, "concurrent.futures.ProcessPoolExecutor"]], "threadpoolexecutor (class in concurrent.futures)": [[179, "concurrent.futures.ThreadPoolExecutor"]], "add_done_callback() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.add_done_callback"]], "as_completed() (in module concurrent.futures)": [[179, "concurrent.futures.as_completed"]], "cancel() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.cancel"]], "cancelled() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.cancelled"]], "concurrent.futures": [[179, "module-concurrent.futures"]], "done() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.done"]], "exception() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.exception"]], "map() (concurrent.futures.executor method)": [[179, "concurrent.futures.Executor.map"]], "result() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.result"]], "running() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.running"]], "set_exception() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.set_exception"]], "set_result() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.set_result"]], "set_running_or_notify_cancel() (concurrent.futures.future method)": [[179, "concurrent.futures.Future.set_running_or_notify_cancel"]], "shutdown() (concurrent.futures.executor method)": [[179, "concurrent.futures.Executor.shutdown"]], "submit() (concurrent.futures.executor method)": [[179, "concurrent.futures.Executor.submit"]], "wait() (in module concurrent.futures)": [[179, "concurrent.futures.wait"]], "$ (dollar)": [[180, "index-2"], [309, "index-9"], [334, "index-2"], [361, "index-13"]], "% (percent)": [[180, "index-1"], [196, "index-0"], [309, "index-9"], [360, "index-13"], [360, "index-34"], [360, "index-44"], [381, "index-11"], [381, "index-9"], [420, "index-0"], [445, "index-68"]], ".ini": [[180, "index-0"]], "boolean_states (configparser.configparser attribute)": [[180, "configparser.ConfigParser.BOOLEAN_STATES"]], "basicinterpolation (class in configparser)": [[180, "configparser.BasicInterpolation"]], "configparser (class in configparser)": [[180, "configparser.ConfigParser"]], "duplicateoptionerror": [[180, "configparser.DuplicateOptionError"]], "duplicatesectionerror": [[180, "configparser.DuplicateSectionError"]], "extendedinterpolation (class in configparser)": [[180, "configparser.ExtendedInterpolation"]], "interpolationdeptherror": [[180, "configparser.InterpolationDepthError"]], "interpolationerror": [[180, "configparser.InterpolationError"]], "interpolationmissingoptionerror": [[180, "configparser.InterpolationMissingOptionError"]], "interpolationsyntaxerror": [[180, "configparser.InterpolationSyntaxError"]], "max_interpolation_depth (in module configparser)": [[180, "configparser.MAX_INTERPOLATION_DEPTH"]], "missingsectionheadererror": [[180, "configparser.MissingSectionHeaderError"]], "nooptionerror": [[180, "configparser.NoOptionError"]], "nosectionerror": [[180, "configparser.NoSectionError"]], "parsingerror": [[180, "configparser.ParsingError"]], "rawconfigparser (class in configparser)": [[180, "configparser.RawConfigParser"]], "sectcre (configparser.configparser attribute)": [[180, "configparser.ConfigParser.SECTCRE"]], "windows ini file": [[180, "index-0"]], "add_section() (configparser.configparser method)": [[180, "configparser.ConfigParser.add_section"]], "add_section() (configparser.rawconfigparser method)": [[180, "configparser.RawConfigParser.add_section"]], "configparser": [[180, "module-configparser"]], "configuration": [[180, "index-0"], [312, "index-2"], [349, "index-4"]], "defaults() (configparser.configparser method)": [[180, "configparser.ConfigParser.defaults"]], "get() (configparser.configparser method)": [[180, "configparser.ConfigParser.get"]], "getboolean() (configparser.configparser method)": [[180, "configparser.ConfigParser.getboolean"]], "getfloat() (configparser.configparser method)": [[180, "configparser.ConfigParser.getfloat"]], "getint() (configparser.configparser method)": [[180, "configparser.ConfigParser.getint"]], "has_option() (configparser.configparser method)": [[180, "configparser.ConfigParser.has_option"]], "has_section() (configparser.configparser method)": [[180, "configparser.ConfigParser.has_section"]], "ini file": [[180, "index-0"]], "interpolation in configuration files": [[180, "index-1"], [180, "index-2"]], "items() (configparser.configparser method)": [[180, "configparser.ConfigParser.items"]], "options() (configparser.configparser method)": [[180, "configparser.ConfigParser.options"]], "optionxform() (configparser.configparser method)": [[180, "configparser.ConfigParser.optionxform"]], "read() (configparser.configparser method)": [[180, "configparser.ConfigParser.read"]], "read_dict() (configparser.configparser method)": [[180, "configparser.ConfigParser.read_dict"]], "read_file() (configparser.configparser method)": [[180, "configparser.ConfigParser.read_file"]], "read_string() (configparser.configparser method)": [[180, "configparser.ConfigParser.read_string"]], "readfp() (configparser.configparser method)": [[180, "configparser.ConfigParser.readfp"]], "remove_option() (configparser.configparser method)": [[180, "configparser.ConfigParser.remove_option"]], "remove_section() (configparser.configparser method)": [[180, "configparser.ConfigParser.remove_section"]], "sections() (configparser.configparser method)": [[180, "configparser.ConfigParser.sections"]], "set() (configparser.configparser method)": [[180, "configparser.ConfigParser.set"]], "set() (configparser.rawconfigparser method)": [[180, "configparser.RawConfigParser.set"]], "write() (configparser.configparser method)": [[180, "configparser.ConfigParser.write"]], "ellipsis (built-in variable)": [[181, "Ellipsis"]], "false (built-in variable)": [[181, "False"]], "none (built-in variable)": [[181, "None"]], "notimplemented (built-in variable)": [[181, "NotImplemented"]], "true (built-in variable)": [[181, "True"]], "__debug__ (built-in variable)": [[181, "debug__"]], "copyright (built-in variable)": [[181, "copyright"]], "credits (built-in variable)": [[181, "credits"]], "ellipsis literal": [[181, "index-0"], [360, "index-65"], [443, "index-8"]], "exit (built-in variable)": [[181, "exit"]], "license (built-in variable)": [[181, "license"]], "quit (built-in variable)": [[181, "quit"]], "abstractasynccontextmanager (class in contextlib)": [[182, "contextlib.AbstractAsyncContextManager"]], "abstractcontextmanager (class in contextlib)": [[182, "contextlib.AbstractContextManager"]], "asynccontextdecorator (class in contextlib)": [[182, "contextlib.AsyncContextDecorator"]], "asyncexitstack (class in contextlib)": [[182, "contextlib.AsyncExitStack"]], "contextdecorator (class in contextlib)": [[182, "contextlib.ContextDecorator"]], "exitstack (class in contextlib)": [[182, "contextlib.ExitStack"]], "aclose() (contextlib.asyncexitstack method)": [[182, "contextlib.AsyncExitStack.aclose"]], "aclosing() (in module contextlib)": [[182, "contextlib.aclosing"]], "asynccontextmanager() (in module contextlib)": [[182, "contextlib.asynccontextmanager"]], "callback() (contextlib.exitstack method)": [[182, "contextlib.ExitStack.callback"]], "chdir() (in module contextlib)": [[182, "contextlib.chdir"]], "close() (contextlib.exitstack method)": [[182, "contextlib.ExitStack.close"]], "closing() (in module contextlib)": [[182, "contextlib.closing"]], "contextlib": [[182, "module-contextlib"]], "contextmanager() (in module contextlib)": [[182, "contextlib.contextmanager"]], "enter_async_context() (contextlib.asyncexitstack method)": [[182, "contextlib.AsyncExitStack.enter_async_context"]], "enter_context() (contextlib.exitstack method)": [[182, "contextlib.ExitStack.enter_context"]], "nullcontext() (in module contextlib)": [[182, "contextlib.nullcontext"]], "pop_all() (contextlib.exitstack method)": [[182, "contextlib.ExitStack.pop_all"]], "push() (contextlib.exitstack method)": [[182, "contextlib.ExitStack.push"]], "push_async_callback() (contextlib.asyncexitstack method)": [[182, "contextlib.AsyncExitStack.push_async_callback"]], "push_async_exit() (contextlib.asyncexitstack method)": [[182, "contextlib.AsyncExitStack.push_async_exit"]], "redirect_stderr() (in module contextlib)": [[182, "contextlib.redirect_stderr"]], "redirect_stdout() (in module contextlib)": [[182, "contextlib.redirect_stdout"]], "suppress() (in module contextlib)": [[182, "contextlib.suppress"]], "context (class in contextvars)": [[183, "contextvars.Context"]], "contextvar (class in contextvars)": [[183, "contextvars.ContextVar"]], "missing (contextvars.token attribute)": [[183, "contextvars.Token.MISSING"]], "token (class in contextvars)": [[183, "contextvars.Token"]], "contextvars": [[183, "module-contextvars"]], "copy() (contextvars.context method)": [[183, "contextvars.Context.copy"]], "copy_context() (in module contextvars)": [[183, "contextvars.copy_context"]], "get() (contextvars.context method)": [[183, "contextvars.Context.get"]], "get() (contextvars.contextvar method)": [[183, "contextvars.ContextVar.get"]], "items() (contextvars.context method)": [[183, "contextvars.Context.items"]], "keys() (contextvars.context method)": [[183, "contextvars.Context.keys"]], "name (contextvars.contextvar attribute)": [[183, "contextvars.ContextVar.name"]], "old_value (contextvars.token attribute)": [[183, "contextvars.Token.old_value"]], "reset() (contextvars.contextvar method)": [[183, "contextvars.ContextVar.reset"]], "run() (contextvars.context method)": [[183, "contextvars.Context.run"]], "set() (contextvars.contextvar method)": [[183, "contextvars.ContextVar.set"]], "values() (contextvars.context method)": [[183, "contextvars.Context.values"]], "var (contextvars.token attribute)": [[183, "contextvars.Token.var"]], "__copy__() (copy protocol)": [[184, "index-1"]], "__deepcopy__() (copy protocol)": [[184, "index-1"]], "copy": [[184, "module-copy"], [185, "index-0"], [261, "index-4"], [314, "index-5"]], "copy() (in module copy)": [[184, "copy.copy"]], "deepcopy() (in module copy)": [[184, "copy.deepcopy"]], "pickle": [[184, "index-0"], [185, "index-0"], [289, "index-0"], [314, "module-pickle"], [345, "index-0"]], "constructor() (in module copyreg)": [[185, "copyreg.constructor"]], "copyreg": [[185, "module-copyreg"]], "pickle() (in module copyreg)": [[185, "copyreg.pickle"]], "des": [[186, "index-0"]], "method_blowfish (in module crypt)": [[186, "crypt.METHOD_BLOWFISH"]], "method_crypt (in module crypt)": [[186, "crypt.METHOD_CRYPT"]], "method_md5 (in module crypt)": [[186, "crypt.METHOD_MD5"]], "method_sha256 (in module crypt)": [[186, "crypt.METHOD_SHA256"]], "method_sha512 (in module crypt)": [[186, "crypt.METHOD_SHA512"]], "pep 594#crypt": [[186, "index-1"]], "cipher": [[186, "index-0"]], "crypt": [[186, "module-crypt"], [325, "index-0"]], "crypt() (in module crypt)": [[186, "crypt.crypt"]], "crypt(3)": [[186, "index-0"], [186, "index-2"], [186, "index-3"]], "methods (in module crypt)": [[186, "crypt.methods"]], "mksalt() (in module crypt)": [[186, "crypt.mksalt"]], "cryptography": [[187, "index-0"]], "dialect (class in csv)": [[188, "csv.Dialect"]], "dictreader (class in csv)": [[188, "csv.DictReader"]], "dictwriter (class in csv)": [[188, "csv.DictWriter"]], "pep 305": [[188, "index-2"], [480, "index-20"]], "quote_all (in module csv)": [[188, "csv.QUOTE_ALL"]], "quote_minimal (in module csv)": [[188, "csv.QUOTE_MINIMAL"]], "quote_none (in module csv)": [[188, "csv.QUOTE_NONE"]], "quote_nonnumeric (in module csv)": [[188, "csv.QUOTE_NONNUMERIC"]], "rfc 4180": [[188, "index-1"]], "sniffer (class in csv)": [[188, "csv.Sniffer"]], "__next__() (csv.csvreader method)": [[188, "csv.csvreader.__next__"]], "csv": [[188, "index-0"], [188, "module-csv"]], "csv.reader function": [[188, "index-3"]], "data": [[188, "index-0"], [363, "index-0"], [443, "index-0"], [443, "index-4"], [445, "index-7"]], "delimiter (csv.dialect attribute)": [[188, "csv.Dialect.delimiter"]], "dialect (csv.csvreader attribute)": [[188, "csv.csvreader.dialect"]], "dialect (csv.csvwriter attribute)": [[188, "csv.csvwriter.dialect"]], "doublequote (csv.dialect attribute)": [[188, "csv.Dialect.doublequote"]], "escapechar (csv.dialect attribute)": [[188, "csv.Dialect.escapechar"]], "excel (class in csv)": [[188, "csv.excel"]], "excel_tab (class in csv)": [[188, "csv.excel_tab"]], "field_size_limit() (in module csv)": [[188, "csv.field_size_limit"]], "fieldnames (csv.dictreader attribute)": [[188, "csv.DictReader.fieldnames"]], "get_dialect() (in module csv)": [[188, "csv.get_dialect"]], "has_header() (csv.sniffer method)": [[188, "csv.Sniffer.has_header"]], "line_num (csv.csvreader attribute)": [[188, "csv.csvreader.line_num"]], "lineterminator (csv.dialect attribute)": [[188, "csv.Dialect.lineterminator"]], "list_dialects() (in module csv)": [[188, "csv.list_dialects"]], "quotechar (csv.dialect attribute)": [[188, "csv.Dialect.quotechar"]], "quoting (csv.dialect attribute)": [[188, "csv.Dialect.quoting"]], "reader() (in module csv)": [[188, "csv.reader"]], "register_dialect() (in module csv)": [[188, "csv.register_dialect"]], "skipinitialspace (csv.dialect attribute)": [[188, "csv.Dialect.skipinitialspace"]], "sniff() (csv.sniffer method)": [[188, "csv.Sniffer.sniff"]], "strict (csv.dialect attribute)": [[188, "csv.Dialect.strict"]], "tabular": [[188, "index-0"]], "unix_dialect (class in csv)": [[188, "csv.unix_dialect"]], "unregister_dialect() (in module csv)": [[188, "csv.unregister_dialect"]], "writeheader() (csv.dictwriter method)": [[188, "csv.DictWriter.writeheader"]], "writer() (in module csv)": [[188, "csv.writer"]], "writerow() (csv.csvwriter method)": [[188, "csv.csvwriter.writerow"]], "writerows() (csv.csvwriter method)": [[188, "csv.csvwriter.writerows"]], "array (class in ctypes)": [[189, "ctypes.Array"]], "bigendianstructure (class in ctypes)": [[189, "ctypes.BigEndianStructure"]], "bigendianunion (class in ctypes)": [[189, "ctypes.BigEndianUnion"]], "cdll (class in ctypes)": [[189, "ctypes.CDLL"]], "cfunctype() (in module ctypes)": [[189, "ctypes.CFUNCTYPE"]], "dllcanunloadnow() (in module ctypes)": [[189, "ctypes.DllCanUnloadNow"]], "dllgetclassobject() (in module ctypes)": [[189, "ctypes.DllGetClassObject"]], "formaterror() (in module ctypes)": [[189, "ctypes.FormatError"]], "getlasterror() (in module ctypes)": [[189, "ctypes.GetLastError"]], "hresult (class in ctypes)": [[189, "ctypes.HRESULT"]], "libraryloader (class in ctypes)": [[189, "ctypes.LibraryLoader"]], "littleendianstructure (class in ctypes)": [[189, "ctypes.LittleEndianStructure"]], "littleendianunion (class in ctypes)": [[189, "ctypes.LittleEndianUnion"]], "loadlibrary() (ctypes.libraryloader method)": [[189, "ctypes.LibraryLoader.LoadLibrary"]], "oledll (class in ctypes)": [[189, "ctypes.OleDLL"]], "pointer() (in module ctypes)": [[189, "ctypes.POINTER"], [189, "ctypes.pointer"]], "pyfunctype() (in module ctypes)": [[189, "ctypes.PYFUNCTYPE"]], "pydll (class in ctypes)": [[189, "ctypes.PyDLL"]], "structure (class in ctypes)": [[189, "ctypes.Structure"]], "union (class in ctypes)": [[189, "ctypes.Union"]], "winfunctype() (in module ctypes)": [[189, "ctypes.WINFUNCTYPE"]], "windll (class in ctypes)": [[189, "ctypes.WinDLL"]], "winerror() (in module ctypes)": [[189, "ctypes.WinError"]], "_cdata (class in ctypes)": [[189, "ctypes._CData"]], "_funcptr (class in ctypes)": [[189, "ctypes._FuncPtr"]], "_pointer (class in ctypes)": [[189, "ctypes._Pointer"]], "_simplecdata (class in ctypes)": [[189, "ctypes._SimpleCData"]], "_anonymous_ (ctypes.structure attribute)": [[189, "ctypes.Structure._anonymous_"]], "_b_base_ (ctypes._cdata attribute)": [[189, "ctypes._CData._b_base_"]], "_b_needsfree_ (ctypes._cdata attribute)": [[189, "ctypes._CData._b_needsfree_"]], "_fields_ (ctypes.structure attribute)": [[189, "ctypes.Structure._fields_"]], "_handle (ctypes.pydll attribute)": [[189, "ctypes.PyDLL._handle"]], "_length_ (ctypes.array attribute)": [[189, "ctypes.Array._length_"]], "_name (ctypes.pydll attribute)": [[189, "ctypes.PyDLL._name"]], "_objects (ctypes._cdata attribute)": [[189, "ctypes._CData._objects"]], "_pack_ (ctypes.structure attribute)": [[189, "ctypes.Structure._pack_"]], "_type_ (ctypes.array attribute)": [[189, "ctypes.Array._type_"]], "_type_ (ctypes._pointer attribute)": [[189, "ctypes._Pointer._type_"]], "addressof() (in module ctypes)": [[189, "ctypes.addressof"]], "alignment() (in module ctypes)": [[189, "ctypes.alignment"]], "argtypes (ctypes._funcptr attribute)": [[189, "ctypes._FuncPtr.argtypes"]], "byref() (in module ctypes)": [[189, "ctypes.byref"]], "c_bool (class in ctypes)": [[189, "ctypes.c_bool"]], "c_byte (class in ctypes)": [[189, "ctypes.c_byte"]], "c_char (class in ctypes)": [[189, "ctypes.c_char"]], "c_char_p (class in ctypes)": [[189, "ctypes.c_char_p"]], "c_double (class in ctypes)": [[189, "ctypes.c_double"]], "c_float (class in ctypes)": [[189, "ctypes.c_float"]], "c_int (class in ctypes)": [[189, "ctypes.c_int"]], "c_int16 (class in ctypes)": [[189, "ctypes.c_int16"]], "c_int32 (class in ctypes)": [[189, "ctypes.c_int32"]], "c_int64 (class in ctypes)": [[189, "ctypes.c_int64"]], "c_int8 (class in ctypes)": [[189, "ctypes.c_int8"]], "c_long (class in ctypes)": [[189, "ctypes.c_long"]], "c_longdouble (class in ctypes)": [[189, "ctypes.c_longdouble"]], "c_longlong (class in ctypes)": [[189, "ctypes.c_longlong"]], "c_short (class in ctypes)": [[189, "ctypes.c_short"]], "c_size_t (class in ctypes)": [[189, "ctypes.c_size_t"]], "c_ssize_t (class in ctypes)": [[189, "ctypes.c_ssize_t"]], "c_ubyte (class in ctypes)": [[189, "ctypes.c_ubyte"]], "c_uint (class in ctypes)": [[189, "ctypes.c_uint"]], "c_uint16 (class in ctypes)": [[189, "ctypes.c_uint16"]], "c_uint32 (class in ctypes)": [[189, "ctypes.c_uint32"]], "c_uint64 (class in ctypes)": [[189, "ctypes.c_uint64"]], "c_uint8 (class in ctypes)": [[189, "ctypes.c_uint8"]], "c_ulong (class in ctypes)": [[189, "ctypes.c_ulong"]], "c_ulonglong (class in ctypes)": [[189, "ctypes.c_ulonglong"]], "c_ushort (class in ctypes)": [[189, "ctypes.c_ushort"]], "c_void_p (class in ctypes)": [[189, "ctypes.c_void_p"]], "c_wchar (class in ctypes)": [[189, "ctypes.c_wchar"]], "c_wchar_p (class in ctypes)": [[189, "ctypes.c_wchar_p"]], "cast() (in module ctypes)": [[189, "ctypes.cast"]], "contents (ctypes._pointer attribute)": [[189, "ctypes._Pointer.contents"]], "create_string_buffer() (in module ctypes)": [[189, "ctypes.create_string_buffer"]], "create_unicode_buffer() (in module ctypes)": [[189, "ctypes.create_unicode_buffer"]], "ctypes": [[189, "module-ctypes"]], "errcheck (ctypes._funcptr attribute)": [[189, "ctypes._FuncPtr.errcheck"]], "find_library() (in module ctypes.util)": [[189, "ctypes.util.find_library"]], "find_msvcrt() (in module ctypes.util)": [[189, "ctypes.util.find_msvcrt"]], "from_address() (ctypes._cdata method)": [[189, "ctypes._CData.from_address"]], "from_buffer() (ctypes._cdata method)": [[189, "ctypes._CData.from_buffer"]], "from_buffer_copy() (ctypes._cdata method)": [[189, "ctypes._CData.from_buffer_copy"]], "from_param() (ctypes._cdata method)": [[189, "ctypes._CData.from_param"]], "get_errno() (in module ctypes)": [[189, "ctypes.get_errno"]], "get_last_error() (in module ctypes)": [[189, "ctypes.get_last_error"]], "in_dll() (ctypes._cdata method)": [[189, "ctypes._CData.in_dll"]], "memmove() (in module ctypes)": [[189, "ctypes.memmove"]], "memset() (in module ctypes)": [[189, "ctypes.memset"]], "py_object (class in ctypes)": [[189, "ctypes.py_object"]], "resize() (in module ctypes)": [[189, "ctypes.resize"]], "restype (ctypes._funcptr attribute)": [[189, "ctypes._FuncPtr.restype"]], "set_errno() (in module ctypes)": [[189, "ctypes.set_errno"]], "set_last_error() (in module ctypes)": [[189, "ctypes.set_last_error"]], "sizeof() (in module ctypes)": [[189, "ctypes.sizeof"]], "string_at() (in module ctypes)": [[189, "ctypes.string_at"]], "value (ctypes._simplecdata attribute)": [[189, "ctypes._SimpleCData.value"]], "wstring_at() (in module ctypes)": [[189, "ctypes.wstring_at"]], "acs_bbss (in module curses)": [[190, "curses.ACS_BBSS"]], "acs_block (in module curses)": [[190, "curses.ACS_BLOCK"]], "acs_board (in module curses)": [[190, "curses.ACS_BOARD"]], "acs_bsbs (in module curses)": [[190, "curses.ACS_BSBS"]], "acs_bssb (in module curses)": [[190, "curses.ACS_BSSB"]], "acs_bsss (in module curses)": [[190, "curses.ACS_BSSS"]], "acs_btee (in module curses)": [[190, "curses.ACS_BTEE"]], "acs_bullet (in module curses)": [[190, "curses.ACS_BULLET"]], "acs_ckboard (in module curses)": [[190, "curses.ACS_CKBOARD"]], "acs_darrow (in module curses)": [[190, "curses.ACS_DARROW"]], "acs_degree (in module curses)": [[190, "curses.ACS_DEGREE"]], "acs_diamond (in module curses)": [[190, "curses.ACS_DIAMOND"]], "acs_gequal (in module curses)": [[190, "curses.ACS_GEQUAL"]], "acs_hline (in module curses)": [[190, "curses.ACS_HLINE"]], "acs_lantern (in module curses)": [[190, "curses.ACS_LANTERN"]], "acs_larrow (in module curses)": [[190, "curses.ACS_LARROW"]], "acs_lequal (in module curses)": [[190, "curses.ACS_LEQUAL"]], "acs_llcorner (in module curses)": [[190, "curses.ACS_LLCORNER"]], "acs_lrcorner (in module curses)": [[190, "curses.ACS_LRCORNER"]], "acs_ltee (in module curses)": [[190, "curses.ACS_LTEE"]], "acs_nequal (in module curses)": [[190, "curses.ACS_NEQUAL"]], "acs_pi (in module curses)": [[190, "curses.ACS_PI"]], "acs_plminus (in module curses)": [[190, "curses.ACS_PLMINUS"]], "acs_plus (in module curses)": [[190, "curses.ACS_PLUS"]], "acs_rarrow (in module curses)": [[190, "curses.ACS_RARROW"]], "acs_rtee (in module curses)": [[190, "curses.ACS_RTEE"]], "acs_s1 (in module curses)": [[190, "curses.ACS_S1"]], "acs_s3 (in module curses)": [[190, "curses.ACS_S3"]], "acs_s7 (in module curses)": [[190, "curses.ACS_S7"]], "acs_s9 (in module curses)": [[190, "curses.ACS_S9"]], "acs_sbbs (in module curses)": [[190, "curses.ACS_SBBS"]], "acs_sbsb (in module curses)": [[190, "curses.ACS_SBSB"]], "acs_sbss (in module curses)": [[190, "curses.ACS_SBSS"]], "acs_ssbb (in module curses)": [[190, "curses.ACS_SSBB"]], "acs_ssbs (in module curses)": [[190, "curses.ACS_SSBS"]], "acs_sssb (in module curses)": [[190, "curses.ACS_SSSB"]], "acs_ssss (in module curses)": [[190, "curses.ACS_SSSS"]], "acs_sterling (in module curses)": [[190, "curses.ACS_STERLING"]], "acs_ttee (in module curses)": [[190, "curses.ACS_TTEE"]], "acs_uarrow (in module curses)": [[190, "curses.ACS_UARROW"]], "acs_ulcorner (in module curses)": [[190, "curses.ACS_ULCORNER"]], "acs_urcorner (in module curses)": [[190, "curses.ACS_URCORNER"]], "acs_vline (in module curses)": [[190, "curses.ACS_VLINE"]], "a_altcharset (in module curses)": [[190, "curses.A_ALTCHARSET"]], "a_attributes (in module curses)": [[190, "curses.A_ATTRIBUTES"]], "a_blink (in module curses)": [[190, "curses.A_BLINK"]], "a_bold (in module curses)": [[190, "curses.A_BOLD"]], "a_chartext (in module curses)": [[190, "curses.A_CHARTEXT"]], "a_color (in module curses)": [[190, "curses.A_COLOR"]], "a_dim (in module curses)": [[190, "curses.A_DIM"]], "a_horizontal (in module curses)": [[190, "curses.A_HORIZONTAL"]], "a_invis (in module curses)": [[190, "curses.A_INVIS"]], "a_italic (in module curses)": [[190, "curses.A_ITALIC"]], "a_left (in module curses)": [[190, "curses.A_LEFT"]], "a_low (in module curses)": [[190, "curses.A_LOW"]], "a_normal (in module curses)": [[190, "curses.A_NORMAL"]], "a_protect (in module curses)": [[190, "curses.A_PROTECT"]], "a_reverse (in module curses)": [[190, "curses.A_REVERSE"]], "a_right (in module curses)": [[190, "curses.A_RIGHT"]], "a_standout (in module curses)": [[190, "curses.A_STANDOUT"]], "a_top (in module curses)": [[190, "curses.A_TOP"]], "a_underline (in module curses)": [[190, "curses.A_UNDERLINE"]], "a_vertical (in module curses)": [[190, "curses.A_VERTICAL"]], "button_alt (in module curses)": [[190, "curses.BUTTON_ALT"]], "button_ctrl (in module curses)": [[190, "curses.BUTTON_CTRL"]], "button_shift (in module curses)": [[190, "curses.BUTTON_SHIFT"]], "buttonn_clicked (in module curses)": [[190, "curses.BUTTONn_CLICKED"]], "buttonn_double_clicked (in module curses)": [[190, "curses.BUTTONn_DOUBLE_CLICKED"]], "buttonn_pressed (in module curses)": [[190, "curses.BUTTONn_PRESSED"]], "buttonn_released (in module curses)": [[190, "curses.BUTTONn_RELEASED"]], "buttonn_triple_clicked (in module curses)": [[190, "curses.BUTTONn_TRIPLE_CLICKED"]], "colors (in module curses)": [[190, "curses.COLORS"]], "color_black (in module curses)": [[190, "curses.COLOR_BLACK"]], "color_blue (in module curses)": [[190, "curses.COLOR_BLUE"]], "color_cyan (in module curses)": [[190, "curses.COLOR_CYAN"]], "color_green (in module curses)": [[190, "curses.COLOR_GREEN"]], "color_magenta (in module curses)": [[190, "curses.COLOR_MAGENTA"]], "color_pairs (in module curses)": [[190, "curses.COLOR_PAIRS"]], "color_red (in module curses)": [[190, "curses.COLOR_RED"]], "color_white (in module curses)": [[190, "curses.COLOR_WHITE"]], "color_yellow (in module curses)": [[190, "curses.COLOR_YELLOW"]], "cols (in module curses)": [[190, "curses.COLS"]], "columns": [[190, "index-4"], [190, "index-6"]], "err (in module curses)": [[190, "curses.ERR"]], "key_a1 (in module curses)": [[190, "curses.KEY_A1"]], "key_a3 (in module curses)": [[190, "curses.KEY_A3"]], "key_b2 (in module curses)": [[190, "curses.KEY_B2"]], "key_backspace (in module curses)": [[190, "curses.KEY_BACKSPACE"]], "key_beg (in module curses)": [[190, "curses.KEY_BEG"]], "key_break (in module curses)": [[190, "curses.KEY_BREAK"]], "key_btab (in module curses)": [[190, "curses.KEY_BTAB"]], "key_c1 (in module curses)": [[190, "curses.KEY_C1"]], "key_c3 (in module curses)": [[190, "curses.KEY_C3"]], "key_cancel (in module curses)": [[190, "curses.KEY_CANCEL"]], "key_catab (in module curses)": [[190, "curses.KEY_CATAB"]], "key_clear (in module curses)": [[190, "curses.KEY_CLEAR"]], "key_close (in module curses)": [[190, "curses.KEY_CLOSE"]], "key_command (in module curses)": [[190, "curses.KEY_COMMAND"]], "key_copy (in module curses)": [[190, "curses.KEY_COPY"]], "key_create (in module curses)": [[190, "curses.KEY_CREATE"]], "key_ctab (in module curses)": [[190, "curses.KEY_CTAB"]], "key_dc (in module curses)": [[190, "curses.KEY_DC"]], "key_dl (in module curses)": [[190, "curses.KEY_DL"]], "key_down (in module curses)": [[190, "curses.KEY_DOWN"]], "key_eic (in module curses)": [[190, "curses.KEY_EIC"]], "key_end (in module curses)": [[190, "curses.KEY_END"]], "key_enter (in module curses)": [[190, "curses.KEY_ENTER"]], "key_eol (in module curses)": [[190, "curses.KEY_EOL"]], "key_eos (in module curses)": [[190, "curses.KEY_EOS"]], "key_exit (in module curses)": [[190, "curses.KEY_EXIT"]], "key_f0 (in module curses)": [[190, "curses.KEY_F0"]], "key_find (in module curses)": [[190, "curses.KEY_FIND"]], "key_fn (in module curses)": [[190, "curses.KEY_Fn"]], "key_help (in module curses)": [[190, "curses.KEY_HELP"]], "key_home (in module curses)": [[190, "curses.KEY_HOME"]], "key_ic (in module curses)": [[190, "curses.KEY_IC"]], "key_il (in module curses)": [[190, "curses.KEY_IL"]], "key_left (in module curses)": [[190, "curses.KEY_LEFT"]], "key_ll (in module curses)": [[190, "curses.KEY_LL"]], "key_mark (in module curses)": [[190, "curses.KEY_MARK"]], "key_max (in module curses)": [[190, "curses.KEY_MAX"]], "key_message (in module curses)": [[190, "curses.KEY_MESSAGE"]], "key_min (in module curses)": [[190, "curses.KEY_MIN"]], "key_mouse (in module curses)": [[190, "curses.KEY_MOUSE"]], "key_move (in module curses)": [[190, "curses.KEY_MOVE"]], "key_next (in module curses)": [[190, "curses.KEY_NEXT"]], "key_npage (in module curses)": [[190, "curses.KEY_NPAGE"]], "key_open (in module curses)": [[190, "curses.KEY_OPEN"]], "key_options (in module curses)": [[190, "curses.KEY_OPTIONS"]], "key_ppage (in module curses)": [[190, "curses.KEY_PPAGE"]], "key_previous (in module curses)": [[190, "curses.KEY_PREVIOUS"]], "key_print (in module curses)": [[190, "curses.KEY_PRINT"]], "key_redo (in module curses)": [[190, "curses.KEY_REDO"]], "key_reference (in module curses)": [[190, "curses.KEY_REFERENCE"]], "key_refresh (in module curses)": [[190, "curses.KEY_REFRESH"]], "key_replace (in module curses)": [[190, "curses.KEY_REPLACE"]], "key_reset (in module curses)": [[190, "curses.KEY_RESET"]], "key_resize (in module curses)": [[190, "curses.KEY_RESIZE"]], "key_restart (in module curses)": [[190, "curses.KEY_RESTART"]], "key_resume (in module curses)": [[190, "curses.KEY_RESUME"]], "key_right (in module curses)": [[190, "curses.KEY_RIGHT"]], "key_save (in module curses)": [[190, "curses.KEY_SAVE"]], "key_sbeg (in module curses)": [[190, "curses.KEY_SBEG"]], "key_scancel (in module curses)": [[190, "curses.KEY_SCANCEL"]], "key_scommand (in module curses)": [[190, "curses.KEY_SCOMMAND"]], "key_scopy (in module curses)": [[190, "curses.KEY_SCOPY"]], "key_screate (in module curses)": [[190, "curses.KEY_SCREATE"]], "key_sdc (in module curses)": [[190, "curses.KEY_SDC"]], "key_sdl (in module curses)": [[190, "curses.KEY_SDL"]], "key_select (in module curses)": [[190, "curses.KEY_SELECT"]], "key_send (in module curses)": [[190, "curses.KEY_SEND"]], "key_seol (in module curses)": [[190, "curses.KEY_SEOL"]], "key_sexit (in module curses)": [[190, "curses.KEY_SEXIT"]], "key_sf (in module curses)": [[190, "curses.KEY_SF"]], "key_sfind (in module curses)": [[190, "curses.KEY_SFIND"]], "key_shelp (in module curses)": [[190, "curses.KEY_SHELP"]], "key_shome (in module curses)": [[190, "curses.KEY_SHOME"]], "key_sic (in module curses)": [[190, "curses.KEY_SIC"]], "key_sleft (in module curses)": [[190, "curses.KEY_SLEFT"]], "key_smessage (in module curses)": [[190, "curses.KEY_SMESSAGE"]], "key_smove (in module curses)": [[190, "curses.KEY_SMOVE"]], "key_snext (in module curses)": [[190, "curses.KEY_SNEXT"]], "key_soptions (in module curses)": [[190, "curses.KEY_SOPTIONS"]], "key_sprevious (in module curses)": [[190, "curses.KEY_SPREVIOUS"]], "key_sprint (in module curses)": [[190, "curses.KEY_SPRINT"]], "key_sr (in module curses)": [[190, "curses.KEY_SR"]], "key_sredo (in module curses)": [[190, "curses.KEY_SREDO"]], "key_sreplace (in module curses)": [[190, "curses.KEY_SREPLACE"]], "key_sreset (in module curses)": [[190, "curses.KEY_SRESET"]], "key_sright (in module curses)": [[190, "curses.KEY_SRIGHT"]], "key_srsume (in module curses)": [[190, "curses.KEY_SRSUME"]], "key_ssave (in module curses)": [[190, "curses.KEY_SSAVE"]], "key_ssuspend (in module curses)": [[190, "curses.KEY_SSUSPEND"]], "key_stab (in module curses)": [[190, "curses.KEY_STAB"]], "key_sundo (in module curses)": [[190, "curses.KEY_SUNDO"]], "key_suspend (in module curses)": [[190, "curses.KEY_SUSPEND"]], "key_undo (in module curses)": [[190, "curses.KEY_UNDO"]], "key_up (in module curses)": [[190, "curses.KEY_UP"]], "lines": [[190, "index-0"], [190, "index-3"], [190, "index-5"]], "lines (in module curses)": [[190, "curses.LINES"]], "ok (in module curses)": [[190, "curses.OK"]], "term": [[190, "index-1"], [190, "index-2"]], "textbox (class in curses.textpad)": [[190, "curses.textpad.Textbox"]], "__version__ (in module curses)": [[190, "curses.__version__"]], "addch() (curses.window method)": [[190, "curses.window.addch"]], "addnstr() (curses.window method)": [[190, "curses.window.addnstr"]], "addstr() (curses.window method)": [[190, "curses.window.addstr"]], "attroff() (curses.window method)": [[190, "curses.window.attroff"]], "attron() (curses.window method)": [[190, "curses.window.attron"]], "attrset() (curses.window method)": [[190, "curses.window.attrset"]], "baudrate() (in module curses)": [[190, "curses.baudrate"]], "beep() (in module curses)": [[190, "curses.beep"]], "bkgd() (curses.window method)": [[190, "curses.window.bkgd"]], "bkgdset() (curses.window method)": [[190, "curses.window.bkgdset"]], "border() (curses.window method)": [[190, "curses.window.border"]], "box() (curses.window method)": [[190, "curses.window.box"]], "can_change_color() (in module curses)": [[190, "curses.can_change_color"]], "cbreak() (in module curses)": [[190, "curses.cbreak"]], "chgat() (curses.window method)": [[190, "curses.window.chgat"]], "clear() (curses.window method)": [[190, "curses.window.clear"]], "clearok() (curses.window method)": [[190, "curses.window.clearok"]], "clrtobot() (curses.window method)": [[190, "curses.window.clrtobot"]], "clrtoeol() (curses.window method)": [[190, "curses.window.clrtoeol"]], "color_content() (in module curses)": [[190, "curses.color_content"]], "color_pair() (in module curses)": [[190, "curses.color_pair"]], "curs_set() (in module curses)": [[190, "curses.curs_set"]], "curses": [[190, "module-curses"]], "curses.textpad": [[190, "module-curses.textpad"]], "cursyncup() (curses.window method)": [[190, "curses.window.cursyncup"]], "def_prog_mode() (in module curses)": [[190, "curses.def_prog_mode"]], "def_shell_mode() (in module curses)": [[190, "curses.def_shell_mode"]], "delay_output() (in module curses)": [[190, "curses.delay_output"]], "delch() (curses.window method)": [[190, "curses.window.delch"]], "deleteln() (curses.window method)": [[190, "curses.window.deleteln"]], "derwin() (curses.window method)": [[190, "curses.window.derwin"]], "do_command() (curses.textpad.textbox method)": [[190, "curses.textpad.Textbox.do_command"]], "doupdate() (in module curses)": [[190, "curses.doupdate"]], "echo() (in module curses)": [[190, "curses.echo"]], "echochar() (curses.window method)": [[190, "curses.window.echochar"]], "edit() (curses.textpad.textbox method)": [[190, "curses.textpad.Textbox.edit"]], "enclose() (curses.window method)": [[190, "curses.window.enclose"]], "encoding (curses.window attribute)": [[190, "curses.window.encoding"]], "endwin() (in module curses)": [[190, "curses.endwin"]], "erase() (curses.window method)": [[190, "curses.window.erase"]], "erasechar() (in module curses)": [[190, "curses.erasechar"]], "filter() (in module curses)": [[190, "curses.filter"]], "flash() (in module curses)": [[190, "curses.flash"]], "flushinp() (in module curses)": [[190, "curses.flushinp"]], "gather() (curses.textpad.textbox method)": [[190, "curses.textpad.Textbox.gather"]], "get_escdelay() (in module curses)": [[190, "curses.get_escdelay"]], "get_tabsize() (in module curses)": [[190, "curses.get_tabsize"]], "get_wch() (curses.window method)": [[190, "curses.window.get_wch"]], "getbegyx() (curses.window method)": [[190, "curses.window.getbegyx"]], "getbkgd() (curses.window method)": [[190, "curses.window.getbkgd"]], "getch() (curses.window method)": [[190, "curses.window.getch"]], "getkey() (curses.window method)": [[190, "curses.window.getkey"]], "getmaxyx() (curses.window method)": [[190, "curses.window.getmaxyx"]], "getmouse() (in module curses)": [[190, "curses.getmouse"]], "getparyx() (curses.window method)": [[190, "curses.window.getparyx"]], "getstr() (curses.window method)": [[190, "curses.window.getstr"]], "getsyx() (in module curses)": [[190, "curses.getsyx"]], "getwin() (in module curses)": [[190, "curses.getwin"]], "getyx() (curses.window method)": [[190, "curses.window.getyx"]], "halfdelay() (in module curses)": [[190, "curses.halfdelay"]], "has_colors() (in module curses)": [[190, "curses.has_colors"]], "has_extended_color_support() (in module curses)": [[190, "curses.has_extended_color_support"]], "has_ic() (in module curses)": [[190, "curses.has_ic"]], "has_il() (in module curses)": [[190, "curses.has_il"]], "has_key() (in module curses)": [[190, "curses.has_key"]], "hline() (curses.window method)": [[190, "curses.window.hline"]], "idcok() (curses.window method)": [[190, "curses.window.idcok"]], "idlok() (curses.window method)": [[190, "curses.window.idlok"]], "immedok() (curses.window method)": [[190, "curses.window.immedok"]], "inch() (curses.window method)": [[190, "curses.window.inch"]], "init_color() (in module curses)": [[190, "curses.init_color"]], "init_pair() (in module curses)": [[190, "curses.init_pair"]], "initscr() (in module curses)": [[190, "curses.initscr"]], "insch() (curses.window method)": [[190, "curses.window.insch"]], "insdelln() (curses.window method)": [[190, "curses.window.insdelln"]], "insertln() (curses.window method)": [[190, "curses.window.insertln"]], "insnstr() (curses.window method)": [[190, "curses.window.insnstr"]], "insstr() (curses.window method)": [[190, "curses.window.insstr"]], "instr() (curses.window method)": [[190, "curses.window.instr"]], "is_linetouched() (curses.window method)": [[190, "curses.window.is_linetouched"]], "is_term_resized() (in module curses)": [[190, "curses.is_term_resized"]], "is_wintouched() (curses.window method)": [[190, "curses.window.is_wintouched"]], "isendwin() (in module curses)": [[190, "curses.isendwin"]], "keyname() (in module curses)": [[190, "curses.keyname"]], "keypad() (curses.window method)": [[190, "curses.window.keypad"]], "killchar() (in module curses)": [[190, "curses.killchar"]], "leaveok() (curses.window method)": [[190, "curses.window.leaveok"]], "longname() (in module curses)": [[190, "curses.longname"]], "meta() (in module curses)": [[190, "curses.meta"]], "mouseinterval() (in module curses)": [[190, "curses.mouseinterval"]], "mousemask() (in module curses)": [[190, "curses.mousemask"]], "move() (curses.window method)": [[190, "curses.window.move"]], "mvderwin() (curses.window method)": [[190, "curses.window.mvderwin"]], "mvwin() (curses.window method)": [[190, "curses.window.mvwin"]], "napms() (in module curses)": [[190, "curses.napms"]], "ncurses_version (in module curses)": [[190, "curses.ncurses_version"]], "newpad() (in module curses)": [[190, "curses.newpad"]], "newwin() (in module curses)": [[190, "curses.newwin"]], "nl() (in module curses)": [[190, "curses.nl"]], "nocbreak() (in module curses)": [[190, "curses.nocbreak"]], "nodelay() (curses.window method)": [[190, "curses.window.nodelay"]], "noecho() (in module curses)": [[190, "curses.noecho"]], "nonl() (in module curses)": [[190, "curses.nonl"]], "noqiflush() (in module curses)": [[190, "curses.noqiflush"]], "noraw() (in module curses)": [[190, "curses.noraw"]], "notimeout() (curses.window method)": [[190, "curses.window.notimeout"]], "noutrefresh() (curses.window method)": [[190, "curses.window.noutrefresh"]], "overlay() (curses.window method)": [[190, "curses.window.overlay"]], "overwrite() (curses.window method)": [[190, "curses.window.overwrite"]], "pair_content() (in module curses)": [[190, "curses.pair_content"]], "pair_number() (in module curses)": [[190, "curses.pair_number"]], "putp() (in module curses)": [[190, "curses.putp"]], "putwin() (curses.window method)": [[190, "curses.window.putwin"]], "qiflush() (in module curses)": [[190, "curses.qiflush"]], "raw() (in module curses)": [[190, "curses.raw"]], "rectangle() (in module curses.textpad)": [[190, "curses.textpad.rectangle"]], "redrawln() (curses.window method)": [[190, "curses.window.redrawln"]], "redrawwin() (curses.window method)": [[190, "curses.window.redrawwin"]], "refresh() (curses.window method)": [[190, "curses.window.refresh"]], "reset_prog_mode() (in module curses)": [[190, "curses.reset_prog_mode"]], "reset_shell_mode() (in module curses)": [[190, "curses.reset_shell_mode"]], "resetty() (in module curses)": [[190, "curses.resetty"]], "resize() (curses.window method)": [[190, "curses.window.resize"]], "resize_term() (in module curses)": [[190, "curses.resize_term"]], "resizeterm() (in module curses)": [[190, "curses.resizeterm"]], "savetty() (in module curses)": [[190, "curses.savetty"]], "scroll() (curses.window method)": [[190, "curses.window.scroll"]], "scrollok() (curses.window method)": [[190, "curses.window.scrollok"]], "set_escdelay() (in module curses)": [[190, "curses.set_escdelay"]], "set_tabsize() (in module curses)": [[190, "curses.set_tabsize"]], "setscrreg() (curses.window method)": [[190, "curses.window.setscrreg"]], "setsyx() (in module curses)": [[190, "curses.setsyx"]], "setupterm() (in module curses)": [[190, "curses.setupterm"]], "standend() (curses.window method)": [[190, "curses.window.standend"]], "standout() (curses.window method)": [[190, "curses.window.standout"]], "start_color() (in module curses)": [[190, "curses.start_color"]], "stripspaces (curses.textpad.textbox attribute)": [[190, "curses.textpad.Textbox.stripspaces"]], "subpad() (curses.window method)": [[190, "curses.window.subpad"]], "subwin() (curses.window method)": [[190, "curses.window.subwin"]], "syncdown() (curses.window method)": [[190, "curses.window.syncdown"]], "syncok() (curses.window method)": [[190, "curses.window.syncok"]], "syncup() (curses.window method)": [[190, "curses.window.syncup"]], "termattrs() (in module curses)": [[190, "curses.termattrs"]], "termname() (in module curses)": [[190, "curses.termname"]], "tigetflag() (in module curses)": [[190, "curses.tigetflag"]], "tigetnum() (in module curses)": [[190, "curses.tigetnum"]], "tigetstr() (in module curses)": [[190, "curses.tigetstr"]], "timeout() (curses.window method)": [[190, "curses.window.timeout"]], "touchline() (curses.window method)": [[190, "curses.window.touchline"]], "touchwin() (curses.window method)": [[190, "curses.window.touchwin"]], "tparm() (in module curses)": [[190, "curses.tparm"]], "typeahead() (in module curses)": [[190, "curses.typeahead"]], "unctrl() (in module curses)": [[190, "curses.unctrl"]], "unget_wch() (in module curses)": [[190, "curses.unget_wch"]], "ungetch() (in module curses)": [[190, "curses.ungetch"]], "ungetmouse() (in module curses)": [[190, "curses.ungetmouse"]], "untouchwin() (curses.window method)": [[190, "curses.window.untouchwin"]], "update_lines_cols() (in module curses)": [[190, "curses.update_lines_cols"]], "use_default_colors() (in module curses)": [[190, "curses.use_default_colors"]], "use_env() (in module curses)": [[190, "curses.use_env"]], "version (in module curses)": [[190, "curses.version"]], "vline() (curses.window method)": [[190, "curses.window.vline"]], "wrapper() (in module curses)": [[190, "curses.wrapper"]], "ack (in module curses.ascii)": [[191, "curses.ascii.ACK"]], "bel (in module curses.ascii)": [[191, "curses.ascii.BEL"]], "bs (in module curses.ascii)": [[191, "curses.ascii.BS"]], "can (in module curses.ascii)": [[191, "curses.ascii.CAN"]], "cr (in module curses.ascii)": [[191, "curses.ascii.CR"]], "dc1 (in module curses.ascii)": [[191, "curses.ascii.DC1"]], "dc2 (in module curses.ascii)": [[191, "curses.ascii.DC2"]], "dc3 (in module curses.ascii)": [[191, "curses.ascii.DC3"]], "dc4 (in module curses.ascii)": [[191, "curses.ascii.DC4"]], "del (in module curses.ascii)": [[191, "curses.ascii.DEL"]], "dle (in module curses.ascii)": [[191, "curses.ascii.DLE"]], "em (in module curses.ascii)": [[191, "curses.ascii.EM"]], "enq (in module curses.ascii)": [[191, "curses.ascii.ENQ"]], "eot (in module curses.ascii)": [[191, "curses.ascii.EOT"]], "esc (in module curses.ascii)": [[191, "curses.ascii.ESC"]], "etb (in module curses.ascii)": [[191, "curses.ascii.ETB"]], "etx (in module curses.ascii)": [[191, "curses.ascii.ETX"]], "ff (in module curses.ascii)": [[191, "curses.ascii.FF"]], "fs (in module curses.ascii)": [[191, "curses.ascii.FS"]], "gs (in module curses.ascii)": [[191, "curses.ascii.GS"]], "ht (in module curses.ascii)": [[191, "curses.ascii.HT"]], "lf (in module curses.ascii)": [[191, "curses.ascii.LF"]], "nak (in module curses.ascii)": [[191, "curses.ascii.NAK"]], "nl (in module curses.ascii)": [[191, "curses.ascii.NL"]], "nul (in module curses.ascii)": [[191, "curses.ascii.NUL"]], "rs (in module curses.ascii)": [[191, "curses.ascii.RS"]], "si (in module curses.ascii)": [[191, "curses.ascii.SI"]], "so (in module curses.ascii)": [[191, "curses.ascii.SO"]], "soh (in module curses.ascii)": [[191, "curses.ascii.SOH"]], "sp (in module curses.ascii)": [[191, "curses.ascii.SP"]], "stx (in module curses.ascii)": [[191, "curses.ascii.STX"]], "sub (in module curses.ascii)": [[191, "curses.ascii.SUB"]], "syn (in module curses.ascii)": [[191, "curses.ascii.SYN"]], "tab (in module curses.ascii)": [[191, "curses.ascii.TAB"]], "us (in module curses.ascii)": [[191, "curses.ascii.US"]], "vt (in module curses.ascii)": [[191, "curses.ascii.VT"]], "^ (caret)": [[191, "index-0"], [207, "index-1"], [334, "index-1"], [334, "index-13"], [360, "index-16"], [361, "index-3"], [396, "index-1"], [445, "index-75"]], "alt() (in module curses.ascii)": [[191, "curses.ascii.alt"]], "ascii() (in module curses.ascii)": [[191, "curses.ascii.ascii"]], "controlnames (in module curses.ascii)": [[191, "curses.ascii.controlnames"]], "ctrl() (in module curses.ascii)": [[191, "curses.ascii.ctrl"]], "curses.ascii": [[191, "module-curses.ascii"]], "in curses module": [[191, "index-0"]], "isalnum() (in module curses.ascii)": [[191, "curses.ascii.isalnum"]], "isalpha() (in module curses.ascii)": [[191, "curses.ascii.isalpha"]], "isascii() (in module curses.ascii)": [[191, "curses.ascii.isascii"]], "isblank() (in module curses.ascii)": [[191, "curses.ascii.isblank"]], "iscntrl() (in module curses.ascii)": [[191, "curses.ascii.iscntrl"]], "isctrl() (in module curses.ascii)": [[191, "curses.ascii.isctrl"]], "isdigit() (in module curses.ascii)": [[191, "curses.ascii.isdigit"]], "isgraph() (in module curses.ascii)": [[191, "curses.ascii.isgraph"]], "islower() (in module curses.ascii)": [[191, "curses.ascii.islower"]], "ismeta() (in module curses.ascii)": [[191, "curses.ascii.ismeta"]], "isprint() (in module curses.ascii)": [[191, "curses.ascii.isprint"]], "ispunct() (in module curses.ascii)": [[191, "curses.ascii.ispunct"]], "isspace() (in module curses.ascii)": [[191, "curses.ascii.isspace"]], "isupper() (in module curses.ascii)": [[191, "curses.ascii.isupper"]], "isxdigit() (in module curses.ascii)": [[191, "curses.ascii.isxdigit"]], "unctrl() (in module curses.ascii)": [[191, "curses.ascii.unctrl"]], "above() (curses.panel.panel method)": [[192, "curses.panel.Panel.above"]], "below() (curses.panel.panel method)": [[192, "curses.panel.Panel.below"]], "bottom() (curses.panel.panel method)": [[192, "curses.panel.Panel.bottom"]], "bottom_panel() (in module curses.panel)": [[192, "curses.panel.bottom_panel"]], "curses.panel": [[192, "module-curses.panel"]], "hidden() (curses.panel.panel method)": [[192, "curses.panel.Panel.hidden"]], "hide() (curses.panel.panel method)": [[192, "curses.panel.Panel.hide"]], "move() (curses.panel.panel method)": [[192, "curses.panel.Panel.move"]], "new_panel() (in module curses.panel)": [[192, "curses.panel.new_panel"]], "replace() (curses.panel.panel method)": [[192, "curses.panel.Panel.replace"]], "set_userptr() (curses.panel.panel method)": [[192, "curses.panel.Panel.set_userptr"]], "show() (curses.panel.panel method)": [[192, "curses.panel.Panel.show"]], "top() (curses.panel.panel method)": [[192, "curses.panel.Panel.top"]], "top_panel() (in module curses.panel)": [[192, "curses.panel.top_panel"]], "update_panels() (in module curses.panel)": [[192, "curses.panel.update_panels"]], "userptr() (curses.panel.panel method)": [[192, "curses.panel.Panel.userptr"]], "window() (curses.panel.panel method)": [[192, "curses.panel.Panel.window"]], "field (class in dataclasses)": [[194, "dataclasses.Field"]], "frozeninstanceerror": [[194, "dataclasses.FrozenInstanceError"]], "kw_only (in module dataclasses)": [[194, "dataclasses.KW_ONLY"]], "missing (in module dataclasses)": [[194, "dataclasses.MISSING"]], "pep 557": [[194, "index-0"], [494, "index-29"]], "asdict() (in module dataclasses)": [[194, "dataclasses.asdict"]], "astuple() (in module dataclasses)": [[194, "dataclasses.astuple"]], "dataclass() (in module dataclasses)": [[194, "dataclasses.dataclass"]], "dataclasses": [[194, "module-dataclasses"]], "field() (in module dataclasses)": [[194, "dataclasses.field"]], "fields() (in module dataclasses)": [[194, "dataclasses.fields"]], "is_dataclass() (in module dataclasses)": [[194, "dataclasses.is_dataclass"]], "make_dataclass() (in module dataclasses)": [[194, "dataclasses.make_dataclass"]], "replace() (in module dataclasses)": [[194, "dataclasses.replace"]], "maxyear (in module datetime)": [[196, "datetime.MAXYEAR"]], "minyear (in module datetime)": [[196, "datetime.MINYEAR"]], "utc (in module datetime)": [[196, "datetime.UTC"]], "__format__() (datetime.date method)": [[196, "datetime.date.__format__"]], "__format__() (datetime.datetime method)": [[196, "datetime.datetime.__format__"]], "__format__() (datetime.time method)": [[196, "datetime.time.__format__"]], "__str__() (datetime.date method)": [[196, "datetime.date.__str__"]], "__str__() (datetime.datetime method)": [[196, "datetime.datetime.__str__"]], "__str__() (datetime.time method)": [[196, "datetime.time.__str__"]], "astimezone() (datetime.datetime method)": [[196, "datetime.datetime.astimezone"]], "combine() (datetime.datetime class method)": [[196, "datetime.datetime.combine"]], "ctime() (datetime.date method)": [[196, "datetime.date.ctime"]], "ctime() (datetime.datetime method)": [[196, "datetime.datetime.ctime"]], "date (class in datetime)": [[196, "datetime.date"]], "date() (datetime.datetime method)": [[196, "datetime.datetime.date"]], "datetime": [[196, "module-datetime"]], "datetime (class in datetime)": [[196, "datetime.datetime"]], "datetime format": [[196, "index-0"], [381, "index-11"], [381, "index-9"]], "day (datetime.date attribute)": [[196, "datetime.date.day"]], "day (datetime.datetime attribute)": [[196, "datetime.datetime.day"]], "dst() (datetime.datetime method)": [[196, "datetime.datetime.dst"]], "dst() (datetime.time method)": [[196, "datetime.time.dst"]], "dst() (datetime.timezone method)": [[196, "datetime.timezone.dst"]], "dst() (datetime.tzinfo method)": [[196, "datetime.tzinfo.dst"]], "fold (datetime.datetime attribute)": [[196, "datetime.datetime.fold"]], "fold (datetime.time attribute)": [[196, "datetime.time.fold"]], "fromisocalendar() (datetime.date class method)": [[196, "datetime.date.fromisocalendar"]], "fromisocalendar() (datetime.datetime class method)": [[196, "datetime.datetime.fromisocalendar"]], "fromisoformat() (datetime.date class method)": [[196, "datetime.date.fromisoformat"]], "fromisoformat() (datetime.datetime class method)": [[196, "datetime.datetime.fromisoformat"]], "fromisoformat() (datetime.time class method)": [[196, "datetime.time.fromisoformat"]], "fromordinal() (datetime.date class method)": [[196, "datetime.date.fromordinal"]], "fromordinal() (datetime.datetime class method)": [[196, "datetime.datetime.fromordinal"]], "fromtimestamp() (datetime.date class method)": [[196, "datetime.date.fromtimestamp"]], "fromtimestamp() (datetime.datetime class method)": [[196, "datetime.datetime.fromtimestamp"]], "fromutc() (datetime.timezone method)": [[196, "datetime.timezone.fromutc"]], "fromutc() (datetime.tzinfo method)": [[196, "datetime.tzinfo.fromutc"]], "hour (datetime.datetime attribute)": [[196, "datetime.datetime.hour"]], "hour (datetime.time attribute)": [[196, "datetime.time.hour"]], "isocalendar() (datetime.date method)": [[196, "datetime.date.isocalendar"]], "isocalendar() (datetime.datetime method)": [[196, "datetime.datetime.isocalendar"]], "isoformat() (datetime.date method)": [[196, "datetime.date.isoformat"]], "isoformat() (datetime.datetime method)": [[196, "datetime.datetime.isoformat"]], "isoformat() (datetime.time method)": [[196, "datetime.time.isoformat"]], "isoweekday() (datetime.date method)": [[196, "datetime.date.isoweekday"]], "isoweekday() (datetime.datetime method)": [[196, "datetime.datetime.isoweekday"]], "max (datetime.date attribute)": [[196, "datetime.date.max"]], "max (datetime.datetime attribute)": [[196, "datetime.datetime.max"]], "max (datetime.time attribute)": [[196, "datetime.time.max"]], "max (datetime.timedelta attribute)": [[196, "datetime.timedelta.max"]], "microsecond (datetime.datetime attribute)": [[196, "datetime.datetime.microsecond"]], "microsecond (datetime.time attribute)": [[196, "datetime.time.microsecond"]], "min (datetime.date attribute)": [[196, "datetime.date.min"]], "min (datetime.datetime attribute)": [[196, "datetime.datetime.min"]], "min (datetime.time attribute)": [[196, "datetime.time.min"]], "min (datetime.timedelta attribute)": [[196, "datetime.timedelta.min"]], "minute (datetime.datetime attribute)": [[196, "datetime.datetime.minute"]], "minute (datetime.time attribute)": [[196, "datetime.time.minute"]], "month (datetime.date attribute)": [[196, "datetime.date.month"]], "month (datetime.datetime attribute)": [[196, "datetime.datetime.month"]], "now() (datetime.datetime class method)": [[196, "datetime.datetime.now"]], "replace() (datetime.date method)": [[196, "datetime.date.replace"]], "replace() (datetime.datetime method)": [[196, "datetime.datetime.replace"]], "replace() (datetime.time method)": [[196, "datetime.time.replace"]], "resolution (datetime.date attribute)": [[196, "datetime.date.resolution"]], "resolution (datetime.datetime attribute)": [[196, "datetime.datetime.resolution"]], "resolution (datetime.time attribute)": [[196, "datetime.time.resolution"]], "resolution (datetime.timedelta attribute)": [[196, "datetime.timedelta.resolution"]], "second (datetime.datetime attribute)": [[196, "datetime.datetime.second"]], "second (datetime.time attribute)": [[196, "datetime.time.second"]], "strftime() (datetime.date method)": [[196, "datetime.date.strftime"]], "strftime() (datetime.datetime method)": [[196, "datetime.datetime.strftime"]], "strftime() (datetime.time method)": [[196, "datetime.time.strftime"]], "strptime() (datetime.datetime class method)": [[196, "datetime.datetime.strptime"]], "time (class in datetime)": [[196, "datetime.time"]], "time() (datetime.datetime method)": [[196, "datetime.datetime.time"]], "timedelta (class in datetime)": [[196, "datetime.timedelta"]], "timestamp() (datetime.datetime method)": [[196, "datetime.datetime.timestamp"]], "timetuple() (datetime.date method)": [[196, "datetime.date.timetuple"]], "timetuple() (datetime.datetime method)": [[196, "datetime.datetime.timetuple"]], "timetz() (datetime.datetime method)": [[196, "datetime.datetime.timetz"]], "timezone (class in datetime)": [[196, "datetime.timezone"]], "today() (datetime.date class method)": [[196, "datetime.date.today"]], "today() (datetime.datetime class method)": [[196, "datetime.datetime.today"]], "toordinal() (datetime.date method)": [[196, "datetime.date.toordinal"]], "toordinal() (datetime.datetime method)": [[196, "datetime.datetime.toordinal"]], "total_seconds() (datetime.timedelta method)": [[196, "datetime.timedelta.total_seconds"]], "tzinfo (class in datetime)": [[196, "datetime.tzinfo"]], "tzinfo (datetime.datetime attribute)": [[196, "datetime.datetime.tzinfo"]], "tzinfo (datetime.time attribute)": [[196, "datetime.time.tzinfo"]], "tzname() (datetime.datetime method)": [[196, "datetime.datetime.tzname"]], "tzname() (datetime.time method)": [[196, "datetime.time.tzname"]], "tzname() (datetime.timezone method)": [[196, "datetime.timezone.tzname"]], "tzname() (datetime.tzinfo method)": [[196, "datetime.tzinfo.tzname"]], "utc (datetime.timezone attribute)": [[196, "datetime.timezone.utc"]], "utcfromtimestamp() (datetime.datetime class method)": [[196, "datetime.datetime.utcfromtimestamp"]], "utcnow() (datetime.datetime class method)": [[196, "datetime.datetime.utcnow"]], "utcoffset() (datetime.datetime method)": [[196, "datetime.datetime.utcoffset"]], "utcoffset() (datetime.time method)": [[196, "datetime.time.utcoffset"]], "utcoffset() (datetime.timezone method)": [[196, "datetime.timezone.utcoffset"]], "utcoffset() (datetime.tzinfo method)": [[196, "datetime.tzinfo.utcoffset"]], "utctimetuple() (datetime.datetime method)": [[196, "datetime.datetime.utctimetuple"]], "weekday() (datetime.date method)": [[196, "datetime.date.weekday"]], "weekday() (datetime.datetime method)": [[196, "datetime.datetime.weekday"]], "year (datetime.date attribute)": [[196, "datetime.date.year"]], "year (datetime.datetime attribute)": [[196, "datetime.datetime.year"]], "close() (dbm.dumb.dumbdbm method)": [[197, "dbm.dumb.dumbdbm.close"]], "close() (dbm.gnu.gdbm method)": [[197, "dbm.gnu.gdbm.close"]], "close() (dbm.ndbm.ndbm method)": [[197, "dbm.ndbm.ndbm.close"]], "databases": [[197, "index-0"]], "dbm": [[197, "module-dbm"]], "dbm.dumb": [[197, "module-dbm.dumb"]], "dbm.gnu": [[197, "module-dbm.gnu"], [345, "index-1"], [443, "index-32"]], "dbm.ndbm": [[197, "module-dbm.ndbm"], [345, "index-1"], [443, "index-32"]], "firstkey() (dbm.gnu.gdbm method)": [[197, "dbm.gnu.gdbm.firstkey"]], "library (in module dbm.ndbm)": [[197, "dbm.ndbm.library"]], "nextkey() (dbm.gnu.gdbm method)": [[197, "dbm.gnu.gdbm.nextkey"]], "open() (in module dbm)": [[197, "dbm.open"]], "open() (in module dbm.dumb)": [[197, "dbm.dumb.open"]], "open() (in module dbm.gnu)": [[197, "dbm.gnu.open"]], "open() (in module dbm.ndbm)": [[197, "dbm.ndbm.open"]], "open_flags (in module dbm.gnu)": [[197, "dbm.gnu.open_flags"]], "reorganize() (dbm.gnu.gdbm method)": [[197, "dbm.gnu.gdbm.reorganize"]], "sync() (dbm.dumb.dumbdbm method)": [[197, "dbm.dumb.dumbdbm.sync"]], "sync() (dbm.gnu.gdbm method)": [[197, "dbm.gnu.gdbm.sync"]], "whichdb() (in module dbm)": [[197, "dbm.whichdb"]], "basiccontext (class in decimal)": [[199, "decimal.BasicContext"]], "clamped (class in decimal)": [[199, "decimal.Clamped"]], "context (class in decimal)": [[199, "decimal.Context"]], "decimal (class in decimal)": [[199, "decimal.Decimal"]], "decimalexception (class in decimal)": [[199, "decimal.DecimalException"]], "defaultcontext (class in decimal)": [[199, "decimal.DefaultContext"]], "divisionbyzero (class in decimal)": [[199, "decimal.DivisionByZero"]], "etiny() (decimal.context method)": [[199, "decimal.Context.Etiny"]], "etop() (decimal.context method)": [[199, "decimal.Context.Etop"]], "extendedcontext (class in decimal)": [[199, "decimal.ExtendedContext"]], "floatoperation (class in decimal)": [[199, "decimal.FloatOperation"]], "have_contextvar (in module decimal)": [[199, "decimal.HAVE_CONTEXTVAR"]], "have_threads (in module decimal)": [[199, "decimal.HAVE_THREADS"]], "inexact (class in decimal)": [[199, "decimal.Inexact"]], "invalidoperation (class in decimal)": [[199, "decimal.InvalidOperation"]], "max_emax (in module decimal)": [[199, "decimal.MAX_EMAX"]], "max_prec (in module decimal)": [[199, "decimal.MAX_PREC"]], "min_emin (in module decimal)": [[199, "decimal.MIN_EMIN"]], "min_etiny (in module decimal)": [[199, "decimal.MIN_ETINY"]], "overflow (class in decimal)": [[199, "decimal.Overflow"]], "round_05up (in module decimal)": [[199, "decimal.ROUND_05UP"]], "round_ceiling (in module decimal)": [[199, "decimal.ROUND_CEILING"]], "round_down (in module decimal)": [[199, "decimal.ROUND_DOWN"]], "round_floor (in module decimal)": [[199, "decimal.ROUND_FLOOR"]], "round_half_down (in module decimal)": [[199, "decimal.ROUND_HALF_DOWN"]], "round_half_even (in module decimal)": [[199, "decimal.ROUND_HALF_EVEN"]], "round_half_up (in module decimal)": [[199, "decimal.ROUND_HALF_UP"]], "round_up (in module decimal)": [[199, "decimal.ROUND_UP"]], "rounded (class in decimal)": [[199, "decimal.Rounded"]], "subnormal (class in decimal)": [[199, "decimal.Subnormal"]], "underflow (class in decimal)": [[199, "decimal.Underflow"]], "abs() (decimal.context method)": [[199, "decimal.Context.abs"]], "add() (decimal.context method)": [[199, "decimal.Context.add"]], "adjusted() (decimal.decimal method)": [[199, "decimal.Decimal.adjusted"]], "as_integer_ratio() (decimal.decimal method)": [[199, "decimal.Decimal.as_integer_ratio"]], "as_tuple() (decimal.decimal method)": [[199, "decimal.Decimal.as_tuple"]], "canonical() (decimal.context method)": [[199, "decimal.Context.canonical"]], "canonical() (decimal.decimal method)": [[199, "decimal.Decimal.canonical"]], "clear_flags() (decimal.context method)": [[199, "decimal.Context.clear_flags"]], "clear_traps() (decimal.context method)": [[199, "decimal.Context.clear_traps"]], "compare() (decimal.context method)": [[199, "decimal.Context.compare"]], "compare() (decimal.decimal method)": [[199, "decimal.Decimal.compare"]], "compare_signal() (decimal.context method)": [[199, "decimal.Context.compare_signal"]], "compare_signal() (decimal.decimal method)": [[199, "decimal.Decimal.compare_signal"]], "compare_total() (decimal.context method)": [[199, "decimal.Context.compare_total"]], "compare_total() (decimal.decimal method)": [[199, "decimal.Decimal.compare_total"]], "compare_total_mag() (decimal.context method)": [[199, "decimal.Context.compare_total_mag"]], "compare_total_mag() (decimal.decimal method)": [[199, "decimal.Decimal.compare_total_mag"]], "conjugate() (decimal.decimal method)": [[199, "decimal.Decimal.conjugate"]], "copy() (decimal.context method)": [[199, "decimal.Context.copy"]], "copy_abs() (decimal.context method)": [[199, "decimal.Context.copy_abs"]], "copy_abs() (decimal.decimal method)": [[199, "decimal.Decimal.copy_abs"]], "copy_decimal() (decimal.context method)": [[199, "decimal.Context.copy_decimal"]], "copy_negate() (decimal.context method)": [[199, "decimal.Context.copy_negate"]], "copy_negate() (decimal.decimal method)": [[199, "decimal.Decimal.copy_negate"]], "copy_sign() (decimal.context method)": [[199, "decimal.Context.copy_sign"]], "copy_sign() (decimal.decimal method)": [[199, "decimal.Decimal.copy_sign"]], "create_decimal() (decimal.context method)": [[199, "decimal.Context.create_decimal"]], "create_decimal_from_float() (decimal.context method)": [[199, "decimal.Context.create_decimal_from_float"]], "decimal": [[199, "module-decimal"]], "divide() (decimal.context method)": [[199, "decimal.Context.divide"]], "divide_int() (decimal.context method)": [[199, "decimal.Context.divide_int"]], "divmod() (decimal.context method)": [[199, "decimal.Context.divmod"]], "exp() (decimal.context method)": [[199, "decimal.Context.exp"]], "exp() (decimal.decimal method)": [[199, "decimal.Decimal.exp"]], "fma() (decimal.context method)": [[199, "decimal.Context.fma"]], "fma() (decimal.decimal method)": [[199, "decimal.Decimal.fma"]], "from_float() (decimal.decimal class method)": [[199, "decimal.Decimal.from_float"]], "getcontext() (in module decimal)": [[199, "decimal.getcontext"]], "is_canonical() (decimal.context method)": [[199, "decimal.Context.is_canonical"]], "is_canonical() (decimal.decimal method)": [[199, "decimal.Decimal.is_canonical"]], "is_finite() (decimal.context method)": [[199, "decimal.Context.is_finite"]], "is_finite() (decimal.decimal method)": [[199, "decimal.Decimal.is_finite"]], "is_infinite() (decimal.context method)": [[199, "decimal.Context.is_infinite"]], "is_infinite() (decimal.decimal method)": [[199, "decimal.Decimal.is_infinite"]], "is_nan() (decimal.context method)": [[199, "decimal.Context.is_nan"]], "is_nan() (decimal.decimal method)": [[199, "decimal.Decimal.is_nan"]], "is_normal() (decimal.context method)": [[199, "decimal.Context.is_normal"]], "is_normal() (decimal.decimal method)": [[199, "decimal.Decimal.is_normal"]], "is_qnan() (decimal.context method)": [[199, "decimal.Context.is_qnan"]], "is_qnan() (decimal.decimal method)": [[199, "decimal.Decimal.is_qnan"]], "is_signed() (decimal.context method)": [[199, "decimal.Context.is_signed"]], "is_signed() (decimal.decimal method)": [[199, "decimal.Decimal.is_signed"]], "is_snan() (decimal.context method)": [[199, "decimal.Context.is_snan"]], "is_snan() (decimal.decimal method)": [[199, "decimal.Decimal.is_snan"]], "is_subnormal() (decimal.context method)": [[199, "decimal.Context.is_subnormal"]], "is_subnormal() (decimal.decimal method)": [[199, "decimal.Decimal.is_subnormal"]], "is_zero() (decimal.context method)": [[199, "decimal.Context.is_zero"]], "is_zero() (decimal.decimal method)": [[199, "decimal.Decimal.is_zero"]], "ln() (decimal.context method)": [[199, "decimal.Context.ln"]], "ln() (decimal.decimal method)": [[199, "decimal.Decimal.ln"]], "localcontext() (in module decimal)": [[199, "decimal.localcontext"]], "log10() (decimal.context method)": [[199, "decimal.Context.log10"]], "log10() (decimal.decimal method)": [[199, "decimal.Decimal.log10"]], "logb() (decimal.context method)": [[199, "decimal.Context.logb"]], "logb() (decimal.decimal method)": [[199, "decimal.Decimal.logb"]], "logical_and() (decimal.context method)": [[199, "decimal.Context.logical_and"]], "logical_and() (decimal.decimal method)": [[199, "decimal.Decimal.logical_and"]], "logical_invert() (decimal.context method)": [[199, "decimal.Context.logical_invert"]], "logical_invert() (decimal.decimal method)": [[199, "decimal.Decimal.logical_invert"]], "logical_or() (decimal.context method)": [[199, "decimal.Context.logical_or"]], "logical_or() (decimal.decimal method)": [[199, "decimal.Decimal.logical_or"]], "logical_xor() (decimal.context method)": [[199, "decimal.Context.logical_xor"]], "logical_xor() (decimal.decimal method)": [[199, "decimal.Decimal.logical_xor"]], "max() (decimal.context method)": [[199, "decimal.Context.max"]], "max() (decimal.decimal method)": [[199, "decimal.Decimal.max"]], "max_mag() (decimal.context method)": [[199, "decimal.Context.max_mag"]], "max_mag() (decimal.decimal method)": [[199, "decimal.Decimal.max_mag"]], "min() (decimal.context method)": [[199, "decimal.Context.min"]], "min() (decimal.decimal method)": [[199, "decimal.Decimal.min"]], "min_mag() (decimal.context method)": [[199, "decimal.Context.min_mag"]], "min_mag() (decimal.decimal method)": [[199, "decimal.Decimal.min_mag"]], "minus() (decimal.context method)": [[199, "decimal.Context.minus"]], "multiply() (decimal.context method)": [[199, "decimal.Context.multiply"]], "next_minus() (decimal.context method)": [[199, "decimal.Context.next_minus"]], "next_minus() (decimal.decimal method)": [[199, "decimal.Decimal.next_minus"]], "next_plus() (decimal.context method)": [[199, "decimal.Context.next_plus"]], "next_plus() (decimal.decimal method)": [[199, "decimal.Decimal.next_plus"]], "next_toward() (decimal.context method)": [[199, "decimal.Context.next_toward"]], "next_toward() (decimal.decimal method)": [[199, "decimal.Decimal.next_toward"]], "normalize() (decimal.context method)": [[199, "decimal.Context.normalize"]], "normalize() (decimal.decimal method)": [[199, "decimal.Decimal.normalize"]], "number_class() (decimal.context method)": [[199, "decimal.Context.number_class"]], "number_class() (decimal.decimal method)": [[199, "decimal.Decimal.number_class"]], "plus() (decimal.context method)": [[199, "decimal.Context.plus"]], "power() (decimal.context method)": [[199, "decimal.Context.power"]], "quantize() (decimal.context method)": [[199, "decimal.Context.quantize"]], "quantize() (decimal.decimal method)": [[199, "decimal.Decimal.quantize"]], "radix() (decimal.context method)": [[199, "decimal.Context.radix"]], "radix() (decimal.decimal method)": [[199, "decimal.Decimal.radix"]], "remainder() (decimal.context method)": [[199, "decimal.Context.remainder"]], "remainder_near() (decimal.context method)": [[199, "decimal.Context.remainder_near"]], "remainder_near() (decimal.decimal method)": [[199, "decimal.Decimal.remainder_near"]], "rotate() (decimal.context method)": [[199, "decimal.Context.rotate"]], "rotate() (decimal.decimal method)": [[199, "decimal.Decimal.rotate"]], "same_quantum() (decimal.context method)": [[199, "decimal.Context.same_quantum"]], "same_quantum() (decimal.decimal method)": [[199, "decimal.Decimal.same_quantum"]], "scaleb() (decimal.context method)": [[199, "decimal.Context.scaleb"]], "scaleb() (decimal.decimal method)": [[199, "decimal.Decimal.scaleb"]], "setcontext() (in module decimal)": [[199, "decimal.setcontext"]], "shift() (decimal.context method)": [[199, "decimal.Context.shift"]], "shift() (decimal.decimal method)": [[199, "decimal.Decimal.shift"]], "sqrt() (decimal.context method)": [[199, "decimal.Context.sqrt"]], "sqrt() (decimal.decimal method)": [[199, "decimal.Decimal.sqrt"]], "subtract() (decimal.context method)": [[199, "decimal.Context.subtract"]], "to_eng_string() (decimal.context method)": [[199, "decimal.Context.to_eng_string"]], "to_eng_string() (decimal.decimal method)": [[199, "decimal.Decimal.to_eng_string"]], "to_integral() (decimal.decimal method)": [[199, "decimal.Decimal.to_integral"]], "to_integral_exact() (decimal.context method)": [[199, "decimal.Context.to_integral_exact"]], "to_integral_exact() (decimal.decimal method)": [[199, "decimal.Decimal.to_integral_exact"]], "to_integral_value() (decimal.decimal method)": [[199, "decimal.Decimal.to_integral_value"]], "to_sci_string() (decimal.context method)": [[199, "decimal.Context.to_sci_string"]], "dialog (class in tkinter.commondialog)": [[202, "tkinter.commondialog.Dialog"]], "dialog (class in tkinter.simpledialog)": [[202, "tkinter.simpledialog.Dialog"]], "directory (class in tkinter.filedialog)": [[202, "tkinter.filedialog.Directory"]], "filedialog (class in tkinter.filedialog)": [[202, "tkinter.filedialog.FileDialog"]], "loadfiledialog (class in tkinter.filedialog)": [[202, "tkinter.filedialog.LoadFileDialog"]], "open (class in tkinter.filedialog)": [[202, "tkinter.filedialog.Open"]], "saveas (class in tkinter.filedialog)": [[202, "tkinter.filedialog.SaveAs"]], "savefiledialog (class in tkinter.filedialog)": [[202, "tkinter.filedialog.SaveFileDialog"]], "askdirectory() (in module tkinter.filedialog)": [[202, "tkinter.filedialog.askdirectory"]], "askfloat() (in module tkinter.simpledialog)": [[202, "tkinter.simpledialog.askfloat"]], "askinteger() (in module tkinter.simpledialog)": [[202, "tkinter.simpledialog.askinteger"]], "askopenfile() (in module tkinter.filedialog)": [[202, "tkinter.filedialog.askopenfile"]], "askopenfilename() (in module tkinter.filedialog)": [[202, "tkinter.filedialog.askopenfilename"]], "askopenfilenames() (in module tkinter.filedialog)": [[202, "tkinter.filedialog.askopenfilenames"]], "askopenfiles() (in module tkinter.filedialog)": [[202, "tkinter.filedialog.askopenfiles"]], "asksaveasfile() (in module tkinter.filedialog)": [[202, "tkinter.filedialog.asksaveasfile"]], "asksaveasfilename() (in module tkinter.filedialog)": [[202, "tkinter.filedialog.asksaveasfilename"]], "askstring() (in module tkinter.simpledialog)": [[202, "tkinter.simpledialog.askstring"]], "body() (tkinter.simpledialog.dialog method)": [[202, "tkinter.simpledialog.Dialog.body"]], "buttonbox() (tkinter.simpledialog.dialog method)": [[202, "tkinter.simpledialog.Dialog.buttonbox"]], "cancel_command() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.cancel_command"]], "dirs_double_event() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.dirs_double_event"]], "dirs_select_event() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.dirs_select_event"]], "files_double_event() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.files_double_event"]], "files_select_event() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.files_select_event"]], "filter_command() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.filter_command"]], "get_filter() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.get_filter"]], "get_selection() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.get_selection"]], "go() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.go"]], "ok_command() (tkinter.filedialog.loadfiledialog method)": [[202, "tkinter.filedialog.LoadFileDialog.ok_command"]], "ok_command() (tkinter.filedialog.savefiledialog method)": [[202, "tkinter.filedialog.SaveFileDialog.ok_command"]], "ok_event() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.ok_event"]], "quit() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.quit"]], "set_filter() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.set_filter"]], "set_selection() (tkinter.filedialog.filedialog method)": [[202, "tkinter.filedialog.FileDialog.set_selection"]], "show() (tkinter.commondialog.dialog method)": [[202, "tkinter.commondialog.Dialog.show"]], "tkinter.commondialog": [[202, "module-tkinter.commondialog"]], "tkinter.filedialog": [[202, "module-tkinter.filedialog"]], "tkinter.simpledialog": [[202, "module-tkinter.simpledialog"]], "differ (class in difflib)": [[203, "difflib.Differ"]], "htmldiff (class in difflib)": [[203, "difflib.HtmlDiff"]], "is_character_junk() (in module difflib)": [[203, "difflib.IS_CHARACTER_JUNK"]], "is_line_junk() (in module difflib)": [[203, "difflib.IS_LINE_JUNK"]], "sequencematcher (class in difflib)": [[203, "difflib.SequenceMatcher"]], "__init__() (difflib.htmldiff method)": [[203, "difflib.HtmlDiff.__init__"]], "compare() (difflib.differ method)": [[203, "difflib.Differ.compare"]], "context_diff() (in module difflib)": [[203, "difflib.context_diff"]], "diff_bytes() (in module difflib)": [[203, "difflib.diff_bytes"]], "difflib": [[203, "module-difflib"]], "find_longest_match() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.find_longest_match"]], "get_close_matches() (in module difflib)": [[203, "difflib.get_close_matches"]], "get_grouped_opcodes() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.get_grouped_opcodes"]], "get_matching_blocks() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.get_matching_blocks"]], "get_opcodes() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.get_opcodes"]], "make_file() (difflib.htmldiff method)": [[203, "difflib.HtmlDiff.make_file"]], "make_table() (difflib.htmldiff method)": [[203, "difflib.HtmlDiff.make_table"]], "ndiff() (in module difflib)": [[203, "difflib.ndiff"]], "quick_ratio() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.quick_ratio"]], "ratio() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.ratio"]], "real_quick_ratio() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.real_quick_ratio"]], "restore() (in module difflib)": [[203, "difflib.restore"]], "set_seq1() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.set_seq1"]], "set_seq2() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.set_seq2"]], "set_seqs() (difflib.sequencematcher method)": [[203, "difflib.SequenceMatcher.set_seqs"]], "unified_diff() (in module difflib)": [[203, "difflib.unified_diff"]], "--show-caches": [[204, "cmdoption-dis-C"]], "async_gen_wrap (opcode)": [[204, "opcode-ASYNC_GEN_WRAP"]], "before_async_with (opcode)": [[204, "opcode-BEFORE_ASYNC_WITH"]], "before_with (opcode)": [[204, "opcode-BEFORE_WITH"]], "binary_op (opcode)": [[204, "opcode-BINARY_OP"]], "binary_subscr (opcode)": [[204, "opcode-BINARY_SUBSCR"]], "build_const_key_map (opcode)": [[204, "opcode-BUILD_CONST_KEY_MAP"]], "build_list (opcode)": [[204, "opcode-BUILD_LIST"]], "build_map (opcode)": [[204, "opcode-BUILD_MAP"]], "build_set (opcode)": [[204, "opcode-BUILD_SET"]], "build_slice (opcode)": [[204, "opcode-BUILD_SLICE"]], "build_string (opcode)": [[204, "opcode-BUILD_STRING"]], "build_tuple (opcode)": [[204, "opcode-BUILD_TUPLE"]], "bytecode (class in dis)": [[204, "dis.Bytecode"]], "bytecode.codeobj (in module dis)": [[204, "dis.Bytecode.codeobj"]], "bytecode.first_line (in module dis)": [[204, "dis.Bytecode.first_line"]], "cache (opcode)": [[204, "opcode-CACHE"]], "call (opcode)": [[204, "opcode-CALL"]], "call_function_ex (opcode)": [[204, "opcode-CALL_FUNCTION_EX"]], "check_eg_match (opcode)": [[204, "opcode-CHECK_EG_MATCH"]], "check_exc_match (opcode)": [[204, "opcode-CHECK_EXC_MATCH"]], "compare_op (opcode)": [[204, "opcode-COMPARE_OP"]], "contains_op (opcode)": [[204, "opcode-CONTAINS_OP"]], "copy (opcode)": [[204, "opcode-COPY"]], "copy_free_vars (opcode)": [[204, "opcode-COPY_FREE_VARS"]], "delete_attr (opcode)": [[204, "opcode-DELETE_ATTR"]], "delete_deref (opcode)": [[204, "opcode-DELETE_DEREF"]], "delete_fast (opcode)": [[204, "opcode-DELETE_FAST"]], "delete_global (opcode)": [[204, "opcode-DELETE_GLOBAL"]], "delete_name (opcode)": [[204, "opcode-DELETE_NAME"]], "delete_subscr (opcode)": [[204, "opcode-DELETE_SUBSCR"]], "dict_merge (opcode)": [[204, "opcode-DICT_MERGE"]], "dict_update (opcode)": [[204, "opcode-DICT_UPDATE"]], "end_async_for (opcode)": [[204, "opcode-END_ASYNC_FOR"]], "extended_arg (opcode)": [[204, "opcode-EXTENDED_ARG"]], "format_value (opcode)": [[204, "opcode-FORMAT_VALUE"]], "for_iter (opcode)": [[204, "opcode-FOR_ITER"]], "get_aiter (opcode)": [[204, "opcode-GET_AITER"]], "get_anext (opcode)": [[204, "opcode-GET_ANEXT"]], "get_awaitable (opcode)": [[204, "opcode-GET_AWAITABLE"]], "get_iter (opcode)": [[204, "opcode-GET_ITER"]], "get_len (opcode)": [[204, "opcode-GET_LEN"]], "get_yield_from_iter (opcode)": [[204, "opcode-GET_YIELD_FROM_ITER"]], "have_argument (opcode)": [[204, "opcode-HAVE_ARGUMENT"]], "import_from (opcode)": [[204, "opcode-IMPORT_FROM"]], "import_name (opcode)": [[204, "opcode-IMPORT_NAME"]], "import_star (opcode)": [[204, "opcode-IMPORT_STAR"]], "is_op (opcode)": [[204, "opcode-IS_OP"]], "instruction (class in dis)": [[204, "dis.Instruction"]], "instruction.arg (in module dis)": [[204, "dis.Instruction.arg"]], "instruction.argrepr (in module dis)": [[204, "dis.Instruction.argrepr"]], "instruction.argval (in module dis)": [[204, "dis.Instruction.argval"]], "instruction.is_jump_target (in module dis)": [[204, "dis.Instruction.is_jump_target"]], "instruction.offset (in module dis)": [[204, "dis.Instruction.offset"]], "instruction.opcode (in module dis)": [[204, "dis.Instruction.opcode"]], "instruction.opname (in module dis)": [[204, "dis.Instruction.opname"]], "instruction.positions (in module dis)": [[204, "dis.Instruction.positions"]], "instruction.starts_line (in module dis)": [[204, "dis.Instruction.starts_line"]], "jump_backward (opcode)": [[204, "opcode-JUMP_BACKWARD"]], "jump_backward_no_interrupt (opcode)": [[204, "opcode-JUMP_BACKWARD_NO_INTERRUPT"]], "jump_forward (opcode)": [[204, "opcode-JUMP_FORWARD"]], "jump_if_false_or_pop (opcode)": [[204, "opcode-JUMP_IF_FALSE_OR_POP"]], "jump_if_true_or_pop (opcode)": [[204, "opcode-JUMP_IF_TRUE_OR_POP"]], "kw_names (opcode)": [[204, "opcode-KW_NAMES"]], "list_append (opcode)": [[204, "opcode-LIST_APPEND"]], "list_extend (opcode)": [[204, "opcode-LIST_EXTEND"]], "list_to_tuple (opcode)": [[204, "opcode-LIST_TO_TUPLE"]], "load_assertion_error (opcode)": [[204, "opcode-LOAD_ASSERTION_ERROR"]], "load_attr (opcode)": [[204, "opcode-LOAD_ATTR"]], "load_build_class (opcode)": [[204, "opcode-LOAD_BUILD_CLASS"]], "load_classderef (opcode)": [[204, "opcode-LOAD_CLASSDEREF"]], "load_closure (opcode)": [[204, "opcode-LOAD_CLOSURE"]], "load_const (opcode)": [[204, "opcode-LOAD_CONST"]], "load_deref (opcode)": [[204, "opcode-LOAD_DEREF"]], "load_fast (opcode)": [[204, "opcode-LOAD_FAST"]], "load_global (opcode)": [[204, "opcode-LOAD_GLOBAL"]], "load_method (opcode)": [[204, "opcode-LOAD_METHOD"]], "load_name (opcode)": [[204, "opcode-LOAD_NAME"]], "make_cell (opcode)": [[204, "opcode-MAKE_CELL"]], "make_function (opcode)": [[204, "opcode-MAKE_FUNCTION"]], "map_add (opcode)": [[204, "opcode-MAP_ADD"]], "match_class (opcode)": [[204, "opcode-MATCH_CLASS"]], "match_keys (opcode)": [[204, "opcode-MATCH_KEYS"]], "match_mapping (opcode)": [[204, "opcode-MATCH_MAPPING"]], "match_sequence (opcode)": [[204, "opcode-MATCH_SEQUENCE"]], "nop (opcode)": [[204, "opcode-NOP"]], "pep 626": [[204, "index-0"], [443, "index-62"], [487, "index-4"]], "pop_except (opcode)": [[204, "opcode-POP_EXCEPT"]], "pop_jump_backward_if_false (opcode)": [[204, "opcode-POP_JUMP_BACKWARD_IF_FALSE"]], "pop_jump_backward_if_none (opcode)": [[204, "opcode-POP_JUMP_BACKWARD_IF_NONE"]], "pop_jump_backward_if_not_none (opcode)": [[204, "opcode-POP_JUMP_BACKWARD_IF_NOT_NONE"]], "pop_jump_backward_if_true (opcode)": [[204, "opcode-POP_JUMP_BACKWARD_IF_TRUE"]], "pop_jump_forward_if_false (opcode)": [[204, "opcode-POP_JUMP_FORWARD_IF_FALSE"]], "pop_jump_forward_if_none (opcode)": [[204, "opcode-POP_JUMP_FORWARD_IF_NONE"]], "pop_jump_forward_if_not_none (opcode)": [[204, "opcode-POP_JUMP_FORWARD_IF_NOT_NONE"]], "pop_jump_forward_if_true (opcode)": [[204, "opcode-POP_JUMP_FORWARD_IF_TRUE"]], "pop_top (opcode)": [[204, "opcode-POP_TOP"]], "precall (opcode)": [[204, "opcode-PRECALL"]], "prep_reraise_star (opcode)": [[204, "opcode-PREP_RERAISE_STAR"]], "print_expr (opcode)": [[204, "opcode-PRINT_EXPR"]], "push_exc_info (opcode)": [[204, "opcode-PUSH_EXC_INFO"]], "push_null (opcode)": [[204, "opcode-PUSH_NULL"]], "positions (class in dis)": [[204, "dis.Positions"]], "positions.col_offset (in module dis)": [[204, "dis.Positions.col_offset"]], "positions.end_col_offset (in module dis)": [[204, "dis.Positions.end_col_offset"]], "positions.end_lineno (in module dis)": [[204, "dis.Positions.end_lineno"]], "positions.lineno (in module dis)": [[204, "dis.Positions.lineno"]], "raise_varargs (opcode)": [[204, "opcode-RAISE_VARARGS"]], "reraise (opcode)": [[204, "opcode-RERAISE"]], "resume (opcode)": [[204, "opcode-RESUME"]], "return_generator (opcode)": [[204, "opcode-RETURN_GENERATOR"]], "return_value (opcode)": [[204, "opcode-RETURN_VALUE"]], "send (opcode)": [[204, "opcode-SEND"]], "setup_annotations (opcode)": [[204, "opcode-SETUP_ANNOTATIONS"]], "set_add (opcode)": [[204, "opcode-SET_ADD"]], "set_update (opcode)": [[204, "opcode-SET_UPDATE"]], "store_attr (opcode)": [[204, "opcode-STORE_ATTR"]], "store_deref (opcode)": [[204, "opcode-STORE_DEREF"]], "store_fast (opcode)": [[204, "opcode-STORE_FAST"]], "store_global (opcode)": [[204, "opcode-STORE_GLOBAL"]], "store_name (opcode)": [[204, "opcode-STORE_NAME"]], "store_subscr (opcode)": [[204, "opcode-STORE_SUBSCR"]], "swap (opcode)": [[204, "opcode-SWAP"]], "unary_invert (opcode)": [[204, "opcode-UNARY_INVERT"]], "unary_negative (opcode)": [[204, "opcode-UNARY_NEGATIVE"]], "unary_not (opcode)": [[204, "opcode-UNARY_NOT"]], "unary_positive (opcode)": [[204, "opcode-UNARY_POSITIVE"]], "unpack_ex (opcode)": [[204, "opcode-UNPACK_EX"]], "unpack_sequence (opcode)": [[204, "opcode-UNPACK_SEQUENCE"]], "with_except_start (opcode)": [[204, "opcode-WITH_EXCEPT_START"]], "yield_value (opcode)": [[204, "opcode-YIELD_VALUE"]], "cmp_op (in module dis)": [[204, "dis.cmp_op"]], "code_info() (in module dis)": [[204, "dis.code_info"]], "dis": [[204, "module-dis"]], "dis command line option": [[204, "cmdoption-dis-C"], [204, "cmdoption-dis-h"]], "dis() (dis.bytecode method)": [[204, "dis.Bytecode.dis"]], "dis() (in module dis)": [[204, "dis.dis"]], "disassemble() (in module dis)": [[204, "dis.disassemble"]], "disco() (in module dis)": [[204, "dis.disco"]], "distb() (in module dis)": [[204, "dis.distb"]], "findlabels() (in module dis)": [[204, "dis.findlabels"]], "findlinestarts() (in module dis)": [[204, "dis.findlinestarts"]], "from_traceback() (dis.bytecode class method)": [[204, "dis.Bytecode.from_traceback"]], "get_instructions() (in module dis)": [[204, "dis.get_instructions"]], "hascompare (in module dis)": [[204, "dis.hascompare"]], "hasconst (in module dis)": [[204, "dis.hasconst"]], "hasfree (in module dis)": [[204, "dis.hasfree"]], "hasjabs (in module dis)": [[204, "dis.hasjabs"]], "hasjrel (in module dis)": [[204, "dis.hasjrel"]], "haslocal (in module dis)": [[204, "dis.haslocal"]], "hasname (in module dis)": [[204, "dis.hasname"]], "info() (dis.bytecode method)": [[204, "dis.Bytecode.info"]], "opmap (in module dis)": [[204, "dis.opmap"]], "opname (in module dis)": [[204, "dis.opname"]], "show_code() (in module dis)": [[204, "dis.show_code"]], "stack_effect() (in module dis)": [[204, "dis.stack_effect"]], "distutils": [[206, "module-distutils"]], "# (hash)": [[207, "index-4"], [334, "index-38"], [349, "index-2"], [360, "index-36"], [360, "index-46"], [361, "index-7"], [450, "index-4"], [450, "index-5"], [464, "index-0"]], "- (minus)": [[207, "index-4"], [234, "index-2"], [245, "index-1"], [334, "index-11"], [360, "index-13"], [360, "index-36"], [360, "index-46"], [361, "index-4"], [445, "index-60"], [445, "index-70"]], "<blankline>": [[207, "index-2"]], "comparison_flags (in module doctest)": [[207, "doctest.COMPARISON_FLAGS"]], "dont_accept_blankline (in module doctest)": [[207, "doctest.DONT_ACCEPT_BLANKLINE"]], "dont_accept_true_for_1 (in module doctest)": [[207, "doctest.DONT_ACCEPT_TRUE_FOR_1"]], "debugrunner (class in doctest)": [[207, "doctest.DebugRunner"]], "docfilesuite() (in module doctest)": [[207, "doctest.DocFileSuite"]], "doctest (class in doctest)": [[207, "doctest.DocTest"]], "doctestfailure": [[207, "doctest.DocTestFailure"]], "doctestfinder (class in doctest)": [[207, "doctest.DocTestFinder"]], "doctestparser (class in doctest)": [[207, "doctest.DocTestParser"]], "doctestrunner (class in doctest)": [[207, "doctest.DocTestRunner"]], "doctestsuite() (in module doctest)": [[207, "doctest.DocTestSuite"]], "ellipsis (in module doctest)": [[207, "doctest.ELLIPSIS"]], "example (class in doctest)": [[207, "doctest.Example"]], "fail_fast (in module doctest)": [[207, "doctest.FAIL_FAST"]], "ignore_exception_detail (in module doctest)": [[207, "doctest.IGNORE_EXCEPTION_DETAIL"]], "normalize_whitespace (in module doctest)": [[207, "doctest.NORMALIZE_WHITESPACE"]], "outputchecker (class in doctest)": [[207, "doctest.OutputChecker"]], "reporting_flags (in module doctest)": [[207, "doctest.REPORTING_FLAGS"]], "report_cdiff (in module doctest)": [[207, "doctest.REPORT_CDIFF"]], "report_ndiff (in module doctest)": [[207, "doctest.REPORT_NDIFF"]], "report_only_first_failure (in module doctest)": [[207, "doctest.REPORT_ONLY_FIRST_FAILURE"]], "report_udiff (in module doctest)": [[207, "doctest.REPORT_UDIFF"]], "skip (in module doctest)": [[207, "doctest.SKIP"]], "unexpectedexception": [[207, "doctest.UnexpectedException"]], "check_output() (doctest.outputchecker method)": [[207, "doctest.OutputChecker.check_output"]], "debug() (in module doctest)": [[207, "doctest.debug"]], "debug_src() (in module doctest)": [[207, "doctest.debug_src"]], "docstring (doctest.doctest attribute)": [[207, "doctest.DocTest.docstring"]], "doctest": [[207, "module-doctest"]], "example (doctest.doctestfailure attribute)": [[207, "doctest.DocTestFailure.example"]], "example (doctest.unexpectedexception attribute)": [[207, "doctest.UnexpectedException.example"]], "examples (doctest.doctest attribute)": [[207, "doctest.DocTest.examples"]], "exc_info (doctest.unexpectedexception attribute)": [[207, "doctest.UnexpectedException.exc_info"]], "exc_msg (doctest.example attribute)": [[207, "doctest.Example.exc_msg"]], "failureexception": [[207, "doctest.failureException"]], "filename (doctest.doctest attribute)": [[207, "doctest.DocTest.filename"]], "find() (doctest.doctestfinder method)": [[207, "doctest.DocTestFinder.find"]], "get_doctest() (doctest.doctestparser method)": [[207, "doctest.DocTestParser.get_doctest"]], "get_examples() (doctest.doctestparser method)": [[207, "doctest.DocTestParser.get_examples"]], "globs (doctest.doctest attribute)": [[207, "doctest.DocTest.globs"]], "got (doctest.doctestfailure attribute)": [[207, "doctest.DocTestFailure.got"]], "in doctests": [[207, "index-3"], [207, "index-4"]], "indent (doctest.example attribute)": [[207, "doctest.Example.indent"]], "interpreter prompt": [[207, "index-0"], [368, "index-27"]], "lineno (doctest.doctest attribute)": [[207, "doctest.DocTest.lineno"]], "lineno (doctest.example attribute)": [[207, "doctest.Example.lineno"]], "marker": [[207, "index-1"], [396, "index-1"]], "name (doctest.doctest attribute)": [[207, "doctest.DocTest.name"]], "options (doctest.example attribute)": [[207, "doctest.Example.options"]], "output_difference() (doctest.outputchecker method)": [[207, "doctest.OutputChecker.output_difference"]], "parse() (doctest.doctestparser method)": [[207, "doctest.DocTestParser.parse"]], "register_optionflag() (in module doctest)": [[207, "doctest.register_optionflag"]], "report_failure() (doctest.doctestrunner method)": [[207, "doctest.DocTestRunner.report_failure"]], "report_start() (doctest.doctestrunner method)": [[207, "doctest.DocTestRunner.report_start"]], "report_success() (doctest.doctestrunner method)": [[207, "doctest.DocTestRunner.report_success"]], "report_unexpected_exception() (doctest.doctestrunner method)": [[207, "doctest.DocTestRunner.report_unexpected_exception"]], "run() (doctest.doctestrunner method)": [[207, "doctest.DocTestRunner.run"]], "run_docstring_examples() (in module doctest)": [[207, "doctest.run_docstring_examples"]], "script_from_examples() (in module doctest)": [[207, "doctest.script_from_examples"]], "set_unittest_reportflags() (in module doctest)": [[207, "doctest.set_unittest_reportflags"]], "source (doctest.example attribute)": [[207, "doctest.Example.source"]], "summarize() (doctest.doctestrunner method)": [[207, "doctest.DocTestRunner.summarize"]], "test (doctest.doctestfailure attribute)": [[207, "doctest.DocTestFailure.test"]], "test (doctest.unexpectedexception attribute)": [[207, "doctest.UnexpectedException.test"]], "testfile() (in module doctest)": [[207, "doctest.testfile"]], "testmod() (in module doctest)": [[207, "doctest.testmod"]], "testsource() (in module doctest)": [[207, "doctest.testsource"]], "want (doctest.example attribute)": [[207, "doctest.Example.want"]], "rfc 2046": [[208, "index-4"], [211, "index-0"], [216, "index-5"]], "rfc 2047": [[208, "index-5"], [216, "index-11"], [216, "index-13"], [216, "index-6"], [216, "index-8"], [217, "index-1"], [217, "index-4"], [217, "index-6"], [222, "index-3"], [222, "index-4"], [223, "index-1"], [489, "index-11"], [489, "index-8"]], "rfc 2183": [[208, "index-6"], [210, "index-11"], [219, "index-10"]], "rfc 2231": [[208, "index-7"], [210, "index-10"], [210, "index-2"], [210, "index-3"], [210, "index-7"], [210, "index-8"], [216, "index-7"], [219, "index-4"], [219, "index-5"], [219, "index-9"], [223, "index-5"], [223, "index-6"], [223, "index-7"], [223, "index-8"], [223, "index-9"]], "rfc 2821": [[208, "index-0"]], "rfc 5322": [[208, "index-1"], [210, "index-0"], [213, "index-0"], [215, "index-0"], [215, "index-1"], [217, "index-0"], [217, "index-11"], [217, "index-12"], [217, "index-14"], [217, "index-2"], [217, "index-3"], [217, "index-5"], [217, "index-7"], [217, "index-8"], [219, "index-0"], [219, "index-2"], [221, "index-0"], [222, "index-0"], [222, "index-1"], [222, "index-2"], [222, "index-5"], [222, "index-6"], [222, "index-9"], [351, "index-11"]], "rfc 6532": [[208, "index-2"], [219, "index-1"], [221, "index-1"], [222, "index-7"], [492, "index-31"]], "email": [[208, "module-email"]], "charset (class in email.charset)": [[209, "email.charset.Charset"]], "__eq__() (email.charset.charset method)": [[209, "email.charset.Charset.__eq__"]], "__ne__() (email.charset.charset method)": [[209, "email.charset.Charset.__ne__"]], "__str__() (email.charset.charset method)": [[209, "email.charset.Charset.__str__"]], "add_alias() (in module email.charset)": [[209, "email.charset.add_alias"]], "add_charset() (in module email.charset)": [[209, "email.charset.add_charset"]], "add_codec() (in module email.charset)": [[209, "email.charset.add_codec"]], "body_encode() (email.charset.charset method)": [[209, "email.charset.Charset.body_encode"]], "body_encoding (email.charset.charset attribute)": [[209, "email.charset.Charset.body_encoding"]], "email.charset": [[209, "module-email.charset"]], "get_body_encoding() (email.charset.charset method)": [[209, "email.charset.Charset.get_body_encoding"]], "get_output_charset() (email.charset.charset method)": [[209, "email.charset.Charset.get_output_charset"]], "header_encode() (email.charset.charset method)": [[209, "email.charset.Charset.header_encode"]], "header_encode_lines() (email.charset.charset method)": [[209, "email.charset.Charset.header_encode_lines"]], "header_encoding (email.charset.charset attribute)": [[209, "email.charset.Charset.header_encoding"]], "input_charset (email.charset.charset attribute)": [[209, "email.charset.Charset.input_charset"]], "input_codec (email.charset.charset attribute)": [[209, "email.charset.Charset.input_codec"]], "output_charset (email.charset.charset attribute)": [[209, "email.charset.Charset.output_charset"]], "output_codec (email.charset.charset attribute)": [[209, "email.charset.Charset.output_codec"]], "message (class in email.message)": [[210, "email.message.Message"]], "rfc 2822": [[210, "index-1"], [216, "index-0"], [216, "index-10"], [216, "index-12"], [216, "index-2"], [216, "index-3"], [216, "index-9"], [223, "index-0"], [223, "index-10"], [223, "index-2"], [223, "index-3"], [223, "index-4"], [256, "index-2"], [259, "index-2"], [286, "index-0"], [381, "index-10"], [381, "index-22"], [466, "index-1"], [479, "index-20"]], "__bytes__() (email.message.message method)": [[210, "email.message.Message.__bytes__"]], "__contains__() (email.message.message method)": [[210, "email.message.Message.__contains__"]], "__delitem__() (email.message.message method)": [[210, "email.message.Message.__delitem__"]], "__getitem__() (email.message.message method)": [[210, "email.message.Message.__getitem__"]], "__len__() (email.message.message method)": [[210, "email.message.Message.__len__"]], "__setitem__() (email.message.message method)": [[210, "email.message.Message.__setitem__"]], "__str__() (email.message.message method)": [[210, "email.message.Message.__str__"]], "add_header() (email.message.message method)": [[210, "email.message.Message.add_header"]], "as_bytes() (email.message.message method)": [[210, "email.message.Message.as_bytes"]], "as_string() (email.message.message method)": [[210, "email.message.Message.as_string"]], "attach() (email.message.message method)": [[210, "email.message.Message.attach"]], "defects (email.message.message attribute)": [[210, "email.message.Message.defects"]], "del_param() (email.message.message method)": [[210, "email.message.Message.del_param"]], "epilogue (email.message.message attribute)": [[210, "email.message.Message.epilogue"]], "get() (email.message.message method)": [[210, "email.message.Message.get"]], "get_all() (email.message.message method)": [[210, "email.message.Message.get_all"]], "get_boundary() (email.message.message method)": [[210, "email.message.Message.get_boundary"]], "get_charset() (email.message.message method)": [[210, "email.message.Message.get_charset"]], "get_charsets() (email.message.message method)": [[210, "email.message.Message.get_charsets"]], "get_content_charset() (email.message.message method)": [[210, "email.message.Message.get_content_charset"]], "get_content_disposition() (email.message.message method)": [[210, "email.message.Message.get_content_disposition"]], "get_content_maintype() (email.message.message method)": [[210, "email.message.Message.get_content_maintype"]], "get_content_subtype() (email.message.message method)": [[210, "email.message.Message.get_content_subtype"]], "get_content_type() (email.message.message method)": [[210, "email.message.Message.get_content_type"]], "get_default_type() (email.message.message method)": [[210, "email.message.Message.get_default_type"]], "get_filename() (email.message.message method)": [[210, "email.message.Message.get_filename"]], "get_param() (email.message.message method)": [[210, "email.message.Message.get_param"]], "get_params() (email.message.message method)": [[210, "email.message.Message.get_params"]], "get_payload() (email.message.message method)": [[210, "email.message.Message.get_payload"]], "get_unixfrom() (email.message.message method)": [[210, "email.message.Message.get_unixfrom"]], "is_multipart() (email.message.message method)": [[210, "email.message.Message.is_multipart"]], "items() (email.message.message method)": [[210, "email.message.Message.items"]], "keys() (email.message.message method)": [[210, "email.message.Message.keys"]], "preamble (email.message.message attribute)": [[210, "email.message.Message.preamble"]], "replace_header() (email.message.message method)": [[210, "email.message.Message.replace_header"]], "set_boundary() (email.message.message method)": [[210, "email.message.Message.set_boundary"]], "set_charset() (email.message.message method)": [[210, "email.message.Message.set_charset"]], "set_default_type() (email.message.message method)": [[210, "email.message.Message.set_default_type"]], "set_param() (email.message.message method)": [[210, "email.message.Message.set_param"]], "set_payload() (email.message.message method)": [[210, "email.message.Message.set_payload"]], "set_type() (email.message.message method)": [[210, "email.message.Message.set_type"]], "set_unixfrom() (email.message.message method)": [[210, "email.message.Message.set_unixfrom"]], "values() (email.message.message method)": [[210, "email.message.Message.values"]], "walk() (email.message.message method)": [[210, "email.message.Message.walk"]], "contentmanager (class in email.contentmanager)": [[211, "email.contentmanager.ContentManager"]], "add_get_handler() (email.contentmanager.contentmanager method)": [[211, "email.contentmanager.ContentManager.add_get_handler"]], "add_set_handler() (email.contentmanager.contentmanager method)": [[211, "email.contentmanager.ContentManager.add_set_handler"]], "email.contentmanager": [[211, "module-email.contentmanager"]], "get_content() (email.contentmanager.contentmanager method)": [[211, "email.contentmanager.ContentManager.get_content"]], "get_content() (in module email.contentmanager)": [[211, "email.contentmanager.get_content"]], "raw_data_manager (in module email.contentmanager)": [[211, "email.contentmanager.raw_data_manager"]], "set_content() (email.contentmanager.contentmanager method)": [[211, "email.contentmanager.ContentManager.set_content"]], "set_content() (in module email.contentmanager)": [[211, "email.contentmanager.set_content"]], "email.encoders": [[212, "module-email.encoders"]], "encode_7or8bit() (in module email.encoders)": [[212, "email.encoders.encode_7or8bit"]], "encode_base64() (in module email.encoders)": [[212, "email.encoders.encode_base64"]], "encode_noop() (in module email.encoders)": [[212, "email.encoders.encode_noop"]], "encode_quopri() (in module email.encoders)": [[212, "email.encoders.encode_quopri"]], "boundaryerror": [[213, "email.errors.BoundaryError"]], "headerdefect": [[213, "email.errors.HeaderDefect"]], "headerparseerror": [[213, "email.errors.HeaderParseError"]], "messagedefect": [[213, "email.errors.MessageDefect"]], "messageerror": [[213, "email.errors.MessageError"]], "messageparseerror": [[213, "email.errors.MessageParseError"]], "multipartconversionerror": [[213, "email.errors.MultipartConversionError"]], "email.errors": [[213, "module-email.errors"]], "bytesgenerator (class in email.generator)": [[215, "email.generator.BytesGenerator"]], "decodedgenerator (class in email.generator)": [[215, "email.generator.DecodedGenerator"]], "generator (class in email.generator)": [[215, "email.generator.Generator"]], "clone() (email.generator.bytesgenerator method)": [[215, "email.generator.BytesGenerator.clone"]], "clone() (email.generator.generator method)": [[215, "email.generator.Generator.clone"]], "email.generator": [[215, "module-email.generator"]], "flatten() (email.generator.bytesgenerator method)": [[215, "email.generator.BytesGenerator.flatten"]], "flatten() (email.generator.generator method)": [[215, "email.generator.Generator.flatten"]], "write() (email.generator.bytesgenerator method)": [[215, "email.generator.BytesGenerator.write"]], "write() (email.generator.generator method)": [[215, "email.generator.Generator.write"]], "header (class in email.header)": [[216, "email.header.Header"]], "__eq__() (email.header.header method)": [[216, "email.header.Header.__eq__"]], "__ne__() (email.header.header method)": [[216, "email.header.Header.__ne__"]], "__str__() (email.header.header method)": [[216, "email.header.Header.__str__"]], "append() (email.header.header method)": [[216, "email.header.Header.append"]], "decode_header() (in module email.header)": [[216, "email.header.decode_header"]], "email.header": [[216, "module-email.header"]], "encode() (email.header.header method)": [[216, "email.header.Header.encode"]], "make_header() (in module email.header)": [[216, "email.header.make_header"]], "address (class in email.headerregistry)": [[217, "email.headerregistry.Address"]], "addressheader (class in email.headerregistry)": [[217, "email.headerregistry.AddressHeader"]], "baseheader (class in email.headerregistry)": [[217, "email.headerregistry.BaseHeader"]], "contentdispositionheader (class in email.headerregistry)": [[217, "email.headerregistry.ContentDispositionHeader"]], "contenttransferencoding (class in email.headerregistry)": [[217, "email.headerregistry.ContentTransferEncoding"]], "contenttypeheader (class in email.headerregistry)": [[217, "email.headerregistry.ContentTypeHeader"]], "dateheader (class in email.headerregistry)": [[217, "email.headerregistry.DateHeader"]], "group (class in email.headerregistry)": [[217, "email.headerregistry.Group"]], "headerregistry (class in email.headerregistry)": [[217, "email.headerregistry.HeaderRegistry"]], "mimeversionheader (class in email.headerregistry)": [[217, "email.headerregistry.MIMEVersionHeader"]], "parameterizedmimeheader (class in email.headerregistry)": [[217, "email.headerregistry.ParameterizedMIMEHeader"]], "rfc 5321": [[217, "index-13"], [350, "index-1"], [350, "index-6"], [350, "index-7"], [490, "index-26"]], "singleaddressheader (class in email.headerregistry)": [[217, "email.headerregistry.SingleAddressHeader"]], "unstructuredheader (class in email.headerregistry)": [[217, "email.headerregistry.UnstructuredHeader"]], "__call__() (email.headerregistry.headerregistry method)": [[217, "email.headerregistry.HeaderRegistry.__call__"]], "__getitem__() (email.headerregistry.headerregistry method)": [[217, "email.headerregistry.HeaderRegistry.__getitem__"]], "__str__() (email.headerregistry.address method)": [[217, "email.headerregistry.Address.__str__"]], "__str__() (email.headerregistry.group method)": [[217, "email.headerregistry.Group.__str__"]], "addr_spec (email.headerregistry.address attribute)": [[217, "email.headerregistry.Address.addr_spec"]], "address (email.headerregistry.singleaddressheader attribute)": [[217, "email.headerregistry.SingleAddressHeader.address"]], "addresses (email.headerregistry.addressheader attribute)": [[217, "email.headerregistry.AddressHeader.addresses"]], "addresses (email.headerregistry.group attribute)": [[217, "email.headerregistry.Group.addresses"]], "content_disposition (email.headerregistry.contentdispositionheader attribute)": [[217, "email.headerregistry.ContentDispositionHeader.content_disposition"]], "content_type (email.headerregistry.contenttypeheader attribute)": [[217, "email.headerregistry.ContentTypeHeader.content_type"]], "cte (email.headerregistry.contenttransferencoding attribute)": [[217, "email.headerregistry.ContentTransferEncoding.cte"]], "datetime (email.headerregistry.dateheader attribute)": [[217, "email.headerregistry.DateHeader.datetime"]], "defects (email.headerregistry.baseheader attribute)": [[217, "email.headerregistry.BaseHeader.defects"]], "display_name (email.headerregistry.address attribute)": [[217, "email.headerregistry.Address.display_name"]], "display_name (email.headerregistry.group attribute)": [[217, "email.headerregistry.Group.display_name"]], "domain (email.headerregistry.address attribute)": [[217, "email.headerregistry.Address.domain"]], "email.headerregistry": [[217, "module-email.headerregistry"]], "fold() (email.headerregistry.baseheader method)": [[217, "email.headerregistry.BaseHeader.fold"]], "groups (email.headerregistry.addressheader attribute)": [[217, "email.headerregistry.AddressHeader.groups"]], "maintype (email.headerregistry.contenttypeheader attribute)": [[217, "email.headerregistry.ContentTypeHeader.maintype"]], "major (email.headerregistry.mimeversionheader attribute)": [[217, "email.headerregistry.MIMEVersionHeader.major"]], "map_to_type() (email.headerregistry.headerregistry method)": [[217, "email.headerregistry.HeaderRegistry.map_to_type"]], "max_count (email.headerregistry.baseheader attribute)": [[217, "email.headerregistry.BaseHeader.max_count"]], "minor (email.headerregistry.mimeversionheader attribute)": [[217, "email.headerregistry.MIMEVersionHeader.minor"]], "name (email.headerregistry.baseheader attribute)": [[217, "email.headerregistry.BaseHeader.name"]], "params (email.headerregistry.parameterizedmimeheader attribute)": [[217, "email.headerregistry.ParameterizedMIMEHeader.params"]], "subtype (email.headerregistry.contenttypeheader attribute)": [[217, "email.headerregistry.ContentTypeHeader.subtype"]], "username (email.headerregistry.address attribute)": [[217, "email.headerregistry.Address.username"]], "version (email.headerregistry.mimeversionheader attribute)": [[217, "email.headerregistry.MIMEVersionHeader.version"]], "_structure() (in module email.iterators)": [[218, "email.iterators._structure"]], "body_line_iterator() (in module email.iterators)": [[218, "email.iterators.body_line_iterator"]], "email.iterators": [[218, "module-email.iterators"]], "typed_subpart_iterator() (in module email.iterators)": [[218, "email.iterators.typed_subpart_iterator"]], "emailmessage (class in email.message)": [[219, "email.message.EmailMessage"]], "mimepart (class in email.message)": [[219, "email.message.MIMEPart"]], "rfc 6531": [[219, "index-3"], [222, "index-8"], [350, "index-3"], [350, "index-4"], [350, "index-8"], [351, "index-3"], [492, "index-32"], [492, "index-38"], [492, "index-39"]], "__bytes__() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.__bytes__"]], "__contains__() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.__contains__"]], "__delitem__() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.__delitem__"]], "__getitem__() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.__getitem__"]], "__len__() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.__len__"]], "__setitem__() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.__setitem__"]], "__str__() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.__str__"]], "add_alternative() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.add_alternative"]], "add_attachment() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.add_attachment"]], "add_header() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.add_header"]], "add_related() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.add_related"]], "as_bytes() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.as_bytes"]], "as_string() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.as_string"]], "clear() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.clear"]], "clear_content() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.clear_content"]], "defects (email.message.emailmessage attribute)": [[219, "email.message.EmailMessage.defects"]], "del_param() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.del_param"]], "email.message": [[219, "module-email.message"]], "epilogue (email.message.emailmessage attribute)": [[219, "email.message.EmailMessage.epilogue"]], "get() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get"]], "get_all() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_all"]], "get_body() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_body"]], "get_boundary() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_boundary"]], "get_charsets() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_charsets"]], "get_content() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_content"]], "get_content_charset() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_content_charset"]], "get_content_disposition() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_content_disposition"]], "get_content_maintype() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_content_maintype"]], "get_content_subtype() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_content_subtype"]], "get_content_type() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_content_type"]], "get_default_type() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_default_type"]], "get_filename() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_filename"]], "get_unixfrom() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.get_unixfrom"]], "is_attachment() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.is_attachment"]], "is_multipart() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.is_multipart"]], "items() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.items"]], "iter_attachments() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.iter_attachments"]], "iter_parts() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.iter_parts"]], "keys() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.keys"]], "make_alternative() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.make_alternative"]], "make_mixed() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.make_mixed"]], "make_related() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.make_related"]], "preamble (email.message.emailmessage attribute)": [[219, "email.message.EmailMessage.preamble"]], "replace_header() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.replace_header"]], "set_boundary() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.set_boundary"]], "set_content() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.set_content"]], "set_default_type() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.set_default_type"]], "set_param() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.set_param"]], "set_unixfrom() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.set_unixfrom"]], "values() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.values"]], "walk() (email.message.emailmessage method)": [[219, "email.message.EmailMessage.walk"]], "mimeapplication (class in email.mime.application)": [[220, "email.mime.application.MIMEApplication"]], "mimeaudio (class in email.mime.audio)": [[220, "email.mime.audio.MIMEAudio"]], "mimebase (class in email.mime.base)": [[220, "email.mime.base.MIMEBase"]], "mimeimage (class in email.mime.image)": [[220, "email.mime.image.MIMEImage"]], "mimemessage (class in email.mime.message)": [[220, "email.mime.message.MIMEMessage"]], "mimemultipart (class in email.mime.multipart)": [[220, "email.mime.multipart.MIMEMultipart"]], "mimenonmultipart (class in email.mime.nonmultipart)": [[220, "email.mime.nonmultipart.MIMENonMultipart"]], "mimetext (class in email.mime.text)": [[220, "email.mime.text.MIMEText"]], "email.mime": [[220, "module-email.mime"]], "email.mime.application": [[220, "module-email.mime.application"]], "email.mime.audio": [[220, "module-email.mime.audio"]], "email.mime.base": [[220, "module-email.mime.base"]], "email.mime.image": [[220, "module-email.mime.image"]], "email.mime.message": [[220, "module-email.mime.message"]], "email.mime.multipart": [[220, "module-email.mime.multipart"]], "email.mime.nonmultipart": [[220, "module-email.mime.nonmultipart"]], "email.mime.text": [[220, "module-email.mime.text"]], "bytesfeedparser (class in email.parser)": [[221, "email.parser.BytesFeedParser"]], "bytesheaderparser (class in email.parser)": [[221, "email.parser.BytesHeaderParser"]], "bytesparser (class in email.parser)": [[221, "email.parser.BytesParser"]], "feedparser (class in email.parser)": [[221, "email.parser.FeedParser"]], "headerparser (class in email.parser)": [[221, "email.parser.HeaderParser"]], "parser (class in email.parser)": [[221, "email.parser.Parser"]], "close() (email.parser.bytesfeedparser method)": [[221, "email.parser.BytesFeedParser.close"]], "email.parser": [[221, "module-email.parser"]], "feed() (email.parser.bytesfeedparser method)": [[221, "email.parser.BytesFeedParser.feed"]], "message_from_binary_file() (in module email)": [[221, "email.message_from_binary_file"]], "message_from_bytes() (in module email)": [[221, "email.message_from_bytes"]], "message_from_file() (in module email)": [[221, "email.message_from_file"]], "message_from_string() (in module email)": [[221, "email.message_from_string"]], "parse() (email.parser.bytesparser method)": [[221, "email.parser.BytesParser.parse"]], "parse() (email.parser.parser method)": [[221, "email.parser.Parser.parse"]], "parsebytes() (email.parser.bytesparser method)": [[221, "email.parser.BytesParser.parsebytes"]], "parsestr() (email.parser.parser method)": [[221, "email.parser.Parser.parsestr"]], "compat32 (class in email.policy)": [[222, "email.policy.Compat32"]], "emailpolicy (class in email.policy)": [[222, "email.policy.EmailPolicy"]], "http (in module email.policy)": [[222, "email.policy.HTTP"]], "policy (class in email.policy)": [[222, "email.policy.Policy"]], "smtp (in module email.policy)": [[222, "email.policy.SMTP"]], "smtputf8 (in module email.policy)": [[222, "email.policy.SMTPUTF8"]], "clone() (email.policy.policy method)": [[222, "email.policy.Policy.clone"]], "compat32 (in module email.policy)": [[222, "email.policy.compat32"]], "content_manager (email.policy.emailpolicy attribute)": [[222, "email.policy.EmailPolicy.content_manager"]], "cte_type (email.policy.policy attribute)": [[222, "email.policy.Policy.cte_type"]], "default (in module email.policy)": [[222, "email.policy.default"]], "email.policy": [[222, "module-email.policy"]], "fold() (email.policy.compat32 method)": [[222, "email.policy.Compat32.fold"]], "fold() (email.policy.emailpolicy method)": [[222, "email.policy.EmailPolicy.fold"]], "fold() (email.policy.policy method)": [[222, "email.policy.Policy.fold"]], "fold_binary() (email.policy.compat32 method)": [[222, "email.policy.Compat32.fold_binary"]], "fold_binary() (email.policy.emailpolicy method)": [[222, "email.policy.EmailPolicy.fold_binary"]], "fold_binary() (email.policy.policy method)": [[222, "email.policy.Policy.fold_binary"]], "handle_defect() (email.policy.policy method)": [[222, "email.policy.Policy.handle_defect"]], "header_factory (email.policy.emailpolicy attribute)": [[222, "email.policy.EmailPolicy.header_factory"]], "header_fetch_parse() (email.policy.compat32 method)": [[222, "email.policy.Compat32.header_fetch_parse"]], "header_fetch_parse() (email.policy.emailpolicy method)": [[222, "email.policy.EmailPolicy.header_fetch_parse"]], "header_fetch_parse() (email.policy.policy method)": [[222, "email.policy.Policy.header_fetch_parse"]], "header_max_count() (email.policy.emailpolicy method)": [[222, "email.policy.EmailPolicy.header_max_count"]], "header_max_count() (email.policy.policy method)": [[222, "email.policy.Policy.header_max_count"]], "header_source_parse() (email.policy.compat32 method)": [[222, "email.policy.Compat32.header_source_parse"]], "header_source_parse() (email.policy.emailpolicy method)": [[222, "email.policy.EmailPolicy.header_source_parse"]], "header_source_parse() (email.policy.policy method)": [[222, "email.policy.Policy.header_source_parse"]], "header_store_parse() (email.policy.compat32 method)": [[222, "email.policy.Compat32.header_store_parse"]], "header_store_parse() (email.policy.emailpolicy method)": [[222, "email.policy.EmailPolicy.header_store_parse"]], "header_store_parse() (email.policy.policy method)": [[222, "email.policy.Policy.header_store_parse"]], "linesep (email.policy.policy attribute)": [[222, "email.policy.Policy.linesep"]], "mangle_from_ (email.policy.compat32 attribute)": [[222, "email.policy.Compat32.mangle_from_"]], "mangle_from_ (email.policy.policy attribute)": [[222, "email.policy.Policy.mangle_from_"]], "max_line_length (email.policy.policy attribute)": [[222, "email.policy.Policy.max_line_length"]], "message_factory (email.policy.policy attribute)": [[222, "email.policy.Policy.message_factory"]], "raise_on_defect (email.policy.policy attribute)": [[222, "email.policy.Policy.raise_on_defect"]], "refold_source (email.policy.emailpolicy attribute)": [[222, "email.policy.EmailPolicy.refold_source"]], "register_defect() (email.policy.policy method)": [[222, "email.policy.Policy.register_defect"]], "strict (in module email.policy)": [[222, "email.policy.strict"]], "utf8 (email.policy.emailpolicy attribute)": [[222, "email.policy.EmailPolicy.utf8"]], "collapse_rfc2231_value() (in module email.utils)": [[223, "email.utils.collapse_rfc2231_value"]], "decode_params() (in module email.utils)": [[223, "email.utils.decode_params"]], "decode_rfc2231() (in module email.utils)": [[223, "email.utils.decode_rfc2231"]], "email.utils": [[223, "module-email.utils"]], "encode_rfc2231() (in module email.utils)": [[223, "email.utils.encode_rfc2231"]], "format_datetime() (in module email.utils)": [[223, "email.utils.format_datetime"]], "formataddr() (in module email.utils)": [[223, "email.utils.formataddr"]], "formatdate() (in module email.utils)": [[223, "email.utils.formatdate"]], "getaddresses() (in module email.utils)": [[223, "email.utils.getaddresses"]], "localtime() (in module email.utils)": [[223, "email.utils.localtime"]], "make_msgid() (in module email.utils)": [[223, "email.utils.make_msgid"]], "mktime_tz() (in module email.utils)": [[223, "email.utils.mktime_tz"]], "parseaddr() (in module email.utils)": [[223, "email.utils.parseaddr"]], "parsedate() (in module email.utils)": [[223, "email.utils.parsedate"]], "parsedate_to_datetime() (in module email.utils)": [[223, "email.utils.parsedate_to_datetime"]], "parsedate_tz() (in module email.utils)": [[223, "email.utils.parsedate_tz"]], "quote() (in module email.utils)": [[223, "email.utils.quote"]], "unquote() (in module email.utils)": [[223, "email.utils.unquote"]], "pep 453": [[224, "index-0"], [484, "index-19"], [484, "index-20"], [484, "index-21"], [491, "index-1"], [491, "index-19"], [491, "index-20"], [491, "index-27"], [491, "index-42"], [491, "index-5"], [491, "index-52"]], "bootstrap() (in module ensurepip)": [[224, "ensurepip.bootstrap"]], "ensurepip": [[224, "module-ensurepip"]], "version() (in module ensurepip)": [[224, "ensurepip.version"]], "conform (enum.flagboundary attribute)": [[225, "enum.FlagBoundary.CONFORM"]], "continuous (enum.enumcheck attribute)": [[225, "enum.EnumCheck.CONTINUOUS"]], "eject (enum.flagboundary attribute)": [[225, "enum.FlagBoundary.EJECT"]], "enum (class in enum)": [[225, "enum.Enum"]], "enumcheck (class in enum)": [[225, "enum.EnumCheck"]], "enumtype (class in enum)": [[225, "enum.EnumType"]], "flag (class in enum)": [[225, "enum.Flag"]], "flagboundary (class in enum)": [[225, "enum.FlagBoundary"]], "intenum (class in enum)": [[225, "enum.IntEnum"]], "intflag (class in enum)": [[225, "enum.IntFlag"]], "keep (enum.flagboundary attribute)": [[225, "enum.FlagBoundary.KEEP"]], "named_flags (enum.enumcheck attribute)": [[225, "enum.EnumCheck.NAMED_FLAGS"]], "reprenum (class in enum)": [[225, "enum.ReprEnum"]], "strict (enum.flagboundary attribute)": [[225, "enum.FlagBoundary.STRICT"]], "strenum (class in enum)": [[225, "enum.StrEnum"]], "unique (enum.enumcheck attribute)": [[225, "enum.EnumCheck.UNIQUE"]], "__and__() (enum.flag method)": [[225, "enum.Flag.__and__"]], "__call__() (enum.enumtype method)": [[225, "enum.EnumType.__call__"]], "__contains__() (enum.enumtype method)": [[225, "enum.EnumType.__contains__"]], "__contains__() (enum.flag method)": [[225, "enum.Flag.__contains__"]], "__dir__() (enum.enum method)": [[225, "enum.Enum.__dir__"]], "__dir__() (enum.enumtype method)": [[225, "enum.EnumType.__dir__"]], "__format__() (enum.enum method)": [[225, "enum.Enum.__format__"]], "__getattr__() (enum.enumtype method)": [[225, "enum.EnumType.__getattr__"]], "__getitem__() (enum.enumtype method)": [[225, "enum.EnumType.__getitem__"]], "__init_subclass__() (enum.enum method)": [[225, "enum.Enum.__init_subclass__"]], "__iter__() (enum.enumtype method)": [[225, "enum.EnumType.__iter__"]], "__len__() (enum.enumtype method)": [[225, "enum.EnumType.__len__"]], "__or__() (enum.flag method)": [[225, "enum.Flag.__or__"]], "__repr__() (enum.enum method)": [[225, "enum.Enum.__repr__"]], "__reversed__() (enum.enumtype method)": [[225, "enum.EnumType.__reversed__"]], "__str__() (enum.enum method)": [[225, "enum.Enum.__str__"]], "__xor__() (enum.flag method)": [[225, "enum.Flag.__xor__"]], "_generate_next_value_() (enum.enum method)": [[225, "enum.Enum._generate_next_value_"]], "_ignore_ (enum.enum attribute)": [[225, "enum.Enum._ignore_"]], "_missing_() (enum.enum method)": [[225, "enum.Enum._missing_"]], "_name_ (enum.enum attribute)": [[225, "enum.Enum._name_"]], "_numeric_repr_() (enum.flag method)": [[225, "enum.Flag._numeric_repr_"]], "_order_ (enum.enum attribute)": [[225, "enum.Enum._order_"]], "_value_ (enum.enum attribute)": [[225, "enum.Enum._value_"]], "auto (class in enum)": [[225, "enum.auto"]], "enum": [[225, "module-enum"]], "global_enum() (in module enum)": [[225, "enum.global_enum"]], "member() (in module enum)": [[225, "enum.member"]], "name (enum.enum attribute)": [[225, "enum.Enum.name"]], "nonmember() (in module enum)": [[225, "enum.nonmember"]], "property() (in module enum)": [[225, "enum.property"]], "show_flag_values() (in module enum)": [[225, "enum.show_flag_values"]], "unique() (in module enum)": [[225, "enum.unique"]], "value (enum.enum attribute)": [[225, "enum.Enum.value"]], "verify() (in module enum)": [[225, "enum.verify"]], "e2big (in module errno)": [[226, "errno.E2BIG"]], "eacces (in module errno)": [[226, "errno.EACCES"]], "eaddrinuse (in module errno)": [[226, "errno.EADDRINUSE"]], "eaddrnotavail (in module errno)": [[226, "errno.EADDRNOTAVAIL"]], "eadv (in module errno)": [[226, "errno.EADV"]], "eafnosupport (in module errno)": [[226, "errno.EAFNOSUPPORT"]], "eagain (in module errno)": [[226, "errno.EAGAIN"]], "ealready (in module errno)": [[226, "errno.EALREADY"]], "ebade (in module errno)": [[226, "errno.EBADE"]], "ebadf (in module errno)": [[226, "errno.EBADF"]], "ebadfd (in module errno)": [[226, "errno.EBADFD"]], "ebadmsg (in module errno)": [[226, "errno.EBADMSG"]], "ebadr (in module errno)": [[226, "errno.EBADR"]], "ebadrqc (in module errno)": [[226, "errno.EBADRQC"]], "ebadslt (in module errno)": [[226, "errno.EBADSLT"]], "ebfont (in module errno)": [[226, "errno.EBFONT"]], "ebusy (in module errno)": [[226, "errno.EBUSY"]], "ecanceled (in module errno)": [[226, "errno.ECANCELED"]], "echild (in module errno)": [[226, "errno.ECHILD"]], "echrng (in module errno)": [[226, "errno.ECHRNG"]], "ecomm (in module errno)": [[226, "errno.ECOMM"]], "econnaborted (in module errno)": [[226, "errno.ECONNABORTED"]], "econnrefused (in module errno)": [[226, "errno.ECONNREFUSED"]], "econnreset (in module errno)": [[226, "errno.ECONNRESET"]], "edeadlk (in module errno)": [[226, "errno.EDEADLK"]], "edeadlock (in module errno)": [[226, "errno.EDEADLOCK"]], "edestaddrreq (in module errno)": [[226, "errno.EDESTADDRREQ"]], "edom (in module errno)": [[226, "errno.EDOM"]], "edotdot (in module errno)": [[226, "errno.EDOTDOT"]], "edquot (in module errno)": [[226, "errno.EDQUOT"]], "eexist (in module errno)": [[226, "errno.EEXIST"]], "efault (in module errno)": [[226, "errno.EFAULT"]], "efbig (in module errno)": [[226, "errno.EFBIG"]], "ehostdown (in module errno)": [[226, "errno.EHOSTDOWN"]], "ehostunreach (in module errno)": [[226, "errno.EHOSTUNREACH"]], "eidrm (in module errno)": [[226, "errno.EIDRM"]], "eilseq (in module errno)": [[226, "errno.EILSEQ"]], "einprogress (in module errno)": [[226, "errno.EINPROGRESS"]], "eintr (in module errno)": [[226, "errno.EINTR"]], "einval (in module errno)": [[226, "errno.EINVAL"]], "eio (in module errno)": [[226, "errno.EIO"]], "eisconn (in module errno)": [[226, "errno.EISCONN"]], "eisdir (in module errno)": [[226, "errno.EISDIR"]], "eisnam (in module errno)": [[226, "errno.EISNAM"]], "el2hlt (in module errno)": [[226, "errno.EL2HLT"]], "el2nsync (in module errno)": [[226, "errno.EL2NSYNC"]], "el3hlt (in module errno)": [[226, "errno.EL3HLT"]], "el3rst (in module errno)": [[226, "errno.EL3RST"]], "elibacc (in module errno)": [[226, "errno.ELIBACC"]], "elibbad (in module errno)": [[226, "errno.ELIBBAD"]], "elibexec (in module errno)": [[226, "errno.ELIBEXEC"]], "elibmax (in module errno)": [[226, "errno.ELIBMAX"]], "elibscn (in module errno)": [[226, "errno.ELIBSCN"]], "elnrng (in module errno)": [[226, "errno.ELNRNG"]], "eloop (in module errno)": [[226, "errno.ELOOP"]], "emfile (in module errno)": [[226, "errno.EMFILE"]], "emlink (in module errno)": [[226, "errno.EMLINK"]], "emsgsize (in module errno)": [[226, "errno.EMSGSIZE"]], "emultihop (in module errno)": [[226, "errno.EMULTIHOP"]], "enametoolong (in module errno)": [[226, "errno.ENAMETOOLONG"]], "enavail (in module errno)": [[226, "errno.ENAVAIL"]], "enetdown (in module errno)": [[226, "errno.ENETDOWN"]], "enetreset (in module errno)": [[226, "errno.ENETRESET"]], "enetunreach (in module errno)": [[226, "errno.ENETUNREACH"]], "enfile (in module errno)": [[226, "errno.ENFILE"]], "enoano (in module errno)": [[226, "errno.ENOANO"]], "enobufs (in module errno)": [[226, "errno.ENOBUFS"]], "enocsi (in module errno)": [[226, "errno.ENOCSI"]], "enodata (in module errno)": [[226, "errno.ENODATA"]], "enodev (in module errno)": [[226, "errno.ENODEV"]], "enoent (in module errno)": [[226, "errno.ENOENT"]], "enoexec (in module errno)": [[226, "errno.ENOEXEC"]], "enolck (in module errno)": [[226, "errno.ENOLCK"]], "enolink (in module errno)": [[226, "errno.ENOLINK"]], "enomem (in module errno)": [[226, "errno.ENOMEM"]], "enomsg (in module errno)": [[226, "errno.ENOMSG"]], "enonet (in module errno)": [[226, "errno.ENONET"]], "enopkg (in module errno)": [[226, "errno.ENOPKG"]], "enoprotoopt (in module errno)": [[226, "errno.ENOPROTOOPT"]], "enospc (in module errno)": [[226, "errno.ENOSPC"]], "enosr (in module errno)": [[226, "errno.ENOSR"]], "enostr (in module errno)": [[226, "errno.ENOSTR"]], "enosys (in module errno)": [[226, "errno.ENOSYS"]], "enotblk (in module errno)": [[226, "errno.ENOTBLK"]], "enotcapable (in module errno)": [[226, "errno.ENOTCAPABLE"]], "enotconn (in module errno)": [[226, "errno.ENOTCONN"]], "enotdir (in module errno)": [[226, "errno.ENOTDIR"]], "enotempty (in module errno)": [[226, "errno.ENOTEMPTY"]], "enotnam (in module errno)": [[226, "errno.ENOTNAM"]], "enotrecoverable (in module errno)": [[226, "errno.ENOTRECOVERABLE"]], "enotsock (in module errno)": [[226, "errno.ENOTSOCK"]], "enotsup (in module errno)": [[226, "errno.ENOTSUP"]], "enotty (in module errno)": [[226, "errno.ENOTTY"]], "enotuniq (in module errno)": [[226, "errno.ENOTUNIQ"]], "enxio (in module errno)": [[226, "errno.ENXIO"]], "eopnotsupp (in module errno)": [[226, "errno.EOPNOTSUPP"]], "eoverflow (in module errno)": [[226, "errno.EOVERFLOW"]], "eownerdead (in module errno)": [[226, "errno.EOWNERDEAD"]], "eperm (in module errno)": [[226, "errno.EPERM"]], "epfnosupport (in module errno)": [[226, "errno.EPFNOSUPPORT"]], "epipe (in module errno)": [[226, "errno.EPIPE"]], "eproto (in module errno)": [[226, "errno.EPROTO"]], "eprotonosupport (in module errno)": [[226, "errno.EPROTONOSUPPORT"]], "eprototype (in module errno)": [[226, "errno.EPROTOTYPE"]], "eqfull (in module errno)": [[226, "errno.EQFULL"]], "erange (in module errno)": [[226, "errno.ERANGE"]], "eremchg (in module errno)": [[226, "errno.EREMCHG"]], "eremote (in module errno)": [[226, "errno.EREMOTE"]], "eremoteio (in module errno)": [[226, "errno.EREMOTEIO"]], "erestart (in module errno)": [[226, "errno.ERESTART"]], "erofs (in module errno)": [[226, "errno.EROFS"]], "eshutdown (in module errno)": [[226, "errno.ESHUTDOWN"]], "esocktnosupport (in module errno)": [[226, "errno.ESOCKTNOSUPPORT"]], "espipe (in module errno)": [[226, "errno.ESPIPE"]], "esrch (in module errno)": [[226, "errno.ESRCH"]], "esrmnt (in module errno)": [[226, "errno.ESRMNT"]], "estale (in module errno)": [[226, "errno.ESTALE"]], "estrpipe (in module errno)": [[226, "errno.ESTRPIPE"]], "etime (in module errno)": [[226, "errno.ETIME"]], "etimedout (in module errno)": [[226, "errno.ETIMEDOUT"]], "etoomanyrefs (in module errno)": [[226, "errno.ETOOMANYREFS"]], "etxtbsy (in module errno)": [[226, "errno.ETXTBSY"]], "euclean (in module errno)": [[226, "errno.EUCLEAN"]], "eunatch (in module errno)": [[226, "errno.EUNATCH"]], "eusers (in module errno)": [[226, "errno.EUSERS"]], "ewouldblock (in module errno)": [[226, "errno.EWOULDBLOCK"]], "exdev (in module errno)": [[226, "errno.EXDEV"]], "exfull (in module errno)": [[226, "errno.EXFULL"]], "errno": [[226, "module-errno"], [227, "index-5"]], "errorcode (in module errno)": [[226, "errno.errorcode"]], "arithmeticerror": [[227, "ArithmeticError"]], "assertionerror": [[227, "AssertionError"], [451, "index-19"]], "attributeerror": [[227, "AttributeError"], [445, "index-40"]], "baseexception": [[227, "BaseException"]], "baseexceptiongroup": [[227, "BaseExceptionGroup"]], "blockingioerror": [[227, "BlockingIOError"], [273, "io.BlockingIOError"]], "brokenpipeerror": [[227, "BrokenPipeError"]], "buffererror": [[227, "BufferError"]], "byteswarning": [[227, "BytesWarning"]], "childprocesserror": [[227, "ChildProcessError"]], "connectionabortederror": [[227, "ConnectionAbortedError"]], "connectionerror": [[227, "ConnectionError"]], "connectionrefusederror": [[227, "ConnectionRefusedError"]], "connectionreseterror": [[227, "ConnectionResetError"]], "deprecationwarning": [[227, "DeprecationWarning"]], "eoferror": [[227, "EOFError"]], "encodingwarning": [[227, "EncodingWarning"]], "environmenterror": [[227, "EnvironmentError"]], "exception": [[227, "Exception"], [227, "index-2"], [443, "index-66"], [444, "index-12"], [445, "index-32"], [445, "index-33"], [445, "index-36"], [445, "index-37"], [445, "index-4"], [445, "index-40"], [445, "index-63"], [445, "index-67"], [445, "index-72"], [451, "index-19"], [451, "index-26"], [451, "index-27"], [451, "index-29"], [451, "index-34"]], "exceptiongroup": [[227, "ExceptionGroup"]], "fileexistserror": [[227, "FileExistsError"]], "filenotfounderror": [[227, "FileNotFoundError"]], "floatingpointerror": [[227, "FloatingPointError"]], "futurewarning": [[227, "FutureWarning"]], "generatorexit": [[227, "GeneratorExit"], [445, "index-33"], [445, "index-37"]], "ioerror": [[227, "IOError"]], "importerror": [[227, "ImportError"], [451, "index-34"]], "importwarning": [[227, "ImportWarning"]], "indentationerror": [[227, "IndentationError"]], "indexerror": [[227, "IndexError"]], "interruptederror": [[227, "InterruptedError"]], "isadirectoryerror": [[227, "IsADirectoryError"]], "keyerror": [[227, "KeyError"]], "keyboardinterrupt": [[227, "KeyboardInterrupt"]], "lookuperror": [[227, "LookupError"]], "memoryerror": [[227, "MemoryError"]], "modulenotfounderror": [[227, "ModuleNotFoundError"]], "nameerror": [[227, "NameError"], [445, "index-4"]], "notadirectoryerror": [[227, "NotADirectoryError"]], "notimplementederror": [[227, "NotImplementedError"]], "oserror": [[227, "OSError"]], "overflowerror": [[227, "OverflowError"]], "pep 3134": [[227, "index-3"], [485, "index-12"], [485, "index-28"], [485, "index-29"]], "pep 475": [[227, "index-8"], [239, "index-9"], [308, "index-22"], [308, "index-24"], [308, "index-25"], [308, "index-44"], [343, "index-3"], [343, "index-4"], [343, "index-5"], [343, "index-6"], [343, "index-7"], [344, "index-0"], [348, "index-0"], [348, "index-1"], [353, "index-10"], [353, "index-11"], [353, "index-12"], [353, "index-13"], [353, "index-4"], [353, "index-5"], [353, "index-7"], [353, "index-8"], [353, "index-9"], [381, "index-8"], [492, "index-15"], [492, "index-16"], [492, "index-49"]], "pep 565": [[227, "index-10"], [494, "index-19"]], "pendingdeprecationwarning": [[227, "PendingDeprecationWarning"]], "permissionerror": [[227, "PermissionError"]], "processlookuperror": [[227, "ProcessLookupError"]], "recursionerror": [[227, "RecursionError"]], "referenceerror": [[227, "ReferenceError"]], "resourcewarning": [[227, "ResourceWarning"]], "runtimeerror": [[227, "RuntimeError"]], "runtimewarning": [[227, "RuntimeWarning"]], "stopasynciteration": [[227, "StopAsyncIteration"], [445, "index-36"]], "stopiteration": [[227, "StopIteration"], [445, "index-32"], [451, "index-26"]], "syntaxerror": [[227, "SyntaxError"]], "syntaxwarning": [[227, "SyntaxWarning"]], "systemerror": [[227, "SystemError"]], "systemexit": [[227, "SystemExit"]], "taberror": [[227, "TabError"]], "typeerror": [[227, "TypeError"], [445, "index-63"]], "unboundlocalerror": [[227, "UnboundLocalError"], [444, "index-9"]], "unicodedecodeerror": [[227, "UnicodeDecodeError"]], "unicodeencodeerror": [[227, "UnicodeEncodeError"]], "unicodeerror": [[227, "UnicodeError"]], "unicodetranslateerror": [[227, "UnicodeTranslateError"]], "unicodewarning": [[227, "UnicodeWarning"]], "userwarning": [[227, "UserWarning"]], "valueerror": [[227, "ValueError"], [445, "index-72"]], "warning": [[227, "Warning"], [356, "sqlite3.Warning"]], "windowserror": [[227, "WindowsError"]], "zerodivisionerror": [[227, "ZeroDivisionError"], [445, "index-67"]], "__cause__ (baseexception attribute)": [[227, "BaseException.__cause__"]], "__cause__ (exception attribute)": [[227, "index-2"], [451, "index-29"]], "__context__ (baseexception attribute)": [[227, "BaseException.__context__"]], "__context__ (exception attribute)": [[227, "index-2"], [451, "index-29"]], "__notes__ (baseexception attribute)": [[227, "BaseException.__notes__"]], "__suppress_context__ (baseexception attribute)": [[227, "BaseException.__suppress_context__"]], "__suppress_context__ (exception attribute)": [[227, "index-2"]], "__traceback__ (baseexception attribute)": [[227, "BaseException.__traceback__"]], "add_note() (baseexception method)": [[227, "BaseException.add_note"]], "args (baseexception attribute)": [[227, "BaseException.args"]], "assert": [[227, "index-4"], [451, "index-18"]], "chaining": [[227, "index-2"], [360, "index-7"], [445, "index-78"], [451, "index-29"]], "characters_written (blockingioerror attribute)": [[227, "BlockingIOError.characters_written"]], "code (systemexit attribute)": [[227, "SystemExit.code"]], "derive() (baseexceptiongroup method)": [[227, "BaseExceptionGroup.derive"]], "encoding (unicodeerror attribute)": [[227, "UnicodeError.encoding"]], "end (unicodeerror attribute)": [[227, "UnicodeError.end"]], "end_lineno (syntaxerror attribute)": [[227, "SyntaxError.end_lineno"]], "end_offset (syntaxerror attribute)": [[227, "SyntaxError.end_offset"]], "errno (oserror attribute)": [[227, "OSError.errno"]], "except": [[227, "index-0"], [442, "index-9"]], "exceptions (baseexceptiongroup attribute)": [[227, "BaseExceptionGroup.exceptions"]], "filename (oserror attribute)": [[227, "OSError.filename"]], "filename (syntaxerror attribute)": [[227, "SyntaxError.filename"]], "filename2 (oserror attribute)": [[227, "OSError.filename2"]], "lineno (syntaxerror attribute)": [[227, "SyntaxError.lineno"]], "message (baseexceptiongroup attribute)": [[227, "BaseExceptionGroup.message"]], "name (importerror attribute)": [[227, "ImportError.name"]], "object (unicodeerror attribute)": [[227, "UnicodeError.object"]], "offset (syntaxerror attribute)": [[227, "SyntaxError.offset"]], "path (importerror attribute)": [[227, "ImportError.path"]], "raise": [[227, "index-1"], [451, "index-27"]], "reason (unicodeerror attribute)": [[227, "UnicodeError.reason"]], "split() (baseexceptiongroup method)": [[227, "BaseExceptionGroup.split"]], "start (unicodeerror attribute)": [[227, "UnicodeError.start"]], "strerror (oserror attribute)": [[227, "OSError.strerror"]], "subgroup() (baseexceptiongroup method)": [[227, "BaseExceptionGroup.subgroup"]], "text (syntaxerror attribute)": [[227, "SyntaxError.text"]], "try": [[227, "index-0"], [442, "index-9"], [443, "index-67"]], "value (stopiteration attribute)": [[227, "StopIteration.value"]], "winerror (oserror attribute)": [[227, "OSError.winerror"]], "with_traceback() (baseexception method)": [[227, "BaseException.with_traceback"]], "cancel_dump_traceback_later() (in module faulthandler)": [[228, "faulthandler.cancel_dump_traceback_later"]], "disable() (in module faulthandler)": [[228, "faulthandler.disable"]], "dump_traceback() (in module faulthandler)": [[228, "faulthandler.dump_traceback"]], "dump_traceback_later() (in module faulthandler)": [[228, "faulthandler.dump_traceback_later"]], "enable() (in module faulthandler)": [[228, "faulthandler.enable"]], "faulthandler": [[228, "module-faulthandler"]], "is_enabled() (in module faulthandler)": [[228, "faulthandler.is_enabled"]], "register() (in module faulthandler)": [[228, "faulthandler.register"]], "unregister() (in module faulthandler)": [[228, "faulthandler.unregister"]], "i/o control": [[229, "index-0"], [239, "index-8"], [353, "index-6"], [376, "index-0"]], "lock_ex (in module fcntl)": [[229, "fcntl.LOCK_EX"]], "lock_nb (in module fcntl)": [[229, "fcntl.LOCK_NB"]], "lock_sh (in module fcntl)": [[229, "fcntl.LOCK_SH"]], "lock_un (in module fcntl)": [[229, "fcntl.LOCK_UN"]], "unix": [[229, "index-0"], [452, "index-4"]], "fcntl": [[229, "module-fcntl"]], "fcntl() (in module fcntl)": [[229, "fcntl.fcntl"]], "file control": [[229, "index-0"]], "flock() (in module fcntl)": [[229, "fcntl.flock"]], "ioctl() (in module fcntl)": [[229, "fcntl.ioctl"]], "lockf() (in module fcntl)": [[229, "fcntl.lockf"]], "default_ignores (in module filecmp)": [[230, "filecmp.DEFAULT_IGNORES"]], "clear_cache() (in module filecmp)": [[230, "filecmp.clear_cache"]], "cmp() (in module filecmp)": [[230, "filecmp.cmp"]], "cmpfiles() (in module filecmp)": [[230, "filecmp.cmpfiles"]], "common (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.common"]], "common_dirs (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.common_dirs"]], "common_files (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.common_files"]], "common_funny (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.common_funny"]], "diff_files (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.diff_files"]], "dircmp (class in filecmp)": [[230, "filecmp.dircmp"]], "filecmp": [[230, "module-filecmp"]], "funny_files (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.funny_files"]], "left (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.left"]], "left_list (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.left_list"]], "left_only (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.left_only"]], "report() (filecmp.dircmp method)": [[230, "filecmp.dircmp.report"]], "report_full_closure() (filecmp.dircmp method)": [[230, "filecmp.dircmp.report_full_closure"]], "report_partial_closure() (filecmp.dircmp method)": [[230, "filecmp.dircmp.report_partial_closure"]], "right (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.right"]], "right_list (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.right_list"]], "right_only (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.right_only"]], "same_files (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.same_files"]], "subdirs (filecmp.dircmp attribute)": [[230, "filecmp.dircmp.subdirs"]], "fileinput (class in fileinput)": [[232, "fileinput.FileInput"]], "close() (in module fileinput)": [[232, "fileinput.close"]], "fileinput": [[232, "module-fileinput"]], "filelineno() (in module fileinput)": [[232, "fileinput.filelineno"]], "filename() (in module fileinput)": [[232, "fileinput.filename"]], "fileno() (in module fileinput)": [[232, "fileinput.fileno"]], "hook_compressed() (in module fileinput)": [[232, "fileinput.hook_compressed"]], "hook_encoded() (in module fileinput)": [[232, "fileinput.hook_encoded"]], "input() (in module fileinput)": [[232, "fileinput.input"]], "isfirstline() (in module fileinput)": [[232, "fileinput.isfirstline"]], "isstdin() (in module fileinput)": [[232, "fileinput.isstdin"]], "lineno() (in module fileinput)": [[232, "fileinput.lineno"]], "nextfile() (in module fileinput)": [[232, "fileinput.nextfile"]], "[] (square brackets)": [[234, "index-2"], [245, "index-1"], [334, "index-10"], [361, "index-2"], [445, "index-15"], [445, "index-41"], [451, "index-6"]], "filenames": [[234, "index-0"], [245, "index-0"]], "filter() (in module fnmatch)": [[234, "fnmatch.filter"]], "fnmatch": [[234, "module-fnmatch"]], "fnmatch() (in module fnmatch)": [[234, "fnmatch.fnmatch"]], "fnmatchcase() (in module fnmatch)": [[234, "fnmatch.fnmatchcase"]], "glob": [[234, "index-3"], [245, "module-glob"]], "in glob-style wildcards": [[234, "index-2"], [245, "index-1"], [245, "index-2"]], "re": [[234, "index-1"], [334, "module-re"], [360, "index-32"]], "translate() (in module fnmatch)": [[234, "fnmatch.translate"]], "wildcard expansion": [[234, "index-0"]], "fraction (class in fractions)": [[235, "fractions.Fraction"]], "pep 515": [[235, "index-0"], [361, "index-11"], [488, "index-26"], [493, "index-7"], [493, "index-8"]], "__ceil__() (fractions.fraction method)": [[235, "fractions.Fraction.__ceil__"]], "__floor__() (fractions.fraction method)": [[235, "fractions.Fraction.__floor__"]], "__round__() (fractions.fraction method)": [[235, "fractions.Fraction.__round__"]], "as_integer_ratio() (fractions.fraction method)": [[235, "fractions.Fraction.as_integer_ratio"]], "denominator (fractions.fraction attribute)": [[235, "fractions.Fraction.denominator"]], "fractions": [[235, "module-fractions"]], "from_decimal() (fractions.fraction class method)": [[235, "fractions.Fraction.from_decimal"]], "from_float() (fractions.fraction class method)": [[235, "fractions.Fraction.from_float"]], "limit_denominator() (fractions.fraction method)": [[235, "fractions.Fraction.limit_denominator"]], "numerator (fractions.fraction attribute)": [[235, "fractions.Fraction.numerator"]], "ftp": [[237, "index-0"], [410, "index-11"], [410, "index-9"]], "ftp (class in ftplib)": [[237, "ftplib.FTP"]], "ftp_tls (class in ftplib)": [[237, "ftplib.FTP_TLS"]], "rfc 2640": [[237, "index-2"], [237, "index-3"], [237, "index-6"], [496, "index-22"]], "rfc 3659": [[237, "index-4"]], "rfc 4217": [[237, "index-5"]], "rfc 959": [[237, "index-1"]], "abort() (ftplib.ftp method)": [[237, "ftplib.FTP.abort"]], "all_errors (in module ftplib)": [[237, "ftplib.all_errors"]], "auth() (ftplib.ftp_tls method)": [[237, "ftplib.FTP_TLS.auth"]], "ccc() (ftplib.ftp_tls method)": [[237, "ftplib.FTP_TLS.ccc"]], "close() (ftplib.ftp method)": [[237, "ftplib.FTP.close"]], "connect() (ftplib.ftp method)": [[237, "ftplib.FTP.connect"]], "cwd() (ftplib.ftp method)": [[237, "ftplib.FTP.cwd"]], "delete() (ftplib.ftp method)": [[237, "ftplib.FTP.delete"]], "dir() (ftplib.ftp method)": [[237, "ftplib.FTP.dir"]], "error_perm": [[237, "ftplib.error_perm"]], "error_proto": [[237, "ftplib.error_proto"], [320, "poplib.error_proto"]], "error_reply": [[237, "ftplib.error_reply"]], "error_temp": [[237, "ftplib.error_temp"]], "ftplib": [[237, "module-ftplib"]], "ftplib (standard module)": [[237, "index-0"]], "getwelcome() (ftplib.ftp method)": [[237, "ftplib.FTP.getwelcome"]], "login() (ftplib.ftp method)": [[237, "ftplib.FTP.login"]], "mkd() (ftplib.ftp method)": [[237, "ftplib.FTP.mkd"]], "mlsd() (ftplib.ftp method)": [[237, "ftplib.FTP.mlsd"]], "nlst() (ftplib.ftp method)": [[237, "ftplib.FTP.nlst"]], "ntransfercmd() (ftplib.ftp method)": [[237, "ftplib.FTP.ntransfercmd"]], "prot_c() (ftplib.ftp_tls method)": [[237, "ftplib.FTP_TLS.prot_c"]], "prot_p() (ftplib.ftp_tls method)": [[237, "ftplib.FTP_TLS.prot_p"]], "pwd() (ftplib.ftp method)": [[237, "ftplib.FTP.pwd"]], "quit() (ftplib.ftp method)": [[237, "ftplib.FTP.quit"]], "rename() (ftplib.ftp method)": [[237, "ftplib.FTP.rename"]], "retrbinary() (ftplib.ftp method)": [[237, "ftplib.FTP.retrbinary"]], "retrlines() (ftplib.ftp method)": [[237, "ftplib.FTP.retrlines"]], "rmd() (ftplib.ftp method)": [[237, "ftplib.FTP.rmd"]], "sendcmd() (ftplib.ftp method)": [[237, "ftplib.FTP.sendcmd"]], "set_debuglevel() (ftplib.ftp method)": [[237, "ftplib.FTP.set_debuglevel"]], "set_pasv() (ftplib.ftp method)": [[237, "ftplib.FTP.set_pasv"]], "size() (ftplib.ftp method)": [[237, "ftplib.FTP.size"]], "ssl_version (ftplib.ftp_tls attribute)": [[237, "ftplib.FTP_TLS.ssl_version"]], "storbinary() (ftplib.ftp method)": [[237, "ftplib.FTP.storbinary"]], "storlines() (ftplib.ftp method)": [[237, "ftplib.FTP.storlines"]], "transfercmd() (ftplib.ftp method)": [[237, "ftplib.FTP.transfercmd"]], "voidcmd() (ftplib.ftp method)": [[237, "ftplib.FTP.voidcmd"]], "boolean": [[239, "index-0"], [360, "index-1"], [360, "index-11"], [360, "index-5"], [360, "index-66"], [443, "index-12"], [445, "index-82"]], "infinity": [[239, "index-3"]], "nan": [[239, "index-3"]], "pythonbreakpoint": [[239, "index-1"], [368, "index-3"], [368, "index-4"], [368, "index-5"], [470, "envvar-PYTHONBREAKPOINT"], [494, "index-12"]], "pythoncaseok": [[239, "index-16"], [470, "envvar-PYTHONCASEOK"], [478, "index-11"], [496, "index-21"]], "__format__": [[239, "index-4"]], "__import__()": [[239, "import__"]], "abs()": [[239, "abs"]], "aiter()": [[239, "aiter"]], "all()": [[239, "all"]], "anext()": [[239, "anext"]], "any()": [[239, "any"]], "ascii()": [[239, "ascii"]], "bin()": [[239, "bin"]], "binary mode": [[239, "index-8"]], "bool (built-in class)": [[239, "bool"]], "breakpoint()": [[239, "breakpoint"]], "buffer size, i/o": [[239, "index-8"]], "buffering": [[239, "index-8"], [353, "index-6"]], "callable()": [[239, "callable"]], "chr()": [[239, "chr"]], "classmethod()": [[239, "classmethod"]], "compile()": [[239, "compile"]], "complex (built-in class)": [[239, "complex"]], "delattr()": [[239, "delattr"]], "dir()": [[239, "dir"]], "divmod()": [[239, "divmod"]], "enumerate()": [[239, "enumerate"]], "eval()": [[239, "eval"]], "exec": [[239, "index-2"], [360, "index-63"], [451, "index-44"]], "exec()": [[239, "exec"]], "filter()": [[239, "filter"]], "float (built-in class)": [[239, "float"]], "format()": [[239, "format"]], "format() (built-in function)": [[239, "index-4"], [443, "index-76"]], "getattr()": [[239, "getattr"]], "globals()": [[239, "globals"]], "hasattr()": [[239, "hasattr"]], "hash()": [[239, "hash"]], "help()": [[239, "help"]], "hex()": [[239, "hex"]], "id()": [[239, "id"]], "import": [[239, "index-13"], [264, "index-0"], [349, "index-2"], [443, "index-44"], [447, "index-9"], [451, "index-34"], [451, "index-39"]], "input()": [[239, "input"]], "int (built-in class)": [[239, "int"]], "isinstance()": [[239, "isinstance"]], "issubclass()": [[239, "issubclass"]], "iter()": [[239, "iter"]], "len()": [[239, "len"]], "line-buffered i/o": [[239, "index-8"]], "locals()": [[239, "locals"]], "map()": [[239, "map"]], "max()": [[239, "max"]], "min()": [[239, "min"]], "modes": [[239, "index-6"]], "next()": [[239, "next"]], "object (built-in class)": [[239, "object"]], "oct()": [[239, "oct"]], "open()": [[239, "open"]], "open() built-in function": [[239, "index-5"], [239, "index-7"]], "ord()": [[239, "ord"]], "pow()": [[239, "pow"]], "print()": [[239, "print"]], "property (built-in class)": [[239, "property"]], "property.deleter()": [[239, "property.deleter"]], "property.getter()": [[239, "property.getter"]], "property.setter()": [[239, "property.setter"]], "repr()": [[239, "repr"]], "reversed()": [[239, "reversed"]], "round()": [[239, "round"]], "setattr()": [[239, "setattr"]], "slice (built-in class)": [[239, "slice"]], "sorted()": [[239, "sorted"]], "start (slice attribute)": [[239, "slice.start"]], "staticmethod()": [[239, "staticmethod"]], "step (slice attribute)": [[239, "slice.step"]], "stop (slice attribute)": [[239, "slice.stop"]], "str() (built-in function)": [[239, "index-11"]], "sum()": [[239, "sum"]], "super (built-in class)": [[239, "super"]], "text mode": [[239, "index-8"]], "type (built-in class)": [[239, "type"]], "unbuffered i/o": [[239, "index-8"]], "vars()": [[239, "vars"]], "zip()": [[239, "zip"]], "pep 412": [[240, "index-0"], [490, "index-16"]], "args (functools.partial attribute)": [[240, "functools.partial.args"]], "cache() (in module functools)": [[240, "functools.cache"]], "cached_property() (in module functools)": [[240, "functools.cached_property"]], "cmp_to_key() (in module functools)": [[240, "functools.cmp_to_key"]], "func (functools.partial attribute)": [[240, "functools.partial.func"]], "functools": [[240, "module-functools"]], "keywords (functools.partial attribute)": [[240, "functools.partial.keywords"]], "lru_cache() (in module functools)": [[240, "functools.lru_cache"]], "partial() (in module functools)": [[240, "functools.partial"]], "partialmethod (class in functools)": [[240, "functools.partialmethod"]], "reduce() (in module functools)": [[240, "functools.reduce"]], "singledispatch() (in module functools)": [[240, "functools.singledispatch"]], "singledispatchmethod (class in functools)": [[240, "functools.singledispatchmethod"]], "total_ordering() (in module functools)": [[240, "functools.total_ordering"]], "update_wrapper() (in module functools)": [[240, "functools.update_wrapper"]], "wraps() (in module functools)": [[240, "functools.wraps"]], "debug_collectable (in module gc)": [[241, "gc.DEBUG_COLLECTABLE"]], "debug_leak (in module gc)": [[241, "gc.DEBUG_LEAK"]], "debug_saveall (in module gc)": [[241, "gc.DEBUG_SAVEALL"]], "debug_stats (in module gc)": [[241, "gc.DEBUG_STATS"]], "debug_uncollectable (in module gc)": [[241, "gc.DEBUG_UNCOLLECTABLE"]], "callbacks (in module gc)": [[241, "gc.callbacks"]], "collect() (in module gc)": [[241, "gc.collect"]], "disable() (in module gc)": [[241, "gc.disable"]], "enable() (in module gc)": [[241, "gc.enable"]], "freeze() (in module gc)": [[241, "gc.freeze"]], "garbage (in module gc)": [[241, "gc.garbage"]], "gc": [[241, "module-gc"]], "get_count() (in module gc)": [[241, "gc.get_count"]], "get_debug() (in module gc)": [[241, "gc.get_debug"]], "get_freeze_count() (in module gc)": [[241, "gc.get_freeze_count"]], "get_objects() (in module gc)": [[241, "gc.get_objects"]], "get_referents() (in module gc)": [[241, "gc.get_referents"]], "get_referrers() (in module gc)": [[241, "gc.get_referrers"]], "get_stats() (in module gc)": [[241, "gc.get_stats"]], "get_threshold() (in module gc)": [[241, "gc.get_threshold"]], "is_finalized() (in module gc)": [[241, "gc.is_finalized"]], "is_tracked() (in module gc)": [[241, "gc.is_tracked"]], "isenabled() (in module gc)": [[241, "gc.isenabled"]], "set_debug() (in module gc)": [[241, "gc.set_debug"]], "set_threshold() (in module gc)": [[241, "gc.set_threshold"]], "unfreeze() (in module gc)": [[241, "gc.unfreeze"]], "getopterror": [[242, "getopt.GetoptError"]], "posixly_correct": [[242, "index-0"]], "getopt": [[242, "module-getopt"]], "getopt() (in module getopt)": [[242, "getopt.getopt"]], "gnu_getopt() (in module getopt)": [[242, "getopt.gnu_getopt"]], "getpasswarning": [[243, "getpass.GetPassWarning"]], "logname": [[243, "index-0"], [308, "index-10"]], "user": [[243, "index-1"], [308, "index-16"], [308, "index-19"], [308, "index-8"]], "username": [[243, "index-2"], [308, "index-11"], [309, "index-7"]], "getpass": [[243, "module-getpass"]], "getpass() (in module getpass)": [[243, "getpass.getpass"]], "getuser() (in module getpass)": [[243, "getpass.getuser"]], "gnome": [[244, "index-10"]], "gnutranslations (class in gettext)": [[244, "gettext.GNUTranslations"]], "lang": [[244, "index-3"], [244, "index-8"], [281, "index-1"], [281, "index-2"], [281, "index-3"]], "language": [[244, "index-0"], [244, "index-5"], [360, "index-11"], [443, "index-13"], [443, "index-4"], [443, "index-42"], [445, "index-77"]], "lc_all": [[244, "index-1"], [244, "index-6"]], "lc_messages": [[244, "index-2"], [244, "index-7"]], "nulltranslations (class in gettext)": [[244, "gettext.NullTranslations"]], "_ (underscore)": [[244, "index-4"], [361, "index-10"], [450, "index-28"], [450, "index-29"]], "_parse() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations._parse"]], "add_fallback() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.add_fallback"]], "bindtextdomain() (in module gettext)": [[244, "gettext.bindtextdomain"]], "charset() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.charset"]], "dgettext() (in module gettext)": [[244, "gettext.dgettext"]], "dngettext() (in module gettext)": [[244, "gettext.dngettext"]], "dnpgettext() (in module gettext)": [[244, "gettext.dnpgettext"]], "dpgettext() (in module gettext)": [[244, "gettext.dpgettext"]], "find() (in module gettext)": [[244, "gettext.find"]], "gettext": [[244, "index-4"], [244, "module-gettext"]], "gettext() (gettext.gnutranslations method)": [[244, "gettext.GNUTranslations.gettext"]], "gettext() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.gettext"]], "gettext() (in module gettext)": [[244, "gettext.gettext"]], "info() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.info"]], "install() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.install"]], "install() (in module gettext)": [[244, "gettext.install"]], "ngettext() (gettext.gnutranslations method)": [[244, "gettext.GNUTranslations.ngettext"]], "ngettext() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.ngettext"]], "ngettext() (in module gettext)": [[244, "gettext.ngettext"]], "npgettext() (gettext.gnutranslations method)": [[244, "gettext.GNUTranslations.npgettext"]], "npgettext() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.npgettext"]], "npgettext() (in module gettext)": [[244, "gettext.npgettext"]], "pgettext() (gettext.gnutranslations method)": [[244, "gettext.GNUTranslations.pgettext"]], "pgettext() (gettext.nulltranslations method)": [[244, "gettext.NullTranslations.pgettext"]], "pgettext() (in module gettext)": [[244, "gettext.pgettext"]], "textdomain() (in module gettext)": [[244, "gettext.textdomain"]], "translation() (in module gettext)": [[244, "gettext.translation"]], "**": [[245, "index-2"], [360, "index-13"], [442, "index-32"], [445, "index-18"], [445, "index-50"], [445, "index-58"], [456, "index-4"]], ". (dot)": [[245, "index-1"], [308, "index-45"], [308, "index-50"], [334, "index-0"], [360, "index-35"], [360, "index-45"], [361, "index-2"], [445, "index-39"], [450, "index-29"]], "escape() (in module glob)": [[245, "glob.escape"]], "glob() (in module glob)": [[245, "glob.glob"]], "iglob() (in module glob)": [[245, "glob.iglob"]], "pathname expansion": [[245, "index-0"]], "cycleerror": [[246, "graphlib.CycleError"]], "topologicalsorter (class in graphlib)": [[246, "graphlib.TopologicalSorter"]], "add() (graphlib.topologicalsorter method)": [[246, "graphlib.TopologicalSorter.add"]], "done() (graphlib.topologicalsorter method)": [[246, "graphlib.TopologicalSorter.done"]], "get_ready() (graphlib.topologicalsorter method)": [[246, "graphlib.TopologicalSorter.get_ready"]], "graphlib": [[246, "module-graphlib"]], "is_active() (graphlib.topologicalsorter method)": [[246, "graphlib.TopologicalSorter.is_active"]], "prepare() (graphlib.topologicalsorter method)": [[246, "graphlib.TopologicalSorter.prepare"]], "static_order() (graphlib.topologicalsorter method)": [[246, "graphlib.TopologicalSorter.static_order"]], "getgrall() (in module grp)": [[247, "grp.getgrall"]], "getgrgid() (in module grp)": [[247, "grp.getgrgid"]], "getgrnam() (in module grp)": [[247, "grp.getgrnam"]], "grp": [[247, "module-grp"]], "--best": [[248, "cmdoption-gzip-best"]], "--decompress": [[248, "cmdoption-gzip-d"]], "--fast": [[248, "cmdoption-gzip-fast"]], "badgzipfile": [[248, "gzip.BadGzipFile"]], "gzipfile (class in gzip)": [[248, "gzip.GzipFile"]], "compress() (in module gzip)": [[248, "gzip.compress"]], "decompress() (in module gzip)": [[248, "gzip.decompress"]], "gzip": [[248, "module-gzip"]], "gzip command line option": [[248, "cmdoption-gzip-arg-file"], [248, "cmdoption-gzip-best"], [248, "cmdoption-gzip-d"], [248, "cmdoption-gzip-fast"], [248, "cmdoption-gzip-h"]], "mtime (gzip.gzipfile attribute)": [[248, "gzip.GzipFile.mtime"]], "name (gzip.gzipfile attribute)": [[248, "gzip.GzipFile.name"]], "open() (in module gzip)": [[248, "gzip.open"]], "peek() (gzip.gzipfile method)": [[248, "gzip.GzipFile.peek"]], "(use in module hashlib)": [[249, "index-2"]], "openssl": [[249, "index-2"], [357, "index-0"]], "rfc 1321": [[249, "index-1"]], "rfc 7693": [[249, "index-5"]], "rfc 7914": [[249, "index-3"]], "algorithms_available (in module hashlib)": [[249, "hashlib.algorithms_available"]], "algorithms_guaranteed (in module hashlib)": [[249, "hashlib.algorithms_guaranteed"]], "blake2b() (in module hashlib)": [[249, "hashlib.blake2b"]], "blake2b, blake2s": [[249, "index-4"]], "blake2b.max_digest_size (in module hashlib)": [[249, "hashlib.blake2b.MAX_DIGEST_SIZE"]], "blake2b.max_key_size (in module hashlib)": [[249, "hashlib.blake2b.MAX_KEY_SIZE"]], "blake2b.person_size (in module hashlib)": [[249, "hashlib.blake2b.PERSON_SIZE"]], "blake2b.salt_size (in module hashlib)": [[249, "hashlib.blake2b.SALT_SIZE"]], "blake2s() (in module hashlib)": [[249, "hashlib.blake2s"]], "blake2s.max_digest_size (in module hashlib)": [[249, "hashlib.blake2s.MAX_DIGEST_SIZE"]], "blake2s.max_key_size (in module hashlib)": [[249, "hashlib.blake2s.MAX_KEY_SIZE"]], "blake2s.person_size (in module hashlib)": [[249, "hashlib.blake2s.PERSON_SIZE"]], "blake2s.salt_size (in module hashlib)": [[249, "hashlib.blake2s.SALT_SIZE"]], "copy() (hashlib.hash method)": [[249, "hashlib.hash.copy"]], "digest() (hashlib.hash method)": [[249, "hashlib.hash.digest"]], "digest() (hashlib.shake method)": [[249, "hashlib.shake.digest"]], "file_digest() (in module hashlib)": [[249, "hashlib.file_digest"]], "hash.block_size (in module hashlib)": [[249, "hashlib.hash.block_size"]], "hash.digest_size (in module hashlib)": [[249, "hashlib.hash.digest_size"]], "hashlib": [[249, "module-hashlib"]], "hexdigest() (hashlib.hash method)": [[249, "hashlib.hash.hexdigest"]], "hexdigest() (hashlib.shake method)": [[249, "hashlib.shake.hexdigest"]], "md5() (in module hashlib)": [[249, "hashlib.md5"]], "message digest, md5": [[249, "index-0"]], "name (hashlib.hash attribute)": [[249, "hashlib.hash.name"]], "new() (in module hashlib)": [[249, "hashlib.new"]], "pbkdf2_hmac() (in module hashlib)": [[249, "hashlib.pbkdf2_hmac"]], "scrypt() (in module hashlib)": [[249, "hashlib.scrypt"]], "secure hash algorithm, sha1, sha2, sha224, sha256, sha384, sha512, sha3, shake, blake2": [[249, "index-0"]], "sha1() (in module hashlib)": [[249, "hashlib.sha1"]], "sha224() (in module hashlib)": [[249, "hashlib.sha224"]], "sha256() (in module hashlib)": [[249, "hashlib.sha256"]], "sha384() (in module hashlib)": [[249, "hashlib.sha384"]], "sha3_224() (in module hashlib)": [[249, "hashlib.sha3_224"]], "sha3_256() (in module hashlib)": [[249, "hashlib.sha3_256"]], "sha3_384() (in module hashlib)": [[249, "hashlib.sha3_384"]], "sha3_512() (in module hashlib)": [[249, "hashlib.sha3_512"]], "sha512() (in module hashlib)": [[249, "hashlib.sha512"]], "shake_128() (in module hashlib)": [[249, "hashlib.shake_128"]], "shake_256() (in module hashlib)": [[249, "hashlib.shake_256"]], "update() (hashlib.hash method)": [[249, "hashlib.hash.update"]], "heapify() (in module heapq)": [[250, "heapq.heapify"]], "heappop() (in module heapq)": [[250, "heapq.heappop"]], "heappush() (in module heapq)": [[250, "heapq.heappush"]], "heappushpop() (in module heapq)": [[250, "heapq.heappushpop"]], "heapq": [[250, "module-heapq"]], "heapreplace() (in module heapq)": [[250, "heapq.heapreplace"]], "merge() (in module heapq)": [[250, "heapq.merge"]], "nlargest() (in module heapq)": [[250, "heapq.nlargest"]], "nsmallest() (in module heapq)": [[250, "heapq.nsmallest"]], "rfc 2104": [[251, "index-0"], [479, "index-17"]], "block_size (hmac.hmac attribute)": [[251, "hmac.HMAC.block_size"]], "compare_digest() (in module hmac)": [[251, "hmac.compare_digest"]], "copy() (hmac.hmac method)": [[251, "hmac.HMAC.copy"]], "digest() (hmac.hmac method)": [[251, "hmac.HMAC.digest"]], "digest() (in module hmac)": [[251, "hmac.digest"]], "digest_size (hmac.hmac attribute)": [[251, "hmac.HMAC.digest_size"]], "hexdigest() (hmac.hmac method)": [[251, "hmac.HMAC.hexdigest"]], "hmac": [[251, "module-hmac"]], "name (hmac.hmac attribute)": [[251, "hmac.HMAC.name"]], "new() (in module hmac)": [[251, "hmac.new"]], "update() (hmac.hmac method)": [[251, "hmac.HMAC.update"]], "escape() (in module html)": [[252, "html.escape"]], "html": [[252, "module-html"], [254, "index-0"], [410, "index-10"]], "unescape() (in module html)": [[252, "html.unescape"]], "codepoint2name (in module html.entities)": [[253, "html.entities.codepoint2name"]], "entitydefs (in module html.entities)": [[253, "html.entities.entitydefs"]], "html.entities": [[253, "module-html.entities"]], "html5 (in module html.entities)": [[253, "html.entities.html5"]], "name2codepoint (in module html.entities)": [[253, "html.entities.name2codepoint"]], "htmlparser (class in html.parser)": [[254, "html.parser.HTMLParser"]], "xhtml": [[254, "index-0"]], "close() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.close"]], "feed() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.feed"]], "get_starttag_text() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.get_starttag_text"]], "getpos() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.getpos"]], "handle_charref() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_charref"]], "handle_comment() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_comment"]], "handle_data() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_data"]], "handle_decl() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_decl"]], "handle_endtag() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_endtag"]], "handle_entityref() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_entityref"]], "handle_pi() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_pi"]], "handle_startendtag() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_startendtag"]], "handle_starttag() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.handle_starttag"]], "html.parser": [[254, "module-html.parser"]], "reset() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.reset"]], "unknown_decl() (html.parser.htmlparser method)": [[254, "html.parser.HTMLParser.unknown_decl"]], "httpmethod (class in http)": [[255, "http.HTTPMethod"]], "httpstatus (class in http)": [[255, "http.HTTPStatus"]], "rfc 2295": [[255, "index-58"]], "rfc 2324": [[255, "index-41"]], "rfc 2518": [[255, "index-3"]], "rfc 2774": [[255, "index-61"]], "rfc 3229": [[255, "index-14"]], "rfc 4918": [[255, "index-12"], [255, "index-43"], [255, "index-44"], [255, "index-45"], [255, "index-59"]], "rfc 5789": [[255, "index-71"]], "rfc 5842": [[255, "index-13"], [255, "index-60"]], "rfc 6585": [[255, "index-48"], [255, "index-49"], [255, "index-50"], [255, "index-62"]], "rfc 7231": [[255, "index-1"], [255, "index-10"], [255, "index-15"], [255, "index-16"], [255, "index-17"], [255, "index-18"], [255, "index-2"], [255, "index-20"], [255, "index-21"], [255, "index-23"], [255, "index-25"], [255, "index-26"], [255, "index-27"], [255, "index-28"], [255, "index-29"], [255, "index-31"], [255, "index-32"], [255, "index-33"], [255, "index-34"], [255, "index-36"], [255, "index-37"], [255, "index-38"], [255, "index-40"], [255, "index-47"], [255, "index-5"], [255, "index-52"], [255, "index-53"], [255, "index-54"], [255, "index-55"], [255, "index-56"], [255, "index-57"], [255, "index-6"], [255, "index-63"], [255, "index-64"], [255, "index-65"], [255, "index-66"], [255, "index-67"], [255, "index-68"], [255, "index-69"], [255, "index-7"], [255, "index-70"], [255, "index-8"], [255, "index-9"]], "rfc 7232": [[255, "index-19"], [255, "index-35"]], "rfc 7233": [[255, "index-11"], [255, "index-39"]], "rfc 7235": [[255, "index-24"], [255, "index-30"]], "rfc 7238": [[255, "index-22"]], "rfc 7540": [[255, "index-42"]], "rfc 7725": [[255, "index-51"]], "rfc 8297": [[255, "index-4"]], "rfc 8470": [[255, "index-46"]], "http (standard module)": [[255, "index-0"]], "badstatusline": [[256, "http.client.BadStatusLine"]], "cannotsendheader": [[256, "http.client.CannotSendHeader"]], "cannotsendrequest": [[256, "http.client.CannotSendRequest"]], "httpconnection (class in http.client)": [[256, "http.client.HTTPConnection"]], "httpexception": [[256, "http.client.HTTPException"]], "httpmessage (class in http.client)": [[256, "http.client.HTTPMessage"]], "httpresponse (class in http.client)": [[256, "http.client.HTTPResponse"]], "httpsconnection (class in http.client)": [[256, "http.client.HTTPSConnection"]], "https_port (in module http.client)": [[256, "http.client.HTTPS_PORT"]], "http_port (in module http.client)": [[256, "http.client.HTTP_PORT"]], "improperconnectionstate": [[256, "http.client.ImproperConnectionState"]], "incompleteread": [[256, "http.client.IncompleteRead"]], "invalidurl": [[256, "http.client.InvalidURL"]], "linetoolong": [[256, "http.client.LineTooLong"]], "notconnected": [[256, "http.client.NotConnected"]], "rfc 2616#section-14.23": [[256, "index-4"]], "rfc 2616#section-5.1.2": [[256, "index-3"], [256, "index-5"]], "rfc 7230": [[256, "index-7"], [410, "index-0"]], "remotedisconnected": [[256, "http.client.RemoteDisconnected"]], "responsenotready": [[256, "http.client.ResponseNotReady"]], "unimplementedfilemode": [[256, "http.client.UnimplementedFileMode"]], "unknownprotocol": [[256, "http.client.UnknownProtocol"]], "unknowntransferencoding": [[256, "http.client.UnknownTransferEncoding"]], "blocksize (http.client.httpconnection attribute)": [[256, "http.client.HTTPConnection.blocksize"]], "close() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.close"]], "closed (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.closed"]], "connect() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.connect"]], "debuglevel (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.debuglevel"]], "endheaders() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.endheaders"]], "fileno() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.fileno"]], "getcode() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.getcode"]], "getheader() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.getheader"]], "getheaders() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.getheaders"]], "getresponse() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.getresponse"]], "geturl() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.geturl"]], "headers (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.headers"]], "http.client": [[256, "module-http.client"]], "http.client (standard module)": [[256, "index-0"]], "info() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.info"]], "msg (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.msg"]], "parse_headers() (in module http.client)": [[256, "http.client.parse_headers"]], "putheader() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.putheader"]], "putrequest() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.putrequest"]], "read() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.read"]], "readinto() (http.client.httpresponse method)": [[256, "http.client.HTTPResponse.readinto"]], "reason (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.reason"]], "request() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.request"]], "responses (in module http.client)": [[256, "http.client.responses"]], "send() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.send"]], "set_debuglevel() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.set_debuglevel"]], "set_tunnel() (http.client.httpconnection method)": [[256, "http.client.HTTPConnection.set_tunnel"]], "status (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.status"]], "url (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.url"]], "urllib.request": [[256, "index-1"], [410, "module-urllib.request"]], "version (http.client.httpresponse attribute)": [[256, "http.client.HTTPResponse.version"]], "cookie (class in http.cookiejar)": [[257, "http.cookiejar.Cookie"]], "cookiejar (class in http.cookiejar)": [[257, "http.cookiejar.CookieJar"]], "cookiepolicy (class in http.cookiejar)": [[257, "http.cookiejar.CookiePolicy"]], "defaultcookiepolicy (class in http.cookiejar)": [[257, "http.cookiejar.DefaultCookiePolicy"]], "domainliberal (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.DomainLiberal"]], "domainrfc2965match (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match"]], "domainstrict (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.DomainStrict"]], "domainstrictnodots (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots"]], "domainstrictnondomain (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain"]], "filecookiejar (class in http.cookiejar)": [[257, "http.cookiejar.FileCookieJar"]], "lwpcookiejar (class in http.cookiejar)": [[257, "http.cookiejar.LWPCookieJar"]], "loaderror": [[257, "http.cookiejar.LoadError"]], "mozillacookiejar (class in http.cookiejar)": [[257, "http.cookiejar.MozillaCookieJar"]], "rfc 2109": [[257, "index-1"], [257, "index-15"], [257, "index-21"], [257, "index-23"], [257, "index-24"], [257, "index-3"], [257, "index-4"], [257, "index-6"], [258, "index-0"], [258, "index-2"], [258, "index-3"], [258, "index-4"], [258, "index-5"], [258, "index-6"], [258, "index-7"]], "rfc 2964": [[257, "index-10"]], "rfc 2965": [[257, "index-0"], [257, "index-11"], [257, "index-12"], [257, "index-13"], [257, "index-14"], [257, "index-16"], [257, "index-17"], [257, "index-18"], [257, "index-19"], [257, "index-2"], [257, "index-20"], [257, "index-22"], [257, "index-25"], [257, "index-5"], [257, "index-7"], [257, "index-8"], [257, "index-9"], [410, "index-1"], [410, "index-2"], [410, "index-4"]], "add_cookie_header() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.add_cookie_header"]], "allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [[257, "http.cookiejar.DefaultCookiePolicy.allowed_domains"]], "blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [[257, "http.cookiejar.DefaultCookiePolicy.blocked_domains"]], "clear() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.clear"]], "clear_session_cookies() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.clear_session_cookies"]], "comment (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.comment"]], "comment_url (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.comment_url"]], "delayload (http.cookiejar.filecookiejar attribute)": [[257, "http.cookiejar.FileCookieJar.delayload"]], "discard (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.discard"]], "domain (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.domain"]], "domain_initial_dot (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.domain_initial_dot"]], "domain_return_ok() (http.cookiejar.cookiepolicy method)": [[257, "http.cookiejar.CookiePolicy.domain_return_ok"]], "domain_specified (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.domain_specified"]], "expires (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.expires"]], "extract_cookies() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.extract_cookies"]], "filename (http.cookiejar.filecookiejar attribute)": [[257, "http.cookiejar.FileCookieJar.filename"]], "get_nonstandard_attr() (http.cookiejar.cookie method)": [[257, "http.cookiejar.Cookie.get_nonstandard_attr"]], "has_nonstandard_attr() (http.cookiejar.cookie method)": [[257, "http.cookiejar.Cookie.has_nonstandard_attr"]], "hide_cookie2 (http.cookiejar.cookiepolicy attribute)": [[257, "http.cookiejar.CookiePolicy.hide_cookie2"]], "http.cookiejar": [[257, "module-http.cookiejar"]], "is_blocked() (http.cookiejar.defaultcookiepolicy method)": [[257, "http.cookiejar.DefaultCookiePolicy.is_blocked"]], "is_expired() (http.cookiejar.cookie method)": [[257, "http.cookiejar.Cookie.is_expired"]], "is_not_allowed() (http.cookiejar.defaultcookiepolicy method)": [[257, "http.cookiejar.DefaultCookiePolicy.is_not_allowed"]], "load() (http.cookiejar.filecookiejar method)": [[257, "http.cookiejar.FileCookieJar.load"]], "make_cookies() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.make_cookies"]], "name (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.name"]], "netscape (http.cookiejar.cookiepolicy attribute)": [[257, "http.cookiejar.CookiePolicy.netscape"]], "path (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.path"]], "path_return_ok() (http.cookiejar.cookiepolicy method)": [[257, "http.cookiejar.CookiePolicy.path_return_ok"]], "port (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.port"]], "port_specified (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.port_specified"]], "return_ok() (http.cookiejar.cookiepolicy method)": [[257, "http.cookiejar.CookiePolicy.return_ok"]], "revert() (http.cookiejar.filecookiejar method)": [[257, "http.cookiejar.FileCookieJar.revert"]], "rfc2109 (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.rfc2109"]], "rfc2109_as_netscape (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape"]], "rfc2965 (http.cookiejar.cookiepolicy attribute)": [[257, "http.cookiejar.CookiePolicy.rfc2965"]], "save() (http.cookiejar.filecookiejar method)": [[257, "http.cookiejar.FileCookieJar.save"]], "secure (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.secure"]], "set_allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [[257, "http.cookiejar.DefaultCookiePolicy.set_allowed_domains"]], "set_blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [[257, "http.cookiejar.DefaultCookiePolicy.set_blocked_domains"]], "set_cookie() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.set_cookie"]], "set_cookie_if_ok() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.set_cookie_if_ok"]], "set_nonstandard_attr() (http.cookiejar.cookie method)": [[257, "http.cookiejar.Cookie.set_nonstandard_attr"]], "set_ok() (http.cookiejar.cookiepolicy method)": [[257, "http.cookiejar.CookiePolicy.set_ok"]], "set_policy() (http.cookiejar.cookiejar method)": [[257, "http.cookiejar.CookieJar.set_policy"]], "strict_domain (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.strict_domain"]], "strict_ns_domain (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.strict_ns_domain"]], "strict_ns_set_initial_dollar (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar"]], "strict_ns_set_path (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.strict_ns_set_path"]], "strict_ns_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable"]], "strict_rfc2965_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [[257, "http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable"]], "value (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.value"]], "version (http.cookiejar.cookie attribute)": [[257, "http.cookiejar.Cookie.version"]], "basecookie (class in http.cookies)": [[258, "http.cookies.BaseCookie"]], "cookieerror": [[258, "http.cookies.CookieError"]], "morsel (class in http.cookies)": [[258, "http.cookies.Morsel"]], "outputstring() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.OutputString"]], "rfc 2068": [[258, "index-1"]], "simplecookie (class in http.cookies)": [[258, "http.cookies.SimpleCookie"]], "coded_value (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.coded_value"]], "comment (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.comment"]], "copy() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.copy"]], "domain (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.domain"]], "expires (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.expires"]], "http.cookies": [[258, "module-http.cookies"]], "httponly (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.httponly"]], "isreservedkey() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.isReservedKey"]], "js_output() (http.cookies.basecookie method)": [[258, "http.cookies.BaseCookie.js_output"]], "js_output() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.js_output"]], "key (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.key"]], "load() (http.cookies.basecookie method)": [[258, "http.cookies.BaseCookie.load"]], "output() (http.cookies.basecookie method)": [[258, "http.cookies.BaseCookie.output"]], "output() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.output"]], "path (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.path"]], "samesite (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.samesite"]], "secure (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.secure"]], "set() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.set"]], "setdefault() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.setdefault"]], "update() (http.cookies.morsel method)": [[258, "http.cookies.Morsel.update"]], "value (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.value"]], "value_decode() (http.cookies.basecookie method)": [[258, "http.cookies.BaseCookie.value_decode"]], "value_encode() (http.cookies.basecookie method)": [[258, "http.cookies.BaseCookie.value_encode"]], "version (http.cookies.morsel attribute)": [[258, "http.cookies.Morsel.version"]], "basehttprequesthandler (class in http.server)": [[259, "http.server.BaseHTTPRequestHandler"]], "cgihttprequesthandler (class in http.server)": [[259, "http.server.CGIHTTPRequestHandler"]], "httpserver (class in http.server)": [[259, "http.server.HTTPServer"]], "messageclass (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.MessageClass"]], "rfc 3986": [[259, "index-1"], [409, "index-2"], [409, "index-4"], [409, "index-5"], [409, "index-7"], [409, "index-8"], [484, "index-12"], [484, "index-9"], [487, "index-32"], [492, "index-42"], [494, "index-35"], [495, "index-25"], [496, "index-28"]], "simplehttprequesthandler (class in http.server)": [[259, "http.server.SimpleHTTPRequestHandler"]], "threadinghttpserver (class in http.server)": [[259, "http.server.ThreadingHTTPServer"]], "address_string() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.address_string"]], "cgi_directories (http.server.cgihttprequesthandler attribute)": [[259, "http.server.CGIHTTPRequestHandler.cgi_directories"]], "client_address (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.client_address"]], "close_connection (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.close_connection"]], "command (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.command"]], "date_time_string() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.date_time_string"]], "do_get() (http.server.simplehttprequesthandler method)": [[259, "http.server.SimpleHTTPRequestHandler.do_GET"]], "do_head() (http.server.simplehttprequesthandler method)": [[259, "http.server.SimpleHTTPRequestHandler.do_HEAD"]], "do_post() (http.server.cgihttprequesthandler method)": [[259, "http.server.CGIHTTPRequestHandler.do_POST"]], "end_headers() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.end_headers"]], "error_content_type (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.error_content_type"]], "error_message_format (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.error_message_format"]], "extensions_map (http.server.simplehttprequesthandler attribute)": [[259, "http.server.SimpleHTTPRequestHandler.extensions_map"]], "flush_headers() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.flush_headers"]], "handle() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.handle"]], "handle_expect_100() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.handle_expect_100"]], "handle_one_request() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.handle_one_request"]], "headers (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.headers"]], "http.server": [[259, "index-3"], [259, "module-http.server"]], "httpd": [[259, "index-0"]], "log_date_time_string() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.log_date_time_string"]], "log_error() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.log_error"]], "log_message() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.log_message"]], "log_request() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.log_request"]], "path (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.path"]], "protocol_version (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.protocol_version"]], "request_version (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.request_version"]], "requestline (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.requestline"]], "responses (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.responses"]], "rfile (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.rfile"]], "send_error() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.send_error"]], "send_header() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.send_header"]], "send_response() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.send_response"]], "send_response_only() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.send_response_only"]], "server (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.server"]], "server_version (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.server_version"]], "server_version (http.server.simplehttprequesthandler attribute)": [[259, "http.server.SimpleHTTPRequestHandler.server_version"]], "sys_version (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.sys_version"]], "version_string() (http.server.basehttprequesthandler method)": [[259, "http.server.BaseHTTPRequestHandler.version_string"]], "wfile (http.server.basehttprequesthandler attribute)": [[259, "http.server.BaseHTTPRequestHandler.wfile"]], "clear breakpoint": [[261, "index-4"]], "cut": [[261, "index-4"]], "idlestartup": [[261, "index-5"]], "integrated development environment": [[261, "index-0"]], "module browser": [[261, "index-1"]], "pep 434": [[261, "index-7"], [484, "index-13"]], "pythonstartup": [[261, "index-6"], [335, "index-0"], [349, "index-5"], [368, "index-18"], [453, "index-1"], [470, "envvar-PYTHONSTARTUP"], [470, "index-5"], [491, "index-40"], [491, "index-41"]], "paste": [[261, "index-4"]], "path browser": [[261, "index-1"]], "python editor": [[261, "index-0"]], "run script": [[261, "index-2"]], "set breakpoint": [[261, "index-4"]], "breakpoints": [[261, "index-4"]], "debugger": [[261, "index-3"], [312, "index-2"], [368, "index-11"], [368, "index-29"], [380, "index-1"]], "idlelib": [[261, "module-idlelib"]], "stack viewer": [[261, "index-3"]], "imap4": [[262, "index-0"]], "imap4 (class in imaplib)": [[262, "imaplib.IMAP4"]], "imap4.abort": [[262, "imaplib.IMAP4.abort"]], "imap4.error": [[262, "imaplib.IMAP4.error"]], "imap4.readonly": [[262, "imaplib.IMAP4.readonly"]], "imap4_ssl": [[262, "index-0"]], "imap4_ssl (class in imaplib)": [[262, "imaplib.IMAP4_SSL"]], "imap4_stream": [[262, "index-0"]], "imap4_stream (class in imaplib)": [[262, "imaplib.IMAP4_stream"]], "int2ap() (in module imaplib)": [[262, "imaplib.Int2AP"]], "internaldate2tuple() (in module imaplib)": [[262, "imaplib.Internaldate2tuple"]], "protocol_version (imaplib.imap4 attribute)": [[262, "imaplib.IMAP4.PROTOCOL_VERSION"]], "parseflags() (in module imaplib)": [[262, "imaplib.ParseFlags"]], "rfc 1730": [[262, "index-2"]], "rfc 2060": [[262, "index-1"], [262, "index-7"]], "rfc 2342": [[262, "index-6"], [479, "index-19"]], "rfc 3501": [[262, "index-8"]], "rfc 5161": [[262, "index-3"], [492, "index-33"]], "rfc 6855": [[262, "index-4"], [262, "index-5"], [492, "index-34"], [492, "index-35"]], "time2internaldate() (in module imaplib)": [[262, "imaplib.Time2Internaldate"]], "append() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.append"]], "authenticate() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.authenticate"]], "check() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.check"]], "close() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.close"]], "copy() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.copy"]], "create() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.create"]], "debug (imaplib.imap4 attribute)": [[262, "imaplib.IMAP4.debug"]], "delete() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.delete"]], "deleteacl() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.deleteacl"]], "enable() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.enable"]], "expunge() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.expunge"]], "fetch() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.fetch"]], "getacl() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.getacl"]], "getannotation() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.getannotation"]], "getquota() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.getquota"]], "getquotaroot() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.getquotaroot"]], "imaplib": [[262, "module-imaplib"]], "list() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.list"]], "login() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.login"]], "login_cram_md5() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.login_cram_md5"]], "logout() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.logout"]], "lsub() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.lsub"]], "myrights() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.myrights"]], "namespace() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.namespace"]], "noop() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.noop"]], "open() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.open"]], "partial() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.partial"]], "proxyauth() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.proxyauth"]], "read() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.read"]], "readline() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.readline"]], "recent() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.recent"]], "rename() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.rename"]], "response() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.response"]], "search() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.search"]], "select() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.select"]], "send() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.send"]], "setacl() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.setacl"]], "setannotation() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.setannotation"]], "setquota() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.setquota"]], "shutdown() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.shutdown"]], "socket() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.socket"]], "sort() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.sort"]], "starttls() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.starttls"]], "status() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.status"]], "store() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.store"]], "subscribe() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.subscribe"]], "thread() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.thread"]], "uid() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.uid"]], "unselect() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.unselect"]], "unsubscribe() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.unsubscribe"]], "utf8_enabled (imaplib.imap4 attribute)": [[262, "imaplib.IMAP4.utf8_enabled"]], "xatom() (imaplib.imap4 method)": [[262, "imaplib.IMAP4.xatom"]], "pep 594#imghdr": [[263, "index-0"]], "imghdr": [[263, "module-imghdr"]], "tests (in module imghdr)": [[263, "imghdr.tests"]], "what() (in module imghdr)": [[263, "imghdr.what"]], "c_builtin (in module imp)": [[264, "imp.C_BUILTIN"]], "c_extension (in module imp)": [[264, "imp.C_EXTENSION"]], "nullimporter (class in imp)": [[264, "imp.NullImporter"]], "pkg_directory (in module imp)": [[264, "imp.PKG_DIRECTORY"]], "py_compiled (in module imp)": [[264, "imp.PY_COMPILED"]], "py_frozen (in module imp)": [[264, "imp.PY_FROZEN"]], "py_source (in module imp)": [[264, "imp.PY_SOURCE"]], "acquire_lock() (in module imp)": [[264, "imp.acquire_lock"]], "byte-code": [[264, "index-1"], [326, "index-0"]], "cache_from_source() (in module imp)": [[264, "imp.cache_from_source"]], "find_module() (imp.nullimporter method)": [[264, "imp.NullImporter.find_module"]], "find_module() (in module imp)": [[264, "imp.find_module"]], "get_magic() (in module imp)": [[264, "imp.get_magic"]], "get_suffixes() (in module imp)": [[264, "imp.get_suffixes"]], "get_tag() (in module imp)": [[264, "imp.get_tag"]], "imp": [[264, "module-imp"]], "load_module() (in module imp)": [[264, "imp.load_module"]], "lock_held() (in module imp)": [[264, "imp.lock_held"]], "new_module() (in module imp)": [[264, "imp.new_module"]], "release_lock() (in module imp)": [[264, "imp.release_lock"]], "reload() (in module imp)": [[264, "imp.reload"]], "source_from_cache() (in module imp)": [[264, "imp.source_from_cache"]], "bytecode_suffixes (in module importlib.machinery)": [[265, "importlib.machinery.BYTECODE_SUFFIXES"]], "builtinimporter (class in importlib.machinery)": [[265, "importlib.machinery.BuiltinImporter"]], "debug_bytecode_suffixes (in module importlib.machinery)": [[265, "importlib.machinery.DEBUG_BYTECODE_SUFFIXES"]], "extension_suffixes (in module importlib.machinery)": [[265, "importlib.machinery.EXTENSION_SUFFIXES"]], "executionloader (class in importlib.abc)": [[265, "importlib.abc.ExecutionLoader"]], "extensionfileloader (class in importlib.machinery)": [[265, "importlib.machinery.ExtensionFileLoader"]], "filefinder (class in importlib.machinery)": [[265, "importlib.machinery.FileFinder"]], "fileloader (class in importlib.abc)": [[265, "importlib.abc.FileLoader"]], "finder (class in importlib.abc)": [[265, "importlib.abc.Finder"]], "frozenimporter (class in importlib.machinery)": [[265, "importlib.machinery.FrozenImporter"]], "inspectloader (class in importlib.abc)": [[265, "importlib.abc.InspectLoader"]], "lazyloader (class in importlib.util)": [[265, "importlib.util.LazyLoader"]], "loader (class in importlib.abc)": [[265, "importlib.abc.Loader"]], "magic_number (in module importlib.util)": [[265, "importlib.util.MAGIC_NUMBER"]], "metapathfinder (class in importlib.abc)": [[265, "importlib.abc.MetaPathFinder"]], "modulespec (class in importlib.machinery)": [[265, "importlib.machinery.ModuleSpec"]], "namespaceloader (class in importlib.machinery)": [[265, "importlib.machinery.NamespaceLoader"]], "optimized_bytecode_suffixes (in module importlib.machinery)": [[265, "importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES"]], "pep 235": [[265, "index-0"]], "pep 3120": [[265, "index-10"], [450, "index-1"], [485, "index-4"]], "pep 366": [[265, "index-4"], [339, "index-7"], [447, "index-11"], [447, "index-12"], [447, "index-23"], [447, "index-25"], [490, "index-22"]], "pathentryfinder (class in importlib.abc)": [[265, "importlib.abc.PathEntryFinder"]], "pathfinder (class in importlib.machinery)": [[265, "importlib.machinery.PathFinder"]], "resourceloader (class in importlib.abc)": [[265, "importlib.abc.ResourceLoader"]], "source_suffixes (in module importlib.machinery)": [[265, "importlib.machinery.SOURCE_SUFFIXES"]], "sourcefileloader (class in importlib.machinery)": [[265, "importlib.machinery.SourceFileLoader"]], "sourceloader (class in importlib.abc)": [[265, "importlib.abc.SourceLoader"]], "sourcelessfileloader (class in importlib.machinery)": [[265, "importlib.machinery.SourcelessFileLoader"]], "windowsregistryfinder (class in importlib.machinery)": [[265, "importlib.machinery.WindowsRegistryFinder"]], "__import__() (in module importlib)": [[265, "importlib.__import__"]], "all_suffixes() (in module importlib.machinery)": [[265, "importlib.machinery.all_suffixes"]], "cache_from_source() (in module importlib.util)": [[265, "importlib.util.cache_from_source"]], "cached (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.cached"]], "create_module() (importlib.abc.loader method)": [[265, "importlib.abc.Loader.create_module"]], "create_module() (importlib.machinery.extensionfileloader method)": [[265, "importlib.machinery.ExtensionFileLoader.create_module"]], "decode_source() (in module importlib.util)": [[265, "importlib.util.decode_source"]], "exec_module() (importlib.abc.inspectloader method)": [[265, "importlib.abc.InspectLoader.exec_module"]], "exec_module() (importlib.abc.loader method)": [[265, "importlib.abc.Loader.exec_module"]], "exec_module() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.exec_module"]], "exec_module() (importlib.machinery.extensionfileloader method)": [[265, "importlib.machinery.ExtensionFileLoader.exec_module"]], "factory() (importlib.util.lazyloader class method)": [[265, "importlib.util.LazyLoader.factory"]], "find_loader() (importlib.abc.pathentryfinder method)": [[265, "importlib.abc.PathEntryFinder.find_loader"]], "find_loader() (importlib.machinery.filefinder method)": [[265, "importlib.machinery.FileFinder.find_loader"]], "find_loader() (in module importlib)": [[265, "importlib.find_loader"]], "find_module() (importlib.abc.finder method)": [[265, "importlib.abc.Finder.find_module"]], "find_module() (importlib.abc.metapathfinder method)": [[265, "importlib.abc.MetaPathFinder.find_module"]], "find_module() (importlib.abc.pathentryfinder method)": [[265, "importlib.abc.PathEntryFinder.find_module"]], "find_module() (importlib.machinery.pathfinder class method)": [[265, "importlib.machinery.PathFinder.find_module"]], "find_spec() (importlib.abc.metapathfinder method)": [[265, "importlib.abc.MetaPathFinder.find_spec"]], "find_spec() (importlib.abc.pathentryfinder method)": [[265, "importlib.abc.PathEntryFinder.find_spec"]], "find_spec() (importlib.machinery.filefinder method)": [[265, "importlib.machinery.FileFinder.find_spec"]], "find_spec() (importlib.machinery.pathfinder class method)": [[265, "importlib.machinery.PathFinder.find_spec"]], "find_spec() (in module importlib.util)": [[265, "importlib.util.find_spec"]], "get_code() (importlib.abc.inspectloader method)": [[265, "importlib.abc.InspectLoader.get_code"]], "get_code() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.get_code"]], "get_code() (importlib.machinery.extensionfileloader method)": [[265, "importlib.machinery.ExtensionFileLoader.get_code"]], "get_code() (importlib.machinery.sourcelessfileloader method)": [[265, "importlib.machinery.SourcelessFileLoader.get_code"]], "get_data() (importlib.abc.fileloader method)": [[265, "importlib.abc.FileLoader.get_data"]], "get_data() (importlib.abc.resourceloader method)": [[265, "importlib.abc.ResourceLoader.get_data"]], "get_filename() (importlib.abc.executionloader method)": [[265, "importlib.abc.ExecutionLoader.get_filename"]], "get_filename() (importlib.abc.fileloader method)": [[265, "importlib.abc.FileLoader.get_filename"]], "get_filename() (importlib.machinery.extensionfileloader method)": [[265, "importlib.machinery.ExtensionFileLoader.get_filename"]], "get_source() (importlib.abc.inspectloader method)": [[265, "importlib.abc.InspectLoader.get_source"]], "get_source() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.get_source"]], "get_source() (importlib.machinery.extensionfileloader method)": [[265, "importlib.machinery.ExtensionFileLoader.get_source"]], "get_source() (importlib.machinery.sourcelessfileloader method)": [[265, "importlib.machinery.SourcelessFileLoader.get_source"]], "has_location (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.has_location"]], "import_module() (in module importlib)": [[265, "importlib.import_module"]], "importlib": [[265, "module-importlib"]], "importlib.abc": [[265, "module-importlib.abc"]], "importlib.abc.inspectloader.get_source method": [[265, "index-16"]], "importlib.machinery": [[265, "module-importlib.machinery"]], "importlib.util": [[265, "module-importlib.util"]], "invalidate_caches() (importlib.abc.metapathfinder method)": [[265, "importlib.abc.MetaPathFinder.invalidate_caches"]], "invalidate_caches() (importlib.abc.pathentryfinder method)": [[265, "importlib.abc.PathEntryFinder.invalidate_caches"]], "invalidate_caches() (importlib.machinery.filefinder method)": [[265, "importlib.machinery.FileFinder.invalidate_caches"]], "invalidate_caches() (importlib.machinery.pathfinder class method)": [[265, "importlib.machinery.PathFinder.invalidate_caches"]], "invalidate_caches() (in module importlib)": [[265, "importlib.invalidate_caches"]], "is_package() (importlib.abc.inspectloader method)": [[265, "importlib.abc.InspectLoader.is_package"]], "is_package() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.is_package"]], "is_package() (importlib.machinery.extensionfileloader method)": [[265, "importlib.machinery.ExtensionFileLoader.is_package"]], "is_package() (importlib.machinery.sourcefileloader method)": [[265, "importlib.machinery.SourceFileLoader.is_package"]], "is_package() (importlib.machinery.sourcelessfileloader method)": [[265, "importlib.machinery.SourcelessFileLoader.is_package"]], "load_module() (importlib.abc.fileloader method)": [[265, "importlib.abc.FileLoader.load_module"]], "load_module() (importlib.abc.inspectloader method)": [[265, "importlib.abc.InspectLoader.load_module"]], "load_module() (importlib.abc.loader method)": [[265, "importlib.abc.Loader.load_module"]], "load_module() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.load_module"]], "load_module() (importlib.machinery.sourcefileloader method)": [[265, "importlib.machinery.SourceFileLoader.load_module"]], "load_module() (importlib.machinery.sourcelessfileloader method)": [[265, "importlib.machinery.SourcelessFileLoader.load_module"]], "loader (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.loader"]], "loader_state (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.loader_state"]], "module_for_loader() (in module importlib.util)": [[265, "importlib.util.module_for_loader"]], "module_from_spec() (in module importlib.util)": [[265, "importlib.util.module_from_spec"]], "module_repr() (importlib.abc.loader method)": [[265, "importlib.abc.Loader.module_repr"]], "name (importlib.abc.fileloader attribute)": [[265, "importlib.abc.FileLoader.name"]], "name (importlib.machinery.extensionfileloader attribute)": [[265, "importlib.machinery.ExtensionFileLoader.name"]], "name (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.name"]], "name (importlib.machinery.sourcefileloader attribute)": [[265, "importlib.machinery.SourceFileLoader.name"]], "name (importlib.machinery.sourcelessfileloader attribute)": [[265, "importlib.machinery.SourcelessFileLoader.name"]], "origin (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.origin"]], "parent (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.parent"]], "path (importlib.abc.fileloader attribute)": [[265, "importlib.abc.FileLoader.path"]], "path (importlib.machinery.extensionfileloader attribute)": [[265, "importlib.machinery.ExtensionFileLoader.path"]], "path (importlib.machinery.filefinder attribute)": [[265, "importlib.machinery.FileFinder.path"]], "path (importlib.machinery.sourcefileloader attribute)": [[265, "importlib.machinery.SourceFileLoader.path"]], "path (importlib.machinery.sourcelessfileloader attribute)": [[265, "importlib.machinery.SourcelessFileLoader.path"]], "path_hook() (importlib.machinery.filefinder class method)": [[265, "importlib.machinery.FileFinder.path_hook"]], "path_mtime() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.path_mtime"]], "path_stats() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.path_stats"]], "path_stats() (importlib.machinery.sourcefileloader method)": [[265, "importlib.machinery.SourceFileLoader.path_stats"]], "reload() (in module importlib)": [[265, "importlib.reload"]], "resolve_name() (in module importlib.util)": [[265, "importlib.util.resolve_name"]], "set_data() (importlib.abc.sourceloader method)": [[265, "importlib.abc.SourceLoader.set_data"]], "set_data() (importlib.machinery.sourcefileloader method)": [[265, "importlib.machinery.SourceFileLoader.set_data"]], "set_loader() (in module importlib.util)": [[265, "importlib.util.set_loader"]], "set_package() (in module importlib.util)": [[265, "importlib.util.set_package"]], "source_from_cache() (in module importlib.util)": [[265, "importlib.util.source_from_cache"]], "source_hash() (in module importlib.util)": [[265, "importlib.util.source_hash"]], "source_to_code() (importlib.abc.inspectloader static method)": [[265, "importlib.abc.InspectLoader.source_to_code"]], "spec_from_file_location() (in module importlib.util)": [[265, "importlib.util.spec_from_file_location"]], "spec_from_loader() (in module importlib.util)": [[265, "importlib.util.spec_from_loader"]], "submodule_search_locations (importlib.machinery.modulespec attribute)": [[265, "importlib.machinery.ModuleSpec.submodule_search_locations"]], "pep 566": [[266, "index-0"]], "importlib.metadata": [[266, "module-importlib.metadata"]], "package (class in importlib.resources)": [[267, "importlib.resources.Package"]], "resource (in module importlib.resources)": [[267, "importlib.resources.Resource"]], "as_file() (in module importlib.resources)": [[267, "importlib.resources.as_file"]], "contents() (in module importlib.resources)": [[267, "importlib.resources.contents"]], "files() (in module importlib.resources)": [[267, "importlib.resources.files"]], "importlib.resources": [[267, "module-importlib.resources"]], "is_resource() (in module importlib.resources)": [[267, "importlib.resources.is_resource"]], "open_binary() (in module importlib.resources)": [[267, "importlib.resources.open_binary"]], "open_text() (in module importlib.resources)": [[267, "importlib.resources.open_text"]], "path() (in module importlib.resources)": [[267, "importlib.resources.path"]], "read_binary() (in module importlib.resources)": [[267, "importlib.resources.read_binary"]], "read_text() (in module importlib.resources)": [[267, "importlib.resources.read_text"]], "resourcereader (class in importlib.resources.abc)": [[268, "importlib.resources.abc.ResourceReader"]], "traversable (class in importlib.resources.abc)": [[268, "importlib.resources.abc.Traversable"]], "traversableresources (class in importlib.resources.abc)": [[268, "importlib.resources.abc.TraversableResources"]], "__truediv__() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.__truediv__"]], "contents() (importlib.resources.abc.resourcereader method)": [[268, "importlib.resources.abc.ResourceReader.contents"]], "files() (importlib.resources.abc.traversableresources method)": [[268, "importlib.resources.abc.TraversableResources.files"]], "importlib.resources.abc": [[268, "module-importlib.resources.abc"]], "is_dir() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.is_dir"]], "is_file() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.is_file"]], "is_resource() (importlib.resources.abc.resourcereader method)": [[268, "importlib.resources.abc.ResourceReader.is_resource"]], "iterdir() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.iterdir"]], "joinpath() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.joinpath"]], "name (importlib.resources.abc.traversable attribute)": [[268, "importlib.resources.abc.Traversable.name"]], "open() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.open"]], "open_resource() (importlib.resources.abc.resourcereader method)": [[268, "importlib.resources.abc.ResourceReader.open_resource"]], "read_bytes() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.read_bytes"]], "read_text() (importlib.resources.abc.traversable method)": [[268, "importlib.resources.abc.Traversable.read_text"]], "resource_path() (importlib.resources.abc.resourcereader method)": [[268, "importlib.resources.abc.ResourceReader.resource_path"]], "--details": [[270, "cmdoption-inspect-details"]], "boundarguments (class in inspect)": [[270, "inspect.BoundArguments"]], "co_async_generator (in module inspect)": [[270, "inspect.CO_ASYNC_GENERATOR"]], "co_coroutine (in module inspect)": [[270, "inspect.CO_COROUTINE"]], "co_generator (in module inspect)": [[270, "inspect.CO_GENERATOR"]], "co_iterable_coroutine (in module inspect)": [[270, "inspect.CO_ITERABLE_COROUTINE"]], "co_nested (in module inspect)": [[270, "inspect.CO_NESTED"]], "co_newlocals (in module inspect)": [[270, "inspect.CO_NEWLOCALS"]], "co_optimized (in module inspect)": [[270, "inspect.CO_OPTIMIZED"]], "co_varargs (in module inspect)": [[270, "inspect.CO_VARARGS"]], "co_varkeywords (in module inspect)": [[270, "inspect.CO_VARKEYWORDS"]], "frameinfo (class in inspect)": [[270, "inspect.FrameInfo"]], "parameter (class in inspect)": [[270, "inspect.Parameter"]], "signature (class in inspect)": [[270, "inspect.Signature"]], "traceback (class in inspect)": [[270, "inspect.Traceback"]], "annotation (inspect.parameter attribute)": [[270, "inspect.Parameter.annotation"]], "apply_defaults() (inspect.boundarguments method)": [[270, "inspect.BoundArguments.apply_defaults"]], "args (inspect.boundarguments attribute)": [[270, "inspect.BoundArguments.args"]], "arguments (inspect.boundarguments attribute)": [[270, "inspect.BoundArguments.arguments"]], "bind() (inspect.signature method)": [[270, "inspect.Signature.bind"]], "bind_partial() (inspect.signature method)": [[270, "inspect.Signature.bind_partial"]], "cleandoc() (in module inspect)": [[270, "inspect.cleandoc"]], "code_context (inspect.frameinfo attribute)": [[270, "inspect.FrameInfo.code_context"]], "code_context (inspect.traceback attribute)": [[270, "inspect.Traceback.code_context"]], "currentframe() (in module inspect)": [[270, "inspect.currentframe"]], "default (inspect.parameter attribute)": [[270, "inspect.Parameter.default"]], "description (inspect.parameter.kind attribute)": [[270, "inspect.Parameter.kind.description"]], "empty (inspect.parameter attribute)": [[270, "inspect.Parameter.empty"]], "empty (inspect.signature attribute)": [[270, "inspect.Signature.empty"]], "filename (inspect.frameinfo attribute)": [[270, "inspect.FrameInfo.filename"]], "filename (inspect.traceback attribute)": [[270, "inspect.Traceback.filename"]], "formatargvalues() (in module inspect)": [[270, "inspect.formatargvalues"]], "frame (inspect.frameinfo attribute)": [[270, "inspect.FrameInfo.frame"]], "from_callable() (inspect.signature class method)": [[270, "inspect.Signature.from_callable"]], "function (inspect.frameinfo attribute)": [[270, "inspect.FrameInfo.function"]], "function (inspect.traceback attribute)": [[270, "inspect.Traceback.function"]], "get_annotations() (in module inspect)": [[270, "inspect.get_annotations"]], "getargvalues() (in module inspect)": [[270, "inspect.getargvalues"]], "getattr_static() (in module inspect)": [[270, "inspect.getattr_static"]], "getcallargs() (in module inspect)": [[270, "inspect.getcallargs"]], "getclasstree() (in module inspect)": [[270, "inspect.getclasstree"]], "getclosurevars() (in module inspect)": [[270, "inspect.getclosurevars"]], "getcomments() (in module inspect)": [[270, "inspect.getcomments"]], "getcoroutinelocals() (in module inspect)": [[270, "inspect.getcoroutinelocals"]], "getcoroutinestate() (in module inspect)": [[270, "inspect.getcoroutinestate"]], "getdoc() (in module inspect)": [[270, "inspect.getdoc"]], "getfile() (in module inspect)": [[270, "inspect.getfile"]], "getframeinfo() (in module inspect)": [[270, "inspect.getframeinfo"]], "getfullargspec() (in module inspect)": [[270, "inspect.getfullargspec"]], "getgeneratorlocals() (in module inspect)": [[270, "inspect.getgeneratorlocals"]], "getgeneratorstate() (in module inspect)": [[270, "inspect.getgeneratorstate"]], "getinnerframes() (in module inspect)": [[270, "inspect.getinnerframes"]], "getmembers() (in module inspect)": [[270, "inspect.getmembers"]], "getmembers_static() (in module inspect)": [[270, "inspect.getmembers_static"]], "getmodule() (in module inspect)": [[270, "inspect.getmodule"]], "getmodulename() (in module inspect)": [[270, "inspect.getmodulename"]], "getmro() (in module inspect)": [[270, "inspect.getmro"]], "getouterframes() (in module inspect)": [[270, "inspect.getouterframes"]], "getsource() (in module inspect)": [[270, "inspect.getsource"]], "getsourcefile() (in module inspect)": [[270, "inspect.getsourcefile"]], "getsourcelines() (in module inspect)": [[270, "inspect.getsourcelines"]], "index (inspect.frameinfo attribute)": [[270, "inspect.FrameInfo.index"]], "index (inspect.traceback attribute)": [[270, "inspect.Traceback.index"]], "inspect": [[270, "module-inspect"]], "inspect command line option": [[270, "cmdoption-inspect-details"]], "isabstract() (in module inspect)": [[270, "inspect.isabstract"]], "isasyncgen() (in module inspect)": [[270, "inspect.isasyncgen"]], "isasyncgenfunction() (in module inspect)": [[270, "inspect.isasyncgenfunction"]], "isawaitable() (in module inspect)": [[270, "inspect.isawaitable"]], "isbuiltin() (in module inspect)": [[270, "inspect.isbuiltin"]], "isclass() (in module inspect)": [[270, "inspect.isclass"]], "iscode() (in module inspect)": [[270, "inspect.iscode"]], "iscoroutine() (in module inspect)": [[270, "inspect.iscoroutine"]], "iscoroutinefunction() (in module inspect)": [[270, "inspect.iscoroutinefunction"]], "isdatadescriptor() (in module inspect)": [[270, "inspect.isdatadescriptor"]], "isframe() (in module inspect)": [[270, "inspect.isframe"]], "isfunction() (in module inspect)": [[270, "inspect.isfunction"]], "isgenerator() (in module inspect)": [[270, "inspect.isgenerator"]], "isgeneratorfunction() (in module inspect)": [[270, "inspect.isgeneratorfunction"]], "isgetsetdescriptor() (in module inspect)": [[270, "inspect.isgetsetdescriptor"]], "ismemberdescriptor() (in module inspect)": [[270, "inspect.ismemberdescriptor"]], "ismethod() (in module inspect)": [[270, "inspect.ismethod"]], "ismethoddescriptor() (in module inspect)": [[270, "inspect.ismethoddescriptor"]], "ismethodwrapper() (in module inspect)": [[270, "inspect.ismethodwrapper"]], "ismodule() (in module inspect)": [[270, "inspect.ismodule"]], "isroutine() (in module inspect)": [[270, "inspect.isroutine"]], "istraceback() (in module inspect)": [[270, "inspect.istraceback"]], "kind (inspect.parameter attribute)": [[270, "inspect.Parameter.kind"]], "kwargs (inspect.boundarguments attribute)": [[270, "inspect.BoundArguments.kwargs"]], "lineno (inspect.frameinfo attribute)": [[270, "inspect.FrameInfo.lineno"]], "lineno (inspect.traceback attribute)": [[270, "inspect.Traceback.lineno"]], "name (inspect.parameter attribute)": [[270, "inspect.Parameter.name"]], "parameters (inspect.signature attribute)": [[270, "inspect.Signature.parameters"]], "positions (inspect.frameinfo attribute)": [[270, "inspect.FrameInfo.positions"]], "positions (inspect.traceback attribute)": [[270, "inspect.Traceback.positions"]], "replace() (inspect.parameter method)": [[270, "inspect.Parameter.replace"]], "replace() (inspect.signature method)": [[270, "inspect.Signature.replace"]], "return_annotation (inspect.signature attribute)": [[270, "inspect.Signature.return_annotation"]], "signature (inspect.boundarguments attribute)": [[270, "inspect.BoundArguments.signature"]], "signature() (in module inspect)": [[270, "inspect.signature"]], "stack() (in module inspect)": [[270, "inspect.stack"]], "trace() (in module inspect)": [[270, "inspect.trace"]], "unwrap() (in module inspect)": [[270, "inspect.unwrap"]], "internet": [[271, "index-0"]], "world wide web": [[271, "index-0"], [409, "index-0"], [411, "index-0"]], "socket": [[271, "index-1"], [353, "index-0"], [353, "module-socket"]], "bufferediobase (class in io)": [[273, "io.BufferedIOBase"]], "bufferedrwpair (class in io)": [[273, "io.BufferedRWPair"]], "bufferedrandom (class in io)": [[273, "io.BufferedRandom"]], "bufferedreader (class in io)": [[273, "io.BufferedReader"]], "bufferedwriter (class in io)": [[273, "io.BufferedWriter"]], "bytesio (class in io)": [[273, "io.BytesIO"]], "default_buffer_size (in module io)": [[273, "io.DEFAULT_BUFFER_SIZE"]], "fileio (class in io)": [[273, "io.FileIO"]], "iobase (class in io)": [[273, "io.IOBase"]], "incrementalnewlinedecoder (class in io)": [[273, "io.IncrementalNewlineDecoder"]], "pep 597": [[273, "index-2"], [487, "index-13"]], "pep 686": [[273, "index-1"], [308, "index-5"]], "pythonwarndefaultencoding": [[273, "index-3"], [470, "envvar-PYTHONWARNDEFAULTENCODING"], [470, "index-27"], [487, "index-18"]], "rawiobase (class in io)": [[273, "io.RawIOBase"]], "stringio (class in io)": [[273, "io.StringIO"]], "textiobase (class in io)": [[273, "io.TextIOBase"]], "textiowrapper (class in io)": [[273, "io.TextIOWrapper"]], "unsupportedoperation": [[273, "io.UnsupportedOperation"]], "__del__() (io.iobase method)": [[273, "io.IOBase.__del__"]], "buffer (io.textiobase attribute)": [[273, "io.TextIOBase.buffer"]], "close() (io.iobase method)": [[273, "io.IOBase.close"]], "closed (io.iobase attribute)": [[273, "io.IOBase.closed"]], "detach() (io.bufferediobase method)": [[273, "io.BufferedIOBase.detach"]], "detach() (io.textiobase method)": [[273, "io.TextIOBase.detach"]], "encoding (io.textiobase attribute)": [[273, "io.TextIOBase.encoding"]], "errors (io.textiobase attribute)": [[273, "io.TextIOBase.errors"]], "fileno() (io.iobase method)": [[273, "io.IOBase.fileno"]], "flush() (io.bufferedwriter method)": [[273, "io.BufferedWriter.flush"]], "flush() (io.iobase method)": [[273, "io.IOBase.flush"]], "getbuffer() (io.bytesio method)": [[273, "io.BytesIO.getbuffer"]], "getvalue() (io.bytesio method)": [[273, "io.BytesIO.getvalue"]], "getvalue() (io.stringio method)": [[273, "io.StringIO.getvalue"]], "io": [[273, "module-io"], [443, "index-55"]], "io module": [[273, "index-0"]], "io.incrementalnewlinedecoder class": [[273, "index-5"]], "io.textiowrapper class": [[273, "index-4"]], "isatty() (io.iobase method)": [[273, "io.IOBase.isatty"]], "line_buffering (io.textiowrapper attribute)": [[273, "io.TextIOWrapper.line_buffering"]], "mode (io.fileio attribute)": [[273, "io.FileIO.mode"]], "name (io.fileio attribute)": [[273, "io.FileIO.name"]], "newlines (io.textiobase attribute)": [[273, "io.TextIOBase.newlines"]], "open() (in module io)": [[273, "io.open"]], "open_code() (in module io)": [[273, "io.open_code"]], "peek() (io.bufferedreader method)": [[273, "io.BufferedReader.peek"]], "raw (io.bufferediobase attribute)": [[273, "io.BufferedIOBase.raw"]], "read() (io.bufferediobase method)": [[273, "io.BufferedIOBase.read"]], "read() (io.bufferedreader method)": [[273, "io.BufferedReader.read"]], "read() (io.rawiobase method)": [[273, "io.RawIOBase.read"]], "read() (io.textiobase method)": [[273, "io.TextIOBase.read"]], "read1() (io.bufferediobase method)": [[273, "io.BufferedIOBase.read1"]], "read1() (io.bufferedreader method)": [[273, "io.BufferedReader.read1"]], "read1() (io.bytesio method)": [[273, "io.BytesIO.read1"]], "readable() (io.iobase method)": [[273, "io.IOBase.readable"]], "readall() (io.rawiobase method)": [[273, "io.RawIOBase.readall"]], "readinto() (io.bufferediobase method)": [[273, "io.BufferedIOBase.readinto"]], "readinto() (io.rawiobase method)": [[273, "io.RawIOBase.readinto"]], "readinto1() (io.bufferediobase method)": [[273, "io.BufferedIOBase.readinto1"]], "readinto1() (io.bytesio method)": [[273, "io.BytesIO.readinto1"]], "readline() (io.iobase method)": [[273, "io.IOBase.readline"]], "readline() (io.textiobase method)": [[273, "io.TextIOBase.readline"]], "readlines() (io.iobase method)": [[273, "io.IOBase.readlines"]], "reconfigure() (io.textiowrapper method)": [[273, "io.TextIOWrapper.reconfigure"]], "seek() (io.iobase method)": [[273, "io.IOBase.seek"]], "seek() (io.textiobase method)": [[273, "io.TextIOBase.seek"]], "seek() (io.textiowrapper method)": [[273, "io.TextIOWrapper.seek"]], "seekable() (io.iobase method)": [[273, "io.IOBase.seekable"]], "tell() (io.iobase method)": [[273, "io.IOBase.tell"]], "tell() (io.textiobase method)": [[273, "io.TextIOBase.tell"]], "tell() (io.textiowrapper method)": [[273, "io.TextIOWrapper.tell"]], "text_encoding() (in module io)": [[273, "io.text_encoding"]], "truncate() (io.iobase method)": [[273, "io.IOBase.truncate"]], "writable() (io.iobase method)": [[273, "io.IOBase.writable"]], "write() (io.bufferediobase method)": [[273, "io.BufferedIOBase.write"]], "write() (io.bufferedwriter method)": [[273, "io.BufferedWriter.write"]], "write() (io.rawiobase method)": [[273, "io.RawIOBase.write"]], "write() (io.textiobase method)": [[273, "io.TextIOBase.write"]], "write_through (io.textiowrapper attribute)": [[273, "io.TextIOWrapper.write_through"]], "writelines() (io.iobase method)": [[273, "io.IOBase.writelines"]], "addressvalueerror": [[274, "ipaddress.AddressValueError"]], "ipv4address (class in ipaddress)": [[274, "ipaddress.IPv4Address"]], "ipv4interface (class in ipaddress)": [[274, "ipaddress.IPv4Interface"]], "ipv4network (class in ipaddress)": [[274, "ipaddress.IPv4Network"]], "ipv6address (class in ipaddress)": [[274, "ipaddress.IPv6Address"]], "ipv6interface (class in ipaddress)": [[274, "ipaddress.IPv6Interface"]], "ipv6network (class in ipaddress)": [[274, "ipaddress.IPv6Network"]], "netmaskvalueerror": [[274, "ipaddress.NetmaskValueError"]], "rfc 2373": [[274, "index-1"], [274, "index-3"], [274, "index-5"]], "rfc 3056": [[274, "index-12"]], "rfc 3171": [[274, "index-0"]], "rfc 3330": [[274, "index-4"]], "rfc 3879": [[274, "index-9"]], "rfc 3927": [[274, "index-6"]], "rfc 4007": [[274, "index-11"], [274, "index-8"]], "rfc 4193": [[274, "index-10"]], "rfc 4291": [[274, "index-7"]], "rfc 4380": [[274, "index-13"]], "rfc 5735": [[274, "index-2"]], "__format__() (ipaddress.ipv4address method)": [[274, "ipaddress.IPv4Address.__format__"]], "__format__() (ipaddress.ipv6address method)": [[274, "ipaddress.IPv6Address.__format__"]], "address_exclude() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.address_exclude"]], "address_exclude() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.address_exclude"]], "broadcast_address (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.broadcast_address"]], "broadcast_address (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.broadcast_address"]], "collapse_addresses() (in module ipaddress)": [[274, "ipaddress.collapse_addresses"]], "compare_networks() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.compare_networks"]], "compare_networks() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.compare_networks"]], "compressed (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.compressed"]], "compressed (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.compressed"]], "compressed (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.compressed"]], "compressed (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.compressed"]], "exploded (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.exploded"]], "exploded (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.exploded"]], "exploded (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.exploded"]], "exploded (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.exploded"]], "get_mixed_type_key() (in module ipaddress)": [[274, "ipaddress.get_mixed_type_key"]], "hostmask (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.hostmask"]], "hostmask (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.hostmask"]], "hosts() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.hosts"]], "hosts() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.hosts"]], "ip (ipaddress.ipv4interface attribute)": [[274, "ipaddress.IPv4Interface.ip"]], "ip (ipaddress.ipv6interface attribute)": [[274, "ipaddress.IPv6Interface.ip"]], "ip_address() (in module ipaddress)": [[274, "ipaddress.ip_address"]], "ip_interface() (in module ipaddress)": [[274, "ipaddress.ip_interface"]], "ip_network() (in module ipaddress)": [[274, "ipaddress.ip_network"]], "ipaddress": [[274, "module-ipaddress"]], "ipv4_mapped (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.ipv4_mapped"]], "is_global (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.is_global"]], "is_global (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_global"]], "is_link_local (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.is_link_local"]], "is_link_local (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.is_link_local"]], "is_link_local (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_link_local"]], "is_link_local (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.is_link_local"]], "is_loopback (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.is_loopback"]], "is_loopback (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.is_loopback"]], "is_loopback (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_loopback"]], "is_loopback (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.is_loopback"]], "is_multicast (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.is_multicast"]], "is_multicast (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.is_multicast"]], "is_multicast (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_multicast"]], "is_multicast (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.is_multicast"]], "is_private (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.is_private"]], "is_private (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.is_private"]], "is_private (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_private"]], "is_private (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.is_private"]], "is_reserved (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.is_reserved"]], "is_reserved (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.is_reserved"]], "is_reserved (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_reserved"]], "is_reserved (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.is_reserved"]], "is_site_local (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_site_local"]], "is_site_local (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.is_site_local"]], "is_unspecified (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.is_unspecified"]], "is_unspecified (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.is_unspecified"]], "is_unspecified (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.is_unspecified"]], "is_unspecified (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.is_unspecified"]], "max_prefixlen (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.max_prefixlen"]], "max_prefixlen (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.max_prefixlen"]], "max_prefixlen (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.max_prefixlen"]], "max_prefixlen (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.max_prefixlen"]], "netmask (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.netmask"]], "netmask (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.netmask"]], "network (ipaddress.ipv4interface attribute)": [[274, "ipaddress.IPv4Interface.network"]], "network (ipaddress.ipv6interface attribute)": [[274, "ipaddress.IPv6Interface.network"]], "network_address (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.network_address"]], "network_address (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.network_address"]], "num_addresses (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.num_addresses"]], "num_addresses (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.num_addresses"]], "overlaps() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.overlaps"]], "overlaps() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.overlaps"]], "packed (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.packed"]], "packed (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.packed"]], "prefixlen (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.prefixlen"]], "prefixlen (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.prefixlen"]], "reverse_pointer (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.reverse_pointer"]], "reverse_pointer (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.reverse_pointer"]], "scope_id (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.scope_id"]], "sixtofour (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.sixtofour"]], "subnet_of() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.subnet_of"]], "subnet_of() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.subnet_of"]], "subnets() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.subnets"]], "subnets() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.subnets"]], "summarize_address_range() (in module ipaddress)": [[274, "ipaddress.summarize_address_range"]], "supernet() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.supernet"]], "supernet() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.supernet"]], "supernet_of() (ipaddress.ipv4network method)": [[274, "ipaddress.IPv4Network.supernet_of"]], "supernet_of() (ipaddress.ipv6network method)": [[274, "ipaddress.IPv6Network.supernet_of"]], "teredo (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.teredo"]], "v4_int_to_packed() (in module ipaddress)": [[274, "ipaddress.v4_int_to_packed"]], "v6_int_to_packed() (in module ipaddress)": [[274, "ipaddress.v6_int_to_packed"]], "version (ipaddress.ipv4address attribute)": [[274, "ipaddress.IPv4Address.version"]], "version (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.version"]], "version (ipaddress.ipv6address attribute)": [[274, "ipaddress.IPv6Address.version"]], "version (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.version"]], "with_hostmask (ipaddress.ipv4interface attribute)": [[274, "ipaddress.IPv4Interface.with_hostmask"]], "with_hostmask (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.with_hostmask"]], "with_hostmask (ipaddress.ipv6interface attribute)": [[274, "ipaddress.IPv6Interface.with_hostmask"]], "with_hostmask (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.with_hostmask"]], "with_netmask (ipaddress.ipv4interface attribute)": [[274, "ipaddress.IPv4Interface.with_netmask"]], "with_netmask (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.with_netmask"]], "with_netmask (ipaddress.ipv6interface attribute)": [[274, "ipaddress.IPv6Interface.with_netmask"]], "with_netmask (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.with_netmask"]], "with_prefixlen (ipaddress.ipv4interface attribute)": [[274, "ipaddress.IPv4Interface.with_prefixlen"]], "with_prefixlen (ipaddress.ipv4network attribute)": [[274, "ipaddress.IPv4Network.with_prefixlen"]], "with_prefixlen (ipaddress.ipv6interface attribute)": [[274, "ipaddress.IPv6Interface.with_prefixlen"]], "with_prefixlen (ipaddress.ipv6network attribute)": [[274, "ipaddress.IPv6Network.with_prefixlen"]], "accumulate() (in module itertools)": [[276, "itertools.accumulate"]], "chain() (in module itertools)": [[276, "itertools.chain"]], "combinations() (in module itertools)": [[276, "itertools.combinations"]], "combinations_with_replacement() (in module itertools)": [[276, "itertools.combinations_with_replacement"]], "compress() (in module itertools)": [[276, "itertools.compress"]], "count() (in module itertools)": [[276, "itertools.count"]], "cycle() (in module itertools)": [[276, "itertools.cycle"]], "dropwhile() (in module itertools)": [[276, "itertools.dropwhile"]], "filterfalse() (in module itertools)": [[276, "itertools.filterfalse"]], "from_iterable() (itertools.chain class method)": [[276, "itertools.chain.from_iterable"]], "groupby() (in module itertools)": [[276, "itertools.groupby"]], "islice() (in module itertools)": [[276, "itertools.islice"]], "itertools": [[276, "module-itertools"]], "pairwise() (in module itertools)": [[276, "itertools.pairwise"]], "permutations() (in module itertools)": [[276, "itertools.permutations"]], "product() (in module itertools)": [[276, "itertools.product"]], "repeat() (in module itertools)": [[276, "itertools.repeat"]], "starmap() (in module itertools)": [[276, "itertools.starmap"]], "takewhile() (in module itertools)": [[276, "itertools.takewhile"]], "tee() (in module itertools)": [[276, "itertools.tee"]], "zip_longest() (in module itertools)": [[276, "itertools.zip_longest"]], "--compact": [[277, "cmdoption-json.tool-indent"]], "--json-lines": [[277, "cmdoption-json.tool-json-lines"]], "--no-ensure-ascii": [[277, "cmdoption-json.tool-no-ensure-ascii"]], "--no-indent": [[277, "cmdoption-json.tool-indent"]], "--sort-keys": [[277, "cmdoption-json.tool-sort-keys"]], "--tab": [[277, "cmdoption-json.tool-indent"]], "jsondecodeerror": [[277, "json.JSONDecodeError"]], "jsondecoder (class in json)": [[277, "json.JSONDecoder"]], "jsonencoder (class in json)": [[277, "json.JSONEncoder"]], "rfc 4627": [[277, "index-1"], [277, "index-3"]], "rfc 7159": [[277, "index-0"], [277, "index-2"], [277, "index-4"]], "colno (json.jsondecodeerror attribute)": [[277, "json.JSONDecodeError.colno"]], "decode() (json.jsondecoder method)": [[277, "json.JSONDecoder.decode"]], "default() (json.jsonencoder method)": [[277, "json.JSONEncoder.default"]], "doc (json.jsondecodeerror attribute)": [[277, "json.JSONDecodeError.doc"]], "dump() (in module json)": [[277, "json.dump"]], "dumps() (in module json)": [[277, "json.dumps"]], "encode() (json.jsonencoder method)": [[277, "json.JSONEncoder.encode"]], "infile": [[277, "cmdoption-json.tool-arg-infile"]], "iterencode() (json.jsonencoder method)": [[277, "json.JSONEncoder.iterencode"]], "json": [[277, "module-json"], [461, "index-1"]], "json.tool": [[277, "module-json.tool"]], "json.tool command line option": [[277, "cmdoption-json.tool-arg-infile"], [277, "cmdoption-json.tool-arg-outfile"], [277, "cmdoption-json.tool-h"], [277, "cmdoption-json.tool-indent"], [277, "cmdoption-json.tool-json-lines"], [277, "cmdoption-json.tool-no-ensure-ascii"], [277, "cmdoption-json.tool-sort-keys"]], "lineno (json.jsondecodeerror attribute)": [[277, "json.JSONDecodeError.lineno"]], "load() (in module json)": [[277, "json.load"]], "loads() (in module json)": [[277, "json.loads"]], "msg (json.jsondecodeerror attribute)": [[277, "json.JSONDecodeError.msg"]], "outfile": [[277, "cmdoption-json.tool-arg-outfile"]], "pos (json.jsondecodeerror attribute)": [[277, "json.JSONDecodeError.pos"]], "raw_decode() (json.jsondecoder method)": [[277, "json.JSONDecoder.raw_decode"]], "iskeyword() (in module keyword)": [[278, "keyword.iskeyword"]], "issoftkeyword() (in module keyword)": [[278, "keyword.issoftkeyword"]], "keyword": [[278, "module-keyword"], [442, "index-12"], [442, "index-13"], [442, "index-14"], [442, "index-16"], [442, "index-18"], [442, "index-18"], [442, "index-3"], [442, "index-4"], [442, "index-49"], [442, "index-6"], [442, "index-9"], [445, "index-23"], [445, "index-57"], [450, "index-13"], [450, "index-14"], [451, "index-25"], [451, "index-31"], [451, "index-32"], [451, "index-33"], [451, "index-34"]], "kwlist (in module keyword)": [[278, "keyword.kwlist"]], "softkwlist (in module keyword)": [[278, "keyword.softkwlist"]], "checkcache() (in module linecache)": [[280, "linecache.checkcache"]], "clearcache() (in module linecache)": [[280, "linecache.clearcache"]], "getline() (in module linecache)": [[280, "linecache.getline"]], "lazycache() (in module linecache)": [[280, "linecache.lazycache"]], "linecache": [[280, "module-linecache"]], "abday_1 (in module locale)": [[281, "locale.ABDAY_1"]], "abday_2 (in module locale)": [[281, "locale.ABDAY_2"]], "abday_3 (in module locale)": [[281, "locale.ABDAY_3"]], "abday_4 (in module locale)": [[281, "locale.ABDAY_4"]], "abday_5 (in module locale)": [[281, "locale.ABDAY_5"]], "abday_6 (in module locale)": [[281, "locale.ABDAY_6"]], "abday_7 (in module locale)": [[281, "locale.ABDAY_7"]], "abmon_1 (in module locale)": [[281, "locale.ABMON_1"]], "abmon_10 (in module locale)": [[281, "locale.ABMON_10"]], "abmon_11 (in module locale)": [[281, "locale.ABMON_11"]], "abmon_12 (in module locale)": [[281, "locale.ABMON_12"]], "abmon_2 (in module locale)": [[281, "locale.ABMON_2"]], "abmon_3 (in module locale)": [[281, "locale.ABMON_3"]], "abmon_4 (in module locale)": [[281, "locale.ABMON_4"]], "abmon_5 (in module locale)": [[281, "locale.ABMON_5"]], "abmon_6 (in module locale)": [[281, "locale.ABMON_6"]], "abmon_7 (in module locale)": [[281, "locale.ABMON_7"]], "abmon_8 (in module locale)": [[281, "locale.ABMON_8"]], "abmon_9 (in module locale)": [[281, "locale.ABMON_9"]], "alt_digits (in module locale)": [[281, "locale.ALT_DIGITS"]], "char_max (in module locale)": [[281, "locale.CHAR_MAX"]], "codeset (in module locale)": [[281, "locale.CODESET"]], "crncystr (in module locale)": [[281, "locale.CRNCYSTR"]], "day_1 (in module locale)": [[281, "locale.DAY_1"]], "day_2 (in module locale)": [[281, "locale.DAY_2"]], "day_3 (in module locale)": [[281, "locale.DAY_3"]], "day_4 (in module locale)": [[281, "locale.DAY_4"]], "day_5 (in module locale)": [[281, "locale.DAY_5"]], "day_6 (in module locale)": [[281, "locale.DAY_6"]], "day_7 (in module locale)": [[281, "locale.DAY_7"]], "d_fmt (in module locale)": [[281, "locale.D_FMT"]], "d_t_fmt (in module locale)": [[281, "locale.D_T_FMT"]], "era (in module locale)": [[281, "locale.ERA"]], "era_d_fmt (in module locale)": [[281, "locale.ERA_D_FMT"]], "era_d_t_fmt (in module locale)": [[281, "locale.ERA_D_T_FMT"]], "era_t_fmt (in module locale)": [[281, "locale.ERA_T_FMT"]], "lc_all (in module locale)": [[281, "locale.LC_ALL"]], "lc_collate (in module locale)": [[281, "locale.LC_COLLATE"]], "lc_ctype (in module locale)": [[281, "locale.LC_CTYPE"]], "lc_messages (in module locale)": [[281, "locale.LC_MESSAGES"]], "lc_monetary (in module locale)": [[281, "locale.LC_MONETARY"]], "lc_numeric (in module locale)": [[281, "locale.LC_NUMERIC"]], "lc_time (in module locale)": [[281, "locale.LC_TIME"]], "mon_1 (in module locale)": [[281, "locale.MON_1"]], "mon_10 (in module locale)": [[281, "locale.MON_10"]], "mon_11 (in module locale)": [[281, "locale.MON_11"]], "mon_12 (in module locale)": [[281, "locale.MON_12"]], "mon_2 (in module locale)": [[281, "locale.MON_2"]], "mon_3 (in module locale)": [[281, "locale.MON_3"]], "mon_4 (in module locale)": [[281, "locale.MON_4"]], "mon_5 (in module locale)": [[281, "locale.MON_5"]], "mon_6 (in module locale)": [[281, "locale.MON_6"]], "mon_7 (in module locale)": [[281, "locale.MON_7"]], "mon_8 (in module locale)": [[281, "locale.MON_8"]], "mon_9 (in module locale)": [[281, "locale.MON_9"]], "noexpr (in module locale)": [[281, "locale.NOEXPR"]], "radixchar (in module locale)": [[281, "locale.RADIXCHAR"]], "rfc 1766": [[281, "index-4"], [281, "index-5"]], "thousep (in module locale)": [[281, "locale.THOUSEP"]], "t_fmt (in module locale)": [[281, "locale.T_FMT"]], "t_fmt_ampm (in module locale)": [[281, "locale.T_FMT_AMPM"]], "yesexpr (in module locale)": [[281, "locale.YESEXPR"]], "_locale": [[281, "index-0"]], "atof() (in module locale)": [[281, "locale.atof"]], "atoi() (in module locale)": [[281, "locale.atoi"]], "bind_textdomain_codeset() (in module locale)": [[281, "locale.bind_textdomain_codeset"]], "bindtextdomain() (in module locale)": [[281, "locale.bindtextdomain"]], "currency() (in module locale)": [[281, "locale.currency"]], "dcgettext() (in module locale)": [[281, "locale.dcgettext"]], "delocalize() (in module locale)": [[281, "locale.delocalize"]], "dgettext() (in module locale)": [[281, "locale.dgettext"]], "format() (in module locale)": [[281, "locale.format"]], "format_string() (in module locale)": [[281, "locale.format_string"]], "getdefaultlocale() (in module locale)": [[281, "locale.getdefaultlocale"]], "getencoding() (in module locale)": [[281, "locale.getencoding"]], "getlocale() (in module locale)": [[281, "locale.getlocale"]], "getpreferredencoding() (in module locale)": [[281, "locale.getpreferredencoding"]], "gettext() (in module locale)": [[281, "locale.gettext"]], "locale": [[281, "module-locale"]], "localeconv() (in module locale)": [[281, "locale.localeconv"]], "localize() (in module locale)": [[281, "locale.localize"]], "nl_langinfo() (in module locale)": [[281, "locale.nl_langinfo"]], "normalize() (in module locale)": [[281, "locale.normalize"]], "resetlocale() (in module locale)": [[281, "locale.resetlocale"]], "setlocale() (in module locale)": [[281, "locale.setlocale"]], "str() (in module locale)": [[281, "locale.str"]], "strcoll() (in module locale)": [[281, "locale.strcoll"]], "strxfrm() (in module locale)": [[281, "locale.strxfrm"]], "textdomain() (in module locale)": [[281, "locale.textdomain"]], "bufferingformatter (class in logging)": [[282, "logging.BufferingFormatter"]], "critical (in module logging)": [[282, "logging.CRITICAL"]], "debug (in module logging)": [[282, "logging.DEBUG"]], "error (in module logging)": [[282, "logging.ERROR"]], "errors": [[282, "index-0"], [444, "index-13"]], "filter (class in logging)": [[282, "logging.Filter"]], "formatter (class in logging)": [[282, "logging.Formatter"]], "handler (class in logging)": [[282, "logging.Handler"]], "info (in module logging)": [[282, "logging.INFO"]], "logrecord (class in logging)": [[282, "logging.LogRecord"]], "logger (class in logging)": [[282, "logging.Logger"]], "loggeradapter (class in logging)": [[282, "logging.LoggerAdapter"]], "notset (in module logging)": [[282, "logging.NOTSET"]], "warning (in module logging)": [[282, "logging.WARNING"]], "__init__() (logging.handler method)": [[282, "logging.Handler.__init__"]], "_log (logging.loggeradapter attribute)": [[282, "logging.LoggerAdapter._log"]], "acquire() (logging.handler method)": [[282, "logging.Handler.acquire"]], "addfilter() (logging.handler method)": [[282, "logging.Handler.addFilter"]], "addfilter() (logging.logger method)": [[282, "logging.Logger.addFilter"]], "addhandler() (logging.logger method)": [[282, "logging.Logger.addHandler"]], "addlevelname() (in module logging)": [[282, "logging.addLevelName"]], "basicconfig() (in module logging)": [[282, "logging.basicConfig"]], "capturewarnings() (in module logging)": [[282, "logging.captureWarnings"]], "close() (logging.handler method)": [[282, "logging.Handler.close"]], "createlock() (logging.handler method)": [[282, "logging.Handler.createLock"]], "critical() (in module logging)": [[282, "logging.critical"]], "critical() (logging.logger method)": [[282, "logging.Logger.critical"]], "debug() (in module logging)": [[282, "logging.debug"]], "debug() (logging.logger method)": [[282, "logging.Logger.debug"]], "disable() (in module logging)": [[282, "logging.disable"]], "disabled (logging.logger attribute)": [[282, "logging.Logger.disabled"]], "emit() (logging.handler method)": [[282, "logging.Handler.emit"]], "error() (in module logging)": [[282, "logging.error"]], "error() (logging.logger method)": [[282, "logging.Logger.error"]], "exception() (in module logging)": [[282, "logging.exception"]], "exception() (logging.logger method)": [[282, "logging.Logger.exception"]], "filter() (logging.filter method)": [[282, "logging.Filter.filter"]], "filter() (logging.handler method)": [[282, "logging.Handler.filter"]], "filter() (logging.logger method)": [[282, "logging.Logger.filter"]], "findcaller() (logging.logger method)": [[282, "logging.Logger.findCaller"]], "flush() (logging.handler method)": [[282, "logging.Handler.flush"]], "format() (logging.bufferingformatter method)": [[282, "logging.BufferingFormatter.format"]], "format() (logging.formatter method)": [[282, "logging.Formatter.format"]], "format() (logging.handler method)": [[282, "logging.Handler.format"]], "formatexception() (logging.formatter method)": [[282, "logging.Formatter.formatException"]], "formatfooter() (logging.bufferingformatter method)": [[282, "logging.BufferingFormatter.formatFooter"]], "formatheader() (logging.bufferingformatter method)": [[282, "logging.BufferingFormatter.formatHeader"]], "formatstack() (logging.formatter method)": [[282, "logging.Formatter.formatStack"]], "formattime() (logging.formatter method)": [[282, "logging.Formatter.formatTime"]], "getchild() (logging.logger method)": [[282, "logging.Logger.getChild"]], "geteffectivelevel() (logging.logger method)": [[282, "logging.Logger.getEffectiveLevel"]], "getlevelname() (in module logging)": [[282, "logging.getLevelName"]], "getlevelnamesmapping() (in module logging)": [[282, "logging.getLevelNamesMapping"]], "getlogrecordfactory() (in module logging)": [[282, "logging.getLogRecordFactory"]], "getlogger() (in module logging)": [[282, "logging.getLogger"]], "getloggerclass() (in module logging)": [[282, "logging.getLoggerClass"]], "getmessage() (logging.logrecord method)": [[282, "logging.LogRecord.getMessage"]], "handle() (logging.handler method)": [[282, "logging.Handler.handle"]], "handle() (logging.logger method)": [[282, "logging.Logger.handle"]], "handleerror() (logging.handler method)": [[282, "logging.Handler.handleError"]], "handlers (logging.logger attribute)": [[282, "logging.Logger.handlers"]], "hashandlers() (logging.logger method)": [[282, "logging.Logger.hasHandlers"]], "info() (in module logging)": [[282, "logging.info"]], "info() (logging.logger method)": [[282, "logging.Logger.info"]], "isenabledfor() (logging.logger method)": [[282, "logging.Logger.isEnabledFor"]], "lastresort (in module logging)": [[282, "logging.lastResort"]], "level (logging.logger attribute)": [[282, "logging.Logger.level"]], "log() (in module logging)": [[282, "logging.log"]], "log() (logging.logger method)": [[282, "logging.Logger.log"]], "logging": [[282, "index-0"], [282, "module-logging"]], "makelogrecord() (in module logging)": [[282, "logging.makeLogRecord"]], "makerecord() (logging.logger method)": [[282, "logging.Logger.makeRecord"]], "manager (logging.loggeradapter attribute)": [[282, "logging.LoggerAdapter.manager"]], "name (logging.logger attribute)": [[282, "logging.Logger.name"]], "parent (logging.logger attribute)": [[282, "logging.Logger.parent"]], "process() (logging.loggeradapter method)": [[282, "logging.LoggerAdapter.process"]], "propagate (logging.logger attribute)": [[282, "logging.Logger.propagate"]], "raiseexceptions (in module logging)": [[282, "logging.raiseExceptions"]], "release() (logging.handler method)": [[282, "logging.Handler.release"]], "removefilter() (logging.handler method)": [[282, "logging.Handler.removeFilter"]], "removefilter() (logging.logger method)": [[282, "logging.Logger.removeFilter"]], "removehandler() (logging.logger method)": [[282, "logging.Logger.removeHandler"]], "setformatter() (logging.handler method)": [[282, "logging.Handler.setFormatter"]], "setlevel() (logging.handler method)": [[282, "logging.Handler.setLevel"]], "setlevel() (logging.logger method)": [[282, "logging.Logger.setLevel"]], "setlogrecordfactory() (in module logging)": [[282, "logging.setLogRecordFactory"]], "setloggerclass() (in module logging)": [[282, "logging.setLoggerClass"]], "shutdown() (in module logging)": [[282, "logging.shutdown"]], "warning() (in module logging)": [[282, "logging.warning"]], "warning() (logging.logger method)": [[282, "logging.Logger.warning"]], "dictconfig() (in module logging.config)": [[283, "logging.config.dictConfig"]], "fileconfig() (in module logging.config)": [[283, "logging.config.fileConfig"]], "listen() (in module logging.config)": [[283, "logging.config.listen"]], "logging.config": [[283, "module-logging.config"]], "stoplistening() (in module logging.config)": [[283, "logging.config.stopListening"]], "baserotatinghandler (class in logging.handlers)": [[284, "logging.handlers.BaseRotatingHandler"]], "bufferinghandler (class in logging.handlers)": [[284, "logging.handlers.BufferingHandler"]], "datagramhandler (class in logging.handlers)": [[284, "logging.handlers.DatagramHandler"]], "filehandler (class in logging)": [[284, "logging.FileHandler"]], "httphandler (class in logging.handlers)": [[284, "logging.handlers.HTTPHandler"]], "memoryhandler (class in logging.handlers)": [[284, "logging.handlers.MemoryHandler"]], "nteventloghandler (class in logging.handlers)": [[284, "logging.handlers.NTEventLogHandler"]], "nullhandler (class in logging)": [[284, "logging.NullHandler"]], "queuehandler (class in logging.handlers)": [[284, "logging.handlers.QueueHandler"]], "queuelistener (class in logging.handlers)": [[284, "logging.handlers.QueueListener"]], "rotatingfilehandler (class in logging.handlers)": [[284, "logging.handlers.RotatingFileHandler"]], "smtphandler (class in logging.handlers)": [[284, "logging.handlers.SMTPHandler"]], "sockethandler (class in logging.handlers)": [[284, "logging.handlers.SocketHandler"]], "streamhandler (class in logging)": [[284, "logging.StreamHandler"]], "sysloghandler (class in logging.handlers)": [[284, "logging.handlers.SysLogHandler"]], "timedrotatingfilehandler (class in logging.handlers)": [[284, "logging.handlers.TimedRotatingFileHandler"]], "watchedfilehandler (class in logging.handlers)": [[284, "logging.handlers.WatchedFileHandler"]], "close() (logging.filehandler method)": [[284, "logging.FileHandler.close"]], "close() (logging.handlers.memoryhandler method)": [[284, "logging.handlers.MemoryHandler.close"]], "close() (logging.handlers.nteventloghandler method)": [[284, "logging.handlers.NTEventLogHandler.close"]], "close() (logging.handlers.sockethandler method)": [[284, "logging.handlers.SocketHandler.close"]], "close() (logging.handlers.sysloghandler method)": [[284, "logging.handlers.SysLogHandler.close"]], "createlock() (logging.nullhandler method)": [[284, "logging.NullHandler.createLock"]], "createsocket() (logging.handlers.sockethandler method)": [[284, "logging.handlers.SocketHandler.createSocket"]], "createsocket() (logging.handlers.sysloghandler method)": [[284, "logging.handlers.SysLogHandler.createSocket"]], "dequeue() (logging.handlers.queuelistener method)": [[284, "logging.handlers.QueueListener.dequeue"]], "dorollover() (logging.handlers.rotatingfilehandler method)": [[284, "logging.handlers.RotatingFileHandler.doRollover"]], "dorollover() (logging.handlers.timedrotatingfilehandler method)": [[284, "logging.handlers.TimedRotatingFileHandler.doRollover"]], "emit() (logging.filehandler method)": [[284, "logging.FileHandler.emit"]], "emit() (logging.nullhandler method)": [[284, "logging.NullHandler.emit"]], "emit() (logging.streamhandler method)": [[284, "logging.StreamHandler.emit"]], "emit() (logging.handlers.bufferinghandler method)": [[284, "logging.handlers.BufferingHandler.emit"]], "emit() (logging.handlers.datagramhandler method)": [[284, "logging.handlers.DatagramHandler.emit"]], "emit() (logging.handlers.httphandler method)": [[284, "logging.handlers.HTTPHandler.emit"]], "emit() (logging.handlers.nteventloghandler method)": [[284, "logging.handlers.NTEventLogHandler.emit"]], "emit() (logging.handlers.queuehandler method)": [[284, "logging.handlers.QueueHandler.emit"]], "emit() (logging.handlers.rotatingfilehandler method)": [[284, "logging.handlers.RotatingFileHandler.emit"]], "emit() (logging.handlers.smtphandler method)": [[284, "logging.handlers.SMTPHandler.emit"]], "emit() (logging.handlers.sockethandler method)": [[284, "logging.handlers.SocketHandler.emit"]], "emit() (logging.handlers.sysloghandler method)": [[284, "logging.handlers.SysLogHandler.emit"]], "emit() (logging.handlers.timedrotatingfilehandler method)": [[284, "logging.handlers.TimedRotatingFileHandler.emit"]], "emit() (logging.handlers.watchedfilehandler method)": [[284, "logging.handlers.WatchedFileHandler.emit"]], "encodepriority() (logging.handlers.sysloghandler method)": [[284, "logging.handlers.SysLogHandler.encodePriority"]], "enqueue() (logging.handlers.queuehandler method)": [[284, "logging.handlers.QueueHandler.enqueue"]], "enqueue_sentinel() (logging.handlers.queuelistener method)": [[284, "logging.handlers.QueueListener.enqueue_sentinel"]], "flush() (logging.streamhandler method)": [[284, "logging.StreamHandler.flush"]], "flush() (logging.handlers.bufferinghandler method)": [[284, "logging.handlers.BufferingHandler.flush"]], "flush() (logging.handlers.memoryhandler method)": [[284, "logging.handlers.MemoryHandler.flush"]], "geteventcategory() (logging.handlers.nteventloghandler method)": [[284, "logging.handlers.NTEventLogHandler.getEventCategory"]], "geteventtype() (logging.handlers.nteventloghandler method)": [[284, "logging.handlers.NTEventLogHandler.getEventType"]], "getfilestodelete() (logging.handlers.timedrotatingfilehandler method)": [[284, "logging.handlers.TimedRotatingFileHandler.getFilesToDelete"]], "getmessageid() (logging.handlers.nteventloghandler method)": [[284, "logging.handlers.NTEventLogHandler.getMessageID"]], "getsubject() (logging.handlers.smtphandler method)": [[284, "logging.handlers.SMTPHandler.getSubject"]], "handle() (logging.nullhandler method)": [[284, "logging.NullHandler.handle"]], "handle() (logging.handlers.queuelistener method)": [[284, "logging.handlers.QueueListener.handle"]], "handleerror() (logging.handlers.sockethandler method)": [[284, "logging.handlers.SocketHandler.handleError"]], "logging.handlers": [[284, "module-logging.handlers"]], "makepickle() (logging.handlers.sockethandler method)": [[284, "logging.handlers.SocketHandler.makePickle"]], "makesocket() (logging.handlers.datagramhandler method)": [[284, "logging.handlers.DatagramHandler.makeSocket"]], "makesocket() (logging.handlers.sockethandler method)": [[284, "logging.handlers.SocketHandler.makeSocket"]], "maplogrecord() (logging.handlers.httphandler method)": [[284, "logging.handlers.HTTPHandler.mapLogRecord"]], "mappriority() (logging.handlers.sysloghandler method)": [[284, "logging.handlers.SysLogHandler.mapPriority"]], "namer (logging.handlers.baserotatinghandler attribute)": [[284, "logging.handlers.BaseRotatingHandler.namer"]], "prepare() (logging.handlers.queuehandler method)": [[284, "logging.handlers.QueueHandler.prepare"]], "prepare() (logging.handlers.queuelistener method)": [[284, "logging.handlers.QueueListener.prepare"]], "reopenifneeded() (logging.handlers.watchedfilehandler method)": [[284, "logging.handlers.WatchedFileHandler.reopenIfNeeded"]], "rotate() (logging.handlers.baserotatinghandler method)": [[284, "logging.handlers.BaseRotatingHandler.rotate"]], "rotation_filename() (logging.handlers.baserotatinghandler method)": [[284, "logging.handlers.BaseRotatingHandler.rotation_filename"]], "rotator (logging.handlers.baserotatinghandler attribute)": [[284, "logging.handlers.BaseRotatingHandler.rotator"]], "send() (logging.handlers.datagramhandler method)": [[284, "logging.handlers.DatagramHandler.send"]], "send() (logging.handlers.sockethandler method)": [[284, "logging.handlers.SocketHandler.send"]], "setstream() (logging.streamhandler method)": [[284, "logging.StreamHandler.setStream"]], "settarget() (logging.handlers.memoryhandler method)": [[284, "logging.handlers.MemoryHandler.setTarget"]], "shouldflush() (logging.handlers.bufferinghandler method)": [[284, "logging.handlers.BufferingHandler.shouldFlush"]], "shouldflush() (logging.handlers.memoryhandler method)": [[284, "logging.handlers.MemoryHandler.shouldFlush"]], "start() (logging.handlers.queuelistener method)": [[284, "logging.handlers.QueueListener.start"]], "stop() (logging.handlers.queuelistener method)": [[284, "logging.handlers.QueueListener.stop"]], "terminator (logging.streamhandler attribute)": [[284, "logging.StreamHandler.terminator"]], "lzmacompressor (class in lzma)": [[285, "lzma.LZMACompressor"]], "lzmadecompressor (class in lzma)": [[285, "lzma.LZMADecompressor"]], "lzmaerror": [[285, "lzma.LZMAError"]], "lzmafile (class in lzma)": [[285, "lzma.LZMAFile"]], "check (lzma.lzmadecompressor attribute)": [[285, "lzma.LZMADecompressor.check"]], "compress() (in module lzma)": [[285, "lzma.compress"]], "compress() (lzma.lzmacompressor method)": [[285, "lzma.LZMACompressor.compress"]], "decompress() (in module lzma)": [[285, "lzma.decompress"]], "decompress() (lzma.lzmadecompressor method)": [[285, "lzma.LZMADecompressor.decompress"]], "eof (lzma.lzmadecompressor attribute)": [[285, "lzma.LZMADecompressor.eof"]], "flush() (lzma.lzmacompressor method)": [[285, "lzma.LZMACompressor.flush"]], "is_check_supported() (in module lzma)": [[285, "lzma.is_check_supported"]], "lzma": [[285, "module-lzma"]], "needs_input (lzma.lzmadecompressor attribute)": [[285, "lzma.LZMADecompressor.needs_input"]], "open() (in module lzma)": [[285, "lzma.open"]], "peek() (lzma.lzmafile method)": [[285, "lzma.LZMAFile.peek"]], "unused_data (lzma.lzmadecompressor attribute)": [[285, "lzma.LZMADecompressor.unused_data"]], "babyl (class in mailbox)": [[286, "mailbox.Babyl"]], "babylmessage (class in mailbox)": [[286, "mailbox.BabylMessage"]], "externalclasherror": [[286, "mailbox.ExternalClashError"]], "formaterror": [[286, "mailbox.FormatError"]], "mh (class in mailbox)": [[286, "mailbox.MH"]], "mhmessage (class in mailbox)": [[286, "mailbox.MHMessage"]], "mmdf (class in mailbox)": [[286, "mailbox.MMDF"]], "mmdfmessage (class in mailbox)": [[286, "mailbox.MMDFMessage"]], "mailbox (class in mailbox)": [[286, "mailbox.Mailbox"]], "maildir (class in mailbox)": [[286, "mailbox.Maildir"]], "maildirmessage (class in mailbox)": [[286, "mailbox.MaildirMessage"]], "message (class in mailbox)": [[286, "mailbox.Message"]], "nosuchmailboxerror": [[286, "mailbox.NoSuchMailboxError"]], "notemptyerror": [[286, "mailbox.NotEmptyError"]], "__contains__() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.__contains__"]], "__delitem__() (mailbox.mh method)": [[286, "mailbox.MH.__delitem__"]], "__delitem__() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.__delitem__"]], "__getitem__() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.__getitem__"]], "__iter__() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.__iter__"]], "__len__() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.__len__"]], "__setitem__() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.__setitem__"]], "__setitem__() (mailbox.maildir method)": [[286, "mailbox.Maildir.__setitem__"]], "add() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.add"]], "add() (mailbox.maildir method)": [[286, "mailbox.Maildir.add"]], "add_flag() (mailbox.mmdfmessage method)": [[286, "mailbox.MMDFMessage.add_flag"]], "add_flag() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.add_flag"]], "add_flag() (mailbox.mboxmessage method)": [[286, "mailbox.mboxMessage.add_flag"]], "add_folder() (mailbox.mh method)": [[286, "mailbox.MH.add_folder"]], "add_folder() (mailbox.maildir method)": [[286, "mailbox.Maildir.add_folder"]], "add_label() (mailbox.babylmessage method)": [[286, "mailbox.BabylMessage.add_label"]], "add_sequence() (mailbox.mhmessage method)": [[286, "mailbox.MHMessage.add_sequence"]], "clean() (mailbox.maildir method)": [[286, "mailbox.Maildir.clean"]], "clear() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.clear"]], "close() (mailbox.mh method)": [[286, "mailbox.MH.close"]], "close() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.close"]], "close() (mailbox.maildir method)": [[286, "mailbox.Maildir.close"]], "colon (mailbox.maildir attribute)": [[286, "mailbox.Maildir.colon"]], "discard() (mailbox.mh method)": [[286, "mailbox.MH.discard"]], "discard() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.discard"]], "flush() (mailbox.mh method)": [[286, "mailbox.MH.flush"]], "flush() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.flush"]], "flush() (mailbox.maildir method)": [[286, "mailbox.Maildir.flush"]], "get() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.get"]], "get_bytes() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.get_bytes"]], "get_date() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.get_date"]], "get_file() (mailbox.babyl method)": [[286, "mailbox.Babyl.get_file"]], "get_file() (mailbox.mh method)": [[286, "mailbox.MH.get_file"]], "get_file() (mailbox.mmdf method)": [[286, "mailbox.MMDF.get_file"]], "get_file() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.get_file"]], "get_file() (mailbox.maildir method)": [[286, "mailbox.Maildir.get_file"]], "get_file() (mailbox.mbox method)": [[286, "mailbox.mbox.get_file"]], "get_flags() (mailbox.mmdfmessage method)": [[286, "mailbox.MMDFMessage.get_flags"]], "get_flags() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.get_flags"]], "get_flags() (mailbox.mboxmessage method)": [[286, "mailbox.mboxMessage.get_flags"]], "get_folder() (mailbox.mh method)": [[286, "mailbox.MH.get_folder"]], "get_folder() (mailbox.maildir method)": [[286, "mailbox.Maildir.get_folder"]], "get_from() (mailbox.mmdfmessage method)": [[286, "mailbox.MMDFMessage.get_from"]], "get_from() (mailbox.mboxmessage method)": [[286, "mailbox.mboxMessage.get_from"]], "get_info() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.get_info"]], "get_labels() (mailbox.babyl method)": [[286, "mailbox.Babyl.get_labels"]], "get_labels() (mailbox.babylmessage method)": [[286, "mailbox.BabylMessage.get_labels"]], "get_message() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.get_message"]], "get_sequences() (mailbox.mh method)": [[286, "mailbox.MH.get_sequences"]], "get_sequences() (mailbox.mhmessage method)": [[286, "mailbox.MHMessage.get_sequences"]], "get_string() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.get_string"]], "get_subdir() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.get_subdir"]], "get_visible() (mailbox.babylmessage method)": [[286, "mailbox.BabylMessage.get_visible"]], "items() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.items"]], "iteritems() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.iteritems"]], "iterkeys() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.iterkeys"]], "itervalues() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.itervalues"]], "keys() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.keys"]], "list_folders() (mailbox.mh method)": [[286, "mailbox.MH.list_folders"]], "list_folders() (mailbox.maildir method)": [[286, "mailbox.Maildir.list_folders"]], "lock() (mailbox.babyl method)": [[286, "mailbox.Babyl.lock"]], "lock() (mailbox.mh method)": [[286, "mailbox.MH.lock"]], "lock() (mailbox.mmdf method)": [[286, "mailbox.MMDF.lock"]], "lock() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.lock"]], "lock() (mailbox.maildir method)": [[286, "mailbox.Maildir.lock"]], "lock() (mailbox.mbox method)": [[286, "mailbox.mbox.lock"]], "mailbox": [[286, "module-mailbox"]], "mbox (class in mailbox)": [[286, "mailbox.mbox"]], "mboxmessage (class in mailbox)": [[286, "mailbox.mboxMessage"]], "pack() (mailbox.mh method)": [[286, "mailbox.MH.pack"]], "pop() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.pop"]], "popitem() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.popitem"]], "remove() (mailbox.mh method)": [[286, "mailbox.MH.remove"]], "remove() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.remove"]], "remove_flag() (mailbox.mmdfmessage method)": [[286, "mailbox.MMDFMessage.remove_flag"]], "remove_flag() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.remove_flag"]], "remove_flag() (mailbox.mboxmessage method)": [[286, "mailbox.mboxMessage.remove_flag"]], "remove_folder() (mailbox.mh method)": [[286, "mailbox.MH.remove_folder"]], "remove_folder() (mailbox.maildir method)": [[286, "mailbox.Maildir.remove_folder"]], "remove_label() (mailbox.babylmessage method)": [[286, "mailbox.BabylMessage.remove_label"]], "remove_sequence() (mailbox.mhmessage method)": [[286, "mailbox.MHMessage.remove_sequence"]], "set_date() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.set_date"]], "set_flags() (mailbox.mmdfmessage method)": [[286, "mailbox.MMDFMessage.set_flags"]], "set_flags() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.set_flags"]], "set_flags() (mailbox.mboxmessage method)": [[286, "mailbox.mboxMessage.set_flags"]], "set_from() (mailbox.mmdfmessage method)": [[286, "mailbox.MMDFMessage.set_from"]], "set_from() (mailbox.mboxmessage method)": [[286, "mailbox.mboxMessage.set_from"]], "set_info() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.set_info"]], "set_labels() (mailbox.babylmessage method)": [[286, "mailbox.BabylMessage.set_labels"]], "set_sequences() (mailbox.mh method)": [[286, "mailbox.MH.set_sequences"]], "set_sequences() (mailbox.mhmessage method)": [[286, "mailbox.MHMessage.set_sequences"]], "set_subdir() (mailbox.maildirmessage method)": [[286, "mailbox.MaildirMessage.set_subdir"]], "set_visible() (mailbox.babylmessage method)": [[286, "mailbox.BabylMessage.set_visible"]], "unlock() (mailbox.babyl method)": [[286, "mailbox.Babyl.unlock"]], "unlock() (mailbox.mh method)": [[286, "mailbox.MH.unlock"]], "unlock() (mailbox.mmdf method)": [[286, "mailbox.MMDF.unlock"]], "unlock() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.unlock"]], "unlock() (mailbox.maildir method)": [[286, "mailbox.Maildir.unlock"]], "unlock() (mailbox.mbox method)": [[286, "mailbox.mbox.unlock"]], "update() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.update"]], "update() (mailbox.maildir method)": [[286, "mailbox.Maildir.update"]], "update_visible() (mailbox.babylmessage method)": [[286, "mailbox.BabylMessage.update_visible"]], "values() (mailbox.mailbox method)": [[286, "mailbox.Mailbox.values"]], "pep 594#mailcap": [[287, "index-0"]], "rfc 1524": [[287, "index-1"], [287, "index-2"]], "findmatch() (in module mailcap)": [[287, "mailcap.findmatch"]], "getcaps() (in module mailcap)": [[287, "mailcap.getcaps"]], "mailcap": [[287, "module-mailcap"]], "dump() (in module marshal)": [[289, "marshal.dump"]], "dumps() (in module marshal)": [[289, "marshal.dumps"]], "load() (in module marshal)": [[289, "marshal.load"]], "loads() (in module marshal)": [[289, "marshal.loads"]], "marshal": [[289, "module-marshal"]], "shelve": [[289, "index-0"], [345, "module-shelve"]], "version (in module marshal)": [[289, "marshal.version"]], "acos() (in module math)": [[290, "math.acos"]], "acosh() (in module math)": [[290, "math.acosh"]], "asin() (in module math)": [[290, "math.asin"]], "asinh() (in module math)": [[290, "math.asinh"]], "atan() (in module math)": [[290, "math.atan"]], "atan2() (in module math)": [[290, "math.atan2"]], "atanh() (in module math)": [[290, "math.atanh"]], "cbrt() (in module math)": [[290, "math.cbrt"]], "ceil() (in module math)": [[290, "math.ceil"], [360, "index-15"]], "comb() (in module math)": [[290, "math.comb"]], "copysign() (in module math)": [[290, "math.copysign"]], "cos() (in module math)": [[290, "math.cos"]], "cosh() (in module math)": [[290, "math.cosh"]], "degrees() (in module math)": [[290, "math.degrees"]], "dist() (in module math)": [[290, "math.dist"]], "e (in module math)": [[290, "math.e"]], "erf() (in module math)": [[290, "math.erf"]], "erfc() (in module math)": [[290, "math.erfc"]], "exp() (in module math)": [[290, "math.exp"]], "exp2() (in module math)": [[290, "math.exp2"]], "expm1() (in module math)": [[290, "math.expm1"]], "fabs() (in module math)": [[290, "math.fabs"]], "factorial() (in module math)": [[290, "math.factorial"]], "floor() (in module math)": [[290, "math.floor"], [360, "index-15"]], "fmod() (in module math)": [[290, "math.fmod"]], "frexp() (in module math)": [[290, "math.frexp"]], "fsum() (in module math)": [[290, "math.fsum"]], "gamma() (in module math)": [[290, "math.gamma"]], "gcd() (in module math)": [[290, "math.gcd"]], "hypot() (in module math)": [[290, "math.hypot"]], "inf (in module math)": [[290, "math.inf"]], "isclose() (in module math)": [[290, "math.isclose"]], "isfinite() (in module math)": [[290, "math.isfinite"]], "isinf() (in module math)": [[290, "math.isinf"]], "isnan() (in module math)": [[290, "math.isnan"]], "isqrt() (in module math)": [[290, "math.isqrt"]], "lcm() (in module math)": [[290, "math.lcm"]], "ldexp() (in module math)": [[290, "math.ldexp"]], "lgamma() (in module math)": [[290, "math.lgamma"]], "log() (in module math)": [[290, "math.log"]], "log10() (in module math)": [[290, "math.log10"]], "log1p() (in module math)": [[290, "math.log1p"]], "log2() (in module math)": [[290, "math.log2"]], "modf() (in module math)": [[290, "math.modf"]], "nan (in module math)": [[290, "math.nan"]], "nextafter() (in module math)": [[290, "math.nextafter"]], "perm() (in module math)": [[290, "math.perm"]], "pi (in module math)": [[290, "math.pi"]], "pow() (in module math)": [[290, "math.pow"]], "prod() (in module math)": [[290, "math.prod"]], "radians() (in module math)": [[290, "math.radians"]], "remainder() (in module math)": [[290, "math.remainder"]], "sin() (in module math)": [[290, "math.sin"]], "sinh() (in module math)": [[290, "math.sinh"]], "sqrt() (in module math)": [[290, "math.sqrt"]], "tan() (in module math)": [[290, "math.tan"]], "tanh() (in module math)": [[290, "math.tanh"]], "tau (in module math)": [[290, "math.tau"]], "trunc() (in module math)": [[290, "math.trunc"], [360, "index-15"]], "ulp() (in module math)": [[290, "math.ulp"]], "mimetypes (class in mimetypes)": [[291, "mimetypes.MimeTypes"]], "add_type() (in module mimetypes)": [[291, "mimetypes.add_type"]], "common_types (in module mimetypes)": [[291, "mimetypes.common_types"]], "content type": [[291, "index-0"]], "encodings_map (in module mimetypes)": [[291, "mimetypes.encodings_map"]], "encodings_map (mimetypes.mimetypes attribute)": [[291, "mimetypes.MimeTypes.encodings_map"]], "guess_all_extensions() (in module mimetypes)": [[291, "mimetypes.guess_all_extensions"]], "guess_all_extensions() (mimetypes.mimetypes method)": [[291, "mimetypes.MimeTypes.guess_all_extensions"]], "guess_extension() (in module mimetypes)": [[291, "mimetypes.guess_extension"]], "guess_extension() (mimetypes.mimetypes method)": [[291, "mimetypes.MimeTypes.guess_extension"]], "guess_type() (in module mimetypes)": [[291, "mimetypes.guess_type"]], "guess_type() (mimetypes.mimetypes method)": [[291, "mimetypes.MimeTypes.guess_type"]], "init() (in module mimetypes)": [[291, "mimetypes.init"]], "inited (in module mimetypes)": [[291, "mimetypes.inited"]], "knownfiles (in module mimetypes)": [[291, "mimetypes.knownfiles"]], "mime.types": [[291, "index-2"]], "mimetypes": [[291, "module-mimetypes"]], "read() (mimetypes.mimetypes method)": [[291, "mimetypes.MimeTypes.read"]], "read_mime_types() (in module mimetypes)": [[291, "mimetypes.read_mime_types"]], "read_windows_registry() (mimetypes.mimetypes method)": [[291, "mimetypes.MimeTypes.read_windows_registry"]], "readfp() (mimetypes.mimetypes method)": [[291, "mimetypes.MimeTypes.readfp"]], "suffix_map (in module mimetypes)": [[291, "mimetypes.suffix_map"]], "suffix_map (mimetypes.mimetypes attribute)": [[291, "mimetypes.MimeTypes.suffix_map"]], "types_map (in module mimetypes)": [[291, "mimetypes.types_map"]], "types_map (mimetypes.mimetypes attribute)": [[291, "mimetypes.MimeTypes.types_map"]], "types_map_inv (mimetypes.mimetypes attribute)": [[291, "mimetypes.MimeTypes.types_map_inv"]], "madv_autosync (in module mmap)": [[293, "mmap.MADV_AUTOSYNC"]], "madv_core (in module mmap)": [[293, "mmap.MADV_CORE"]], "madv_dodump (in module mmap)": [[293, "mmap.MADV_DODUMP"]], "madv_dofork (in module mmap)": [[293, "mmap.MADV_DOFORK"]], "madv_dontdump (in module mmap)": [[293, "mmap.MADV_DONTDUMP"]], "madv_dontfork (in module mmap)": [[293, "mmap.MADV_DONTFORK"]], "madv_dontneed (in module mmap)": [[293, "mmap.MADV_DONTNEED"]], "madv_free (in module mmap)": [[293, "mmap.MADV_FREE"]], "madv_free_reusable (in module mmap)": [[293, "mmap.MADV_FREE_REUSABLE"]], "madv_free_reuse (in module mmap)": [[293, "mmap.MADV_FREE_REUSE"]], "madv_hugepage (in module mmap)": [[293, "mmap.MADV_HUGEPAGE"]], "madv_hwpoison (in module mmap)": [[293, "mmap.MADV_HWPOISON"]], "madv_mergeable (in module mmap)": [[293, "mmap.MADV_MERGEABLE"]], "madv_nocore (in module mmap)": [[293, "mmap.MADV_NOCORE"]], "madv_nohugepage (in module mmap)": [[293, "mmap.MADV_NOHUGEPAGE"]], "madv_normal (in module mmap)": [[293, "mmap.MADV_NORMAL"]], "madv_nosync (in module mmap)": [[293, "mmap.MADV_NOSYNC"]], "madv_protect (in module mmap)": [[293, "mmap.MADV_PROTECT"]], "madv_random (in module mmap)": [[293, "mmap.MADV_RANDOM"]], "madv_remove (in module mmap)": [[293, "mmap.MADV_REMOVE"]], "madv_sequential (in module mmap)": [[293, "mmap.MADV_SEQUENTIAL"]], "madv_soft_offline (in module mmap)": [[293, "mmap.MADV_SOFT_OFFLINE"]], "madv_unmergeable (in module mmap)": [[293, "mmap.MADV_UNMERGEABLE"]], "madv_willneed (in module mmap)": [[293, "mmap.MADV_WILLNEED"]], "map_anon (in module mmap)": [[293, "mmap.MAP_ANON"]], "map_anonymous (in module mmap)": [[293, "mmap.MAP_ANONYMOUS"]], "map_denywrite (in module mmap)": [[293, "mmap.MAP_DENYWRITE"]], "map_executable (in module mmap)": [[293, "mmap.MAP_EXECUTABLE"]], "map_populate (in module mmap)": [[293, "mmap.MAP_POPULATE"]], "map_private (in module mmap)": [[293, "mmap.MAP_PRIVATE"]], "map_shared (in module mmap)": [[293, "mmap.MAP_SHARED"]], "map_stack (in module mmap)": [[293, "mmap.MAP_STACK"]], "close() (mmap.mmap method)": [[293, "mmap.mmap.close"]], "closed (mmap.mmap attribute)": [[293, "mmap.mmap.closed"]], "find() (mmap.mmap method)": [[293, "mmap.mmap.find"]], "flush() (mmap.mmap method)": [[293, "mmap.mmap.flush"]], "madvise() (mmap.mmap method)": [[293, "mmap.mmap.madvise"]], "mmap": [[293, "module-mmap"]], "mmap (class in mmap)": [[293, "mmap.mmap"]], "move() (mmap.mmap method)": [[293, "mmap.mmap.move"]], "read() (mmap.mmap method)": [[293, "mmap.mmap.read"]], "read_byte() (mmap.mmap method)": [[293, "mmap.mmap.read_byte"]], "readline() (mmap.mmap method)": [[293, "mmap.mmap.readline"]], "resize() (mmap.mmap method)": [[293, "mmap.mmap.resize"]], "rfind() (mmap.mmap method)": [[293, "mmap.mmap.rfind"]], "seek() (mmap.mmap method)": [[293, "mmap.mmap.seek"]], "size() (mmap.mmap method)": [[293, "mmap.mmap.size"]], "tell() (mmap.mmap method)": [[293, "mmap.mmap.tell"]], "write() (mmap.mmap method)": [[293, "mmap.mmap.write"]], "write_byte() (mmap.mmap method)": [[293, "mmap.mmap.write_byte"]], "addpackagepath() (in module modulefinder)": [[294, "modulefinder.AddPackagePath"]], "modulefinder (class in modulefinder)": [[294, "modulefinder.ModuleFinder"]], "replacepackage() (in module modulefinder)": [[294, "modulefinder.ReplacePackage"]], "modulefinder": [[294, "module-modulefinder"]], "modules (modulefinder.modulefinder attribute)": [[294, "modulefinder.ModuleFinder.modules"]], "report() (modulefinder.modulefinder method)": [[294, "modulefinder.ModuleFinder.report"]], "run_script() (modulefinder.modulefinder method)": [[294, "modulefinder.ModuleFinder.run_script"]], "binary (class in msilib)": [[296, "msilib.Binary"]], "cab (class in msilib)": [[296, "msilib.CAB"]], "cleardata() (msilib.record method)": [[296, "msilib.Record.ClearData"]], "close() (msilib.database method)": [[296, "msilib.Database.Close"]], "close() (msilib.view method)": [[296, "msilib.View.Close"]], "commit() (msilib.database method)": [[296, "msilib.Database.Commit"]], "control (class in msilib)": [[296, "msilib.Control"]], "createrecord() (in module msilib)": [[296, "msilib.CreateRecord"]], "dialog (class in msilib)": [[296, "msilib.Dialog"]], "directory (class in msilib)": [[296, "msilib.Directory"]], "execute() (msilib.view method)": [[296, "msilib.View.Execute"]], "fcicreate() (in module msilib)": [[296, "msilib.FCICreate"]], "feature (class in msilib)": [[296, "msilib.Feature"]], "fetch() (msilib.view method)": [[296, "msilib.View.Fetch"]], "getcolumninfo() (msilib.view method)": [[296, "msilib.View.GetColumnInfo"]], "getfieldcount() (msilib.record method)": [[296, "msilib.Record.GetFieldCount"]], "getinteger() (msilib.record method)": [[296, "msilib.Record.GetInteger"]], "getproperty() (msilib.summaryinformation method)": [[296, "msilib.SummaryInformation.GetProperty"]], "getpropertycount() (msilib.summaryinformation method)": [[296, "msilib.SummaryInformation.GetPropertyCount"]], "getstring() (msilib.record method)": [[296, "msilib.Record.GetString"]], "getsummaryinformation() (msilib.database method)": [[296, "msilib.Database.GetSummaryInformation"]], "modify() (msilib.view method)": [[296, "msilib.View.Modify"]], "opendatabase() (in module msilib)": [[296, "msilib.OpenDatabase"]], "openview() (msilib.database method)": [[296, "msilib.Database.OpenView"]], "pep 594#msilib": [[296, "index-1"]], "persist() (msilib.summaryinformation method)": [[296, "msilib.SummaryInformation.Persist"]], "radiobuttongroup (class in msilib)": [[296, "msilib.RadioButtonGroup"]], "setinteger() (msilib.record method)": [[296, "msilib.Record.SetInteger"]], "setproperty() (msilib.summaryinformation method)": [[296, "msilib.SummaryInformation.SetProperty"]], "setstream() (msilib.record method)": [[296, "msilib.Record.SetStream"]], "setstring() (msilib.record method)": [[296, "msilib.Record.SetString"]], "uuidcreate() (in module msilib)": [[296, "msilib.UuidCreate"]], "add() (msilib.radiobuttongroup method)": [[296, "msilib.RadioButtonGroup.add"]], "add_data() (in module msilib)": [[296, "msilib.add_data"]], "add_file() (msilib.directory method)": [[296, "msilib.Directory.add_file"]], "add_stream() (in module msilib)": [[296, "msilib.add_stream"]], "add_tables() (in module msilib)": [[296, "msilib.add_tables"]], "append() (msilib.cab method)": [[296, "msilib.CAB.append"]], "bitmap() (msilib.dialog method)": [[296, "msilib.Dialog.bitmap"]], "checkbox() (msilib.dialog method)": [[296, "msilib.Dialog.checkbox"]], "commit() (msilib.cab method)": [[296, "msilib.CAB.commit"]], "condition() (msilib.control method)": [[296, "msilib.Control.condition"]], "control() (msilib.dialog method)": [[296, "msilib.Dialog.control"]], "event() (msilib.control method)": [[296, "msilib.Control.event"]], "gen_uuid() (in module msilib)": [[296, "msilib.gen_uuid"]], "glob() (msilib.directory method)": [[296, "msilib.Directory.glob"]], "init_database() (in module msilib)": [[296, "msilib.init_database"]], "line() (msilib.dialog method)": [[296, "msilib.Dialog.line"]], "mapping() (msilib.control method)": [[296, "msilib.Control.mapping"]], "msi": [[296, "index-0"]], "msilib": [[296, "module-msilib"]], "pushbutton() (msilib.dialog method)": [[296, "msilib.Dialog.pushbutton"]], "radiogroup() (msilib.dialog method)": [[296, "msilib.Dialog.radiogroup"]], "remove_pyc() (msilib.directory method)": [[296, "msilib.Directory.remove_pyc"]], "schema (in module msilib)": [[296, "msilib.schema"]], "sequence (in module msilib)": [[296, "msilib.sequence"]], "set_current() (msilib.feature method)": [[296, "msilib.Feature.set_current"]], "start_component() (msilib.directory method)": [[296, "msilib.Directory.start_component"]], "text (in module msilib)": [[296, "msilib.text"]], "text() (msilib.dialog method)": [[296, "msilib.Dialog.text"]], "crt_assembly_version (in module msvcrt)": [[297, "msvcrt.CRT_ASSEMBLY_VERSION"]], "libraries_assembly_name_prefix (in module msvcrt)": [[297, "msvcrt.LIBRARIES_ASSEMBLY_NAME_PREFIX"]], "lk_lock (in module msvcrt)": [[297, "msvcrt.LK_LOCK"]], "lk_nblck (in module msvcrt)": [[297, "msvcrt.LK_NBLCK"]], "lk_nbrlck (in module msvcrt)": [[297, "msvcrt.LK_NBRLCK"]], "lk_rlck (in module msvcrt)": [[297, "msvcrt.LK_RLCK"]], "lk_unlck (in module msvcrt)": [[297, "msvcrt.LK_UNLCK"]], "vc_assembly_publickeytoken (in module msvcrt)": [[297, "msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN"]], "get_osfhandle() (in module msvcrt)": [[297, "msvcrt.get_osfhandle"]], "getch() (in module msvcrt)": [[297, "msvcrt.getch"]], "getche() (in module msvcrt)": [[297, "msvcrt.getche"]], "getwch() (in module msvcrt)": [[297, "msvcrt.getwch"]], "getwche() (in module msvcrt)": [[297, "msvcrt.getwche"]], "heapmin() (in module msvcrt)": [[297, "msvcrt.heapmin"]], "kbhit() (in module msvcrt)": [[297, "msvcrt.kbhit"]], "locking() (in module msvcrt)": [[297, "msvcrt.locking"]], "msvcrt": [[297, "module-msvcrt"]], "open_osfhandle() (in module msvcrt)": [[297, "msvcrt.open_osfhandle"]], "putch() (in module msvcrt)": [[297, "msvcrt.putch"]], "putwch() (in module msvcrt)": [[297, "msvcrt.putwch"]], "setmode() (in module msvcrt)": [[297, "msvcrt.setmode"]], "ungetch() (in module msvcrt)": [[297, "msvcrt.ungetch"]], "ungetwch() (in module msvcrt)": [[297, "msvcrt.ungetwch"]], "array() (in module multiprocessing)": [[298, "multiprocessing.Array"]], "array() (in module multiprocessing.sharedctypes)": [[298, "multiprocessing.sharedctypes.Array"]], "array() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Array"]], "asyncresult (class in multiprocessing.pool)": [[298, "multiprocessing.pool.AsyncResult"]], "authenticationerror": [[298, "multiprocessing.AuthenticationError"]], "barrier (class in multiprocessing)": [[298, "multiprocessing.Barrier"]], "barrier() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Barrier"]], "basemanager (class in multiprocessing.managers)": [[298, "multiprocessing.managers.BaseManager"]], "baseproxy (class in multiprocessing.managers)": [[298, "multiprocessing.managers.BaseProxy"]], "boundedsemaphore (class in multiprocessing)": [[298, "multiprocessing.BoundedSemaphore"]], "boundedsemaphore() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.BoundedSemaphore"]], "buffertooshort": [[298, "multiprocessing.BufferTooShort"]], "client() (in module multiprocessing.connection)": [[298, "multiprocessing.connection.Client"]], "condition (class in multiprocessing)": [[298, "multiprocessing.Condition"]], "condition() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Condition"]], "connection (class in multiprocessing.connection)": [[298, "multiprocessing.connection.Connection"]], "event (class in multiprocessing)": [[298, "multiprocessing.Event"]], "event() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Event"]], "joinablequeue (class in multiprocessing)": [[298, "multiprocessing.JoinableQueue"]], "listener (class in multiprocessing.connection)": [[298, "multiprocessing.connection.Listener"]], "lock (class in multiprocessing)": [[298, "multiprocessing.Lock"]], "lock() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Lock"]], "namespace (class in multiprocessing.managers)": [[298, "multiprocessing.managers.Namespace"]], "namespace() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Namespace"]], "pipe() (in module multiprocessing)": [[298, "multiprocessing.Pipe"]], "pool (class in multiprocessing.pool)": [[298, "multiprocessing.pool.Pool"]], "process (class in multiprocessing)": [[298, "multiprocessing.Process"]], "processerror": [[298, "multiprocessing.ProcessError"]], "queue (class in multiprocessing)": [[298, "multiprocessing.Queue"]], "queue() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Queue"]], "rlock (class in multiprocessing)": [[298, "multiprocessing.RLock"]], "rlock() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.RLock"]], "rawarray() (in module multiprocessing.sharedctypes)": [[298, "multiprocessing.sharedctypes.RawArray"]], "rawvalue() (in module multiprocessing.sharedctypes)": [[298, "multiprocessing.sharedctypes.RawValue"]], "semaphore (class in multiprocessing)": [[298, "multiprocessing.Semaphore"]], "semaphore() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Semaphore"]], "simplequeue (class in multiprocessing)": [[298, "multiprocessing.SimpleQueue"]], "syncmanager (class in multiprocessing.managers)": [[298, "multiprocessing.managers.SyncManager"]], "threadpool (class in multiprocessing.pool)": [[298, "multiprocessing.pool.ThreadPool"]], "value() (in module multiprocessing)": [[298, "multiprocessing.Value"]], "value() (in module multiprocessing.sharedctypes)": [[298, "multiprocessing.sharedctypes.Value"]], "value() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.Value"]], "__repr__() (multiprocessing.managers.baseproxy method)": [[298, "multiprocessing.managers.BaseProxy.__repr__"]], "__str__() (multiprocessing.managers.baseproxy method)": [[298, "multiprocessing.managers.BaseProxy.__str__"]], "_callmethod() (multiprocessing.managers.baseproxy method)": [[298, "multiprocessing.managers.BaseProxy._callmethod"]], "_getvalue() (multiprocessing.managers.baseproxy method)": [[298, "multiprocessing.managers.BaseProxy._getvalue"]], "accept() (multiprocessing.connection.listener method)": [[298, "multiprocessing.connection.Listener.accept"]], "acquire() (multiprocessing.lock method)": [[298, "multiprocessing.Lock.acquire"]], "acquire() (multiprocessing.rlock method)": [[298, "multiprocessing.RLock.acquire"]], "active_children() (in module multiprocessing)": [[298, "multiprocessing.active_children"]], "address (multiprocessing.connection.listener attribute)": [[298, "multiprocessing.connection.Listener.address"]], "address (multiprocessing.managers.basemanager attribute)": [[298, "multiprocessing.managers.BaseManager.address"]], "answer_challenge() (in module multiprocessing.connection)": [[298, "multiprocessing.connection.answer_challenge"]], "apply() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.apply"]], "apply_async() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.apply_async"]], "authkey (multiprocessing.process attribute)": [[298, "multiprocessing.Process.authkey"]], "cancel_join_thread() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.cancel_join_thread"]], "close() (multiprocessing.process method)": [[298, "multiprocessing.Process.close"]], "close() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.close"]], "close() (multiprocessing.simplequeue method)": [[298, "multiprocessing.SimpleQueue.close"]], "close() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.close"]], "close() (multiprocessing.connection.listener method)": [[298, "multiprocessing.connection.Listener.close"]], "close() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.close"]], "connect() (multiprocessing.managers.basemanager method)": [[298, "multiprocessing.managers.BaseManager.connect"]], "copy() (in module multiprocessing.sharedctypes)": [[298, "multiprocessing.sharedctypes.copy"]], "cpu_count() (in module multiprocessing)": [[298, "multiprocessing.cpu_count"]], "current_process() (in module multiprocessing)": [[298, "multiprocessing.current_process"]], "daemon (multiprocessing.process attribute)": [[298, "multiprocessing.Process.daemon"]], "deliver_challenge() (in module multiprocessing.connection)": [[298, "multiprocessing.connection.deliver_challenge"]], "dict() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.dict"]], "empty() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.empty"]], "empty() (multiprocessing.simplequeue method)": [[298, "multiprocessing.SimpleQueue.empty"]], "exitcode (multiprocessing.process attribute)": [[298, "multiprocessing.Process.exitcode"]], "fileno() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.fileno"]], "freeze_support() (in module multiprocessing)": [[298, "multiprocessing.freeze_support"]], "full() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.full"]], "get() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.get"]], "get() (multiprocessing.simplequeue method)": [[298, "multiprocessing.SimpleQueue.get"]], "get() (multiprocessing.pool.asyncresult method)": [[298, "multiprocessing.pool.AsyncResult.get"]], "get_all_start_methods() (in module multiprocessing)": [[298, "multiprocessing.get_all_start_methods"]], "get_context() (in module multiprocessing)": [[298, "multiprocessing.get_context"]], "get_logger() (in module multiprocessing)": [[298, "multiprocessing.get_logger"]], "get_nowait() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.get_nowait"]], "get_server() (multiprocessing.managers.basemanager method)": [[298, "multiprocessing.managers.BaseManager.get_server"]], "get_start_method() (in module multiprocessing)": [[298, "multiprocessing.get_start_method"]], "imap() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.imap"]], "imap_unordered() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.imap_unordered"]], "is_alive() (multiprocessing.process method)": [[298, "multiprocessing.Process.is_alive"]], "join() (multiprocessing.joinablequeue method)": [[298, "multiprocessing.JoinableQueue.join"]], "join() (multiprocessing.process method)": [[298, "multiprocessing.Process.join"]], "join() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.join"]], "join_thread() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.join_thread"]], "kill() (multiprocessing.process method)": [[298, "multiprocessing.Process.kill"]], "last_accepted (multiprocessing.connection.listener attribute)": [[298, "multiprocessing.connection.Listener.last_accepted"]], "list() (multiprocessing.managers.syncmanager method)": [[298, "multiprocessing.managers.SyncManager.list"]], "log_to_stderr() (in module multiprocessing)": [[298, "multiprocessing.log_to_stderr"]], "map() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.map"]], "map_async() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.map_async"]], "multiprocessing": [[298, "module-multiprocessing"]], "multiprocessing.manager()": [[298, "multiprocessing.Manager"]], "multiprocessing.connection": [[298, "module-multiprocessing.connection"]], "multiprocessing.dummy": [[298, "module-multiprocessing.dummy"]], "multiprocessing.managers": [[298, "module-multiprocessing.managers"]], "multiprocessing.pool": [[298, "module-multiprocessing.pool"]], "multiprocessing.sharedctypes": [[298, "module-multiprocessing.sharedctypes"]], "name (multiprocessing.process attribute)": [[298, "multiprocessing.Process.name"]], "parent_process() (in module multiprocessing)": [[298, "multiprocessing.parent_process"]], "pid (multiprocessing.process attribute)": [[298, "multiprocessing.Process.pid"]], "poll() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.poll"]], "put() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.put"]], "put() (multiprocessing.simplequeue method)": [[298, "multiprocessing.SimpleQueue.put"]], "put_nowait() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.put_nowait"]], "qsize() (multiprocessing.queue method)": [[298, "multiprocessing.Queue.qsize"]], "ready() (multiprocessing.pool.asyncresult method)": [[298, "multiprocessing.pool.AsyncResult.ready"]], "recv() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.recv"]], "recv_bytes() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.recv_bytes"]], "recv_bytes_into() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.recv_bytes_into"]], "register() (multiprocessing.managers.basemanager method)": [[298, "multiprocessing.managers.BaseManager.register"]], "release() (multiprocessing.lock method)": [[298, "multiprocessing.Lock.release"]], "release() (multiprocessing.rlock method)": [[298, "multiprocessing.RLock.release"]], "run() (multiprocessing.process method)": [[298, "multiprocessing.Process.run"]], "send() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.send"]], "send_bytes() (multiprocessing.connection.connection method)": [[298, "multiprocessing.connection.Connection.send_bytes"]], "sentinel (multiprocessing.process attribute)": [[298, "multiprocessing.Process.sentinel"]], "set_executable() (in module multiprocessing)": [[298, "multiprocessing.set_executable"]], "set_start_method() (in module multiprocessing)": [[298, "multiprocessing.set_start_method"]], "shutdown() (multiprocessing.managers.basemanager method)": [[298, "multiprocessing.managers.BaseManager.shutdown"]], "starmap() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.starmap"]], "starmap_async() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.starmap_async"]], "start() (multiprocessing.process method)": [[298, "multiprocessing.Process.start"]], "start() (multiprocessing.managers.basemanager method)": [[298, "multiprocessing.managers.BaseManager.start"]], "successful() (multiprocessing.pool.asyncresult method)": [[298, "multiprocessing.pool.AsyncResult.successful"]], "synchronized() (in module multiprocessing.sharedctypes)": [[298, "multiprocessing.sharedctypes.synchronized"]], "task_done() (multiprocessing.joinablequeue method)": [[298, "multiprocessing.JoinableQueue.task_done"]], "terminate() (multiprocessing.process method)": [[298, "multiprocessing.Process.terminate"]], "terminate() (multiprocessing.pool.pool method)": [[298, "multiprocessing.pool.Pool.terminate"]], "wait() (in module multiprocessing.connection)": [[298, "multiprocessing.connection.wait"]], "wait() (multiprocessing.pool.asyncresult method)": [[298, "multiprocessing.pool.AsyncResult.wait"]], "named shared memory": [[299, "index-0"]], "posix shared memory": [[299, "index-0"]], "shareablelist (class in multiprocessing.shared_memory)": [[299, "multiprocessing.shared_memory.ShareableList"]], "shareablelist() (multiprocessing.managers.sharedmemorymanager method)": [[299, "multiprocessing.managers.SharedMemoryManager.ShareableList"]], "shared memory": [[299, "index-0"]], "sharedmemory (class in multiprocessing.shared_memory)": [[299, "multiprocessing.shared_memory.SharedMemory"]], "sharedmemory() (multiprocessing.managers.sharedmemorymanager method)": [[299, "multiprocessing.managers.SharedMemoryManager.SharedMemory"]], "sharedmemorymanager (class in multiprocessing.managers)": [[299, "multiprocessing.managers.SharedMemoryManager"]], "buf (multiprocessing.shared_memory.sharedmemory attribute)": [[299, "multiprocessing.shared_memory.SharedMemory.buf"]], "close() (multiprocessing.shared_memory.sharedmemory method)": [[299, "multiprocessing.shared_memory.SharedMemory.close"]], "count() (multiprocessing.shared_memory.shareablelist method)": [[299, "multiprocessing.shared_memory.ShareableList.count"]], "format (multiprocessing.shared_memory.shareablelist attribute)": [[299, "multiprocessing.shared_memory.ShareableList.format"]], "index() (multiprocessing.shared_memory.shareablelist method)": [[299, "multiprocessing.shared_memory.ShareableList.index"]], "multiprocessing.shared_memory": [[299, "module-multiprocessing.shared_memory"]], "name (multiprocessing.shared_memory.sharedmemory attribute)": [[299, "multiprocessing.shared_memory.SharedMemory.name"]], "shm (multiprocessing.shared_memory.shareablelist attribute)": [[299, "multiprocessing.shared_memory.ShareableList.shm"]], "size (multiprocessing.shared_memory.sharedmemory attribute)": [[299, "multiprocessing.shared_memory.SharedMemory.size"]], "unlink() (multiprocessing.shared_memory.sharedmemory method)": [[299, "multiprocessing.shared_memory.SharedMemory.unlink"]], "netrcparseerror": [[301, "netrc.NetrcParseError"]], "__repr__() (netrc.netrc method)": [[301, "netrc.netrc.__repr__"]], "authenticators() (netrc.netrc method)": [[301, "netrc.netrc.authenticators"]], "filename (netrc.netrcparseerror attribute)": [[301, "netrc.NetrcParseError.filename"]], "hosts (netrc.netrc attribute)": [[301, "netrc.netrc.hosts"]], "lineno (netrc.netrcparseerror attribute)": [[301, "netrc.NetrcParseError.lineno"]], "macros (netrc.netrc attribute)": [[301, "netrc.netrc.macros"]], "msg (netrc.netrcparseerror attribute)": [[301, "netrc.NetrcParseError.msg"]], "netrc": [[301, "module-netrc"]], "netrc (class in netrc)": [[301, "netrc.netrc"]], "pep 594#nis": [[302, "index-0"]], "cat() (in module nis)": [[302, "nis.cat"]], "get_default_domain() (in module nis)": [[302, "nis.get_default_domain"]], "maps() (in module nis)": [[302, "nis.maps"]], "match() (in module nis)": [[302, "nis.match"]], "nis": [[302, "module-nis"]], "nntp": [[303, "index-0"]], "nntp (class in nntplib)": [[303, "nntplib.NNTP"]], "nntpdataerror": [[303, "nntplib.NNTPDataError"]], "nntperror": [[303, "nntplib.NNTPError"]], "nntppermanenterror": [[303, "nntplib.NNTPPermanentError"]], "nntpprotocolerror": [[303, "nntplib.NNTPProtocolError"]], "nntpreplyerror": [[303, "nntplib.NNTPReplyError"]], "nntptemporaryerror": [[303, "nntplib.NNTPTemporaryError"]], "nntp_ssl (class in nntplib)": [[303, "nntplib.NNTP_SSL"]], "network news transfer protocol": [[303, "index-0"]], "pep 594": [[303, "index-1"], [488, "index-2"], [488, "index-31"]], "rfc 2980": [[303, "index-4"], [303, "index-9"]], "rfc 3977": [[303, "index-10"], [303, "index-2"], [303, "index-6"], [303, "index-7"], [303, "index-8"]], "rfc 4642": [[303, "index-5"]], "rfc 977": [[303, "index-3"]], "article() (nntplib.nntp method)": [[303, "nntplib.NNTP.article"]], "body() (nntplib.nntp method)": [[303, "nntplib.NNTP.body"]], "date() (nntplib.nntp method)": [[303, "nntplib.NNTP.date"]], "decode_header() (in module nntplib)": [[303, "nntplib.decode_header"]], "description() (nntplib.nntp method)": [[303, "nntplib.NNTP.description"]], "descriptions() (nntplib.nntp method)": [[303, "nntplib.NNTP.descriptions"]], "getcapabilities() (nntplib.nntp method)": [[303, "nntplib.NNTP.getcapabilities"]], "getwelcome() (nntplib.nntp method)": [[303, "nntplib.NNTP.getwelcome"]], "group() (nntplib.nntp method)": [[303, "nntplib.NNTP.group"]], "head() (nntplib.nntp method)": [[303, "nntplib.NNTP.head"]], "help() (nntplib.nntp method)": [[303, "nntplib.NNTP.help"]], "ihave() (nntplib.nntp method)": [[303, "nntplib.NNTP.ihave"]], "last() (nntplib.nntp method)": [[303, "nntplib.NNTP.last"]], "list() (nntplib.nntp method)": [[303, "nntplib.NNTP.list"]], "login() (nntplib.nntp method)": [[303, "nntplib.NNTP.login"]], "newgroups() (nntplib.nntp method)": [[303, "nntplib.NNTP.newgroups"]], "newnews() (nntplib.nntp method)": [[303, "nntplib.NNTP.newnews"]], "next() (nntplib.nntp method)": [[303, "nntplib.NNTP.next"]], "nntp_implementation (nntplib.nntp attribute)": [[303, "nntplib.NNTP.nntp_implementation"]], "nntp_version (nntplib.nntp attribute)": [[303, "nntplib.NNTP.nntp_version"]], "nntplib": [[303, "module-nntplib"]], "over() (nntplib.nntp method)": [[303, "nntplib.NNTP.over"]], "post() (nntplib.nntp method)": [[303, "nntplib.NNTP.post"]], "quit() (nntplib.nntp method)": [[303, "nntplib.NNTP.quit"]], "response (nntplib.nntperror attribute)": [[303, "nntplib.NNTPError.response"]], "set_debuglevel() (nntplib.nntp method)": [[303, "nntplib.NNTP.set_debuglevel"]], "slave() (nntplib.nntp method)": [[303, "nntplib.NNTP.slave"]], "starttls() (nntplib.nntp method)": [[303, "nntplib.NNTP.starttls"]], "stat() (nntplib.nntp method)": [[303, "nntplib.NNTP.stat"]], "xhdr() (nntplib.nntp method)": [[303, "nntplib.NNTP.xhdr"]], "xover() (nntplib.nntp method)": [[303, "nntplib.NNTP.xover"]], "complex (class in numbers)": [[304, "numbers.Complex"]], "integral (class in numbers)": [[304, "numbers.Integral"]], "number (class in numbers)": [[304, "numbers.Number"]], "rational (class in numbers)": [[304, "numbers.Rational"]], "real (class in numbers)": [[304, "numbers.Real"]], "conjugate() (numbers.complex method)": [[304, "numbers.Complex.conjugate"]], "denominator (numbers.rational attribute)": [[304, "numbers.Rational.denominator"]], "imag (numbers.complex attribute)": [[304, "numbers.Complex.imag"]], "numbers": [[304, "module-numbers"]], "numerator (numbers.rational attribute)": [[304, "numbers.Rational.numerator"]], "real (numbers.complex attribute)": [[304, "numbers.Complex.real"]], "__abs__() (in module operator)": [[306, "operator.__abs__"]], "__add__() (in module operator)": [[306, "operator.__add__"]], "__and__() (in module operator)": [[306, "operator.__and__"]], "__call__() (in module operator)": [[306, "operator.__call__"]], "__concat__() (in module operator)": [[306, "operator.__concat__"]], "__contains__() (in module operator)": [[306, "operator.__contains__"]], "__delitem__() (in module operator)": [[306, "operator.__delitem__"]], "__eq__() (in module operator)": [[306, "operator.__eq__"]], "__floordiv__() (in module operator)": [[306, "operator.__floordiv__"]], "__ge__() (in module operator)": [[306, "operator.__ge__"]], "__getitem__() (in module operator)": [[306, "operator.__getitem__"]], "__gt__() (in module operator)": [[306, "operator.__gt__"]], "__iadd__() (in module operator)": [[306, "operator.__iadd__"]], "__iand__() (in module operator)": [[306, "operator.__iand__"]], "__iconcat__() (in module operator)": [[306, "operator.__iconcat__"]], "__ifloordiv__() (in module operator)": [[306, "operator.__ifloordiv__"]], "__ilshift__() (in module operator)": [[306, "operator.__ilshift__"]], "__imatmul__() (in module operator)": [[306, "operator.__imatmul__"]], "__imod__() (in module operator)": [[306, "operator.__imod__"]], "__imul__() (in module operator)": [[306, "operator.__imul__"]], "__index__() (in module operator)": [[306, "operator.__index__"]], "__inv__() (in module operator)": [[306, "operator.__inv__"]], "__invert__() (in module operator)": [[306, "operator.__invert__"]], "__ior__() (in module operator)": [[306, "operator.__ior__"]], "__ipow__() (in module operator)": [[306, "operator.__ipow__"]], "__irshift__() (in module operator)": [[306, "operator.__irshift__"]], "__isub__() (in module operator)": [[306, "operator.__isub__"]], "__itruediv__() (in module operator)": [[306, "operator.__itruediv__"]], "__ixor__() (in module operator)": [[306, "operator.__ixor__"]], "__le__() (in module operator)": [[306, "operator.__le__"]], "__lshift__() (in module operator)": [[306, "operator.__lshift__"]], "__lt__() (in module operator)": [[306, "operator.__lt__"]], "__matmul__() (in module operator)": [[306, "operator.__matmul__"]], "__mod__() (in module operator)": [[306, "operator.__mod__"]], "__mul__() (in module operator)": [[306, "operator.__mul__"]], "__ne__() (in module operator)": [[306, "operator.__ne__"]], "__neg__() (in module operator)": [[306, "operator.__neg__"]], "__not__() (in module operator)": [[306, "operator.__not__"]], "__or__() (in module operator)": [[306, "operator.__or__"]], "__pos__() (in module operator)": [[306, "operator.__pos__"]], "__pow__() (in module operator)": [[306, "operator.__pow__"]], "__rshift__() (in module operator)": [[306, "operator.__rshift__"]], "__setitem__() (in module operator)": [[306, "operator.__setitem__"]], "__sub__() (in module operator)": [[306, "operator.__sub__"]], "__truediv__() (in module operator)": [[306, "operator.__truediv__"]], "__xor__() (in module operator)": [[306, "operator.__xor__"]], "abs() (in module operator)": [[306, "operator.abs"]], "add() (in module operator)": [[306, "operator.add"]], "and_() (in module operator)": [[306, "operator.and_"]], "attrgetter() (in module operator)": [[306, "operator.attrgetter"]], "call() (in module operator)": [[306, "operator.call"]], "concat() (in module operator)": [[306, "operator.concat"]], "contains() (in module operator)": [[306, "operator.contains"]], "countof() (in module operator)": [[306, "operator.countOf"]], "delitem() (in module operator)": [[306, "operator.delitem"]], "eq() (in module operator)": [[306, "operator.eq"]], "floordiv() (in module operator)": [[306, "operator.floordiv"]], "ge() (in module operator)": [[306, "operator.ge"]], "getitem() (in module operator)": [[306, "operator.getitem"]], "gt() (in module operator)": [[306, "operator.gt"]], "iadd() (in module operator)": [[306, "operator.iadd"]], "iand() (in module operator)": [[306, "operator.iand"]], "iconcat() (in module operator)": [[306, "operator.iconcat"]], "ifloordiv() (in module operator)": [[306, "operator.ifloordiv"]], "ilshift() (in module operator)": [[306, "operator.ilshift"]], "imatmul() (in module operator)": [[306, "operator.imatmul"]], "imod() (in module operator)": [[306, "operator.imod"]], "imul() (in module operator)": [[306, "operator.imul"]], "index() (in module operator)": [[306, "operator.index"]], "indexof() (in module operator)": [[306, "operator.indexOf"]], "inv() (in module operator)": [[306, "operator.inv"]], "invert() (in module operator)": [[306, "operator.invert"]], "ior() (in module operator)": [[306, "operator.ior"]], "ipow() (in module operator)": [[306, "operator.ipow"]], "irshift() (in module operator)": [[306, "operator.irshift"]], "is_() (in module operator)": [[306, "operator.is_"]], "is_not() (in module operator)": [[306, "operator.is_not"]], "isub() (in module operator)": [[306, "operator.isub"]], "itemgetter() (in module operator)": [[306, "operator.itemgetter"]], "itruediv() (in module operator)": [[306, "operator.itruediv"]], "ixor() (in module operator)": [[306, "operator.ixor"]], "le() (in module operator)": [[306, "operator.le"]], "length_hint() (in module operator)": [[306, "operator.length_hint"]], "lshift() (in module operator)": [[306, "operator.lshift"]], "lt() (in module operator)": [[306, "operator.lt"]], "matmul() (in module operator)": [[306, "operator.matmul"]], "methodcaller() (in module operator)": [[306, "operator.methodcaller"]], "mod() (in module operator)": [[306, "operator.mod"]], "mul() (in module operator)": [[306, "operator.mul"]], "ne() (in module operator)": [[306, "operator.ne"]], "neg() (in module operator)": [[306, "operator.neg"]], "not_() (in module operator)": [[306, "operator.not_"]], "operator": [[306, "module-operator"], [360, "index-10"], [360, "index-13"], [360, "index-16"], [360, "index-19"], [360, "index-4"], [360, "index-6"], [360, "index-7"], [443, "index-71"], [445, "index-58"], [445, "index-60"], [445, "index-61"], [445, "index-62"], [445, "index-65"], [445, "index-66"], [445, "index-67"], [445, "index-68"], [445, "index-69"], [445, "index-70"], [445, "index-71"], [445, "index-74"], [445, "index-75"], [445, "index-76"], [445, "index-77"], [445, "index-80"], [445, "index-81"], [445, "index-83"], [445, "index-84"], [445, "index-85"], [445, "index-88"], [445, "index-97"]], "or_() (in module operator)": [[306, "operator.or_"]], "pos() (in module operator)": [[306, "operator.pos"]], "pow() (in module operator)": [[306, "operator.pow"]], "rshift() (in module operator)": [[306, "operator.rshift"]], "setitem() (in module operator)": [[306, "operator.setitem"]], "sub() (in module operator)": [[306, "operator.sub"]], "truediv() (in module operator)": [[306, "operator.truediv"]], "truth() (in module operator)": [[306, "operator.truth"]], "xor() (in module operator)": [[306, "operator.xor"]], "actions (optparse.option attribute)": [[307, "optparse.Option.ACTIONS"]], "always_typed_actions (optparse.option attribute)": [[307, "optparse.Option.ALWAYS_TYPED_ACTIONS"]], "ambiguousoptionerror": [[307, "optparse.AmbiguousOptionError"]], "badoptionerror": [[307, "optparse.BadOptionError"]], "option (class in optparse)": [[307, "optparse.Option"]], "optionconflicterror": [[307, "optparse.OptionConflictError"]], "optionerror": [[307, "optparse.OptionError"]], "optiongroup (class in optparse)": [[307, "optparse.OptionGroup"]], "optionparser (class in optparse)": [[307, "optparse.OptionParser"]], "optionvalueerror": [[307, "optparse.OptionValueError"]], "store_actions (optparse.option attribute)": [[307, "optparse.Option.STORE_ACTIONS"]], "typed_actions (optparse.option attribute)": [[307, "optparse.Option.TYPED_ACTIONS"]], "types (optparse.option attribute)": [[307, "optparse.Option.TYPES"]], "type_checker (optparse.option attribute)": [[307, "optparse.Option.TYPE_CHECKER"]], "values (class in optparse)": [[307, "optparse.Values"]], "action (optparse.option attribute)": [[307, "optparse.Option.action"]], "add_option() (optparse.optionparser method)": [[307, "optparse.OptionParser.add_option"]], "callback (optparse.option attribute)": [[307, "optparse.Option.callback"]], "callback_args (optparse.option attribute)": [[307, "optparse.Option.callback_args"]], "callback_kwargs (optparse.option attribute)": [[307, "optparse.Option.callback_kwargs"]], "choices (optparse.option attribute)": [[307, "optparse.Option.choices"]], "const (optparse.option attribute)": [[307, "optparse.Option.const"]], "default (optparse.option attribute)": [[307, "optparse.Option.default"]], "dest (optparse.option attribute)": [[307, "optparse.Option.dest"]], "disable_interspersed_args() (optparse.optionparser method)": [[307, "optparse.OptionParser.disable_interspersed_args"]], "enable_interspersed_args() (optparse.optionparser method)": [[307, "optparse.OptionParser.enable_interspersed_args"]], "get_option() (optparse.optionparser method)": [[307, "optparse.OptionParser.get_option"]], "get_option_group() (optparse.optionparser method)": [[307, "optparse.OptionParser.get_option_group"]], "get_usage() (optparse.optionparser method)": [[307, "optparse.OptionParser.get_usage"]], "get_version() (optparse.optionparser method)": [[307, "optparse.OptionParser.get_version"]], "has_option() (optparse.optionparser method)": [[307, "optparse.OptionParser.has_option"]], "help (optparse.option attribute)": [[307, "optparse.Option.help"]], "metavar (optparse.option attribute)": [[307, "optparse.Option.metavar"]], "nargs (optparse.option attribute)": [[307, "optparse.Option.nargs"]], "optparse": [[307, "module-optparse"]], "parse_args() (optparse.optionparser method)": [[307, "optparse.OptionParser.parse_args"]], "print_usage() (optparse.optionparser method)": [[307, "optparse.OptionParser.print_usage"]], "print_version() (optparse.optionparser method)": [[307, "optparse.OptionParser.print_version"]], "remove_option() (optparse.optionparser method)": [[307, "optparse.OptionParser.remove_option"]], "set_defaults() (optparse.optionparser method)": [[307, "optparse.OptionParser.set_defaults"]], "set_usage() (optparse.optionparser method)": [[307, "optparse.OptionParser.set_usage"]], "type (optparse.option attribute)": [[307, "optparse.Option.type"]], "..": [[308, "index-46"]], "/ (slash)": [[308, "index-47"], [308, "index-49"], [360, "index-13"], [442, "index-32"], [445, "index-67"]], ": (colon)": [[308, "index-51"], [356, "index-3"], [361, "index-2"], [442, "index-16"], [442, "index-18"], [442, "index-28"], [442, "index-3"], [442, "index-34"], [442, "index-4"], [442, "index-42"], [442, "index-6"], [442, "index-9"], [445, "index-17"], [445, "index-44"], [445, "index-90"], [450, "index-25"], [451, "index-15"], [456, "index-6"]], "; (semicolon)": [[308, "index-51"], [442, "index-1"]], "cld_continued (in module os)": [[308, "os.CLD_CONTINUED"]], "cld_dumped (in module os)": [[308, "os.CLD_DUMPED"]], "cld_exited (in module os)": [[308, "os.CLD_EXITED"]], "cld_killed (in module os)": [[308, "os.CLD_KILLED"]], "cld_stopped (in module os)": [[308, "os.CLD_STOPPED"]], "cld_trapped (in module os)": [[308, "os.CLD_TRAPPED"]], "comspec": [[308, "index-43"], [364, "index-3"]], "direntry (class in os)": [[308, "os.DirEntry"]], "efd_cloexec (in module os)": [[308, "os.EFD_CLOEXEC"]], "efd_nonblock (in module os)": [[308, "os.EFD_NONBLOCK"]], "efd_semaphore (in module os)": [[308, "os.EFD_SEMAPHORE"]], "ex_cantcreat (in module os)": [[308, "os.EX_CANTCREAT"]], "ex_config (in module os)": [[308, "os.EX_CONFIG"]], "ex_dataerr (in module os)": [[308, "os.EX_DATAERR"]], "ex_ioerr (in module os)": [[308, "os.EX_IOERR"]], "ex_nohost (in module os)": [[308, "os.EX_NOHOST"]], "ex_noinput (in module os)": [[308, "os.EX_NOINPUT"]], "ex_noperm (in module os)": [[308, "os.EX_NOPERM"]], "ex_notfound (in module os)": [[308, "os.EX_NOTFOUND"]], "ex_nouser (in module os)": [[308, "os.EX_NOUSER"]], "ex_ok (in module os)": [[308, "os.EX_OK"]], "ex_oserr (in module os)": [[308, "os.EX_OSERR"]], "ex_osfile (in module os)": [[308, "os.EX_OSFILE"]], "ex_protocol (in module os)": [[308, "os.EX_PROTOCOL"]], "ex_software (in module os)": [[308, "os.EX_SOFTWARE"]], "ex_tempfail (in module os)": [[308, "os.EX_TEMPFAIL"]], "ex_unavailable (in module os)": [[308, "os.EX_UNAVAILABLE"]], "ex_usage (in module os)": [[308, "os.EX_USAGE"]], "f_lock (in module os)": [[308, "os.F_LOCK"]], "f_ok (in module os)": [[308, "os.F_OK"]], "f_test (in module os)": [[308, "os.F_TEST"]], "f_tlock (in module os)": [[308, "os.F_TLOCK"]], "f_ulock (in module os)": [[308, "os.F_ULOCK"]], "grnd_nonblock (in module os)": [[308, "os.GRND_NONBLOCK"]], "grnd_random (in module os)": [[308, "os.GRND_RANDOM"]], "mfd_allow_sealing (in module os)": [[308, "os.MFD_ALLOW_SEALING"]], "mfd_cloexec (in module os)": [[308, "os.MFD_CLOEXEC"]], "mfd_hugetlb (in module os)": [[308, "os.MFD_HUGETLB"]], "mfd_huge_16gb (in module os)": [[308, "os.MFD_HUGE_16GB"]], "mfd_huge_16mb (in module os)": [[308, "os.MFD_HUGE_16MB"]], "mfd_huge_1gb (in module os)": [[308, "os.MFD_HUGE_1GB"]], "mfd_huge_1mb (in module os)": [[308, "os.MFD_HUGE_1MB"]], "mfd_huge_256mb (in module os)": [[308, "os.MFD_HUGE_256MB"]], "mfd_huge_2gb (in module os)": [[308, "os.MFD_HUGE_2GB"]], "mfd_huge_2mb (in module os)": [[308, "os.MFD_HUGE_2MB"]], "mfd_huge_32mb (in module os)": [[308, "os.MFD_HUGE_32MB"]], "mfd_huge_512kb (in module os)": [[308, "os.MFD_HUGE_512KB"]], "mfd_huge_512mb (in module os)": [[308, "os.MFD_HUGE_512MB"]], "mfd_huge_64kb (in module os)": [[308, "os.MFD_HUGE_64KB"]], "mfd_huge_8mb (in module os)": [[308, "os.MFD_HUGE_8MB"]], "mfd_huge_mask (in module os)": [[308, "os.MFD_HUGE_MASK"]], "mfd_huge_shift (in module os)": [[308, "os.MFD_HUGE_SHIFT"]], "o_append (in module os)": [[308, "os.O_APPEND"]], "o_async (in module os)": [[308, "os.O_ASYNC"]], "o_binary (in module os)": [[308, "os.O_BINARY"]], "o_cloexec (in module os)": [[308, "os.O_CLOEXEC"]], "o_creat (in module os)": [[308, "os.O_CREAT"]], "o_direct (in module os)": [[308, "os.O_DIRECT"]], "o_directory (in module os)": [[308, "os.O_DIRECTORY"]], "o_dsync (in module os)": [[308, "os.O_DSYNC"]], "o_evtonly (in module os)": [[308, "os.O_EVTONLY"]], "o_excl (in module os)": [[308, "os.O_EXCL"]], "o_exlock (in module os)": [[308, "os.O_EXLOCK"]], "o_fsync (in module os)": [[308, "os.O_FSYNC"]], "o_ndelay (in module os)": [[308, "os.O_NDELAY"]], "o_noatime (in module os)": [[308, "os.O_NOATIME"]], "o_noctty (in module os)": [[308, "os.O_NOCTTY"]], "o_nofollow (in module os)": [[308, "os.O_NOFOLLOW"]], "o_nofollow_any (in module os)": [[308, "os.O_NOFOLLOW_ANY"]], "o_noinherit (in module os)": [[308, "os.O_NOINHERIT"]], "o_nonblock (in module os)": [[308, "os.O_NONBLOCK"]], "o_path (in module os)": [[308, "os.O_PATH"]], "o_random (in module os)": [[308, "os.O_RANDOM"]], "o_rdonly (in module os)": [[308, "os.O_RDONLY"]], "o_rdwr (in module os)": [[308, "os.O_RDWR"]], "o_rsync (in module os)": [[308, "os.O_RSYNC"]], "o_sequential (in module os)": [[308, "os.O_SEQUENTIAL"]], "o_shlock (in module os)": [[308, "os.O_SHLOCK"]], "o_short_lived (in module os)": [[308, "os.O_SHORT_LIVED"]], "o_symlink (in module os)": [[308, "os.O_SYMLINK"]], "o_sync (in module os)": [[308, "os.O_SYNC"]], "o_temporary (in module os)": [[308, "os.O_TEMPORARY"]], "o_text (in module os)": [[308, "os.O_TEXT"]], "o_tmpfile (in module os)": [[308, "os.O_TMPFILE"]], "o_trunc (in module os)": [[308, "os.O_TRUNC"]], "o_wronly (in module os)": [[308, "os.O_WRONLY"]], "pep 524": [[308, "index-53"], [493, "index-1"], [493, "index-31"], [493, "index-32"]], "posix_fadv_dontneed (in module os)": [[308, "os.POSIX_FADV_DONTNEED"]], "posix_fadv_noreuse (in module os)": [[308, "os.POSIX_FADV_NOREUSE"]], "posix_fadv_normal (in module os)": [[308, "os.POSIX_FADV_NORMAL"]], "posix_fadv_random (in module os)": [[308, "os.POSIX_FADV_RANDOM"]], "posix_fadv_sequential (in module os)": [[308, "os.POSIX_FADV_SEQUENTIAL"]], "posix_fadv_willneed (in module os)": [[308, "os.POSIX_FADV_WILLNEED"]], "posix_spawn_close (in module os)": [[308, "os.POSIX_SPAWN_CLOSE"]], "posix_spawn_dup2 (in module os)": [[308, "os.POSIX_SPAWN_DUP2"]], "posix_spawn_open (in module os)": [[308, "os.POSIX_SPAWN_OPEN"]], "prio_pgrp (in module os)": [[308, "os.PRIO_PGRP"]], "prio_process (in module os)": [[308, "os.PRIO_PROCESS"]], "prio_user (in module os)": [[308, "os.PRIO_USER"]], "p_all (in module os)": [[308, "os.P_ALL"]], "p_detach (in module os)": [[308, "os.P_DETACH"]], "p_nowait (in module os)": [[308, "os.P_NOWAIT"]], "p_nowaito (in module os)": [[308, "os.P_NOWAITO"]], "p_overlay (in module os)": [[308, "os.P_OVERLAY"]], "p_pgid (in module os)": [[308, "os.P_PGID"]], "p_pid (in module os)": [[308, "os.P_PID"]], "p_pidfd (in module os)": [[308, "os.P_PIDFD"]], "p_wait (in module os)": [[308, "os.P_WAIT"]], "pathlike (class in os)": [[308, "os.PathLike"]], "rtld_deepbind (in module os)": [[308, "os.RTLD_DEEPBIND"]], "rtld_global (in module os)": [[308, "os.RTLD_GLOBAL"]], "rtld_lazy (in module os)": [[308, "os.RTLD_LAZY"]], "rtld_local (in module os)": [[308, "os.RTLD_LOCAL"]], "rtld_nodelete (in module os)": [[308, "os.RTLD_NODELETE"]], "rtld_noload (in module os)": [[308, "os.RTLD_NOLOAD"]], "rtld_now (in module os)": [[308, "os.RTLD_NOW"]], "rwf_append (in module os)": [[308, "os.RWF_APPEND"]], "rwf_dsync (in module os)": [[308, "os.RWF_DSYNC"]], "rwf_hipri (in module os)": [[308, "os.RWF_HIPRI"]], "rwf_nowait (in module os)": [[308, "os.RWF_NOWAIT"]], "rwf_sync (in module os)": [[308, "os.RWF_SYNC"]], "r_ok (in module os)": [[308, "os.R_OK"]], "sched_batch (in module os)": [[308, "os.SCHED_BATCH"]], "sched_fifo (in module os)": [[308, "os.SCHED_FIFO"]], "sched_idle (in module os)": [[308, "os.SCHED_IDLE"]], "sched_other (in module os)": [[308, "os.SCHED_OTHER"]], "sched_reset_on_fork (in module os)": [[308, "os.SCHED_RESET_ON_FORK"]], "sched_rr (in module os)": [[308, "os.SCHED_RR"]], "sched_sporadic (in module os)": [[308, "os.SCHED_SPORADIC"]], "seek_cur (in module os)": [[308, "os.SEEK_CUR"]], "seek_data (in module os)": [[308, "os.SEEK_DATA"]], "seek_end (in module os)": [[308, "os.SEEK_END"]], "seek_hole (in module os)": [[308, "os.SEEK_HOLE"]], "seek_set (in module os)": [[308, "os.SEEK_SET"]], "sf_mnowait (in module os)": [[308, "os.SF_MNOWAIT"]], "sf_nocache (in module os)": [[308, "os.SF_NOCACHE"]], "sf_nodiskio (in module os)": [[308, "os.SF_NODISKIO"]], "sf_sync (in module os)": [[308, "os.SF_SYNC"]], "splice_f_more (in module os)": [[308, "os.SPLICE_F_MORE"]], "splice_f_move (in module os)": [[308, "os.SPLICE_F_MOVE"]], "splice_f_nonblock (in module os)": [[308, "os.SPLICE_F_NONBLOCK"]], "unc paths": [[308, "index-28"]], "wcontinued (in module os)": [[308, "os.WCONTINUED"]], "wcoredump() (in module os)": [[308, "os.WCOREDUMP"]], "wexited (in module os)": [[308, "os.WEXITED"]], "wexitstatus() (in module os)": [[308, "os.WEXITSTATUS"]], "wifcontinued() (in module os)": [[308, "os.WIFCONTINUED"]], "wifexited() (in module os)": [[308, "os.WIFEXITED"]], "wifsignaled() (in module os)": [[308, "os.WIFSIGNALED"]], "wifstopped() (in module os)": [[308, "os.WIFSTOPPED"]], "wnohang (in module os)": [[308, "os.WNOHANG"]], "wnowait (in module os)": [[308, "os.WNOWAIT"]], "wstopped (in module os)": [[308, "os.WSTOPPED"]], "wstopsig() (in module os)": [[308, "os.WSTOPSIG"]], "wtermsig() (in module os)": [[308, "os.WTERMSIG"]], "wuntraced (in module os)": [[308, "os.WUNTRACED"]], "w_ok (in module os)": [[308, "os.W_OK"]], "xattr_create (in module os)": [[308, "os.XATTR_CREATE"]], "xattr_replace (in module os)": [[308, "os.XATTR_REPLACE"]], "xattr_size_max (in module os)": [[308, "os.XATTR_SIZE_MAX"]], "x_ok (in module os)": [[308, "os.X_OK"]], "__fspath__() (os.pathlike method)": [[308, "os.PathLike.__fspath__"]], "_exit() (in module os)": [[308, "os._exit"]], "abort() (in module os)": [[308, "os.abort"]], "access() (in module os)": [[308, "os.access"]], "add_dll_directory() (in module os)": [[308, "os.add_dll_directory"]], "altsep (in module os)": [[308, "os.altsep"]], "and os.makedirs()": [[308, "index-28"]], "changing": [[308, "index-26"]], "chdir() (in module os)": [[308, "os.chdir"]], "chflags() (in module os)": [[308, "os.chflags"]], "chmod() (in module os)": [[308, "os.chmod"]], "chown() (in module os)": [[308, "os.chown"]], "chroot() (in module os)": [[308, "os.chroot"]], "close() (in module os)": [[308, "os.close"]], "close() (os.scandir method)": [[308, "os.scandir.close"]], "closerange() (in module os)": [[308, "os.closerange"]], "columns (os.terminal_size attribute)": [[308, "os.terminal_size.columns"]], "confstr() (in module os)": [[308, "os.confstr"]], "confstr_names (in module os)": [[308, "os.confstr_names"]], "copy_file_range() (in module os)": [[308, "os.copy_file_range"]], "cpu_count() (in module os)": [[308, "os.cpu_count"]], "creating": [[308, "index-28"]], "ctermid() (in module os)": [[308, "os.ctermid"]], "curdir (in module os)": [[308, "os.curdir"]], "defpath (in module os)": [[308, "os.defpath"]], "deleting": [[308, "index-21"], [308, "index-29"], [347, "index-1"]], "device_encoding() (in module os)": [[308, "os.device_encoding"]], "devnull (in module os)": [[308, "os.devnull"]], "dup() (in module os)": [[308, "os.dup"]], "dup2() (in module os)": [[308, "os.dup2"]], "effective id": [[308, "index-8"]], "environ (in module os)": [[308, "os.environ"]], "environb (in module os)": [[308, "os.environb"]], "environment variables": [[308, "index-17"], [308, "index-21"]], "eventfd() (in module os)": [[308, "os.eventfd"]], "eventfd_read() (in module os)": [[308, "os.eventfd_read"]], "eventfd_write() (in module os)": [[308, "os.eventfd_write"]], "execl() (in module os)": [[308, "os.execl"]], "execle() (in module os)": [[308, "os.execle"]], "execlp() (in module os)": [[308, "os.execlp"]], "execlpe() (in module os)": [[308, "os.execlpe"]], "execv() (in module os)": [[308, "os.execv"]], "execve() (in module os)": [[308, "os.execve"]], "execvp() (in module os)": [[308, "os.execvp"]], "execvpe() (in module os)": [[308, "os.execvpe"]], "extsep (in module os)": [[308, "os.extsep"]], "fchdir() (in module os)": [[308, "os.fchdir"]], "fchmod() (in module os)": [[308, "os.fchmod"]], "fchown() (in module os)": [[308, "os.fchown"]], "fdatasync() (in module os)": [[308, "os.fdatasync"]], "fdopen() (in module os)": [[308, "os.fdopen"]], "fork() (in module os)": [[308, "os.fork"]], "forkpty() (in module os)": [[308, "os.forkpty"]], "fpathconf() (in module os)": [[308, "os.fpathconf"]], "fsdecode() (in module os)": [[308, "os.fsdecode"]], "fsencode() (in module os)": [[308, "os.fsencode"]], "fspath() (in module os)": [[308, "os.fspath"]], "fstat() (in module os)": [[308, "os.fstat"]], "fstatvfs() (in module os)": [[308, "os.fstatvfs"]], "fsync() (in module os)": [[308, "os.fsync"]], "ftruncate() (in module os)": [[308, "os.ftruncate"]], "fwalk() (in module os)": [[308, "os.fwalk"]], "get_blocking() (in module os)": [[308, "os.get_blocking"]], "get_exec_path() (in module os)": [[308, "os.get_exec_path"]], "get_handle_inheritable() (in module os)": [[308, "os.get_handle_inheritable"]], "get_inheritable() (in module os)": [[308, "os.get_inheritable"]], "get_terminal_size() (in module os)": [[308, "os.get_terminal_size"]], "getcwd() (in module os)": [[308, "os.getcwd"]], "getcwdb() (in module os)": [[308, "os.getcwdb"]], "getegid() (in module os)": [[308, "os.getegid"]], "getenv() (in module os)": [[308, "os.getenv"]], "getenvb() (in module os)": [[308, "os.getenvb"]], "geteuid() (in module os)": [[308, "os.geteuid"]], "getgid() (in module os)": [[308, "os.getgid"]], "getgrouplist() (in module os)": [[308, "os.getgrouplist"]], "getgroups() (in module os)": [[308, "os.getgroups"]], "gethostbyaddr() (in module socket)": [[308, "index-20"], [353, "socket.gethostbyaddr"]], "gethostname() (in module socket)": [[308, "index-20"], [353, "socket.gethostname"]], "getloadavg() (in module os)": [[308, "os.getloadavg"]], "getlogin() (in module os)": [[308, "os.getlogin"]], "getpgid() (in module os)": [[308, "os.getpgid"]], "getpgrp() (in module os)": [[308, "os.getpgrp"]], "getpid() (in module os)": [[308, "os.getpid"]], "getppid() (in module os)": [[308, "os.getppid"]], "getpriority() (in module os)": [[308, "os.getpriority"]], "getrandom() (in module os)": [[308, "os.getrandom"]], "getresgid() (in module os)": [[308, "os.getresgid"]], "getresuid() (in module os)": [[308, "os.getresuid"]], "getsid() (in module os)": [[308, "os.getsid"]], "getuid() (in module os)": [[308, "os.getuid"]], "getxattr() (in module os)": [[308, "os.getxattr"]], "group": [[308, "index-12"], [308, "index-9"]], "id": [[308, "index-13"], [308, "index-16"], [443, "index-1"]], "id of parent": [[308, "index-14"]], "id, setting": [[308, "index-19"]], "in pathnames": [[308, "index-45"], [308, "index-46"], [308, "index-47"], [308, "index-49"], [308, "index-50"]], "in pathnames (windows)": [[308, "index-48"]], "initgroups() (in module os)": [[308, "os.initgroups"]], "inode() (os.direntry method)": [[308, "os.DirEntry.inode"]], "is_dir() (os.direntry method)": [[308, "os.DirEntry.is_dir"]], "is_file() (os.direntry method)": [[308, "os.DirEntry.is_file"]], "is_symlink() (os.direntry method)": [[308, "os.DirEntry.is_symlink"]], "isatty() (in module os)": [[308, "os.isatty"]], "kill() (in module os)": [[308, "os.kill"]], "killing": [[308, "index-37"], [308, "index-38"]], "killpg() (in module os)": [[308, "os.killpg"]], "lchflags() (in module os)": [[308, "os.lchflags"]], "lchmod() (in module os)": [[308, "os.lchmod"]], "lchown() (in module os)": [[308, "os.lchown"]], "lines (os.terminal_size attribute)": [[308, "os.terminal_size.lines"]], "linesep (in module os)": [[308, "os.linesep"]], "link() (in module os)": [[308, "os.link"]], "listdir() (in module os)": [[308, "os.listdir"]], "listxattr() (in module os)": [[308, "os.listxattr"]], "lockf() (in module os)": [[308, "os.lockf"]], "login_tty() (in module os)": [[308, "os.login_tty"]], "lseek() (in module os)": [[308, "os.lseek"]], "lstat() (in module os)": [[308, "os.lstat"]], "major() (in module os)": [[308, "os.major"]], "makedev() (in module os)": [[308, "os.makedev"]], "makedirs() (in module os)": [[308, "os.makedirs"]], "memfd_create() (in module os)": [[308, "os.memfd_create"]], "minor() (in module os)": [[308, "os.minor"]], "mkdir() (in module os)": [[308, "os.mkdir"]], "mkfifo() (in module os)": [[308, "os.mkfifo"]], "mknod() (in module os)": [[308, "os.mknod"]], "name (in module os)": [[308, "os.name"]], "name (os.direntry attribute)": [[308, "os.DirEntry.name"]], "nice() (in module os)": [[308, "os.nice"]], "open() (in module os)": [[308, "os.open"]], "openpty() (in module os)": [[308, "os.openpty"]], "os": [[308, "module-os"], [321, "index-0"]], "pardir (in module os)": [[308, "os.pardir"]], "path (os.direntry attribute)": [[308, "os.DirEntry.path"]], "path separator (posix)": [[308, "index-51"]], "pathconf() (in module os)": [[308, "os.pathconf"]], "pathconf_names (in module os)": [[308, "os.pathconf_names"]], "pathsep (in module os)": [[308, "os.pathsep"]], "pidfd_open() (in module os)": [[308, "os.pidfd_open"]], "pipe() (in module os)": [[308, "os.pipe"]], "pipe2() (in module os)": [[308, "os.pipe2"]], "plock() (in module os)": [[308, "os.plock"]], "popen() (in module os)": [[308, "os.popen"], [343, "index-1"], [443, "index-55"]], "posix_fadvise() (in module os)": [[308, "os.posix_fadvise"]], "posix_fallocate() (in module os)": [[308, "os.posix_fallocate"]], "posix_spawn() (in module os)": [[308, "os.posix_spawn"]], "posix_spawnp() (in module os)": [[308, "os.posix_spawnp"]], "pread() (in module os)": [[308, "os.pread"]], "preadv() (in module os)": [[308, "os.preadv"]], "process": [[308, "index-12"], [308, "index-13"], [308, "index-14"], [308, "index-15"], [308, "index-18"], [308, "index-37"], [308, "index-38"], [308, "index-9"]], "pty": [[308, "index-23"], [324, "module-pty"]], "putenv() (in module os)": [[308, "os.putenv"]], "pwrite() (in module os)": [[308, "os.pwrite"]], "pwritev() (in module os)": [[308, "os.pwritev"]], "read() (in module os)": [[308, "os.read"]], "readlink() (in module os)": [[308, "os.readlink"]], "readv() (in module os)": [[308, "os.readv"]], "register_at_fork() (in module os)": [[308, "os.register_at_fork"]], "remove() (in module os)": [[308, "os.remove"]], "removedirs() (in module os)": [[308, "os.removedirs"]], "removexattr() (in module os)": [[308, "os.removexattr"]], "rename() (in module os)": [[308, "os.rename"]], "renames() (in module os)": [[308, "os.renames"]], "replace() (in module os)": [[308, "os.replace"]], "rmdir() (in module os)": [[308, "os.rmdir"]], "scandir() (in module os)": [[308, "os.scandir"]], "sched_get_priority_max() (in module os)": [[308, "os.sched_get_priority_max"]], "sched_get_priority_min() (in module os)": [[308, "os.sched_get_priority_min"]], "sched_getaffinity() (in module os)": [[308, "os.sched_getaffinity"]], "sched_getparam() (in module os)": [[308, "os.sched_getparam"]], "sched_getscheduler() (in module os)": [[308, "os.sched_getscheduler"]], "sched_param (class in os)": [[308, "os.sched_param"]], "sched_priority (os.sched_param attribute)": [[308, "os.sched_param.sched_priority"]], "sched_rr_get_interval() (in module os)": [[308, "os.sched_rr_get_interval"]], "sched_setaffinity() (in module os)": [[308, "os.sched_setaffinity"]], "sched_setparam() (in module os)": [[308, "os.sched_setparam"]], "sched_setscheduler() (in module os)": [[308, "os.sched_setscheduler"]], "sched_yield() (in module os)": [[308, "os.sched_yield"]], "scheduling priority": [[308, "index-15"], [308, "index-18"]], "sendfile() (in module os)": [[308, "os.sendfile"]], "sep (in module os)": [[308, "os.sep"]], "set_blocking() (in module os)": [[308, "os.set_blocking"]], "set_handle_inheritable() (in module os)": [[308, "os.set_handle_inheritable"]], "set_inheritable() (in module os)": [[308, "os.set_inheritable"]], "setegid() (in module os)": [[308, "os.setegid"]], "seteuid() (in module os)": [[308, "os.seteuid"]], "setgid() (in module os)": [[308, "os.setgid"]], "setgroups() (in module os)": [[308, "os.setgroups"]], "setpgid() (in module os)": [[308, "os.setpgid"]], "setpgrp() (in module os)": [[308, "os.setpgrp"]], "setpriority() (in module os)": [[308, "os.setpriority"]], "setregid() (in module os)": [[308, "os.setregid"]], "setresgid() (in module os)": [[308, "os.setresgid"]], "setresuid() (in module os)": [[308, "os.setresuid"]], "setreuid() (in module os)": [[308, "os.setreuid"]], "setsid() (in module os)": [[308, "os.setsid"]], "setting": [[308, "index-17"]], "setuid() (in module os)": [[308, "os.setuid"]], "setxattr() (in module os)": [[308, "os.setxattr"]], "signalling": [[308, "index-37"], [308, "index-38"]], "spawnl() (in module os)": [[308, "os.spawnl"]], "spawnle() (in module os)": [[308, "os.spawnle"]], "spawnlp() (in module os)": [[308, "os.spawnlp"]], "spawnlpe() (in module os)": [[308, "os.spawnlpe"]], "spawnv() (in module os)": [[308, "os.spawnv"]], "spawnve() (in module os)": [[308, "os.spawnve"]], "spawnvp() (in module os)": [[308, "os.spawnvp"]], "spawnvpe() (in module os)": [[308, "os.spawnvpe"]], "splice() (in module os)": [[308, "os.splice"]], "st_atime (os.stat_result attribute)": [[308, "os.stat_result.st_atime"]], "st_atime_ns (os.stat_result attribute)": [[308, "os.stat_result.st_atime_ns"]], "st_birthtime (os.stat_result attribute)": [[308, "os.stat_result.st_birthtime"]], "st_blksize (os.stat_result attribute)": [[308, "os.stat_result.st_blksize"]], "st_blocks (os.stat_result attribute)": [[308, "os.stat_result.st_blocks"]], "st_creator (os.stat_result attribute)": [[308, "os.stat_result.st_creator"]], "st_ctime (os.stat_result attribute)": [[308, "os.stat_result.st_ctime"]], "st_ctime_ns (os.stat_result attribute)": [[308, "os.stat_result.st_ctime_ns"]], "st_dev (os.stat_result attribute)": [[308, "os.stat_result.st_dev"]], "st_file_attributes (os.stat_result attribute)": [[308, "os.stat_result.st_file_attributes"]], "st_flags (os.stat_result attribute)": [[308, "os.stat_result.st_flags"]], "st_fstype (os.stat_result attribute)": [[308, "os.stat_result.st_fstype"]], "st_gen (os.stat_result attribute)": [[308, "os.stat_result.st_gen"]], "st_gid (os.stat_result attribute)": [[308, "os.stat_result.st_gid"]], "st_ino (os.stat_result attribute)": [[308, "os.stat_result.st_ino"]], "st_mode (os.stat_result attribute)": [[308, "os.stat_result.st_mode"]], "st_mtime (os.stat_result attribute)": [[308, "os.stat_result.st_mtime"]], "st_mtime_ns (os.stat_result attribute)": [[308, "os.stat_result.st_mtime_ns"]], "st_nlink (os.stat_result attribute)": [[308, "os.stat_result.st_nlink"]], "st_rdev (os.stat_result attribute)": [[308, "os.stat_result.st_rdev"]], "st_reparse_tag (os.stat_result attribute)": [[308, "os.stat_result.st_reparse_tag"]], "st_rsize (os.stat_result attribute)": [[308, "os.stat_result.st_rsize"]], "st_size (os.stat_result attribute)": [[308, "os.stat_result.st_size"]], "st_type (os.stat_result attribute)": [[308, "os.stat_result.st_type"]], "st_uid (os.stat_result attribute)": [[308, "os.stat_result.st_uid"]], "startfile() (in module os)": [[308, "os.startfile"]], "stat": [[308, "index-30"], [358, "module-stat"]], "stat() (in module os)": [[308, "os.stat"]], "stat() (os.direntry method)": [[308, "os.DirEntry.stat"]], "stat_result (class in os)": [[308, "os.stat_result"]], "statvfs() (in module os)": [[308, "os.statvfs"]], "strerror() (in module os)": [[308, "os.strerror"]], "supports_bytes_environ (in module os)": [[308, "os.supports_bytes_environ"]], "supports_dir_fd (in module os)": [[308, "os.supports_dir_fd"]], "supports_effective_ids (in module os)": [[308, "os.supports_effective_ids"]], "supports_fd (in module os)": [[308, "os.supports_fd"]], "supports_follow_symlinks (in module os)": [[308, "os.supports_follow_symlinks"]], "symlink() (in module os)": [[308, "os.symlink"]], "sync() (in module os)": [[308, "os.sync"]], "sysconf() (in module os)": [[308, "os.sysconf"]], "sysconf_names (in module os)": [[308, "os.sysconf_names"]], "system() (in module os)": [[308, "os.system"]], "tcgetpgrp() (in module os)": [[308, "os.tcgetpgrp"]], "tcsetpgrp() (in module os)": [[308, "os.tcsetpgrp"]], "terminal_size (class in os)": [[308, "os.terminal_size"]], "times() (in module os)": [[308, "os.times"]], "traversal": [[308, "index-31"], [308, "index-32"]], "truncate() (in module os)": [[308, "os.truncate"]], "ttyname() (in module os)": [[308, "os.ttyname"]], "umask() (in module os)": [[308, "os.umask"]], "uname() (in module os)": [[308, "os.uname"]], "unlink() (in module os)": [[308, "os.unlink"]], "unsetenv() (in module os)": [[308, "os.unsetenv"]], "urandom() (in module os)": [[308, "os.urandom"]], "utime() (in module os)": [[308, "os.utime"]], "wait() (in module os)": [[308, "os.wait"]], "wait3() (in module os)": [[308, "os.wait3"]], "wait4() (in module os)": [[308, "os.wait4"]], "waitid() (in module os)": [[308, "os.waitid"]], "waitpid() (in module os)": [[308, "os.waitpid"]], "waitstatus_to_exitcode() (in module os)": [[308, "os.waitstatus_to_exitcode"]], "walk() (in module os)": [[308, "os.walk"]], "walking": [[308, "index-31"], [308, "index-32"]], "write() (in module os)": [[308, "os.write"]], "writev() (in module os)": [[308, "os.writev"]], "abspath() (in module os.path)": [[309, "os.path.abspath"]], "basename() (in module os.path)": [[309, "os.path.basename"]], "commonpath() (in module os.path)": [[309, "os.path.commonpath"]], "commonprefix() (in module os.path)": [[309, "os.path.commonprefix"]], "dirname() (in module os.path)": [[309, "os.path.dirname"]], "environment variables expansion": [[309, "index-9"]], "environment variables expansion (windows)": [[309, "index-9"], [420, "index-0"]], "exists() (in module os.path)": [[309, "os.path.exists"]], "expanduser() (in module os.path)": [[309, "os.path.expanduser"]], "expandvars() (in module os.path)": [[309, "os.path.expandvars"]], "getatime() (in module os.path)": [[309, "os.path.getatime"]], "getctime() (in module os.path)": [[309, "os.path.getctime"]], "getmtime() (in module os.path)": [[309, "os.path.getmtime"]], "getsize() (in module os.path)": [[309, "os.path.getsize"]], "home directory expansion": [[309, "index-1"]], "isabs() (in module os.path)": [[309, "os.path.isabs"]], "isdir() (in module os.path)": [[309, "os.path.isdir"]], "isfile() (in module os.path)": [[309, "os.path.isfile"]], "islink() (in module os.path)": [[309, "os.path.islink"]], "ismount() (in module os.path)": [[309, "os.path.ismount"]], "join() (in module os.path)": [[309, "os.path.join"]], "lexists() (in module os.path)": [[309, "os.path.lexists"]], "normcase() (in module os.path)": [[309, "os.path.normcase"]], "normpath() (in module os.path)": [[309, "os.path.normpath"]], "operations": [[309, "index-0"], [311, "index-0"], [360, "index-1"], [360, "index-16"], [360, "index-5"]], "os.path": [[309, "module-os.path"]], "pwd": [[309, "index-2"], [325, "module-pwd"]], "realpath() (in module os.path)": [[309, "os.path.realpath"]], "relpath() (in module os.path)": [[309, "os.path.relpath"]], "samefile() (in module os.path)": [[309, "os.path.samefile"]], "sameopenfile() (in module os.path)": [[309, "os.path.sameopenfile"]], "samestat() (in module os.path)": [[309, "os.path.samestat"]], "split() (in module os.path)": [[309, "os.path.split"]], "splitdrive() (in module os.path)": [[309, "os.path.splitdrive"]], "splitext() (in module os.path)": [[309, "os.path.splitext"]], "supports_unicode_filenames (in module os.path)": [[309, "os.path.supports_unicode_filenames"]], "~ (tilde)": [[309, "index-1"], [360, "index-16"], [445, "index-62"]], "audiodev": [[310, "index-1"]], "mixerdev": [[310, "index-2"]], "ossaudioerror": [[310, "ossaudiodev.OSSAudioError"]], "pep 594#ossaudiodev": [[310, "index-0"]], "bufsize() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.bufsize"]], "channels() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.channels"]], "close() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.close"]], "close() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.close"]], "closed (ossaudiodev.oss_audio_device attribute)": [[310, "ossaudiodev.oss_audio_device.closed"]], "controls() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.controls"]], "fileno() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.fileno"]], "fileno() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.fileno"]], "get() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.get"]], "get_recsrc() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.get_recsrc"]], "getfmts() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.getfmts"]], "mode (ossaudiodev.oss_audio_device attribute)": [[310, "ossaudiodev.oss_audio_device.mode"]], "name (ossaudiodev.oss_audio_device attribute)": [[310, "ossaudiodev.oss_audio_device.name"]], "nonblock() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.nonblock"]], "obufcount() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.obufcount"]], "obuffree() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.obuffree"]], "open() (in module ossaudiodev)": [[310, "ossaudiodev.open"]], "openmixer() (in module ossaudiodev)": [[310, "ossaudiodev.openmixer"]], "ossaudiodev": [[310, "module-ossaudiodev"]], "post() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.post"]], "read() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.read"]], "reccontrols() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.reccontrols"]], "reset() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.reset"]], "set() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.set"]], "set_recsrc() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.set_recsrc"]], "setfmt() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.setfmt"]], "setparameters() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.setparameters"]], "speed() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.speed"]], "stereocontrols() (ossaudiodev.oss_mixer_device method)": [[310, "ossaudiodev.oss_mixer_device.stereocontrols"]], "sync() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.sync"]], "write() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.write"]], "writeall() (ossaudiodev.oss_audio_device method)": [[310, "ossaudiodev.oss_audio_device.writeall"]], "pep 428": [[311, "index-1"], [491, "index-30"], [491, "index-7"]], "path (class in pathlib)": [[311, "pathlib.Path"]], "posixpath (class in pathlib)": [[311, "pathlib.PosixPath"]], "purepath (class in pathlib)": [[311, "pathlib.PurePath"]], "pureposixpath (class in pathlib)": [[311, "pathlib.PurePosixPath"]], "purewindowspath (class in pathlib)": [[311, "pathlib.PureWindowsPath"]], "windowspath (class in pathlib)": [[311, "pathlib.WindowsPath"]], "absolute() (pathlib.path method)": [[311, "pathlib.Path.absolute"]], "anchor (pathlib.purepath attribute)": [[311, "pathlib.PurePath.anchor"]], "as_posix() (pathlib.purepath method)": [[311, "pathlib.PurePath.as_posix"]], "as_uri() (pathlib.purepath method)": [[311, "pathlib.PurePath.as_uri"]], "chmod() (pathlib.path method)": [[311, "pathlib.Path.chmod"]], "cwd() (pathlib.path class method)": [[311, "pathlib.Path.cwd"]], "drive (pathlib.purepath attribute)": [[311, "pathlib.PurePath.drive"]], "exists() (pathlib.path method)": [[311, "pathlib.Path.exists"]], "expanduser() (pathlib.path method)": [[311, "pathlib.Path.expanduser"]], "glob() (pathlib.path method)": [[311, "pathlib.Path.glob"]], "group() (pathlib.path method)": [[311, "pathlib.Path.group"]], "hardlink_to() (pathlib.path method)": [[311, "pathlib.Path.hardlink_to"]], "home() (pathlib.path class method)": [[311, "pathlib.Path.home"]], "is_absolute() (pathlib.purepath method)": [[311, "pathlib.PurePath.is_absolute"]], "is_block_device() (pathlib.path method)": [[311, "pathlib.Path.is_block_device"]], "is_char_device() (pathlib.path method)": [[311, "pathlib.Path.is_char_device"]], "is_dir() (pathlib.path method)": [[311, "pathlib.Path.is_dir"]], "is_fifo() (pathlib.path method)": [[311, "pathlib.Path.is_fifo"]], "is_file() (pathlib.path method)": [[311, "pathlib.Path.is_file"]], "is_mount() (pathlib.path method)": [[311, "pathlib.Path.is_mount"]], "is_relative_to() (pathlib.purepath method)": [[311, "pathlib.PurePath.is_relative_to"]], "is_reserved() (pathlib.purepath method)": [[311, "pathlib.PurePath.is_reserved"]], "is_socket() (pathlib.path method)": [[311, "pathlib.Path.is_socket"]], "is_symlink() (pathlib.path method)": [[311, "pathlib.Path.is_symlink"]], "iterdir() (pathlib.path method)": [[311, "pathlib.Path.iterdir"]], "joinpath() (pathlib.purepath method)": [[311, "pathlib.PurePath.joinpath"]], "lchmod() (pathlib.path method)": [[311, "pathlib.Path.lchmod"]], "link_to() (pathlib.path method)": [[311, "pathlib.Path.link_to"]], "lstat() (pathlib.path method)": [[311, "pathlib.Path.lstat"]], "match() (pathlib.purepath method)": [[311, "pathlib.PurePath.match"]], "mkdir() (pathlib.path method)": [[311, "pathlib.Path.mkdir"]], "name (pathlib.purepath attribute)": [[311, "pathlib.PurePath.name"]], "open() (pathlib.path method)": [[311, "pathlib.Path.open"]], "owner() (pathlib.path method)": [[311, "pathlib.Path.owner"]], "parent (pathlib.purepath attribute)": [[311, "pathlib.PurePath.parent"]], "parents (pathlib.purepath attribute)": [[311, "pathlib.PurePath.parents"]], "parts (pathlib.purepath attribute)": [[311, "pathlib.PurePath.parts"]], "pathlib": [[311, "module-pathlib"]], "read_bytes() (pathlib.path method)": [[311, "pathlib.Path.read_bytes"]], "read_text() (pathlib.path method)": [[311, "pathlib.Path.read_text"]], "readlink() (pathlib.path method)": [[311, "pathlib.Path.readlink"]], "relative_to() (pathlib.purepath method)": [[311, "pathlib.PurePath.relative_to"]], "rename() (pathlib.path method)": [[311, "pathlib.Path.rename"]], "replace() (pathlib.path method)": [[311, "pathlib.Path.replace"]], "resolve() (pathlib.path method)": [[311, "pathlib.Path.resolve"]], "rglob() (pathlib.path method)": [[311, "pathlib.Path.rglob"]], "rmdir() (pathlib.path method)": [[311, "pathlib.Path.rmdir"]], "root (pathlib.purepath attribute)": [[311, "pathlib.PurePath.root"]], "samefile() (pathlib.path method)": [[311, "pathlib.Path.samefile"]], "stat() (pathlib.path method)": [[311, "pathlib.Path.stat"]], "stem (pathlib.purepath attribute)": [[311, "pathlib.PurePath.stem"]], "suffix (pathlib.purepath attribute)": [[311, "pathlib.PurePath.suffix"]], "suffixes (pathlib.purepath attribute)": [[311, "pathlib.PurePath.suffixes"]], "symlink_to() (pathlib.path method)": [[311, "pathlib.Path.symlink_to"]], "touch() (pathlib.path method)": [[311, "pathlib.Path.touch"]], "unlink() (pathlib.path method)": [[311, "pathlib.Path.unlink"]], "with_name() (pathlib.purepath method)": [[311, "pathlib.PurePath.with_name"]], "with_stem() (pathlib.purepath method)": [[311, "pathlib.PurePath.with_stem"]], "with_suffix() (pathlib.purepath method)": [[311, "pathlib.PurePath.with_suffix"]], "write_bytes() (pathlib.path method)": [[311, "pathlib.Path.write_bytes"]], "write_text() (pathlib.path method)": [[311, "pathlib.Path.write_text"]], "! (pdb command)": [[312, "pdbcommand-0"]], ".pdbrc": [[312, "index-2"]], "pdb (class in pdb)": [[312, "index-1"], [312, "pdb.Pdb"]], "alias (pdb command)": [[312, "pdbcommand-alias"]], "args (pdb command)": [[312, "pdbcommand-args"]], "break (pdb command)": [[312, "pdbcommand-break"]], "clear (pdb command)": [[312, "pdbcommand-clear"]], "commands (pdb command)": [[312, "pdbcommand-commands"]], "condition (pdb command)": [[312, "pdbcommand-condition"]], "continue (pdb command)": [[312, "pdbcommand-continue"]], "debug (pdb command)": [[312, "pdbcommand-debug"]], "disable (pdb command)": [[312, "pdbcommand-disable"]], "display (pdb command)": [[312, "pdbcommand-display"]], "down (pdb command)": [[312, "pdbcommand-down"]], "enable (pdb command)": [[312, "pdbcommand-enable"]], "help (pdb command)": [[312, "pdbcommand-help"]], "ignore (pdb command)": [[312, "pdbcommand-ignore"]], "interact (pdb command)": [[312, "pdbcommand-interact"]], "jump (pdb command)": [[312, "pdbcommand-jump"]], "list (pdb command)": [[312, "pdbcommand-list"]], "ll (pdb command)": [[312, "pdbcommand-ll"]], "next (pdb command)": [[312, "pdbcommand-next"]], "p (pdb command)": [[312, "pdbcommand-p"]], "pdb": [[312, "module-pdb"]], "pm() (in module pdb)": [[312, "pdb.pm"]], "post_mortem() (in module pdb)": [[312, "pdb.post_mortem"]], "pp (pdb command)": [[312, "pdbcommand-pp"]], "quit (pdb command)": [[312, "pdbcommand-quit"]], "restart (pdb command)": [[312, "pdbcommand-restart"]], "return (pdb command)": [[312, "pdbcommand-return"]], "retval (pdb command)": [[312, "pdbcommand-retval"]], "run (pdb command)": [[312, "pdbcommand-run"]], "run() (in module pdb)": [[312, "pdb.run"]], "run() (pdb.pdb method)": [[312, "pdb.Pdb.run"]], "runcall() (in module pdb)": [[312, "pdb.runcall"]], "runcall() (pdb.pdb method)": [[312, "pdb.Pdb.runcall"]], "runeval() (in module pdb)": [[312, "pdb.runeval"]], "runeval() (pdb.pdb method)": [[312, "pdb.Pdb.runeval"]], "set_trace() (in module pdb)": [[312, "pdb.set_trace"]], "set_trace() (pdb.pdb method)": [[312, "pdb.Pdb.set_trace"]], "source (pdb command)": [[312, "pdbcommand-source"]], "step (pdb command)": [[312, "pdbcommand-step"]], "tbreak (pdb command)": [[312, "pdbcommand-tbreak"]], "unalias (pdb command)": [[312, "pdbcommand-unalias"]], "undisplay (pdb command)": [[312, "pdbcommand-undisplay"]], "until (pdb command)": [[312, "pdbcommand-until"]], "up (pdb command)": [[312, "pdbcommand-up"]], "whatis (pdb command)": [[312, "pdbcommand-whatis"]], "where (pdb command)": [[312, "pdbcommand-where"]], "default_protocol (in module pickle)": [[314, "pickle.DEFAULT_PROTOCOL"]], "external data representation": [[314, "index-1"], [423, "index-0"]], "highest_protocol (in module pickle)": [[314, "pickle.HIGHEST_PROTOCOL"]], "pep 307": [[314, "index-2"], [480, "index-21"], [480, "index-22"], [480, "index-23"]], "pep 3154": [[314, "index-3"], [491, "index-12"], [491, "index-39"]], "pep 574": [[314, "index-4"], [314, "index-8"], [495, "index-9"]], "picklebuffer (class in pickle)": [[314, "pickle.PickleBuffer"]], "pickleerror": [[314, "pickle.PickleError"]], "pickler (class in pickle)": [[314, "pickle.Pickler"]], "picklingerror": [[314, "pickle.PicklingError"]], "unpickler (class in pickle)": [[314, "pickle.Unpickler"]], "unpicklingerror": [[314, "pickle.UnpicklingError"]], "__getnewargs__() (object method)": [[314, "object.__getnewargs__"]], "__getnewargs_ex__() (object method)": [[314, "object.__getnewargs_ex__"]], "__getstate__() (copy protocol)": [[314, "index-7"]], "__getstate__() (object method)": [[314, "object.__getstate__"]], "__reduce__() (object method)": [[314, "object.__reduce__"]], "__reduce_ex__() (object method)": [[314, "object.__reduce_ex__"]], "__setstate__() (copy protocol)": [[314, "index-7"]], "__setstate__() (object method)": [[314, "object.__setstate__"]], "dispatch_table (pickle.pickler attribute)": [[314, "pickle.Pickler.dispatch_table"]], "dump() (in module pickle)": [[314, "pickle.dump"]], "dump() (pickle.pickler method)": [[314, "pickle.Pickler.dump"]], "dumps() (in module pickle)": [[314, "pickle.dumps"]], "fast (pickle.pickler attribute)": [[314, "pickle.Pickler.fast"]], "find_class() (pickle protocol)": [[314, "index-9"]], "find_class() (pickle.unpickler method)": [[314, "pickle.Unpickler.find_class"]], "flattening": [[314, "index-0"]], "load() (in module pickle)": [[314, "pickle.load"]], "load() (pickle.unpickler method)": [[314, "pickle.Unpickler.load"]], "loads() (in module pickle)": [[314, "pickle.loads"]], "marshalling": [[314, "index-0"]], "objects": [[314, "index-0"], [360, "index-8"]], "persistence": [[314, "index-0"]], "persistent": [[314, "index-0"]], "persistent_id (pickle protocol)": [[314, "index-6"]], "persistent_id() (pickle.pickler method)": [[314, "pickle.Pickler.persistent_id"]], "persistent_load (pickle protocol)": [[314, "index-6"]], "persistent_load() (pickle.unpickler method)": [[314, "pickle.Unpickler.persistent_load"]], "pickling": [[314, "index-0"]], "raw() (pickle.picklebuffer method)": [[314, "pickle.PickleBuffer.raw"]], "reducer_override() (pickle.pickler method)": [[314, "pickle.Pickler.reducer_override"]], "release() (pickle.picklebuffer method)": [[314, "pickle.PickleBuffer.release"]], "serializing": [[314, "index-0"]], "--annotate": [[315, "cmdoption-pickletools-a"]], "--indentlevel": [[315, "cmdoption-pickletools-l"]], "--memo": [[315, "cmdoption-pickletools-m"]], "--output": [[315, "cmdoption-pickletools-o"], [436, "cmdoption-zipapp-o"]], "--preamble": [[315, "cmdoption-pickletools-p"]], "dis() (in module pickletools)": [[315, "pickletools.dis"]], "genops() (in module pickletools)": [[315, "pickletools.genops"]], "optimize() (in module pickletools)": [[315, "pickletools.optimize"]], "pickletools": [[315, "module-pickletools"]], "pickletools command line option": [[315, "cmdoption-pickletools-a"], [315, "cmdoption-pickletools-l"], [315, "cmdoption-pickletools-m"], [315, "cmdoption-pickletools-o"], [315, "cmdoption-pickletools-p"]], "pep 594#pipes": [[316, "index-0"]], "template (class in pipes)": [[316, "pipes.Template"]], "append() (pipes.template method)": [[316, "pipes.Template.append"]], "clone() (pipes.template method)": [[316, "pipes.Template.clone"]], "copy() (pipes.template method)": [[316, "pipes.Template.copy"]], "debug() (pipes.template method)": [[316, "pipes.Template.debug"]], "open() (pipes.template method)": [[316, "pipes.Template.open"]], "pipes": [[316, "module-pipes"]], "prepend() (pipes.template method)": [[316, "pipes.Template.prepend"]], "reset() (pipes.template method)": [[316, "pipes.Template.reset"]], "impimporter (class in pkgutil)": [[317, "pkgutil.ImpImporter"]], "imploader (class in pkgutil)": [[317, "pkgutil.ImpLoader"]], "moduleinfo (class in pkgutil)": [[317, "pkgutil.ModuleInfo"]], "extend_path() (in module pkgutil)": [[317, "pkgutil.extend_path"]], "find_loader() (in module pkgutil)": [[317, "pkgutil.find_loader"]], "get_data() (in module pkgutil)": [[317, "pkgutil.get_data"]], "get_importer() (in module pkgutil)": [[317, "pkgutil.get_importer"]], "get_loader() (in module pkgutil)": [[317, "pkgutil.get_loader"]], "iter_importers() (in module pkgutil)": [[317, "pkgutil.iter_importers"]], "iter_modules() (in module pkgutil)": [[317, "pkgutil.iter_modules"]], "pkgutil": [[317, "module-pkgutil"]], "resolve_name() (in module pkgutil)": [[317, "pkgutil.resolve_name"]], "walk_packages() (in module pkgutil)": [[317, "pkgutil.walk_packages"]], "architecture() (in module platform)": [[318, "platform.architecture"]], "freedesktop_os_release() (in module platform)": [[318, "platform.freedesktop_os_release"]], "java_ver() (in module platform)": [[318, "platform.java_ver"]], "libc_ver() (in module platform)": [[318, "platform.libc_ver"]], "mac_ver() (in module platform)": [[318, "platform.mac_ver"]], "machine() (in module platform)": [[318, "platform.machine"]], "node() (in module platform)": [[318, "platform.node"]], "platform": [[318, "module-platform"]], "platform() (in module platform)": [[318, "platform.platform"]], "processor() (in module platform)": [[318, "platform.processor"]], "python_branch() (in module platform)": [[318, "platform.python_branch"]], "python_build() (in module platform)": [[318, "platform.python_build"]], "python_compiler() (in module platform)": [[318, "platform.python_compiler"]], "python_implementation() (in module platform)": [[318, "platform.python_implementation"]], "python_revision() (in module platform)": [[318, "platform.python_revision"]], "python_version() (in module platform)": [[318, "platform.python_version"]], "python_version_tuple() (in module platform)": [[318, "platform.python_version_tuple"]], "release() (in module platform)": [[318, "platform.release"]], "system() (in module platform)": [[318, "platform.system"]], "system_alias() (in module platform)": [[318, "platform.system_alias"]], "uname() (in module platform)": [[318, "platform.uname"]], "version() (in module platform)": [[318, "platform.version"]], "win32_edition() (in module platform)": [[318, "platform.win32_edition"]], "win32_is_iot() (in module platform)": [[318, "platform.win32_is_iot"]], "win32_ver() (in module platform)": [[318, "platform.win32_ver"]], "fmt_binary (in module plistlib)": [[319, "plistlib.FMT_BINARY"]], "fmt_xml (in module plistlib)": [[319, "plistlib.FMT_XML"]], "uid (class in plistlib)": [[319, "plistlib.UID"]], "dump() (in module plistlib)": [[319, "plistlib.dump"]], "dumps() (in module plistlib)": [[319, "plistlib.dumps"]], "load() (in module plistlib)": [[319, "plistlib.load"]], "loads() (in module plistlib)": [[319, "plistlib.loads"]], "plist": [[319, "index-0"]], "plistlib": [[319, "module-plistlib"]], "property list": [[319, "index-0"]], "pop3": [[320, "index-0"]], "pop3 (class in poplib)": [[320, "poplib.POP3"]], "pop3_ssl (class in poplib)": [[320, "poplib.POP3_SSL"]], "rfc 1939": [[320, "index-1"], [320, "index-2"]], "rfc 2449": [[320, "index-4"]], "rfc 2595": [[320, "index-3"], [320, "index-6"]], "rfc 6856": [[320, "index-5"], [492, "index-36"]], "apop() (poplib.pop3 method)": [[320, "poplib.POP3.apop"]], "capa() (poplib.pop3 method)": [[320, "poplib.POP3.capa"]], "dele() (poplib.pop3 method)": [[320, "poplib.POP3.dele"]], "getwelcome() (poplib.pop3 method)": [[320, "poplib.POP3.getwelcome"]], "list() (poplib.pop3 method)": [[320, "poplib.POP3.list"]], "noop() (poplib.pop3 method)": [[320, "poplib.POP3.noop"]], "pass_() (poplib.pop3 method)": [[320, "poplib.POP3.pass_"]], "poplib": [[320, "module-poplib"]], "quit() (poplib.pop3 method)": [[320, "poplib.POP3.quit"]], "retr() (poplib.pop3 method)": [[320, "poplib.POP3.retr"]], "rpop() (poplib.pop3 method)": [[320, "poplib.POP3.rpop"]], "rset() (poplib.pop3 method)": [[320, "poplib.POP3.rset"]], "set_debuglevel() (poplib.pop3 method)": [[320, "poplib.POP3.set_debuglevel"]], "stat() (poplib.pop3 method)": [[320, "poplib.POP3.stat"]], "stls() (poplib.pop3 method)": [[320, "poplib.POP3.stls"]], "top() (poplib.pop3 method)": [[320, "poplib.POP3.top"]], "uidl() (poplib.pop3 method)": [[320, "poplib.POP3.uidl"]], "user() (poplib.pop3 method)": [[320, "poplib.POP3.user"]], "utf8() (poplib.pop3 method)": [[320, "poplib.POP3.utf8"]], "environ (in module posix)": [[321, "posix.environ"]], "large files": [[321, "index-1"]], "prettyprinter (class in pprint)": [[322, "pprint.PrettyPrinter"]], "eval": [[322, "index-0"], [322, "index-2"], [360, "index-63"], [451, "index-44"], [452, "index-6"]], "format() (pprint.prettyprinter method)": [[322, "pprint.PrettyPrinter.format"]], "isreadable() (in module pprint)": [[322, "pprint.isreadable"]], "isreadable() (pprint.prettyprinter method)": [[322, "pprint.PrettyPrinter.isreadable"]], "isrecursive() (in module pprint)": [[322, "pprint.isrecursive"]], "isrecursive() (pprint.prettyprinter method)": [[322, "pprint.PrettyPrinter.isrecursive"]], "pformat() (in module pprint)": [[322, "pprint.pformat"]], "pformat() (pprint.prettyprinter method)": [[322, "pprint.PrettyPrinter.pformat"]], "placeholder": [[322, "index-1"], [336, "index-0"], [379, "index-0"]], "pp() (in module pprint)": [[322, "pprint.pp"]], "pprint": [[322, "module-pprint"]], "pprint() (in module pprint)": [[322, "pprint.pprint"]], "pprint() (pprint.prettyprinter method)": [[322, "pprint.PrettyPrinter.pprint"]], "saferepr() (in module pprint)": [[322, "pprint.saferepr"]], "profile (class in profile)": [[323, "profile.Profile"]], "stats (class in pstats)": [[323, "pstats.Stats"]], "add() (pstats.stats method)": [[323, "pstats.Stats.add"]], "cprofile": [[323, "module-cProfile"]], "create_stats() (profile.profile method)": [[323, "profile.Profile.create_stats"]], "deterministic profiling": [[323, "index-0"]], "disable() (profile.profile method)": [[323, "profile.Profile.disable"]], "dump_stats() (profile.profile method)": [[323, "profile.Profile.dump_stats"]], "dump_stats() (pstats.stats method)": [[323, "pstats.Stats.dump_stats"]], "enable() (profile.profile method)": [[323, "profile.Profile.enable"]], "get_stats_profile() (pstats.stats method)": [[323, "pstats.Stats.get_stats_profile"]], "print_callees() (pstats.stats method)": [[323, "pstats.Stats.print_callees"]], "print_callers() (pstats.stats method)": [[323, "pstats.Stats.print_callers"]], "print_stats() (profile.profile method)": [[323, "profile.Profile.print_stats"]], "print_stats() (pstats.stats method)": [[323, "pstats.Stats.print_stats"]], "profile": [[323, "module-profile"]], "profiling, deterministic": [[323, "index-0"]], "pstats": [[323, "module-pstats"]], "reverse_order() (pstats.stats method)": [[323, "pstats.Stats.reverse_order"]], "run() (in module profile)": [[323, "profile.run"]], "run() (profile.profile method)": [[323, "profile.Profile.run"]], "runcall() (profile.profile method)": [[323, "profile.Profile.runcall"]], "runctx() (in module profile)": [[323, "profile.runctx"]], "runctx() (profile.profile method)": [[323, "profile.Profile.runctx"]], "sort_stats() (pstats.stats method)": [[323, "pstats.Stats.sort_stats"]], "strip_dirs() (pstats.stats method)": [[323, "pstats.Stats.strip_dirs"]], "fork() (in module pty)": [[324, "pty.fork"]], "openpty() (in module pty)": [[324, "pty.openpty"]], "spawn() (in module pty)": [[324, "pty.spawn"]], "getpwall() (in module pwd)": [[325, "pwd.getpwall"]], "getpwnam() (in module pwd)": [[325, "pwd.getpwnam"]], "getpwuid() (in module pwd)": [[325, "pwd.getpwuid"]], "-": [[326, "cmdoption-python-m-py_compile"]], "--quiet": [[326, "cmdoption-python-m-py_compile-q"]], "<file>": [[326, "cmdoption-python-m-py_compile-arg-file"]], "checked_hash (py_compile.pycinvalidationmode attribute)": [[326, "py_compile.PycInvalidationMode.CHECKED_HASH"]], "pycompileerror": [[326, "py_compile.PyCompileError"]], "pycinvalidationmode (class in py_compile)": [[326, "py_compile.PycInvalidationMode"]], "timestamp (py_compile.pycinvalidationmode attribute)": [[326, "py_compile.PycInvalidationMode.TIMESTAMP"]], "unchecked_hash (py_compile.pycinvalidationmode attribute)": [[326, "py_compile.PycInvalidationMode.UNCHECKED_HASH"]], "compile() (in module py_compile)": [[326, "py_compile.compile"]], "py_compile": [[326, "module-py_compile"]], "python--m-py_compile command line option": [[326, "cmdoption-python-m-py_compile"], [326, "cmdoption-python-m-py_compile-arg-file"], [326, "cmdoption-python-m-py_compile-q"]], "class (class in pyclbr)": [[327, "pyclbr.Class"]], "function (class in pyclbr)": [[327, "pyclbr.Function"]], "children (pyclbr.class attribute)": [[327, "pyclbr.Class.children"]], "children (pyclbr.function attribute)": [[327, "pyclbr.Function.children"]], "file (pyclbr.class attribute)": [[327, "pyclbr.Class.file"]], "file (pyclbr.function attribute)": [[327, "pyclbr.Function.file"]], "is_async (pyclbr.function attribute)": [[327, "pyclbr.Function.is_async"]], "lineno (pyclbr.class attribute)": [[327, "pyclbr.Class.lineno"]], "lineno (pyclbr.function attribute)": [[327, "pyclbr.Function.lineno"]], "methods (pyclbr.class attribute)": [[327, "pyclbr.Class.methods"]], "module (pyclbr.class attribute)": [[327, "pyclbr.Class.module"]], "module (pyclbr.function attribute)": [[327, "pyclbr.Function.module"]], "name (pyclbr.class attribute)": [[327, "pyclbr.Class.name"]], "name (pyclbr.function attribute)": [[327, "pyclbr.Function.name"]], "parent (pyclbr.class attribute)": [[327, "pyclbr.Class.parent"]], "parent (pyclbr.function attribute)": [[327, "pyclbr.Function.parent"]], "pyclbr": [[327, "module-pyclbr"]], "readmodule() (in module pyclbr)": [[327, "pyclbr.readmodule"]], "readmodule_ex() (in module pyclbr)": [[327, "pyclbr.readmodule_ex"]], "super (pyclbr.class attribute)": [[327, "pyclbr.Class.super"]], "pager": [[328, "index-1"]], "documentation": [[328, "index-0"]], "generation": [[328, "index-0"]], "help": [[328, "index-0"], [466, "index-0"]], "online": [[328, "index-0"]], "pydoc": [[328, "module-pydoc"]], "attlistdeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.AttlistDeclHandler"]], "characterdatahandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.CharacterDataHandler"]], "commenthandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.CommentHandler"]], "currentbyteindex (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.CurrentByteIndex"]], "currentcolumnnumber (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.CurrentColumnNumber"]], "currentlinenumber (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.CurrentLineNumber"]], "defaulthandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.DefaultHandler"]], "defaulthandlerexpand() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.DefaultHandlerExpand"]], "elementdeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.ElementDeclHandler"]], "endcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.EndCdataSectionHandler"]], "enddoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.EndDoctypeDeclHandler"]], "endelementhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.EndElementHandler"]], "endnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.EndNamespaceDeclHandler"]], "entitydeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.EntityDeclHandler"]], "errorbyteindex (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.ErrorByteIndex"]], "errorcode (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.ErrorCode"]], "errorcolumnnumber (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.ErrorColumnNumber"]], "errorlinenumber (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.ErrorLineNumber"]], "errorstring() (in module xml.parsers.expat)": [[329, "xml.parsers.expat.ErrorString"]], "expat": [[329, "index-0"]], "expaterror": [[329, "xml.parsers.expat.ExpatError"]], "externalentityparsercreate() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.ExternalEntityParserCreate"]], "externalentityrefhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.ExternalEntityRefHandler"]], "getbase() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.GetBase"]], "getinputcontext() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.GetInputContext"]], "getreparsedeferralenabled() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.GetReparseDeferralEnabled"]], "notstandalonehandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.NotStandaloneHandler"]], "notationdeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.NotationDeclHandler"]], "parse() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.Parse"]], "parsefile() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.ParseFile"]], "parsercreate() (in module xml.parsers.expat)": [[329, "xml.parsers.expat.ParserCreate"]], "processinginstructionhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.ProcessingInstructionHandler"]], "setbase() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.SetBase"]], "setparamentityparsing() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.SetParamEntityParsing"]], "setreparsedeferralenabled() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.SetReparseDeferralEnabled"]], "startcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.StartCdataSectionHandler"]], "startdoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.StartDoctypeDeclHandler"]], "startelementhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.StartElementHandler"]], "startnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.StartNamespaceDeclHandler"]], "unparsedentitydeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler"]], "useforeigndtd() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.UseForeignDTD"]], "xmlparsertype (in module xml.parsers.expat)": [[329, "xml.parsers.expat.XMLParserType"]], "xml_error_aborted (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_ABORTED"]], "xml_error_amplification_limit_breach (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_AMPLIFICATION_LIMIT_BREACH"]], "xml_error_async_entity (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_ASYNC_ENTITY"]], "xml_error_attribute_external_entity_ref (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF"]], "xml_error_bad_char_ref (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_BAD_CHAR_REF"]], "xml_error_binary_entity_ref (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_BINARY_ENTITY_REF"]], "xml_error_cant_change_feature_once_parsing (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING"]], "xml_error_duplicate_attribute (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_DUPLICATE_ATTRIBUTE"]], "xml_error_entity_declared_in_pe (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_ENTITY_DECLARED_IN_PE"]], "xml_error_external_entity_handling (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_EXTERNAL_ENTITY_HANDLING"]], "xml_error_feature_requires_xml_dtd (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_FEATURE_REQUIRES_XML_DTD"]], "xml_error_finished (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_FINISHED"]], "xml_error_incomplete_pe (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_INCOMPLETE_PE"]], "xml_error_incorrect_encoding (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_INCORRECT_ENCODING"]], "xml_error_invalid_argument (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_INVALID_ARGUMENT"]], "xml_error_invalid_token (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_INVALID_TOKEN"]], "xml_error_junk_after_doc_element (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_JUNK_AFTER_DOC_ELEMENT"]], "xml_error_misplaced_xml_pi (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_MISPLACED_XML_PI"]], "xml_error_not_standalone (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_NOT_STANDALONE"]], "xml_error_not_suspended (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_NOT_SUSPENDED"]], "xml_error_no_buffer (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_NO_BUFFER"]], "xml_error_no_elements (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS"]], "xml_error_no_memory (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_NO_MEMORY"]], "xml_error_param_entity_ref (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_PARAM_ENTITY_REF"]], "xml_error_partial_char (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_PARTIAL_CHAR"]], "xml_error_publicid (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_PUBLICID"]], "xml_error_recursive_entity_ref (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_RECURSIVE_ENTITY_REF"]], "xml_error_reserved_namespace_uri (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_RESERVED_NAMESPACE_URI"]], "xml_error_reserved_prefix_xml (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XML"]], "xml_error_reserved_prefix_xmlns (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XMLNS"]], "xml_error_suspended (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_SUSPENDED"]], "xml_error_suspend_pe (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_SUSPEND_PE"]], "xml_error_syntax (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_SYNTAX"]], "xml_error_tag_mismatch (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_TAG_MISMATCH"]], "xml_error_text_decl (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_TEXT_DECL"]], "xml_error_unbound_prefix (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_UNBOUND_PREFIX"]], "xml_error_unclosed_cdata_section (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_CDATA_SECTION"]], "xml_error_unclosed_token (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_TOKEN"]], "xml_error_undeclaring_prefix (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_UNDECLARING_PREFIX"]], "xml_error_undefined_entity (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_UNDEFINED_ENTITY"]], "xml_error_unexpected_state (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_UNEXPECTED_STATE"]], "xml_error_unknown_encoding (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_UNKNOWN_ENCODING"]], "xml_error_xml_decl (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.XML_ERROR_XML_DECL"]], "xmldeclhandler() (xml.parsers.expat.xmlparser method)": [[329, "xml.parsers.expat.xmlparser.XmlDeclHandler"]], "buffer_size (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.buffer_size"]], "buffer_text (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.buffer_text"]], "buffer_used (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.buffer_used"]], "code (xml.parsers.expat.expaterror attribute)": [[329, "xml.parsers.expat.ExpatError.code"]], "codes (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.codes"]], "lineno (xml.parsers.expat.expaterror attribute)": [[329, "xml.parsers.expat.ExpatError.lineno"]], "messages (in module xml.parsers.expat.errors)": [[329, "xml.parsers.expat.errors.messages"]], "offset (xml.parsers.expat.expaterror attribute)": [[329, "xml.parsers.expat.ExpatError.offset"]], "ordered_attributes (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.ordered_attributes"]], "pyexpat": [[329, "index-1"]], "specified_attributes (xml.parsers.expat.xmlparser attribute)": [[329, "xml.parsers.expat.xmlparser.specified_attributes"]], "xml.parsers.expat": [[329, "module-xml.parsers.expat"]], "xml.parsers.expat.errors": [[329, "module-xml.parsers.expat.errors"]], "xml.parsers.expat.model": [[329, "module-xml.parsers.expat.model"]], "empty": [[331, "queue.Empty"], [443, "index-20"], [445, "index-15"], [445, "index-9"]], "full": [[331, "queue.Full"]], "lifoqueue (class in queue)": [[331, "queue.LifoQueue"]], "priorityqueue (class in queue)": [[331, "queue.PriorityQueue"]], "queue (class in queue)": [[331, "queue.Queue"]], "simplequeue (class in queue)": [[331, "queue.SimpleQueue"]], "empty() (queue.queue method)": [[331, "queue.Queue.empty"]], "empty() (queue.simplequeue method)": [[331, "queue.SimpleQueue.empty"]], "full() (queue.queue method)": [[331, "queue.Queue.full"]], "get() (queue.queue method)": [[331, "queue.Queue.get"]], "get() (queue.simplequeue method)": [[331, "queue.SimpleQueue.get"]], "get_nowait() (queue.queue method)": [[331, "queue.Queue.get_nowait"]], "get_nowait() (queue.simplequeue method)": [[331, "queue.SimpleQueue.get_nowait"]], "join() (queue.queue method)": [[331, "queue.Queue.join"]], "put() (queue.queue method)": [[331, "queue.Queue.put"]], "put() (queue.simplequeue method)": [[331, "queue.SimpleQueue.put"]], "put_nowait() (queue.queue method)": [[331, "queue.Queue.put_nowait"]], "put_nowait() (queue.simplequeue method)": [[331, "queue.SimpleQueue.put_nowait"]], "qsize() (queue.queue method)": [[331, "queue.Queue.qsize"]], "qsize() (queue.simplequeue method)": [[331, "queue.SimpleQueue.qsize"]], "queue": [[331, "module-queue"]], "task_done() (queue.queue method)": [[331, "queue.Queue.task_done"]], "decode() (in module quopri)": [[332, "quopri.decode"]], "decodestring() (in module quopri)": [[332, "quopri.decodestring"]], "encode() (in module quopri)": [[332, "quopri.encode"]], "encodestring() (in module quopri)": [[332, "quopri.encodestring"]], "quopri": [[332, "module-quopri"]], "quoted-printable": [[332, "index-0"]], "quoted-printable encoding": [[332, "index-0"]], "random (class in random)": [[333, "random.Random"]], "systemrandom (class in random)": [[333, "random.SystemRandom"]], "betavariate() (in module random)": [[333, "random.betavariate"]], "choice() (in module random)": [[333, "random.choice"]], "choices() (in module random)": [[333, "random.choices"]], "expovariate() (in module random)": [[333, "random.expovariate"]], "gammavariate() (in module random)": [[333, "random.gammavariate"]], "gauss() (in module random)": [[333, "random.gauss"]], "getrandbits() (in module random)": [[333, "random.getrandbits"]], "getrandbits() (random.random method)": [[333, "random.Random.getrandbits"]], "getstate() (in module random)": [[333, "random.getstate"]], "getstate() (random.random method)": [[333, "random.Random.getstate"]], "lognormvariate() (in module random)": [[333, "random.lognormvariate"]], "normalvariate() (in module random)": [[333, "random.normalvariate"]], "paretovariate() (in module random)": [[333, "random.paretovariate"]], "randbytes() (in module random)": [[333, "random.randbytes"]], "randint() (in module random)": [[333, "random.randint"]], "random": [[333, "module-random"]], "random() (in module random)": [[333, "random.random"]], "random() (random.random method)": [[333, "random.Random.random"]], "randrange() (in module random)": [[333, "random.randrange"]], "sample() (in module random)": [[333, "random.sample"]], "seed() (in module random)": [[333, "random.seed"]], "seed() (random.random method)": [[333, "random.Random.seed"]], "setstate() (in module random)": [[333, "random.setstate"]], "setstate() (random.random method)": [[333, "random.Random.setstate"]], "shuffle() (in module random)": [[333, "random.shuffle"]], "triangular() (in module random)": [[333, "random.triangular"]], "uniform() (in module random)": [[333, "random.uniform"]], "vonmisesvariate() (in module random)": [[333, "random.vonmisesvariate"]], "weibullvariate() (in module random)": [[333, "random.weibullvariate"]], "() (parentheses)": [[334, "index-15"], [360, "index-35"], [360, "index-45"], [442, "index-28"], [442, "index-42"], [445, "index-22"], [445, "index-47"], [445, "index-8"], [451, "index-6"]], "(?": [[334, "index-16"]], "(?!": [[334, "index-22"]], "(?#": [[334, "index-20"]], "(?(": [[334, "index-25"]], "(?:": [[334, "index-17"]], "(?<!": [[334, "index-24"]], "(?<=": [[334, "index-23"]], "(?=": [[334, "index-21"]], "(?p<": [[334, "index-18"]], "(?p=": [[334, "index-19"]], "*+": [[334, "index-7"]], "*?": [[334, "index-6"]], "++": [[334, "index-7"]], "+?": [[334, "index-6"]], "?+": [[334, "index-7"]], "??": [[334, "index-6"]], "a (in module re)": [[334, "re.A"]], "ascii (in module re)": [[334, "re.ASCII"]], "debug (in module re)": [[334, "re.DEBUG"]], "dotall (in module re)": [[334, "re.DOTALL"]], "i (in module re)": [[334, "re.I"]], "ignorecase (in module re)": [[334, "re.IGNORECASE"]], "l (in module re)": [[334, "re.L"]], "locale (in module re)": [[334, "re.LOCALE"]], "m (in module re)": [[334, "re.M"]], "multiline (in module re)": [[334, "re.MULTILINE"]], "match (class in re)": [[334, "re.Match"]], "noflag (in module re)": [[334, "re.NOFLAG"]], "pattern (class in re)": [[334, "re.Pattern"]], "regexflag (class in re)": [[334, "re.RegexFlag"]], "s (in module re)": [[334, "re.S"]], "u (in module re)": [[334, "re.U"]], "unicode (in module re)": [[334, "re.UNICODE"]], "verbose (in module re)": [[334, "re.VERBOSE"]], "x (in module re)": [[334, "re.X"]], "\\a": [[334, "index-27"], [334, "index-37"], [450, "index-23"]], "\\b": [[334, "index-29"], [334, "index-28"], [334, "index-37"], [450, "index-23"]], "\\d": [[334, "index-31"], [334, "index-30"]], "\\s": [[334, "index-33"], [334, "index-32"]], "\\w": [[334, "index-35"], [334, "index-34"]], "\\z": [[334, "index-36"]], "\\\\": [[334, "index-37"], [450, "index-23"]], "\\f": [[334, "index-37"], [450, "index-23"]], "\\g": [[334, "index-39"]], "\\r": [[334, "index-37"], [450, "index-23"]], "\\t": [[334, "index-37"], [450, "index-23"]], "\\v": [[334, "index-37"], [450, "index-23"]], "__getitem__() (re.match method)": [[334, "re.Match.__getitem__"]], "colno (re.error attribute)": [[334, "re.error.colno"]], "compile() (in module re)": [[334, "re.compile"]], "end() (re.match method)": [[334, "re.Match.end"]], "endpos (re.match attribute)": [[334, "re.Match.endpos"]], "escape() (in module re)": [[334, "re.escape"]], "expand() (re.match method)": [[334, "re.Match.expand"]], "findall() (in module re)": [[334, "re.findall"]], "findall() (re.pattern method)": [[334, "re.Pattern.findall"]], "finditer() (in module re)": [[334, "re.finditer"]], "finditer() (re.pattern method)": [[334, "re.Pattern.finditer"]], "flags (re.pattern attribute)": [[334, "re.Pattern.flags"]], "fullmatch() (in module re)": [[334, "re.fullmatch"]], "fullmatch() (re.pattern method)": [[334, "re.Pattern.fullmatch"]], "group() (re.match method)": [[334, "re.Match.group"]], "groupdict() (re.match method)": [[334, "re.Match.groupdict"]], "groupindex (re.pattern attribute)": [[334, "re.Pattern.groupindex"]], "groups (re.pattern attribute)": [[334, "re.Pattern.groups"]], "groups() (re.match method)": [[334, "re.Match.groups"]], "in regular expressions": [[334, "index-0"], [334, "index-1"], [334, "index-10"], [334, "index-11"], [334, "index-12"], [334, "index-13"], [334, "index-14"], [334, "index-15"], [334, "index-16"], [334, "index-17"], [334, "index-18"], [334, "index-19"], [334, "index-2"], [334, "index-20"], [334, "index-21"], [334, "index-22"], [334, "index-23"], [334, "index-24"], [334, "index-25"], [334, "index-26"], [334, "index-27"], [334, "index-28"], [334, "index-29"], [334, "index-3"], [334, "index-30"], [334, "index-31"], [334, "index-32"], [334, "index-33"], [334, "index-34"], [334, "index-35"], [334, "index-36"], [334, "index-37"], [334, "index-38"], [334, "index-39"], [334, "index-4"], [334, "index-5"], [334, "index-6"], [334, "index-7"], [334, "index-8"], [334, "index-9"]], "lastgroup (re.match attribute)": [[334, "re.Match.lastgroup"]], "lastindex (re.match attribute)": [[334, "re.Match.lastindex"]], "lineno (re.error attribute)": [[334, "re.error.lineno"]], "match() (in module re)": [[334, "re.match"]], "match() (re.pattern method)": [[334, "re.Pattern.match"]], "msg (re.error attribute)": [[334, "re.error.msg"]], "pattern (re.pattern attribute)": [[334, "re.Pattern.pattern"]], "pattern (re.error attribute)": [[334, "re.error.pattern"]], "pos (re.match attribute)": [[334, "re.Match.pos"]], "pos (re.error attribute)": [[334, "re.error.pos"]], "purge() (in module re)": [[334, "re.purge"]], "re (re.match attribute)": [[334, "re.Match.re"]], "scanf (c function)": [[334, "index-40"]], "search() (in module re)": [[334, "re.search"]], "search() (re.pattern method)": [[334, "re.Pattern.search"]], "span() (re.match method)": [[334, "re.Match.span"]], "split() (in module re)": [[334, "re.split"]], "split() (re.pattern method)": [[334, "re.Pattern.split"]], "start() (re.match method)": [[334, "re.Match.start"]], "string (re.match attribute)": [[334, "re.Match.string"]], "sub() (in module re)": [[334, "re.sub"]], "sub() (re.pattern method)": [[334, "re.Pattern.sub"]], "subn() (in module re)": [[334, "re.subn"]], "subn() (re.pattern method)": [[334, "re.Pattern.subn"]], "{} (curly brackets)": [[334, "index-8"], [361, "index-2"], [445, "index-16"], [445, "index-17"], [450, "index-25"]], "| (vertical bar)": [[334, "index-14"], [360, "index-16"], [445, "index-76"]], "add_history() (in module readline)": [[335, "readline.add_history"]], "append_history_file() (in module readline)": [[335, "readline.append_history_file"]], "clear_history() (in module readline)": [[335, "readline.clear_history"]], "get_begidx() (in module readline)": [[335, "readline.get_begidx"]], "get_completer() (in module readline)": [[335, "readline.get_completer"]], "get_completer_delims() (in module readline)": [[335, "readline.get_completer_delims"]], "get_completion_type() (in module readline)": [[335, "readline.get_completion_type"]], "get_current_history_length() (in module readline)": [[335, "readline.get_current_history_length"]], "get_endidx() (in module readline)": [[335, "readline.get_endidx"]], "get_history_item() (in module readline)": [[335, "readline.get_history_item"]], "get_history_length() (in module readline)": [[335, "readline.get_history_length"]], "get_line_buffer() (in module readline)": [[335, "readline.get_line_buffer"]], "insert_text() (in module readline)": [[335, "readline.insert_text"]], "parse_and_bind() (in module readline)": [[335, "readline.parse_and_bind"]], "read_history_file() (in module readline)": [[335, "readline.read_history_file"]], "read_init_file() (in module readline)": [[335, "readline.read_init_file"]], "readline": [[335, "module-readline"]], "redisplay() (in module readline)": [[335, "readline.redisplay"]], "remove_history_item() (in module readline)": [[335, "readline.remove_history_item"]], "replace_history_item() (in module readline)": [[335, "readline.replace_history_item"]], "set_auto_history() (in module readline)": [[335, "readline.set_auto_history"]], "set_completer() (in module readline)": [[335, "readline.set_completer"]], "set_completer_delims() (in module readline)": [[335, "readline.set_completer_delims"]], "set_completion_display_matches_hook() (in module readline)": [[335, "readline.set_completion_display_matches_hook"]], "set_history_length() (in module readline)": [[335, "readline.set_history_length"]], "set_pre_input_hook() (in module readline)": [[335, "readline.set_pre_input_hook"]], "set_startup_hook() (in module readline)": [[335, "readline.set_startup_hook"]], "write_history_file() (in module readline)": [[335, "readline.write_history_file"]], "repr (class in reprlib)": [[336, "reprlib.Repr"]], "arepr (in module reprlib)": [[336, "reprlib.aRepr"]], "fillvalue (reprlib.repr attribute)": [[336, "reprlib.Repr.fillvalue"]], "maxarray (reprlib.repr attribute)": [[336, "reprlib.Repr.maxarray"]], "maxdeque (reprlib.repr attribute)": [[336, "reprlib.Repr.maxdeque"]], "maxdict (reprlib.repr attribute)": [[336, "reprlib.Repr.maxdict"]], "maxfrozenset (reprlib.repr attribute)": [[336, "reprlib.Repr.maxfrozenset"]], "maxlevel (reprlib.repr attribute)": [[336, "reprlib.Repr.maxlevel"]], "maxlist (reprlib.repr attribute)": [[336, "reprlib.Repr.maxlist"]], "maxlong (reprlib.repr attribute)": [[336, "reprlib.Repr.maxlong"]], "maxother (reprlib.repr attribute)": [[336, "reprlib.Repr.maxother"]], "maxset (reprlib.repr attribute)": [[336, "reprlib.Repr.maxset"]], "maxstring (reprlib.repr attribute)": [[336, "reprlib.Repr.maxstring"]], "maxtuple (reprlib.repr attribute)": [[336, "reprlib.Repr.maxtuple"]], "recursive_repr() (in module reprlib)": [[336, "reprlib.recursive_repr"]], "repr() (in module reprlib)": [[336, "reprlib.repr"]], "repr() (reprlib.repr method)": [[336, "reprlib.Repr.repr"]], "repr1() (reprlib.repr method)": [[336, "reprlib.Repr.repr1"]], "reprlib": [[336, "module-reprlib"]], "rlimit_as (in module resource)": [[337, "resource.RLIMIT_AS"]], "rlimit_core (in module resource)": [[337, "resource.RLIMIT_CORE"]], "rlimit_cpu (in module resource)": [[337, "resource.RLIMIT_CPU"]], "rlimit_data (in module resource)": [[337, "resource.RLIMIT_DATA"]], "rlimit_fsize (in module resource)": [[337, "resource.RLIMIT_FSIZE"]], "rlimit_kqueues (in module resource)": [[337, "resource.RLIMIT_KQUEUES"]], "rlimit_memlock (in module resource)": [[337, "resource.RLIMIT_MEMLOCK"]], "rlimit_msgqueue (in module resource)": [[337, "resource.RLIMIT_MSGQUEUE"]], "rlimit_nice (in module resource)": [[337, "resource.RLIMIT_NICE"]], "rlimit_nofile (in module resource)": [[337, "resource.RLIMIT_NOFILE"]], "rlimit_nproc (in module resource)": [[337, "resource.RLIMIT_NPROC"]], "rlimit_npts (in module resource)": [[337, "resource.RLIMIT_NPTS"]], "rlimit_ofile (in module resource)": [[337, "resource.RLIMIT_OFILE"]], "rlimit_rss (in module resource)": [[337, "resource.RLIMIT_RSS"]], "rlimit_rtprio (in module resource)": [[337, "resource.RLIMIT_RTPRIO"]], "rlimit_rttime (in module resource)": [[337, "resource.RLIMIT_RTTIME"]], "rlimit_sbsize (in module resource)": [[337, "resource.RLIMIT_SBSIZE"]], "rlimit_sigpending (in module resource)": [[337, "resource.RLIMIT_SIGPENDING"]], "rlimit_stack (in module resource)": [[337, "resource.RLIMIT_STACK"]], "rlimit_swap (in module resource)": [[337, "resource.RLIMIT_SWAP"]], "rlimit_vmem (in module resource)": [[337, "resource.RLIMIT_VMEM"]], "rlim_infinity (in module resource)": [[337, "resource.RLIM_INFINITY"]], "rusage_both (in module resource)": [[337, "resource.RUSAGE_BOTH"]], "rusage_children (in module resource)": [[337, "resource.RUSAGE_CHILDREN"]], "rusage_self (in module resource)": [[337, "resource.RUSAGE_SELF"]], "rusage_thread (in module resource)": [[337, "resource.RUSAGE_THREAD"]], "getpagesize() (in module resource)": [[337, "resource.getpagesize"]], "getrlimit() (in module resource)": [[337, "resource.getrlimit"]], "getrusage() (in module resource)": [[337, "resource.getrusage"]], "prlimit() (in module resource)": [[337, "resource.prlimit"]], "resource": [[337, "module-resource"]], "setrlimit() (in module resource)": [[337, "resource.setrlimit"]], "completer (class in rlcompleter)": [[338, "rlcompleter.Completer"]], "complete() (rlcompleter.completer method)": [[338, "rlcompleter.Completer.complete"]], "rlcompleter": [[338, "module-rlcompleter"]], "pep 338": [[339, "index-6"], [447, "index-26"], [470, "index-0"], [482, "index-7"]], "run_module() (in module runpy)": [[339, "runpy.run_module"]], "run_path() (in module runpy)": [[339, "runpy.run_path"]], "runpy": [[339, "module-runpy"]], "cancel() (sched.scheduler method)": [[340, "sched.scheduler.cancel"]], "empty() (sched.scheduler method)": [[340, "sched.scheduler.empty"]], "enter() (sched.scheduler method)": [[340, "sched.scheduler.enter"]], "enterabs() (sched.scheduler method)": [[340, "sched.scheduler.enterabs"]], "event scheduling": [[340, "index-0"]], "queue (sched.scheduler attribute)": [[340, "sched.scheduler.queue"]], "run() (sched.scheduler method)": [[340, "sched.scheduler.run"]], "sched": [[340, "module-sched"]], "scheduler (class in sched)": [[340, "sched.scheduler"]], "pep 506": [[341, "index-0"], [493, "index-28"]], "systemrandom (class in secrets)": [[341, "secrets.SystemRandom"]], "choice() (in module secrets)": [[341, "secrets.choice"]], "compare_digest() (in module secrets)": [[341, "secrets.compare_digest"]], "randbelow() (in module secrets)": [[341, "secrets.randbelow"]], "randbits() (in module secrets)": [[341, "secrets.randbits"]], "secrets": [[341, "module-secrets"]], "token_bytes() (in module secrets)": [[341, "secrets.token_bytes"]], "token_hex() (in module secrets)": [[341, "secrets.token_hex"]], "token_urlsafe() (in module secrets)": [[341, "secrets.token_urlsafe"]], "security considerations": [[342, "index-0"]], "pipe_buf (in module select)": [[343, "select.PIPE_BUF"]], "winsock": [[343, "index-2"]], "close() (select.devpoll method)": [[343, "select.devpoll.close"]], "close() (select.epoll method)": [[343, "select.epoll.close"]], "close() (select.kqueue method)": [[343, "select.kqueue.close"]], "closed (select.devpoll attribute)": [[343, "select.devpoll.closed"]], "closed (select.epoll attribute)": [[343, "select.epoll.closed"]], "closed (select.kqueue attribute)": [[343, "select.kqueue.closed"]], "control() (select.kqueue method)": [[343, "select.kqueue.control"]], "data (select.kevent attribute)": [[343, "select.kevent.data"]], "devpoll() (in module select)": [[343, "select.devpoll"]], "epoll() (in module select)": [[343, "select.epoll"]], "fflags (select.kevent attribute)": [[343, "select.kevent.fflags"]], "fileno() (select.devpoll method)": [[343, "select.devpoll.fileno"]], "fileno() (select.epoll method)": [[343, "select.epoll.fileno"]], "fileno() (select.kqueue method)": [[343, "select.kqueue.fileno"]], "filter (select.kevent attribute)": [[343, "select.kevent.filter"]], "flags (select.kevent attribute)": [[343, "select.kevent.flags"]], "fromfd() (select.epoll method)": [[343, "select.epoll.fromfd"]], "fromfd() (select.kqueue method)": [[343, "select.kqueue.fromfd"]], "ident (select.kevent attribute)": [[343, "select.kevent.ident"]], "kevent() (in module select)": [[343, "select.kevent"]], "kqueue() (in module select)": [[343, "select.kqueue"]], "modify() (select.devpoll method)": [[343, "select.devpoll.modify"]], "modify() (select.epoll method)": [[343, "select.epoll.modify"]], "modify() (select.poll method)": [[343, "select.poll.modify"]], "poll() (in module select)": [[343, "select.poll"]], "poll() (select.devpoll method)": [[343, "select.devpoll.poll"]], "poll() (select.epoll method)": [[343, "select.epoll.poll"]], "poll() (select.poll method)": [[343, "select.poll.poll"]], "register() (select.devpoll method)": [[343, "select.devpoll.register"]], "register() (select.epoll method)": [[343, "select.epoll.register"]], "register() (select.poll method)": [[343, "select.poll.register"]], "select": [[343, "module-select"]], "select() (in module select)": [[343, "select.select"]], "socket() (in module socket)": [[343, "index-1"]], "udata (select.kevent attribute)": [[343, "select.kevent.udata"]], "unregister() (select.devpoll method)": [[343, "select.devpoll.unregister"]], "unregister() (select.epoll method)": [[343, "select.epoll.unregister"]], "unregister() (select.poll method)": [[343, "select.poll.unregister"]], "baseselector (class in selectors)": [[344, "selectors.BaseSelector"]], "defaultselector (class in selectors)": [[344, "selectors.DefaultSelector"]], "devpollselector (class in selectors)": [[344, "selectors.DevpollSelector"]], "event_read (in module selectors)": [[344, "selectors.EVENT_READ"]], "event_write (in module selectors)": [[344, "selectors.EVENT_WRITE"]], "epollselector (class in selectors)": [[344, "selectors.EpollSelector"]], "kqueueselector (class in selectors)": [[344, "selectors.KqueueSelector"]], "pollselector (class in selectors)": [[344, "selectors.PollSelector"]], "selectselector (class in selectors)": [[344, "selectors.SelectSelector"]], "selectorkey (class in selectors)": [[344, "selectors.SelectorKey"]], "close() (selectors.baseselector method)": [[344, "selectors.BaseSelector.close"]], "data (selectors.selectorkey attribute)": [[344, "selectors.SelectorKey.data"]], "events (selectors.selectorkey attribute)": [[344, "selectors.SelectorKey.events"]], "fd (selectors.selectorkey attribute)": [[344, "selectors.SelectorKey.fd"]], "fileno() (selectors.devpollselector method)": [[344, "selectors.DevpollSelector.fileno"]], "fileno() (selectors.epollselector method)": [[344, "selectors.EpollSelector.fileno"]], "fileno() (selectors.kqueueselector method)": [[344, "selectors.KqueueSelector.fileno"]], "fileobj (selectors.selectorkey attribute)": [[344, "selectors.SelectorKey.fileobj"]], "get_key() (selectors.baseselector method)": [[344, "selectors.BaseSelector.get_key"]], "get_map() (selectors.baseselector method)": [[344, "selectors.BaseSelector.get_map"]], "modify() (selectors.baseselector method)": [[344, "selectors.BaseSelector.modify"]], "register() (selectors.baseselector method)": [[344, "selectors.BaseSelector.register"]], "select() (selectors.baseselector method)": [[344, "selectors.BaseSelector.select"]], "selectors": [[344, "module-selectors"]], "unregister() (selectors.baseselector method)": [[344, "selectors.BaseSelector.unregister"]], "bsddbshelf (class in shelve)": [[345, "shelve.BsdDbShelf"]], "dbfilenameshelf (class in shelve)": [[345, "shelve.DbfilenameShelf"]], "shelf (class in shelve)": [[345, "shelve.Shelf"]], "close() (shelve.shelf method)": [[345, "shelve.Shelf.close"]], "open() (in module shelve)": [[345, "shelve.open"]], "sync() (shelve.shelf method)": [[345, "shelve.Shelf.sync"]], "commenters (shlex.shlex attribute)": [[346, "shlex.shlex.commenters"]], "debug (shlex.shlex attribute)": [[346, "shlex.shlex.debug"]], "eof (shlex.shlex attribute)": [[346, "shlex.shlex.eof"]], "error_leader() (shlex.shlex method)": [[346, "shlex.shlex.error_leader"]], "escape (shlex.shlex attribute)": [[346, "shlex.shlex.escape"]], "escapedquotes (shlex.shlex attribute)": [[346, "shlex.shlex.escapedquotes"]], "get_token() (shlex.shlex method)": [[346, "shlex.shlex.get_token"]], "infile (shlex.shlex attribute)": [[346, "shlex.shlex.infile"]], "instream (shlex.shlex attribute)": [[346, "shlex.shlex.instream"]], "join() (in module shlex)": [[346, "shlex.join"]], "lineno (shlex.shlex attribute)": [[346, "shlex.shlex.lineno"]], "pop_source() (shlex.shlex method)": [[346, "shlex.shlex.pop_source"]], "punctuation_chars (shlex.shlex attribute)": [[346, "shlex.shlex.punctuation_chars"]], "push_source() (shlex.shlex method)": [[346, "shlex.shlex.push_source"]], "push_token() (shlex.shlex method)": [[346, "shlex.shlex.push_token"]], "quote() (in module shlex)": [[346, "shlex.quote"]], "quotes (shlex.shlex attribute)": [[346, "shlex.shlex.quotes"]], "read_token() (shlex.shlex method)": [[346, "shlex.shlex.read_token"]], "shlex": [[346, "module-shlex"]], "shlex (class in shlex)": [[346, "shlex.shlex"]], "source (shlex.shlex attribute)": [[346, "shlex.shlex.source"]], "sourcehook() (shlex.shlex method)": [[346, "shlex.shlex.sourcehook"]], "split() (in module shlex)": [[346, "shlex.split"]], "token (shlex.shlex attribute)": [[346, "shlex.shlex.token"]], "whitespace (shlex.shlex attribute)": [[346, "shlex.shlex.whitespace"]], "whitespace_split (shlex.shlex attribute)": [[346, "shlex.shlex.whitespace_split"]], "wordchars (shlex.shlex attribute)": [[346, "shlex.shlex.wordchars"]], "samefileerror": [[347, "shutil.SameFileError"]], "avoids_symlink_attacks (shutil.rmtree attribute)": [[347, "shutil.rmtree.avoids_symlink_attacks"]], "chown() (in module shutil)": [[347, "shutil.chown"]], "copy() (in module shutil)": [[347, "shutil.copy"]], "copy2() (in module shutil)": [[347, "shutil.copy2"]], "copyfile() (in module shutil)": [[347, "shutil.copyfile"]], "copyfileobj() (in module shutil)": [[347, "shutil.copyfileobj"]], "copying": [[347, "index-0"]], "copying files": [[347, "index-0"]], "copymode() (in module shutil)": [[347, "shutil.copymode"]], "copystat() (in module shutil)": [[347, "shutil.copystat"]], "copytree() (in module shutil)": [[347, "shutil.copytree"]], "disk_usage() (in module shutil)": [[347, "shutil.disk_usage"]], "get_archive_formats() (in module shutil)": [[347, "shutil.get_archive_formats"]], "get_terminal_size() (in module shutil)": [[347, "shutil.get_terminal_size"]], "get_unpack_formats() (in module shutil)": [[347, "shutil.get_unpack_formats"]], "ignore_patterns() (in module shutil)": [[347, "shutil.ignore_patterns"]], "make_archive() (in module shutil)": [[347, "shutil.make_archive"]], "move() (in module shutil)": [[347, "shutil.move"]], "register_archive_format() (in module shutil)": [[347, "shutil.register_archive_format"]], "register_unpack_format() (in module shutil)": [[347, "shutil.register_unpack_format"]], "rmtree() (in module shutil)": [[347, "shutil.rmtree"]], "shutil": [[347, "module-shutil"]], "unpack_archive() (in module shutil)": [[347, "shutil.unpack_archive"]], "unregister_archive_format() (in module shutil)": [[347, "shutil.unregister_archive_format"]], "unregister_unpack_format() (in module shutil)": [[347, "shutil.unregister_unpack_format"]], "which() (in module shutil)": [[347, "shutil.which"]], "ctrl_break_event (in module signal)": [[348, "signal.CTRL_BREAK_EVENT"]], "ctrl_c_event (in module signal)": [[348, "signal.CTRL_C_EVENT"]], "handlers (class in signal)": [[348, "signal.Handlers"]], "itimer_prof (in module signal)": [[348, "signal.ITIMER_PROF"]], "itimer_real (in module signal)": [[348, "signal.ITIMER_REAL"]], "itimer_virtual (in module signal)": [[348, "signal.ITIMER_VIRTUAL"]], "itimererror": [[348, "signal.ItimerError"]], "nsig (in module signal)": [[348, "signal.NSIG"]], "sigabrt (in module signal)": [[348, "signal.SIGABRT"]], "sigalrm (in module signal)": [[348, "signal.SIGALRM"]], "sigbreak (in module signal)": [[348, "signal.SIGBREAK"]], "sigbus (in module signal)": [[348, "signal.SIGBUS"]], "sigchld (in module signal)": [[348, "signal.SIGCHLD"]], "sigcld (in module signal)": [[348, "signal.SIGCLD"]], "sigcont (in module signal)": [[348, "signal.SIGCONT"]], "sigfpe (in module signal)": [[348, "signal.SIGFPE"]], "sighup (in module signal)": [[348, "signal.SIGHUP"]], "sigill (in module signal)": [[348, "signal.SIGILL"]], "sigint (in module signal)": [[348, "signal.SIGINT"]], "sigkill (in module signal)": [[348, "signal.SIGKILL"]], "sigpipe (in module signal)": [[348, "signal.SIGPIPE"]], "sigsegv (in module signal)": [[348, "signal.SIGSEGV"]], "sigstkflt (in module signal)": [[348, "signal.SIGSTKFLT"]], "sigterm (in module signal)": [[348, "signal.SIGTERM"]], "sigusr1 (in module signal)": [[348, "signal.SIGUSR1"]], "sigusr2 (in module signal)": [[348, "signal.SIGUSR2"]], "sigwinch (in module signal)": [[348, "signal.SIGWINCH"]], "sig_block (in module signal)": [[348, "signal.SIG_BLOCK"]], "sig_dfl (in module signal)": [[348, "signal.SIG_DFL"]], "sig_ign (in module signal)": [[348, "signal.SIG_IGN"]], "sig_setmask (in module signal)": [[348, "signal.SIG_SETMASK"]], "sig_unblock (in module signal)": [[348, "signal.SIG_UNBLOCK"]], "sigmasks (class in signal)": [[348, "signal.Sigmasks"]], "signals (class in signal)": [[348, "signal.Signals"]], "alarm() (in module signal)": [[348, "signal.alarm"]], "getitimer() (in module signal)": [[348, "signal.getitimer"]], "getsignal() (in module signal)": [[348, "signal.getsignal"]], "pause() (in module signal)": [[348, "signal.pause"]], "pidfd_send_signal() (in module signal)": [[348, "signal.pidfd_send_signal"]], "pthread_kill() (in module signal)": [[348, "signal.pthread_kill"]], "pthread_sigmask() (in module signal)": [[348, "signal.pthread_sigmask"]], "raise_signal() (in module signal)": [[348, "signal.raise_signal"]], "set_wakeup_fd() (in module signal)": [[348, "signal.set_wakeup_fd"]], "setitimer() (in module signal)": [[348, "signal.setitimer"]], "siginterrupt() (in module signal)": [[348, "signal.siginterrupt"]], "signal() (in module signal)": [[348, "signal.signal"]], "sigpending() (in module signal)": [[348, "signal.sigpending"]], "sigtimedwait() (in module signal)": [[348, "signal.sigtimedwait"]], "sigwait() (in module signal)": [[348, "signal.sigwait"]], "sigwaitinfo() (in module signal)": [[348, "signal.sigwaitinfo"]], "strsignal() (in module signal)": [[348, "signal.strsignal"]], "valid_signals() (in module signal)": [[348, "signal.valid_signals"]], "--user-base": [[349, "cmdoption-site-user-base"]], "--user-site": [[349, "cmdoption-site-user-site"]], "enable_user_site (in module site)": [[349, "site.ENABLE_USER_SITE"]], "pep 370": [[349, "index-9"], [470, "index-16"], [470, "index-38"], [470, "index-39"], [483, "index-7"]], "prefixes (in module site)": [[349, "site.PREFIXES"]], "pythonuserbase": [[349, "index-7"], [349, "index-8"], [470, "envvar-PYTHONUSERBASE"], [483, "index-4"]], "user_base (in module site)": [[349, "site.USER_BASE"]], "user_site (in module site)": [[349, "site.USER_SITE"]], "addsitedir() (in module site)": [[349, "site.addsitedir"]], "comment": [[349, "index-2"], [450, "index-4"], [464, "index-0"]], "getsitepackages() (in module site)": [[349, "site.getsitepackages"]], "getuserbase() (in module site)": [[349, "site.getuserbase"]], "getusersitepackages() (in module site)": [[349, "site.getusersitepackages"]], "main() (in module site)": [[349, "site.main"]], "site": [[349, "module-site"]], "site command line option": [[349, "cmdoption-site-user-base"], [349, "cmdoption-site-user-site"]], "site-packages": [[349, "index-1"]], "sitecustomize": [[349, "module-sitecustomize"], [453, "index-2"], [453, "index-4"]], "usercustomize": [[349, "module-usercustomize"], [453, "index-3"], [453, "index-5"]], "debuggingserver (class in smtpd)": [[350, "smtpd.DebuggingServer"]], "pep 594#smtpd": [[350, "index-0"]], "pureproxy (class in smtpd)": [[350, "smtpd.PureProxy"]], "rfc 1870": [[350, "index-2"], [350, "index-9"], [490, "index-27"]], "rfc 6152": [[350, "index-5"], [492, "index-37"]], "smtpchannel (class in smtpd)": [[350, "smtpd.SMTPChannel"]], "smtpserver (class in smtpd)": [[350, "smtpd.SMTPServer"]], "addr (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.addr"]], "channel_class (smtpd.smtpserver attribute)": [[350, "smtpd.SMTPServer.channel_class"]], "conn (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.conn"]], "fqdn (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.fqdn"]], "mailfrom (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.mailfrom"]], "peer (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.peer"]], "process_message() (smtpd.smtpserver method)": [[350, "smtpd.SMTPServer.process_message"]], "rcpttos (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.rcpttos"]], "received_data (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.received_data"]], "received_lines (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.received_lines"]], "seen_greeting (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.seen_greeting"]], "smtp_server (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.smtp_server"]], "smtp_state (smtpd.smtpchannel attribute)": [[350, "smtpd.SMTPChannel.smtp_state"]], "smtpd": [[350, "module-smtpd"]], "lmtp (class in smtplib)": [[351, "smtplib.LMTP"]], "rfc 1869": [[351, "index-2"], [351, "index-5"]], "rfc 4954": [[351, "index-7"], [351, "index-8"]], "rfc 821": [[351, "index-1"], [351, "index-4"]], "smtp": [[351, "index-0"]], "smtp (class in smtplib)": [[351, "smtplib.SMTP"]], "smtpauthenticationerror": [[351, "smtplib.SMTPAuthenticationError"]], "smtpconnecterror": [[351, "smtplib.SMTPConnectError"]], "smtpdataerror": [[351, "smtplib.SMTPDataError"]], "smtpexception": [[351, "smtplib.SMTPException"]], "smtpheloerror": [[351, "smtplib.SMTPHeloError"]], "smtpnotsupportederror": [[351, "smtplib.SMTPNotSupportedError"]], "smtprecipientsrefused": [[351, "smtplib.SMTPRecipientsRefused"]], "smtpresponseexception": [[351, "smtplib.SMTPResponseException"]], "smtpsenderrefused": [[351, "smtplib.SMTPSenderRefused"]], "smtpserverdisconnected": [[351, "smtplib.SMTPServerDisconnected"]], "smtp_ssl (class in smtplib)": [[351, "smtplib.SMTP_SSL"]], "simple mail transfer protocol": [[351, "index-0"]], "auth() (smtplib.smtp method)": [[351, "smtplib.SMTP.auth"]], "connect() (smtplib.smtp method)": [[351, "smtplib.SMTP.connect"]], "docmd() (smtplib.smtp method)": [[351, "smtplib.SMTP.docmd"]], "ehlo() (smtplib.smtp method)": [[351, "smtplib.SMTP.ehlo"]], "ehlo_or_helo_if_needed() (smtplib.smtp method)": [[351, "smtplib.SMTP.ehlo_or_helo_if_needed"]], "has_extn() (smtplib.smtp method)": [[351, "smtplib.SMTP.has_extn"]], "helo() (smtplib.smtp method)": [[351, "smtplib.SMTP.helo"]], "login() (smtplib.smtp method)": [[351, "smtplib.SMTP.login"]], "quit() (smtplib.smtp method)": [[351, "smtplib.SMTP.quit"]], "send_message() (smtplib.smtp method)": [[351, "smtplib.SMTP.send_message"]], "sendmail() (smtplib.smtp method)": [[351, "smtplib.SMTP.sendmail"]], "set_debuglevel() (smtplib.smtp method)": [[351, "smtplib.SMTP.set_debuglevel"]], "smtplib": [[351, "module-smtplib"]], "starttls() (smtplib.smtp method)": [[351, "smtplib.SMTP.starttls"]], "verify() (smtplib.smtp method)": [[351, "smtplib.SMTP.verify"]], "pep 594#sndhdr": [[352, "index-1"]], "sndhdr": [[352, "module-sndhdr"]], "tests (in module sndhdr)": [[352, "sndhdr.tests"]], "what() (in module sndhdr)": [[352, "sndhdr.what"]], "whathdr() (in module sndhdr)": [[352, "sndhdr.whathdr"]], "af_alg (in module socket)": [[353, "socket.AF_ALG"]], "af_can (in module socket)": [[353, "socket.AF_CAN"]], "af_inet (in module socket)": [[353, "socket.AF_INET"]], "af_inet6 (in module socket)": [[353, "socket.AF_INET6"]], "af_link (in module socket)": [[353, "socket.AF_LINK"]], "af_packet (in module socket)": [[353, "socket.AF_PACKET"]], "af_qipcrtr (in module socket)": [[353, "socket.AF_QIPCRTR"]], "af_rds (in module socket)": [[353, "socket.AF_RDS"]], "af_unix (in module socket)": [[353, "socket.AF_UNIX"]], "af_unspec (in module socket)": [[353, "socket.AF_UNSPEC"]], "af_vsock (in module socket)": [[353, "socket.AF_VSOCK"]], "bdaddr_any (in module socket)": [[353, "socket.BDADDR_ANY"]], "bdaddr_local (in module socket)": [[353, "socket.BDADDR_LOCAL"]], "can_bcm (in module socket)": [[353, "socket.CAN_BCM"]], "can_isotp (in module socket)": [[353, "socket.CAN_ISOTP"]], "can_j1939 (in module socket)": [[353, "socket.CAN_J1939"]], "can_raw_fd_frames (in module socket)": [[353, "socket.CAN_RAW_FD_FRAMES"]], "can_raw_join_filters (in module socket)": [[353, "socket.CAN_RAW_JOIN_FILTERS"]], "cmsg_len() (in module socket)": [[353, "socket.CMSG_LEN"]], "cmsg_space() (in module socket)": [[353, "socket.CMSG_SPACE"]], "hci_data_dir (in module socket)": [[353, "socket.HCI_DATA_DIR"]], "hci_filter (in module socket)": [[353, "socket.HCI_FILTER"]], "hci_time_stamp (in module socket)": [[353, "socket.HCI_TIME_STAMP"]], "ioctl_vm_sockets_get_local_cid (in module socket)": [[353, "socket.IOCTL_VM_SOCKETS_GET_LOCAL_CID"]], "local_creds (in module socket)": [[353, "socket.LOCAL_CREDS"]], "local_creds_persistent (in module socket)": [[353, "socket.LOCAL_CREDS_PERSISTENT"]], "pf_can (in module socket)": [[353, "socket.PF_CAN"]], "pf_packet (in module socket)": [[353, "socket.PF_PACKET"]], "pf_rds (in module socket)": [[353, "socket.PF_RDS"]], "rfc 3493": [[353, "index-15"]], "rfc 3542": [[353, "index-3"]], "scm_creds2 (in module socket)": [[353, "socket.SCM_CREDS2"]], "sio_keepalive_vals (in module socket)": [[353, "socket.SIO_KEEPALIVE_VALS"]], "sio_loopback_fast_path (in module socket)": [[353, "socket.SIO_LOOPBACK_FAST_PATH"]], "sio_rcvall (in module socket)": [[353, "socket.SIO_RCVALL"]], "sock_cloexec (in module socket)": [[353, "socket.SOCK_CLOEXEC"]], "sock_dgram (in module socket)": [[353, "socket.SOCK_DGRAM"]], "sock_nonblock (in module socket)": [[353, "socket.SOCK_NONBLOCK"]], "sock_raw (in module socket)": [[353, "socket.SOCK_RAW"]], "sock_rdm (in module socket)": [[353, "socket.SOCK_RDM"]], "sock_seqpacket (in module socket)": [[353, "socket.SOCK_SEQPACKET"]], "sock_stream (in module socket)": [[353, "socket.SOCK_STREAM"]], "sol_alg (in module socket)": [[353, "socket.SOL_ALG"]], "sol_rds (in module socket)": [[353, "socket.SOL_RDS"]], "somaxconn (in module socket)": [[353, "socket.SOMAXCONN"]], "so_incoming_cpu (in module socket)": [[353, "socket.SO_INCOMING_CPU"]], "sockettype (in module socket)": [[353, "socket.SocketType"]], "accept() (socket.socket method)": [[353, "socket.socket.accept"]], "bind() (socket.socket method)": [[353, "socket.socket.bind"]], "close() (in module socket)": [[353, "socket.close"]], "close() (socket.socket method)": [[353, "socket.socket.close"]], "connect() (socket.socket method)": [[353, "socket.socket.connect"]], "connect_ex() (socket.socket method)": [[353, "socket.socket.connect_ex"]], "create_connection() (in module socket)": [[353, "socket.create_connection"]], "create_server() (in module socket)": [[353, "socket.create_server"]], "detach() (socket.socket method)": [[353, "socket.socket.detach"]], "dup() (socket.socket method)": [[353, "socket.socket.dup"]], "family (socket.socket attribute)": [[353, "socket.socket.family"]], "fileno() (socket.socket method)": [[353, "socket.socket.fileno"]], "fromfd() (in module socket)": [[353, "socket.fromfd"]], "fromshare() (in module socket)": [[353, "socket.fromshare"]], "gaierror": [[353, "socket.gaierror"]], "get_inheritable() (socket.socket method)": [[353, "socket.socket.get_inheritable"]], "getaddrinfo() (in module socket)": [[353, "socket.getaddrinfo"]], "getblocking() (socket.socket method)": [[353, "socket.socket.getblocking"]], "getdefaulttimeout() (in module socket)": [[353, "socket.getdefaulttimeout"]], "getfqdn() (in module socket)": [[353, "socket.getfqdn"]], "gethostbyname() (in module socket)": [[353, "socket.gethostbyname"]], "gethostbyname_ex() (in module socket)": [[353, "socket.gethostbyname_ex"]], "getnameinfo() (in module socket)": [[353, "socket.getnameinfo"]], "getpeername() (socket.socket method)": [[353, "socket.socket.getpeername"]], "getprotobyname() (in module socket)": [[353, "socket.getprotobyname"]], "getservbyname() (in module socket)": [[353, "socket.getservbyname"]], "getservbyport() (in module socket)": [[353, "socket.getservbyport"]], "getsockname() (socket.socket method)": [[353, "socket.socket.getsockname"]], "getsockopt() (socket.socket method)": [[353, "socket.socket.getsockopt"]], "gettimeout() (socket.socket method)": [[353, "socket.socket.gettimeout"]], "has_dualstack_ipv6() (in module socket)": [[353, "socket.has_dualstack_ipv6"]], "has_ipv6 (in module socket)": [[353, "socket.has_ipv6"]], "herror": [[353, "socket.herror"]], "htonl() (in module socket)": [[353, "socket.htonl"]], "htons() (in module socket)": [[353, "socket.htons"]], "if_indextoname() (in module socket)": [[353, "socket.if_indextoname"]], "if_nameindex() (in module socket)": [[353, "socket.if_nameindex"]], "if_nametoindex() (in module socket)": [[353, "socket.if_nametoindex"]], "inet_aton() (in module socket)": [[353, "socket.inet_aton"]], "inet_ntoa() (in module socket)": [[353, "socket.inet_ntoa"]], "inet_ntop() (in module socket)": [[353, "socket.inet_ntop"]], "inet_pton() (in module socket)": [[353, "socket.inet_pton"]], "ioctl() (socket.socket method)": [[353, "socket.socket.ioctl"]], "listen() (socket.socket method)": [[353, "socket.socket.listen"]], "makefile() (socket.socket method)": [[353, "socket.socket.makefile"]], "ntohl() (in module socket)": [[353, "socket.ntohl"]], "ntohs() (in module socket)": [[353, "socket.ntohs"]], "proto (socket.socket attribute)": [[353, "socket.socket.proto"]], "recv() (socket.socket method)": [[353, "socket.socket.recv"]], "recv_fds() (in module socket)": [[353, "socket.recv_fds"]], "recv_into() (socket.socket method)": [[353, "socket.socket.recv_into"]], "recvfrom() (socket.socket method)": [[353, "socket.socket.recvfrom"]], "recvfrom_into() (socket.socket method)": [[353, "socket.socket.recvfrom_into"]], "recvmsg() (socket.socket method)": [[353, "socket.socket.recvmsg"]], "recvmsg_into() (socket.socket method)": [[353, "socket.socket.recvmsg_into"]], "send() (socket.socket method)": [[353, "socket.socket.send"]], "send_fds() (in module socket)": [[353, "socket.send_fds"]], "sendall() (socket.socket method)": [[353, "socket.socket.sendall"]], "sendfile() (socket.socket method)": [[353, "socket.socket.sendfile"]], "sendmsg() (socket.socket method)": [[353, "socket.socket.sendmsg"]], "sendmsg_afalg() (socket.socket method)": [[353, "socket.socket.sendmsg_afalg"]], "sendto() (socket.socket method)": [[353, "socket.socket.sendto"]], "set_inheritable() (socket.socket method)": [[353, "socket.socket.set_inheritable"]], "setblocking() (socket.socket method)": [[353, "socket.socket.setblocking"]], "setdefaulttimeout() (in module socket)": [[353, "socket.setdefaulttimeout"]], "sethostname() (in module socket)": [[353, "socket.sethostname"]], "setsockopt() (socket.socket method)": [[353, "socket.socket.setsockopt"]], "settimeout() (socket.socket method)": [[353, "socket.socket.settimeout"]], "share() (socket.socket method)": [[353, "socket.socket.share"]], "shutdown() (socket.socket method)": [[353, "socket.socket.shutdown"]], "socket (class in socket)": [[353, "socket.socket"]], "socketpair() (in module socket)": [[353, "socket.socketpair"]], "struct": [[353, "index-14"], [363, "module-struct"]], "timeout": [[353, "socket.timeout"]], "type (socket.socket attribute)": [[353, "socket.socket.type"]], "baserequesthandler (class in socketserver)": [[354, "socketserver.BaseRequestHandler"]], "baseserver (class in socketserver)": [[354, "socketserver.BaseServer"]], "datagramrequesthandler (class in socketserver)": [[354, "socketserver.DatagramRequestHandler"]], "forkingmixin (class in socketserver)": [[354, "socketserver.ForkingMixIn"]], "forkingtcpserver (class in socketserver)": [[354, "socketserver.ForkingTCPServer"]], "forkingudpserver (class in socketserver)": [[354, "socketserver.ForkingUDPServer"]], "requesthandlerclass (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.RequestHandlerClass"]], "streamrequesthandler (class in socketserver)": [[354, "socketserver.StreamRequestHandler"]], "tcpserver (class in socketserver)": [[354, "socketserver.TCPServer"]], "threadingmixin (class in socketserver)": [[354, "socketserver.ThreadingMixIn"]], "threadingtcpserver (class in socketserver)": [[354, "socketserver.ThreadingTCPServer"]], "threadingudpserver (class in socketserver)": [[354, "socketserver.ThreadingUDPServer"]], "udpserver (class in socketserver)": [[354, "socketserver.UDPServer"]], "unixdatagramserver (class in socketserver)": [[354, "socketserver.UnixDatagramServer"]], "unixstreamserver (class in socketserver)": [[354, "socketserver.UnixStreamServer"]], "address_family (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.address_family"]], "allow_reuse_address (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.allow_reuse_address"]], "block_on_close (socketserver.threadingmixin attribute)": [[354, "socketserver.ThreadingMixIn.block_on_close"]], "client_address (socketserver.baserequesthandler attribute)": [[354, "socketserver.BaseRequestHandler.client_address"]], "daemon_threads (socketserver.threadingmixin attribute)": [[354, "socketserver.ThreadingMixIn.daemon_threads"]], "fileno() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.fileno"]], "finish() (socketserver.baserequesthandler method)": [[354, "socketserver.BaseRequestHandler.finish"]], "finish_request() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.finish_request"]], "get_request() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.get_request"]], "handle() (socketserver.baserequesthandler method)": [[354, "socketserver.BaseRequestHandler.handle"]], "handle_error() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.handle_error"]], "handle_request() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.handle_request"]], "handle_timeout() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.handle_timeout"]], "process_request() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.process_request"]], "request (socketserver.baserequesthandler attribute)": [[354, "socketserver.BaseRequestHandler.request"]], "request_queue_size (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.request_queue_size"]], "rfile (socketserver.datagramrequesthandler attribute)": [[354, "socketserver.DatagramRequestHandler.rfile"]], "serve_forever() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.serve_forever"]], "server (socketserver.baserequesthandler attribute)": [[354, "socketserver.BaseRequestHandler.server"]], "server_activate() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.server_activate"]], "server_address (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.server_address"]], "server_bind() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.server_bind"]], "server_close() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.server_close"]], "service_actions() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.service_actions"]], "setup() (socketserver.baserequesthandler method)": [[354, "socketserver.BaseRequestHandler.setup"]], "shutdown() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.shutdown"]], "socket (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.socket"]], "socket_type (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.socket_type"]], "socketserver": [[354, "module-socketserver"]], "timeout (socketserver.baseserver attribute)": [[354, "socketserver.BaseServer.timeout"]], "verify_request() (socketserver.baseserver method)": [[354, "socketserver.BaseServer.verify_request"]], "wfile (socketserver.datagramrequesthandler attribute)": [[354, "socketserver.DatagramRequestHandler.wfile"]], "pep 594#spwd": [[355, "index-0"]], "getspall() (in module spwd)": [[355, "spwd.getspall"]], "getspnam() (in module spwd)": [[355, "spwd.getspnam"]], "spwd": [[355, "module-spwd"]], "blob (class in sqlite3)": [[356, "sqlite3.Blob"]], "connection (class in sqlite3)": [[356, "sqlite3.Connection"]], "cursor (class in sqlite3)": [[356, "sqlite3.Cursor"]], "dataerror": [[356, "sqlite3.DataError"]], "databaseerror": [[356, "sqlite3.DatabaseError"]], "integrityerror": [[356, "sqlite3.IntegrityError"]], "interfaceerror": [[356, "sqlite3.InterfaceError"]], "internalerror": [[356, "sqlite3.InternalError"]], "notsupportederror": [[356, "sqlite3.NotSupportedError"]], "operationalerror": [[356, "sqlite3.OperationalError"]], "parse_colnames (in module sqlite3)": [[356, "sqlite3.PARSE_COLNAMES"]], "parse_decltypes (in module sqlite3)": [[356, "sqlite3.PARSE_DECLTYPES"]], "pep 246": [[356, "index-4"]], "pep 249": [[356, "index-0"], [356, "index-1"], [356, "index-5"], [356, "index-6"], [356, "index-7"], [482, "index-24"], [482, "index-25"]], "prepareprotocol (class in sqlite3)": [[356, "sqlite3.PrepareProtocol"]], "programmingerror": [[356, "sqlite3.ProgrammingError"]], "row (class in sqlite3)": [[356, "sqlite3.Row"]], "sqlite_deny (in module sqlite3)": [[356, "sqlite3.SQLITE_DENY"]], "sqlite_ignore (in module sqlite3)": [[356, "sqlite3.SQLITE_IGNORE"]], "sqlite_ok (in module sqlite3)": [[356, "sqlite3.SQLITE_OK"]], "apilevel (in module sqlite3)": [[356, "sqlite3.apilevel"]], "arraysize (sqlite3.cursor attribute)": [[356, "sqlite3.Cursor.arraysize"]], "backup() (sqlite3.connection method)": [[356, "sqlite3.Connection.backup"]], "blobopen() (sqlite3.connection method)": [[356, "sqlite3.Connection.blobopen"]], "close() (sqlite3.blob method)": [[356, "sqlite3.Blob.close"]], "close() (sqlite3.connection method)": [[356, "sqlite3.Connection.close"]], "close() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.close"]], "commit() (sqlite3.connection method)": [[356, "sqlite3.Connection.commit"]], "complete_statement() (in module sqlite3)": [[356, "sqlite3.complete_statement"]], "connect() (in module sqlite3)": [[356, "sqlite3.connect"]], "connection (sqlite3.cursor attribute)": [[356, "sqlite3.Cursor.connection"]], "create_aggregate() (sqlite3.connection method)": [[356, "sqlite3.Connection.create_aggregate"]], "create_collation() (sqlite3.connection method)": [[356, "sqlite3.Connection.create_collation"]], "create_function() (sqlite3.connection method)": [[356, "sqlite3.Connection.create_function"]], "create_window_function() (sqlite3.connection method)": [[356, "sqlite3.Connection.create_window_function"]], "cursor() (sqlite3.connection method)": [[356, "sqlite3.Connection.cursor"]], "description (sqlite3.cursor attribute)": [[356, "sqlite3.Cursor.description"]], "deserialize() (sqlite3.connection method)": [[356, "sqlite3.Connection.deserialize"]], "enable_callback_tracebacks() (in module sqlite3)": [[356, "sqlite3.enable_callback_tracebacks"]], "enable_load_extension() (sqlite3.connection method)": [[356, "sqlite3.Connection.enable_load_extension"]], "execute() (sqlite3.connection method)": [[356, "sqlite3.Connection.execute"]], "execute() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.execute"]], "executemany() (sqlite3.connection method)": [[356, "sqlite3.Connection.executemany"]], "executemany() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.executemany"]], "executescript() (sqlite3.connection method)": [[356, "sqlite3.Connection.executescript"]], "executescript() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.executescript"]], "fetchall() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.fetchall"]], "fetchmany() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.fetchmany"]], "fetchone() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.fetchone"]], "getlimit() (sqlite3.connection method)": [[356, "sqlite3.Connection.getlimit"]], "in sql statements": [[356, "index-2"], [356, "index-3"]], "in_transaction (sqlite3.connection attribute)": [[356, "sqlite3.Connection.in_transaction"]], "interrupt() (sqlite3.connection method)": [[356, "sqlite3.Connection.interrupt"]], "isolation_level (sqlite3.connection attribute)": [[356, "sqlite3.Connection.isolation_level"]], "iterdump() (sqlite3.connection method)": [[356, "sqlite3.Connection.iterdump"]], "keys() (sqlite3.row method)": [[356, "sqlite3.Row.keys"]], "lastrowid (sqlite3.cursor attribute)": [[356, "sqlite3.Cursor.lastrowid"]], "load_extension() (sqlite3.connection method)": [[356, "sqlite3.Connection.load_extension"]], "paramstyle (in module sqlite3)": [[356, "sqlite3.paramstyle"]], "read() (sqlite3.blob method)": [[356, "sqlite3.Blob.read"]], "register_adapter() (in module sqlite3)": [[356, "sqlite3.register_adapter"]], "register_converter() (in module sqlite3)": [[356, "sqlite3.register_converter"]], "rollback() (sqlite3.connection method)": [[356, "sqlite3.Connection.rollback"]], "row_factory (sqlite3.connection attribute)": [[356, "sqlite3.Connection.row_factory"]], "row_factory (sqlite3.cursor attribute)": [[356, "sqlite3.Cursor.row_factory"]], "rowcount (sqlite3.cursor attribute)": [[356, "sqlite3.Cursor.rowcount"]], "seek() (sqlite3.blob method)": [[356, "sqlite3.Blob.seek"]], "serialize() (sqlite3.connection method)": [[356, "sqlite3.Connection.serialize"]], "set_authorizer() (sqlite3.connection method)": [[356, "sqlite3.Connection.set_authorizer"]], "set_progress_handler() (sqlite3.connection method)": [[356, "sqlite3.Connection.set_progress_handler"]], "set_trace_callback() (sqlite3.connection method)": [[356, "sqlite3.Connection.set_trace_callback"]], "setinputsizes() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.setinputsizes"]], "setlimit() (sqlite3.connection method)": [[356, "sqlite3.Connection.setlimit"]], "setoutputsize() (sqlite3.cursor method)": [[356, "sqlite3.Cursor.setoutputsize"]], "sqlite3": [[356, "module-sqlite3"]], "sqlite_errorcode (sqlite3.error attribute)": [[356, "sqlite3.Error.sqlite_errorcode"]], "sqlite_errorname (sqlite3.error attribute)": [[356, "sqlite3.Error.sqlite_errorname"]], "sqlite_version (in module sqlite3)": [[356, "sqlite3.sqlite_version"]], "sqlite_version_info (in module sqlite3)": [[356, "sqlite3.sqlite_version_info"]], "tell() (sqlite3.blob method)": [[356, "sqlite3.Blob.tell"]], "text_factory (sqlite3.connection attribute)": [[356, "sqlite3.Connection.text_factory"]], "threadsafety (in module sqlite3)": [[356, "sqlite3.threadsafety"]], "total_changes (sqlite3.connection attribute)": [[356, "sqlite3.Connection.total_changes"]], "version (in module sqlite3)": [[356, "sqlite3.version"]], "version_info (in module sqlite3)": [[356, "sqlite3.version_info"]], "write() (sqlite3.blob method)": [[356, "sqlite3.Blob.write"]], "(use in module ssl)": [[357, "index-0"]], "alert_description_handshake_failure (in module ssl)": [[357, "ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE"]], "alert_description_internal_error (in module ssl)": [[357, "ssl.ALERT_DESCRIPTION_INTERNAL_ERROR"]], "alertdescription (class in ssl)": [[357, "ssl.AlertDescription"]], "cert_none (in module ssl)": [[357, "ssl.CERT_NONE"]], "cert_optional (in module ssl)": [[357, "ssl.CERT_OPTIONAL"]], "cert_required (in module ssl)": [[357, "ssl.CERT_REQUIRED"]], "channel_binding_types (in module ssl)": [[357, "ssl.CHANNEL_BINDING_TYPES"]], "certificateerror": [[357, "ssl.CertificateError"]], "der_cert_to_pem_cert() (in module ssl)": [[357, "ssl.DER_cert_to_PEM_cert"]], "has_alpn (in module ssl)": [[357, "ssl.HAS_ALPN"]], "has_ecdh (in module ssl)": [[357, "ssl.HAS_ECDH"]], "has_never_check_common_name (in module ssl)": [[357, "ssl.HAS_NEVER_CHECK_COMMON_NAME"]], "has_npn (in module ssl)": [[357, "ssl.HAS_NPN"]], "has_sni (in module ssl)": [[357, "ssl.HAS_SNI"]], "has_sslv2 (in module ssl)": [[357, "ssl.HAS_SSLv2"]], "has_sslv3 (in module ssl)": [[357, "ssl.HAS_SSLv3"]], "has_tlsv1 (in module ssl)": [[357, "ssl.HAS_TLSv1"]], "has_tlsv1_1 (in module ssl)": [[357, "ssl.HAS_TLSv1_1"]], "has_tlsv1_2 (in module ssl)": [[357, "ssl.HAS_TLSv1_2"]], "has_tlsv1_3 (in module ssl)": [[357, "ssl.HAS_TLSv1_3"]], "maximum_supported (ssl.tlsversion attribute)": [[357, "ssl.TLSVersion.MAXIMUM_SUPPORTED"]], "minimum_supported (ssl.tlsversion attribute)": [[357, "ssl.TLSVersion.MINIMUM_SUPPORTED"]], "memorybio (class in ssl)": [[357, "ssl.MemoryBIO"]], "openssl_version (in module ssl)": [[357, "ssl.OPENSSL_VERSION"]], "openssl_version_info (in module ssl)": [[357, "ssl.OPENSSL_VERSION_INFO"]], "openssl_version_number (in module ssl)": [[357, "ssl.OPENSSL_VERSION_NUMBER"]], "op_all (in module ssl)": [[357, "ssl.OP_ALL"]], "op_cipher_server_preference (in module ssl)": [[357, "ssl.OP_CIPHER_SERVER_PREFERENCE"]], "op_enable_middlebox_compat (in module ssl)": [[357, "ssl.OP_ENABLE_MIDDLEBOX_COMPAT"]], "op_ignore_unexpected_eof (in module ssl)": [[357, "ssl.OP_IGNORE_UNEXPECTED_EOF"]], "op_no_compression (in module ssl)": [[357, "ssl.OP_NO_COMPRESSION"]], "op_no_renegotiation (in module ssl)": [[357, "ssl.OP_NO_RENEGOTIATION"]], "op_no_sslv2 (in module ssl)": [[357, "ssl.OP_NO_SSLv2"]], "op_no_sslv3 (in module ssl)": [[357, "ssl.OP_NO_SSLv3"]], "op_no_ticket (in module ssl)": [[357, "ssl.OP_NO_TICKET"]], "op_no_tlsv1 (in module ssl)": [[357, "ssl.OP_NO_TLSv1"]], "op_no_tlsv1_1 (in module ssl)": [[357, "ssl.OP_NO_TLSv1_1"]], "op_no_tlsv1_2 (in module ssl)": [[357, "ssl.OP_NO_TLSv1_2"]], "op_no_tlsv1_3 (in module ssl)": [[357, "ssl.OP_NO_TLSv1_3"]], "op_single_dh_use (in module ssl)": [[357, "ssl.OP_SINGLE_DH_USE"]], "op_single_ecdh_use (in module ssl)": [[357, "ssl.OP_SINGLE_ECDH_USE"]], "options (class in ssl)": [[357, "ssl.Options"]], "pem_cert_to_der_cert() (in module ssl)": [[357, "ssl.PEM_cert_to_DER_cert"]], "pep 644": [[357, "index-2"], [487, "index-29"], [487, "index-30"], [487, "index-36"], [487, "index-9"]], "protocol_sslv2 (in module ssl)": [[357, "ssl.PROTOCOL_SSLv2"]], "protocol_sslv23 (in module ssl)": [[357, "ssl.PROTOCOL_SSLv23"]], "protocol_sslv3 (in module ssl)": [[357, "ssl.PROTOCOL_SSLv3"]], "protocol_tls (in module ssl)": [[357, "ssl.PROTOCOL_TLS"]], "protocol_tls_client (in module ssl)": [[357, "ssl.PROTOCOL_TLS_CLIENT"]], "protocol_tls_server (in module ssl)": [[357, "ssl.PROTOCOL_TLS_SERVER"]], "protocol_tlsv1 (in module ssl)": [[357, "ssl.PROTOCOL_TLSv1"]], "protocol_tlsv1_1 (in module ssl)": [[357, "ssl.PROTOCOL_TLSv1_1"]], "protocol_tlsv1_2 (in module ssl)": [[357, "ssl.PROTOCOL_TLSv1_2"]], "purpose.client_auth (in module ssl)": [[357, "ssl.Purpose.CLIENT_AUTH"]], "purpose.server_auth (in module ssl)": [[357, "ssl.Purpose.SERVER_AUTH"]], "rand_add() (in module ssl)": [[357, "ssl.RAND_add"]], "rand_bytes() (in module ssl)": [[357, "ssl.RAND_bytes"]], "rand_pseudo_bytes() (in module ssl)": [[357, "ssl.RAND_pseudo_bytes"]], "rand_status() (in module ssl)": [[357, "ssl.RAND_status"]], "rfc 1422": [[357, "index-20"], [357, "index-21"]], "rfc 1750": [[357, "index-5"]], "rfc 2818": [[357, "index-6"], [489, "index-12"]], "rfc 3280": [[357, "index-14"]], "rfc 4086": [[357, "index-22"]], "rfc 5246": [[357, "index-13"], [357, "index-24"]], "rfc 5280": [[357, "index-10"], [357, "index-23"], [357, "index-7"], [492, "index-41"], [492, "index-51"]], "rfc 5929": [[357, "index-15"]], "rfc 6066": [[357, "index-12"], [357, "index-17"], [357, "index-25"]], "rfc 6125": [[357, "index-8"], [357, "index-9"]], "rfc 7301": [[357, "index-11"], [357, "index-16"], [492, "index-40"]], "rfc 7525": [[357, "index-26"]], "ssl": [[357, "index-1"], [357, "module-ssl"]], "sslcertverificationerror": [[357, "ssl.SSLCertVerificationError"]], "sslcontext (class in ssl)": [[357, "ssl.SSLContext"]], "ssleoferror": [[357, "ssl.SSLEOFError"]], "sslerror": [[357, "ssl.SSLError"]], "sslerrornumber (class in ssl)": [[357, "ssl.SSLErrorNumber"]], "sslkeylogfile": [[357, "index-3"], [357, "index-4"]], "sslobject (class in ssl)": [[357, "ssl.SSLObject"]], "sslsession (class in ssl)": [[357, "ssl.SSLSession"]], "sslsocket (class in ssl)": [[357, "ssl.SSLSocket"]], "sslsyscallerror": [[357, "ssl.SSLSyscallError"]], "sslwantreaderror": [[357, "ssl.SSLWantReadError"]], "sslwantwriteerror": [[357, "ssl.SSLWantWriteError"]], "sslzeroreturnerror": [[357, "ssl.SSLZeroReturnError"]], "sslv3 (ssl.tlsversion attribute)": [[357, "ssl.TLSVersion.SSLv3"]], "secure sockets layer": [[357, "index-1"]], "tls": [[357, "index-1"]], "tlsversion (class in ssl)": [[357, "ssl.TLSVersion"]], "tlsv1 (ssl.tlsversion attribute)": [[357, "ssl.TLSVersion.TLSv1"]], "tlsv1_1 (ssl.tlsversion attribute)": [[357, "ssl.TLSVersion.TLSv1_1"]], "tlsv1_2 (ssl.tlsversion attribute)": [[357, "ssl.TLSVersion.TLSv1_2"]], "tlsv1_3 (ssl.tlsversion attribute)": [[357, "ssl.TLSVersion.TLSv1_3"]], "transport layer security": [[357, "index-1"]], "verify_allow_proxy_certs (in module ssl)": [[357, "ssl.VERIFY_ALLOW_PROXY_CERTS"]], "verify_crl_check_chain (in module ssl)": [[357, "ssl.VERIFY_CRL_CHECK_CHAIN"]], "verify_crl_check_leaf (in module ssl)": [[357, "ssl.VERIFY_CRL_CHECK_LEAF"]], "verify_default (in module ssl)": [[357, "ssl.VERIFY_DEFAULT"]], "verify_x509_partial_chain (in module ssl)": [[357, "ssl.VERIFY_X509_PARTIAL_CHAIN"]], "verify_x509_strict (in module ssl)": [[357, "ssl.VERIFY_X509_STRICT"]], "verify_x509_trusted_first (in module ssl)": [[357, "ssl.VERIFY_X509_TRUSTED_FIRST"]], "verifyflags (class in ssl)": [[357, "ssl.VerifyFlags"]], "verifymode (class in ssl)": [[357, "ssl.VerifyMode"]], "x509 certificate": [[357, "index-19"]], "cert_store_stats() (ssl.sslcontext method)": [[357, "ssl.SSLContext.cert_store_stats"]], "cert_time_to_seconds() (in module ssl)": [[357, "ssl.cert_time_to_seconds"]], "certificates": [[357, "index-18"]], "check_hostname (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.check_hostname"]], "cipher() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.cipher"]], "compression() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.compression"]], "context (ssl.sslsocket attribute)": [[357, "ssl.SSLSocket.context"]], "create_default_context() (in module ssl)": [[357, "ssl.create_default_context"]], "do_handshake() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.do_handshake"]], "enum_certificates() (in module ssl)": [[357, "ssl.enum_certificates"]], "enum_crls() (in module ssl)": [[357, "ssl.enum_crls"]], "eof (ssl.memorybio attribute)": [[357, "ssl.MemoryBIO.eof"]], "get_ca_certs() (ssl.sslcontext method)": [[357, "ssl.SSLContext.get_ca_certs"]], "get_channel_binding() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.get_channel_binding"]], "get_ciphers() (ssl.sslcontext method)": [[357, "ssl.SSLContext.get_ciphers"]], "get_default_verify_paths() (in module ssl)": [[357, "ssl.get_default_verify_paths"]], "get_server_certificate() (in module ssl)": [[357, "ssl.get_server_certificate"]], "getpeercert() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.getpeercert"]], "has_ticket (ssl.sslsession attribute)": [[357, "ssl.SSLSession.has_ticket"]], "hostname_checks_common_name (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.hostname_checks_common_name"]], "id (ssl.sslsession attribute)": [[357, "ssl.SSLSession.id"]], "keylog_filename (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.keylog_filename"]], "library (ssl.sslerror attribute)": [[357, "ssl.SSLError.library"]], "load_cert_chain() (ssl.sslcontext method)": [[357, "ssl.SSLContext.load_cert_chain"]], "load_default_certs() (ssl.sslcontext method)": [[357, "ssl.SSLContext.load_default_certs"]], "load_dh_params() (ssl.sslcontext method)": [[357, "ssl.SSLContext.load_dh_params"]], "load_verify_locations() (ssl.sslcontext method)": [[357, "ssl.SSLContext.load_verify_locations"]], "match_hostname() (in module ssl)": [[357, "ssl.match_hostname"]], "maximum_version (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.maximum_version"]], "minimum_version (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.minimum_version"]], "num_tickets (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.num_tickets"]], "options (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.options"]], "pending (ssl.memorybio attribute)": [[357, "ssl.MemoryBIO.pending"]], "pending() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.pending"]], "post_handshake_auth (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.post_handshake_auth"]], "protocol (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.protocol"]], "read() (ssl.memorybio method)": [[357, "ssl.MemoryBIO.read"]], "read() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.read"]], "reason (ssl.sslerror attribute)": [[357, "ssl.SSLError.reason"]], "security_level (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.security_level"]], "selected_alpn_protocol() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.selected_alpn_protocol"]], "selected_npn_protocol() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.selected_npn_protocol"]], "server_hostname (ssl.sslsocket attribute)": [[357, "ssl.SSLSocket.server_hostname"]], "server_side (ssl.sslsocket attribute)": [[357, "ssl.SSLSocket.server_side"]], "session (ssl.sslsocket attribute)": [[357, "ssl.SSLSocket.session"]], "session_reused (ssl.sslsocket attribute)": [[357, "ssl.SSLSocket.session_reused"]], "session_stats() (ssl.sslcontext method)": [[357, "ssl.SSLContext.session_stats"]], "set_alpn_protocols() (ssl.sslcontext method)": [[357, "ssl.SSLContext.set_alpn_protocols"]], "set_ciphers() (ssl.sslcontext method)": [[357, "ssl.SSLContext.set_ciphers"]], "set_default_verify_paths() (ssl.sslcontext method)": [[357, "ssl.SSLContext.set_default_verify_paths"]], "set_ecdh_curve() (ssl.sslcontext method)": [[357, "ssl.SSLContext.set_ecdh_curve"]], "set_npn_protocols() (ssl.sslcontext method)": [[357, "ssl.SSLContext.set_npn_protocols"]], "set_servername_callback (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.set_servername_callback"]], "shared_ciphers() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.shared_ciphers"]], "sni_callback (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.sni_callback"]], "sslobject_class (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.sslobject_class"]], "sslsocket_class (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.sslsocket_class"]], "ticket_lifetime_hint (ssl.sslsession attribute)": [[357, "ssl.SSLSession.ticket_lifetime_hint"]], "time (ssl.sslsession attribute)": [[357, "ssl.SSLSession.time"]], "timeout (ssl.sslsession attribute)": [[357, "ssl.SSLSession.timeout"]], "unwrap() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.unwrap"]], "verify_client_post_handshake() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.verify_client_post_handshake"]], "verify_code (ssl.sslcertverificationerror attribute)": [[357, "ssl.SSLCertVerificationError.verify_code"]], "verify_flags (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.verify_flags"]], "verify_message (ssl.sslcertverificationerror attribute)": [[357, "ssl.SSLCertVerificationError.verify_message"]], "verify_mode (ssl.sslcontext attribute)": [[357, "ssl.SSLContext.verify_mode"]], "version() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.version"]], "wrap_bio() (ssl.sslcontext method)": [[357, "ssl.SSLContext.wrap_bio"]], "wrap_socket() (in module ssl)": [[357, "ssl.wrap_socket"]], "wrap_socket() (ssl.sslcontext method)": [[357, "ssl.SSLContext.wrap_socket"]], "write() (ssl.memorybio method)": [[357, "ssl.MemoryBIO.write"]], "write() (ssl.sslsocket method)": [[357, "ssl.SSLSocket.write"]], "write_eof() (ssl.memorybio method)": [[357, "ssl.MemoryBIO.write_eof"]], "file_attribute_archive (in module stat)": [[358, "stat.FILE_ATTRIBUTE_ARCHIVE"]], "file_attribute_compressed (in module stat)": [[358, "stat.FILE_ATTRIBUTE_COMPRESSED"]], "file_attribute_device (in module stat)": [[358, "stat.FILE_ATTRIBUTE_DEVICE"]], "file_attribute_directory (in module stat)": [[358, "stat.FILE_ATTRIBUTE_DIRECTORY"]], "file_attribute_encrypted (in module stat)": [[358, "stat.FILE_ATTRIBUTE_ENCRYPTED"]], "file_attribute_hidden (in module stat)": [[358, "stat.FILE_ATTRIBUTE_HIDDEN"]], "file_attribute_integrity_stream (in module stat)": [[358, "stat.FILE_ATTRIBUTE_INTEGRITY_STREAM"]], "file_attribute_normal (in module stat)": [[358, "stat.FILE_ATTRIBUTE_NORMAL"]], "file_attribute_not_content_indexed (in module stat)": [[358, "stat.FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"]], "file_attribute_no_scrub_data (in module stat)": [[358, "stat.FILE_ATTRIBUTE_NO_SCRUB_DATA"]], "file_attribute_offline (in module stat)": [[358, "stat.FILE_ATTRIBUTE_OFFLINE"]], "file_attribute_readonly (in module stat)": [[358, "stat.FILE_ATTRIBUTE_READONLY"]], "file_attribute_reparse_point (in module stat)": [[358, "stat.FILE_ATTRIBUTE_REPARSE_POINT"]], "file_attribute_sparse_file (in module stat)": [[358, "stat.FILE_ATTRIBUTE_SPARSE_FILE"]], "file_attribute_system (in module stat)": [[358, "stat.FILE_ATTRIBUTE_SYSTEM"]], "file_attribute_temporary (in module stat)": [[358, "stat.FILE_ATTRIBUTE_TEMPORARY"]], "file_attribute_virtual (in module stat)": [[358, "stat.FILE_ATTRIBUTE_VIRTUAL"]], "io_reparse_tag_appexeclink (in module stat)": [[358, "stat.IO_REPARSE_TAG_APPEXECLINK"]], "io_reparse_tag_mount_point (in module stat)": [[358, "stat.IO_REPARSE_TAG_MOUNT_POINT"]], "io_reparse_tag_symlink (in module stat)": [[358, "stat.IO_REPARSE_TAG_SYMLINK"]], "sf_append (in module stat)": [[358, "stat.SF_APPEND"]], "sf_archived (in module stat)": [[358, "stat.SF_ARCHIVED"]], "sf_immutable (in module stat)": [[358, "stat.SF_IMMUTABLE"]], "sf_nounlink (in module stat)": [[358, "stat.SF_NOUNLINK"]], "sf_snapshot (in module stat)": [[358, "stat.SF_SNAPSHOT"]], "st_atime (in module stat)": [[358, "stat.ST_ATIME"]], "st_ctime (in module stat)": [[358, "stat.ST_CTIME"]], "st_dev (in module stat)": [[358, "stat.ST_DEV"]], "st_gid (in module stat)": [[358, "stat.ST_GID"]], "st_ino (in module stat)": [[358, "stat.ST_INO"]], "st_mode (in module stat)": [[358, "stat.ST_MODE"]], "st_mtime (in module stat)": [[358, "stat.ST_MTIME"]], "st_nlink (in module stat)": [[358, "stat.ST_NLINK"]], "st_size (in module stat)": [[358, "stat.ST_SIZE"]], "st_uid (in module stat)": [[358, "stat.ST_UID"]], "s_enfmt (in module stat)": [[358, "stat.S_ENFMT"]], "s_iexec (in module stat)": [[358, "stat.S_IEXEC"]], "s_ifblk (in module stat)": [[358, "stat.S_IFBLK"]], "s_ifchr (in module stat)": [[358, "stat.S_IFCHR"]], "s_ifdir (in module stat)": [[358, "stat.S_IFDIR"]], "s_ifdoor (in module stat)": [[358, "stat.S_IFDOOR"]], "s_ififo (in module stat)": [[358, "stat.S_IFIFO"]], "s_iflnk (in module stat)": [[358, "stat.S_IFLNK"]], "s_ifmt() (in module stat)": [[358, "stat.S_IFMT"]], "s_ifport (in module stat)": [[358, "stat.S_IFPORT"]], "s_ifreg (in module stat)": [[358, "stat.S_IFREG"]], "s_ifsock (in module stat)": [[358, "stat.S_IFSOCK"]], "s_ifwht (in module stat)": [[358, "stat.S_IFWHT"]], "s_imode() (in module stat)": [[358, "stat.S_IMODE"]], "s_iread (in module stat)": [[358, "stat.S_IREAD"]], "s_irgrp (in module stat)": [[358, "stat.S_IRGRP"]], "s_iroth (in module stat)": [[358, "stat.S_IROTH"]], "s_irusr (in module stat)": [[358, "stat.S_IRUSR"]], "s_irwxg (in module stat)": [[358, "stat.S_IRWXG"]], "s_irwxo (in module stat)": [[358, "stat.S_IRWXO"]], "s_irwxu (in module stat)": [[358, "stat.S_IRWXU"]], "s_isblk() (in module stat)": [[358, "stat.S_ISBLK"]], "s_ischr() (in module stat)": [[358, "stat.S_ISCHR"]], "s_isdir() (in module stat)": [[358, "stat.S_ISDIR"]], "s_isdoor() (in module stat)": [[358, "stat.S_ISDOOR"]], "s_isfifo() (in module stat)": [[358, "stat.S_ISFIFO"]], "s_isgid (in module stat)": [[358, "stat.S_ISGID"]], "s_islnk() (in module stat)": [[358, "stat.S_ISLNK"]], "s_isport() (in module stat)": [[358, "stat.S_ISPORT"]], "s_isreg() (in module stat)": [[358, "stat.S_ISREG"]], "s_issock() (in module stat)": [[358, "stat.S_ISSOCK"]], "s_isuid (in module stat)": [[358, "stat.S_ISUID"]], "s_isvtx (in module stat)": [[358, "stat.S_ISVTX"]], "s_iswht() (in module stat)": [[358, "stat.S_ISWHT"]], "s_iwgrp (in module stat)": [[358, "stat.S_IWGRP"]], "s_iwoth (in module stat)": [[358, "stat.S_IWOTH"]], "s_iwrite (in module stat)": [[358, "stat.S_IWRITE"]], "s_iwusr (in module stat)": [[358, "stat.S_IWUSR"]], "s_ixgrp (in module stat)": [[358, "stat.S_IXGRP"]], "s_ixoth (in module stat)": [[358, "stat.S_IXOTH"]], "s_ixusr (in module stat)": [[358, "stat.S_IXUSR"]], "uf_append (in module stat)": [[358, "stat.UF_APPEND"]], "uf_compressed (in module stat)": [[358, "stat.UF_COMPRESSED"]], "uf_hidden (in module stat)": [[358, "stat.UF_HIDDEN"]], "uf_immutable (in module stat)": [[358, "stat.UF_IMMUTABLE"]], "uf_nodump (in module stat)": [[358, "stat.UF_NODUMP"]], "uf_nounlink (in module stat)": [[358, "stat.UF_NOUNLINK"]], "uf_opaque (in module stat)": [[358, "stat.UF_OPAQUE"]], "filemode() (in module stat)": [[358, "stat.filemode"]], "normaldist (class in statistics)": [[359, "statistics.NormalDist"]], "statisticserror": [[359, "statistics.StatisticsError"]], "cdf() (statistics.normaldist method)": [[359, "statistics.NormalDist.cdf"]], "correlation() (in module statistics)": [[359, "statistics.correlation"]], "covariance() (in module statistics)": [[359, "statistics.covariance"]], "fmean() (in module statistics)": [[359, "statistics.fmean"]], "from_samples() (statistics.normaldist class method)": [[359, "statistics.NormalDist.from_samples"]], "geometric_mean() (in module statistics)": [[359, "statistics.geometric_mean"]], "harmonic_mean() (in module statistics)": [[359, "statistics.harmonic_mean"]], "inv_cdf() (statistics.normaldist method)": [[359, "statistics.NormalDist.inv_cdf"]], "linear_regression() (in module statistics)": [[359, "statistics.linear_regression"]], "mean (statistics.normaldist attribute)": [[359, "statistics.NormalDist.mean"]], "mean() (in module statistics)": [[359, "statistics.mean"]], "median (statistics.normaldist attribute)": [[359, "statistics.NormalDist.median"]], "median() (in module statistics)": [[359, "statistics.median"]], "median_grouped() (in module statistics)": [[359, "statistics.median_grouped"]], "median_high() (in module statistics)": [[359, "statistics.median_high"]], "median_low() (in module statistics)": [[359, "statistics.median_low"]], "mode (statistics.normaldist attribute)": [[359, "statistics.NormalDist.mode"]], "mode() (in module statistics)": [[359, "statistics.mode"]], "multimode() (in module statistics)": [[359, "statistics.multimode"]], "overlap() (statistics.normaldist method)": [[359, "statistics.NormalDist.overlap"]], "pdf() (statistics.normaldist method)": [[359, "statistics.NormalDist.pdf"]], "pstdev() (in module statistics)": [[359, "statistics.pstdev"]], "pvariance() (in module statistics)": [[359, "statistics.pvariance"]], "quantiles() (in module statistics)": [[359, "statistics.quantiles"]], "quantiles() (statistics.normaldist method)": [[359, "statistics.NormalDist.quantiles"]], "samples() (statistics.normaldist method)": [[359, "statistics.NormalDist.samples"]], "statistics": [[359, "module-statistics"]], "stdev (statistics.normaldist attribute)": [[359, "statistics.NormalDist.stdev"]], "stdev() (in module statistics)": [[359, "statistics.stdev"]], "variance (statistics.normaldist attribute)": [[359, "statistics.NormalDist.variance"]], "variance() (in module statistics)": [[359, "statistics.variance"]], "zscore() (statistics.normaldist method)": [[359, "statistics.NormalDist.zscore"]], "!=": [[360, "index-7"], [445, "index-77"]], "& (ampersand)": [[360, "index-16"], [445, "index-74"]], "(see also string)": [[360, "index-27"]], "//": [[360, "index-13"], [445, "index-67"]], "< (less)": [[360, "index-7"], [361, "index-3"], [363, "index-1"], [445, "index-77"]], "<<": [[360, "index-16"], [445, "index-71"]], "<=": [[360, "index-7"], [445, "index-77"]], "==": [[360, "index-7"], [445, "index-77"]], "> (greater)": [[360, "index-7"], [361, "index-3"], [363, "index-1"], [445, "index-77"]], ">=": [[360, "index-7"], [445, "index-77"]], ">>": [[360, "index-16"], [445, "index-71"]], "alias": [[360, "index-55"]], "c": [[360, "index-11"], [363, "index-0"], [443, "index-13"], [443, "index-4"], [443, "index-42"], [445, "index-77"], [450, "index-23"]], "false": [[360, "index-4"], [360, "index-66"], [360, "index-1"], [443, "index-12"]], "false (built-in object)": [[360, "index-3"]], "generic": [[360, "index-55"], [443, "index-5"]], "genericalias": [[360, "index-55"]], "none (built-in object)": [[360, "index-3"]], "pep 237": [[360, "index-37"], [360, "index-47"], [479, "index-10"], [481, "index-1"], [481, "index-16"], [485, "index-1"]], "pep 3118": [[360, "index-49"], [483, "index-15"], [485, "index-33"], [490, "index-31"], [490, "index-4"], [490, "index-5"], [495, "index-8"]], "pep 461": [[360, "index-48"], [492, "index-7"], [492, "index-8"]], "pythonintmaxstrdigits": [[360, "index-67"], [360, "index-68"], [368, "index-17"], [470, "envvar-PYTHONINTMAXSTRDIGITS"], [470, "index-22"]], "true": [[360, "index-4"], [360, "index-66"], [360, "index-2"], [443, "index-12"]], "union": [[360, "index-58"], [360, "index-58"]], "__args__ (genericalias attribute)": [[360, "genericalias.__args__"]], "__bases__ (class attribute)": [[360, "class.__bases__"], [443, "index-50"]], "__class__ (instance attribute)": [[360, "instance.__class__"], [443, "index-54"]], "__code__ (function object attribute)": [[360, "index-62"]], "__dict__ (object attribute)": [[360, "object.__dict__"]], "__enter__() (contextmanager method)": [[360, "contextmanager.__enter__"]], "__eq__() (instance method)": [[360, "index-9"]], "__eq__() (memoryview method)": [[360, "memoryview.__eq__"]], "__exit__() (contextmanager method)": [[360, "contextmanager.__exit__"]], "__ge__() (instance method)": [[360, "index-9"]], "__gt__() (instance method)": [[360, "index-9"]], "__iter__() (container method)": [[360, "container.__iter__"]], "__iter__() (iterator method)": [[360, "iterator.__iter__"]], "__le__() (instance method)": [[360, "index-9"]], "__lt__() (instance method)": [[360, "index-9"]], "__missing__()": [[360, "index-52"]], "__mro__ (class attribute)": [[360, "class.__mro__"]], "__name__ (definition attribute)": [[360, "definition.__name__"]], "__ne__() (instance method)": [[360, "index-9"]], "__next__() (iterator method)": [[360, "iterator.__next__"]], "__origin__ (genericalias attribute)": [[360, "genericalias.__origin__"]], "__parameters__ (genericalias attribute)": [[360, "genericalias.__parameters__"]], "__qualname__ (definition attribute)": [[360, "definition.__qualname__"]], "__subclasses__() (class method)": [[360, "class.__subclasses__"]], "__unpacked__ (genericalias attribute)": [[360, "genericalias.__unpacked__"]], "add() (frozenset method)": [[360, "frozenset.add"]], "and": [[360, "index-4"], [360, "index-6"], [445, "index-74"], [445, "index-84"]], "append() (sequence method)": [[360, "index-23"]], "arithmetic": [[360, "index-13"], [445, "index-1"], [445, "index-59"], [445, "index-64"]], "as_integer_ratio() (float method)": [[360, "float.as_integer_ratio"]], "as_integer_ratio() (int method)": [[360, "int.as_integer_ratio"]], "assignment": [[360, "index-23"], [443, "index-22"], [443, "index-48"], [443, "index-52"], [451, "index-12"], [451, "index-14"], [451, "index-15"], [451, "index-4"], [451, "index-6"], [451, "index-8"], [451, "index-9"]], "binary": [[360, "index-12"], [363, "index-0"], [445, "index-64"], [445, "index-73"]], "binary operator": [[360, "index-13"], [445, "index-69"], [445, "index-70"]], "binary sequence types": [[360, "index-38"]], "bit_count() (int method)": [[360, "int.bit_count"]], "bit_length() (int method)": [[360, "int.bit_length"]], "bitwise": [[360, "index-16"], [445, "index-59"], [445, "index-73"], [445, "index-74"], [445, "index-75"], [445, "index-76"]], "built-in": [[360, "index-0"], [443, "index-43"]], "bytearray (%)": [[360, "index-44"]], "bytearray (built-in class)": [[360, "bytearray"]], "bytearray.splitlines method": [[360, "index-43"]], "bytes (%)": [[360, "index-44"]], "bytes (built-in class)": [[360, "bytes"]], "bytes.splitlines method": [[360, "index-43"]], "c_contiguous (memoryview attribute)": [[360, "memoryview.c_contiguous"]], "capitalize() (bytearray method)": [[360, "bytearray.capitalize"]], "capitalize() (bytes method)": [[360, "bytes.capitalize"]], "capitalize() (str method)": [[360, "str.capitalize"]], "casefold() (str method)": [[360, "str.casefold"]], "cast() (memoryview method)": [[360, "memoryview.cast"]], "center() (bytearray method)": [[360, "bytearray.center"]], "center() (bytes method)": [[360, "bytes.center"]], "center() (str method)": [[360, "str.center"]], "clear() (dict method)": [[360, "dict.clear"]], "clear() (frozenset method)": [[360, "frozenset.clear"]], "clear() (sequence method)": [[360, "index-23"]], "comparing": [[360, "index-8"]], "comparison": [[360, "index-7"], [445, "index-77"]], "comparisons": [[360, "index-7"], [443, "index-79"], [445, "index-78"]], "complex": [[360, "index-13"], [443, "index-104"], [443, "index-14"]], "concatenation": [[360, "index-19"]], "conjugate() (complex number method)": [[360, "index-14"]], "container": [[360, "index-17"], [443, "index-3"], [443, "index-47"]], "context management": [[360, "index-53"]], "context management protocol": [[360, "index-53"]], "contiguous (memoryview attribute)": [[360, "memoryview.contiguous"]], "conversions": [[360, "index-15"]], "copy() (dict method)": [[360, "dict.copy"]], "copy() (frozenset method)": [[360, "frozenset.copy"]], "copy() (sequence method)": [[360, "index-23"]], "count() (bytearray method)": [[360, "bytearray.count"]], "count() (bytes method)": [[360, "bytes.count"]], "count() (sequence method)": [[360, "index-19"]], "count() (str method)": [[360, "str.count"]], "decode() (bytearray method)": [[360, "bytearray.decode"]], "decode() (bytes method)": [[360, "bytes.decode"]], "del": [[360, "index-23"], [360, "index-51"], [443, "index-74"], [451, "index-21"]], "dict (built-in class)": [[360, "dict"]], "difference() (frozenset method)": [[360, "frozenset.difference"]], "difference_update() (frozenset method)": [[360, "frozenset.difference_update"]], "discard() (frozenset method)": [[360, "frozenset.discard"]], "encode() (str method)": [[360, "str.encode"]], "endswith() (bytearray method)": [[360, "bytearray.endswith"]], "endswith() (bytes method)": [[360, "bytes.endswith"]], "endswith() (str method)": [[360, "str.endswith"]], "expandtabs() (bytearray method)": [[360, "bytearray.expandtabs"]], "expandtabs() (bytes method)": [[360, "bytes.expandtabs"]], "expandtabs() (str method)": [[360, "str.expandtabs"]], "extend() (sequence method)": [[360, "index-23"]], "f_contiguous (memoryview attribute)": [[360, "memoryview.f_contiguous"]], "find() (bytearray method)": [[360, "bytearray.find"]], "find() (bytes method)": [[360, "bytes.find"]], "find() (str method)": [[360, "str.find"]], "format (memoryview attribute)": [[360, "memoryview.format"]], "format() (str method)": [[360, "str.format"]], "format_map() (str method)": [[360, "str.format_map"]], "formatting": [[360, "index-44"]], "formatting, printf": [[360, "index-34"]], "formatting, string (%)": [[360, "index-34"]], "from_bytes() (int class method)": [[360, "int.from_bytes"]], "fromhex() (bytearray class method)": [[360, "bytearray.fromhex"]], "fromhex() (bytes class method)": [[360, "bytes.fromhex"]], "fromhex() (float class method)": [[360, "float.fromhex"]], "fromkeys() (dict class method)": [[360, "dict.fromkeys"]], "frozenset (built-in class)": [[360, "frozenset"]], "get() (dict method)": [[360, "dict.get"]], "hex() (bytearray method)": [[360, "bytearray.hex"]], "hex() (bytes method)": [[360, "bytes.hex"]], "hex() (float method)": [[360, "float.hex"]], "hex() (memoryview method)": [[360, "memoryview.hex"]], "hexadecimal": [[360, "index-12"]], "if": [[360, "index-1"], [442, "index-18"], [442, "index-3"], [445, "index-12"], [445, "index-88"]], "in": [[360, "index-10"], [360, "index-19"], [442, "index-6"], [445, "index-80"]], "in printf-style formatting": [[360, "index-35"], [360, "index-36"], [360, "index-45"], [360, "index-46"]], "index() (bytearray method)": [[360, "bytearray.index"]], "index() (bytes method)": [[360, "bytes.index"]], "index() (sequence method)": [[360, "index-19"]], "index() (str method)": [[360, "str.index"]], "insert() (sequence method)": [[360, "index-23"]], "interpolation": [[360, "index-44"]], "interpolation, printf": [[360, "index-34"]], "interpolation, string (%)": [[360, "index-34"]], "intersection() (frozenset method)": [[360, "frozenset.intersection"]], "intersection_update() (frozenset method)": [[360, "frozenset.intersection_update"]], "io.stringio": [[360, "index-28"]], "is": [[360, "index-7"], [445, "index-81"]], "is not": [[360, "index-7"], [445, "index-81"]], "is_integer() (float method)": [[360, "float.is_integer"]], "isalnum() (bytearray method)": [[360, "bytearray.isalnum"]], "isalnum() (bytes method)": [[360, "bytes.isalnum"]], "isalnum() (str method)": [[360, "str.isalnum"]], "isalpha() (bytearray method)": [[360, "bytearray.isalpha"]], "isalpha() (bytes method)": [[360, "bytes.isalpha"]], "isalpha() (str method)": [[360, "str.isalpha"]], "isascii() (bytearray method)": [[360, "bytearray.isascii"]], "isascii() (bytes method)": [[360, "bytes.isascii"]], "isascii() (str method)": [[360, "str.isascii"]], "isdecimal() (str method)": [[360, "str.isdecimal"]], "isdigit() (bytearray method)": [[360, "bytearray.isdigit"]], "isdigit() (bytes method)": [[360, "bytes.isdigit"]], "isdigit() (str method)": [[360, "str.isdigit"]], "isdisjoint() (frozenset method)": [[360, "frozenset.isdisjoint"]], "isidentifier() (str method)": [[360, "str.isidentifier"]], "islower() (bytearray method)": [[360, "bytearray.islower"]], "islower() (bytes method)": [[360, "bytes.islower"]], "islower() (str method)": [[360, "str.islower"]], "isnumeric() (str method)": [[360, "str.isnumeric"]], "isprintable() (str method)": [[360, "str.isprintable"]], "isspace() (bytearray method)": [[360, "bytearray.isspace"]], "isspace() (bytes method)": [[360, "bytes.isspace"]], "isspace() (str method)": [[360, "str.isspace"]], "issubset() (frozenset method)": [[360, "frozenset.issubset"]], "issuperset() (frozenset method)": [[360, "frozenset.issuperset"]], "istitle() (bytearray method)": [[360, "bytearray.istitle"]], "istitle() (bytes method)": [[360, "bytes.istitle"]], "istitle() (str method)": [[360, "str.istitle"]], "isupper() (bytearray method)": [[360, "bytearray.isupper"]], "isupper() (bytes method)": [[360, "bytes.isupper"]], "isupper() (str method)": [[360, "str.isupper"]], "items() (dict method)": [[360, "dict.items"]], "itemsize (memoryview attribute)": [[360, "memoryview.itemsize"]], "iteration": [[360, "index-17"]], "iteration over": [[360, "index-17"]], "iterator protocol": [[360, "index-17"]], "join() (bytearray method)": [[360, "bytearray.join"]], "join() (bytes method)": [[360, "bytes.join"]], "join() (str method)": [[360, "str.join"]], "keys() (dict method)": [[360, "dict.keys"]], "list (built-in class)": [[360, "list"]], "literals": [[360, "index-12"]], "ljust() (bytearray method)": [[360, "bytearray.ljust"]], "ljust() (bytes method)": [[360, "bytes.ljust"]], "ljust() (str method)": [[360, "str.ljust"]], "loop": [[360, "index-20"], [442, "index-4"], [442, "index-6"], [451, "index-30"], [451, "index-33"]], "loop over": [[360, "index-20"]], "lower() (bytearray method)": [[360, "bytearray.lower"]], "lower() (bytes method)": [[360, "bytes.lower"]], "lower() (str method)": [[360, "str.lower"]], "lstrip() (bytearray method)": [[360, "bytearray.lstrip"]], "lstrip() (bytes method)": [[360, "bytes.lstrip"]], "lstrip() (str method)": [[360, "str.lstrip"]], "maketrans() (bytearray static method)": [[360, "bytearray.maketrans"]], "maketrans() (bytes static method)": [[360, "bytes.maketrans"]], "maketrans() (str static method)": [[360, "str.maketrans"]], "masking": [[360, "index-16"]], "max": [[360, "index-19"]], "memoryview (built-in class)": [[360, "memoryview"]], "methods": [[360, "index-31"], [360, "index-42"]], "min": [[360, "index-19"]], "mro() (class method)": [[360, "class.mro"]], "mutable sequence": [[360, "index-20"], [443, "index-22"]], "nbytes (memoryview attribute)": [[360, "memoryview.nbytes"]], "ndim (memoryview attribute)": [[360, "memoryview.ndim"]], "not": [[360, "index-6"], [445, "index-83"]], "not in": [[360, "index-10"], [360, "index-19"], [445, "index-80"]], "obj (memoryview attribute)": [[360, "memoryview.obj"]], "octal": [[360, "index-12"]], "operation": [[360, "index-19"], [445, "index-58"], [445, "index-59"], [445, "index-64"], [445, "index-71"], [445, "index-73"], [445, "index-82"], [451, "index-20"]], "operations on": [[360, "index-14"], [360, "index-16"], [360, "index-19"], [360, "index-23"], [360, "index-51"]], "or": [[360, "index-4"], [360, "index-6"], [445, "index-75"], [445, "index-76"], [445, "index-85"]], "over mutable sequence": [[360, "index-20"]], "partition() (bytearray method)": [[360, "bytearray.partition"]], "partition() (bytes method)": [[360, "bytes.partition"]], "partition() (str method)": [[360, "str.partition"]], "pop() (dict method)": [[360, "dict.pop"]], "pop() (frozenset method)": [[360, "frozenset.pop"]], "pop() (sequence method)": [[360, "index-23"]], "popitem() (dict method)": [[360, "dict.popitem"]], "printf-style formatting": [[360, "index-34"], [360, "index-44"]], "range": [[360, "index-26"], [442, "index-8"]], "range (built-in class)": [[360, "range"]], "readonly (memoryview attribute)": [[360, "memoryview.readonly"]], "release() (memoryview method)": [[360, "memoryview.release"]], "remove() (frozenset method)": [[360, "frozenset.remove"]], "remove() (sequence method)": [[360, "index-23"]], "removeprefix() (bytearray method)": [[360, "bytearray.removeprefix"]], "removeprefix() (bytes method)": [[360, "bytes.removeprefix"]], "removeprefix() (str method)": [[360, "str.removeprefix"]], "removesuffix() (bytearray method)": [[360, "bytearray.removesuffix"]], "removesuffix() (bytes method)": [[360, "bytes.removesuffix"]], "removesuffix() (str method)": [[360, "str.removesuffix"]], "repetition": [[360, "index-19"]], "replace() (bytearray method)": [[360, "bytearray.replace"]], "replace() (bytes method)": [[360, "bytes.replace"]], "replace() (str method)": [[360, "str.replace"]], "reverse() (sequence method)": [[360, "index-23"]], "rfind() (bytearray method)": [[360, "bytearray.rfind"]], "rfind() (bytes method)": [[360, "bytes.rfind"]], "rfind() (str method)": [[360, "str.rfind"]], "rindex() (bytearray method)": [[360, "bytearray.rindex"]], "rindex() (bytes method)": [[360, "bytes.rindex"]], "rindex() (str method)": [[360, "str.rindex"]], "rjust() (bytearray method)": [[360, "bytearray.rjust"]], "rjust() (bytes method)": [[360, "bytes.rjust"]], "rjust() (str method)": [[360, "str.rjust"]], "rpartition() (bytearray method)": [[360, "bytearray.rpartition"]], "rpartition() (bytes method)": [[360, "bytes.rpartition"]], "rpartition() (str method)": [[360, "str.rpartition"]], "rsplit() (bytearray method)": [[360, "bytearray.rsplit"]], "rsplit() (bytes method)": [[360, "bytes.rsplit"]], "rsplit() (str method)": [[360, "str.rsplit"]], "rstrip() (bytearray method)": [[360, "bytearray.rstrip"]], "rstrip() (bytes method)": [[360, "bytes.rstrip"]], "rstrip() (str method)": [[360, "str.rstrip"]], "set (built-in class)": [[360, "set"]], "setdefault() (dict method)": [[360, "dict.setdefault"]], "shape (memoryview attribute)": [[360, "memoryview.shape"]], "shifting": [[360, "index-16"], [445, "index-71"]], "sort() (list method)": [[360, "list.sort"]], "space": [[360, "index-36"], [360, "index-46"], [361, "index-4"], [450, "index-8"]], "split() (bytearray method)": [[360, "bytearray.split"]], "split() (bytes method)": [[360, "bytes.split"]], "split() (str method)": [[360, "str.split"]], "splitlines() (bytearray method)": [[360, "bytearray.splitlines"]], "splitlines() (bytes method)": [[360, "bytes.splitlines"]], "splitlines() (str method)": [[360, "str.splitlines"]], "sprintf-style formatting": [[360, "index-34"], [360, "index-44"]], "start (range attribute)": [[360, "range.start"]], "startswith() (bytearray method)": [[360, "bytearray.startswith"]], "startswith() (bytes method)": [[360, "bytes.startswith"]], "startswith() (str method)": [[360, "str.startswith"]], "step (range attribute)": [[360, "range.step"]], "stop (range attribute)": [[360, "range.stop"]], "str (built-in class)": [[360, "index-27"], [360, "index-29"], [360, "index-30"], [360, "str"]], "str.splitlines method": [[360, "index-33"]], "strides (memoryview attribute)": [[360, "memoryview.strides"]], "strip() (bytearray method)": [[360, "bytearray.strip"]], "strip() (bytes method)": [[360, "bytes.strip"]], "strip() (str method)": [[360, "str.strip"]], "suboffsets (memoryview attribute)": [[360, "memoryview.suboffsets"]], "subscript": [[360, "index-19"], [360, "index-23"]], "swapcase() (bytearray method)": [[360, "bytearray.swapcase"]], "swapcase() (bytes method)": [[360, "bytes.swapcase"]], "swapcase() (str method)": [[360, "str.swapcase"]], "symmetric_difference() (frozenset method)": [[360, "frozenset.symmetric_difference"]], "symmetric_difference_update() (frozenset method)": [[360, "frozenset.symmetric_difference_update"]], "text sequence type": [[360, "index-27"]], "title() (bytearray method)": [[360, "bytearray.title"]], "title() (bytes method)": [[360, "bytes.title"]], "title() (str method)": [[360, "str.title"]], "to_bytes() (int method)": [[360, "int.to_bytes"]], "tobytes() (memoryview method)": [[360, "memoryview.tobytes"]], "tolist() (memoryview method)": [[360, "memoryview.tolist"]], "toreadonly() (memoryview method)": [[360, "memoryview.toreadonly"]], "translate() (bytearray method)": [[360, "bytearray.translate"]], "translate() (bytes method)": [[360, "bytes.translate"]], "translate() (str method)": [[360, "str.translate"]], "truth": [[360, "index-1"]], "tuple (built-in class)": [[360, "tuple"]], "type annotation; type hint": [[360, "index-54"]], "types": [[360, "index-0"], [360, "index-14"], [360, "index-16"], [360, "index-19"], [360, "index-21"], [360, "index-22"], [360, "index-23"], [360, "index-51"], [360, "index-64"], [400, "module-types"]], "unary operator": [[360, "index-13"], [445, "index-60"], [445, "index-61"]], "union() (frozenset method)": [[360, "frozenset.union"]], "update() (dict method)": [[360, "dict.update"]], "update() (frozenset method)": [[360, "frozenset.update"]], "upper() (bytearray method)": [[360, "bytearray.upper"]], "upper() (bytes method)": [[360, "bytes.upper"]], "upper() (str method)": [[360, "str.upper"]], "value": [[360, "index-1"], [442, "index-31"], [445, "index-17"]], "values": [[360, "index-66"], [451, "index-3"]], "values() (dict method)": [[360, "dict.values"]], "while": [[360, "index-1"], [442, "index-4"], [451, "index-30"], [451, "index-33"]], "zfill() (bytearray method)": [[360, "bytearray.zfill"]], "zfill() (bytes method)": [[360, "bytes.zfill"]], "zfill() (str method)": [[360, "str.zfill"]], ", (comma)": [[361, "index-8"], [442, "index-16"], [442, "index-28"], [442, "index-42"], [445, "index-10"], [445, "index-15"], [445, "index-16"], [445, "index-17"], [445, "index-44"], [445, "index-47"], [445, "index-91"], [451, "index-18"], [451, "index-34"], [451, "index-43"], [451, "index-45"], [451, "index-6"]], "= (equals)": [[361, "index-3"], [363, "index-1"], [442, "index-31"], [443, "index-86"], [445, "index-47"], [450, "index-25"], [451, "index-4"]], "formatter (class in string)": [[361, "string.Formatter"]], "pep 292": [[361, "index-12"], [481, "index-3"]], "pep 378": [[361, "index-9"], [484, "index-3"], [486, "index-1"]], "pep 682": [[361, "index-6"], [488, "index-22"]], "template (class in string)": [[361, "string.Template"]], "ascii_letters (in module string)": [[361, "string.ascii_letters"]], "ascii_lowercase (in module string)": [[361, "string.ascii_lowercase"]], "ascii_uppercase (in module string)": [[361, "string.ascii_uppercase"]], "capwords() (in module string)": [[361, "string.capwords"]], "check_unused_args() (string.formatter method)": [[361, "string.Formatter.check_unused_args"]], "convert_field() (string.formatter method)": [[361, "string.Formatter.convert_field"]], "digits (in module string)": [[361, "string.digits"]], "format() (string.formatter method)": [[361, "string.Formatter.format"]], "format_field() (string.formatter method)": [[361, "string.Formatter.format_field"]], "get_field() (string.formatter method)": [[361, "string.Formatter.get_field"]], "get_identifiers() (string.template method)": [[361, "string.Template.get_identifiers"]], "get_value() (string.formatter method)": [[361, "string.Formatter.get_value"]], "hexdigits (in module string)": [[361, "string.hexdigits"]], "in string formatting": [[361, "index-10"], [361, "index-2"], [361, "index-3"], [361, "index-4"], [361, "index-5"], [361, "index-7"], [361, "index-8"]], "in template strings": [[361, "index-13"]], "is_valid() (string.template method)": [[361, "string.Template.is_valid"]], "octdigits (in module string)": [[361, "string.octdigits"]], "parse() (string.formatter method)": [[361, "string.Formatter.parse"]], "printable (in module string)": [[361, "string.printable"]], "punctuation (in module string)": [[361, "string.punctuation"]], "safe_substitute() (string.template method)": [[361, "string.Template.safe_substitute"]], "substitute() (string.template method)": [[361, "string.Template.substitute"]], "template (string.template attribute)": [[361, "string.Template.template"]], "vformat() (string.formatter method)": [[361, "string.Formatter.vformat"]], "whitespace (in module string)": [[361, "string.whitespace"]], "z": [[361, "index-5"]], "rfc 3454": [[362, "index-0"], [362, "index-1"]], "in_table_a1() (in module stringprep)": [[362, "stringprep.in_table_a1"]], "in_table_b1() (in module stringprep)": [[362, "stringprep.in_table_b1"]], "in_table_c11() (in module stringprep)": [[362, "stringprep.in_table_c11"]], "in_table_c11_c12() (in module stringprep)": [[362, "stringprep.in_table_c11_c12"]], "in_table_c12() (in module stringprep)": [[362, "stringprep.in_table_c12"]], "in_table_c21() (in module stringprep)": [[362, "stringprep.in_table_c21"]], "in_table_c21_c22() (in module stringprep)": [[362, "stringprep.in_table_c21_c22"]], "in_table_c22() (in module stringprep)": [[362, "stringprep.in_table_c22"]], "in_table_c3() (in module stringprep)": [[362, "stringprep.in_table_c3"]], "in_table_c4() (in module stringprep)": [[362, "stringprep.in_table_c4"]], "in_table_c5() (in module stringprep)": [[362, "stringprep.in_table_c5"]], "in_table_c6() (in module stringprep)": [[362, "stringprep.in_table_c6"]], "in_table_c7() (in module stringprep)": [[362, "stringprep.in_table_c7"]], "in_table_c8() (in module stringprep)": [[362, "stringprep.in_table_c8"]], "in_table_c9() (in module stringprep)": [[362, "stringprep.in_table_c9"]], "in_table_d1() (in module stringprep)": [[362, "stringprep.in_table_d1"]], "in_table_d2() (in module stringprep)": [[362, "stringprep.in_table_d2"]], "map_table_b2() (in module stringprep)": [[362, "stringprep.map_table_b2"]], "map_table_b3() (in module stringprep)": [[362, "stringprep.map_table_b3"]], "stringprep": [[362, "module-stringprep"]], "@ (at)": [[363, "index-1"], [442, "index-29"], [442, "index-43"], [445, "index-66"]], "struct (class in struct)": [[363, "struct.Struct"]], "calcsize() (in module struct)": [[363, "struct.calcsize"]], "format (struct.struct attribute)": [[363, "struct.Struct.format"]], "in struct format strings": [[363, "index-1"], [363, "index-2"], [363, "index-3"]], "iter_unpack() (in module struct)": [[363, "struct.iter_unpack"]], "iter_unpack() (struct.struct method)": [[363, "struct.Struct.iter_unpack"]], "pack() (in module struct)": [[363, "struct.pack"]], "pack() (struct.struct method)": [[363, "struct.Struct.pack"]], "pack_into() (in module struct)": [[363, "struct.pack_into"]], "pack_into() (struct.struct method)": [[363, "struct.Struct.pack_into"]], "packing": [[363, "index-0"]], "size (struct.struct attribute)": [[363, "struct.Struct.size"]], "structures": [[363, "index-0"]], "unpack() (in module struct)": [[363, "struct.unpack"]], "unpack() (struct.struct method)": [[363, "struct.Struct.unpack"]], "unpack_from() (in module struct)": [[363, "struct.unpack_from"]], "unpack_from() (struct.struct method)": [[363, "struct.Struct.unpack_from"]], "above_normal_priority_class (in module subprocess)": [[364, "subprocess.ABOVE_NORMAL_PRIORITY_CLASS"]], "below_normal_priority_class (in module subprocess)": [[364, "subprocess.BELOW_NORMAL_PRIORITY_CLASS"]], "create_breakaway_from_job (in module subprocess)": [[364, "subprocess.CREATE_BREAKAWAY_FROM_JOB"]], "create_default_error_mode (in module subprocess)": [[364, "subprocess.CREATE_DEFAULT_ERROR_MODE"]], "create_new_console (in module subprocess)": [[364, "subprocess.CREATE_NEW_CONSOLE"]], "create_new_process_group (in module subprocess)": [[364, "subprocess.CREATE_NEW_PROCESS_GROUP"]], "create_no_window (in module subprocess)": [[364, "subprocess.CREATE_NO_WINDOW"]], "calledprocesserror": [[364, "subprocess.CalledProcessError"]], "completedprocess (class in subprocess)": [[364, "subprocess.CompletedProcess"]], "detached_process (in module subprocess)": [[364, "subprocess.DETACHED_PROCESS"]], "devnull (in module subprocess)": [[364, "subprocess.DEVNULL"]], "high_priority_class (in module subprocess)": [[364, "subprocess.HIGH_PRIORITY_CLASS"]], "idle_priority_class (in module subprocess)": [[364, "subprocess.IDLE_PRIORITY_CLASS"]], "normal_priority_class (in module subprocess)": [[364, "subprocess.NORMAL_PRIORITY_CLASS"]], "pep 324": [[364, "index-0"], [481, "index-8"]], "pipe (in module subprocess)": [[364, "subprocess.PIPE"]], "popen (class in subprocess)": [[364, "subprocess.Popen"]], "realtime_priority_class (in module subprocess)": [[364, "subprocess.REALTIME_PRIORITY_CLASS"]], "startf_useshowwindow (in module subprocess)": [[364, "subprocess.STARTF_USESHOWWINDOW"]], "startf_usestdhandles (in module subprocess)": [[364, "subprocess.STARTF_USESTDHANDLES"]], "startupinfo (class in subprocess)": [[364, "subprocess.STARTUPINFO"]], "stdout (in module subprocess)": [[364, "subprocess.STDOUT"]], "std_error_handle (in module subprocess)": [[364, "subprocess.STD_ERROR_HANDLE"]], "std_input_handle (in module subprocess)": [[364, "subprocess.STD_INPUT_HANDLE"]], "std_output_handle (in module subprocess)": [[364, "subprocess.STD_OUTPUT_HANDLE"]], "sw_hide (in module subprocess)": [[364, "subprocess.SW_HIDE"]], "subprocesserror": [[364, "subprocess.SubprocessError"]], "systemroot": [[364, "index-4"]], "timeoutexpired": [[364, "subprocess.TimeoutExpired"]], "args (subprocess.completedprocess attribute)": [[364, "subprocess.CompletedProcess.args"]], "args (subprocess.popen attribute)": [[364, "subprocess.Popen.args"]], "call() (in module subprocess)": [[364, "subprocess.call"]], "check_call() (in module subprocess)": [[364, "subprocess.check_call"]], "check_output() (in module subprocess)": [[364, "subprocess.check_output"]], "check_returncode() (subprocess.completedprocess method)": [[364, "subprocess.CompletedProcess.check_returncode"]], "cmd (subprocess.calledprocesserror attribute)": [[364, "subprocess.CalledProcessError.cmd"]], "cmd (subprocess.timeoutexpired attribute)": [[364, "subprocess.TimeoutExpired.cmd"]], "communicate() (subprocess.popen method)": [[364, "subprocess.Popen.communicate"]], "dwflags (subprocess.startupinfo attribute)": [[364, "subprocess.STARTUPINFO.dwFlags"]], "getoutput() (in module subprocess)": [[364, "subprocess.getoutput"]], "getstatusoutput() (in module subprocess)": [[364, "subprocess.getstatusoutput"]], "hstderror (subprocess.startupinfo attribute)": [[364, "subprocess.STARTUPINFO.hStdError"]], "hstdinput (subprocess.startupinfo attribute)": [[364, "subprocess.STARTUPINFO.hStdInput"]], "hstdoutput (subprocess.startupinfo attribute)": [[364, "subprocess.STARTUPINFO.hStdOutput"]], "kill() (subprocess.popen method)": [[364, "subprocess.Popen.kill"]], "lpattributelist (subprocess.startupinfo attribute)": [[364, "subprocess.STARTUPINFO.lpAttributeList"]], "output (subprocess.calledprocesserror attribute)": [[364, "subprocess.CalledProcessError.output"]], "output (subprocess.timeoutexpired attribute)": [[364, "subprocess.TimeoutExpired.output"]], "pid (subprocess.popen attribute)": [[364, "subprocess.Popen.pid"]], "poll() (subprocess.popen method)": [[364, "subprocess.Popen.poll"]], "returncode (subprocess.calledprocesserror attribute)": [[364, "subprocess.CalledProcessError.returncode"]], "returncode (subprocess.completedprocess attribute)": [[364, "subprocess.CompletedProcess.returncode"]], "returncode (subprocess.popen attribute)": [[364, "subprocess.Popen.returncode"]], "run() (in module subprocess)": [[364, "subprocess.run"]], "send_signal() (subprocess.popen method)": [[364, "subprocess.Popen.send_signal"]], "stderr (subprocess.calledprocesserror attribute)": [[364, "subprocess.CalledProcessError.stderr"]], "stderr (subprocess.completedprocess attribute)": [[364, "subprocess.CompletedProcess.stderr"]], "stderr (subprocess.popen attribute)": [[364, "subprocess.Popen.stderr"]], "stderr (subprocess.timeoutexpired attribute)": [[364, "subprocess.TimeoutExpired.stderr"]], "stdin (subprocess.popen attribute)": [[364, "subprocess.Popen.stdin"]], "stdout (subprocess.calledprocesserror attribute)": [[364, "subprocess.CalledProcessError.stdout"]], "stdout (subprocess.completedprocess attribute)": [[364, "subprocess.CompletedProcess.stdout"]], "stdout (subprocess.popen attribute)": [[364, "subprocess.Popen.stdout"]], "stdout (subprocess.timeoutexpired attribute)": [[364, "subprocess.TimeoutExpired.stdout"]], "subprocess": [[364, "module-subprocess"]], "subprocess module": [[364, "index-1"]], "terminate() (subprocess.popen method)": [[364, "subprocess.Popen.terminate"]], "timeout (subprocess.timeoutexpired attribute)": [[364, "subprocess.TimeoutExpired.timeout"]], "wshowwindow (subprocess.startupinfo attribute)": [[364, "subprocess.STARTUPINFO.wShowWindow"]], "wait() (subprocess.popen method)": [[364, "subprocess.Popen.wait"]], "audio_file_encoding_adpcm_g721 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_ADPCM_G721"]], "audio_file_encoding_adpcm_g722 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_ADPCM_G722"]], "audio_file_encoding_adpcm_g723_3 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_ADPCM_G723_3"]], "audio_file_encoding_adpcm_g723_5 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_ADPCM_G723_5"]], "audio_file_encoding_alaw_8 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_ALAW_8"]], "audio_file_encoding_double (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_DOUBLE"]], "audio_file_encoding_float (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_FLOAT"]], "audio_file_encoding_linear_16 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_LINEAR_16"]], "audio_file_encoding_linear_24 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_LINEAR_24"]], "audio_file_encoding_linear_32 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_LINEAR_32"]], "audio_file_encoding_linear_8 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_LINEAR_8"]], "audio_file_encoding_mulaw_8 (in module sunau)": [[365, "sunau.AUDIO_FILE_ENCODING_MULAW_8"]], "audio_file_magic (in module sunau)": [[365, "sunau.AUDIO_FILE_MAGIC"]], "pep 594#sunau": [[365, "index-0"]], "close() (sunau.au_read method)": [[365, "sunau.AU_read.close"]], "close() (sunau.au_write method)": [[365, "sunau.AU_write.close"]], "getcompname() (sunau.au_read method)": [[365, "sunau.AU_read.getcompname"]], "getcomptype() (sunau.au_read method)": [[365, "sunau.AU_read.getcomptype"]], "getframerate() (sunau.au_read method)": [[365, "sunau.AU_read.getframerate"]], "getmark() (sunau.au_read method)": [[365, "sunau.AU_read.getmark"]], "getmarkers() (sunau.au_read method)": [[365, "sunau.AU_read.getmarkers"]], "getnchannels() (sunau.au_read method)": [[365, "sunau.AU_read.getnchannels"]], "getnframes() (sunau.au_read method)": [[365, "sunau.AU_read.getnframes"]], "getparams() (sunau.au_read method)": [[365, "sunau.AU_read.getparams"]], "getsampwidth() (sunau.au_read method)": [[365, "sunau.AU_read.getsampwidth"]], "open() (in module sunau)": [[365, "sunau.open"]], "readframes() (sunau.au_read method)": [[365, "sunau.AU_read.readframes"]], "rewind() (sunau.au_read method)": [[365, "sunau.AU_read.rewind"]], "setcomptype() (sunau.au_write method)": [[365, "sunau.AU_write.setcomptype"]], "setframerate() (sunau.au_write method)": [[365, "sunau.AU_write.setframerate"]], "setnchannels() (sunau.au_write method)": [[365, "sunau.AU_write.setnchannels"]], "setnframes() (sunau.au_write method)": [[365, "sunau.AU_write.setnframes"]], "setparams() (sunau.au_write method)": [[365, "sunau.AU_write.setparams"]], "setpos() (sunau.au_read method)": [[365, "sunau.AU_read.setpos"]], "setsampwidth() (sunau.au_write method)": [[365, "sunau.AU_write.setsampwidth"]], "sunau": [[365, "module-sunau"]], "tell() (sunau.au_read method)": [[365, "sunau.AU_read.tell"]], "tell() (sunau.au_write method)": [[365, "sunau.AU_write.tell"]], "writeframes() (sunau.au_write method)": [[365, "sunau.AU_write.writeframes"]], "writeframesraw() (sunau.au_write method)": [[365, "sunau.AU_write.writeframesraw"]], "class (class in symtable)": [[367, "symtable.Class"]], "function (class in symtable)": [[367, "symtable.Function"]], "symbol (class in symtable)": [[367, "symtable.Symbol"]], "symboltable (class in symtable)": [[367, "symtable.SymbolTable"]], "get_children() (symtable.symboltable method)": [[367, "symtable.SymbolTable.get_children"]], "get_frees() (symtable.function method)": [[367, "symtable.Function.get_frees"]], "get_globals() (symtable.function method)": [[367, "symtable.Function.get_globals"]], "get_id() (symtable.symboltable method)": [[367, "symtable.SymbolTable.get_id"]], "get_identifiers() (symtable.symboltable method)": [[367, "symtable.SymbolTable.get_identifiers"]], "get_lineno() (symtable.symboltable method)": [[367, "symtable.SymbolTable.get_lineno"]], "get_locals() (symtable.function method)": [[367, "symtable.Function.get_locals"]], "get_methods() (symtable.class method)": [[367, "symtable.Class.get_methods"]], "get_name() (symtable.symbol method)": [[367, "symtable.Symbol.get_name"]], "get_name() (symtable.symboltable method)": [[367, "symtable.SymbolTable.get_name"]], "get_namespace() (symtable.symbol method)": [[367, "symtable.Symbol.get_namespace"]], "get_namespaces() (symtable.symbol method)": [[367, "symtable.Symbol.get_namespaces"]], "get_nonlocals() (symtable.function method)": [[367, "symtable.Function.get_nonlocals"]], "get_parameters() (symtable.function method)": [[367, "symtable.Function.get_parameters"]], "get_symbols() (symtable.symboltable method)": [[367, "symtable.SymbolTable.get_symbols"]], "get_type() (symtable.symboltable method)": [[367, "symtable.SymbolTable.get_type"]], "has_children() (symtable.symboltable method)": [[367, "symtable.SymbolTable.has_children"]], "is_annotated() (symtable.symbol method)": [[367, "symtable.Symbol.is_annotated"]], "is_assigned() (symtable.symbol method)": [[367, "symtable.Symbol.is_assigned"]], "is_declared_global() (symtable.symbol method)": [[367, "symtable.Symbol.is_declared_global"]], "is_free() (symtable.symbol method)": [[367, "symtable.Symbol.is_free"]], "is_global() (symtable.symbol method)": [[367, "symtable.Symbol.is_global"]], "is_imported() (symtable.symbol method)": [[367, "symtable.Symbol.is_imported"]], "is_local() (symtable.symbol method)": [[367, "symtable.Symbol.is_local"]], "is_namespace() (symtable.symbol method)": [[367, "symtable.Symbol.is_namespace"]], "is_nested() (symtable.symboltable method)": [[367, "symtable.SymbolTable.is_nested"]], "is_nonlocal() (symtable.symbol method)": [[367, "symtable.Symbol.is_nonlocal"]], "is_optimized() (symtable.symboltable method)": [[367, "symtable.SymbolTable.is_optimized"]], "is_parameter() (symtable.symbol method)": [[367, "symtable.Symbol.is_parameter"]], "is_referenced() (symtable.symbol method)": [[367, "symtable.Symbol.is_referenced"]], "lookup() (symtable.symboltable method)": [[367, "symtable.SymbolTable.lookup"]], "symtable": [[367, "module-symtable"]], "symtable() (in module symtable)": [[367, "symtable.symtable"]], "pep 3149": [[368, "index-0"], [489, "index-6"]], "pep 421": [[368, "index-15"], [368, "index-16"], [490, "index-19"]], "__breakpointhook__ (in module sys)": [[368, "sys.__breakpointhook__"]], "__displayhook__ (in module sys)": [[368, "sys.__displayhook__"]], "__excepthook__ (in module sys)": [[368, "sys.__excepthook__"]], "__interactivehook__ (in module sys)": [[368, "sys.__interactivehook__"]], "__stderr__ (in module sys)": [[368, "sys.__stderr__"]], "__stdin__ (in module sys)": [[368, "sys.__stdin__"]], "__stdout__ (in module sys)": [[368, "sys.__stdout__"]], "__unraisablehook__ (in module sys)": [[368, "sys.__unraisablehook__"]], "_clear_type_cache() (in module sys)": [[368, "sys._clear_type_cache"]], "_current_exceptions() (in module sys)": [[368, "sys._current_exceptions"]], "_current_frames() (in module sys)": [[368, "sys._current_frames"]], "_debugmallocstats() (in module sys)": [[368, "sys._debugmallocstats"]], "_emscripten_info (in module sys)": [[368, "sys._emscripten_info"]], "_enablelegacywindowsfsencoding() (in module sys)": [[368, "sys._enablelegacywindowsfsencoding"]], "_getframe() (in module sys)": [[368, "sys._getframe"]], "_xoptions (in module sys)": [[368, "sys._xoptions"]], "abiflags (in module sys)": [[368, "sys.abiflags"]], "addaudithook() (in module sys)": [[368, "sys.addaudithook"]], "algorithm (sys.hash_info attribute)": [[368, "sys.hash_info.algorithm"]], "api_version (in module sys)": [[368, "sys.api_version"]], "audit() (in module sys)": [[368, "sys.audit"]], "auditing": [[368, "index-2"]], "base_exec_prefix (in module sys)": [[368, "sys.base_exec_prefix"]], "base_prefix (in module sys)": [[368, "sys.base_prefix"]], "bits_per_digit (sys.int_info attribute)": [[368, "sys.int_info.bits_per_digit"]], "breakpointhook() (in module sys)": [[368, "sys.breakpointhook"]], "builtin_module_names (in module sys)": [[368, "sys.builtin_module_names"]], "byteorder (in module sys)": [[368, "sys.byteorder"]], "bytes_warning (sys.flags attribute)": [[368, "sys.flags.bytes_warning"]], "call_tracing() (in module sys)": [[368, "sys.call_tracing"]], "debug (sys.flags attribute)": [[368, "sys.flags.debug"]], "default_max_str_digits (sys.int_info attribute)": [[368, "sys.int_info.default_max_str_digits"]], "dev_mode (sys.flags attribute)": [[368, "sys.flags.dev_mode"]], "dig (sys.float_info attribute)": [[368, "sys.float_info.dig"]], "displayhook() (in module sys)": [[368, "sys.displayhook"]], "dllhandle (in module sys)": [[368, "sys.dllhandle"]], "dont_write_bytecode (in module sys)": [[368, "sys.dont_write_bytecode"]], "dont_write_bytecode (sys.flags attribute)": [[368, "sys.flags.dont_write_bytecode"]], "emscripten_version (sys._emscripten_info attribute)": [[368, "sys._emscripten_info.emscripten_version"]], "epsilon (sys.float_info attribute)": [[368, "sys.float_info.epsilon"]], "exc_info() (in module sys)": [[368, "sys.exc_info"]], "exception() (in module sys)": [[368, "sys.exception"]], "exec_prefix (in module sys)": [[368, "sys.exec_prefix"]], "exit() (in module sys)": [[368, "sys.exit"]], "flags (in module sys)": [[368, "sys.flags"]], "float_info (in module sys)": [[368, "sys.float_info"]], "float_repr_style (in module sys)": [[368, "sys.float_repr_style"]], "get_asyncgen_hooks() (in module sys)": [[368, "sys.get_asyncgen_hooks"]], "get_coroutine_origin_tracking_depth() (in module sys)": [[368, "sys.get_coroutine_origin_tracking_depth"]], "get_int_max_str_digits() (in module sys)": [[368, "sys.get_int_max_str_digits"]], "getallocatedblocks() (in module sys)": [[368, "sys.getallocatedblocks"]], "getandroidapilevel() (in module sys)": [[368, "sys.getandroidapilevel"]], "getdefaultencoding() (in module sys)": [[368, "sys.getdefaultencoding"]], "getdlopenflags() (in module sys)": [[368, "sys.getdlopenflags"]], "getfilesystemencodeerrors() (in module sys)": [[368, "sys.getfilesystemencodeerrors"]], "getfilesystemencoding() (in module sys)": [[368, "sys.getfilesystemencoding"]], "getprofile() (in module sys)": [[368, "sys.getprofile"]], "getrecursionlimit() (in module sys)": [[368, "sys.getrecursionlimit"]], "getrefcount() (in module sys)": [[368, "sys.getrefcount"]], "getsizeof() (in module sys)": [[368, "sys.getsizeof"]], "getswitchinterval() (in module sys)": [[368, "sys.getswitchinterval"]], "gettrace() (in module sys)": [[368, "sys.gettrace"]], "getwindowsversion() (in module sys)": [[368, "sys.getwindowsversion"]], "hash_bits (sys.hash_info attribute)": [[368, "sys.hash_info.hash_bits"]], "hash_info (in module sys)": [[368, "sys.hash_info"]], "hash_randomization (sys.flags attribute)": [[368, "sys.flags.hash_randomization"]], "hexversion (in module sys)": [[368, "sys.hexversion"]], "ignore_environment (sys.flags attribute)": [[368, "sys.flags.ignore_environment"]], "imag (sys.hash_info attribute)": [[368, "sys.hash_info.imag"]], "implementation (in module sys)": [[368, "sys.implementation"]], "inf (sys.hash_info attribute)": [[368, "sys.hash_info.inf"]], "inspect (sys.flags attribute)": [[368, "sys.flags.inspect"]], "int_info (in module sys)": [[368, "sys.int_info"]], "int_max_str_digits (sys.flags attribute)": [[368, "sys.flags.int_max_str_digits"]], "interactive (sys.flags attribute)": [[368, "sys.flags.interactive"]], "intern() (in module sys)": [[368, "sys.intern"]], "interpreter prompts": [[368, "index-27"]], "is_finalizing() (in module sys)": [[368, "sys.is_finalizing"]], "isolated (sys.flags attribute)": [[368, "sys.flags.isolated"]], "last_traceback (in module sys)": [[368, "sys.last_traceback"], [443, "index-66"]], "last_type (in module sys)": [[368, "sys.last_type"]], "last_value (in module sys)": [[368, "sys.last_value"]], "lock (sys.thread_info attribute)": [[368, "sys.thread_info.lock"]], "mant_dig (sys.float_info attribute)": [[368, "sys.float_info.mant_dig"]], "max (sys.float_info attribute)": [[368, "sys.float_info.max"]], "max_10_exp (sys.float_info attribute)": [[368, "sys.float_info.max_10_exp"]], "max_exp (sys.float_info attribute)": [[368, "sys.float_info.max_exp"]], "maxsize (in module sys)": [[368, "sys.maxsize"]], "maxunicode (in module sys)": [[368, "sys.maxunicode"]], "meta_path (in module sys)": [[368, "sys.meta_path"]], "min (sys.float_info attribute)": [[368, "sys.float_info.min"]], "min_10_exp (sys.float_info attribute)": [[368, "sys.float_info.min_10_exp"]], "min_exp (sys.float_info attribute)": [[368, "sys.float_info.min_exp"]], "modulus (sys.hash_info attribute)": [[368, "sys.hash_info.modulus"]], "name (sys.thread_info attribute)": [[368, "sys.thread_info.name"]], "nan (sys.hash_info attribute)": [[368, "sys.hash_info.nan"]], "no_site (sys.flags attribute)": [[368, "sys.flags.no_site"]], "no_user_site (sys.flags attribute)": [[368, "sys.flags.no_user_site"]], "optimize (sys.flags attribute)": [[368, "sys.flags.optimize"]], "orig_argv (in module sys)": [[368, "sys.orig_argv"]], "path_hooks (in module sys)": [[368, "sys.path_hooks"]], "path_importer_cache (in module sys)": [[368, "sys.path_importer_cache"]], "platlibdir (in module sys)": [[368, "sys.platlibdir"]], "prefix (in module sys)": [[368, "sys.prefix"]], "profile function": [[368, "index-10"], [368, "index-28"], [380, "index-2"], [380, "index-3"]], "profiler": [[368, "index-10"], [368, "index-28"]], "prompts, interpreter": [[368, "index-27"]], "ps1 (in module sys)": [[368, "sys.ps1"]], "ps2 (in module sys)": [[368, "sys.ps2"]], "pthreads (sys._emscripten_info attribute)": [[368, "sys._emscripten_info.pthreads"]], "pycache_prefix (in module sys)": [[368, "sys.pycache_prefix"]], "quiet (sys.flags attribute)": [[368, "sys.flags.quiet"]], "radix (sys.float_info attribute)": [[368, "sys.float_info.radix"]], "rounds (sys.float_info attribute)": [[368, "sys.float_info.rounds"]], "runtime (sys._emscripten_info attribute)": [[368, "sys._emscripten_info.runtime"]], "safe_path (sys.flags attribute)": [[368, "sys.flags.safe_path"]], "seed_bits (sys.hash_info attribute)": [[368, "sys.hash_info.seed_bits"]], "set_asyncgen_hooks() (in module sys)": [[368, "sys.set_asyncgen_hooks"]], "set_coroutine_origin_tracking_depth() (in module sys)": [[368, "sys.set_coroutine_origin_tracking_depth"]], "set_int_max_str_digits() (in module sys)": [[368, "sys.set_int_max_str_digits"]], "setdlopenflags() (in module sys)": [[368, "sys.setdlopenflags"]], "setprofile() (in module sys)": [[368, "sys.setprofile"]], "setrecursionlimit() (in module sys)": [[368, "sys.setrecursionlimit"]], "setswitchinterval() (in module sys)": [[368, "sys.setswitchinterval"]], "settrace() (in module sys)": [[368, "sys.settrace"]], "shared_memory (sys._emscripten_info attribute)": [[368, "sys._emscripten_info.shared_memory"]], "sizeof_digit (sys.int_info attribute)": [[368, "sys.int_info.sizeof_digit"]], "stdlib_module_names (in module sys)": [[368, "sys.stdlib_module_names"]], "str_digits_check_threshold (sys.int_info attribute)": [[368, "sys.int_info.str_digits_check_threshold"]], "thread_info (in module sys)": [[368, "sys.thread_info"]], "trace function": [[368, "index-11"], [368, "index-29"], [380, "index-0"], [380, "index-1"]], "traceback": [[368, "index-8"], [396, "index-0"], [396, "module-traceback"], [442, "index-11"], [443, "index-66"], [451, "index-28"]], "tracebacklimit (in module sys)": [[368, "sys.tracebacklimit"]], "unraisablehook() (in module sys)": [[368, "sys.unraisablehook"]], "utf8_mode (sys.flags attribute)": [[368, "sys.flags.utf8_mode"]], "verbose (sys.flags attribute)": [[368, "sys.flags.verbose"]], "version (sys.thread_info attribute)": [[368, "sys.thread_info.version"]], "version_info (in module sys)": [[368, "sys.version_info"]], "warn_default_encoding (sys.flags attribute)": [[368, "sys.flags.warn_default_encoding"]], "warnoptions (in module sys)": [[368, "sys.warnoptions"]], "width (sys.hash_info attribute)": [[368, "sys.hash_info.width"]], "winver (in module sys)": [[368, "sys.winver"]], "_get_preferred_schemes() (in module sysconfig)": [[370, "sysconfig._get_preferred_schemes"]], "configuration information": [[370, "index-0"]], "get_config_h_filename() (in module sysconfig)": [[370, "sysconfig.get_config_h_filename"]], "get_config_var() (in module sysconfig)": [[370, "sysconfig.get_config_var"]], "get_config_vars() (in module sysconfig)": [[370, "sysconfig.get_config_vars"]], "get_default_scheme() (in module sysconfig)": [[370, "sysconfig.get_default_scheme"]], "get_makefile_filename() (in module sysconfig)": [[370, "sysconfig.get_makefile_filename"]], "get_path() (in module sysconfig)": [[370, "sysconfig.get_path"]], "get_path_names() (in module sysconfig)": [[370, "sysconfig.get_path_names"]], "get_paths() (in module sysconfig)": [[370, "sysconfig.get_paths"]], "get_platform() (in module sysconfig)": [[370, "sysconfig.get_platform"]], "get_preferred_scheme() (in module sysconfig)": [[370, "sysconfig.get_preferred_scheme"]], "get_python_version() (in module sysconfig)": [[370, "sysconfig.get_python_version"]], "get_scheme_names() (in module sysconfig)": [[370, "sysconfig.get_scheme_names"]], "is_python_build() (in module sysconfig)": [[370, "sysconfig.is_python_build"]], "parse_config_h() (in module sysconfig)": [[370, "sysconfig.parse_config_h"]], "sysconfig": [[370, "module-sysconfig"]], "closelog() (in module syslog)": [[371, "syslog.closelog"]], "openlog() (in module syslog)": [[371, "syslog.openlog"]], "setlogmask() (in module syslog)": [[371, "syslog.setlogmask"]], "syslog": [[371, "module-syslog"]], "syslog() (in module syslog)": [[371, "syslog.syslog"]], "nannynag": [[372, "tabnanny.NannyNag"]], "check() (in module tabnanny)": [[372, "tabnanny.check"]], "filename_only (in module tabnanny)": [[372, "tabnanny.filename_only"]], "process_tokens() (in module tabnanny)": [[372, "tabnanny.process_tokens"]], "tabnanny": [[372, "module-tabnanny"]], "verbose (in module tabnanny)": [[372, "tabnanny.verbose"]], "--create": [[373, "cmdoption-tarfile-create"], [437, "cmdoption-zipfile-create"]], "--extract": [[373, "cmdoption-tarfile-extract"], [437, "cmdoption-zipfile-extract"]], "--filter": [[373, "cmdoption-tarfile-filter"]], "--list": [[373, "cmdoption-tarfile-list"], [437, "cmdoption-zipfile-list"]], "--test": [[373, "cmdoption-tarfile-test"], [437, "cmdoption-zipfile-test"]], "--verbose": [[373, "cmdoption-tarfile-v"], [382, "cmdoption-timeit-v"], [403, "cmdoption-unittest-discover-v"]], "-v": [[373, "cmdoption-tarfile-v"], [382, "cmdoption-timeit-v"], [403, "cmdoption-unittest-discover-v"], [470, "cmdoption-V"], [470, "cmdoption-v"]], "aregtype (in module tarfile)": [[373, "tarfile.AREGTYPE"]], "absolutelinkerror": [[373, "tarfile.AbsoluteLinkError"]], "absolutepatherror": [[373, "tarfile.AbsolutePathError"]], "blktype (in module tarfile)": [[373, "tarfile.BLKTYPE"]], "chrtype (in module tarfile)": [[373, "tarfile.CHRTYPE"]], "conttype (in module tarfile)": [[373, "tarfile.CONTTYPE"]], "compressionerror": [[373, "tarfile.CompressionError"]], "default_format (in module tarfile)": [[373, "tarfile.DEFAULT_FORMAT"]], "dirtype (in module tarfile)": [[373, "tarfile.DIRTYPE"]], "encoding (in module tarfile)": [[373, "tarfile.ENCODING"]], "extracterror": [[373, "tarfile.ExtractError"]], "fifotype (in module tarfile)": [[373, "tarfile.FIFOTYPE"]], "filtererror": [[373, "tarfile.FilterError"]], "gnutype_longlink (in module tarfile)": [[373, "tarfile.GNUTYPE_LONGLINK"]], "gnutype_longname (in module tarfile)": [[373, "tarfile.GNUTYPE_LONGNAME"]], "gnutype_sparse (in module tarfile)": [[373, "tarfile.GNUTYPE_SPARSE"]], "gnu_format (in module tarfile)": [[373, "tarfile.GNU_FORMAT"]], "headererror": [[373, "tarfile.HeaderError"]], "lnktype (in module tarfile)": [[373, "tarfile.LNKTYPE"]], "linkoutsidedestinationerror": [[373, "tarfile.LinkOutsideDestinationError"]], "outsidedestinationerror": [[373, "tarfile.OutsideDestinationError"]], "pax_format (in module tarfile)": [[373, "tarfile.PAX_FORMAT"]], "pep 706": [[373, "index-0"], [487, "index-41"], [488, "index-42"], [495, "index-26"], [496, "index-29"]], "regtype (in module tarfile)": [[373, "tarfile.REGTYPE"]], "readerror": [[373, "tarfile.ReadError"]], "symtype (in module tarfile)": [[373, "tarfile.SYMTYPE"]], "specialfileerror": [[373, "tarfile.SpecialFileError"]], "streamerror": [[373, "tarfile.StreamError"]], "tarerror": [[373, "tarfile.TarError"]], "tarfile (class in tarfile)": [[373, "tarfile.TarFile"]], "tarinfo (class in tarfile)": [[373, "tarfile.TarInfo"]], "ustar_format (in module tarfile)": [[373, "tarfile.USTAR_FORMAT"]], "add() (tarfile.tarfile method)": [[373, "tarfile.TarFile.add"]], "addfile() (tarfile.tarfile method)": [[373, "tarfile.TarFile.addfile"]], "chksum (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.chksum"]], "close() (tarfile.tarfile method)": [[373, "tarfile.TarFile.close"]], "data_filter() (in module tarfile)": [[373, "tarfile.data_filter"]], "devmajor (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.devmajor"]], "devminor (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.devminor"]], "errorlevel (tarfile.tarfile attribute)": [[373, "tarfile.TarFile.errorlevel"]], "extract() (tarfile.tarfile method)": [[373, "tarfile.TarFile.extract"]], "extractall() (tarfile.tarfile method)": [[373, "tarfile.TarFile.extractall"]], "extractfile() (tarfile.tarfile method)": [[373, "tarfile.TarFile.extractfile"]], "extraction_filter (tarfile.tarfile attribute)": [[373, "tarfile.TarFile.extraction_filter"]], "frombuf() (tarfile.tarinfo class method)": [[373, "tarfile.TarInfo.frombuf"]], "fromtarfile() (tarfile.tarinfo class method)": [[373, "tarfile.TarInfo.fromtarfile"]], "fully_trusted_filter() (in module tarfile)": [[373, "tarfile.fully_trusted_filter"]], "getmember() (tarfile.tarfile method)": [[373, "tarfile.TarFile.getmember"]], "getmembers() (tarfile.tarfile method)": [[373, "tarfile.TarFile.getmembers"]], "getnames() (tarfile.tarfile method)": [[373, "tarfile.TarFile.getnames"]], "gettarinfo() (tarfile.tarfile method)": [[373, "tarfile.TarFile.gettarinfo"]], "gid (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.gid"]], "gname (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.gname"]], "is_tarfile() (in module tarfile)": [[373, "tarfile.is_tarfile"]], "isblk() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.isblk"]], "ischr() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.ischr"]], "isdev() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.isdev"]], "isdir() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.isdir"]], "isfifo() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.isfifo"]], "isfile() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.isfile"]], "islnk() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.islnk"]], "isreg() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.isreg"]], "issym() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.issym"]], "linkname (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.linkname"]], "list() (tarfile.tarfile method)": [[373, "tarfile.TarFile.list"]], "mode (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.mode"]], "mtime (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.mtime"]], "name (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.name"]], "next() (tarfile.tarfile method)": [[373, "tarfile.TarFile.next"]], "offset (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.offset"]], "offset_data (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.offset_data"]], "open() (in module tarfile)": [[373, "tarfile.open"]], "open() (tarfile.tarfile class method)": [[373, "tarfile.TarFile.open"]], "pax_headers (tarfile.tarfile attribute)": [[373, "tarfile.TarFile.pax_headers"]], "pax_headers (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.pax_headers"]], "replace() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.replace"]], "size (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.size"]], "sparse (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.sparse"]], "tar_filter() (in module tarfile)": [[373, "tarfile.tar_filter"]], "tarfile": [[373, "module-tarfile"]], "tarfile command line option": [[373, "cmdoption-tarfile-c"], [373, "cmdoption-tarfile-create"], [373, "cmdoption-tarfile-e"], [373, "cmdoption-tarfile-extract"], [373, "cmdoption-tarfile-filter"], [373, "cmdoption-tarfile-l"], [373, "cmdoption-tarfile-list"], [373, "cmdoption-tarfile-t"], [373, "cmdoption-tarfile-test"], [373, "cmdoption-tarfile-v"]], "tarinfo (tarfile.filtererror attribute)": [[373, "tarfile.FilterError.tarinfo"]], "tobuf() (tarfile.tarinfo method)": [[373, "tarfile.TarInfo.tobuf"]], "type (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.type"]], "uid (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.uid"]], "uname (tarfile.tarinfo attribute)": [[373, "tarfile.TarInfo.uname"]], "pep 594#telnetlib": [[374, "index-1"]], "rfc 854": [[374, "index-2"], [374, "index-3"]], "telnet": [[374, "index-0"]], "telnet (class in telnetlib)": [[374, "telnetlib.Telnet"]], "close() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.close"]], "expect() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.expect"]], "fileno() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.fileno"]], "get_socket() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.get_socket"]], "interact() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.interact"]], "msg() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.msg"]], "mt_interact() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.mt_interact"]], "open() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.open"]], "read_all() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_all"]], "read_eager() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_eager"]], "read_lazy() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_lazy"]], "read_sb_data() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_sb_data"]], "read_some() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_some"]], "read_until() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_until"]], "read_very_eager() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_very_eager"]], "read_very_lazy() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.read_very_lazy"]], "set_debuglevel() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.set_debuglevel"]], "set_option_negotiation_callback() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.set_option_negotiation_callback"]], "telnetlib": [[374, "module-telnetlib"]], "write() (telnetlib.telnet method)": [[374, "telnetlib.Telnet.write"]], "namedtemporaryfile() (in module tempfile)": [[375, "tempfile.NamedTemporaryFile"]], "spooledtemporaryfile (class in tempfile)": [[375, "tempfile.SpooledTemporaryFile"]], "temp": [[375, "index-2"], [476, "index-7"]], "tmp": [[375, "index-3"]], "tmpdir": [[375, "index-1"]], "temporarydirectory (class in tempfile)": [[375, "tempfile.TemporaryDirectory"]], "temporaryfile() (in module tempfile)": [[375, "tempfile.TemporaryFile"]], "cleanup() (tempfile.temporarydirectory method)": [[375, "tempfile.TemporaryDirectory.cleanup"]], "file name": [[375, "index-0"]], "gettempdir() (in module tempfile)": [[375, "tempfile.gettempdir"]], "gettempdirb() (in module tempfile)": [[375, "tempfile.gettempdirb"]], "gettempprefix() (in module tempfile)": [[375, "tempfile.gettempprefix"]], "gettempprefixb() (in module tempfile)": [[375, "tempfile.gettempprefixb"]], "mkdtemp() (in module tempfile)": [[375, "tempfile.mkdtemp"]], "mkstemp() (in module tempfile)": [[375, "tempfile.mkstemp"]], "mktemp() (in module tempfile)": [[375, "tempfile.mktemp"]], "name (tempfile.temporarydirectory attribute)": [[375, "tempfile.TemporaryDirectory.name"]], "rollover() (tempfile.spooledtemporaryfile method)": [[375, "tempfile.SpooledTemporaryFile.rollover"]], "tempdir (in module tempfile)": [[375, "tempfile.tempdir"]], "tempfile": [[375, "module-tempfile"]], "temporary": [[375, "index-0"]], "tcsadrain (in module termios)": [[376, "termios.TCSADRAIN"]], "tcsaflush (in module termios)": [[376, "termios.TCSAFLUSH"]], "tcsanow (in module termios)": [[376, "termios.TCSANOW"]], "tcdrain() (in module termios)": [[376, "termios.tcdrain"]], "tcflow() (in module termios)": [[376, "termios.tcflow"]], "tcflush() (in module termios)": [[376, "termios.tcflush"]], "tcgetattr() (in module termios)": [[376, "termios.tcgetattr"]], "tcgetwinsize() (in module termios)": [[376, "termios.tcgetwinsize"]], "tcsendbreak() (in module termios)": [[376, "termios.tcsendbreak"]], "tcsetattr() (in module termios)": [[376, "termios.tcsetattr"]], "tcsetwinsize() (in module termios)": [[376, "termios.tcsetwinsize"]], "termios": [[376, "module-termios"]], "tty": [[376, "index-0"], [398, "module-tty"]], "always_eq (in module test.support)": [[377, "test.support.ALWAYS_EQ"]], "bytecodetestcase (class in test.support.bytecode_helper)": [[377, "test.support.bytecode_helper.BytecodeTestCase"]], "cleanimport (class in test.support.import_helper)": [[377, "test.support.import_helper.CleanImport"]], "dirsonsyspath (class in test.support.import_helper)": [[377, "test.support.import_helper.DirsOnSysPath"]], "environmentvarguard (class in test.support.os_helper)": [[377, "test.support.os_helper.EnvironmentVarGuard"]], "fs_nonascii (in module test.support.os_helper)": [[377, "test.support.os_helper.FS_NONASCII"]], "fakepath (class in test.support.os_helper)": [[377, "test.support.os_helper.FakePath"]], "have_docstrings (in module test.support)": [[377, "test.support.HAVE_DOCSTRINGS"]], "internet_timeout (in module test.support)": [[377, "test.support.INTERNET_TIMEOUT"]], "ipv6_enabled (in module test.support.socket_helper)": [[377, "test.support.socket_helper.IPV6_ENABLED"]], "largest (in module test.support)": [[377, "test.support.LARGEST"]], "long_timeout (in module test.support)": [[377, "test.support.LONG_TIMEOUT"]], "loopback_timeout (in module test.support)": [[377, "test.support.LOOPBACK_TIMEOUT"]], "max_py_ssize_t (in module test.support)": [[377, "test.support.MAX_Py_ssize_t"]], "missing_c_docstrings (in module test.support)": [[377, "test.support.MISSING_C_DOCSTRINGS"]], "matcher (class in test.support)": [[377, "test.support.Matcher"]], "never_eq (in module test.support)": [[377, "test.support.NEVER_EQ"]], "pgo (in module test.support)": [[377, "test.support.PGO"]], "pipe_max_size (in module test.support)": [[377, "test.support.PIPE_MAX_SIZE"]], "pythonusersite": [[377, "index-2"]], "resourcedenied": [[377, "test.support.ResourceDenied"]], "savedcwd (in module test.support.os_helper)": [[377, "test.support.os_helper.SAVEDCWD"]], "short_timeout (in module test.support)": [[377, "test.support.SHORT_TIMEOUT"]], "smallest (in module test.support)": [[377, "test.support.SMALLEST"]], "sock_max_size (in module test.support)": [[377, "test.support.SOCK_MAX_SIZE"]], "savesignals (class in test.support)": [[377, "test.support.SaveSignals"]], "suppresscrashreport (class in test.support)": [[377, "test.support.SuppressCrashReport"]], "testfn (in module test.support.os_helper)": [[377, "test.support.os_helper.TESTFN"]], "testfn_nonascii (in module test.support.os_helper)": [[377, "test.support.os_helper.TESTFN_NONASCII"]], "testfn_undecodable (in module test.support.os_helper)": [[377, "test.support.os_helper.TESTFN_UNDECODABLE"]], "testfn_unencodable (in module test.support.os_helper)": [[377, "test.support.os_helper.TESTFN_UNENCODABLE"]], "testfn_unicode (in module test.support.os_helper)": [[377, "test.support.os_helper.TESTFN_UNICODE"]], "test_data_dir (in module test.support)": [[377, "test.support.TEST_DATA_DIR"]], "test_home_dir (in module test.support)": [[377, "test.support.TEST_HOME_DIR"]], "test_http_url (in module test.support)": [[377, "test.support.TEST_HTTP_URL"]], "test_support_dir (in module test.support)": [[377, "test.support.TEST_SUPPORT_DIR"]], "testfailed": [[377, "test.support.TestFailed"]], "warningsrecorder (class in test.support.warnings_helper)": [[377, "test.support.warnings_helper.WarningsRecorder"]], "adjust_int_max_str_digits() (in module test.support)": [[377, "test.support.adjust_int_max_str_digits"]], "anticipate_failure() (in module test.support)": [[377, "test.support.anticipate_failure"]], "args_from_interpreter_flags() (in module test.support)": [[377, "test.support.args_from_interpreter_flags"]], "assertinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [[377, "test.support.bytecode_helper.BytecodeTestCase.assertInBytecode"]], "assertnotinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [[377, "test.support.bytecode_helper.BytecodeTestCase.assertNotInBytecode"]], "assert_python_failure() (in module test.support.script_helper)": [[377, "test.support.script_helper.assert_python_failure"]], "assert_python_ok() (in module test.support.script_helper)": [[377, "test.support.script_helper.assert_python_ok"]], "bigaddrspacetest() (in module test.support)": [[377, "test.support.bigaddrspacetest"]], "bigmemtest() (in module test.support)": [[377, "test.support.bigmemtest"]], "bind_port() (in module test.support.socket_helper)": [[377, "test.support.socket_helper.bind_port"]], "bind_unix_socket() (in module test.support.socket_helper)": [[377, "test.support.socket_helper.bind_unix_socket"]], "busy_retry() (in module test.support)": [[377, "test.support.busy_retry"]], "calcobjsize() (in module test.support)": [[377, "test.support.calcobjsize"]], "calcvobjsize() (in module test.support)": [[377, "test.support.calcvobjsize"]], "can_symlink() (in module test.support.os_helper)": [[377, "test.support.os_helper.can_symlink"]], "can_xattr() (in module test.support.os_helper)": [[377, "test.support.os_helper.can_xattr"]], "captured_stderr() (in module test.support)": [[377, "test.support.captured_stderr"]], "captured_stdin() (in module test.support)": [[377, "test.support.captured_stdin"]], "captured_stdout() (in module test.support)": [[377, "test.support.captured_stdout"]], "catch_threading_exception() (in module test.support.threading_helper)": [[377, "test.support.threading_helper.catch_threading_exception"]], "catch_unraisable_exception() (in module test.support)": [[377, "test.support.catch_unraisable_exception"]], "change_cwd() (in module test.support.os_helper)": [[377, "test.support.os_helper.change_cwd"]], "check__all__() (in module test.support)": [[377, "test.support.check__all__"]], "check_disallow_instantiation() (in module test.support)": [[377, "test.support.check_disallow_instantiation"]], "check_free_after_iterating() (in module test.support)": [[377, "test.support.check_free_after_iterating"]], "check_impl_detail() (in module test.support)": [[377, "test.support.check_impl_detail"]], "check_no_resource_warning() (in module test.support.warnings_helper)": [[377, "test.support.warnings_helper.check_no_resource_warning"]], "check_syntax_error() (in module test.support)": [[377, "test.support.check_syntax_error"]], "check_syntax_warning() (in module test.support.warnings_helper)": [[377, "test.support.warnings_helper.check_syntax_warning"]], "check_warnings() (in module test.support.warnings_helper)": [[377, "test.support.warnings_helper.check_warnings"]], "checksizeof() (in module test.support)": [[377, "test.support.checksizeof"]], "cpython_only() (in module test.support)": [[377, "test.support.cpython_only"]], "create_empty_file() (in module test.support.os_helper)": [[377, "test.support.os_helper.create_empty_file"]], "detect_api_mismatch() (in module test.support)": [[377, "test.support.detect_api_mismatch"]], "disable_faulthandler() (in module test.support)": [[377, "test.support.disable_faulthandler"]], "disable_gc() (in module test.support)": [[377, "test.support.disable_gc"]], "fd_count() (in module test.support.os_helper)": [[377, "test.support.os_helper.fd_count"]], "find_unused_port() (in module test.support.socket_helper)": [[377, "test.support.socket_helper.find_unused_port"]], "findfile() (in module test.support)": [[377, "test.support.findfile"]], "flush_std_streams() (in module test.support)": [[377, "test.support.flush_std_streams"]], "forget() (in module test.support.import_helper)": [[377, "test.support.import_helper.forget"]], "fs_is_case_insensitive() (in module test.support.os_helper)": [[377, "test.support.os_helper.fs_is_case_insensitive"]], "gc_collect() (in module test.support)": [[377, "test.support.gc_collect"]], "get_attribute() (in module test.support)": [[377, "test.support.get_attribute"]], "get_disassembly_as_string() (test.support.bytecode_helper.bytecodetestcase method)": [[377, "test.support.bytecode_helper.BytecodeTestCase.get_disassembly_as_string"]], "get_original_stdout() (in module test.support)": [[377, "test.support.get_original_stdout"]], "ignore_warnings() (in module test.support.warnings_helper)": [[377, "test.support.warnings_helper.ignore_warnings"]], "impl_detail() (in module test.support)": [[377, "test.support.impl_detail"]], "import_fresh_module() (in module test.support.import_helper)": [[377, "test.support.import_helper.import_fresh_module"]], "import_module() (in module test.support.import_helper)": [[377, "test.support.import_helper.import_module"]], "interpreter_requires_environment() (in module test.support.script_helper)": [[377, "test.support.script_helper.interpreter_requires_environment"]], "is_android (in module test.support)": [[377, "test.support.is_android"]], "is_jython (in module test.support)": [[377, "test.support.is_jython"]], "is_resource_enabled() (in module test.support)": [[377, "test.support.is_resource_enabled"]], "join_thread() (in module test.support.threading_helper)": [[377, "test.support.threading_helper.join_thread"]], "kill_python() (in module test.support.script_helper)": [[377, "test.support.script_helper.kill_python"]], "load_package_tests() (in module test.support)": [[377, "test.support.load_package_tests"]], "make_bad_fd() (in module test.support.os_helper)": [[377, "test.support.os_helper.make_bad_fd"]], "make_legacy_pyc() (in module test.support.import_helper)": [[377, "test.support.import_helper.make_legacy_pyc"]], "make_pkg() (in module test.support.script_helper)": [[377, "test.support.script_helper.make_pkg"]], "make_script() (in module test.support.script_helper)": [[377, "test.support.script_helper.make_script"]], "make_zip_pkg() (in module test.support.script_helper)": [[377, "test.support.script_helper.make_zip_pkg"]], "make_zip_script() (in module test.support.script_helper)": [[377, "test.support.script_helper.make_zip_script"]], "match_value() (test.support.matcher method)": [[377, "test.support.Matcher.match_value"]], "matches() (test.support.matcher method)": [[377, "test.support.Matcher.matches"]], "max_memuse (in module test.support)": [[377, "test.support.max_memuse"]], "missing_compiler_executable() (in module test.support)": [[377, "test.support.missing_compiler_executable"]], "modules_cleanup() (in module test.support.import_helper)": [[377, "test.support.import_helper.modules_cleanup"]], "modules_setup() (in module test.support.import_helper)": [[377, "test.support.import_helper.modules_setup"]], "no_tracing() (in module test.support)": [[377, "test.support.no_tracing"]], "open_urlresource() (in module test.support)": [[377, "test.support.open_urlresource"]], "optim_args_from_interpreter_flags() (in module test.support)": [[377, "test.support.optim_args_from_interpreter_flags"]], "patch() (in module test.support)": [[377, "test.support.patch"]], "print_warning() (in module test.support)": [[377, "test.support.print_warning"]], "python_is_optimized() (in module test.support)": [[377, "test.support.python_is_optimized"]], "real_max_memuse (in module test.support)": [[377, "test.support.real_max_memuse"]], "reap_children() (in module test.support)": [[377, "test.support.reap_children"]], "reap_threads() (in module test.support.threading_helper)": [[377, "test.support.threading_helper.reap_threads"]], "record_original_stdout() (in module test.support)": [[377, "test.support.record_original_stdout"]], "refcount_test() (in module test.support)": [[377, "test.support.refcount_test"]], "requires() (in module test.support)": [[377, "test.support.requires"]], "requires_ieee_754() (in module test.support)": [[377, "test.support.requires_IEEE_754"]], "requires_bz2() (in module test.support)": [[377, "test.support.requires_bz2"]], "requires_docstrings() (in module test.support)": [[377, "test.support.requires_docstrings"]], "requires_freebsd_version() (in module test.support)": [[377, "test.support.requires_freebsd_version"]], "requires_gzip() (in module test.support)": [[377, "test.support.requires_gzip"]], "requires_linux_version() (in module test.support)": [[377, "test.support.requires_linux_version"]], "requires_lzma() (in module test.support)": [[377, "test.support.requires_lzma"]], "requires_mac_version() (in module test.support)": [[377, "test.support.requires_mac_version"]], "requires_resource() (in module test.support)": [[377, "test.support.requires_resource"]], "requires_zlib() (in module test.support)": [[377, "test.support.requires_zlib"]], "restore() (test.support.savesignals method)": [[377, "test.support.SaveSignals.restore"]], "rmdir() (in module test.support.os_helper)": [[377, "test.support.os_helper.rmdir"]], "rmtree() (in module test.support.os_helper)": [[377, "test.support.os_helper.rmtree"]], "run_in_subinterp() (in module test.support)": [[377, "test.support.run_in_subinterp"]], "run_python_until_end() (in module test.support.script_helper)": [[377, "test.support.script_helper.run_python_until_end"]], "run_with_locale() (in module test.support)": [[377, "test.support.run_with_locale"]], "run_with_tz() (in module test.support)": [[377, "test.support.run_with_tz"]], "save() (test.support.savesignals method)": [[377, "test.support.SaveSignals.save"]], "set() (test.support.os_helper.environmentvarguard method)": [[377, "test.support.os_helper.EnvironmentVarGuard.set"]], "set_memlimit() (in module test.support)": [[377, "test.support.set_memlimit"]], "setswitchinterval() (in module test.support)": [[377, "test.support.setswitchinterval"]], "skip_if_broken_multiprocessing_synchronize() (in module test.support)": [[377, "test.support.skip_if_broken_multiprocessing_synchronize"]], "skip_unless_bind_unix_socket() (in module test.support.socket_helper)": [[377, "test.support.socket_helper.skip_unless_bind_unix_socket"]], "skip_unless_symlink() (in module test.support.os_helper)": [[377, "test.support.os_helper.skip_unless_symlink"]], "skip_unless_xattr() (in module test.support.os_helper)": [[377, "test.support.os_helper.skip_unless_xattr"]], "sleeping_retry() (in module test.support)": [[377, "test.support.sleeping_retry"]], "sortdict() (in module test.support)": [[377, "test.support.sortdict"]], "spawn_python() (in module test.support.script_helper)": [[377, "test.support.script_helper.spawn_python"]], "start_threads() (in module test.support.threading_helper)": [[377, "test.support.threading_helper.start_threads"]], "swap_attr() (in module test.support)": [[377, "test.support.swap_attr"]], "swap_item() (in module test.support)": [[377, "test.support.swap_item"]], "system_must_validate_cert() (in module test.support)": [[377, "test.support.system_must_validate_cert"]], "temp_cwd() (in module test.support.os_helper)": [[377, "test.support.os_helper.temp_cwd"]], "temp_dir() (in module test.support.os_helper)": [[377, "test.support.os_helper.temp_dir"]], "temp_umask() (in module test.support.os_helper)": [[377, "test.support.os_helper.temp_umask"]], "test": [[377, "module-test"], [445, "index-80"], [445, "index-81"]], "test.regrtest": [[377, "module-test.regrtest"]], "test.support": [[377, "module-test.support"]], "test.support.bytecode_helper": [[377, "module-test.support.bytecode_helper"]], "test.support.import_helper": [[377, "module-test.support.import_helper"]], "test.support.os_helper": [[377, "module-test.support.os_helper"]], "test.support.script_helper": [[377, "module-test.support.script_helper"]], "test.support.socket_helper": [[377, "module-test.support.socket_helper"]], "test.support.threading_helper": [[377, "module-test.support.threading_helper"]], "test.support.warnings_helper": [[377, "module-test.support.warnings_helper"]], "threading_cleanup() (in module test.support.threading_helper)": [[377, "test.support.threading_helper.threading_cleanup"]], "threading_setup() (in module test.support.threading_helper)": [[377, "test.support.threading_helper.threading_setup"]], "transient_internet() (in module test.support.socket_helper)": [[377, "test.support.socket_helper.transient_internet"]], "unix_shell (in module test.support)": [[377, "test.support.unix_shell"]], "unlink() (in module test.support.os_helper)": [[377, "test.support.os_helper.unlink"]], "unload() (in module test.support.import_helper)": [[377, "test.support.import_helper.unload"]], "unset() (test.support.os_helper.environmentvarguard method)": [[377, "test.support.os_helper.EnvironmentVarGuard.unset"]], "verbose (in module test.support)": [[377, "test.support.verbose"]], "wait_process() (in module test.support)": [[377, "test.support.wait_process"]], "wait_threads_exit() (in module test.support.threading_helper)": [[377, "test.support.threading_helper.wait_threads_exit"]], "with_pymalloc() (in module test.support)": [[377, "test.support.with_pymalloc"]], "textwrapper (class in textwrap)": [[379, "textwrap.TextWrapper"]], "break_long_words (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.break_long_words"]], "break_on_hyphens (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.break_on_hyphens"]], "dedent() (in module textwrap)": [[379, "textwrap.dedent"]], "drop_whitespace (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.drop_whitespace"]], "expand_tabs (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.expand_tabs"]], "fill() (in module textwrap)": [[379, "textwrap.fill"]], "fill() (textwrap.textwrapper method)": [[379, "textwrap.TextWrapper.fill"]], "fix_sentence_endings (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.fix_sentence_endings"]], "indent() (in module textwrap)": [[379, "textwrap.indent"]], "initial_indent (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.initial_indent"]], "max_lines (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.max_lines"]], "placeholder (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.placeholder"]], "replace_whitespace (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.replace_whitespace"]], "shorten() (in module textwrap)": [[379, "textwrap.shorten"]], "subsequent_indent (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.subsequent_indent"]], "tabsize (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.tabsize"]], "textwrap": [[379, "module-textwrap"]], "width (textwrap.textwrapper attribute)": [[379, "textwrap.TextWrapper.width"]], "wrap() (in module textwrap)": [[379, "textwrap.wrap"]], "wrap() (textwrap.textwrapper method)": [[379, "textwrap.TextWrapper.wrap"]], "barrier (class in threading)": [[380, "threading.Barrier"]], "boundedsemaphore (class in threading)": [[380, "threading.BoundedSemaphore"]], "condition (class in threading)": [[380, "threading.Condition"]], "event (class in threading)": [[380, "threading.Event"]], "lock (class in threading)": [[380, "threading.Lock"]], "rlock (class in threading)": [[380, "threading.RLock"]], "semaphore (class in threading)": [[380, "threading.Semaphore"]], "timeout_max (in module threading)": [[380, "threading.TIMEOUT_MAX"]], "thread (class in threading)": [[380, "threading.Thread"]], "timer (class in threading)": [[380, "threading.Timer"]], "__excepthook__ (in module threading)": [[380, "threading.__excepthook__"]], "abort() (threading.barrier method)": [[380, "threading.Barrier.abort"]], "acquire() (threading.condition method)": [[380, "threading.Condition.acquire"]], "acquire() (threading.lock method)": [[380, "threading.Lock.acquire"]], "acquire() (threading.rlock method)": [[380, "threading.RLock.acquire"]], "acquire() (threading.semaphore method)": [[380, "threading.Semaphore.acquire"]], "active_count() (in module threading)": [[380, "threading.active_count"]], "broken (threading.barrier attribute)": [[380, "threading.Barrier.broken"]], "cancel() (threading.timer method)": [[380, "threading.Timer.cancel"]], "clear() (threading.event method)": [[380, "threading.Event.clear"]], "current_thread() (in module threading)": [[380, "threading.current_thread"]], "daemon (threading.thread attribute)": [[380, "threading.Thread.daemon"]], "enumerate() (in module threading)": [[380, "threading.enumerate"]], "excepthook() (in module threading)": [[380, "threading.excepthook"]], "getname() (threading.thread method)": [[380, "threading.Thread.getName"]], "get_ident() (in module threading)": [[380, "threading.get_ident"]], "get_native_id() (in module threading)": [[380, "threading.get_native_id"]], "getprofile() (in module threading)": [[380, "threading.getprofile"]], "gettrace() (in module threading)": [[380, "threading.gettrace"]], "ident (threading.thread attribute)": [[380, "threading.Thread.ident"]], "isdaemon() (threading.thread method)": [[380, "threading.Thread.isDaemon"]], "is_alive() (threading.thread method)": [[380, "threading.Thread.is_alive"]], "is_set() (threading.event method)": [[380, "threading.Event.is_set"]], "join() (threading.thread method)": [[380, "threading.Thread.join"]], "local (class in threading)": [[380, "threading.local"]], "locked() (threading.lock method)": [[380, "threading.Lock.locked"]], "main_thread() (in module threading)": [[380, "threading.main_thread"]], "n_waiting (threading.barrier attribute)": [[380, "threading.Barrier.n_waiting"]], "name (threading.thread attribute)": [[380, "threading.Thread.name"]], "native_id (threading.thread attribute)": [[380, "threading.Thread.native_id"]], "notify() (threading.condition method)": [[380, "threading.Condition.notify"]], "notify_all() (threading.condition method)": [[380, "threading.Condition.notify_all"]], "parties (threading.barrier attribute)": [[380, "threading.Barrier.parties"]], "release() (threading.condition method)": [[380, "threading.Condition.release"]], "release() (threading.lock method)": [[380, "threading.Lock.release"]], "release() (threading.rlock method)": [[380, "threading.RLock.release"]], "release() (threading.semaphore method)": [[380, "threading.Semaphore.release"]], "reset() (threading.barrier method)": [[380, "threading.Barrier.reset"]], "run() (threading.thread method)": [[380, "threading.Thread.run"]], "set() (threading.event method)": [[380, "threading.Event.set"]], "setdaemon() (threading.thread method)": [[380, "threading.Thread.setDaemon"]], "setname() (threading.thread method)": [[380, "threading.Thread.setName"]], "setprofile() (in module threading)": [[380, "threading.setprofile"]], "settrace() (in module threading)": [[380, "threading.settrace"]], "stack_size() (in module threading)": [[380, "threading.stack_size"]], "start() (threading.thread method)": [[380, "threading.Thread.start"]], "threading": [[380, "module-threading"]], "wait() (threading.barrier method)": [[380, "threading.Barrier.wait"]], "wait() (threading.condition method)": [[380, "threading.Condition.wait"]], "wait() (threading.event method)": [[380, "threading.Event.wait"]], "wait_for() (threading.condition method)": [[380, "threading.Condition.wait_for"]], "2-digit years": [[381, "index-3"]], "clock_boottime (in module time)": [[381, "time.CLOCK_BOOTTIME"]], "clock_highres (in module time)": [[381, "time.CLOCK_HIGHRES"]], "clock_monotonic (in module time)": [[381, "time.CLOCK_MONOTONIC"]], "clock_monotonic_raw (in module time)": [[381, "time.CLOCK_MONOTONIC_RAW"]], "clock_process_cputime_id (in module time)": [[381, "time.CLOCK_PROCESS_CPUTIME_ID"]], "clock_prof (in module time)": [[381, "time.CLOCK_PROF"]], "clock_realtime (in module time)": [[381, "time.CLOCK_REALTIME"]], "clock_tai (in module time)": [[381, "time.CLOCK_TAI"]], "clock_thread_cputime_id (in module time)": [[381, "time.CLOCK_THREAD_CPUTIME_ID"]], "clock_uptime (in module time)": [[381, "time.CLOCK_UPTIME"]], "clock_uptime_raw (in module time)": [[381, "time.CLOCK_UPTIME_RAW"]], "cpu time": [[381, "index-12"], [381, "index-7"]], "coordinated universal time": [[381, "index-4"]], "daylight saving time": [[381, "index-5"]], "greenwich mean time": [[381, "index-4"]], "rfc 1123": [[381, "index-21"]], "tz": [[381, "index-13"], [381, "index-14"], [381, "index-15"], [381, "index-16"], [381, "index-17"], [381, "index-18"]], "utc": [[381, "index-4"]], "year 2038": [[381, "index-2"]], "altzone (in module time)": [[381, "time.altzone"]], "asctime() (in module time)": [[381, "time.asctime"]], "benchmarking": [[381, "index-12"], [381, "index-6"], [381, "index-7"], [382, "index-0"]], "clock_getres() (in module time)": [[381, "time.clock_getres"]], "clock_gettime() (in module time)": [[381, "time.clock_gettime"]], "clock_gettime_ns() (in module time)": [[381, "time.clock_gettime_ns"]], "clock_settime() (in module time)": [[381, "time.clock_settime"]], "clock_settime_ns() (in module time)": [[381, "time.clock_settime_ns"]], "ctime() (in module time)": [[381, "time.ctime"]], "daylight (in module time)": [[381, "time.daylight"]], "epoch": [[381, "index-0"]], "get_clock_info() (in module time)": [[381, "time.get_clock_info"]], "gmtime() (in module time)": [[381, "time.gmtime"]], "localtime() (in module time)": [[381, "time.localtime"]], "mktime() (in module time)": [[381, "time.mktime"]], "monotonic() (in module time)": [[381, "time.monotonic"]], "monotonic_ns() (in module time)": [[381, "time.monotonic_ns"]], "perf_counter() (in module time)": [[381, "time.perf_counter"]], "perf_counter_ns() (in module time)": [[381, "time.perf_counter_ns"]], "process_time() (in module time)": [[381, "time.process_time"]], "process_time_ns() (in module time)": [[381, "time.process_time_ns"]], "processor time": [[381, "index-12"], [381, "index-7"]], "pthread_getcpuclockid() (in module time)": [[381, "time.pthread_getcpuclockid"]], "seconds since the epoch": [[381, "index-1"]], "sleep() (in module time)": [[381, "time.sleep"]], "strftime() (in module time)": [[381, "time.strftime"]], "strptime() (in module time)": [[381, "time.strptime"]], "struct_time (class in time)": [[381, "time.struct_time"]], "thread_time() (in module time)": [[381, "time.thread_time"]], "thread_time_ns() (in module time)": [[381, "time.thread_time_ns"]], "time": [[381, "module-time"]], "time() (in module time)": [[381, "time.time"]], "time_ns() (in module time)": [[381, "time.time_ns"]], "timezone (in module time)": [[381, "time.timezone"]], "tm_day (time.struct_time attribute)": [[381, "time.struct_time.tm_day"]], "tm_gmtoff (time.struct_time attribute)": [[381, "time.struct_time.tm_gmtoff"]], "tm_hour (time.struct_time attribute)": [[381, "time.struct_time.tm_hour"]], "tm_isdst (time.struct_time attribute)": [[381, "time.struct_time.tm_isdst"]], "tm_min (time.struct_time attribute)": [[381, "time.struct_time.tm_min"]], "tm_mon (time.struct_time attribute)": [[381, "time.struct_time.tm_mon"]], "tm_sec (time.struct_time attribute)": [[381, "time.struct_time.tm_sec"]], "tm_wday (time.struct_time attribute)": [[381, "time.struct_time.tm_wday"]], "tm_yday (time.struct_time attribute)": [[381, "time.struct_time.tm_yday"]], "tm_year (time.struct_time attribute)": [[381, "time.struct_time.tm_year"]], "tm_zone (time.struct_time attribute)": [[381, "time.struct_time.tm_zone"]], "tzname (in module time)": [[381, "time.tzname"]], "tzset() (in module time)": [[381, "time.tzset"]], "--number": [[382, "cmdoption-timeit-n"]], "--process": [[382, "cmdoption-timeit-p"]], "--repeat": [[382, "cmdoption-timeit-r"]], "--setup": [[382, "cmdoption-timeit-s"]], "--unit": [[382, "cmdoption-timeit-u"]], "-n": [[382, "cmdoption-timeit-n"]], "-u": [[382, "cmdoption-timeit-u"], [470, "cmdoption-u"]], "performance": [[382, "index-0"]], "timer (class in timeit)": [[382, "timeit.Timer"]], "autorange() (timeit.timer method)": [[382, "timeit.Timer.autorange"]], "default_timer() (in module timeit)": [[382, "timeit.default_timer"]], "print_exc() (timeit.timer method)": [[382, "timeit.Timer.print_exc"]], "repeat() (in module timeit)": [[382, "timeit.repeat"]], "repeat() (timeit.timer method)": [[382, "timeit.Timer.repeat"]], "timeit": [[382, "module-timeit"]], "timeit command line option": [[382, "cmdoption-timeit-h"], [382, "cmdoption-timeit-n"], [382, "cmdoption-timeit-p"], [382, "cmdoption-timeit-r"], [382, "cmdoption-timeit-s"], [382, "cmdoption-timeit-u"], [382, "cmdoption-timeit-v"]], "timeit() (in module timeit)": [[382, "timeit.timeit"]], "timeit() (timeit.timer method)": [[382, "timeit.Timer.timeit"]], "gui": [[383, "index-0"]], "graphical user interface": [[383, "index-0"]], "tk": [[383, "index-0"]], "tkinter": [[383, "index-0"], [384, "module-tkinter"]], "display": [[384, "index-0"], [445, "index-15"], [445, "index-16"], [445, "index-17"]], "exception (in module _tkinter)": [[384, "tkinter.EXCEPTION"]], "readable (in module _tkinter)": [[384, "tkinter.READABLE"]], "tcl() (in module tkinter)": [[384, "tkinter.Tcl"]], "tk (class in tkinter)": [[384, "tkinter.Tk"]], "tk option data types": [[384, "index-4"]], "writable (in module _tkinter)": [[384, "tkinter.WRITABLE"]], "_tkinter": [[384, "module-_tkinter"]], "bind (widgets)": [[384, "index-5"]], "children (tkinter.tk attribute)": [[384, "tkinter.Tk.children"]], "createfilehandler() (_tkinter.widget.tk method)": [[384, "tkinter.Widget.tk.createfilehandler"]], "deletefilehandler() (_tkinter.widget.tk method)": [[384, "tkinter.Widget.tk.deletefilehandler"]], "events (widgets)": [[384, "index-5"]], "master (tkinter.tk attribute)": [[384, "tkinter.Tk.master"]], "packing (widgets)": [[384, "index-2"]], "tk (tkinter.tk attribute)": [[384, "tkinter.Tk.tk"]], "window manager (widgets)": [[384, "index-3"]], "chooser (class in tkinter.colorchooser)": [[385, "tkinter.colorchooser.Chooser"]], "askcolor() (in module tkinter.colorchooser)": [[385, "tkinter.colorchooser.askcolor"]], "tkinter.colorchooser": [[385, "module-tkinter.colorchooser"]], "dndhandler (class in tkinter.dnd)": [[386, "tkinter.dnd.DndHandler"]], "cancel() (tkinter.dnd.dndhandler method)": [[386, "tkinter.dnd.DndHandler.cancel"]], "dnd_start() (in module tkinter.dnd)": [[386, "tkinter.dnd.dnd_start"]], "finish() (tkinter.dnd.dndhandler method)": [[386, "tkinter.dnd.DndHandler.finish"]], "on_motion() (tkinter.dnd.dndhandler method)": [[386, "tkinter.dnd.DndHandler.on_motion"]], "on_release() (tkinter.dnd.dndhandler method)": [[386, "tkinter.dnd.DndHandler.on_release"]], "tkinter.dnd": [[386, "module-tkinter.dnd"]], "bold (in module tkinter.font)": [[387, "tkinter.font.BOLD"]], "font (class in tkinter.font)": [[387, "tkinter.font.Font"]], "italic (in module tkinter.font)": [[387, "tkinter.font.ITALIC"]], "normal (in module tkinter.font)": [[387, "tkinter.font.NORMAL"]], "roman (in module tkinter.font)": [[387, "tkinter.font.ROMAN"]], "actual() (tkinter.font.font method)": [[387, "tkinter.font.Font.actual"]], "cget() (tkinter.font.font method)": [[387, "tkinter.font.Font.cget"]], "config() (tkinter.font.font method)": [[387, "tkinter.font.Font.config"]], "copy() (tkinter.font.font method)": [[387, "tkinter.font.Font.copy"]], "families() (in module tkinter.font)": [[387, "tkinter.font.families"]], "measure() (tkinter.font.font method)": [[387, "tkinter.font.Font.measure"]], "metrics() (tkinter.font.font method)": [[387, "tkinter.font.Font.metrics"]], "names() (in module tkinter.font)": [[387, "tkinter.font.names"]], "nametofont() (in module tkinter.font)": [[387, "tkinter.font.nametofont"]], "tkinter.font": [[387, "module-tkinter.font"]], "abort (in module tkinter.messagebox)": [[388, "tkinter.messagebox.ABORT"]], "abortretryignore (in module tkinter.messagebox)": [[388, "tkinter.messagebox.ABORTRETRYIGNORE"]], "cancel (in module tkinter.messagebox)": [[388, "tkinter.messagebox.CANCEL"]], "error (in module tkinter.messagebox)": [[388, "tkinter.messagebox.ERROR"]], "ignore (in module tkinter.messagebox)": [[388, "tkinter.messagebox.IGNORE"]], "info (in module tkinter.messagebox)": [[388, "tkinter.messagebox.INFO"]], "message (class in tkinter.messagebox)": [[388, "tkinter.messagebox.Message"]], "no (in module tkinter.messagebox)": [[388, "tkinter.messagebox.NO"]], "ok (in module tkinter.messagebox)": [[388, "tkinter.messagebox.OK"]], "okcancel (in module tkinter.messagebox)": [[388, "tkinter.messagebox.OKCANCEL"]], "question (in module tkinter.messagebox)": [[388, "tkinter.messagebox.QUESTION"]], "retry (in module tkinter.messagebox)": [[388, "tkinter.messagebox.RETRY"]], "retrycancel (in module tkinter.messagebox)": [[388, "tkinter.messagebox.RETRYCANCEL"]], "warning (in module tkinter.messagebox)": [[388, "tkinter.messagebox.WARNING"]], "yes (in module tkinter.messagebox)": [[388, "tkinter.messagebox.YES"]], "yesno (in module tkinter.messagebox)": [[388, "tkinter.messagebox.YESNO"]], "yesnocancel (in module tkinter.messagebox)": [[388, "tkinter.messagebox.YESNOCANCEL"]], "askokcancel() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.askokcancel"]], "askquestion() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.askquestion"]], "askretrycancel() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.askretrycancel"]], "askyesno() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.askyesno"]], "askyesnocancel() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.askyesnocancel"]], "show() (tkinter.messagebox.message method)": [[388, "tkinter.messagebox.Message.show"]], "showerror() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.showerror"]], "showinfo() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.showinfo"]], "showwarning() (in module tkinter.messagebox)": [[388, "tkinter.messagebox.showwarning"]], "tkinter.messagebox": [[388, "module-tkinter.messagebox"]], "scrolledtext (class in tkinter.scrolledtext)": [[389, "tkinter.scrolledtext.ScrolledText"]], "frame (tkinter.scrolledtext.scrolledtext attribute)": [[389, "tkinter.scrolledtext.ScrolledText.frame"]], "tkinter.scrolledtext": [[389, "module-tkinter.scrolledtext"]], "vbar (tkinter.scrolledtext.scrolledtext attribute)": [[389, "tkinter.scrolledtext.ScrolledText.vbar"]], "balloon (class in tkinter.tix)": [[390, "tkinter.tix.Balloon"]], "buttonbox (class in tkinter.tix)": [[390, "tkinter.tix.ButtonBox"]], "checklist (class in tkinter.tix)": [[390, "tkinter.tix.CheckList"]], "combobox (class in tkinter.tix)": [[390, "tkinter.tix.ComboBox"]], "control (class in tkinter.tix)": [[390, "tkinter.tix.Control"]], "dirlist (class in tkinter.tix)": [[390, "tkinter.tix.DirList"]], "dirselectbox (class in tkinter.tix)": [[390, "tkinter.tix.DirSelectBox"]], "dirselectdialog (class in tkinter.tix)": [[390, "tkinter.tix.DirSelectDialog"]], "dirtree (class in tkinter.tix)": [[390, "tkinter.tix.DirTree"]], "exfileselectbox (class in tkinter.tix)": [[390, "tkinter.tix.ExFileSelectBox"]], "fileentry (class in tkinter.tix)": [[390, "tkinter.tix.FileEntry"]], "fileselectbox (class in tkinter.tix)": [[390, "tkinter.tix.FileSelectBox"]], "form (class in tkinter.tix)": [[390, "tkinter.tix.Form"]], "hlist (class in tkinter.tix)": [[390, "tkinter.tix.HList"]], "inputonly (class in tkinter.tix)": [[390, "tkinter.tix.InputOnly"]], "labelentry (class in tkinter.tix)": [[390, "tkinter.tix.LabelEntry"]], "labelframe (class in tkinter.tix)": [[390, "tkinter.tix.LabelFrame"]], "listnotebook (class in tkinter.tix)": [[390, "tkinter.tix.ListNoteBook"]], "meter (class in tkinter.tix)": [[390, "tkinter.tix.Meter"]], "notebook (class in tkinter.tix)": [[390, "tkinter.tix.NoteBook"]], "optionmenu (class in tkinter.tix)": [[390, "tkinter.tix.OptionMenu"]], "panedwindow (class in tkinter.tix)": [[390, "tkinter.tix.PanedWindow"]], "popupmenu (class in tkinter.tix)": [[390, "tkinter.tix.PopupMenu"]], "select (class in tkinter.tix)": [[390, "tkinter.tix.Select"]], "stdbuttonbox (class in tkinter.tix)": [[390, "tkinter.tix.StdButtonBox"]], "tlist (class in tkinter.tix)": [[390, "tkinter.tix.TList"]], "tix": [[390, "index-0"]], "tk (class in tkinter.tix)": [[390, "tkinter.tix.Tk"]], "tree (class in tkinter.tix)": [[390, "tkinter.tix.Tree"]], "tixcommand (class in tkinter.tix)": [[390, "tkinter.tix.tixCommand"]], "tix_addbitmapdir() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_addbitmapdir"]], "tix_cget() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_cget"]], "tix_configure() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_configure"]], "tix_filedialog() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_filedialog"]], "tix_getbitmap() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_getbitmap"]], "tix_getimage() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_getimage"]], "tix_option_get() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_option_get"]], "tix_resetoptions() (tkinter.tix.tixcommand method)": [[390, "tkinter.tix.tixCommand.tix_resetoptions"]], "tkinter.tix": [[390, "module-tkinter.tix"]], "combobox (class in tkinter.ttk)": [[391, "tkinter.ttk.Combobox"]], "notebook (class in tkinter.ttk)": [[391, "tkinter.ttk.Notebook"]], "progressbar (class in tkinter.ttk)": [[391, "tkinter.ttk.Progressbar"]], "spinbox (class in tkinter.ttk)": [[391, "tkinter.ttk.Spinbox"]], "style (class in tkinter.ttk)": [[391, "tkinter.ttk.Style"]], "treeview (class in tkinter.ttk)": [[391, "tkinter.ttk.Treeview"]], "widget (class in tkinter.ttk)": [[391, "tkinter.ttk.Widget"]], "add() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.add"]], "bbox() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.bbox"]], "column() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.column"]], "configure() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.configure"]], "current() (tkinter.ttk.combobox method)": [[391, "tkinter.ttk.Combobox.current"]], "delete() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.delete"]], "detach() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.detach"]], "element_create() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.element_create"]], "element_names() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.element_names"]], "element_options() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.element_options"]], "enable_traversal() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.enable_traversal"]], "exists() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.exists"]], "focus() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.focus"]], "forget() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.forget"]], "get() (tkinter.ttk.combobox method)": [[391, "tkinter.ttk.Combobox.get"]], "get() (tkinter.ttk.spinbox method)": [[391, "tkinter.ttk.Spinbox.get"]], "get_children() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.get_children"]], "heading() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.heading"]], "hide() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.hide"]], "identify() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.identify"]], "identify() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.identify"]], "identify() (tkinter.ttk.widget method)": [[391, "tkinter.ttk.Widget.identify"]], "identify_column() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.identify_column"]], "identify_element() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.identify_element"]], "identify_region() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.identify_region"]], "identify_row() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.identify_row"]], "index() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.index"]], "index() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.index"]], "insert() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.insert"]], "insert() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.insert"]], "instate() (tkinter.ttk.widget method)": [[391, "tkinter.ttk.Widget.instate"]], "item() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.item"]], "layout() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.layout"]], "lookup() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.lookup"]], "map() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.map"]], "move() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.move"]], "next() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.next"]], "parent() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.parent"]], "prev() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.prev"]], "reattach() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.reattach"]], "see() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.see"]], "select() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.select"]], "selection() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.selection"]], "selection_add() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.selection_add"]], "selection_remove() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.selection_remove"]], "selection_set() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.selection_set"]], "selection_toggle() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.selection_toggle"]], "set() (tkinter.ttk.combobox method)": [[391, "tkinter.ttk.Combobox.set"]], "set() (tkinter.ttk.spinbox method)": [[391, "tkinter.ttk.Spinbox.set"]], "set() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.set"]], "set_children() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.set_children"]], "start() (tkinter.ttk.progressbar method)": [[391, "tkinter.ttk.Progressbar.start"]], "state() (tkinter.ttk.widget method)": [[391, "tkinter.ttk.Widget.state"]], "step() (tkinter.ttk.progressbar method)": [[391, "tkinter.ttk.Progressbar.step"]], "stop() (tkinter.ttk.progressbar method)": [[391, "tkinter.ttk.Progressbar.stop"]], "tab() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.tab"]], "tabs() (tkinter.ttk.notebook method)": [[391, "tkinter.ttk.Notebook.tabs"]], "tag_bind() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.tag_bind"]], "tag_configure() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.tag_configure"]], "tag_has() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.tag_has"]], "theme_create() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.theme_create"]], "theme_names() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.theme_names"]], "theme_settings() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.theme_settings"]], "theme_use() (tkinter.ttk.style method)": [[391, "tkinter.ttk.Style.theme_use"]], "tkinter.ttk": [[391, "module-tkinter.ttk"]], "ttk": [[391, "index-0"]], "xview() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.xview"]], "yview() (tkinter.ttk.treeview method)": [[391, "tkinter.ttk.Treeview.yview"]], "amper (in module token)": [[392, "token.AMPER"]], "amperequal (in module token)": [[392, "token.AMPEREQUAL"]], "async (in module token)": [[392, "token.ASYNC"]], "at (in module token)": [[392, "token.AT"]], "atequal (in module token)": [[392, "token.ATEQUAL"]], "await (in module token)": [[392, "token.AWAIT"]], "circumflex (in module token)": [[392, "token.CIRCUMFLEX"]], "circumflexequal (in module token)": [[392, "token.CIRCUMFLEXEQUAL"]], "colon (in module token)": [[392, "token.COLON"]], "colonequal (in module token)": [[392, "token.COLONEQUAL"]], "comma (in module token)": [[392, "token.COMMA"]], "comment (in module token)": [[392, "token.COMMENT"]], "dedent (in module token)": [[392, "token.DEDENT"]], "dot (in module token)": [[392, "token.DOT"]], "doubleslash (in module token)": [[392, "token.DOUBLESLASH"]], "doubleslashequal (in module token)": [[392, "token.DOUBLESLASHEQUAL"]], "doublestar (in module token)": [[392, "token.DOUBLESTAR"]], "doublestarequal (in module token)": [[392, "token.DOUBLESTAREQUAL"]], "ellipsis (in module token)": [[392, "token.ELLIPSIS"]], "encoding (in module token)": [[392, "token.ENCODING"]], "endmarker (in module token)": [[392, "token.ENDMARKER"]], "eqequal (in module token)": [[392, "token.EQEQUAL"]], "equal (in module token)": [[392, "token.EQUAL"]], "errortoken (in module token)": [[392, "token.ERRORTOKEN"]], "greater (in module token)": [[392, "token.GREATER"]], "greaterequal (in module token)": [[392, "token.GREATEREQUAL"]], "indent (in module token)": [[392, "token.INDENT"]], "iseof() (in module token)": [[392, "token.ISEOF"]], "isnonterminal() (in module token)": [[392, "token.ISNONTERMINAL"]], "isterminal() (in module token)": [[392, "token.ISTERMINAL"]], "lbrace (in module token)": [[392, "token.LBRACE"]], "leftshift (in module token)": [[392, "token.LEFTSHIFT"]], "leftshiftequal (in module token)": [[392, "token.LEFTSHIFTEQUAL"]], "less (in module token)": [[392, "token.LESS"]], "lessequal (in module token)": [[392, "token.LESSEQUAL"]], "lpar (in module token)": [[392, "token.LPAR"]], "lsqb (in module token)": [[392, "token.LSQB"]], "minequal (in module token)": [[392, "token.MINEQUAL"]], "minus (in module token)": [[392, "token.MINUS"]], "name (in module token)": [[392, "token.NAME"]], "newline (in module token)": [[392, "token.NEWLINE"]], "nl (in module token)": [[392, "token.NL"]], "notequal (in module token)": [[392, "token.NOTEQUAL"]], "nt_offset (in module token)": [[392, "token.NT_OFFSET"]], "number (in module token)": [[392, "token.NUMBER"]], "n_tokens (in module token)": [[392, "token.N_TOKENS"]], "op (in module token)": [[392, "token.OP"]], "percent (in module token)": [[392, "token.PERCENT"]], "percentequal (in module token)": [[392, "token.PERCENTEQUAL"]], "plus (in module token)": [[392, "token.PLUS"]], "plusequal (in module token)": [[392, "token.PLUSEQUAL"]], "rarrow (in module token)": [[392, "token.RARROW"]], "rbrace (in module token)": [[392, "token.RBRACE"]], "rightshift (in module token)": [[392, "token.RIGHTSHIFT"]], "rightshiftequal (in module token)": [[392, "token.RIGHTSHIFTEQUAL"]], "rpar (in module token)": [[392, "token.RPAR"]], "rsqb (in module token)": [[392, "token.RSQB"]], "semi (in module token)": [[392, "token.SEMI"]], "slash (in module token)": [[392, "token.SLASH"]], "slashequal (in module token)": [[392, "token.SLASHEQUAL"]], "soft_keyword (in module token)": [[392, "token.SOFT_KEYWORD"]], "star (in module token)": [[392, "token.STAR"]], "starequal (in module token)": [[392, "token.STAREQUAL"]], "string (in module token)": [[392, "token.STRING"]], "tilde (in module token)": [[392, "token.TILDE"]], "type_comment (in module token)": [[392, "token.TYPE_COMMENT"]], "type_ignore (in module token)": [[392, "token.TYPE_IGNORE"]], "vbar (in module token)": [[392, "token.VBAR"]], "vbarequal (in module token)": [[392, "token.VBAREQUAL"]], "tok_name (in module token)": [[392, "token.tok_name"]], "token": [[392, "module-token"], [450, "index-0"]], "--exact": [[393, "cmdoption-tokenize-e"]], "tokenerror": [[393, "tokenize.TokenError"]], "detect_encoding() (in module tokenize)": [[393, "tokenize.detect_encoding"]], "generate_tokens() (in module tokenize)": [[393, "tokenize.generate_tokens"]], "open() (in module tokenize)": [[393, "tokenize.open"]], "tokenize": [[393, "module-tokenize"]], "tokenize command line option": [[393, "cmdoption-tokenize-e"], [393, "cmdoption-tokenize-h"]], "tokenize() (in module tokenize)": [[393, "tokenize.tokenize"]], "untokenize() (in module tokenize)": [[393, "tokenize.untokenize"]], "tomldecodeerror": [[394, "tomllib.TOMLDecodeError"]], "load() (in module tomllib)": [[394, "tomllib.load"]], "loads() (in module tomllib)": [[394, "tomllib.loads"]], "tomllib": [[394, "module-tomllib"]], "--count": [[395, "cmdoption-trace-c"]], "--coverdir": [[395, "cmdoption-trace-C"]], "--file": [[395, "cmdoption-trace-f"]], "--ignore-dir": [[395, "cmdoption-trace-ignore-dir"]], "--ignore-module": [[395, "cmdoption-trace-ignore-module"]], "--listfuncs": [[395, "cmdoption-trace-l"]], "--missing": [[395, "cmdoption-trace-m"]], "--no-report": [[395, "cmdoption-trace-R"]], "--report": [[395, "cmdoption-trace-r"]], "--summary": [[395, "cmdoption-trace-s"]], "--timing": [[395, "cmdoption-trace-g"]], "--trace": [[395, "cmdoption-trace-t"]], "--trackcalls": [[395, "cmdoption-trace-T"]], "--version": [[395, "cmdoption-trace-version"], [470, "cmdoption-version"]], "-g": [[395, "cmdoption-trace-g"]], "coverageresults (class in trace)": [[395, "trace.CoverageResults"]], "trace (class in trace)": [[395, "trace.Trace"]], "results() (trace.trace method)": [[395, "trace.Trace.results"]], "run() (trace.trace method)": [[395, "trace.Trace.run"]], "runctx() (trace.trace method)": [[395, "trace.Trace.runctx"]], "runfunc() (trace.trace method)": [[395, "trace.Trace.runfunc"]], "trace": [[395, "module-trace"], [443, "index-66"]], "trace command line option": [[395, "cmdoption-trace-C"], [395, "cmdoption-trace-R"], [395, "cmdoption-trace-T"], [395, "cmdoption-trace-c"], [395, "cmdoption-trace-f"], [395, "cmdoption-trace-g"], [395, "cmdoption-trace-help"], [395, "cmdoption-trace-ignore-dir"], [395, "cmdoption-trace-ignore-module"], [395, "cmdoption-trace-l"], [395, "cmdoption-trace-m"], [395, "cmdoption-trace-r"], [395, "cmdoption-trace-s"], [395, "cmdoption-trace-t"], [395, "cmdoption-trace-version"]], "update() (trace.coverageresults method)": [[395, "trace.CoverageResults.update"]], "write_results() (trace.coverageresults method)": [[395, "trace.CoverageResults.write_results"]], "framesummary (class in traceback)": [[396, "traceback.FrameSummary"]], "stacksummary (class in traceback)": [[396, "traceback.StackSummary"]], "tracebackexception (class in traceback)": [[396, "traceback.TracebackException"]], "__cause__ (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.__cause__"]], "__context__ (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.__context__"]], "__notes__ (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.__notes__"]], "__suppress_context__ (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.__suppress_context__"]], "clear_frames() (in module traceback)": [[396, "traceback.clear_frames"]], "end_lineno (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.end_lineno"]], "end_offset (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.end_offset"]], "exc_type (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.exc_type"]], "exceptions (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.exceptions"]], "extract() (traceback.stacksummary class method)": [[396, "traceback.StackSummary.extract"]], "extract_stack() (in module traceback)": [[396, "traceback.extract_stack"]], "extract_tb() (in module traceback)": [[396, "traceback.extract_tb"]], "filename (traceback.framesummary attribute)": [[396, "traceback.FrameSummary.filename"]], "filename (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.filename"]], "format() (traceback.stacksummary method)": [[396, "traceback.StackSummary.format"]], "format() (traceback.tracebackexception method)": [[396, "traceback.TracebackException.format"]], "format_exc() (in module traceback)": [[396, "traceback.format_exc"]], "format_exception() (in module traceback)": [[396, "traceback.format_exception"]], "format_exception_only() (in module traceback)": [[396, "traceback.format_exception_only"]], "format_exception_only() (traceback.tracebackexception method)": [[396, "traceback.TracebackException.format_exception_only"]], "format_frame_summary() (traceback.stacksummary method)": [[396, "traceback.StackSummary.format_frame_summary"]], "format_list() (in module traceback)": [[396, "traceback.format_list"]], "format_stack() (in module traceback)": [[396, "traceback.format_stack"]], "format_tb() (in module traceback)": [[396, "traceback.format_tb"]], "from_exception() (traceback.tracebackexception class method)": [[396, "traceback.TracebackException.from_exception"]], "from_list() (traceback.stacksummary class method)": [[396, "traceback.StackSummary.from_list"]], "line (traceback.framesummary attribute)": [[396, "traceback.FrameSummary.line"]], "lineno (traceback.framesummary attribute)": [[396, "traceback.FrameSummary.lineno"]], "lineno (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.lineno"]], "msg (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.msg"]], "name (traceback.framesummary attribute)": [[396, "traceback.FrameSummary.name"]], "offset (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.offset"]], "print() (traceback.tracebackexception method)": [[396, "traceback.TracebackException.print"]], "print_exc() (in module traceback)": [[396, "traceback.print_exc"]], "print_exception() (in module traceback)": [[396, "traceback.print_exception"]], "print_last() (in module traceback)": [[396, "traceback.print_last"]], "print_stack() (in module traceback)": [[396, "traceback.print_stack"]], "print_tb() (in module traceback)": [[396, "traceback.print_tb"]], "stack (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.stack"]], "text (traceback.tracebackexception attribute)": [[396, "traceback.TracebackException.text"]], "walk_stack() (in module traceback)": [[396, "traceback.walk_stack"]], "walk_tb() (in module traceback)": [[396, "traceback.walk_tb"]], "domainfilter (class in tracemalloc)": [[397, "tracemalloc.DomainFilter"]], "filter (class in tracemalloc)": [[397, "tracemalloc.Filter"]], "frame (class in tracemalloc)": [[397, "tracemalloc.Frame"]], "snapshot (class in tracemalloc)": [[397, "tracemalloc.Snapshot"]], "statistic (class in tracemalloc)": [[397, "tracemalloc.Statistic"]], "statisticdiff (class in tracemalloc)": [[397, "tracemalloc.StatisticDiff"]], "trace (class in tracemalloc)": [[397, "tracemalloc.Trace"]], "traceback (class in tracemalloc)": [[397, "tracemalloc.Traceback"]], "all_frames (tracemalloc.filter attribute)": [[397, "tracemalloc.Filter.all_frames"]], "clear_traces() (in module tracemalloc)": [[397, "tracemalloc.clear_traces"]], "compare_to() (tracemalloc.snapshot method)": [[397, "tracemalloc.Snapshot.compare_to"]], "count (tracemalloc.statistic attribute)": [[397, "tracemalloc.Statistic.count"]], "count (tracemalloc.statisticdiff attribute)": [[397, "tracemalloc.StatisticDiff.count"]], "count_diff (tracemalloc.statisticdiff attribute)": [[397, "tracemalloc.StatisticDiff.count_diff"]], "domain (tracemalloc.domainfilter attribute)": [[397, "tracemalloc.DomainFilter.domain"]], "domain (tracemalloc.filter attribute)": [[397, "tracemalloc.Filter.domain"]], "domain (tracemalloc.trace attribute)": [[397, "tracemalloc.Trace.domain"]], "dump() (tracemalloc.snapshot method)": [[397, "tracemalloc.Snapshot.dump"]], "filename (tracemalloc.frame attribute)": [[397, "tracemalloc.Frame.filename"]], "filename_pattern (tracemalloc.filter attribute)": [[397, "tracemalloc.Filter.filename_pattern"]], "filter_traces() (tracemalloc.snapshot method)": [[397, "tracemalloc.Snapshot.filter_traces"]], "format() (tracemalloc.traceback method)": [[397, "tracemalloc.Traceback.format"]], "get_object_traceback() (in module tracemalloc)": [[397, "tracemalloc.get_object_traceback"]], "get_traceback_limit() (in module tracemalloc)": [[397, "tracemalloc.get_traceback_limit"]], "get_traced_memory() (in module tracemalloc)": [[397, "tracemalloc.get_traced_memory"]], "get_tracemalloc_memory() (in module tracemalloc)": [[397, "tracemalloc.get_tracemalloc_memory"]], "inclusive (tracemalloc.domainfilter attribute)": [[397, "tracemalloc.DomainFilter.inclusive"]], "inclusive (tracemalloc.filter attribute)": [[397, "tracemalloc.Filter.inclusive"]], "is_tracing() (in module tracemalloc)": [[397, "tracemalloc.is_tracing"]], "lineno (tracemalloc.filter attribute)": [[397, "tracemalloc.Filter.lineno"]], "lineno (tracemalloc.frame attribute)": [[397, "tracemalloc.Frame.lineno"]], "load() (tracemalloc.snapshot class method)": [[397, "tracemalloc.Snapshot.load"]], "reset_peak() (in module tracemalloc)": [[397, "tracemalloc.reset_peak"]], "size (tracemalloc.statistic attribute)": [[397, "tracemalloc.Statistic.size"]], "size (tracemalloc.statisticdiff attribute)": [[397, "tracemalloc.StatisticDiff.size"]], "size (tracemalloc.trace attribute)": [[397, "tracemalloc.Trace.size"]], "size_diff (tracemalloc.statisticdiff attribute)": [[397, "tracemalloc.StatisticDiff.size_diff"]], "start() (in module tracemalloc)": [[397, "tracemalloc.start"]], "statistics() (tracemalloc.snapshot method)": [[397, "tracemalloc.Snapshot.statistics"]], "stop() (in module tracemalloc)": [[397, "tracemalloc.stop"]], "take_snapshot() (in module tracemalloc)": [[397, "tracemalloc.take_snapshot"]], "total_nframe (tracemalloc.traceback attribute)": [[397, "tracemalloc.Traceback.total_nframe"]], "traceback (tracemalloc.statistic attribute)": [[397, "tracemalloc.Statistic.traceback"]], "traceback (tracemalloc.statisticdiff attribute)": [[397, "tracemalloc.StatisticDiff.traceback"]], "traceback (tracemalloc.trace attribute)": [[397, "tracemalloc.Trace.traceback"]], "traceback_limit (tracemalloc.snapshot attribute)": [[397, "tracemalloc.Snapshot.traceback_limit"]], "tracemalloc": [[397, "module-tracemalloc"]], "traces (tracemalloc.snapshot attribute)": [[397, "tracemalloc.Snapshot.traces"]], "setcbreak() (in module tty)": [[398, "tty.setcbreak"]], "setraw() (in module tty)": [[398, "tty.setraw"]], "rawpen (class in turtle)": [[399, "turtle.RawPen"]], "rawturtle (class in turtle)": [[399, "turtle.RawTurtle"]], "screen (class in turtle)": [[399, "turtle.Screen"]], "scrolledcanvas (class in turtle)": [[399, "turtle.ScrolledCanvas"]], "shape (class in turtle)": [[399, "turtle.Shape"]], "turtle (class in turtle)": [[399, "turtle.Turtle"]], "turtlescreen (class in turtle)": [[399, "turtle.TurtleScreen"]], "vec2d (class in turtle)": [[399, "turtle.Vec2D"]], "addcomponent() (turtle.shape method)": [[399, "turtle.Shape.addcomponent"]], "addshape() (in module turtle)": [[399, "turtle.addshape"]], "back() (in module turtle)": [[399, "turtle.back"]], "backward() (in module turtle)": [[399, "turtle.backward"]], "begin_fill() (in module turtle)": [[399, "turtle.begin_fill"]], "begin_poly() (in module turtle)": [[399, "turtle.begin_poly"]], "bgcolor() (in module turtle)": [[399, "turtle.bgcolor"]], "bgpic() (in module turtle)": [[399, "turtle.bgpic"]], "bk() (in module turtle)": [[399, "turtle.bk"]], "bye() (in module turtle)": [[399, "turtle.bye"]], "circle() (in module turtle)": [[399, "turtle.circle"]], "clear() (in module turtle)": [[399, "turtle.clear"]], "clearscreen() (in module turtle)": [[399, "turtle.clearscreen"]], "clearstamp() (in module turtle)": [[399, "turtle.clearstamp"]], "clearstamps() (in module turtle)": [[399, "turtle.clearstamps"]], "clone() (in module turtle)": [[399, "turtle.clone"]], "color() (in module turtle)": [[399, "turtle.color"]], "colormode() (in module turtle)": [[399, "turtle.colormode"]], "degrees() (in module turtle)": [[399, "turtle.degrees"]], "delay() (in module turtle)": [[399, "turtle.delay"]], "distance() (in module turtle)": [[399, "turtle.distance"]], "done() (in module turtle)": [[399, "turtle.done"]], "dot() (in module turtle)": [[399, "turtle.dot"]], "down() (in module turtle)": [[399, "turtle.down"]], "end_fill() (in module turtle)": [[399, "turtle.end_fill"]], "end_poly() (in module turtle)": [[399, "turtle.end_poly"]], "exitonclick() (in module turtle)": [[399, "turtle.exitonclick"]], "fd() (in module turtle)": [[399, "turtle.fd"]], "fillcolor() (in module turtle)": [[399, "turtle.fillcolor"]], "filling() (in module turtle)": [[399, "turtle.filling"]], "forward() (in module turtle)": [[399, "turtle.forward"]], "get_poly() (in module turtle)": [[399, "turtle.get_poly"]], "get_shapepoly() (in module turtle)": [[399, "turtle.get_shapepoly"]], "getcanvas() (in module turtle)": [[399, "turtle.getcanvas"]], "getpen() (in module turtle)": [[399, "turtle.getpen"]], "getscreen() (in module turtle)": [[399, "turtle.getscreen"]], "getshapes() (in module turtle)": [[399, "turtle.getshapes"]], "getturtle() (in module turtle)": [[399, "turtle.getturtle"]], "goto() (in module turtle)": [[399, "turtle.goto"]], "heading() (in module turtle)": [[399, "turtle.heading"]], "hideturtle() (in module turtle)": [[399, "turtle.hideturtle"]], "home() (in module turtle)": [[399, "turtle.home"]], "ht() (in module turtle)": [[399, "turtle.ht"]], "isdown() (in module turtle)": [[399, "turtle.isdown"]], "isvisible() (in module turtle)": [[399, "turtle.isvisible"]], "left() (in module turtle)": [[399, "turtle.left"]], "listen() (in module turtle)": [[399, "turtle.listen"]], "lt() (in module turtle)": [[399, "turtle.lt"]], "mainloop() (in module turtle)": [[399, "turtle.mainloop"]], "mode() (in module turtle)": [[399, "turtle.mode"]], "numinput() (in module turtle)": [[399, "turtle.numinput"]], "onclick() (in module turtle)": [[399, "turtle.onclick"]], "ondrag() (in module turtle)": [[399, "turtle.ondrag"]], "onkey() (in module turtle)": [[399, "turtle.onkey"]], "onkeypress() (in module turtle)": [[399, "turtle.onkeypress"]], "onkeyrelease() (in module turtle)": [[399, "turtle.onkeyrelease"]], "onrelease() (in module turtle)": [[399, "turtle.onrelease"]], "onscreenclick() (in module turtle)": [[399, "turtle.onscreenclick"]], "ontimer() (in module turtle)": [[399, "turtle.ontimer"]], "pd() (in module turtle)": [[399, "turtle.pd"]], "pen() (in module turtle)": [[399, "turtle.pen"]], "pencolor() (in module turtle)": [[399, "turtle.pencolor"]], "pendown() (in module turtle)": [[399, "turtle.pendown"]], "pensize() (in module turtle)": [[399, "turtle.pensize"]], "penup() (in module turtle)": [[399, "turtle.penup"]], "pos() (in module turtle)": [[399, "turtle.pos"]], "position() (in module turtle)": [[399, "turtle.position"]], "pu() (in module turtle)": [[399, "turtle.pu"]], "radians() (in module turtle)": [[399, "turtle.radians"]], "register_shape() (in module turtle)": [[399, "turtle.register_shape"]], "reset() (in module turtle)": [[399, "turtle.reset"]], "resetscreen() (in module turtle)": [[399, "turtle.resetscreen"]], "resizemode() (in module turtle)": [[399, "turtle.resizemode"]], "right() (in module turtle)": [[399, "turtle.right"]], "rt() (in module turtle)": [[399, "turtle.rt"]], "screensize() (in module turtle)": [[399, "turtle.screensize"]], "seth() (in module turtle)": [[399, "turtle.seth"]], "setheading() (in module turtle)": [[399, "turtle.setheading"]], "setpos() (in module turtle)": [[399, "turtle.setpos"]], "setposition() (in module turtle)": [[399, "turtle.setposition"]], "settiltangle() (in module turtle)": [[399, "turtle.settiltangle"]], "setundobuffer() (in module turtle)": [[399, "turtle.setundobuffer"]], "setup() (in module turtle)": [[399, "turtle.setup"]], "setworldcoordinates() (in module turtle)": [[399, "turtle.setworldcoordinates"]], "setx() (in module turtle)": [[399, "turtle.setx"]], "sety() (in module turtle)": [[399, "turtle.sety"]], "shape() (in module turtle)": [[399, "turtle.shape"]], "shapesize() (in module turtle)": [[399, "turtle.shapesize"]], "shapetransform() (in module turtle)": [[399, "turtle.shapetransform"]], "shearfactor() (in module turtle)": [[399, "turtle.shearfactor"]], "showturtle() (in module turtle)": [[399, "turtle.showturtle"]], "speed() (in module turtle)": [[399, "turtle.speed"]], "st() (in module turtle)": [[399, "turtle.st"]], "stamp() (in module turtle)": [[399, "turtle.stamp"]], "textinput() (in module turtle)": [[399, "turtle.textinput"]], "tilt() (in module turtle)": [[399, "turtle.tilt"]], "tiltangle() (in module turtle)": [[399, "turtle.tiltangle"]], "title() (in module turtle)": [[399, "turtle.title"]], "towards() (in module turtle)": [[399, "turtle.towards"]], "tracer() (in module turtle)": [[399, "turtle.tracer"]], "turtle": [[399, "module-turtle"]], "turtledemo": [[399, "module-turtledemo"]], "turtles() (in module turtle)": [[399, "turtle.turtles"]], "turtlesize() (in module turtle)": [[399, "turtle.turtlesize"]], "undo() (in module turtle)": [[399, "turtle.undo"]], "undobufferentries() (in module turtle)": [[399, "turtle.undobufferentries"]], "up() (in module turtle)": [[399, "turtle.up"]], "update() (in module turtle)": [[399, "turtle.update"]], "width() (in module turtle)": [[399, "turtle.width"]], "window_height() (in module turtle)": [[399, "turtle.window_height"]], "window_width() (in module turtle)": [[399, "turtle.window_width"]], "write() (in module turtle)": [[399, "turtle.write"]], "write_docstringdict() (in module turtle)": [[399, "turtle.write_docstringdict"]], "xcor() (in module turtle)": [[399, "turtle.xcor"]], "ycor() (in module turtle)": [[399, "turtle.ycor"]], "asyncgeneratortype (in module types)": [[400, "types.AsyncGeneratorType"]], "builtinfunctiontype (in module types)": [[400, "types.BuiltinFunctionType"]], "builtinmethodtype (in module types)": [[400, "types.BuiltinMethodType"]], "celltype (in module types)": [[400, "types.CellType"]], "classmethoddescriptortype (in module types)": [[400, "types.ClassMethodDescriptorType"]], "codetype (class in types)": [[400, "types.CodeType"]], "coroutinetype (in module types)": [[400, "types.CoroutineType"]], "dynamicclassattribute() (in module types)": [[400, "types.DynamicClassAttribute"]], "ellipsistype (in module types)": [[400, "types.EllipsisType"]], "frametype (in module types)": [[400, "types.FrameType"]], "functiontype (in module types)": [[400, "types.FunctionType"]], "generatortype (in module types)": [[400, "types.GeneratorType"]], "genericalias (class in types)": [[400, "types.GenericAlias"]], "getsetdescriptortype (in module types)": [[400, "types.GetSetDescriptorType"]], "lambdatype (in module types)": [[400, "types.LambdaType"]], "mappingproxytype (class in types)": [[400, "types.MappingProxyType"]], "memberdescriptortype (in module types)": [[400, "types.MemberDescriptorType"]], "methoddescriptortype (in module types)": [[400, "types.MethodDescriptorType"]], "methodwrappertype (in module types)": [[400, "types.MethodWrapperType"]], "moduletype (class in types)": [[400, "types.ModuleType"]], "nonetype (in module types)": [[400, "types.NoneType"]], "notimplementedtype (in module types)": [[400, "types.NotImplementedType"]], "pep 3115": [[400, "index-0"], [442, "index-45"], [443, "index-90"], [485, "index-14"], [490, "index-29"]], "pep 560": [[400, "index-1"], [400, "index-2"], [443, "index-87"], [443, "index-96"], [494, "index-21"], [494, "index-33"]], "simplenamespace (class in types)": [[400, "types.SimpleNamespace"]], "tracebacktype (class in types)": [[400, "types.TracebackType"]], "uniontype (class in types)": [[400, "types.UnionType"]], "wrapperdescriptortype (in module types)": [[400, "types.WrapperDescriptorType"]], "__doc__ (types.moduletype attribute)": [[400, "types.ModuleType.__doc__"]], "__loader__ (types.moduletype attribute)": [[400, "types.ModuleType.__loader__"]], "__name__ (types.moduletype attribute)": [[400, "types.ModuleType.__name__"]], "__package__ (types.moduletype attribute)": [[400, "types.ModuleType.__package__"]], "__spec__ (types.moduletype attribute)": [[400, "types.ModuleType.__spec__"]], "copy() (types.mappingproxytype method)": [[400, "types.MappingProxyType.copy"]], "coroutine() (in module types)": [[400, "types.coroutine"]], "get() (types.mappingproxytype method)": [[400, "types.MappingProxyType.get"]], "items() (types.mappingproxytype method)": [[400, "types.MappingProxyType.items"]], "keys() (types.mappingproxytype method)": [[400, "types.MappingProxyType.keys"]], "new_class() (in module types)": [[400, "types.new_class"]], "prepare_class() (in module types)": [[400, "types.prepare_class"]], "resolve_bases() (in module types)": [[400, "types.resolve_bases"]], "values() (types.mappingproxytype method)": [[400, "types.MappingProxyType.values"]], "abstractset (class in typing)": [[401, "typing.AbstractSet"]], "annotated (in module typing)": [[401, "typing.Annotated"]], "any (in module typing)": [[401, "typing.Any"]], "anystr (in module typing)": [[401, "typing.AnyStr"]], "asynccontextmanager (class in typing)": [[401, "typing.AsyncContextManager"]], "asyncgenerator (class in typing)": [[401, "typing.AsyncGenerator"]], "asynciterable (class in typing)": [[401, "typing.AsyncIterable"]], "asynciterator (class in typing)": [[401, "typing.AsyncIterator"]], "awaitable (class in typing)": [[401, "typing.Awaitable"]], "binaryio (class in typing)": [[401, "typing.BinaryIO"]], "bytestring (class in typing)": [[401, "typing.ByteString"]], "callable (in module typing)": [[401, "typing.Callable"]], "chainmap (class in typing)": [[401, "typing.ChainMap"]], "classvar (in module typing)": [[401, "typing.ClassVar"]], "collection (class in typing)": [[401, "typing.Collection"]], "concatenate (in module typing)": [[401, "typing.Concatenate"]], "container (class in typing)": [[401, "typing.Container"]], "contextmanager (class in typing)": [[401, "typing.ContextManager"]], "coroutine (class in typing)": [[401, "typing.Coroutine"]], "counter (class in typing)": [[401, "typing.Counter"]], "defaultdict (class in typing)": [[401, "typing.DefaultDict"]], "deque (class in typing)": [[401, "typing.Deque"]], "dict (class in typing)": [[401, "typing.Dict"]], "final (in module typing)": [[401, "typing.Final"]], "forwardref (class in typing)": [[401, "typing.ForwardRef"]], "frozenset (class in typing)": [[401, "typing.FrozenSet"]], "generator (class in typing)": [[401, "typing.Generator"]], "generic (class in typing)": [[401, "typing.Generic"]], "hashable (class in typing)": [[401, "typing.Hashable"]], "io (class in typing)": [[401, "typing.IO"]], "itemsview (class in typing)": [[401, "typing.ItemsView"]], "iterable (class in typing)": [[401, "typing.Iterable"]], "iterator (class in typing)": [[401, "typing.Iterator"]], "keysview (class in typing)": [[401, "typing.KeysView"]], "list (class in typing)": [[401, "typing.List"]], "literal (in module typing)": [[401, "typing.Literal"]], "literalstring (in module typing)": [[401, "typing.LiteralString"]], "mapping (class in typing)": [[401, "typing.Mapping"]], "mappingview (class in typing)": [[401, "typing.MappingView"]], "match (class in typing)": [[401, "typing.Match"]], "mutablemapping (class in typing)": [[401, "typing.MutableMapping"]], "mutablesequence (class in typing)": [[401, "typing.MutableSequence"]], "mutableset (class in typing)": [[401, "typing.MutableSet"]], "namedtuple (class in typing)": [[401, "typing.NamedTuple"]], "never (in module typing)": [[401, "typing.Never"]], "newtype (class in typing)": [[401, "typing.NewType"]], "noreturn (in module typing)": [[401, "typing.NoReturn"]], "notrequired (in module typing)": [[401, "typing.NotRequired"]], "optional (in module typing)": [[401, "typing.Optional"]], "ordereddict (class in typing)": [[401, "typing.OrderedDict"]], "pep 544": [[401, "index-25"], [401, "index-41"], [401, "index-5"], [495, "index-18"]], "pep 586": [[401, "index-30"], [401, "index-7"], [487, "index-31"], [495, "index-16"], [496, "index-27"]], "pep 589": [[401, "index-43"], [401, "index-8"], [495, "index-15"]], "pep 591": [[401, "index-32"], [401, "index-47"], [401, "index-9"], [495, "index-17"]], "pep 593": [[401, "index-10"], [401, "index-35"], [401, "index-49"], [496, "index-17"], [496, "index-5"]], "pep 612": [[401, "index-12"], [401, "index-21"], [401, "index-22"], [401, "index-29"], [401, "index-39"], [401, "index-85"], [487, "index-22"], [487, "index-6"]], "pep 613": [[401, "index-13"], [401, "index-28"], [487, "index-24"], [487, "index-7"]], "pep 646": [[401, "index-14"], [401, "index-38"], [488, "index-13"], [488, "index-14"]], "pep 647": [[401, "index-15"], [401, "index-36"], [487, "index-25"], [487, "index-8"]], "pep 655": [[401, "index-16"], [401, "index-33"], [401, "index-34"], [401, "index-44"], [488, "index-15"]], "pep 673": [[401, "index-17"], [401, "index-27"], [488, "index-17"]], "pep 675": [[401, "index-18"], [401, "index-26"], [488, "index-18"]], "pep 681": [[401, "index-19"], [401, "index-45"], [488, "index-19"]], "paramspec (class in typing)": [[401, "typing.ParamSpec"]], "paramspecargs (in module typing)": [[401, "typing.ParamSpecArgs"]], "paramspeckwargs (in module typing)": [[401, "typing.ParamSpecKwargs"]], "pattern (class in typing)": [[401, "typing.Pattern"]], "protocol (class in typing)": [[401, "typing.Protocol"]], "required (in module typing)": [[401, "typing.Required"]], "reversible (class in typing)": [[401, "typing.Reversible"]], "self (in module typing)": [[401, "typing.Self"]], "sequence (class in typing)": [[401, "typing.Sequence"]], "set (class in typing)": [[401, "typing.Set"]], "sized (class in typing)": [[401, "typing.Sized"]], "supportsabs (class in typing)": [[401, "typing.SupportsAbs"]], "supportsbytes (class in typing)": [[401, "typing.SupportsBytes"]], "supportscomplex (class in typing)": [[401, "typing.SupportsComplex"]], "supportsfloat (class in typing)": [[401, "typing.SupportsFloat"]], "supportsindex (class in typing)": [[401, "typing.SupportsIndex"]], "supportsint (class in typing)": [[401, "typing.SupportsInt"]], "supportsround (class in typing)": [[401, "typing.SupportsRound"]], "type_checking (in module typing)": [[401, "typing.TYPE_CHECKING"]], "text (class in typing)": [[401, "typing.Text"]], "textio (class in typing)": [[401, "typing.TextIO"]], "tuple (in module typing)": [[401, "typing.Tuple"]], "type (class in typing)": [[401, "typing.Type"]], "typealias (in module typing)": [[401, "typing.TypeAlias"]], "typeguard (in module typing)": [[401, "typing.TypeGuard"]], "typevar (class in typing)": [[401, "typing.TypeVar"]], "typevartuple (class in typing)": [[401, "typing.TypeVarTuple"]], "typeddict (class in typing)": [[401, "typing.TypedDict"]], "union (in module typing)": [[401, "typing.Union"]], "unpack (in module typing)": [[401, "typing.Unpack"]], "valuesview (class in typing)": [[401, "typing.ValuesView"]], "__bound__ (typing.typevar attribute)": [[401, "typing.TypeVar.__bound__"]], "__constraints__ (typing.typevar attribute)": [[401, "typing.TypeVar.__constraints__"]], "__contravariant__ (typing.typevar attribute)": [[401, "typing.TypeVar.__contravariant__"]], "__covariant__ (typing.typevar attribute)": [[401, "typing.TypeVar.__covariant__"]], "__module__ (typing.newtype attribute)": [[401, "typing.NewType.__module__"]], "__name__ (typing.newtype attribute)": [[401, "typing.NewType.__name__"]], "__name__ (typing.paramspec attribute)": [[401, "typing.ParamSpec.__name__"]], "__name__ (typing.typevar attribute)": [[401, "typing.TypeVar.__name__"]], "__name__ (typing.typevartuple attribute)": [[401, "typing.TypeVarTuple.__name__"]], "__optional_keys__ (typing.typeddict attribute)": [[401, "typing.TypedDict.__optional_keys__"]], "__required_keys__ (typing.typeddict attribute)": [[401, "typing.TypedDict.__required_keys__"]], "__supertype__ (typing.newtype attribute)": [[401, "typing.NewType.__supertype__"]], "__total__ (typing.typeddict attribute)": [[401, "typing.TypedDict.__total__"]], "args (typing.paramspec attribute)": [[401, "typing.ParamSpec.args"]], "assert_never() (in module typing)": [[401, "typing.assert_never"]], "assert_type() (in module typing)": [[401, "typing.assert_type"]], "cast() (in module typing)": [[401, "typing.cast"]], "clear_overloads() (in module typing)": [[401, "typing.clear_overloads"]], "dataclass_transform() (in module typing)": [[401, "typing.dataclass_transform"]], "final() (in module typing)": [[401, "typing.final"]], "get_args() (in module typing)": [[401, "typing.get_args"]], "get_origin() (in module typing)": [[401, "typing.get_origin"]], "get_overloads() (in module typing)": [[401, "typing.get_overloads"]], "get_type_hints() (in module typing)": [[401, "typing.get_type_hints"]], "is_typeddict() (in module typing)": [[401, "typing.is_typeddict"]], "kwargs (typing.paramspec attribute)": [[401, "typing.ParamSpec.kwargs"]], "no_type_check() (in module typing)": [[401, "typing.no_type_check"]], "no_type_check_decorator() (in module typing)": [[401, "typing.no_type_check_decorator"]], "overload() (in module typing)": [[401, "typing.overload"]], "reveal_type() (in module typing)": [[401, "typing.reveal_type"]], "runtime_checkable() (in module typing)": [[401, "typing.runtime_checkable"]], "type_check_only() (in module typing)": [[401, "typing.type_check_only"]], "typing": [[401, "module-typing"]], "bidirectional() (in module unicodedata)": [[402, "unicodedata.bidirectional"]], "category() (in module unicodedata)": [[402, "unicodedata.category"]], "character": [[402, "index-0"], [443, "index-19"], [445, "index-43"]], "combining() (in module unicodedata)": [[402, "unicodedata.combining"]], "database": [[402, "index-0"]], "decimal() (in module unicodedata)": [[402, "unicodedata.decimal"]], "decomposition() (in module unicodedata)": [[402, "unicodedata.decomposition"]], "digit() (in module unicodedata)": [[402, "unicodedata.digit"]], "east_asian_width() (in module unicodedata)": [[402, "unicodedata.east_asian_width"]], "is_normalized() (in module unicodedata)": [[402, "unicodedata.is_normalized"]], "lookup() (in module unicodedata)": [[402, "unicodedata.lookup"]], "mirrored() (in module unicodedata)": [[402, "unicodedata.mirrored"]], "name() (in module unicodedata)": [[402, "unicodedata.name"]], "normalize() (in module unicodedata)": [[402, "unicodedata.normalize"]], "numeric() (in module unicodedata)": [[402, "unicodedata.numeric"]], "ucd_3_2_0 (in module unicodedata)": [[402, "unicodedata.ucd_3_2_0"]], "unicodedata": [[402, "module-unicodedata"]], "unidata_version (in module unicodedata)": [[402, "unicodedata.unidata_version"]], "--buffer": [[403, "cmdoption-unittest-b"]], "--catch": [[403, "cmdoption-unittest-c"]], "--failfast": [[403, "cmdoption-unittest-f"]], "--locals": [[403, "cmdoption-unittest-locals"]], "--pattern": [[403, "cmdoption-unittest-discover-p"]], "--start-directory": [[403, "cmdoption-unittest-discover-s"]], "--top-level-directory": [[403, "cmdoption-unittest-discover-t"]], "-k": [[403, "cmdoption-unittest-k"]], "functiontestcase (class in unittest)": [[403, "unittest.FunctionTestCase"]], "isolatedasynciotestcase (class in unittest)": [[403, "unittest.IsolatedAsyncioTestCase"]], "skiptest": [[403, "unittest.SkipTest"]], "testcase (class in unittest)": [[403, "unittest.TestCase"]], "testloader (class in unittest)": [[403, "unittest.TestLoader"]], "testresult (class in unittest)": [[403, "unittest.TestResult"]], "testsuite (class in unittest)": [[403, "unittest.TestSuite"]], "texttestresult (class in unittest)": [[403, "unittest.TextTestResult"]], "texttestrunner (class in unittest)": [[403, "unittest.TextTestRunner"]], "__iter__() (unittest.testsuite method)": [[403, "unittest.TestSuite.__iter__"]], "_makeresult() (unittest.texttestrunner method)": [[403, "unittest.TextTestRunner._makeResult"]], "addasynccleanup() (unittest.isolatedasynciotestcase method)": [[403, "unittest.IsolatedAsyncioTestCase.addAsyncCleanup"]], "addclasscleanup() (unittest.testcase class method)": [[403, "unittest.TestCase.addClassCleanup"]], "addcleanup() (unittest.testcase method)": [[403, "unittest.TestCase.addCleanup"]], "adderror() (unittest.testresult method)": [[403, "unittest.TestResult.addError"]], "addexpectedfailure() (unittest.testresult method)": [[403, "unittest.TestResult.addExpectedFailure"]], "addfailure() (unittest.testresult method)": [[403, "unittest.TestResult.addFailure"]], "addmodulecleanup() (in module unittest)": [[403, "unittest.addModuleCleanup"]], "addskip() (unittest.testresult method)": [[403, "unittest.TestResult.addSkip"]], "addsubtest() (unittest.testresult method)": [[403, "unittest.TestResult.addSubTest"]], "addsuccess() (unittest.testresult method)": [[403, "unittest.TestResult.addSuccess"]], "addtest() (unittest.testsuite method)": [[403, "unittest.TestSuite.addTest"]], "addtests() (unittest.testsuite method)": [[403, "unittest.TestSuite.addTests"]], "addtypeequalityfunc() (unittest.testcase method)": [[403, "unittest.TestCase.addTypeEqualityFunc"]], "addunexpectedsuccess() (unittest.testresult method)": [[403, "unittest.TestResult.addUnexpectedSuccess"]], "assertalmostequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertAlmostEqual"]], "assertcountequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertCountEqual"]], "assertdictequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertDictEqual"]], "assertequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertEqual"]], "assertfalse() (unittest.testcase method)": [[403, "unittest.TestCase.assertFalse"]], "assertgreater() (unittest.testcase method)": [[403, "unittest.TestCase.assertGreater"]], "assertgreaterequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertGreaterEqual"]], "assertin() (unittest.testcase method)": [[403, "unittest.TestCase.assertIn"]], "assertis() (unittest.testcase method)": [[403, "unittest.TestCase.assertIs"]], "assertisinstance() (unittest.testcase method)": [[403, "unittest.TestCase.assertIsInstance"]], "assertisnone() (unittest.testcase method)": [[403, "unittest.TestCase.assertIsNone"]], "assertisnot() (unittest.testcase method)": [[403, "unittest.TestCase.assertIsNot"]], "assertisnotnone() (unittest.testcase method)": [[403, "unittest.TestCase.assertIsNotNone"]], "assertless() (unittest.testcase method)": [[403, "unittest.TestCase.assertLess"]], "assertlessequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertLessEqual"]], "assertlistequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertListEqual"]], "assertlogs() (unittest.testcase method)": [[403, "unittest.TestCase.assertLogs"]], "assertmultilineequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertMultiLineEqual"]], "assertnologs() (unittest.testcase method)": [[403, "unittest.TestCase.assertNoLogs"]], "assertnotalmostequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertNotAlmostEqual"]], "assertnotequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertNotEqual"]], "assertnotin() (unittest.testcase method)": [[403, "unittest.TestCase.assertNotIn"]], "assertnotisinstance() (unittest.testcase method)": [[403, "unittest.TestCase.assertNotIsInstance"]], "assertnotregex() (unittest.testcase method)": [[403, "unittest.TestCase.assertNotRegex"]], "assertraises() (unittest.testcase method)": [[403, "unittest.TestCase.assertRaises"]], "assertraisesregex() (unittest.testcase method)": [[403, "unittest.TestCase.assertRaisesRegex"]], "assertregex() (unittest.testcase method)": [[403, "unittest.TestCase.assertRegex"]], "assertsequenceequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertSequenceEqual"]], "assertsetequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertSetEqual"]], "asserttrue() (unittest.testcase method)": [[403, "unittest.TestCase.assertTrue"]], "asserttupleequal() (unittest.testcase method)": [[403, "unittest.TestCase.assertTupleEqual"]], "assertwarns() (unittest.testcase method)": [[403, "unittest.TestCase.assertWarns"]], "assertwarnsregex() (unittest.testcase method)": [[403, "unittest.TestCase.assertWarnsRegex"]], "asyncsetup() (unittest.isolatedasynciotestcase method)": [[403, "unittest.IsolatedAsyncioTestCase.asyncSetUp"]], "asyncteardown() (unittest.isolatedasynciotestcase method)": [[403, "unittest.IsolatedAsyncioTestCase.asyncTearDown"]], "buffer (unittest.testresult attribute)": [[403, "unittest.TestResult.buffer"]], "counttestcases() (unittest.testcase method)": [[403, "unittest.TestCase.countTestCases"]], "counttestcases() (unittest.testsuite method)": [[403, "unittest.TestSuite.countTestCases"]], "debug() (unittest.testcase method)": [[403, "unittest.TestCase.debug"]], "debug() (unittest.testsuite method)": [[403, "unittest.TestSuite.debug"]], "defaulttestloader (in module unittest)": [[403, "unittest.defaultTestLoader"]], "defaulttestresult() (unittest.testcase method)": [[403, "unittest.TestCase.defaultTestResult"]], "discover() (unittest.testloader method)": [[403, "unittest.TestLoader.discover"]], "doclasscleanups() (unittest.testcase class method)": [[403, "unittest.TestCase.doClassCleanups"]], "docleanups() (unittest.testcase method)": [[403, "unittest.TestCase.doCleanups"]], "domodulecleanups() (in module unittest)": [[403, "unittest.doModuleCleanups"]], "enterasynccontext() (unittest.isolatedasynciotestcase method)": [[403, "unittest.IsolatedAsyncioTestCase.enterAsyncContext"]], "enterclasscontext() (unittest.testcase class method)": [[403, "unittest.TestCase.enterClassContext"]], "entercontext() (unittest.testcase method)": [[403, "unittest.TestCase.enterContext"]], "entermodulecontext() (in module unittest)": [[403, "unittest.enterModuleContext"]], "errors (unittest.testloader attribute)": [[403, "unittest.TestLoader.errors"]], "errors (unittest.testresult attribute)": [[403, "unittest.TestResult.errors"]], "expectedfailure() (in module unittest)": [[403, "unittest.expectedFailure"]], "expectedfailures (unittest.testresult attribute)": [[403, "unittest.TestResult.expectedFailures"]], "fail() (unittest.testcase method)": [[403, "unittest.TestCase.fail"]], "failfast (unittest.testresult attribute)": [[403, "unittest.TestResult.failfast"]], "failureexception (unittest.testcase attribute)": [[403, "unittest.TestCase.failureException"]], "failures (unittest.testresult attribute)": [[403, "unittest.TestResult.failures"]], "gettestcasenames() (unittest.testloader method)": [[403, "unittest.TestLoader.getTestCaseNames"]], "id() (unittest.testcase method)": [[403, "unittest.TestCase.id"]], "installhandler() (in module unittest)": [[403, "unittest.installHandler"]], "loadtestsfrommodule() (unittest.testloader method)": [[403, "unittest.TestLoader.loadTestsFromModule"]], "loadtestsfromname() (unittest.testloader method)": [[403, "unittest.TestLoader.loadTestsFromName"]], "loadtestsfromnames() (unittest.testloader method)": [[403, "unittest.TestLoader.loadTestsFromNames"]], "loadtestsfromtestcase() (unittest.testloader method)": [[403, "unittest.TestLoader.loadTestsFromTestCase"]], "longmessage (unittest.testcase attribute)": [[403, "unittest.TestCase.longMessage"]], "main() (in module unittest)": [[403, "unittest.main"]], "maxdiff (unittest.testcase attribute)": [[403, "unittest.TestCase.maxDiff"]], "output (unittest.testcase attribute)": [[403, "unittest.TestCase.output"]], "records (unittest.testcase attribute)": [[403, "unittest.TestCase.records"]], "registerresult() (in module unittest)": [[403, "unittest.registerResult"]], "removehandler() (in module unittest)": [[403, "unittest.removeHandler"]], "removeresult() (in module unittest)": [[403, "unittest.removeResult"]], "run() (unittest.isolatedasynciotestcase method)": [[403, "unittest.IsolatedAsyncioTestCase.run"]], "run() (unittest.testcase method)": [[403, "unittest.TestCase.run"]], "run() (unittest.testsuite method)": [[403, "unittest.TestSuite.run"]], "run() (unittest.texttestrunner method)": [[403, "unittest.TextTestRunner.run"]], "setup() (unittest.testcase method)": [[403, "unittest.TestCase.setUp"]], "setupclass() (unittest.testcase method)": [[403, "unittest.TestCase.setUpClass"]], "shortdescription() (unittest.testcase method)": [[403, "unittest.TestCase.shortDescription"]], "shouldstop (unittest.testresult attribute)": [[403, "unittest.TestResult.shouldStop"]], "skip() (in module unittest)": [[403, "unittest.skip"]], "skipif() (in module unittest)": [[403, "unittest.skipIf"]], "skiptest() (unittest.testcase method)": [[403, "unittest.TestCase.skipTest"]], "skipunless() (in module unittest)": [[403, "unittest.skipUnless"]], "skipped (unittest.testresult attribute)": [[403, "unittest.TestResult.skipped"]], "sorttestmethodsusing (unittest.testloader attribute)": [[403, "unittest.TestLoader.sortTestMethodsUsing"]], "starttest() (unittest.testresult method)": [[403, "unittest.TestResult.startTest"]], "starttestrun() (unittest.testresult method)": [[403, "unittest.TestResult.startTestRun"]], "stop() (unittest.testresult method)": [[403, "unittest.TestResult.stop"]], "stoptest() (unittest.testresult method)": [[403, "unittest.TestResult.stopTest"]], "stoptestrun() (unittest.testresult method)": [[403, "unittest.TestResult.stopTestRun"]], "subtest() (unittest.testcase method)": [[403, "unittest.TestCase.subTest"]], "suiteclass (unittest.testloader attribute)": [[403, "unittest.TestLoader.suiteClass"]], "tb_locals (unittest.testresult attribute)": [[403, "unittest.TestResult.tb_locals"]], "teardown() (unittest.testcase method)": [[403, "unittest.TestCase.tearDown"]], "teardownclass() (unittest.testcase method)": [[403, "unittest.TestCase.tearDownClass"]], "testmethodprefix (unittest.testloader attribute)": [[403, "unittest.TestLoader.testMethodPrefix"]], "testnamepatterns (unittest.testloader attribute)": [[403, "unittest.TestLoader.testNamePatterns"]], "testsrun (unittest.testresult attribute)": [[403, "unittest.TestResult.testsRun"]], "unexpectedsuccesses (unittest.testresult attribute)": [[403, "unittest.TestResult.unexpectedSuccesses"]], "unittest": [[403, "module-unittest"]], "unittest command line option": [[403, "cmdoption-unittest-b"], [403, "cmdoption-unittest-c"], [403, "cmdoption-unittest-f"], [403, "cmdoption-unittest-k"], [403, "cmdoption-unittest-locals"]], "unittest-discover command line option": [[403, "cmdoption-unittest-discover-p"], [403, "cmdoption-unittest-discover-s"], [403, "cmdoption-unittest-discover-t"], [403, "cmdoption-unittest-discover-v"]], "wassuccessful() (unittest.testresult method)": [[403, "unittest.TestResult.wasSuccessful"]], "any (in module unittest.mock)": [[404, "unittest.mock.ANY"]], "asyncmock (class in unittest.mock)": [[404, "unittest.mock.AsyncMock"]], "default (in module unittest.mock)": [[404, "unittest.mock.DEFAULT"]], "filter_dir (in module unittest.mock)": [[404, "unittest.mock.FILTER_DIR"]], "magicmock (class in unittest.mock)": [[404, "unittest.mock.MagicMock"]], "mock (class in unittest.mock)": [[404, "unittest.mock.Mock"]], "noncallablemagicmock (class in unittest.mock)": [[404, "unittest.mock.NonCallableMagicMock"]], "noncallablemock (class in unittest.mock)": [[404, "unittest.mock.NonCallableMock"]], "propertymock (class in unittest.mock)": [[404, "unittest.mock.PropertyMock"]], "__class__ (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.__class__"]], "__dir__() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.__dir__"]], "_get_child_mock() (unittest.mock.mock method)": [[404, "unittest.mock.Mock._get_child_mock"]], "assert_any_await() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.assert_any_await"]], "assert_any_call() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.assert_any_call"]], "assert_awaited() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.assert_awaited"]], "assert_awaited_once() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.assert_awaited_once"]], "assert_awaited_once_with() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.assert_awaited_once_with"]], "assert_awaited_with() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.assert_awaited_with"]], "assert_called() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.assert_called"]], "assert_called_once() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.assert_called_once"]], "assert_called_once_with() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.assert_called_once_with"]], "assert_called_with() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.assert_called_with"]], "assert_has_awaits() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.assert_has_awaits"]], "assert_has_calls() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.assert_has_calls"]], "assert_not_awaited() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.assert_not_awaited"]], "assert_not_called() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.assert_not_called"]], "attach_mock() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.attach_mock"]], "await_args (unittest.mock.asyncmock attribute)": [[404, "unittest.mock.AsyncMock.await_args"]], "await_args_list (unittest.mock.asyncmock attribute)": [[404, "unittest.mock.AsyncMock.await_args_list"]], "await_count (unittest.mock.asyncmock attribute)": [[404, "unittest.mock.AsyncMock.await_count"]], "call() (in module unittest.mock)": [[404, "unittest.mock.call"]], "call_args (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.call_args"]], "call_args_list (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.call_args_list"]], "call_count (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.call_count"]], "call_list() (unittest.mock.call method)": [[404, "unittest.mock.call.call_list"]], "called (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.called"]], "configure_mock() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.configure_mock"]], "create_autospec() (in module unittest.mock)": [[404, "unittest.mock.create_autospec"]], "method_calls (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.method_calls"]], "mock_add_spec() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.mock_add_spec"]], "mock_calls (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.mock_calls"]], "mock_open() (in module unittest.mock)": [[404, "unittest.mock.mock_open"]], "patch() (in module unittest.mock)": [[404, "unittest.mock.patch"]], "patch.dict() (in module unittest.mock)": [[404, "unittest.mock.patch.dict"]], "patch.multiple() (in module unittest.mock)": [[404, "unittest.mock.patch.multiple"]], "patch.object() (in module unittest.mock)": [[404, "unittest.mock.patch.object"]], "patch.stopall() (in module unittest.mock)": [[404, "unittest.mock.patch.stopall"]], "reset_mock() (unittest.mock.asyncmock method)": [[404, "unittest.mock.AsyncMock.reset_mock"]], "reset_mock() (unittest.mock.mock method)": [[404, "unittest.mock.Mock.reset_mock"]], "return_value (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.return_value"]], "seal() (in module unittest.mock)": [[404, "unittest.mock.seal"]], "sentinel (in module unittest.mock)": [[404, "unittest.mock.sentinel"]], "side_effect (unittest.mock.mock attribute)": [[404, "unittest.mock.Mock.side_effect"]], "unittest.mock": [[404, "module-unittest.mock"]], "urllib": [[407, "module-urllib"]], "contenttooshorterror": [[408, "urllib.error.ContentTooShortError"]], "httperror": [[408, "urllib.error.HTTPError"]], "urlerror": [[408, "urllib.error.URLError"]], "code (urllib.error.httperror attribute)": [[408, "urllib.error.HTTPError.code"]], "content (urllib.error.contenttooshorterror attribute)": [[408, "urllib.error.ContentTooShortError.content"]], "headers (urllib.error.httperror attribute)": [[408, "urllib.error.HTTPError.headers"]], "reason (urllib.error.httperror attribute)": [[408, "urllib.error.HTTPError.reason"]], "reason (urllib.error.urlerror attribute)": [[408, "urllib.error.URLError.reason"]], "urllib.error": [[408, "module-urllib.error"]], "defragresult (class in urllib.parse)": [[409, "urllib.parse.DefragResult"]], "defragresultbytes (class in urllib.parse)": [[409, "urllib.parse.DefragResultBytes"]], "parseresult (class in urllib.parse)": [[409, "urllib.parse.ParseResult"]], "parseresultbytes (class in urllib.parse)": [[409, "urllib.parse.ParseResultBytes"]], "rfc 1738": [[409, "index-13"]], "rfc 1808": [[409, "index-1"], [409, "index-12"], [492, "index-43"]], "rfc 2368": [[409, "index-11"]], "rfc 2396": [[409, "index-10"], [409, "index-3"], [409, "index-6"], [492, "index-44"], [494, "index-34"]], "rfc 2732": [[409, "index-9"], [484, "index-10"], [489, "index-13"]], "splitresult (class in urllib.parse)": [[409, "urllib.parse.SplitResult"]], "splitresultbytes (class in urllib.parse)": [[409, "urllib.parse.SplitResultBytes"]], "geturl() (urllib.parse.urllib.parse.splitresult method)": [[409, "urllib.parse.urllib.parse.SplitResult.geturl"]], "parse_qs() (in module urllib.parse)": [[409, "urllib.parse.parse_qs"]], "parse_qsl() (in module urllib.parse)": [[409, "urllib.parse.parse_qsl"]], "parsing": [[409, "index-0"]], "quote() (in module urllib.parse)": [[409, "urllib.parse.quote"]], "quote_from_bytes() (in module urllib.parse)": [[409, "urllib.parse.quote_from_bytes"]], "quote_plus() (in module urllib.parse)": [[409, "urllib.parse.quote_plus"]], "relative": [[409, "index-0"], [451, "index-39"]], "unquote() (in module urllib.parse)": [[409, "urllib.parse.unquote"]], "unquote_plus() (in module urllib.parse)": [[409, "urllib.parse.unquote_plus"]], "unquote_to_bytes() (in module urllib.parse)": [[409, "urllib.parse.unquote_to_bytes"]], "unwrap() (in module urllib.parse)": [[409, "urllib.parse.unwrap"]], "urldefrag() (in module urllib.parse)": [[409, "urllib.parse.urldefrag"]], "urlencode() (in module urllib.parse)": [[409, "urllib.parse.urlencode"]], "urljoin() (in module urllib.parse)": [[409, "urllib.parse.urljoin"]], "urllib.parse": [[409, "module-urllib.parse"]], "urlparse() (in module urllib.parse)": [[409, "urllib.parse.urlparse"]], "urlsplit() (in module urllib.parse)": [[409, "urllib.parse.urlsplit"]], "urlunparse() (in module urllib.parse)": [[409, "urllib.parse.urlunparse"]], "urlunsplit() (in module urllib.parse)": [[409, "urllib.parse.urlunsplit"]], "abstractbasicauthhandler (class in urllib.request)": [[410, "urllib.request.AbstractBasicAuthHandler"]], "abstractdigestauthhandler (class in urllib.request)": [[410, "urllib.request.AbstractDigestAuthHandler"]], "basehandler (class in urllib.request)": [[410, "urllib.request.BaseHandler"]], "cacheftphandler (class in urllib.request)": [[410, "urllib.request.CacheFTPHandler"]], "datahandler (class in urllib.request)": [[410, "urllib.request.DataHandler"]], "ftphandler (class in urllib.request)": [[410, "urllib.request.FTPHandler"]], "fancyurlopener (class in urllib.request)": [[410, "urllib.request.FancyURLopener"]], "filehandler (class in urllib.request)": [[410, "urllib.request.FileHandler"]], "httpbasicauthhandler (class in urllib.request)": [[410, "urllib.request.HTTPBasicAuthHandler"]], "httpcookieprocessor (class in urllib.request)": [[410, "urllib.request.HTTPCookieProcessor"]], "httpdefaulterrorhandler (class in urllib.request)": [[410, "urllib.request.HTTPDefaultErrorHandler"]], "httpdigestauthhandler (class in urllib.request)": [[410, "urllib.request.HTTPDigestAuthHandler"]], "httperrorprocessor (class in urllib.request)": [[410, "urllib.request.HTTPErrorProcessor"]], "httphandler (class in urllib.request)": [[410, "urllib.request.HTTPHandler"]], "httppasswordmgr (class in urllib.request)": [[410, "urllib.request.HTTPPasswordMgr"]], "httppasswordmgrwithdefaultrealm (class in urllib.request)": [[410, "urllib.request.HTTPPasswordMgrWithDefaultRealm"]], "httppasswordmgrwithpriorauth (class in urllib.request)": [[410, "urllib.request.HTTPPasswordMgrWithPriorAuth"]], "httpredirecthandler (class in urllib.request)": [[410, "urllib.request.HTTPRedirectHandler"]], "httpshandler (class in urllib.request)": [[410, "urllib.request.HTTPSHandler"]], "openerdirector (class in urllib.request)": [[410, "urllib.request.OpenerDirector"]], "proxybasicauthhandler (class in urllib.request)": [[410, "urllib.request.ProxyBasicAuthHandler"]], "proxydigestauthhandler (class in urllib.request)": [[410, "urllib.request.ProxyDigestAuthHandler"]], "proxyhandler (class in urllib.request)": [[410, "urllib.request.ProxyHandler"]], "rfc 2397": [[410, "index-7"]], "request (class in urllib.request)": [[410, "urllib.request.Request"]], "urlopener (class in urllib.request)": [[410, "urllib.request.URLopener"]], "unknownhandler (class in urllib.request)": [[410, "urllib.request.UnknownHandler"]], "add_handler() (urllib.request.openerdirector method)": [[410, "urllib.request.OpenerDirector.add_handler"]], "add_header() (urllib.request.request method)": [[410, "urllib.request.Request.add_header"]], "add_parent() (urllib.request.basehandler method)": [[410, "urllib.request.BaseHandler.add_parent"]], "add_password() (urllib.request.httppasswordmgr method)": [[410, "urllib.request.HTTPPasswordMgr.add_password"]], "add_password() (urllib.request.httppasswordmgrwithpriorauth method)": [[410, "urllib.request.HTTPPasswordMgrWithPriorAuth.add_password"]], "add_unredirected_header() (urllib.request.request method)": [[410, "urllib.request.Request.add_unredirected_header"]], "addinfourl (class in urllib.response)": [[410, "urllib.response.addinfourl"]], "build_opener() (in module urllib.request)": [[410, "urllib.request.build_opener"]], "close() (urllib.request.basehandler method)": [[410, "urllib.request.BaseHandler.close"]], "code (urllib.response.addinfourl attribute)": [[410, "urllib.response.addinfourl.code"]], "cookiejar (urllib.request.httpcookieprocessor attribute)": [[410, "urllib.request.HTTPCookieProcessor.cookiejar"]], "data (urllib.request.request attribute)": [[410, "urllib.request.Request.data"]], "data_open() (urllib.request.datahandler method)": [[410, "urllib.request.DataHandler.data_open"]], "default_open() (urllib.request.basehandler method)": [[410, "urllib.request.BaseHandler.default_open"]], "error() (urllib.request.openerdirector method)": [[410, "urllib.request.OpenerDirector.error"]], "file_open() (urllib.request.filehandler method)": [[410, "urllib.request.FileHandler.file_open"]], "find_user_password() (urllib.request.httppasswordmgr method)": [[410, "urllib.request.HTTPPasswordMgr.find_user_password"]], "find_user_password() (urllib.request.httppasswordmgrwithpriorauth method)": [[410, "urllib.request.HTTPPasswordMgrWithPriorAuth.find_user_password"]], "ftp_open() (urllib.request.ftphandler method)": [[410, "urllib.request.FTPHandler.ftp_open"]], "full_url (urllib.request.request attribute)": [[410, "urllib.request.Request.full_url"]], "get_full_url() (urllib.request.request method)": [[410, "urllib.request.Request.get_full_url"]], "get_header() (urllib.request.request method)": [[410, "urllib.request.Request.get_header"]], "get_method() (urllib.request.request method)": [[410, "urllib.request.Request.get_method"]], "getcode() (urllib.response.addinfourl method)": [[410, "urllib.response.addinfourl.getcode"]], "getproxies() (in module urllib.request)": [[410, "urllib.request.getproxies"]], "geturl() (urllib.response.addinfourl method)": [[410, "urllib.response.addinfourl.geturl"]], "has_header() (urllib.request.request method)": [[410, "urllib.request.Request.has_header"]], "header_items() (urllib.request.request method)": [[410, "urllib.request.Request.header_items"]], "headers (urllib.response.addinfourl attribute)": [[410, "urllib.response.addinfourl.headers"]], "host (urllib.request.request attribute)": [[410, "urllib.request.Request.host"]], "http_error_301() (urllib.request.httpredirecthandler method)": [[410, "urllib.request.HTTPRedirectHandler.http_error_301"]], "http_error_302() (urllib.request.httpredirecthandler method)": [[410, "urllib.request.HTTPRedirectHandler.http_error_302"]], "http_error_303() (urllib.request.httpredirecthandler method)": [[410, "urllib.request.HTTPRedirectHandler.http_error_303"]], "http_error_307() (urllib.request.httpredirecthandler method)": [[410, "urllib.request.HTTPRedirectHandler.http_error_307"]], "http_error_308() (urllib.request.httpredirecthandler method)": [[410, "urllib.request.HTTPRedirectHandler.http_error_308"]], "http_error_401() (urllib.request.httpbasicauthhandler method)": [[410, "urllib.request.HTTPBasicAuthHandler.http_error_401"]], "http_error_401() (urllib.request.httpdigestauthhandler method)": [[410, "urllib.request.HTTPDigestAuthHandler.http_error_401"]], "http_error_407() (urllib.request.proxybasicauthhandler method)": [[410, "urllib.request.ProxyBasicAuthHandler.http_error_407"]], "http_error_407() (urllib.request.proxydigestauthhandler method)": [[410, "urllib.request.ProxyDigestAuthHandler.http_error_407"]], "http_error_auth_reqed() (urllib.request.abstractbasicauthhandler method)": [[410, "urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed"]], "http_error_auth_reqed() (urllib.request.abstractdigestauthhandler method)": [[410, "urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed"]], "http_error_default() (urllib.request.basehandler method)": [[410, "urllib.request.BaseHandler.http_error_default"]], "http_open() (urllib.request.httphandler method)": [[410, "urllib.request.HTTPHandler.http_open"]], "http_response() (urllib.request.httperrorprocessor method)": [[410, "urllib.request.HTTPErrorProcessor.http_response"]], "https_open() (urllib.request.httpshandler method)": [[410, "urllib.request.HTTPSHandler.https_open"]], "https_response() (urllib.request.httperrorprocessor method)": [[410, "urllib.request.HTTPErrorProcessor.https_response"]], "info() (urllib.response.addinfourl method)": [[410, "urllib.response.addinfourl.info"]], "install_opener() (in module urllib.request)": [[410, "urllib.request.install_opener"]], "is_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [[410, "urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated"]], "method (urllib.request.request attribute)": [[410, "urllib.request.Request.method"]], "no_proxy": [[410, "index-3"]], "open() (urllib.request.openerdirector method)": [[410, "urllib.request.OpenerDirector.open"]], "open() (urllib.request.urlopener method)": [[410, "urllib.request.URLopener.open"]], "open_unknown() (urllib.request.urlopener method)": [[410, "urllib.request.URLopener.open_unknown"]], "origin_req_host (urllib.request.request attribute)": [[410, "urllib.request.Request.origin_req_host"]], "parent (urllib.request.basehandler attribute)": [[410, "urllib.request.BaseHandler.parent"]], "pathname2url() (in module urllib.request)": [[410, "urllib.request.pathname2url"]], "prompt_user_passwd() (urllib.request.fancyurlopener method)": [[410, "urllib.request.FancyURLopener.prompt_user_passwd"]], "redirect_request() (urllib.request.httpredirecthandler method)": [[410, "urllib.request.HTTPRedirectHandler.redirect_request"]], "remove_header() (urllib.request.request method)": [[410, "urllib.request.Request.remove_header"]], "retrieve() (urllib.request.urlopener method)": [[410, "urllib.request.URLopener.retrieve"]], "selector (urllib.request.request attribute)": [[410, "urllib.request.Request.selector"]], "setmaxconns() (urllib.request.cacheftphandler method)": [[410, "urllib.request.CacheFTPHandler.setMaxConns"]], "settimeout() (urllib.request.cacheftphandler method)": [[410, "urllib.request.CacheFTPHandler.setTimeout"]], "set_proxy() (urllib.request.request method)": [[410, "urllib.request.Request.set_proxy"]], "status (urllib.response.addinfourl attribute)": [[410, "urllib.response.addinfourl.status"]], "type (urllib.request.request attribute)": [[410, "urllib.request.Request.type"]], "unknown_open() (urllib.request.basehandler method)": [[410, "urllib.request.BaseHandler.unknown_open"]], "unknown_open() (urllib.request.unknownhandler method)": [[410, "urllib.request.UnknownHandler.unknown_open"]], "unverifiable (urllib.request.request attribute)": [[410, "urllib.request.Request.unverifiable"]], "update_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [[410, "urllib.request.HTTPPasswordMgrWithPriorAuth.update_authenticated"]], "url (urllib.response.addinfourl attribute)": [[410, "urllib.response.addinfourl.url"]], "url2pathname() (in module urllib.request)": [[410, "urllib.request.url2pathname"]], "urlcleanup() (in module urllib.request)": [[410, "urllib.request.urlcleanup"]], "urllib.response": [[410, "module-urllib.response"]], "urlopen() (in module urllib.request)": [[410, "urllib.request.urlopen"]], "urlretrieve() (in module urllib.request)": [[410, "urllib.request.urlretrieve"]], "version (urllib.request.urlopener attribute)": [[410, "urllib.request.URLopener.version"]], "robotfileparser (class in urllib.robotparser)": [[411, "urllib.robotparser.RobotFileParser"]], "can_fetch() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.can_fetch"]], "crawl_delay() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.crawl_delay"]], "modified() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.modified"]], "mtime() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.mtime"]], "parse() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.parse"]], "read() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.read"]], "request_rate() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.request_rate"]], "robots.txt": [[411, "index-0"]], "set_url() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.set_url"]], "site_maps() (urllib.robotparser.robotfileparser method)": [[411, "urllib.robotparser.RobotFileParser.site_maps"]], "urllib.robotparser": [[411, "module-urllib.robotparser"]], "ellinghouse, lance": [[412, "index-1"]], "jansen, jack": [[412, "index-1"]], "pep 594#uu-and-the-uu-encoding": [[412, "index-0"]], "decode() (in module uu)": [[412, "uu.decode"]], "encode() (in module uu)": [[412, "uu.encode"]], "namespace_dns (in module uuid)": [[413, "uuid.NAMESPACE_DNS"]], "namespace_oid (in module uuid)": [[413, "uuid.NAMESPACE_OID"]], "namespace_url (in module uuid)": [[413, "uuid.NAMESPACE_URL"]], "namespace_x500 (in module uuid)": [[413, "uuid.NAMESPACE_X500"]], "reserved_future (in module uuid)": [[413, "uuid.RESERVED_FUTURE"]], "reserved_microsoft (in module uuid)": [[413, "uuid.RESERVED_MICROSOFT"]], "reserved_ncs (in module uuid)": [[413, "uuid.RESERVED_NCS"]], "rfc_4122 (in module uuid)": [[413, "uuid.RFC_4122"]], "safeuuid (class in uuid)": [[413, "uuid.SafeUUID"]], "uuid (class in uuid)": [[413, "uuid.UUID"]], "bytes (uuid.uuid attribute)": [[413, "uuid.UUID.bytes"]], "bytes_le (uuid.uuid attribute)": [[413, "uuid.UUID.bytes_le"]], "clock_seq (uuid.uuid attribute)": [[413, "uuid.UUID.clock_seq"]], "clock_seq_hi_variant (uuid.uuid attribute)": [[413, "uuid.UUID.clock_seq_hi_variant"]], "clock_seq_low (uuid.uuid attribute)": [[413, "uuid.UUID.clock_seq_low"]], "fields (uuid.uuid attribute)": [[413, "uuid.UUID.fields"]], "getnode": [[413, "index-5"]], "getnode() (in module uuid)": [[413, "uuid.getnode"]], "hex (uuid.uuid attribute)": [[413, "uuid.UUID.hex"]], "int (uuid.uuid attribute)": [[413, "uuid.UUID.int"]], "is_safe (uuid.uuid attribute)": [[413, "uuid.UUID.is_safe"]], "node (uuid.uuid attribute)": [[413, "uuid.UUID.node"]], "safe (uuid.safeuuid attribute)": [[413, "uuid.SafeUUID.safe"]], "time (uuid.uuid attribute)": [[413, "uuid.UUID.time"]], "time_hi_version (uuid.uuid attribute)": [[413, "uuid.UUID.time_hi_version"]], "time_low (uuid.uuid attribute)": [[413, "uuid.UUID.time_low"]], "time_mid (uuid.uuid attribute)": [[413, "uuid.UUID.time_mid"]], "unknown (uuid.safeuuid attribute)": [[413, "uuid.SafeUUID.unknown"]], "unsafe (uuid.safeuuid attribute)": [[413, "uuid.SafeUUID.unsafe"]], "urn (uuid.uuid attribute)": [[413, "uuid.UUID.urn"]], "uuid": [[413, "module-uuid"]], "uuid1": [[413, "index-6"]], "uuid1() (in module uuid)": [[413, "uuid.uuid1"]], "uuid3": [[413, "index-7"]], "uuid3() (in module uuid)": [[413, "uuid.uuid3"]], "uuid4": [[413, "index-8"]], "uuid4() (in module uuid)": [[413, "uuid.uuid4"]], "uuid5": [[413, "index-9"]], "uuid5() (in module uuid)": [[413, "uuid.uuid5"]], "variant (uuid.uuid attribute)": [[413, "uuid.UUID.variant"]], "version (uuid.uuid attribute)": [[413, "uuid.UUID.version"]], "envbuilder (class in venv)": [[414, "venv.EnvBuilder"]], "environments": [[414, "index-0"]], "pep 405": [[414, "index-1"], [490, "index-1"]], "create() (in module venv)": [[414, "venv.create"]], "create() (venv.envbuilder method)": [[414, "venv.EnvBuilder.create"]], "create_configuration() (venv.envbuilder method)": [[414, "venv.EnvBuilder.create_configuration"]], "ensure_directories() (venv.envbuilder method)": [[414, "venv.EnvBuilder.ensure_directories"]], "install_scripts() (venv.envbuilder method)": [[414, "venv.EnvBuilder.install_scripts"]], "post_setup() (venv.envbuilder method)": [[414, "venv.EnvBuilder.post_setup"]], "setup_python() (venv.envbuilder method)": [[414, "venv.EnvBuilder.setup_python"]], "setup_scripts() (venv.envbuilder method)": [[414, "venv.EnvBuilder.setup_scripts"]], "upgrade_dependencies() (venv.envbuilder method)": [[414, "venv.EnvBuilder.upgrade_dependencies"]], "venv": [[414, "module-venv"]], "virtual": [[414, "index-0"]], "catch_warnings (class in warnings)": [[415, "warnings.catch_warnings"]], "filterwarnings() (in module warnings)": [[415, "warnings.filterwarnings"]], "formatwarning() (in module warnings)": [[415, "warnings.formatwarning"]], "resetwarnings() (in module warnings)": [[415, "warnings.resetwarnings"]], "showwarning() (in module warnings)": [[415, "warnings.showwarning"]], "simplefilter() (in module warnings)": [[415, "warnings.simplefilter"]], "warn() (in module warnings)": [[415, "warnings.warn"]], "warn_explicit() (in module warnings)": [[415, "warnings.warn_explicit"]], "warnings": [[415, "index-0"], [415, "module-warnings"]], "wave_read (class in wave)": [[416, "wave.Wave_read"]], "wave_write (class in wave)": [[416, "wave.Wave_write"]], "close() (wave.wave_read method)": [[416, "wave.Wave_read.close"]], "close() (wave.wave_write method)": [[416, "wave.Wave_write.close"]], "getcompname() (wave.wave_read method)": [[416, "wave.Wave_read.getcompname"]], "getcomptype() (wave.wave_read method)": [[416, "wave.Wave_read.getcomptype"]], "getframerate() (wave.wave_read method)": [[416, "wave.Wave_read.getframerate"]], "getmark() (wave.wave_read method)": [[416, "wave.Wave_read.getmark"]], "getmarkers() (wave.wave_read method)": [[416, "wave.Wave_read.getmarkers"]], "getnchannels() (wave.wave_read method)": [[416, "wave.Wave_read.getnchannels"]], "getnframes() (wave.wave_read method)": [[416, "wave.Wave_read.getnframes"]], "getparams() (wave.wave_read method)": [[416, "wave.Wave_read.getparams"]], "getsampwidth() (wave.wave_read method)": [[416, "wave.Wave_read.getsampwidth"]], "open() (in module wave)": [[416, "wave.open"]], "readframes() (wave.wave_read method)": [[416, "wave.Wave_read.readframes"]], "rewind() (wave.wave_read method)": [[416, "wave.Wave_read.rewind"]], "setcomptype() (wave.wave_write method)": [[416, "wave.Wave_write.setcomptype"]], "setframerate() (wave.wave_write method)": [[416, "wave.Wave_write.setframerate"]], "setnchannels() (wave.wave_write method)": [[416, "wave.Wave_write.setnchannels"]], "setnframes() (wave.wave_write method)": [[416, "wave.Wave_write.setnframes"]], "setparams() (wave.wave_write method)": [[416, "wave.Wave_write.setparams"]], "setpos() (wave.wave_read method)": [[416, "wave.Wave_read.setpos"]], "setsampwidth() (wave.wave_write method)": [[416, "wave.Wave_write.setsampwidth"]], "tell() (wave.wave_read method)": [[416, "wave.Wave_read.tell"]], "tell() (wave.wave_write method)": [[416, "wave.Wave_write.tell"]], "wave": [[416, "module-wave"]], "writeframes() (wave.wave_write method)": [[416, "wave.Wave_write.writeframes"]], "writeframesraw() (wave.wave_write method)": [[416, "wave.Wave_write.writeframesraw"]], "callableproxytype (in module weakref)": [[417, "weakref.CallableProxyType"]], "pep 205": [[417, "index-2"], [478, "index-9"]], "proxytype (in module weakref)": [[417, "weakref.ProxyType"]], "proxytypes (in module weakref)": [[417, "weakref.ProxyTypes"]], "referencetype (in module weakref)": [[417, "weakref.ReferenceType"]], "weakkeydictionary (class in weakref)": [[417, "weakref.WeakKeyDictionary"]], "weakmethod (class in weakref)": [[417, "weakref.WeakMethod"]], "weakset (class in weakref)": [[417, "weakref.WeakSet"]], "weakvaluedictionary (class in weakref)": [[417, "weakref.WeakValueDictionary"]], "__call__() (weakref.finalize method)": [[417, "weakref.finalize.__call__"]], "__callback__ (weakref.ref attribute)": [[417, "weakref.ref.__callback__"]], "alive (weakref.finalize attribute)": [[417, "weakref.finalize.alive"]], "atexit (weakref.finalize attribute)": [[417, "weakref.finalize.atexit"]], "detach() (weakref.finalize method)": [[417, "weakref.finalize.detach"]], "finalize (class in weakref)": [[417, "weakref.finalize"]], "getweakrefcount() (in module weakref)": [[417, "weakref.getweakrefcount"]], "getweakrefs() (in module weakref)": [[417, "weakref.getweakrefs"]], "keyrefs() (weakref.weakkeydictionary method)": [[417, "weakref.WeakKeyDictionary.keyrefs"]], "peek() (weakref.finalize method)": [[417, "weakref.finalize.peek"]], "proxy() (in module weakref)": [[417, "weakref.proxy"]], "ref (class in weakref)": [[417, "weakref.ref"]], "valuerefs() (weakref.weakvaluedictionary method)": [[417, "weakref.WeakValueDictionary.valuerefs"]], "weakref": [[417, "module-weakref"]], "browser": [[418, "index-0"], [418, "index-1"]], "kdedir": [[418, "index-2"]], "get() (in module webbrowser)": [[418, "webbrowser.get"]], "name (in module webbrowser)": [[418, "webbrowser.name"]], "open() (in module webbrowser)": [[418, "webbrowser.open"]], "open() (webbrowser.controller method)": [[418, "webbrowser.controller.open"]], "open_new() (in module webbrowser)": [[418, "webbrowser.open_new"]], "open_new() (webbrowser.controller method)": [[418, "webbrowser.controller.open_new"]], "open_new_tab() (in module webbrowser)": [[418, "webbrowser.open_new_tab"]], "open_new_tab() (webbrowser.controller method)": [[418, "webbrowser.controller.open_new_tab"]], "register() (in module webbrowser)": [[418, "webbrowser.register"]], "webbrowser": [[418, "module-webbrowser"]], "close() (winreg.pyhkey method)": [[420, "winreg.PyHKEY.Close"]], "closekey() (in module winreg)": [[420, "winreg.CloseKey"]], "connectregistry() (in module winreg)": [[420, "winreg.ConnectRegistry"]], "createkey() (in module winreg)": [[420, "winreg.CreateKey"]], "createkeyex() (in module winreg)": [[420, "winreg.CreateKeyEx"]], "deletekey() (in module winreg)": [[420, "winreg.DeleteKey"]], "deletekeyex() (in module winreg)": [[420, "winreg.DeleteKeyEx"]], "deletevalue() (in module winreg)": [[420, "winreg.DeleteValue"]], "detach() (winreg.pyhkey method)": [[420, "winreg.PyHKEY.Detach"]], "disablereflectionkey() (in module winreg)": [[420, "winreg.DisableReflectionKey"]], "enablereflectionkey() (in module winreg)": [[420, "winreg.EnableReflectionKey"]], "enumkey() (in module winreg)": [[420, "winreg.EnumKey"]], "enumvalue() (in module winreg)": [[420, "winreg.EnumValue"]], "expandenvironmentstrings() (in module winreg)": [[420, "winreg.ExpandEnvironmentStrings"]], "flushkey() (in module winreg)": [[420, "winreg.FlushKey"]], "hkey_classes_root (in module winreg)": [[420, "winreg.HKEY_CLASSES_ROOT"]], "hkey_current_config (in module winreg)": [[420, "winreg.HKEY_CURRENT_CONFIG"]], "hkey_current_user (in module winreg)": [[420, "winreg.HKEY_CURRENT_USER"]], "hkey_dyn_data (in module winreg)": [[420, "winreg.HKEY_DYN_DATA"]], "hkey_local_machine (in module winreg)": [[420, "winreg.HKEY_LOCAL_MACHINE"]], "hkey_performance_data (in module winreg)": [[420, "winreg.HKEY_PERFORMANCE_DATA"]], "hkey_users (in module winreg)": [[420, "winreg.HKEY_USERS"]], "key_all_access (in module winreg)": [[420, "winreg.KEY_ALL_ACCESS"]], "key_create_link (in module winreg)": [[420, "winreg.KEY_CREATE_LINK"]], "key_create_sub_key (in module winreg)": [[420, "winreg.KEY_CREATE_SUB_KEY"]], "key_enumerate_sub_keys (in module winreg)": [[420, "winreg.KEY_ENUMERATE_SUB_KEYS"]], "key_execute (in module winreg)": [[420, "winreg.KEY_EXECUTE"]], "key_notify (in module winreg)": [[420, "winreg.KEY_NOTIFY"]], "key_query_value (in module winreg)": [[420, "winreg.KEY_QUERY_VALUE"]], "key_read (in module winreg)": [[420, "winreg.KEY_READ"]], "key_set_value (in module winreg)": [[420, "winreg.KEY_SET_VALUE"]], "key_wow64_32key (in module winreg)": [[420, "winreg.KEY_WOW64_32KEY"]], "key_wow64_64key (in module winreg)": [[420, "winreg.KEY_WOW64_64KEY"]], "key_write (in module winreg)": [[420, "winreg.KEY_WRITE"]], "loadkey() (in module winreg)": [[420, "winreg.LoadKey"]], "openkey() (in module winreg)": [[420, "winreg.OpenKey"]], "openkeyex() (in module winreg)": [[420, "winreg.OpenKeyEx"]], "queryinfokey() (in module winreg)": [[420, "winreg.QueryInfoKey"]], "queryreflectionkey() (in module winreg)": [[420, "winreg.QueryReflectionKey"]], "queryvalue() (in module winreg)": [[420, "winreg.QueryValue"]], "queryvalueex() (in module winreg)": [[420, "winreg.QueryValueEx"]], "reg_binary (in module winreg)": [[420, "winreg.REG_BINARY"]], "reg_dword (in module winreg)": [[420, "winreg.REG_DWORD"]], "reg_dword_big_endian (in module winreg)": [[420, "winreg.REG_DWORD_BIG_ENDIAN"]], "reg_dword_little_endian (in module winreg)": [[420, "winreg.REG_DWORD_LITTLE_ENDIAN"]], "reg_expand_sz (in module winreg)": [[420, "winreg.REG_EXPAND_SZ"]], "reg_full_resource_descriptor (in module winreg)": [[420, "winreg.REG_FULL_RESOURCE_DESCRIPTOR"]], "reg_link (in module winreg)": [[420, "winreg.REG_LINK"]], "reg_multi_sz (in module winreg)": [[420, "winreg.REG_MULTI_SZ"]], "reg_none (in module winreg)": [[420, "winreg.REG_NONE"]], "reg_qword (in module winreg)": [[420, "winreg.REG_QWORD"]], "reg_qword_little_endian (in module winreg)": [[420, "winreg.REG_QWORD_LITTLE_ENDIAN"]], "reg_resource_list (in module winreg)": [[420, "winreg.REG_RESOURCE_LIST"]], "reg_resource_requirements_list (in module winreg)": [[420, "winreg.REG_RESOURCE_REQUIREMENTS_LIST"]], "reg_sz (in module winreg)": [[420, "winreg.REG_SZ"]], "savekey() (in module winreg)": [[420, "winreg.SaveKey"]], "setvalue() (in module winreg)": [[420, "winreg.SetValue"]], "setvalueex() (in module winreg)": [[420, "winreg.SetValueEx"]], "__enter__() (winreg.pyhkey method)": [[420, "winreg.PyHKEY.__enter__"]], "__exit__() (winreg.pyhkey method)": [[420, "winreg.PyHKEY.__exit__"]], "winreg": [[420, "module-winreg"]], "beep() (in module winsound)": [[421, "winsound.Beep"]], "mb_iconasterisk (in module winsound)": [[421, "winsound.MB_ICONASTERISK"]], "mb_iconexclamation (in module winsound)": [[421, "winsound.MB_ICONEXCLAMATION"]], "mb_iconhand (in module winsound)": [[421, "winsound.MB_ICONHAND"]], "mb_iconquestion (in module winsound)": [[421, "winsound.MB_ICONQUESTION"]], "mb_ok (in module winsound)": [[421, "winsound.MB_OK"]], "messagebeep() (in module winsound)": [[421, "winsound.MessageBeep"]], "playsound() (in module winsound)": [[421, "winsound.PlaySound"]], "snd_alias (in module winsound)": [[421, "winsound.SND_ALIAS"]], "snd_async (in module winsound)": [[421, "winsound.SND_ASYNC"]], "snd_filename (in module winsound)": [[421, "winsound.SND_FILENAME"]], "snd_loop (in module winsound)": [[421, "winsound.SND_LOOP"]], "snd_memory (in module winsound)": [[421, "winsound.SND_MEMORY"]], "snd_nodefault (in module winsound)": [[421, "winsound.SND_NODEFAULT"]], "snd_nostop (in module winsound)": [[421, "winsound.SND_NOSTOP"]], "snd_nowait (in module winsound)": [[421, "winsound.SND_NOWAIT"]], "snd_purge (in module winsound)": [[421, "winsound.SND_PURGE"]], "winsound": [[421, "module-winsound"]], "basecgihandler (class in wsgiref.handlers)": [[422, "wsgiref.handlers.BaseCGIHandler"]], "basehandler (class in wsgiref.handlers)": [[422, "wsgiref.handlers.BaseHandler"]], "cgihandler (class in wsgiref.handlers)": [[422, "wsgiref.handlers.CGIHandler"]], "errorstream (class in wsgiref.types)": [[422, "wsgiref.types.ErrorStream"]], "filewrapper (class in wsgiref.types)": [[422, "wsgiref.types.FileWrapper"]], "filewrapper (class in wsgiref.util)": [[422, "wsgiref.util.FileWrapper"]], "headers (class in wsgiref.headers)": [[422, "wsgiref.headers.Headers"]], "iiscgihandler (class in wsgiref.handlers)": [[422, "wsgiref.handlers.IISCGIHandler"]], "inputstream (class in wsgiref.types)": [[422, "wsgiref.types.InputStream"]], "pep 3333": [[422, "index-0"], [422, "index-1"], [422, "index-11"], [422, "index-12"], [422, "index-13"], [422, "index-14"], [422, "index-15"], [422, "index-16"], [422, "index-17"], [422, "index-18"], [422, "index-2"], [422, "index-3"], [422, "index-4"], [422, "index-6"], [422, "index-7"], [422, "index-8"], [422, "index-9"], [488, "index-25"], [489, "index-9"]], "simplehandler (class in wsgiref.handlers)": [[422, "wsgiref.handlers.SimpleHandler"]], "startresponse (class in wsgiref.types)": [[422, "wsgiref.types.StartResponse"]], "wsgiapplication (in module wsgiref.types)": [[422, "wsgiref.types.WSGIApplication"]], "wsgienvironment (in module wsgiref.types)": [[422, "wsgiref.types.WSGIEnvironment"]], "wsgirequesthandler (class in wsgiref.simple_server)": [[422, "wsgiref.simple_server.WSGIRequestHandler"]], "wsgiserver (class in wsgiref.simple_server)": [[422, "wsgiref.simple_server.WSGIServer"]], "_flush() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler._flush"]], "_write() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler._write"]], "add_cgi_vars() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.add_cgi_vars"]], "add_header() (wsgiref.headers.headers method)": [[422, "wsgiref.headers.Headers.add_header"]], "application_uri() (in module wsgiref.util)": [[422, "wsgiref.util.application_uri"]], "demo_app() (in module wsgiref.simple_server)": [[422, "wsgiref.simple_server.demo_app"]], "error_body (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.error_body"]], "error_headers (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.error_headers"]], "error_output() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.error_output"]], "error_status (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.error_status"]], "get_all() (wsgiref.headers.headers method)": [[422, "wsgiref.headers.Headers.get_all"]], "get_app() (wsgiref.simple_server.wsgiserver method)": [[422, "wsgiref.simple_server.WSGIServer.get_app"]], "get_environ() (wsgiref.simple_server.wsgirequesthandler method)": [[422, "wsgiref.simple_server.WSGIRequestHandler.get_environ"]], "get_scheme() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.get_scheme"]], "get_stderr() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.get_stderr"]], "get_stderr() (wsgiref.simple_server.wsgirequesthandler method)": [[422, "wsgiref.simple_server.WSGIRequestHandler.get_stderr"]], "get_stdin() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.get_stdin"]], "guess_scheme() (in module wsgiref.util)": [[422, "wsgiref.util.guess_scheme"]], "handle() (wsgiref.simple_server.wsgirequesthandler method)": [[422, "wsgiref.simple_server.WSGIRequestHandler.handle"]], "http_version (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.http_version"]], "is_hop_by_hop() (in module wsgiref.util)": [[422, "wsgiref.util.is_hop_by_hop"]], "log_exception() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.log_exception"]], "make_server() (in module wsgiref.simple_server)": [[422, "wsgiref.simple_server.make_server"]], "origin_server (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.origin_server"]], "os_environ (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.os_environ"]], "read_environ() (in module wsgiref.handlers)": [[422, "wsgiref.handlers.read_environ"]], "request_uri() (in module wsgiref.util)": [[422, "wsgiref.util.request_uri"]], "run() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.run"]], "sendfile() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.sendfile"]], "server_software (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.server_software"]], "set_app() (wsgiref.simple_server.wsgiserver method)": [[422, "wsgiref.simple_server.WSGIServer.set_app"]], "setup_environ() (wsgiref.handlers.basehandler method)": [[422, "wsgiref.handlers.BaseHandler.setup_environ"]], "setup_testing_defaults() (in module wsgiref.util)": [[422, "wsgiref.util.setup_testing_defaults"]], "shift_path_info() (in module wsgiref.util)": [[422, "wsgiref.util.shift_path_info"]], "traceback_limit (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.traceback_limit"]], "validator() (in module wsgiref.validate)": [[422, "wsgiref.validate.validator"]], "wsgi_file_wrapper (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.wsgi_file_wrapper"]], "wsgi_multiprocess (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.wsgi_multiprocess"]], "wsgi_multithread (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.wsgi_multithread"]], "wsgi_run_once (wsgiref.handlers.basehandler attribute)": [[422, "wsgiref.handlers.BaseHandler.wsgi_run_once"]], "wsgiref": [[422, "module-wsgiref"]], "wsgiref.handlers": [[422, "module-wsgiref.handlers"]], "wsgiref.headers": [[422, "module-wsgiref.headers"]], "wsgiref.simple_server": [[422, "module-wsgiref.simple_server"]], "wsgiref.types": [[422, "module-wsgiref.types"]], "wsgiref.util": [[422, "module-wsgiref.util"]], "wsgiref.validate": [[422, "module-wsgiref.validate"]], "conversionerror": [[423, "xdrlib.ConversionError"]], "pep 594#xdrlib": [[423, "index-1"]], "packer (class in xdrlib)": [[423, "xdrlib.Packer"]], "rfc 1014": [[423, "index-2"], [423, "index-3"]], "rfc 1832": [[423, "index-4"], [423, "index-5"]], "unpacker (class in xdrlib)": [[423, "xdrlib.Unpacker"]], "xdr": [[423, "index-0"]], "done() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.done"]], "get_buffer() (xdrlib.packer method)": [[423, "xdrlib.Packer.get_buffer"]], "get_buffer() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.get_buffer"]], "get_position() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.get_position"]], "pack_array() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_array"]], "pack_bytes() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_bytes"]], "pack_double() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_double"]], "pack_farray() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_farray"]], "pack_float() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_float"]], "pack_fopaque() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_fopaque"]], "pack_fstring() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_fstring"]], "pack_list() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_list"]], "pack_opaque() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_opaque"]], "pack_string() (xdrlib.packer method)": [[423, "xdrlib.Packer.pack_string"]], "reset() (xdrlib.packer method)": [[423, "xdrlib.Packer.reset"]], "reset() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.reset"]], "set_position() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.set_position"]], "unpack_array() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_array"]], "unpack_bytes() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_bytes"]], "unpack_double() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_double"]], "unpack_farray() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_farray"]], "unpack_float() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_float"]], "unpack_fopaque() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_fopaque"]], "unpack_fstring() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_fstring"]], "unpack_list() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_list"]], "unpack_opaque() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_opaque"]], "unpack_string() (xdrlib.unpacker method)": [[423, "xdrlib.Unpacker.unpack_string"]], "xdrlib": [[423, "module-xdrlib"]], "xml": [[424, "module-xml"]], "domexception": [[425, "xml.dom.DOMException"]], "domstringsizeerr": [[425, "xml.dom.DomstringSizeErr"]], "empty_namespace (in module xml.dom)": [[425, "xml.dom.EMPTY_NAMESPACE"]], "hierarchyrequesterr": [[425, "xml.dom.HierarchyRequestErr"]], "indexsizeerr": [[425, "xml.dom.IndexSizeErr"]], "inuseattributeerr": [[425, "xml.dom.InuseAttributeErr"]], "invalidaccesserr": [[425, "xml.dom.InvalidAccessErr"]], "invalidcharactererr": [[425, "xml.dom.InvalidCharacterErr"]], "invalidmodificationerr": [[425, "xml.dom.InvalidModificationErr"]], "invalidstateerr": [[425, "xml.dom.InvalidStateErr"]], "namespaceerr": [[425, "xml.dom.NamespaceErr"]], "nodataallowederr": [[425, "xml.dom.NoDataAllowedErr"]], "nomodificationallowederr": [[425, "xml.dom.NoModificationAllowedErr"]], "notfounderr": [[425, "xml.dom.NotFoundErr"]], "notsupportederr": [[425, "xml.dom.NotSupportedErr"]], "python_dom": [[425, "index-0"]], "syntaxerr": [[425, "xml.dom.SyntaxErr"]], "wrongdocumenterr": [[425, "xml.dom.WrongDocumentErr"]], "xhtml_namespace (in module xml.dom)": [[425, "xml.dom.XHTML_NAMESPACE"]], "xmlns_namespace (in module xml.dom)": [[425, "xml.dom.XMLNS_NAMESPACE"]], "xml_namespace (in module xml.dom)": [[425, "xml.dom.XML_NAMESPACE"]], "appendchild() (xml.dom.node method)": [[425, "xml.dom.Node.appendChild"]], "attributes (xml.dom.node attribute)": [[425, "xml.dom.Node.attributes"]], "childnodes (xml.dom.node attribute)": [[425, "xml.dom.Node.childNodes"]], "clonenode() (xml.dom.node method)": [[425, "xml.dom.Node.cloneNode"]], "createattribute() (xml.dom.document method)": [[425, "xml.dom.Document.createAttribute"]], "createattributens() (xml.dom.document method)": [[425, "xml.dom.Document.createAttributeNS"]], "createcomment() (xml.dom.document method)": [[425, "xml.dom.Document.createComment"]], "createdocument() (xml.dom.domimplementation method)": [[425, "xml.dom.DOMImplementation.createDocument"]], "createdocumenttype() (xml.dom.domimplementation method)": [[425, "xml.dom.DOMImplementation.createDocumentType"]], "createelement() (xml.dom.document method)": [[425, "xml.dom.Document.createElement"]], "createelementns() (xml.dom.document method)": [[425, "xml.dom.Document.createElementNS"]], "createprocessinginstruction() (xml.dom.document method)": [[425, "xml.dom.Document.createProcessingInstruction"]], "createtextnode() (xml.dom.document method)": [[425, "xml.dom.Document.createTextNode"]], "data (xml.dom.comment attribute)": [[425, "xml.dom.Comment.data"]], "data (xml.dom.processinginstruction attribute)": [[425, "xml.dom.ProcessingInstruction.data"]], "data (xml.dom.text attribute)": [[425, "xml.dom.Text.data"]], "documentelement (xml.dom.document attribute)": [[425, "xml.dom.Document.documentElement"]], "entities (xml.dom.documenttype attribute)": [[425, "xml.dom.DocumentType.entities"]], "firstchild (xml.dom.node attribute)": [[425, "xml.dom.Node.firstChild"]], "getattribute() (xml.dom.element method)": [[425, "xml.dom.Element.getAttribute"]], "getattributens() (xml.dom.element method)": [[425, "xml.dom.Element.getAttributeNS"]], "getattributenode() (xml.dom.element method)": [[425, "xml.dom.Element.getAttributeNode"]], "getattributenodens() (xml.dom.element method)": [[425, "xml.dom.Element.getAttributeNodeNS"]], "getdomimplementation() (in module xml.dom)": [[425, "xml.dom.getDOMImplementation"]], "getelementsbytagname() (xml.dom.document method)": [[425, "xml.dom.Document.getElementsByTagName"]], "getelementsbytagname() (xml.dom.element method)": [[425, "xml.dom.Element.getElementsByTagName"]], "getelementsbytagnamens() (xml.dom.document method)": [[425, "xml.dom.Document.getElementsByTagNameNS"]], "getelementsbytagnamens() (xml.dom.element method)": [[425, "xml.dom.Element.getElementsByTagNameNS"]], "hasattribute() (xml.dom.element method)": [[425, "xml.dom.Element.hasAttribute"]], "hasattributens() (xml.dom.element method)": [[425, "xml.dom.Element.hasAttributeNS"]], "hasattributes() (xml.dom.node method)": [[425, "xml.dom.Node.hasAttributes"]], "haschildnodes() (xml.dom.node method)": [[425, "xml.dom.Node.hasChildNodes"]], "hasfeature() (xml.dom.domimplementation method)": [[425, "xml.dom.DOMImplementation.hasFeature"]], "insertbefore() (xml.dom.node method)": [[425, "xml.dom.Node.insertBefore"]], "internalsubset (xml.dom.documenttype attribute)": [[425, "xml.dom.DocumentType.internalSubset"]], "issamenode() (xml.dom.node method)": [[425, "xml.dom.Node.isSameNode"]], "item() (xml.dom.namednodemap method)": [[425, "xml.dom.NamedNodeMap.item"]], "item() (xml.dom.nodelist method)": [[425, "xml.dom.NodeList.item"]], "lastchild (xml.dom.node attribute)": [[425, "xml.dom.Node.lastChild"]], "length (xml.dom.namednodemap attribute)": [[425, "xml.dom.NamedNodeMap.length"]], "length (xml.dom.nodelist attribute)": [[425, "xml.dom.NodeList.length"]], "localname (xml.dom.attr attribute)": [[425, "xml.dom.Attr.localName"]], "localname (xml.dom.node attribute)": [[425, "xml.dom.Node.localName"]], "name (xml.dom.attr attribute)": [[425, "xml.dom.Attr.name"]], "name (xml.dom.documenttype attribute)": [[425, "xml.dom.DocumentType.name"]], "namespaceuri (xml.dom.node attribute)": [[425, "xml.dom.Node.namespaceURI"]], "nextsibling (xml.dom.node attribute)": [[425, "xml.dom.Node.nextSibling"]], "nodename (xml.dom.node attribute)": [[425, "xml.dom.Node.nodeName"]], "nodetype (xml.dom.node attribute)": [[425, "xml.dom.Node.nodeType"]], "nodevalue (xml.dom.node attribute)": [[425, "xml.dom.Node.nodeValue"]], "normalize() (xml.dom.node method)": [[425, "xml.dom.Node.normalize"]], "notations (xml.dom.documenttype attribute)": [[425, "xml.dom.DocumentType.notations"]], "parentnode (xml.dom.node attribute)": [[425, "xml.dom.Node.parentNode"]], "prefix (xml.dom.attr attribute)": [[425, "xml.dom.Attr.prefix"]], "prefix (xml.dom.node attribute)": [[425, "xml.dom.Node.prefix"]], "previoussibling (xml.dom.node attribute)": [[425, "xml.dom.Node.previousSibling"]], "publicid (xml.dom.documenttype attribute)": [[425, "xml.dom.DocumentType.publicId"]], "registerdomimplementation() (in module xml.dom)": [[425, "xml.dom.registerDOMImplementation"]], "removeattribute() (xml.dom.element method)": [[425, "xml.dom.Element.removeAttribute"]], "removeattributens() (xml.dom.element method)": [[425, "xml.dom.Element.removeAttributeNS"]], "removeattributenode() (xml.dom.element method)": [[425, "xml.dom.Element.removeAttributeNode"]], "removechild() (xml.dom.node method)": [[425, "xml.dom.Node.removeChild"]], "replacechild() (xml.dom.node method)": [[425, "xml.dom.Node.replaceChild"]], "setattribute() (xml.dom.element method)": [[425, "xml.dom.Element.setAttribute"]], "setattributens() (xml.dom.element method)": [[425, "xml.dom.Element.setAttributeNS"]], "setattributenode() (xml.dom.element method)": [[425, "xml.dom.Element.setAttributeNode"]], "setattributenodens() (xml.dom.element method)": [[425, "xml.dom.Element.setAttributeNodeNS"]], "systemid (xml.dom.documenttype attribute)": [[425, "xml.dom.DocumentType.systemId"]], "tagname (xml.dom.element attribute)": [[425, "xml.dom.Element.tagName"]], "target (xml.dom.processinginstruction attribute)": [[425, "xml.dom.ProcessingInstruction.target"]], "value (xml.dom.attr attribute)": [[425, "xml.dom.Attr.value"]], "xml.dom": [[425, "module-xml.dom"]], "parse() (in module xml.dom.minidom)": [[426, "xml.dom.minidom.parse"]], "parsestring() (in module xml.dom.minidom)": [[426, "xml.dom.minidom.parseString"]], "toprettyxml() (xml.dom.minidom.node method)": [[426, "xml.dom.minidom.Node.toprettyxml"]], "toxml() (xml.dom.minidom.node method)": [[426, "xml.dom.minidom.Node.toxml"]], "unlink() (xml.dom.minidom.node method)": [[426, "xml.dom.minidom.Node.unlink"]], "writexml() (xml.dom.minidom.node method)": [[426, "xml.dom.minidom.Node.writexml"]], "xml.dom.minidom": [[426, "module-xml.dom.minidom"]], "domeventstream (class in xml.dom.pulldom)": [[427, "xml.dom.pulldom.DOMEventStream"]], "pulldom (class in xml.dom.pulldom)": [[427, "xml.dom.pulldom.PullDom"]], "sax2dom (class in xml.dom.pulldom)": [[427, "xml.dom.pulldom.SAX2DOM"]], "default_bufsize (in module xml.dom.pulldom)": [[427, "xml.dom.pulldom.default_bufsize"]], "expandnode() (xml.dom.pulldom.domeventstream method)": [[427, "xml.dom.pulldom.DOMEventStream.expandNode"]], "getevent() (xml.dom.pulldom.domeventstream method)": [[427, "xml.dom.pulldom.DOMEventStream.getEvent"]], "parse() (in module xml.dom.pulldom)": [[427, "xml.dom.pulldom.parse"]], "parsestring() (in module xml.dom.pulldom)": [[427, "xml.dom.pulldom.parseString"]], "reset() (xml.dom.pulldom.domeventstream method)": [[427, "xml.dom.pulldom.DOMEventStream.reset"]], "xml.dom.pulldom": [[427, "module-xml.dom.pulldom"]], "c14nwritertarget (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.C14NWriterTarget"]], "comment() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.Comment"]], "element (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.Element"]], "elementtree (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.ElementTree"]], "parseerror (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.ParseError"]], "processinginstruction() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.ProcessingInstruction"]], "qname (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.QName"]], "subelement() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.SubElement"]], "treebuilder (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.TreeBuilder"]], "xml() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.XML"]], "xmlid() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.XMLID"]], "xmlparser (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.XMLParser"]], "xmlpullparser (class in xml.etree.elementtree)": [[428, "xml.etree.ElementTree.XMLPullParser"]], "_setroot() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree._setroot"]], "append() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.append"]], "attrib (xml.etree.elementtree.element attribute)": [[428, "xml.etree.ElementTree.Element.attrib"]], "canonicalize() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.canonicalize"]], "clear() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.clear"]], "close() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.close"]], "close() (xml.etree.elementtree.xmlparser method)": [[428, "xml.etree.ElementTree.XMLParser.close"]], "close() (xml.etree.elementtree.xmlpullparser method)": [[428, "xml.etree.ElementTree.XMLPullParser.close"]], "code (xml.etree.elementtree.parseerror attribute)": [[428, "xml.etree.ElementTree.ParseError.code"]], "comment() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.comment"]], "data() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.data"]], "doctype() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.doctype"]], "dump() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.dump"]], "end() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.end"]], "end_ns() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.end_ns"]], "extend() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.extend"]], "feed() (xml.etree.elementtree.xmlparser method)": [[428, "xml.etree.ElementTree.XMLParser.feed"]], "feed() (xml.etree.elementtree.xmlpullparser method)": [[428, "xml.etree.ElementTree.XMLPullParser.feed"]], "find() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.find"]], "find() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.find"]], "findall() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.findall"]], "findall() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.findall"]], "findtext() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.findtext"]], "findtext() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.findtext"]], "flush() (xml.etree.elementtree.xmlparser method)": [[428, "xml.etree.ElementTree.XMLParser.flush"]], "flush() (xml.etree.elementtree.xmlpullparser method)": [[428, "xml.etree.ElementTree.XMLPullParser.flush"]], "fromstring() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.fromstring"]], "fromstringlist() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.fromstringlist"]], "get() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.get"]], "getroot() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.getroot"]], "indent() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.indent"]], "insert() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.insert"]], "iselement() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.iselement"]], "items() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.items"]], "iter() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.iter"]], "iter() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.iter"]], "iterfind() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.iterfind"]], "iterfind() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.iterfind"]], "iterparse() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.iterparse"]], "itertext() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.itertext"]], "keys() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.keys"]], "makeelement() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.makeelement"]], "parse() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.parse"]], "parse() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.parse"]], "pi() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.pi"]], "position (xml.etree.elementtree.parseerror attribute)": [[428, "xml.etree.ElementTree.ParseError.position"]], "read_events() (xml.etree.elementtree.xmlpullparser method)": [[428, "xml.etree.ElementTree.XMLPullParser.read_events"]], "register_namespace() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.register_namespace"]], "remove() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.remove"]], "set() (xml.etree.elementtree.element method)": [[428, "xml.etree.ElementTree.Element.set"]], "start() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.start"]], "start_ns() (xml.etree.elementtree.treebuilder method)": [[428, "xml.etree.ElementTree.TreeBuilder.start_ns"]], "tag (xml.etree.elementtree.element attribute)": [[428, "xml.etree.ElementTree.Element.tag"]], "tail (xml.etree.elementtree.element attribute)": [[428, "xml.etree.ElementTree.Element.tail"]], "text (xml.etree.elementtree.element attribute)": [[428, "xml.etree.ElementTree.Element.text"]], "tostring() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.tostring"]], "tostringlist() (in module xml.etree.elementtree)": [[428, "xml.etree.ElementTree.tostringlist"]], "write() (xml.etree.elementtree.elementtree method)": [[428, "xml.etree.ElementTree.ElementTree.write"]], "xml.etree.elementinclude": [[428, "module-xml.etree.ElementInclude"]], "xml.etree.elementinclude.default_loader()": [[428, "xml.etree.ElementInclude.default_loader"]], "xml.etree.elementinclude.include()": [[428, "xml.etree.ElementInclude.include"]], "xml.etree.elementtree": [[428, "module-xml.etree.ElementTree"]], "saxexception": [[429, "xml.sax.SAXException"]], "saxnotrecognizedexception": [[429, "xml.sax.SAXNotRecognizedException"]], "saxnotsupportedexception": [[429, "xml.sax.SAXNotSupportedException"]], "saxparseexception": [[429, "xml.sax.SAXParseException"]], "getexception() (xml.sax.saxexception method)": [[429, "xml.sax.SAXException.getException"]], "getmessage() (xml.sax.saxexception method)": [[429, "xml.sax.SAXException.getMessage"]], "make_parser() (in module xml.sax)": [[429, "xml.sax.make_parser"]], "parse() (in module xml.sax)": [[429, "xml.sax.parse"]], "parsestring() (in module xml.sax)": [[429, "xml.sax.parseString"]], "xml.sax": [[429, "module-xml.sax"]], "contenthandler (class in xml.sax.handler)": [[430, "xml.sax.handler.ContentHandler"]], "dtdhandler (class in xml.sax.handler)": [[430, "xml.sax.handler.DTDHandler"]], "entityresolver (class in xml.sax.handler)": [[430, "xml.sax.handler.EntityResolver"]], "errorhandler (class in xml.sax.handler)": [[430, "xml.sax.handler.ErrorHandler"]], "lexicalhandler (class in xml.sax.handler)": [[430, "xml.sax.handler.LexicalHandler"]], "all_features (in module xml.sax.handler)": [[430, "xml.sax.handler.all_features"]], "all_properties (in module xml.sax.handler)": [[430, "xml.sax.handler.all_properties"]], "characters() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.characters"]], "comment() (xml.sax.handler.lexicalhandler method)": [[430, "xml.sax.handler.LexicalHandler.comment"]], "endcdata() (xml.sax.handler.lexicalhandler method)": [[430, "xml.sax.handler.LexicalHandler.endCDATA"]], "enddtd() (xml.sax.handler.lexicalhandler method)": [[430, "xml.sax.handler.LexicalHandler.endDTD"]], "enddocument() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.endDocument"]], "endelement() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.endElement"]], "endelementns() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.endElementNS"]], "endprefixmapping() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.endPrefixMapping"]], "error() (xml.sax.handler.errorhandler method)": [[430, "xml.sax.handler.ErrorHandler.error"]], "fatalerror() (xml.sax.handler.errorhandler method)": [[430, "xml.sax.handler.ErrorHandler.fatalError"]], "feature_external_ges (in module xml.sax.handler)": [[430, "xml.sax.handler.feature_external_ges"]], "feature_external_pes (in module xml.sax.handler)": [[430, "xml.sax.handler.feature_external_pes"]], "feature_namespace_prefixes (in module xml.sax.handler)": [[430, "xml.sax.handler.feature_namespace_prefixes"]], "feature_namespaces (in module xml.sax.handler)": [[430, "xml.sax.handler.feature_namespaces"]], "feature_string_interning (in module xml.sax.handler)": [[430, "xml.sax.handler.feature_string_interning"]], "feature_validation (in module xml.sax.handler)": [[430, "xml.sax.handler.feature_validation"]], "ignorablewhitespace() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.ignorableWhitespace"]], "notationdecl() (xml.sax.handler.dtdhandler method)": [[430, "xml.sax.handler.DTDHandler.notationDecl"]], "processinginstruction() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.processingInstruction"]], "property_declaration_handler (in module xml.sax.handler)": [[430, "xml.sax.handler.property_declaration_handler"]], "property_dom_node (in module xml.sax.handler)": [[430, "xml.sax.handler.property_dom_node"]], "property_lexical_handler (in module xml.sax.handler)": [[430, "xml.sax.handler.property_lexical_handler"]], "property_xml_string (in module xml.sax.handler)": [[430, "xml.sax.handler.property_xml_string"]], "resolveentity() (xml.sax.handler.entityresolver method)": [[430, "xml.sax.handler.EntityResolver.resolveEntity"]], "setdocumentlocator() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.setDocumentLocator"]], "skippedentity() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.skippedEntity"]], "startcdata() (xml.sax.handler.lexicalhandler method)": [[430, "xml.sax.handler.LexicalHandler.startCDATA"]], "startdtd() (xml.sax.handler.lexicalhandler method)": [[430, "xml.sax.handler.LexicalHandler.startDTD"]], "startdocument() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.startDocument"]], "startelement() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.startElement"]], "startelementns() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.startElementNS"]], "startprefixmapping() (xml.sax.handler.contenthandler method)": [[430, "xml.sax.handler.ContentHandler.startPrefixMapping"]], "unparsedentitydecl() (xml.sax.handler.dtdhandler method)": [[430, "xml.sax.handler.DTDHandler.unparsedEntityDecl"]], "warning() (xml.sax.handler.errorhandler method)": [[430, "xml.sax.handler.ErrorHandler.warning"]], "xml.sax.handler": [[430, "module-xml.sax.handler"]], "attributesimpl (class in xml.sax.xmlreader)": [[431, "xml.sax.xmlreader.AttributesImpl"]], "attributesnsimpl (class in xml.sax.xmlreader)": [[431, "xml.sax.xmlreader.AttributesNSImpl"]], "incrementalparser (class in xml.sax.xmlreader)": [[431, "xml.sax.xmlreader.IncrementalParser"]], "inputsource (class in xml.sax.xmlreader)": [[431, "xml.sax.xmlreader.InputSource"]], "locator (class in xml.sax.xmlreader)": [[431, "xml.sax.xmlreader.Locator"]], "xmlreader (class in xml.sax.xmlreader)": [[431, "xml.sax.xmlreader.XMLReader"]], "close() (xml.sax.xmlreader.incrementalparser method)": [[431, "xml.sax.xmlreader.IncrementalParser.close"]], "feed() (xml.sax.xmlreader.incrementalparser method)": [[431, "xml.sax.xmlreader.IncrementalParser.feed"]], "getbytestream() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.getByteStream"]], "getcharacterstream() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.getCharacterStream"]], "getcolumnnumber() (xml.sax.xmlreader.locator method)": [[431, "xml.sax.xmlreader.Locator.getColumnNumber"]], "getcontenthandler() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.getContentHandler"]], "getdtdhandler() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.getDTDHandler"]], "getencoding() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.getEncoding"]], "getentityresolver() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.getEntityResolver"]], "geterrorhandler() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.getErrorHandler"]], "getfeature() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.getFeature"]], "getlength() (xml.sax.xmlreader.attributes method)": [[431, "xml.sax.xmlreader.Attributes.getLength"]], "getlinenumber() (xml.sax.xmlreader.locator method)": [[431, "xml.sax.xmlreader.Locator.getLineNumber"]], "getnamebyqname() (xml.sax.xmlreader.attributesns method)": [[431, "xml.sax.xmlreader.AttributesNS.getNameByQName"]], "getnames() (xml.sax.xmlreader.attributes method)": [[431, "xml.sax.xmlreader.Attributes.getNames"]], "getproperty() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.getProperty"]], "getpublicid() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.getPublicId"]], "getpublicid() (xml.sax.xmlreader.locator method)": [[431, "xml.sax.xmlreader.Locator.getPublicId"]], "getqnamebyname() (xml.sax.xmlreader.attributesns method)": [[431, "xml.sax.xmlreader.AttributesNS.getQNameByName"]], "getqnames() (xml.sax.xmlreader.attributesns method)": [[431, "xml.sax.xmlreader.AttributesNS.getQNames"]], "getsystemid() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.getSystemId"]], "getsystemid() (xml.sax.xmlreader.locator method)": [[431, "xml.sax.xmlreader.Locator.getSystemId"]], "gettype() (xml.sax.xmlreader.attributes method)": [[431, "xml.sax.xmlreader.Attributes.getType"]], "getvalue() (xml.sax.xmlreader.attributes method)": [[431, "xml.sax.xmlreader.Attributes.getValue"]], "getvaluebyqname() (xml.sax.xmlreader.attributesns method)": [[431, "xml.sax.xmlreader.AttributesNS.getValueByQName"]], "parse() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.parse"]], "reset() (xml.sax.xmlreader.incrementalparser method)": [[431, "xml.sax.xmlreader.IncrementalParser.reset"]], "setbytestream() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.setByteStream"]], "setcharacterstream() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.setCharacterStream"]], "setcontenthandler() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.setContentHandler"]], "setdtdhandler() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.setDTDHandler"]], "setencoding() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.setEncoding"]], "setentityresolver() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.setEntityResolver"]], "seterrorhandler() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.setErrorHandler"]], "setfeature() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.setFeature"]], "setlocale() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.setLocale"]], "setproperty() (xml.sax.xmlreader.xmlreader method)": [[431, "xml.sax.xmlreader.XMLReader.setProperty"]], "setpublicid() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.setPublicId"]], "setsystemid() (xml.sax.xmlreader.inputsource method)": [[431, "xml.sax.xmlreader.InputSource.setSystemId"]], "xml.sax.xmlreader": [[431, "module-xml.sax.xmlreader"]], "xmlfilterbase (class in xml.sax.saxutils)": [[432, "xml.sax.saxutils.XMLFilterBase"]], "xmlgenerator (class in xml.sax.saxutils)": [[432, "xml.sax.saxutils.XMLGenerator"]], "escape() (in module xml.sax.saxutils)": [[432, "xml.sax.saxutils.escape"]], "prepare_input_source() (in module xml.sax.saxutils)": [[432, "xml.sax.saxutils.prepare_input_source"]], "quoteattr() (in module xml.sax.saxutils)": [[432, "xml.sax.saxutils.quoteattr"]], "unescape() (in module xml.sax.saxutils)": [[432, "xml.sax.saxutils.unescape"]], "xml.sax.saxutils": [[432, "module-xml.sax.saxutils"]], "binary (class in xmlrpc.client)": [[434, "xmlrpc.client.Binary"]], "datetime (class in xmlrpc.client)": [[434, "xmlrpc.client.DateTime"]], "fault (class in xmlrpc.client)": [[434, "xmlrpc.client.Fault"]], "multicall (class in xmlrpc.client)": [[434, "xmlrpc.client.MultiCall"]], "protocolerror (class in xmlrpc.client)": [[434, "xmlrpc.client.ProtocolError"]], "rfc 2045#section-6.8": [[434, "index-0"]], "serverproxy (class in xmlrpc.client)": [[434, "xmlrpc.client.ServerProxy"]], "data (xmlrpc.client.binary attribute)": [[434, "xmlrpc.client.Binary.data"]], "decode() (xmlrpc.client.binary method)": [[434, "xmlrpc.client.Binary.decode"]], "decode() (xmlrpc.client.datetime method)": [[434, "xmlrpc.client.DateTime.decode"]], "dumps() (in module xmlrpc.client)": [[434, "xmlrpc.client.dumps"]], "encode() (xmlrpc.client.binary method)": [[434, "xmlrpc.client.Binary.encode"]], "encode() (xmlrpc.client.datetime method)": [[434, "xmlrpc.client.DateTime.encode"]], "errcode (xmlrpc.client.protocolerror attribute)": [[434, "xmlrpc.client.ProtocolError.errcode"]], "errmsg (xmlrpc.client.protocolerror attribute)": [[434, "xmlrpc.client.ProtocolError.errmsg"]], "faultcode (xmlrpc.client.fault attribute)": [[434, "xmlrpc.client.Fault.faultCode"]], "faultstring (xmlrpc.client.fault attribute)": [[434, "xmlrpc.client.Fault.faultString"]], "headers (xmlrpc.client.protocolerror attribute)": [[434, "xmlrpc.client.ProtocolError.headers"]], "listmethods() (xmlrpc.client.serverproxy.system method)": [[434, "xmlrpc.client.ServerProxy.system.listMethods"]], "loads() (in module xmlrpc.client)": [[434, "xmlrpc.client.loads"]], "methodhelp() (xmlrpc.client.serverproxy.system method)": [[434, "xmlrpc.client.ServerProxy.system.methodHelp"]], "methodsignature() (xmlrpc.client.serverproxy.system method)": [[434, "xmlrpc.client.ServerProxy.system.methodSignature"]], "url (xmlrpc.client.protocolerror attribute)": [[434, "xmlrpc.client.ProtocolError.url"]], "xmlrpc.client": [[434, "module-xmlrpc.client"]], "cgixmlrpcrequesthandler (class in xmlrpc.server)": [[435, "xmlrpc.server.CGIXMLRPCRequestHandler"]], "doccgixmlrpcrequesthandler (class in xmlrpc.server)": [[435, "xmlrpc.server.DocCGIXMLRPCRequestHandler"]], "docxmlrpcrequesthandler (class in xmlrpc.server)": [[435, "xmlrpc.server.DocXMLRPCRequestHandler"]], "docxmlrpcserver (class in xmlrpc.server)": [[435, "xmlrpc.server.DocXMLRPCServer"]], "simplexmlrpcrequesthandler (class in xmlrpc.server)": [[435, "xmlrpc.server.SimpleXMLRPCRequestHandler"]], "simplexmlrpcserver (class in xmlrpc.server)": [[435, "xmlrpc.server.SimpleXMLRPCServer"]], "handle_request() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.CGIXMLRPCRequestHandler.handle_request"]], "register_function() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.CGIXMLRPCRequestHandler.register_function"]], "register_function() (xmlrpc.server.simplexmlrpcserver method)": [[435, "xmlrpc.server.SimpleXMLRPCServer.register_function"]], "register_instance() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.CGIXMLRPCRequestHandler.register_instance"]], "register_instance() (xmlrpc.server.simplexmlrpcserver method)": [[435, "xmlrpc.server.SimpleXMLRPCServer.register_instance"]], "register_introspection_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions"]], "register_introspection_functions() (xmlrpc.server.simplexmlrpcserver method)": [[435, "xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions"]], "register_multicall_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions"]], "register_multicall_functions() (xmlrpc.server.simplexmlrpcserver method)": [[435, "xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions"]], "rpc_paths (xmlrpc.server.simplexmlrpcrequesthandler attribute)": [[435, "xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths"]], "set_server_documentation() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation"]], "set_server_documentation() (xmlrpc.server.docxmlrpcserver method)": [[435, "xmlrpc.server.DocXMLRPCServer.set_server_documentation"]], "set_server_name() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name"]], "set_server_name() (xmlrpc.server.docxmlrpcserver method)": [[435, "xmlrpc.server.DocXMLRPCServer.set_server_name"]], "set_server_title() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[435, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title"]], "set_server_title() (xmlrpc.server.docxmlrpcserver method)": [[435, "xmlrpc.server.DocXMLRPCServer.set_server_title"]], "xmlrpc.server": [[435, "module-xmlrpc.server"]], "--compress": [[436, "cmdoption-zipapp-c"]], "--info": [[436, "cmdoption-zipapp-info"]], "--main": [[436, "cmdoption-zipapp-m"]], "--python": [[436, "cmdoption-zipapp-p"]], "executable zip files": [[436, "index-0"]], "create_archive() (in module zipapp)": [[436, "zipapp.create_archive"]], "get_interpreter() (in module zipapp)": [[436, "zipapp.get_interpreter"]], "zipapp": [[436, "module-zipapp"]], "zipapp command line option": [[436, "cmdoption-zipapp-c"], [436, "cmdoption-zipapp-h"], [436, "cmdoption-zipapp-info"], [436, "cmdoption-zipapp-m"], [436, "cmdoption-zipapp-o"], [436, "cmdoption-zipapp-p"]], "--metadata-encoding": [[437, "cmdoption-zipfile-metadata-encoding"]], "badzipfile": [[437, "zipfile.BadZipFile"], [437, "zipfile.BadZipfile"]], "crc (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.CRC"]], "largezipfile": [[437, "zipfile.LargeZipFile"]], "path (class in zipfile)": [[437, "zipfile.Path"]], "path.stem (in module zipfile)": [[437, "zipfile.Path.stem"]], "path.suffix (in module zipfile)": [[437, "zipfile.Path.suffix"]], "path.suffixes (in module zipfile)": [[437, "zipfile.Path.suffixes"]], "pyzipfile (class in zipfile)": [[437, "zipfile.PyZipFile"]], "zip_bzip2 (in module zipfile)": [[437, "zipfile.ZIP_BZIP2"]], "zip_deflated (in module zipfile)": [[437, "zipfile.ZIP_DEFLATED"]], "zip_lzma (in module zipfile)": [[437, "zipfile.ZIP_LZMA"]], "zip_stored (in module zipfile)": [[437, "zipfile.ZIP_STORED"]], "zipfile (class in zipfile)": [[437, "zipfile.ZipFile"]], "zipinfo (class in zipfile)": [[437, "zipfile.ZipInfo"]], "close() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.close"]], "comment (zipfile.zipfile attribute)": [[437, "zipfile.ZipFile.comment"]], "comment (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.comment"]], "compress_size (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.compress_size"]], "compress_type (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.compress_type"]], "create_system (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.create_system"]], "create_version (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.create_version"]], "date_time (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.date_time"]], "debug (zipfile.zipfile attribute)": [[437, "zipfile.ZipFile.debug"]], "exists() (zipfile.path method)": [[437, "zipfile.Path.exists"]], "external_attr (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.external_attr"]], "extra (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.extra"]], "extract() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.extract"]], "extract_version (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.extract_version"]], "extractall() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.extractall"]], "file_size (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.file_size"]], "filename (zipfile.zipfile attribute)": [[437, "zipfile.ZipFile.filename"]], "filename (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.filename"]], "flag_bits (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.flag_bits"]], "from_file() (zipfile.zipinfo class method)": [[437, "zipfile.ZipInfo.from_file"]], "getinfo() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.getinfo"]], "header_offset (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.header_offset"]], "infolist() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.infolist"]], "internal_attr (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.internal_attr"]], "is_dir() (zipfile.path method)": [[437, "zipfile.Path.is_dir"]], "is_dir() (zipfile.zipinfo method)": [[437, "zipfile.ZipInfo.is_dir"]], "is_file() (zipfile.path method)": [[437, "zipfile.Path.is_file"]], "is_zipfile() (in module zipfile)": [[437, "zipfile.is_zipfile"]], "iterdir() (zipfile.path method)": [[437, "zipfile.Path.iterdir"]], "joinpath() (zipfile.path method)": [[437, "zipfile.Path.joinpath"]], "mkdir() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.mkdir"]], "name (zipfile.path attribute)": [[437, "zipfile.Path.name"]], "namelist() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.namelist"]], "open() (zipfile.path method)": [[437, "zipfile.Path.open"]], "open() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.open"]], "printdir() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.printdir"]], "read() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.read"]], "read_bytes() (zipfile.path method)": [[437, "zipfile.Path.read_bytes"]], "read_text() (zipfile.path method)": [[437, "zipfile.Path.read_text"]], "reserved (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.reserved"]], "setpassword() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.setpassword"]], "testzip() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.testzip"]], "volume (zipfile.zipinfo attribute)": [[437, "zipfile.ZipInfo.volume"]], "write() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.write"]], "writepy() (zipfile.pyzipfile method)": [[437, "zipfile.PyZipFile.writepy"]], "writestr() (zipfile.zipfile method)": [[437, "zipfile.ZipFile.writestr"]], "zipfile": [[437, "module-zipfile"]], "zipfile command line option": [[437, "cmdoption-zipfile-c"], [437, "cmdoption-zipfile-create"], [437, "cmdoption-zipfile-e"], [437, "cmdoption-zipfile-extract"], [437, "cmdoption-zipfile-l"], [437, "cmdoption-zipfile-list"], [437, "cmdoption-zipfile-metadata-encoding"], [437, "cmdoption-zipfile-t"], [437, "cmdoption-zipfile-test"]], "pep 273": [[438, "index-0"], [438, "index-1"], [480, "index-4"], [480, "index-5"]], "zipimporterror": [[438, "zipimport.ZipImportError"]], "archive (zipimport.zipimporter attribute)": [[438, "zipimport.zipimporter.archive"]], "create_module() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.create_module"]], "exec_module() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.exec_module"]], "find_loader() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.find_loader"]], "find_module() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.find_module"]], "find_spec() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.find_spec"]], "get_code() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.get_code"]], "get_data() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.get_data"]], "get_filename() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.get_filename"]], "get_source() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.get_source"]], "invalidate_caches() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.invalidate_caches"]], "is_package() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.is_package"]], "load_module() (zipimport.zipimporter method)": [[438, "zipimport.zipimporter.load_module"]], "prefix (zipimport.zipimporter attribute)": [[438, "zipimport.zipimporter.prefix"]], "zipimport": [[438, "module-zipimport"]], "zipimporter (class in zipimport)": [[438, "zipimport.zipimporter"]], "cyclic redundancy check": [[439, "index-0"]], "zlib_runtime_version (in module zlib)": [[439, "zlib.ZLIB_RUNTIME_VERSION"]], "zlib_version (in module zlib)": [[439, "zlib.ZLIB_VERSION"]], "adler32() (in module zlib)": [[439, "zlib.adler32"]], "checksum": [[439, "index-0"]], "compress() (in module zlib)": [[439, "zlib.compress"]], "compress() (zlib.compress method)": [[439, "zlib.Compress.compress"]], "compressobj() (in module zlib)": [[439, "zlib.compressobj"]], "copy() (zlib.compress method)": [[439, "zlib.Compress.copy"]], "copy() (zlib.decompress method)": [[439, "zlib.Decompress.copy"]], "crc32() (in module zlib)": [[439, "zlib.crc32"]], "decompress() (in module zlib)": [[439, "zlib.decompress"]], "decompress() (zlib.decompress method)": [[439, "zlib.Decompress.decompress"]], "decompressobj() (in module zlib)": [[439, "zlib.decompressobj"]], "eof (zlib.decompress attribute)": [[439, "zlib.Decompress.eof"]], "flush() (zlib.compress method)": [[439, "zlib.Compress.flush"]], "flush() (zlib.decompress method)": [[439, "zlib.Decompress.flush"]], "unconsumed_tail (zlib.decompress attribute)": [[439, "zlib.Decompress.unconsumed_tail"]], "unused_data (zlib.decompress attribute)": [[439, "zlib.Decompress.unused_data"]], "zlib": [[439, "module-zlib"]], "invalidtzpathwarning": [[440, "zoneinfo.InvalidTZPathWarning"]], "pep 495": [[440, "index-1"], [493, "index-17"], [493, "index-18"]], "pep 615": [[440, "index-0"], [496, "index-16"], [496, "index-9"]], "pythontzpath": [[440, "envvar-PYTHONTZPATH"], [440, "index-2"]], "tzpath (in module zoneinfo)": [[440, "zoneinfo.TZPATH"]], "zoneinfo (class in zoneinfo)": [[440, "zoneinfo.ZoneInfo"]], "zoneinfonotfounderror": [[440, "zoneinfo.ZoneInfoNotFoundError"]], "available_timezones() (in module zoneinfo)": [[440, "zoneinfo.available_timezones"]], "clear_cache() (zoneinfo.zoneinfo class method)": [[440, "zoneinfo.ZoneInfo.clear_cache"]], "from_file() (zoneinfo.zoneinfo class method)": [[440, "zoneinfo.ZoneInfo.from_file"]], "key (zoneinfo.zoneinfo attribute)": [[440, "zoneinfo.ZoneInfo.key"]], "no_cache() (zoneinfo.zoneinfo class method)": [[440, "zoneinfo.ZoneInfo.no_cache"]], "reset_tzpath() (in module zoneinfo)": [[440, "zoneinfo.reset_tzpath"]], "zoneinfo": [[440, "module-zoneinfo"]], "! patterns": [[442, "index-23"]], "->": [[442, "index-34"], [456, "index-6"]], "as pattern, or pattern, capture pattern, wildcard pattern": [[442, "index-23"]], "dedent token": [[442, "index-2"], [450, "index-9"]], "newline token": [[442, "index-2"], [450, "index-3"]], "pep 3107": [[442, "index-36"], [456, "index-7"], [485, "index-6"], [492, "index-9"], [494, "index-0"]], "pep 3129": [[442, "index-41"], [442, "index-46"], [483, "index-18"]], "pep 318": [[442, "index-40"], [442, "index-47"], [481, "index-12"], [481, "index-4"], [481, "index-5"]], "pep 570": [[442, "index-33"], [495, "index-1"], [495, "index-23"]], "pep 614": [[442, "index-30"], [442, "index-44"], [496, "index-15"], [496, "index-3"]], "pep 636": [[442, "index-20"], [442, "index-26"], [456, "index-1"], [487, "index-17"], [487, "index-2"]], "annotations": [[442, "index-34"], [456, "index-6"]], "as": [[442, "index-10"], [442, "index-16"], [442, "index-18"], [442, "index-9"], [451, "index-34"], [451, "index-35"]], "async": [[442, "index-49"]], "async def": [[442, "index-48"]], "async for": [[442, "index-50"], [445, "index-12"]], "async with": [[442, "index-51"]], "await": [[442, "index-49"], [445, "index-13"], [445, "index-57"]], "binding": [[442, "index-28"], [442, "index-42"], [444, "index-4"], [451, "index-34"], [451, "index-36"], [451, "index-4"], [451, "index-43"]], "break": [[442, "index-13"], [442, "index-15"], [442, "index-5"], [442, "index-7"], [451, "index-30"]], "case": [[442, "index-18"], [442, "index-18"]], "case block": [[442, "index-22"]], "class definition": [[442, "index-42"], [442, "index-43"], [443, "index-86"]], "clause": [[442, "index-1"]], "compound": [[442, "index-0"]], "compound statement": [[442, "index-16"], [442, "index-18"], [442, "index-28"], [442, "index-3"], [442, "index-4"], [442, "index-42"], [442, "index-6"], [442, "index-9"]], "continue": [[442, "index-13"], [442, "index-15"], [442, "index-5"], [442, "index-7"], [451, "index-33"]], "dangling": [[442, "index-2"]], "def": [[442, "index-28"]], "default": [[442, "index-31"]], "definition": [[442, "index-28"], [442, "index-42"], [451, "index-24"]], "elif": [[442, "index-3"]], "else": [[442, "index-13"], [442, "index-2"], [442, "index-3"], [442, "index-4"], [442, "index-6"], [442, "index-9"], [445, "index-88"], [451, "index-31"]], "except clause": [[442, "index-10"]], "except_star": [[442, "index-12"]], "execution": [[442, "index-42"], [443, "index-66"], [444, "index-11"], [444, "index-2"]], "expression list": [[442, "index-42"], [445, "index-15"], [445, "index-16"], [445, "index-91"], [451, "index-18"]], "finally": [[442, "index-14"], [442, "index-9"], [451, "index-25"], [451, "index-32"], [451, "index-33"]], "for": [[442, "index-6"], [445, "index-12"], [451, "index-30"], [451, "index-33"], [456, "index-0"]], "frame": [[442, "index-42"], [443, "index-63"], [444, "index-2"]], "function annotations": [[442, "index-34"], [456, "index-6"]], "function definition": [[442, "index-27"], [442, "index-28"], [442, "index-29"], [442, "index-31"], [442, "index-32"]], "guard": [[442, "index-21"]], "inheritance": [[442, "index-42"]], "irrefutable case block": [[442, "index-22"]], "match": [[442, "index-18"], [442, "index-18"]], "match statement": [[442, "index-18"]], "name": [[442, "index-28"], [442, "index-42"], [444, "index-4"], [445, "index-3"], [445, "index-5"], [450, "index-10"], [451, "index-22"], [451, "index-34"], [451, "index-36"], [451, "index-4"], [451, "index-43"], [455, "index-1"]], "parameter list": [[442, "index-28"]], "pattern matching": [[442, "index-18"]], "return": [[442, "index-13"], [442, "index-15"], [451, "index-24"]], "suite": [[442, "index-1"]], "target": [[442, "index-6"], [451, "index-21"], [451, "index-31"], [451, "index-5"], [451, "index-6"]], "user-defined function": [[442, "index-28"], [443, "index-34"], [445, "index-52"]], "with": [[442, "index-16"], [443, "index-106"]], "with statement": [[442, "index-16"]], "ellipsis": [[443, "index-8"]], "java": [[443, "index-13"]], "notimplemented": [[443, "index-7"]], "pep 252": [[443, "index-85"], [479, "index-2"], [479, "index-4"]], "pep 3135": [[443, "index-93"], [485, "index-31"]], "pep 562": [[443, "index-84"], [494, "index-16"]], "__abs__() (object method)": [[443, "object.__abs__"]], "__add__() (object method)": [[443, "object.__add__"]], "__aenter__() (object method)": [[443, "object.__aenter__"]], "__aexit__() (object method)": [[443, "object.__aexit__"]], "__aiter__() (object method)": [[443, "object.__aiter__"]], "__and__() (object method)": [[443, "object.__and__"]], "__anext__() (object method)": [[443, "object.__anext__"]], "__annotations__ (class attribute)": [[443, "index-50"]], "__annotations__ (function attribute)": [[443, "function.__annotations__"], [443, "index-36"]], "__annotations__ (module attribute)": [[443, "index-45"]], "__await__() (object method)": [[443, "object.__await__"]], "__bool__() (object method)": [[443, "index-98"], [443, "object.__bool__"]], "__bytes__() (object method)": [[443, "object.__bytes__"]], "__call__() (object method)": [[443, "object.__call__"], [445, "index-56"]], "__ceil__() (object method)": [[443, "object.__ceil__"]], "__class__ (method cell)": [[443, "index-92"]], "__class__ (module attribute)": [[443, "index-83"]], "__class_getitem__() (object class method)": [[443, "object.__class_getitem__"]], "__classcell__ (class namespace entry)": [[443, "index-92"]], "__closure__ (function attribute)": [[443, "function.__closure__"], [443, "index-35"]], "__code__ (function attribute)": [[443, "function.__code__"], [443, "index-36"]], "__complex__() (object method)": [[443, "object.__complex__"]], "__contains__() (object method)": [[443, "object.__contains__"]], "__defaults__ (function attribute)": [[443, "function.__defaults__"], [443, "index-36"]], "__del__() (object method)": [[443, "object.__del__"]], "__delattr__() (object method)": [[443, "object.__delattr__"]], "__delete__() (object method)": [[443, "object.__delete__"]], "__delitem__() (object method)": [[443, "object.__delitem__"]], "__dict__ (class attribute)": [[443, "index-50"]], "__dict__ (function attribute)": [[443, "function.__dict__"], [443, "index-36"]], "__dict__ (instance attribute)": [[443, "index-54"]], "__dir__ (module attribute)": [[443, "index-83"]], "__dir__() (object method)": [[443, "object.__dir__"]], "__divmod__() (object method)": [[443, "object.__divmod__"]], "__doc__ (class attribute)": [[443, "index-50"]], "__doc__ (function attribute)": [[443, "function.__doc__"], [443, "index-36"]], "__doc__ (method attribute)": [[443, "index-38"], [443, "method.__doc__"]], "__enter__() (object method)": [[443, "object.__enter__"]], "__eq__() (object method)": [[443, "object.__eq__"]], "__exit__() (object method)": [[443, "object.__exit__"]], "__float__() (object method)": [[443, "object.__float__"]], "__floor__() (object method)": [[443, "object.__floor__"]], "__floordiv__() (object method)": [[443, "object.__floordiv__"]], "__format__() (object method)": [[443, "index-78"], [443, "object.__format__"]], "__func__ (method attribute)": [[443, "index-38"], [443, "method.__func__"]], "__ge__() (object method)": [[443, "object.__ge__"]], "__get__() (object method)": [[443, "object.__get__"]], "__getattr__ (module attribute)": [[443, "index-83"]], "__getattr__() (object method)": [[443, "object.__getattr__"]], "__getattribute__() (object method)": [[443, "object.__getattribute__"]], "__getitem__() (mapping object method)": [[443, "index-71"]], "__getitem__() (object method)": [[443, "object.__getitem__"]], "__globals__ (function attribute)": [[443, "function.__globals__"], [443, "index-35"]], "__gt__() (object method)": [[443, "object.__gt__"]], "__hash__() (object method)": [[443, "object.__hash__"]], "__iadd__() (object method)": [[443, "object.__iadd__"]], "__iand__() (object method)": [[443, "object.__iand__"]], "__ifloordiv__() (object method)": [[443, "object.__ifloordiv__"]], "__ilshift__() (object method)": [[443, "object.__ilshift__"]], "__imatmul__() (object method)": [[443, "object.__imatmul__"]], "__imod__() (object method)": [[443, "object.__imod__"]], "__imul__() (object method)": [[443, "object.__imul__"]], "__index__() (object method)": [[443, "object.__index__"]], "__init__() (object method)": [[443, "object.__init__"]], "__init_subclass__() (object class method)": [[443, "object.__init_subclass__"]], "__instancecheck__() (class method)": [[443, "class.__instancecheck__"]], "__int__() (object method)": [[443, "object.__int__"]], "__invert__() (object method)": [[443, "object.__invert__"]], "__ior__() (object method)": [[443, "object.__ior__"]], "__ipow__() (object method)": [[443, "object.__ipow__"]], "__irshift__() (object method)": [[443, "object.__irshift__"]], "__isub__() (object method)": [[443, "object.__isub__"]], "__iter__() (object method)": [[443, "object.__iter__"]], "__itruediv__() (object method)": [[443, "object.__itruediv__"]], "__ixor__() (object method)": [[443, "object.__ixor__"]], "__kwdefaults__ (function attribute)": [[443, "function.__kwdefaults__"], [443, "index-36"]], "__le__() (object method)": [[443, "object.__le__"]], "__len__() (mapping object method)": [[443, "index-82"]], "__len__() (object method)": [[443, "object.__len__"]], "__length_hint__() (object method)": [[443, "object.__length_hint__"]], "__lshift__() (object method)": [[443, "object.__lshift__"]], "__lt__() (object method)": [[443, "object.__lt__"]], "__matmul__() (object method)": [[443, "object.__matmul__"]], "__missing__() (object method)": [[443, "object.__missing__"]], "__mod__() (object method)": [[443, "object.__mod__"]], "__module__ (class attribute)": [[443, "index-50"]], "__module__ (function attribute)": [[443, "function.__module__"], [443, "index-36"]], "__module__ (method attribute)": [[443, "index-38"], [443, "method.__module__"]], "__mro_entries__() (object method)": [[443, "object.__mro_entries__"]], "__mul__() (object method)": [[443, "object.__mul__"]], "__name__ (class attribute)": [[443, "index-50"]], "__name__ (function attribute)": [[443, "function.__name__"], [443, "index-36"]], "__name__ (method attribute)": [[443, "index-38"], [443, "method.__name__"]], "__ne__() (object method)": [[443, "object.__ne__"]], "__neg__() (object method)": [[443, "object.__neg__"]], "__new__() (object method)": [[443, "object.__new__"]], "__objclass__ (object attribute)": [[443, "object.__objclass__"]], "__or__() (object method)": [[443, "object.__or__"]], "__pos__() (object method)": [[443, "object.__pos__"]], "__pow__() (object method)": [[443, "object.__pow__"]], "__prepare__ (metaclass method)": [[443, "index-89"]], "__qualname__ (function attribute)": [[443, "function.__qualname__"]], "__radd__() (object method)": [[443, "object.__radd__"]], "__rand__() (object method)": [[443, "object.__rand__"]], "__rdivmod__() (object method)": [[443, "object.__rdivmod__"]], "__repr__() (object method)": [[443, "index-75"], [443, "object.__repr__"]], "__reversed__() (object method)": [[443, "object.__reversed__"]], "__rfloordiv__() (object method)": [[443, "object.__rfloordiv__"]], "__rlshift__() (object method)": [[443, "object.__rlshift__"]], "__rmatmul__() (object method)": [[443, "object.__rmatmul__"]], "__rmod__() (object method)": [[443, "object.__rmod__"]], "__rmul__() (object method)": [[443, "object.__rmul__"]], "__ror__() (object method)": [[443, "object.__ror__"]], "__round__() (object method)": [[443, "object.__round__"]], "__rpow__() (object method)": [[443, "object.__rpow__"]], "__rrshift__() (object method)": [[443, "object.__rrshift__"]], "__rshift__() (object method)": [[443, "object.__rshift__"]], "__rsub__() (object method)": [[443, "object.__rsub__"]], "__rtruediv__() (object method)": [[443, "object.__rtruediv__"]], "__rxor__() (object method)": [[443, "object.__rxor__"]], "__self__ (method attribute)": [[443, "index-38"], [443, "method.__self__"]], "__set__() (object method)": [[443, "object.__set__"]], "__set_name__() (object method)": [[443, "object.__set_name__"]], "__setattr__() (object method)": [[443, "object.__setattr__"]], "__setitem__() (object method)": [[443, "object.__setitem__"]], "__str__() (object method)": [[443, "index-76"], [443, "object.__str__"]], "__sub__() (object method)": [[443, "object.__sub__"]], "__subclasscheck__() (class method)": [[443, "class.__subclasscheck__"]], "__truediv__() (object method)": [[443, "object.__truediv__"]], "__trunc__() (object method)": [[443, "object.__trunc__"]], "__xor__() (object method)": [[443, "object.__xor__"]], "body": [[443, "index-91"]], "built-in method": [[443, "index-43"], [445, "index-53"]], "byte": [[443, "index-21"]], "call": [[443, "index-33"], [443, "index-47"], [443, "index-49"], [443, "index-97"], [445, "index-47"], [445, "index-52"], [445, "index-53"], [445, "index-54"], [445, "index-55"], [445, "index-56"], [451, "index-3"]], "chr": [[443, "index-19"]], "class instance": [[443, "index-47"], [443, "index-51"], [443, "index-52"], [445, "index-55"]], "class object": [[443, "index-47"], [443, "index-49"], [445, "index-54"]], "clear() (frame method)": [[443, "frame.clear"]], "close() (coroutine method)": [[443, "coroutine.close"]], "co_argcount (code object attribute)": [[443, "index-58"]], "co_argcount (codeobject attribute)": [[443, "codeobject.co_argcount"]], "co_cellvars (code object attribute)": [[443, "index-58"]], "co_cellvars (codeobject attribute)": [[443, "codeobject.co_cellvars"]], "co_code (code object attribute)": [[443, "index-58"]], "co_code (codeobject attribute)": [[443, "codeobject.co_code"]], "co_consts (code object attribute)": [[443, "index-58"]], "co_consts (codeobject attribute)": [[443, "codeobject.co_consts"]], "co_filename (code object attribute)": [[443, "index-58"]], "co_filename (codeobject attribute)": [[443, "codeobject.co_filename"]], "co_firstlineno (code object attribute)": [[443, "index-58"]], "co_firstlineno (codeobject attribute)": [[443, "codeobject.co_firstlineno"]], "co_flags (code object attribute)": [[443, "index-58"]], "co_flags (codeobject attribute)": [[443, "codeobject.co_flags"]], "co_freevars (code object attribute)": [[443, "index-58"]], "co_freevars (codeobject attribute)": [[443, "codeobject.co_freevars"]], "co_kwonlyargcount (code object attribute)": [[443, "index-58"]], "co_kwonlyargcount (codeobject attribute)": [[443, "codeobject.co_kwonlyargcount"]], "co_lines() (codeobject method)": [[443, "codeobject.co_lines"]], "co_lnotab (code object attribute)": [[443, "index-58"]], "co_lnotab (codeobject attribute)": [[443, "codeobject.co_lnotab"]], "co_name (code object attribute)": [[443, "index-58"]], "co_name (codeobject attribute)": [[443, "codeobject.co_name"]], "co_names (code object attribute)": [[443, "index-58"]], "co_names (codeobject attribute)": [[443, "codeobject.co_names"]], "co_nlocals (code object attribute)": [[443, "index-58"]], "co_nlocals (codeobject attribute)": [[443, "codeobject.co_nlocals"]], "co_positions() (codeobject method)": [[443, "codeobject.co_positions"]], "co_posonlyargcount (code object attribute)": [[443, "index-58"]], "co_posonlyargcount (codeobject attribute)": [[443, "codeobject.co_posonlyargcount"]], "co_qualname (code object attribute)": [[443, "index-58"]], "co_qualname (codeobject attribute)": [[443, "codeobject.co_qualname"]], "co_stacksize (code object attribute)": [[443, "index-58"]], "co_stacksize (codeobject attribute)": [[443, "codeobject.co_stacksize"]], "co_varnames (code object attribute)": [[443, "index-58"]], "co_varnames (codeobject attribute)": [[443, "codeobject.co_varnames"]], "constructor": [[443, "index-73"]], "conversion": [[443, "index-78"], [445, "index-1"], [451, "index-3"]], "destructor": [[443, "index-74"], [451, "index-7"]], "documentation string": [[443, "index-60"]], "extension": [[443, "index-4"]], "f_back (frame attribute)": [[443, "frame.f_back"], [443, "index-64"]], "f_builtins (frame attribute)": [[443, "frame.f_builtins"], [443, "index-64"]], "f_code (frame attribute)": [[443, "frame.f_code"], [443, "index-64"]], "f_globals (frame attribute)": [[443, "frame.f_globals"], [443, "index-64"]], "f_lasti (frame attribute)": [[443, "frame.f_lasti"], [443, "index-64"]], "f_lineno (frame attribute)": [[443, "frame.f_lineno"], [443, "index-65"]], "f_locals (frame attribute)": [[443, "frame.f_locals"], [443, "index-64"]], "f_trace (frame attribute)": [[443, "frame.f_trace"], [443, "index-65"]], "f_trace_lines (frame attribute)": [[443, "frame.f_trace_lines"], [443, "index-65"]], "f_trace_opcodes (frame attribute)": [[443, "frame.f_trace_opcodes"], [443, "index-65"]], "finalizer": [[443, "index-74"]], "global": [[443, "index-35"], [451, "index-22"], [451, "index-43"], [451, "index-43"]], "handler": [[443, "index-66"]], "hierarchy": [[443, "index-4"]], "identity of an object": [[443, "index-1"]], "immutable object": [[443, "index-1"]], "immutable sequence": [[443, "index-17"]], "immutable sequences": [[443, "index-18"]], "immutable types": [[443, "index-72"]], "index operation": [[443, "index-15"]], "indices() (slice method)": [[443, "slice.indices"]], "instance": [[443, "index-47"], [443, "index-51"], [443, "index-97"], [445, "index-55"], [445, "index-56"]], "internal type": [[443, "index-56"]], "invocation": [[443, "index-33"]], "item selection": [[443, "index-15"]], "makefile() (socket method)": [[443, "index-55"]], "metaclass hint": [[443, "index-88"]], "mutable object": [[443, "index-1"]], "number": [[443, "index-13"], [443, "index-14"], [450, "index-27"]], "object.__match_args__ (built-in variable)": [[443, "object.__match_args__"]], "object.__slots__ (built-in variable)": [[443, "object.__slots__"]], "open": [[443, "index-55"], [461, "index-0"]], "ord": [[443, "index-19"]], "overloading": [[443, "index-71"]], "print": [[443, "index-78"]], "print() (built-in function)": [[443, "index-76"]], "reference counting": [[443, "index-2"]], "replace() (codeobject method)": [[443, "codeobject.replace"]], "repr() (built-in function)": [[443, "index-75"]], "representation": [[443, "index-11"]], "round": [[443, "index-105"]], "send() (coroutine method)": [[443, "coroutine.send"]], "set type": [[443, "index-27"]], "singleton": [[443, "index-20"]], "slicing": [[443, "index-16"], [443, "index-22"], [445, "index-44"], [451, "index-12"]], "stack": [[443, "index-66"]], "start (slice object attribute)": [[443, "index-70"], [445, "index-46"]], "stdio": [[443, "index-55"]], "step (slice object attribute)": [[443, "index-70"], [445, "index-46"]], "stop (slice object attribute)": [[443, "index-70"], [445, "index-46"]], "subclassing": [[443, "index-72"]], "subscription": [[443, "index-15"], [443, "index-22"], [443, "index-30"], [445, "index-41"], [451, "index-9"]], "sys.exc_info": [[443, "index-66"]], "sys.exception": [[443, "index-66"]], "sys.last_traceback": [[443, "index-66"]], "sys.stderr": [[443, "index-55"]], "sys.stdin": [[443, "index-55"]], "sys.stdout": [[443, "index-55"]], "tb_frame (traceback attribute)": [[443, "index-67"], [443, "traceback.tb_frame"]], "tb_lasti (traceback attribute)": [[443, "index-67"], [443, "traceback.tb_lasti"]], "tb_lineno (traceback attribute)": [[443, "index-67"], [443, "traceback.tb_lineno"]], "tb_next (traceback attribute)": [[443, "index-68"], [443, "traceback.tb_next"]], "throw() (coroutine method)": [[443, "coroutine.throw"]], "type of an object": [[443, "index-1"]], "types, internal": [[443, "index-56"]], "unreachable object": [[443, "index-2"]], "user-defined": [[443, "index-34"], [443, "index-37"], [445, "index-52"]], "user-defined method": [[443, "index-37"]], "value of an object": [[443, "index-1"]], "nameerror (built-in exception)": [[444, "index-9"]], "systemexit (built-in exception)": [[444, "index-15"]], "block": [[444, "index-0"], [444, "index-1"]], "environment": [[444, "index-8"]], "error handling": [[444, "index-13"]], "exception handler": [[444, "index-13"]], "execution model": [[444, "index-0"]], "free": [[444, "index-6"]], "from": [[444, "index-5"], [445, "index-23"], [445, "index-25"], [451, "index-34"], [451, "index-36"]], "handle an exception": [[444, "index-13"]], "import statement": [[444, "index-5"], [451, "index-34"], [451, "index-35"], [451, "index-36"], [451, "index-37"]], "raise an exception": [[444, "index-13"]], "scope": [[444, "index-3"], [444, "index-7"]], "termination model": [[444, "index-14"]], "variable": [[444, "index-6"]], ":= (colon equals)": [[445, "index-86"]], "bnf": [[445, "index-0"], [449, "index-0"]], "conditional": [[445, "index-82"], [445, "index-88"]], "pep 308": [[445, "index-89"], [482, "index-1"], [482, "index-2"]], "pep 380": [[445, "index-28"], [490, "index-12"]], "pep 448": [[445, "index-19"], [445, "index-51"], [445, "index-94"], [492, "index-5"], [492, "index-6"]], "pep 530": [[445, "index-14"], [493, "index-11"], [493, "index-12"]], "__anext__() (agen method)": [[445, "agen.__anext__"]], "__next__() (generator method)": [[445, "generator.__next__"]], "aclose() (agen method)": [[445, "agen.aclose"]], "addition": [[445, "index-69"]], "anonymous": [[445, "index-90"]], "argument list": [[445, "index-47"]], "asend() (agen method)": [[445, "agen.asend"]], "assignment expression": [[445, "index-86"]], "asynchronous-generator": [[445, "index-35"]], "athrow() (agen method)": [[445, "agen.athrow"]], "atom": [[445, "index-2"]], "attribute reference": [[445, "index-39"]], "call semantics": [[445, "index-47"], [445, "index-48"]], "close() (generator method)": [[445, "generator.close"]], "comma": [[445, "index-10"], [445, "index-95"]], "comprehensions": [[445, "index-11"], [445, "index-15"], [445, "index-16"], [445, "index-17"]], "conditional expression": [[445, "index-88"]], "dictionary expression": [[445, "index-17"]], "division": [[445, "index-67"]], "evaluation": [[445, "index-96"]], "examples": [[445, "index-34"]], "exclusive": [[445, "index-75"]], "form": [[445, "index-90"]], "identifier": [[445, "index-3"], [450, "index-10"]], "identity": [[445, "index-81"]], "in comprehensions": [[445, "index-12"], [445, "index-13"]], "in dictionary displays": [[445, "index-17"], [445, "index-18"]], "in dictionary expressions": [[445, "index-17"]], "in expression lists": [[445, "index-93"]], "in function calls": [[445, "index-47"], [445, "index-49"], [445, "index-50"], [456, "index-3"], [456, "index-4"]], "inclusive": [[445, "index-76"]], "inversion": [[445, "index-62"]], "item": [[445, "index-42"], [445, "index-43"]], "key": [[445, "index-17"]], "key/value pair": [[445, "index-17"]], "lambda expression": [[445, "index-90"]], "list expression": [[445, "index-15"]], "literal": [[445, "index-6"], [450, "index-16"]], "mangling": [[445, "index-5"], [455, "index-1"]], "matrix multiplication": [[445, "index-66"]], "membership": [[445, "index-80"]], "minus": [[445, "index-60"]], "modulo": [[445, "index-68"]], "multiplication": [[445, "index-65"]], "named expression": [[445, "index-86"]], "names": [[445, "index-5"]], "negation": [[445, "index-60"]], "order": [[445, "index-96"]], "parenthesized form": [[445, "index-8"]], "plus": [[445, "index-61"]], "power": [[445, "index-58"]], "precedence": [[445, "index-97"]], "primary": [[445, "index-38"]], "private": [[445, "index-5"]], "reference": [[445, "index-39"]], "send() (generator method)": [[445, "generator.send"]], "set expression": [[445, "index-16"]], "subtraction": [[445, "index-70"]], "ternary": [[445, "index-88"]], "throw() (generator method)": [[445, "generator.throw"]], "trailing": [[445, "index-95"]], "tuple display": [[445, "index-8"]], "unary": [[445, "index-59"]], "unpacking": [[445, "index-18"], [445, "index-49"], [445, "index-93"]], "walrus operator": [[445, "index-86"]], "xor": [[445, "index-75"]], "yield": [[445, "index-23"], [445, "index-34"], [451, "index-26"], [490, "index-11"]], "yield from expression": [[445, "index-25"]], "__cached__": [[447, "cached__"]], "__file__": [[447, "file__"]], "__loader__": [[447, "loader__"]], "__name__": [[447, "name__"]], "__package__": [[447, "package__"]], "__path__": [[447, "path__"]], "__spec__": [[447, "spec__"]], "find_spec": [[447, "index-10"]], "hooks": [[447, "index-9"]], "import hooks": [[447, "index-9"]], "import machinery": [[447, "index-0"]], "meta": [[447, "index-9"]], "meta hooks": [[447, "index-9"]], "path hooks": [[447, "index-9"]], "regular": [[447, "index-4"]], "sys.meta_path": [[447, "index-10"]], "sys.modules": [[447, "index-7"]], "sys.path": [[447, "index-17"]], "sys.path_hooks": [[447, "index-17"]], "sys.path_importer_cache": [[447, "index-17"]], "grammar": [[449, "index-0"]], "lexical definitions": [[449, "index-1"]], "notation": [[449, "index-0"]], "syntax": [[449, "index-0"]], "\" (double quote)": [[450, "index-17"]], "\"\"\"": [[450, "index-18"]], "' (single quote)": [[450, "index-17"]], "'''": [[450, "index-18"]], "0b": [[450, "index-28"]], "0o": [[450, "index-28"]], "0x": [[450, "index-28"]], "indent token": [[450, "index-9"]], "pep 3131": [[450, "index-11"], [450, "index-12"], [485, "index-5"]], "pep 414": [[450, "index-21"], [490, "index-14"]], "standard c": [[450, "index-23"]], "unicode consortium": [[450, "index-18"]], "_, identifiers": [[450, "index-15"]], "__, identifiers": [[450, "index-15"]], "b\"": [[450, "index-19"]], "b'": [[450, "index-19"]], "backslash character": [[450, "index-6"]], "binary literal": [[450, "index-27"]], "blank line": [[450, "index-7"]], "bytes literal": [[450, "index-17"], [450, "index-19"]], "complex literal": [[450, "index-27"]], "constant": [[450, "index-16"]], "decimal literal": [[450, "index-27"]], "delimiters": [[450, "index-32"]], "e": [[450, "index-29"]], "encoding declarations (source file)": [[450, "index-5"]], "f\"": [[450, "index-22"]], "f'": [[450, "index-22"]], "floating point literal": [[450, "index-27"]], "for help in debugging using string literals": [[450, "index-25"]], "formatted literal": [[450, "index-25"]], "formatted string literal": [[450, "index-22"], [450, "index-25"]], "fstring": [[450, "index-25"]], "grouping": [[450, "index-8"]], "hash character": [[450, "index-4"]], "hexadecimal literal": [[450, "index-27"]], "imaginary literal": [[450, "index-27"]], "in formatted string literal": [[450, "index-25"]], "in numeric literal": [[450, "index-28"], [450, "index-29"], [450, "index-30"]], "indentation": [[450, "index-8"]], "integer literal": [[450, "index-27"], [450, "index-28"]], "interpolated literal": [[450, "index-25"]], "interpolated string literal": [[450, "index-25"]], "j": [[450, "index-30"]], "leading whitespace": [[450, "index-8"]], "lexical analysis": [[450, "index-0"]], "line continuation": [[450, "index-6"]], "line joining": [[450, "index-3"], [450, "index-6"]], "line structure": [[450, "index-2"]], "logical line": [[450, "index-3"]], "numeric literal": [[450, "index-27"]], "octal literal": [[450, "index-27"]], "operators": [[450, "index-31"]], "parser": [[450, "index-0"]], "physical line": [[450, "index-23"], [450, "index-3"], [450, "index-6"]], "r\"": [[450, "index-20"]], "r'": [[450, "index-20"]], "raw string": [[450, "index-18"]], "raw string literal": [[450, "index-20"]], "reserved word": [[450, "index-13"]], "soft keyword": [[450, "index-14"]], "source character set": [[450, "index-5"]], "source encoding declaration": [[450, "index-5"]], "statement grouping": [[450, "index-8"]], "string literal": [[450, "index-17"], [450, "index-18"]], "tab": [[450, "index-8"]], "u\"": [[450, "index-17"]], "u'": [[450, "index-17"]], "unrecognized escape sequence": [[450, "index-24"]], "%=": [[451, "index-14"]], "&=": [[451, "index-14"]], "**=": [[451, "index-14"]], "*=": [[451, "index-14"]], "+=": [[451, "index-14"]], "-=": [[451, "index-14"]], "//=": [[451, "index-14"]], "/=": [[451, "index-14"]], "<<=": [[451, "index-14"]], ">>=": [[451, "index-14"]], "pep 3104": [[451, "index-46"], [485, "index-8"]], "pep 3132": [[451, "index-13"], [485, "index-9"]], "^=": [[451, "index-14"]], "__all__ (optional module attribute)": [[451, "index-38"]], "__debug__": [[451, "index-19"]], "__traceback__ (exception attribute)": [[451, "index-27"]], "annotated": [[451, "index-15"]], "annotated variable": [[451, "index-15"]], "assertions": [[451, "index-18"]], "assignment statement": [[451, "index-4"]], "assignment, annotated": [[451, "index-15"]], "assignment, augmented": [[451, "index-14"]], "augmented": [[451, "index-14"]], "augmented assignment": [[451, "index-14"]], "deletion": [[451, "index-21"], [451, "index-23"]], "future": [[451, "index-40"]], "future statement": [[451, "index-40"]], "identifier list": [[451, "index-43"], [451, "index-45"]], "in assignment target list": [[451, "index-6"]], "in target list": [[451, "index-6"]], "loop control": [[451, "index-31"]], "nonlocal": [[451, "index-45"]], "null": [[451, "index-20"]], "output": [[451, "index-3"]], "pass": [[451, "index-20"]], "procedure": [[451, "index-3"]], "raising": [[451, "index-27"]], "rebinding": [[451, "index-4"]], "simple": [[451, "index-0"]], "standard": [[451, "index-3"]], "unbinding": [[451, "index-22"]], "writing": [[451, "index-3"]], "|=": [[451, "index-14"]], "windows": [[452, "index-4"]], "command line": [[452, "index-4"]], "input": [[452, "index-5"]], "interactive mode": [[452, "index-3"]], "interpreter": [[452, "index-0"]], "program": [[452, "index-1"]], "standard input": [[452, "index-4"]], "coding": [[456, "index-9"]], "docstrings": [[456, "index-2"], [456, "index-5"]], "documentation strings": [[456, "index-2"], [456, "index-5"]], "strings, documentation": [[456, "index-2"], [456, "index-5"]], "style": [[456, "index-9"]], "--check-hash-based-pycs": [[470, "cmdoption-check-hash-based-pycs"]], "--help-all": [[470, "cmdoption-help-all"]], "--help-env": [[470, "cmdoption-help-env"]], "--help-xoptions": [[470, "cmdoption-help-xoptions"]], "-?": [[470, "cmdoption-0"]], "-oo": [[470, "cmdoption-OO"]], "pythondumprefsfile=filename": [[470, "envvar-PYTHONDUMPREFSFILE-FILENAME"]], "pythonthreaddebug": [[470, "envvar-PYTHONTHREADDEBUG"], [471, "index-4"], [487, "index-35"], [488, "index-33"]], "command line option": [[470, "cmdoption-0"], [470, "cmdoption-B"], [470, "cmdoption-E"], [470, "cmdoption-I"], [470, "cmdoption-J"], [470, "cmdoption-O"], [470, "cmdoption-OO"], [470, "cmdoption-P"], [470, "cmdoption-R"], [470, "cmdoption-S"], [470, "cmdoption-V"], [470, "cmdoption-W"], [470, "cmdoption-X"], [470, "cmdoption-b"], [470, "cmdoption-c"], [470, "cmdoption-check-hash-based-pycs"], [470, "cmdoption-d"], [470, "cmdoption-h"], [470, "cmdoption-help"], [470, "cmdoption-help-all"], [470, "cmdoption-help-env"], [470, "cmdoption-help-xoptions"], [470, "cmdoption-i"], [470, "cmdoption-m"], [470, "cmdoption-q"], [470, "cmdoption-s"], [470, "cmdoption-u"], [470, "cmdoption-v"], [470, "cmdoption-version"], [470, "cmdoption-x"], [471, "cmdoption-0"], [471, "cmdoption-1"], [471, "cmdoption-2"], [471, "cmdoption-arg-CONFIG_SITE"], [471, "cmdoption-build"], [471, "cmdoption-disable-ipv6"], [471, "cmdoption-disable-test-modules"], [471, "cmdoption-enable-big-digits"], [471, "cmdoption-enable-framework"], [471, "cmdoption-enable-loadable-sqlite-extensions"], [471, "cmdoption-enable-optimizations"], [471, "cmdoption-enable-profiling"], [471, "cmdoption-enable-pystats"], [471, "cmdoption-enable-shared"], [471, "cmdoption-enable-universalsdk"], [471, "cmdoption-enable-wasm-dynamic-linking"], [471, "cmdoption-enable-wasm-pthreads"], [471, "cmdoption-exec-prefix"], [471, "cmdoption-host"], [471, "cmdoption-prefix"], [471, "cmdoption-with-address-sanitizer"], [471, "cmdoption-with-assertions"], [471, "cmdoption-with-build-python"], [471, "cmdoption-with-builtin-hashlib-hashes"], [471, "cmdoption-with-computed-gotos"], [471, "cmdoption-with-cxx-main"], [471, "cmdoption-with-dbmliborder"], [471, "cmdoption-with-dtrace"], [471, "cmdoption-with-emscripten-target"], [471, "cmdoption-with-ensurepip"], [471, "cmdoption-with-framework-name"], [471, "cmdoption-with-hash-algorithm"], [471, "cmdoption-with-libc"], [471, "cmdoption-with-libm"], [471, "cmdoption-with-libs"], [471, "cmdoption-with-lto"], [471, "cmdoption-with-memory-sanitizer"], [471, "cmdoption-with-openssl"], [471, "cmdoption-with-openssl-rpath"], [471, "cmdoption-with-pkg-config"], [471, "cmdoption-with-platlibdir"], [471, "cmdoption-with-pydebug"], [471, "cmdoption-with-readline"], [471, "cmdoption-with-ssl-default-suites"], [471, "cmdoption-with-suffix"], [471, "cmdoption-with-system-expat"], [471, "cmdoption-with-system-ffi"], [471, "cmdoption-with-system-libmpdec"], [471, "cmdoption-with-trace-refs"], [471, "cmdoption-with-tzpath"], [471, "cmdoption-with-undefined-behavior-sanitizer"], [471, "cmdoption-with-universal-archs"], [471, "cmdoption-with-valgrind"], [471, "cmdoption-with-wheel-pkg-dir"], [471, "cmdoption-without-c-locale-coercion"], [471, "cmdoption-without-decimal-contextvar"], [471, "cmdoption-without-doc-strings"], [471, "cmdoption-without-pymalloc"], [471, "cmdoption-without-readline"], [471, "cmdoption-without-static-libpython"]], "--build": [[471, "cmdoption-build"]], "--disable-ipv6": [[471, "cmdoption-disable-ipv6"]], "--disable-test-modules": [[471, "cmdoption-disable-test-modules"]], "--enable-big-digits": [[471, "cmdoption-enable-big-digits"]], "--enable-framework": [[471, "cmdoption-2"], [471, "cmdoption-enable-framework"]], "--enable-loadable-sqlite-extensions": [[471, "cmdoption-enable-loadable-sqlite-extensions"]], "--enable-optimizations": [[471, "cmdoption-enable-optimizations"]], "--enable-profiling": [[471, "cmdoption-enable-profiling"]], "--enable-pystats": [[471, "cmdoption-enable-pystats"]], "--enable-shared": [[471, "cmdoption-enable-shared"]], "--enable-universalsdk": [[471, "cmdoption-1"], [471, "cmdoption-enable-universalsdk"]], "--enable-wasm-dynamic-linking": [[471, "cmdoption-enable-wasm-dynamic-linking"]], "--enable-wasm-pthreads": [[471, "cmdoption-enable-wasm-pthreads"]], "--exec-prefix": [[471, "cmdoption-exec-prefix"]], "--host": [[471, "cmdoption-host"]], "--prefix": [[471, "cmdoption-prefix"]], "--with-address-sanitizer": [[471, "cmdoption-with-address-sanitizer"]], "--with-assertions": [[471, "cmdoption-with-assertions"]], "--with-build-python": [[471, "cmdoption-with-build-python"]], "--with-builtin-hashlib-hashes": [[471, "cmdoption-with-builtin-hashlib-hashes"]], "--with-computed-gotos": [[471, "cmdoption-with-computed-gotos"]], "--with-cxx-main": [[471, "cmdoption-0"], [471, "cmdoption-with-cxx-main"]], "--with-dbmliborder": [[471, "cmdoption-with-dbmliborder"]], "--with-dtrace": [[471, "cmdoption-with-dtrace"]], "--with-emscripten-target": [[471, "cmdoption-with-emscripten-target"]], "--with-ensurepip": [[471, "cmdoption-with-ensurepip"]], "--with-framework-name": [[471, "cmdoption-with-framework-name"]], "--with-hash-algorithm": [[471, "cmdoption-with-hash-algorithm"]], "--with-libc": [[471, "cmdoption-with-libc"]], "--with-libm": [[471, "cmdoption-with-libm"]], "--with-libs": [[471, "cmdoption-with-libs"]], "--with-lto": [[471, "cmdoption-with-lto"]], "--with-memory-sanitizer": [[471, "cmdoption-with-memory-sanitizer"]], "--with-openssl": [[471, "cmdoption-with-openssl"]], "--with-openssl-rpath": [[471, "cmdoption-with-openssl-rpath"]], "--with-pkg-config": [[471, "cmdoption-with-pkg-config"]], "--with-platlibdir": [[471, "cmdoption-with-platlibdir"]], "--with-pydebug": [[471, "cmdoption-with-pydebug"]], "--with-readline": [[471, "cmdoption-with-readline"]], "--with-ssl-default-suites": [[471, "cmdoption-with-ssl-default-suites"]], "--with-suffix": [[471, "cmdoption-with-suffix"]], "--with-system-expat": [[471, "cmdoption-with-system-expat"]], "--with-system-ffi": [[471, "cmdoption-with-system-ffi"]], "--with-system-libmpdec": [[471, "cmdoption-with-system-libmpdec"]], "--with-trace-refs": [[471, "cmdoption-with-trace-refs"]], "--with-tzpath": [[471, "cmdoption-with-tzpath"]], "--with-undefined-behavior-sanitizer": [[471, "cmdoption-with-undefined-behavior-sanitizer"]], "--with-universal-archs": [[471, "cmdoption-with-universal-archs"]], "--with-valgrind": [[471, "cmdoption-with-valgrind"]], "--with-wheel-pkg-dir": [[471, "cmdoption-with-wheel-pkg-dir"]], "--without-c-locale-coercion": [[471, "cmdoption-without-c-locale-coercion"]], "--without-decimal-contextvar": [[471, "cmdoption-without-decimal-contextvar"]], "--without-doc-strings": [[471, "cmdoption-without-doc-strings"]], "--without-pymalloc": [[471, "cmdoption-without-pymalloc"]], "--without-readline": [[471, "cmdoption-without-readline"]], "--without-static-libpython": [[471, "cmdoption-without-static-libpython"]], "basecflags": [[471, "envvar-BASECFLAGS"]], "basecppflags": [[471, "envvar-BASECPPFLAGS"]], "bldshared": [[471, "envvar-BLDSHARED"]], "cc": [[471, "envvar-CC"], [480, "index-24"]], "ccshared": [[471, "envvar-CCSHARED"]], "cflagsforshared": [[471, "envvar-CFLAGSFORSHARED"]], "cflags_aliasing": [[471, "envvar-CFLAGS_ALIASING"]], "cflags_nodist": [[471, "envvar-CFLAGS_NODIST"], [471, "index-10"], [471, "index-15"], [471, "index-20"]], "configure_cflags": [[471, "envvar-CONFIGURE_CFLAGS"]], "configure_cflags_nodist": [[471, "envvar-CONFIGURE_CFLAGS_NODIST"]], "configure_cppflags": [[471, "envvar-CONFIGURE_CPPFLAGS"]], "configure_ldflags": [[471, "envvar-CONFIGURE_LDFLAGS"]], "configure_ldflags_nodist": [[471, "envvar-CONFIGURE_LDFLAGS_NODIST"]], "config_site": [[471, "cmdoption-arg-CONFIG_SITE"]], "cppflags": [[471, "envvar-CPPFLAGS"], [471, "index-25"], [471, "index-7"], [471, "index-8"], [480, "index-27"]], "cxx": [[471, "envvar-CXX"]], "extra_cflags": [[471, "envvar-EXTRA_CFLAGS"]], "ldflags": [[471, "envvar-LDFLAGS"], [471, "index-16"], [471, "index-18"], [471, "index-21"], [471, "index-22"], [471, "index-23"], [471, "index-26"], [471, "index-9"], [480, "index-26"]], "ldflags_nodist": [[471, "envvar-LDFLAGS_NODIST"], [471, "index-19"], [471, "index-24"]], "ldshared": [[471, "envvar-LDSHARED"]], "libs": [[471, "envvar-LIBS"]], "linkcc": [[471, "envvar-LINKCC"]], "maincc": [[471, "envvar-MAINCC"]], "opt": [[471, "envvar-OPT"], [471, "index-6"]], "profile_task": [[471, "envvar-PROFILE_TASK"], [471, "index-2"]], "purify": [[471, "envvar-PURIFY"]], "py_builtin_module_cflags": [[471, "envvar-PY_BUILTIN_MODULE_CFLAGS"]], "py_cflags": [[471, "envvar-PY_CFLAGS"]], "py_cflags_nodist": [[471, "envvar-PY_CFLAGS_NODIST"]], "py_core_cflags": [[471, "envvar-PY_CORE_CFLAGS"]], "py_core_ldflags": [[471, "envvar-PY_CORE_LDFLAGS"]], "py_cppflags": [[471, "envvar-PY_CPPFLAGS"]], "py_ldflags": [[471, "envvar-PY_LDFLAGS"]], "py_ldflags_nodist": [[471, "envvar-PY_LDFLAGS_NODIST"]], "py_stdmodule_cflags": [[471, "envvar-PY_STDMODULE_CFLAGS"]], "%appdata%": [[476, "index-8"]], "pathext": [[476, "index-4"], [476, "index-6"], [491, "index-50"]], "pep 11": [[476, "index-0"], [476, "index-38"], [485, "index-19"], [488, "index-34"], [492, "index-48"], [494, "index-5"]], "pep 397": [[476, "index-19"], [490, "index-9"], [492, "index-22"]], "pep 514": [[476, "index-21"], [488, "index-10"]], "pylauncher_allow_install": [[476, "index-29"]], "pylauncher_always_install": [[476, "index-30"]], "pylauncher_debug": [[476, "index-27"]], "pylauncher_dryrun": [[476, "index-28"], [476, "index-31"]], "pylauncher_no_search_path": [[476, "index-24"]], "py_python": [[476, "index-26"]], "pep 100": [[477, "index-3"]], "pep 201": [[477, "index-2"]], "pep 207": [[478, "index-4"], [478, "index-5"]], "pep 208": [[478, "index-13"]], "pep 217": [[478, "index-12"]], "pep 229": [[478, "index-8"]], "pep 230": [[478, "index-7"]], "pep 232": [[478, "index-10"]], "pep 241": [[478, "index-14"], [478, "index-15"], [478, "index-16"]], "pep 243": [[478, "index-17"]], "pep 234": [[479, "index-7"]], "pep 253": [[479, "index-0"], [479, "index-1"], [479, "index-3"], [479, "index-5"], [479, "index-6"]], "pep 261": [[479, "index-14"], [479, "index-15"]], "pep 264": [[479, "index-22"]], "rfc 2487": [[479, "index-18"]], "pep 218": [[480, "index-0"], [481, "index-0"], [481, "index-13"]], "pep 277": [[480, "index-7"]], "pep 279": [[480, "index-10"]], "pep 285": [[480, "index-13"], [480, "index-14"]], "pep 293": [[480, "index-15"]], "what's new": [[480, "index-8"], [481, "index-7"], [482, "index-20"], [483, "index-13"]], "pep 322": [[481, "index-14"], [481, "index-6"]], "pep 327": [[481, "index-9"]], "pep 331": [[481, "index-11"]], "pep 288": [[482, "index-12"]], "pep 309": [[482, "index-3"]], "pep 325": [[482, "index-13"]], "pep 333": [[482, "index-26"], [482, "index-27"]], "pep 339": [[482, "index-30"]], "pep 341": [[482, "index-8"]], "pep 347": [[482, "index-28"]], "pep 352": [[482, "index-15"], [483, "index-25"], [485, "index-25"]], "pep 356": [[482, "index-0"]], "pep 357": [[482, "index-18"]], "appdata": [[483, "index-5"]], "pep 3000": [[483, "index-1"]], "pep 3100": [[483, "index-2"]], "pep 3110": [[483, "index-11"], [485, "index-13"], [485, "index-27"]], "pep 3127": [[483, "index-17"]], "pep 361": [[483, "index-0"]], "pep 371": [[483, "index-8"]], "rfc 2033": [[483, "index-22"]], "rfc 3207": [[483, "index-23"]], "ldcxxshared": [[484, "index-11"]], "pep 3106": [[484, "index-6"]], "pep 3137": [[484, "index-7"]], "pep 372": [[484, "index-2"], [486, "index-0"]], "pep 389": [[484, "index-4"], [489, "index-2"]], "pep 391": [[484, "index-5"], [489, "index-3"]], "pep 466": [[484, "index-14"], [484, "index-15"], [484, "index-16"], [484, "index-17"]], "pep 476": [[484, "index-22"]], "pep 477": [[484, "index-18"]], "pep 493": [[484, "index-23"]], "pep 274": [[485, "index-10"]], "pep 3102": [[485, "index-7"]], "pep 3108": [[485, "index-17"], [485, "index-20"], [485, "index-22"]], "pep 3109": [[485, "index-11"], [485, "index-26"]], "pep 3111": [[485, "index-32"]], "pep 3113": [[485, "index-15"]], "pep 3114": [[485, "index-30"]], "pep 3123": [[485, "index-35"]], "pep 3138": [[485, "index-3"]], "pep 4": [[485, "index-18"]], "pep 384": [[487, "index-40"], [489, "index-1"]], "pep 618": [[487, "index-26"], [487, "index-3"]], "pep 624": [[487, "index-12"], [488, "index-3"], [488, "index-40"]], "pep 632": [[487, "index-10"], [487, "index-28"]], "pep 635": [[487, "index-1"], [487, "index-16"]], "pep 652": [[487, "index-37"]], "pep 11#tier-3": [[488, "index-35"]], "pep 484#annotating-instance-and-class-methods": [[488, "index-16"]], "pep 624#alternative-apis": [[488, "index-41"]], "pep 654": [[488, "index-30"], [488, "index-7"], [488, "index-8"]], "pep 657": [[488, "index-27"], [488, "index-5"]], "pep 659": [[488, "index-28"], [488, "index-29"]], "pep 670": [[488, "index-36"], [488, "index-4"]], "pep 678": [[488, "index-9"]], "pep 680": [[488, "index-0"], [488, "index-24"]], "pep 385": [[489, "index-14"]], "pep 392": [[489, "index-0"]], "pep 3144": [[490, "index-25"]], "pep 398": [[490, "index-0"]], "pep 409": [[490, "index-13"]], "pep 418": [[490, "index-28"]], "yield from (in what's new)": [[490, "index-11"]], "pep 247": [[491, "index-37"]], "pep 3156": [[491, "index-25"], [491, "index-26"], [491, "index-31"], [491, "index-4"], [491, "index-8"]], "pep 424": [[491, "index-24"], [491, "index-38"]], "pep 429": [[491, "index-0"]], "pep 435": [[491, "index-28"], [491, "index-29"], [491, "index-6"]], "pep 436": [[491, "index-18"], [491, "index-48"], [491, "index-49"]], "pep 445": [[491, "index-17"], [491, "index-43"], [491, "index-44"], [491, "index-51"]], "pep 446": [[491, "index-14"], [491, "index-2"], [491, "index-21"], [491, "index-22"]], "pep 450": [[491, "index-32"], [491, "index-33"], [491, "index-9"]], "pep 454": [[491, "index-10"], [491, "index-34"], [491, "index-35"]], "pep 441": [[492, "index-29"], [492, "index-30"]], "pep 465": [[492, "index-3"], [492, "index-4"], [492, "index-46"]], "pep 471": [[492, "index-13"], [492, "index-14"]], "pep 478": [[492, "index-0"]], "pep 486": [[492, "index-21"], [492, "index-23"]], "pep 487": [[493, "index-13"], [493, "index-14"], [493, "index-15"], [493, "index-37"]], "pep 494": [[493, "index-0"]], "pep 511": [[493, "index-36"]], "pep 520": [[493, "index-23"]], "pep 628": [[493, "index-29"], [493, "index-30"]], "pep 545": [[494, "index-24"], [494, "index-25"]], "pep 553": [[494, "index-13"]], "pep 564": [[494, "index-17"], [494, "index-18"], [494, "index-32"]], "pep 573": [[496, "index-23"], [496, "index-6"]], "pep 596": [[496, "index-0"]], "pep 616": [[496, "index-12"], [496, "index-4"]]}})